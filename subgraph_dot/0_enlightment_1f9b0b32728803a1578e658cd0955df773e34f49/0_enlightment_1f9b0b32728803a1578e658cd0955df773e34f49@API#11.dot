digraph "0_enlightment_1f9b0b32728803a1578e658cd0955df773e34f49@API" {
"1000253" [label="(Call,rows = calloc(h, sizeof(GifRowType *)))"];
"1000255" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000249" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000233" [label="(Call,w = gif->Image.Width)"];
"1000240" [label="(Call,h = gif->Image.Height)"];
"1000260" [label="(Call,!rows)"];
"1000283" [label="(Call,!rows[i])"];
"1000322" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000206" [label="(Call,DGifGetRecordType(gif, &rec))"];
"1000205" [label="(Call,DGifGetRecordType(gif, &rec) == GIF_ERROR)"];
"1000224" [label="(Call,DGifGetImageDesc(gif) == GIF_ERROR)"];
"1000321" [label="(Call,DGifGetLine(gif, rows[i], w) == GIF_ERROR)"];
"1000344" [label="(Call,DGifGetLine(gif, rows[i], w) == GIF_ERROR)"];
"1000225" [label="(Call,DGifGetImageDesc(gif))"];
"1000345" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000427" [label="(Call,!rows)"];
"1000715" [label="(Call,free(rows[i]))"];
"1000719" [label="(Call,free(rows))"];
"1000477" [label="(Call,w * h)"];
"1000474" [label="(Call,sizeof(DATA32) * w * h)"];
"1000473" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000471" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000467" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000481" [label="(Call,!im->data)"];
"1000490" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000505" [label="(Call,ptr = im->data)"];
"1000577" [label="(Call,ptr++)"];
"1000633" [label="(Call,ptr++)"];
"1000498" [label="(Call,w * h)"];
"1000495" [label="(Call,sizeof(DATA32) * w * h)"];
"1000695" [label="(Call,progress(im, 100, 0, last_y, w, h))"];
"1000710" [label="(Call,i < h)"];
"1000713" [label="(Call,i++)"];
"1000515" [label="(Call,(float)w)"];
"1000514" [label="(Call,((float)w) * h)"];
"1000512" [label="(Call,100.0 / (((float)w) * h))"];
"1000510" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000648" [label="(Call,per += per_inc)"];
"1000656" [label="(Call,(int)per)"];
"1000655" [label="(Call,((int)per) != last_per)"];
"1000654" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000652" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000662" [label="(Call,(int)per)"];
"1000661" [label="(Call,((int)per) % progress_granularity)"];
"1000660" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000670" [label="(Call,(int)per)"];
"1000668" [label="(Call,last_per = (int)per)"];
"1000677" [label="(Call,(int)per)"];
"1000675" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000526" [label="(Call,i++)"];
"1000523" [label="(Call,i < h)"];
"1000533" [label="(Call,j < w)"];
"1000536" [label="(Call,j++)"];
"1000674" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000689" [label="(Call,last_y = i)"];
"1000722" [label="(Call,DGifCloseFile(gif, NULL))"];
"1000368" [label="(Call,DGifGetExtension(gif, &ext_code, &ext))"];
"1000402" [label="(Call,DGifGetExtensionNext(gif, &ext))"];
"1000249" [label="(Call,IMAGE_DIMENSIONS_OK(w, h))"];
"1000711" [label="(Identifier,i)"];
"1000494" [label="(Literal,0)"];
"1000265" [label="(Identifier,i)"];
"1000519" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000723" [label="(Identifier,gif)"];
"1000482" [label="(Call,im->data)"];
"1000667" [label="(Block,)"];
"1000715" [label="(Call,free(rows[i]))"];
"1000699" [label="(Identifier,last_y)"];
"1000681" [label="(Identifier,last_y)"];
"1000515" [label="(Call,(float)w)"];
"1000477" [label="(Call,w * h)"];
"1000672" [label="(Identifier,per)"];
"1000235" [label="(Call,gif->Image.Width)"];
"1000114" [label="(Block,)"];
"1000533" [label="(Call,j < w)"];
"1000375" [label="(Identifier,ext)"];
"1000402" [label="(Call,DGifGetExtensionNext(gif, &ext))"];
"1000475" [label="(Call,sizeof(DATA32))"];
"1000661" [label="(Call,((int)per) % progress_granularity)"];
"1000526" [label="(Call,i++)"];
"1000506" [label="(Identifier,ptr)"];
"1000680" [label="(Literal,0)"];
"1000686" [label="(Identifier,rc)"];
"1000207" [label="(Identifier,gif)"];
"1000362" [label="(Block,)"];
"1000514" [label="(Call,((float)w) * h)"];
"1000230" [label="(Identifier,rec)"];
"1000500" [label="(Identifier,h)"];
"1000376" [label="(Block,)"];
"1000254" [label="(Identifier,rows)"];
"1000495" [label="(Call,sizeof(DATA32) * w * h)"];
"1000691" [label="(Identifier,i)"];
"1000345" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000404" [label="(Call,&ext)"];
"1000485" [label="(ControlStructure,goto quit;)"];
"1000675" [label="(Call,progress(im, (int)per, 0, last_y, w, i))"];
"1000577" [label="(Call,ptr++)"];
"1000505" [label="(Call,ptr = im->data)"];
"1000713" [label="(Call,i++)"];
"1000218" [label="(Identifier,rec)"];
"1000403" [label="(Identifier,gif)"];
"1000271" [label="(Identifier,i)"];
"1000330" [label="(ControlStructure,break;)"];
"1000491" [label="(Call,im->data)"];
"1000139" [label="(Call,h = 0)"];
"1000712" [label="(Identifier,h)"];
"1000658" [label="(Identifier,per)"];
"1000517" [label="(Identifier,w)"];
"1000703" [label="(Identifier,rc)"];
"1000632" [label="(Call,*ptr++)"];
"1000188" [label="(Call,DGifOpenFileHandle(fd, NULL))"];
"1000433" [label="(Identifier,im)"];
"1000726" [label="(Identifier,rc)"];
"1000226" [label="(Identifier,gif)"];
"1000206" [label="(Call,DGifGetRecordType(gif, &rec))"];
"1000479" [label="(Identifier,h)"];
"1000683" [label="(Identifier,i)"];
"1000502" [label="(Identifier,rc)"];
"1000650" [label="(Identifier,per_inc)"];
"1000530" [label="(Call,j = 0)"];
"1000666" [label="(Literal,0)"];
"1000513" [label="(Literal,100.0)"];
"1000204" [label="(ControlStructure,if (DGifGetRecordType(gif, &rec) == GIF_ERROR))"];
"1000634" [label="(Identifier,ptr)"];
"1000478" [label="(Identifier,w)"];
"1000498" [label="(Call,w * h)"];
"1000205" [label="(Call,DGifGetRecordType(gif, &rec) == GIF_ERROR)"];
"1000253" [label="(Call,rows = calloc(h, sizeof(GifRowType *)))"];
"1000256" [label="(Identifier,h)"];
"1000311" [label="(Call,j < h)"];
"1000716" [label="(Call,rows[i])"];
"1000255" [label="(Call,calloc(h, sizeof(GifRowType *)))"];
"1000323" [label="(Identifier,gif)"];
"1000677" [label="(Call,(int)per)"];
"1000428" [label="(Identifier,rows)"];
"1000346" [label="(Identifier,gif)"];
"1000531" [label="(Identifier,j)"];
"1000536" [label="(Call,j++)"];
"1000322" [label="(Call,DGifGetLine(gif, rows[i], w))"];
"1000483" [label="(Identifier,im)"];
"1000370" [label="(Call,&ext_code)"];
"1000112" [label="(MethodParameterIn,char progress_granularity)"];
"1000227" [label="(Identifier,GIF_ERROR)"];
"1000224" [label="(Call,DGifGetImageDesc(gif) == GIF_ERROR)"];
"1000222" [label="(Block,)"];
"1000259" [label="(ControlStructure,if (!rows))"];
"1000481" [label="(Call,!im->data)"];
"1000344" [label="(Call,DGifGetLine(gif, rows[i], w) == GIF_ERROR)"];
"1000353" [label="(ControlStructure,break;)"];
"1000499" [label="(Identifier,w)"];
"1000633" [label="(Call,ptr++)"];
"1000697" [label="(Literal,100)"];
"1000535" [label="(Identifier,w)"];
"1000669" [label="(Identifier,last_per)"];
"1000674" [label="(Call,!(progress(im, (int)per, 0, last_y, w, i)))"];
"1000234" [label="(Identifier,w)"];
"1000682" [label="(Identifier,w)"];
"1000351" [label="(Identifier,GIF_ERROR)"];
"1000719" [label="(Call,free(rows))"];
"1000160" [label="(Call,rows = NULL)"];
"1000143" [label="(Call,per = 0.0)"];
"1000521" [label="(Identifier,i)"];
"1000430" [label="(ControlStructure,goto quit2;)"];
"1000474" [label="(Call,sizeof(DATA32) * w * h)"];
"1000710" [label="(Call,i < h)"];
"1000659" [label="(Identifier,last_per)"];
"1000488" [label="(Identifier,cmap)"];
"1000695" [label="(Call,progress(im, 100, 0, last_y, w, h))"];
"1000664" [label="(Identifier,per)"];
"1000324" [label="(Call,rows[i])"];
"1000529" [label="(ControlStructure,for (j = 0; j < w; j++))"];
"1000507" [label="(Call,im->data)"];
"1000368" [label="(Call,DGifGetExtension(gif, &ext_code, &ext))"];
"1000690" [label="(Identifier,last_y)"];
"1000315" [label="(Identifier,j)"];
"1000110" [label="(MethodParameterIn,ImlibImage * im)"];
"1000537" [label="(Identifier,j)"];
"1000722" [label="(Call,DGifCloseFile(gif, NULL))"];
"1000696" [label="(Identifier,im)"];
"1000692" [label="(JumpTarget,finish:)"];
"1000578" [label="(Identifier,ptr)"];
"1000426" [label="(ControlStructure,if (!rows))"];
"1000240" [label="(Call,h = gif->Image.Height)"];
"1000511" [label="(Identifier,per_inc)"];
"1000328" [label="(Identifier,GIF_ERROR)"];
"1000520" [label="(Call,i = 0)"];
"1000701" [label="(Identifier,h)"];
"1000208" [label="(Call,&rec)"];
"1000320" [label="(ControlStructure,if (DGifGetLine(gif, rows[i], w) == GIF_ERROR))"];
"1000724" [label="(Identifier,NULL)"];
"1000257" [label="(Call,sizeof(GifRowType *))"];
"1000241" [label="(Identifier,h)"];
"1000510" [label="(Call,per_inc = 100.0 / (((float)w) * h))"];
"1000489" [label="(Block,)"];
"1000721" [label="(JumpTarget,quit2:)"];
"1000192" [label="(Call,!gif)"];
"1000656" [label="(Call,(int)per)"];
"1000210" [label="(Identifier,GIF_ERROR)"];
"1000670" [label="(Call,(int)per)"];
"1000660" [label="(Call,((int)per) % progress_granularity == 0)"];
"1000673" [label="(ControlStructure,if (!(progress(im, (int)per, 0, last_y, w, i))))"];
"1000442" [label="(Call,immediate_load || progress)"];
"1000576" [label="(Call,*ptr++)"];
"1000233" [label="(Call,w = gif->Image.Width)"];
"1000717" [label="(Identifier,rows)"];
"1000689" [label="(Call,last_y = i)"];
"1000706" [label="(ControlStructure,for (i = 0; i < h; i++))"];
"1000720" [label="(Identifier,rows)"];
"1000248" [label="(Call,!IMAGE_DIMENSIONS_OK(w, h))"];
"1000468" [label="(Call,im->data)"];
"1000700" [label="(Identifier,w)"];
"1000327" [label="(Identifier,w)"];
"1000496" [label="(Call,sizeof(DATA32))"];
"1000343" [label="(ControlStructure,if (DGifGetLine(gif, rows[i], w) == GIF_ERROR))"];
"1000648" [label="(Call,per += per_inc)"];
"1000471" [label="(Call,(DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000111" [label="(MethodParameterIn,ImlibProgressFunction progress)"];
"1000283" [label="(Call,!rows[i])"];
"1000727" [label="(MethodReturn,RET)"];
"1000652" [label="(Call,progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000655" [label="(Call,((int)per) != last_per)"];
"1000267" [label="(Call,i < h)"];
"1000223" [label="(ControlStructure,if (DGifGetImageDesc(gif) == GIF_ERROR))"];
"1000654" [label="(Call,(((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0))"];
"1000278" [label="(Call,w * sizeof(GifPixelType))"];
"1000242" [label="(Call,gif->Image.Height)"];
"1000347" [label="(Call,rows[i])"];
"1000251" [label="(Identifier,h)"];
"1000525" [label="(Identifier,h)"];
"1000225" [label="(Call,DGifGetImageDesc(gif))"];
"1000714" [label="(Identifier,i)"];
"1000693" [label="(ControlStructure,if (progress))"];
"1000649" [label="(Identifier,per)"];
"1000369" [label="(Identifier,gif)"];
"1000284" [label="(Call,rows[i])"];
"1000213" [label="(Identifier,rec)"];
"1000512" [label="(Call,100.0 / (((float)w) * h))"];
"1000651" [label="(ControlStructure,if (progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)))"];
"1000534" [label="(Identifier,j)"];
"1000135" [label="(Call,w = 0)"];
"1000480" [label="(ControlStructure,if (!im->data))"];
"1000668" [label="(Call,last_per = (int)per)"];
"1000662" [label="(Call,(int)per)"];
"1000527" [label="(Identifier,i)"];
"1000260" [label="(Call,!rows)"];
"1000427" [label="(Call,!rows)"];
"1000262" [label="(ControlStructure,goto quit2;)"];
"1000152" [label="(Call,last_y = 0)"];
"1000707" [label="(Call,i = 0)"];
"1000679" [label="(Identifier,per)"];
"1000540" [label="(Call,rows[i][j] == transp)"];
"1000282" [label="(ControlStructure,if (!rows[i]))"];
"1000287" [label="(ControlStructure,goto quit;)"];
"1000524" [label="(Identifier,i)"];
"1000350" [label="(Identifier,w)"];
"1000467" [label="(Call,im->data = (DATA32 *) malloc(sizeof(DATA32) * w * h))"];
"1000698" [label="(Literal,0)"];
"1000676" [label="(Identifier,im)"];
"1000273" [label="(Call,rows[i] = malloc(w * sizeof(GifPixelType)))"];
"1000445" [label="(Block,)"];
"1000337" [label="(Call,i < h)"];
"1000538" [label="(Block,)"];
"1000261" [label="(Identifier,rows)"];
"1000321" [label="(Call,DGifGetLine(gif, rows[i], w) == GIF_ERROR)"];
"1000341" [label="(Identifier,i)"];
"1000665" [label="(Identifier,progress_granularity)"];
"1000543" [label="(Identifier,rows)"];
"1000518" [label="(Identifier,h)"];
"1000372" [label="(Call,&ext)"];
"1000250" [label="(Identifier,w)"];
"1000523" [label="(Call,i < h)"];
"1000148" [label="(Call,last_per = 0)"];
"1000473" [label="(Call,malloc(sizeof(DATA32) * w * h))"];
"1000653" [label="(Identifier,progress)"];
"1000490" [label="(Call,memset(im->data, 0, sizeof(DATA32) * w * h))"];
"1000253" -> "1000222"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000261" -> "1000253"  [label="CFG: "];
"1000253" -> "1000727"  [label="DDG: calloc(h, sizeof(GifRowType *))"];
"1000255" -> "1000253"  [label="DDG: h"];
"1000253" -> "1000260"  [label="DDG: rows"];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000255" -> "1000727"  [label="DDG: h"];
"1000249" -> "1000255"  [label="DDG: h"];
"1000255" -> "1000267"  [label="DDG: h"];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000727"  [label="DDG: h"];
"1000249" -> "1000727"  [label="DDG: w"];
"1000249" -> "1000248"  [label="DDG: w"];
"1000249" -> "1000248"  [label="DDG: h"];
"1000233" -> "1000249"  [label="DDG: w"];
"1000240" -> "1000249"  [label="DDG: h"];
"1000249" -> "1000278"  [label="DDG: w"];
"1000249" -> "1000322"  [label="DDG: w"];
"1000249" -> "1000345"  [label="DDG: w"];
"1000249" -> "1000477"  [label="DDG: w"];
"1000233" -> "1000222"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000241" -> "1000233"  [label="CFG: "];
"1000233" -> "1000727"  [label="DDG: gif->Image.Width"];
"1000240" -> "1000222"  [label="AST: "];
"1000240" -> "1000242"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000242" -> "1000240"  [label="AST: "];
"1000250" -> "1000240"  [label="CFG: "];
"1000240" -> "1000727"  [label="DDG: gif->Image.Height"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="CFG: "];
"1000265" -> "1000260"  [label="CFG: "];
"1000260" -> "1000727"  [label="DDG: !rows"];
"1000260" -> "1000727"  [label="DDG: rows"];
"1000283" -> "1000260"  [label="DDG: rows[i]"];
"1000345" -> "1000260"  [label="DDG: rows[i]"];
"1000322" -> "1000260"  [label="DDG: rows[i]"];
"1000260" -> "1000283"  [label="DDG: rows"];
"1000260" -> "1000322"  [label="DDG: rows"];
"1000260" -> "1000345"  [label="DDG: rows"];
"1000260" -> "1000427"  [label="DDG: rows"];
"1000260" -> "1000715"  [label="DDG: rows"];
"1000260" -> "1000719"  [label="DDG: rows"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000271" -> "1000283"  [label="CFG: "];
"1000283" -> "1000727"  [label="DDG: rows[i]"];
"1000283" -> "1000727"  [label="DDG: !rows[i]"];
"1000273" -> "1000283"  [label="DDG: rows[i]"];
"1000283" -> "1000322"  [label="DDG: rows[i]"];
"1000283" -> "1000345"  [label="DDG: rows[i]"];
"1000283" -> "1000427"  [label="DDG: rows[i]"];
"1000283" -> "1000715"  [label="DDG: rows[i]"];
"1000283" -> "1000719"  [label="DDG: rows[i]"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000327"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000327" -> "1000322"  [label="AST: "];
"1000328" -> "1000322"  [label="CFG: "];
"1000322" -> "1000727"  [label="DDG: rows[i]"];
"1000322" -> "1000727"  [label="DDG: w"];
"1000322" -> "1000206"  [label="DDG: gif"];
"1000322" -> "1000321"  [label="DDG: gif"];
"1000322" -> "1000321"  [label="DDG: rows[i]"];
"1000322" -> "1000321"  [label="DDG: w"];
"1000225" -> "1000322"  [label="DDG: gif"];
"1000345" -> "1000322"  [label="DDG: rows[i]"];
"1000278" -> "1000322"  [label="DDG: w"];
"1000322" -> "1000345"  [label="DDG: rows[i]"];
"1000322" -> "1000427"  [label="DDG: rows[i]"];
"1000322" -> "1000477"  [label="DDG: w"];
"1000322" -> "1000715"  [label="DDG: rows[i]"];
"1000322" -> "1000719"  [label="DDG: rows[i]"];
"1000322" -> "1000722"  [label="DDG: gif"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000727"  [label="DDG: &rec"];
"1000206" -> "1000205"  [label="DDG: gif"];
"1000206" -> "1000205"  [label="DDG: &rec"];
"1000368" -> "1000206"  [label="DDG: gif"];
"1000225" -> "1000206"  [label="DDG: gif"];
"1000402" -> "1000206"  [label="DDG: gif"];
"1000192" -> "1000206"  [label="DDG: gif"];
"1000345" -> "1000206"  [label="DDG: gif"];
"1000206" -> "1000225"  [label="DDG: gif"];
"1000206" -> "1000368"  [label="DDG: gif"];
"1000206" -> "1000722"  [label="DDG: gif"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000210"  [label="CFG: "];
"1000210" -> "1000205"  [label="AST: "];
"1000213" -> "1000205"  [label="CFG: "];
"1000218" -> "1000205"  [label="CFG: "];
"1000205" -> "1000727"  [label="DDG: GIF_ERROR"];
"1000205" -> "1000727"  [label="DDG: DGifGetRecordType(gif, &rec)"];
"1000205" -> "1000727"  [label="DDG: DGifGetRecordType(gif, &rec) == GIF_ERROR"];
"1000224" -> "1000205"  [label="DDG: GIF_ERROR"];
"1000344" -> "1000205"  [label="DDG: GIF_ERROR"];
"1000321" -> "1000205"  [label="DDG: GIF_ERROR"];
"1000205" -> "1000224"  [label="DDG: GIF_ERROR"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000227"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000227" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000234" -> "1000224"  [label="CFG: "];
"1000224" -> "1000727"  [label="DDG: DGifGetImageDesc(gif)"];
"1000224" -> "1000727"  [label="DDG: GIF_ERROR"];
"1000224" -> "1000727"  [label="DDG: DGifGetImageDesc(gif) == GIF_ERROR"];
"1000225" -> "1000224"  [label="DDG: gif"];
"1000224" -> "1000321"  [label="DDG: GIF_ERROR"];
"1000224" -> "1000344"  [label="DDG: GIF_ERROR"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000328"  [label="CFG: "];
"1000328" -> "1000321"  [label="AST: "];
"1000330" -> "1000321"  [label="CFG: "];
"1000315" -> "1000321"  [label="CFG: "];
"1000321" -> "1000727"  [label="DDG: GIF_ERROR"];
"1000321" -> "1000727"  [label="DDG: DGifGetLine(gif, rows[i], w)"];
"1000321" -> "1000727"  [label="DDG: DGifGetLine(gif, rows[i], w) == GIF_ERROR"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000351"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000351" -> "1000344"  [label="AST: "];
"1000353" -> "1000344"  [label="CFG: "];
"1000341" -> "1000344"  [label="CFG: "];
"1000344" -> "1000727"  [label="DDG: DGifGetLine(gif, rows[i], w) == GIF_ERROR"];
"1000344" -> "1000727"  [label="DDG: GIF_ERROR"];
"1000344" -> "1000727"  [label="DDG: DGifGetLine(gif, rows[i], w)"];
"1000345" -> "1000344"  [label="DDG: gif"];
"1000345" -> "1000344"  [label="DDG: rows[i]"];
"1000345" -> "1000344"  [label="DDG: w"];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="CFG: "];
"1000225" -> "1000345"  [label="DDG: gif"];
"1000225" -> "1000722"  [label="DDG: gif"];
"1000345" -> "1000350"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000350" -> "1000345"  [label="AST: "];
"1000351" -> "1000345"  [label="CFG: "];
"1000345" -> "1000727"  [label="DDG: rows[i]"];
"1000345" -> "1000727"  [label="DDG: w"];
"1000278" -> "1000345"  [label="DDG: w"];
"1000345" -> "1000427"  [label="DDG: rows[i]"];
"1000345" -> "1000477"  [label="DDG: w"];
"1000345" -> "1000715"  [label="DDG: rows[i]"];
"1000345" -> "1000719"  [label="DDG: rows[i]"];
"1000345" -> "1000722"  [label="DDG: gif"];
"1000427" -> "1000426"  [label="AST: "];
"1000427" -> "1000428"  [label="CFG: "];
"1000428" -> "1000427"  [label="AST: "];
"1000430" -> "1000427"  [label="CFG: "];
"1000433" -> "1000427"  [label="CFG: "];
"1000427" -> "1000727"  [label="DDG: rows"];
"1000427" -> "1000727"  [label="DDG: !rows"];
"1000160" -> "1000427"  [label="DDG: rows"];
"1000427" -> "1000715"  [label="DDG: rows"];
"1000427" -> "1000719"  [label="DDG: rows"];
"1000715" -> "1000706"  [label="AST: "];
"1000715" -> "1000716"  [label="CFG: "];
"1000716" -> "1000715"  [label="AST: "];
"1000714" -> "1000715"  [label="CFG: "];
"1000715" -> "1000727"  [label="DDG: rows[i]"];
"1000540" -> "1000715"  [label="DDG: rows[i][j]"];
"1000715" -> "1000719"  [label="DDG: rows[i]"];
"1000719" -> "1000114"  [label="AST: "];
"1000719" -> "1000720"  [label="CFG: "];
"1000720" -> "1000719"  [label="AST: "];
"1000721" -> "1000719"  [label="CFG: "];
"1000719" -> "1000727"  [label="DDG: rows"];
"1000477" -> "1000474"  [label="AST: "];
"1000477" -> "1000479"  [label="CFG: "];
"1000478" -> "1000477"  [label="AST: "];
"1000479" -> "1000477"  [label="AST: "];
"1000474" -> "1000477"  [label="CFG: "];
"1000477" -> "1000727"  [label="DDG: w"];
"1000477" -> "1000474"  [label="DDG: w"];
"1000477" -> "1000474"  [label="DDG: h"];
"1000135" -> "1000477"  [label="DDG: w"];
"1000278" -> "1000477"  [label="DDG: w"];
"1000337" -> "1000477"  [label="DDG: h"];
"1000311" -> "1000477"  [label="DDG: h"];
"1000267" -> "1000477"  [label="DDG: h"];
"1000139" -> "1000477"  [label="DDG: h"];
"1000477" -> "1000498"  [label="DDG: w"];
"1000477" -> "1000498"  [label="DDG: h"];
"1000477" -> "1000515"  [label="DDG: w"];
"1000477" -> "1000514"  [label="DDG: h"];
"1000477" -> "1000710"  [label="DDG: h"];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000474"  [label="AST: "];
"1000473" -> "1000474"  [label="CFG: "];
"1000474" -> "1000727"  [label="DDG: w * h"];
"1000474" -> "1000473"  [label="DDG: w * h"];
"1000473" -> "1000471"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000473" -> "1000727"  [label="DDG: sizeof(DATA32) * w * h"];
"1000473" -> "1000471"  [label="DDG: sizeof(DATA32) * w * h"];
"1000471" -> "1000467"  [label="AST: "];
"1000472" -> "1000471"  [label="AST: "];
"1000467" -> "1000471"  [label="CFG: "];
"1000471" -> "1000727"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000471" -> "1000467"  [label="DDG: malloc(sizeof(DATA32) * w * h)"];
"1000467" -> "1000445"  [label="AST: "];
"1000468" -> "1000467"  [label="AST: "];
"1000483" -> "1000467"  [label="CFG: "];
"1000467" -> "1000727"  [label="DDG: (DATA32 *) malloc(sizeof(DATA32) * w * h)"];
"1000467" -> "1000481"  [label="DDG: im->data"];
"1000481" -> "1000480"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000485" -> "1000481"  [label="CFG: "];
"1000488" -> "1000481"  [label="CFG: "];
"1000481" -> "1000727"  [label="DDG: !im->data"];
"1000481" -> "1000727"  [label="DDG: im->data"];
"1000481" -> "1000490"  [label="DDG: im->data"];
"1000481" -> "1000505"  [label="DDG: im->data"];
"1000490" -> "1000489"  [label="AST: "];
"1000490" -> "1000495"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000494" -> "1000490"  [label="AST: "];
"1000495" -> "1000490"  [label="AST: "];
"1000502" -> "1000490"  [label="CFG: "];
"1000490" -> "1000727"  [label="DDG: sizeof(DATA32) * w * h"];
"1000490" -> "1000727"  [label="DDG: im->data"];
"1000490" -> "1000727"  [label="DDG: memset(im->data, 0, sizeof(DATA32) * w * h)"];
"1000495" -> "1000490"  [label="DDG: w * h"];
"1000505" -> "1000445"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000511" -> "1000505"  [label="CFG: "];
"1000505" -> "1000727"  [label="DDG: ptr"];
"1000505" -> "1000727"  [label="DDG: im->data"];
"1000505" -> "1000577"  [label="DDG: ptr"];
"1000505" -> "1000633"  [label="DDG: ptr"];
"1000577" -> "1000576"  [label="AST: "];
"1000577" -> "1000578"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000576" -> "1000577"  [label="CFG: "];
"1000577" -> "1000727"  [label="DDG: ptr"];
"1000633" -> "1000577"  [label="DDG: ptr"];
"1000577" -> "1000633"  [label="DDG: ptr"];
"1000633" -> "1000632"  [label="AST: "];
"1000633" -> "1000634"  [label="CFG: "];
"1000634" -> "1000633"  [label="AST: "];
"1000632" -> "1000633"  [label="CFG: "];
"1000633" -> "1000727"  [label="DDG: ptr"];
"1000498" -> "1000495"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000500" -> "1000498"  [label="AST: "];
"1000495" -> "1000498"  [label="CFG: "];
"1000498" -> "1000727"  [label="DDG: w"];
"1000498" -> "1000495"  [label="DDG: w"];
"1000498" -> "1000495"  [label="DDG: h"];
"1000498" -> "1000695"  [label="DDG: w"];
"1000498" -> "1000695"  [label="DDG: h"];
"1000498" -> "1000710"  [label="DDG: h"];
"1000496" -> "1000495"  [label="AST: "];
"1000495" -> "1000727"  [label="DDG: w * h"];
"1000695" -> "1000693"  [label="AST: "];
"1000695" -> "1000701"  [label="CFG: "];
"1000696" -> "1000695"  [label="AST: "];
"1000697" -> "1000695"  [label="AST: "];
"1000698" -> "1000695"  [label="AST: "];
"1000699" -> "1000695"  [label="AST: "];
"1000700" -> "1000695"  [label="AST: "];
"1000701" -> "1000695"  [label="AST: "];
"1000703" -> "1000695"  [label="CFG: "];
"1000695" -> "1000727"  [label="DDG: w"];
"1000695" -> "1000727"  [label="DDG: progress(im, 100, 0, last_y, w, h)"];
"1000695" -> "1000727"  [label="DDG: im"];
"1000695" -> "1000727"  [label="DDG: last_y"];
"1000675" -> "1000695"  [label="DDG: im"];
"1000110" -> "1000695"  [label="DDG: im"];
"1000689" -> "1000695"  [label="DDG: last_y"];
"1000152" -> "1000695"  [label="DDG: last_y"];
"1000533" -> "1000695"  [label="DDG: w"];
"1000515" -> "1000695"  [label="DDG: w"];
"1000523" -> "1000695"  [label="DDG: h"];
"1000695" -> "1000710"  [label="DDG: h"];
"1000710" -> "1000706"  [label="AST: "];
"1000710" -> "1000712"  [label="CFG: "];
"1000711" -> "1000710"  [label="AST: "];
"1000712" -> "1000710"  [label="AST: "];
"1000717" -> "1000710"  [label="CFG: "];
"1000720" -> "1000710"  [label="CFG: "];
"1000710" -> "1000727"  [label="DDG: i"];
"1000710" -> "1000727"  [label="DDG: h"];
"1000710" -> "1000727"  [label="DDG: i < h"];
"1000713" -> "1000710"  [label="DDG: i"];
"1000707" -> "1000710"  [label="DDG: i"];
"1000311" -> "1000710"  [label="DDG: h"];
"1000337" -> "1000710"  [label="DDG: h"];
"1000523" -> "1000710"  [label="DDG: h"];
"1000267" -> "1000710"  [label="DDG: h"];
"1000139" -> "1000710"  [label="DDG: h"];
"1000710" -> "1000713"  [label="DDG: i"];
"1000713" -> "1000706"  [label="AST: "];
"1000713" -> "1000714"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1000711" -> "1000713"  [label="CFG: "];
"1000515" -> "1000514"  [label="AST: "];
"1000515" -> "1000517"  [label="CFG: "];
"1000516" -> "1000515"  [label="AST: "];
"1000517" -> "1000515"  [label="AST: "];
"1000518" -> "1000515"  [label="CFG: "];
"1000515" -> "1000727"  [label="DDG: w"];
"1000515" -> "1000514"  [label="DDG: w"];
"1000515" -> "1000533"  [label="DDG: w"];
"1000514" -> "1000512"  [label="AST: "];
"1000514" -> "1000518"  [label="CFG: "];
"1000518" -> "1000514"  [label="AST: "];
"1000512" -> "1000514"  [label="CFG: "];
"1000514" -> "1000727"  [label="DDG: (float)w"];
"1000514" -> "1000512"  [label="DDG: (float)w"];
"1000514" -> "1000512"  [label="DDG: h"];
"1000514" -> "1000523"  [label="DDG: h"];
"1000512" -> "1000510"  [label="AST: "];
"1000513" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000727"  [label="DDG: ((float)w) * h"];
"1000512" -> "1000510"  [label="DDG: 100.0"];
"1000512" -> "1000510"  [label="DDG: ((float)w) * h"];
"1000510" -> "1000445"  [label="AST: "];
"1000511" -> "1000510"  [label="AST: "];
"1000521" -> "1000510"  [label="CFG: "];
"1000510" -> "1000727"  [label="DDG: per_inc"];
"1000510" -> "1000727"  [label="DDG: 100.0 / (((float)w) * h)"];
"1000510" -> "1000648"  [label="DDG: per_inc"];
"1000648" -> "1000538"  [label="AST: "];
"1000648" -> "1000650"  [label="CFG: "];
"1000649" -> "1000648"  [label="AST: "];
"1000650" -> "1000648"  [label="AST: "];
"1000653" -> "1000648"  [label="CFG: "];
"1000648" -> "1000727"  [label="DDG: per_inc"];
"1000648" -> "1000727"  [label="DDG: per"];
"1000662" -> "1000648"  [label="DDG: per"];
"1000677" -> "1000648"  [label="DDG: per"];
"1000143" -> "1000648"  [label="DDG: per"];
"1000656" -> "1000648"  [label="DDG: per"];
"1000648" -> "1000656"  [label="DDG: per"];
"1000648" -> "1000670"  [label="DDG: per"];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000658"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000658" -> "1000656"  [label="AST: "];
"1000659" -> "1000656"  [label="CFG: "];
"1000656" -> "1000727"  [label="DDG: per"];
"1000656" -> "1000655"  [label="DDG: per"];
"1000656" -> "1000662"  [label="DDG: per"];
"1000656" -> "1000670"  [label="DDG: per"];
"1000655" -> "1000654"  [label="AST: "];
"1000655" -> "1000659"  [label="CFG: "];
"1000659" -> "1000655"  [label="AST: "];
"1000663" -> "1000655"  [label="CFG: "];
"1000654" -> "1000655"  [label="CFG: "];
"1000655" -> "1000727"  [label="DDG: (int)per"];
"1000655" -> "1000727"  [label="DDG: last_per"];
"1000655" -> "1000654"  [label="DDG: (int)per"];
"1000655" -> "1000654"  [label="DDG: last_per"];
"1000148" -> "1000655"  [label="DDG: last_per"];
"1000668" -> "1000655"  [label="DDG: last_per"];
"1000654" -> "1000652"  [label="AST: "];
"1000654" -> "1000660"  [label="CFG: "];
"1000660" -> "1000654"  [label="AST: "];
"1000652" -> "1000654"  [label="CFG: "];
"1000654" -> "1000727"  [label="DDG: ((int)per) != last_per"];
"1000654" -> "1000727"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000654" -> "1000652"  [label="DDG: ((int)per) != last_per"];
"1000654" -> "1000652"  [label="DDG: ((int)per) % progress_granularity == 0"];
"1000660" -> "1000654"  [label="DDG: ((int)per) % progress_granularity"];
"1000660" -> "1000654"  [label="DDG: 0"];
"1000652" -> "1000651"  [label="AST: "];
"1000652" -> "1000653"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000669" -> "1000652"  [label="CFG: "];
"1000537" -> "1000652"  [label="CFG: "];
"1000652" -> "1000727"  [label="DDG: progress && (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000652" -> "1000727"  [label="DDG: progress"];
"1000652" -> "1000727"  [label="DDG: (((int)per) != last_per)\n                      && (((int)per) % progress_granularity == 0)"];
"1000442" -> "1000652"  [label="DDG: progress"];
"1000111" -> "1000652"  [label="DDG: progress"];
"1000662" -> "1000661"  [label="AST: "];
"1000662" -> "1000664"  [label="CFG: "];
"1000663" -> "1000662"  [label="AST: "];
"1000664" -> "1000662"  [label="AST: "];
"1000665" -> "1000662"  [label="CFG: "];
"1000662" -> "1000727"  [label="DDG: per"];
"1000662" -> "1000661"  [label="DDG: per"];
"1000662" -> "1000670"  [label="DDG: per"];
"1000661" -> "1000660"  [label="AST: "];
"1000661" -> "1000665"  [label="CFG: "];
"1000665" -> "1000661"  [label="AST: "];
"1000666" -> "1000661"  [label="CFG: "];
"1000661" -> "1000727"  [label="DDG: (int)per"];
"1000661" -> "1000727"  [label="DDG: progress_granularity"];
"1000661" -> "1000660"  [label="DDG: (int)per"];
"1000661" -> "1000660"  [label="DDG: progress_granularity"];
"1000112" -> "1000661"  [label="DDG: progress_granularity"];
"1000660" -> "1000666"  [label="CFG: "];
"1000666" -> "1000660"  [label="AST: "];
"1000660" -> "1000727"  [label="DDG: ((int)per) % progress_granularity"];
"1000670" -> "1000668"  [label="AST: "];
"1000670" -> "1000672"  [label="CFG: "];
"1000671" -> "1000670"  [label="AST: "];
"1000672" -> "1000670"  [label="AST: "];
"1000668" -> "1000670"  [label="CFG: "];
"1000670" -> "1000668"  [label="DDG: per"];
"1000670" -> "1000677"  [label="DDG: per"];
"1000668" -> "1000667"  [label="AST: "];
"1000669" -> "1000668"  [label="AST: "];
"1000676" -> "1000668"  [label="CFG: "];
"1000668" -> "1000727"  [label="DDG: last_per"];
"1000677" -> "1000675"  [label="AST: "];
"1000677" -> "1000679"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000679" -> "1000677"  [label="AST: "];
"1000680" -> "1000677"  [label="CFG: "];
"1000677" -> "1000727"  [label="DDG: per"];
"1000677" -> "1000675"  [label="DDG: per"];
"1000675" -> "1000674"  [label="AST: "];
"1000675" -> "1000683"  [label="CFG: "];
"1000676" -> "1000675"  [label="AST: "];
"1000680" -> "1000675"  [label="AST: "];
"1000681" -> "1000675"  [label="AST: "];
"1000682" -> "1000675"  [label="AST: "];
"1000683" -> "1000675"  [label="AST: "];
"1000674" -> "1000675"  [label="CFG: "];
"1000675" -> "1000727"  [label="DDG: last_y"];
"1000675" -> "1000727"  [label="DDG: w"];
"1000675" -> "1000727"  [label="DDG: im"];
"1000675" -> "1000727"  [label="DDG: (int)per"];
"1000675" -> "1000526"  [label="DDG: i"];
"1000675" -> "1000533"  [label="DDG: w"];
"1000675" -> "1000674"  [label="DDG: w"];
"1000675" -> "1000674"  [label="DDG: (int)per"];
"1000675" -> "1000674"  [label="DDG: im"];
"1000675" -> "1000674"  [label="DDG: last_y"];
"1000675" -> "1000674"  [label="DDG: i"];
"1000675" -> "1000674"  [label="DDG: 0"];
"1000110" -> "1000675"  [label="DDG: im"];
"1000689" -> "1000675"  [label="DDG: last_y"];
"1000152" -> "1000675"  [label="DDG: last_y"];
"1000533" -> "1000675"  [label="DDG: w"];
"1000523" -> "1000675"  [label="DDG: i"];
"1000675" -> "1000689"  [label="DDG: i"];
"1000526" -> "1000519"  [label="AST: "];
"1000526" -> "1000527"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000526" -> "1000523"  [label="DDG: i"];
"1000523" -> "1000526"  [label="DDG: i"];
"1000523" -> "1000519"  [label="AST: "];
"1000523" -> "1000525"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000525" -> "1000523"  [label="AST: "];
"1000531" -> "1000523"  [label="CFG: "];
"1000692" -> "1000523"  [label="CFG: "];
"1000520" -> "1000523"  [label="DDG: i"];
"1000533" -> "1000529"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000543" -> "1000533"  [label="CFG: "];
"1000527" -> "1000533"  [label="CFG: "];
"1000533" -> "1000727"  [label="DDG: j < w"];
"1000533" -> "1000727"  [label="DDG: j"];
"1000533" -> "1000727"  [label="DDG: w"];
"1000530" -> "1000533"  [label="DDG: j"];
"1000536" -> "1000533"  [label="DDG: j"];
"1000533" -> "1000536"  [label="DDG: j"];
"1000536" -> "1000529"  [label="AST: "];
"1000536" -> "1000537"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000534" -> "1000536"  [label="CFG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000686" -> "1000674"  [label="CFG: "];
"1000690" -> "1000674"  [label="CFG: "];
"1000674" -> "1000727"  [label="DDG: progress(im, (int)per, 0, last_y, w, i)"];
"1000674" -> "1000727"  [label="DDG: !(progress(im, (int)per, 0, last_y, w, i))"];
"1000689" -> "1000667"  [label="AST: "];
"1000689" -> "1000691"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000691" -> "1000689"  [label="AST: "];
"1000537" -> "1000689"  [label="CFG: "];
"1000689" -> "1000727"  [label="DDG: last_y"];
"1000722" -> "1000114"  [label="AST: "];
"1000722" -> "1000724"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000724" -> "1000722"  [label="AST: "];
"1000726" -> "1000722"  [label="CFG: "];
"1000722" -> "1000727"  [label="DDG: NULL"];
"1000722" -> "1000727"  [label="DDG: DGifCloseFile(gif, NULL)"];
"1000722" -> "1000727"  [label="DDG: gif"];
"1000368" -> "1000722"  [label="DDG: gif"];
"1000402" -> "1000722"  [label="DDG: gif"];
"1000188" -> "1000722"  [label="DDG: NULL"];
"1000368" -> "1000362"  [label="AST: "];
"1000368" -> "1000372"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000370" -> "1000368"  [label="AST: "];
"1000372" -> "1000368"  [label="AST: "];
"1000375" -> "1000368"  [label="CFG: "];
"1000368" -> "1000727"  [label="DDG: &ext_code"];
"1000368" -> "1000727"  [label="DDG: DGifGetExtension(gif, &ext_code, &ext)"];
"1000368" -> "1000727"  [label="DDG: &ext"];
"1000402" -> "1000368"  [label="DDG: &ext"];
"1000368" -> "1000402"  [label="DDG: gif"];
"1000368" -> "1000402"  [label="DDG: &ext"];
"1000402" -> "1000376"  [label="AST: "];
"1000402" -> "1000404"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000375" -> "1000402"  [label="CFG: "];
"1000402" -> "1000727"  [label="DDG: &ext"];
"1000402" -> "1000727"  [label="DDG: DGifGetExtensionNext(gif, &ext)"];
}
