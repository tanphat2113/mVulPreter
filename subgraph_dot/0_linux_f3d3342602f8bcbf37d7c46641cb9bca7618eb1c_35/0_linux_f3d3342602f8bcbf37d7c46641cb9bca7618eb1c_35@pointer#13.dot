digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_35@pointer" {
"1000337" [label="(Call,sk_peek_offset_fwd(sk, size))"];
"1000268" [label="(Call,sock_flag(sk, SOCK_RCVTSTAMP))"];
"1000169" [label="(Call,__skb_recv_datagram(sk, flags, &peeked, &skip, &err))"];
"1000164" [label="(Call,sk_peek_offset(sk, flags))"];
"1000124" [label="(Call,unix_sk(sk))"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000141" [label="(Call,flags&MSG_OOB)"];
"1000129" [label="(Call,flags & MSG_DONTWAIT)"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000271" [label="(Call,__sock_recv_timestamp(msg, sk, skb))"];
"1000221" [label="(Call,unix_copy_addr(msg, skb->sk))"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000257" [label="(Call,skb_copy_datagram_iovec(skb, skip, msg->msg_iov, size))"];
"1000179" [label="(Call,!skb)"];
"1000167" [label="(Call,skb = __skb_recv_datagram(sk, flags, &peeked, &skip, &err))"];
"1000236" [label="(Call,skb->len - skip)"];
"1000229" [label="(Call,skb->len - skip)"];
"1000162" [label="(Call,skip = sk_peek_offset(sk, flags))"];
"1000245" [label="(Call,skb->len - skip)"];
"1000234" [label="(Call,size = skb->len - skip)"];
"1000106" [label="(MethodParameterIn,size_t size)"];
"1000243" [label="(Call,size < skb->len - skip)"];
"1000227" [label="(Call,size > skb->len - skip)"];
"1000356" [label="(Call,err = (flags & MSG_TRUNC) ? skb->len - skip : size)"];
"1000386" [label="(Return,return err;)"];
"1000358" [label="(Call,(flags & MSG_TRUNC) ? skb->len - skip : size)"];
"1000376" [label="(Call,skb_free_datagram(sk, skb))"];
"1000124" [label="(Call,unix_sk(sk))"];
"1000122" [label="(Call,*u = unix_sk(sk))"];
"1000388" [label="(MethodReturn,static int)"];
"1000131" [label="(Identifier,MSG_DONTWAIT)"];
"1000174" [label="(Call,&skip)"];
"1000357" [label="(Identifier,err)"];
"1000362" [label="(Call,skb->len - skip)"];
"1000155" [label="(Call,err = sock_intr_errno(sock_rcvtimeo(sk, noblock)))"];
"1000259" [label="(Identifier,skip)"];
"1000386" [label="(Return,return err;)"];
"1000336" [label="(Block,)"];
"1000235" [label="(Identifier,size)"];
"1000146" [label="(Identifier,err)"];
"1000234" [label="(Call,size = skb->len - skip)"];
"1000358" [label="(Call,(flags & MSG_TRUNC) ? skb->len - skip : size)"];
"1000376" [label="(Call,skb_free_datagram(sk, skb))"];
"1000243" [label="(Call,size < skb->len - skip)"];
"1000237" [label="(Call,skb->len)"];
"1000367" [label="(Identifier,size)"];
"1000226" [label="(ControlStructure,if (size > skb->len - skip))"];
"1000171" [label="(Identifier,flags)"];
"1000278" [label="(Identifier,siocb)"];
"1000118" [label="(Call,sock->sk)"];
"1000143" [label="(Identifier,MSG_OOB)"];
"1000130" [label="(Identifier,flags)"];
"1000227" [label="(Call,size > skb->len - skip)"];
"1000322" [label="(Call,UNIXCB(skb))"];
"1000158" [label="(Call,sock_rcvtimeo(sk, noblock))"];
"1000236" [label="(Call,skb->len - skip)"];
"1000140" [label="(ControlStructure,if (flags&MSG_OOB))"];
"1000255" [label="(Call,err = skb_copy_datagram_iovec(skb, skip, msg->msg_iov, size))"];
"1000273" [label="(Identifier,sk)"];
"1000270" [label="(Identifier,SOCK_RCVTSTAMP)"];
"1000125" [label="(Identifier,sk)"];
"1000353" [label="(Call,UNIXCB(skb))"];
"1000179" [label="(Call,!skb)"];
"1000244" [label="(Identifier,size)"];
"1000298" [label="(Call,UNIXCB(skb))"];
"1000169" [label="(Call,__skb_recv_datagram(sk, flags, &peeked, &skip, &err))"];
"1000274" [label="(Identifier,skb)"];
"1000263" [label="(Identifier,size)"];
"1000167" [label="(Call,skb = __skb_recv_datagram(sk, flags, &peeked, &skip, &err))"];
"1000136" [label="(Call,err = -EOPNOTSUPP)"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000356" [label="(Call,err = (flags & MSG_TRUNC) ? skb->len - skip : size)"];
"1000105" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000343" [label="(Identifier,skb)"];
"1000337" [label="(Call,sk_peek_offset_fwd(sk, size))"];
"1000339" [label="(Identifier,size)"];
"1000180" [label="(Identifier,skb)"];
"1000142" [label="(Identifier,flags)"];
"1000127" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000230" [label="(Call,skb->len)"];
"1000163" [label="(Identifier,skip)"];
"1000257" [label="(Call,skb_copy_datagram_iovec(skb, skip, msg->msg_iov, size))"];
"1000141" [label="(Call,flags&MSG_OOB)"];
"1000242" [label="(ControlStructure,if (size < skb->len - skip))"];
"1000229" [label="(Call,skb->len - skip)"];
"1000223" [label="(Call,skb->sk)"];
"1000272" [label="(Identifier,msg)"];
"1000170" [label="(Identifier,sk)"];
"1000117" [label="(Identifier,sk)"];
"1000182" [label="(Call,unix_state_lock(sk))"];
"1000330" [label="(Call,sk_peek_offset_bwd(sk, skb->len))"];
"1000256" [label="(Identifier,err)"];
"1000249" [label="(Identifier,skip)"];
"1000325" [label="(Call,unix_detach_fds(siocb->scm, skb))"];
"1000271" [label="(Call,__sock_recv_timestamp(msg, sk, skb))"];
"1000240" [label="(Identifier,skip)"];
"1000165" [label="(Identifier,sk)"];
"1000316" [label="(Call,flags & MSG_PEEK)"];
"1000233" [label="(Identifier,skip)"];
"1000145" [label="(Call,err = mutex_lock_interruptible(&u->readlock))"];
"1000378" [label="(Identifier,skb)"];
"1000246" [label="(Call,skb->len)"];
"1000183" [label="(Identifier,sk)"];
"1000245" [label="(Call,skb->len - skip)"];
"1000166" [label="(Identifier,flags)"];
"1000172" [label="(Call,&peeked)"];
"1000221" [label="(Call,unix_copy_addr(msg, skb->sk))"];
"1000260" [label="(Call,msg->msg_iov)"];
"1000217" [label="(ControlStructure,if (msg->msg_name))"];
"1000162" [label="(Call,skip = sk_peek_offset(sk, flags))"];
"1000269" [label="(Identifier,sk)"];
"1000379" [label="(JumpTarget,out_unlock:)"];
"1000178" [label="(ControlStructure,if (!skb))"];
"1000228" [label="(Identifier,size)"];
"1000144" [label="(ControlStructure,goto out;)"];
"1000387" [label="(Identifier,err)"];
"1000192" [label="(Call,err == -EAGAIN)"];
"1000129" [label="(Call,flags & MSG_DONTWAIT)"];
"1000201" [label="(Call,err = 0)"];
"1000176" [label="(Call,&err)"];
"1000338" [label="(Identifier,sk)"];
"1000210" [label="(Identifier,u)"];
"1000267" [label="(ControlStructure,if (sock_flag(sk, SOCK_RCVTSTAMP)))"];
"1000222" [label="(Identifier,msg)"];
"1000252" [label="(Identifier,msg)"];
"1000106" [label="(MethodParameterIn,size_t size)"];
"1000377" [label="(Identifier,sk)"];
"1000359" [label="(Call,flags & MSG_TRUNC)"];
"1000342" [label="(Call,UNIXCB(skb))"];
"1000168" [label="(Identifier,skb)"];
"1000268" [label="(Call,sock_flag(sk, SOCK_RCVTSTAMP))"];
"1000107" [label="(MethodParameterIn,int flags)"];
"1000164" [label="(Call,sk_peek_offset(sk, flags))"];
"1000369" [label="(Identifier,sock)"];
"1000123" [label="(Identifier,u)"];
"1000258" [label="(Identifier,skb)"];
"1000368" [label="(Call,scm_recv(sock, msg, siocb->scm, flags))"];
"1000108" [label="(Block,)"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000343" -> "1000337"  [label="CFG: "];
"1000337" -> "1000388"  [label="DDG: sk_peek_offset_fwd(sk, size)"];
"1000268" -> "1000337"  [label="DDG: sk"];
"1000271" -> "1000337"  [label="DDG: sk"];
"1000257" -> "1000337"  [label="DDG: size"];
"1000106" -> "1000337"  [label="DDG: size"];
"1000337" -> "1000356"  [label="DDG: size"];
"1000337" -> "1000358"  [label="DDG: size"];
"1000337" -> "1000376"  [label="DDG: sk"];
"1000268" -> "1000267"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000270" -> "1000268"  [label="AST: "];
"1000272" -> "1000268"  [label="CFG: "];
"1000278" -> "1000268"  [label="CFG: "];
"1000268" -> "1000388"  [label="DDG: sock_flag(sk, SOCK_RCVTSTAMP)"];
"1000268" -> "1000388"  [label="DDG: SOCK_RCVTSTAMP"];
"1000169" -> "1000268"  [label="DDG: sk"];
"1000268" -> "1000271"  [label="DDG: sk"];
"1000268" -> "1000330"  [label="DDG: sk"];
"1000169" -> "1000167"  [label="AST: "];
"1000169" -> "1000176"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000172" -> "1000169"  [label="AST: "];
"1000174" -> "1000169"  [label="AST: "];
"1000176" -> "1000169"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000169" -> "1000388"  [label="DDG: &peeked"];
"1000169" -> "1000388"  [label="DDG: &err"];
"1000169" -> "1000388"  [label="DDG: flags"];
"1000169" -> "1000388"  [label="DDG: &skip"];
"1000169" -> "1000167"  [label="DDG: &peeked"];
"1000169" -> "1000167"  [label="DDG: sk"];
"1000169" -> "1000167"  [label="DDG: &skip"];
"1000169" -> "1000167"  [label="DDG: &err"];
"1000169" -> "1000167"  [label="DDG: flags"];
"1000164" -> "1000169"  [label="DDG: sk"];
"1000164" -> "1000169"  [label="DDG: flags"];
"1000107" -> "1000169"  [label="DDG: flags"];
"1000169" -> "1000182"  [label="DDG: sk"];
"1000169" -> "1000316"  [label="DDG: flags"];
"1000169" -> "1000376"  [label="DDG: sk"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000162"  [label="DDG: sk"];
"1000164" -> "1000162"  [label="DDG: flags"];
"1000124" -> "1000164"  [label="DDG: sk"];
"1000141" -> "1000164"  [label="DDG: flags"];
"1000107" -> "1000164"  [label="DDG: flags"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000388"  [label="DDG: sk"];
"1000124" -> "1000122"  [label="DDG: sk"];
"1000116" -> "1000124"  [label="DDG: sk"];
"1000124" -> "1000158"  [label="DDG: sk"];
"1000116" -> "1000108"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000116" -> "1000388"  [label="DDG: sock->sk"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000144" -> "1000141"  [label="CFG: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000141" -> "1000388"  [label="DDG: flags"];
"1000141" -> "1000388"  [label="DDG: flags&MSG_OOB"];
"1000141" -> "1000388"  [label="DDG: MSG_OOB"];
"1000129" -> "1000141"  [label="DDG: flags"];
"1000107" -> "1000141"  [label="DDG: flags"];
"1000129" -> "1000127"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000129" -> "1000388"  [label="DDG: MSG_DONTWAIT"];
"1000129" -> "1000127"  [label="DDG: flags"];
"1000129" -> "1000127"  [label="DDG: MSG_DONTWAIT"];
"1000107" -> "1000129"  [label="DDG: flags"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1000388"  [label="DDG: flags"];
"1000107" -> "1000316"  [label="DDG: flags"];
"1000107" -> "1000359"  [label="DDG: flags"];
"1000107" -> "1000368"  [label="DDG: flags"];
"1000271" -> "1000267"  [label="AST: "];
"1000271" -> "1000274"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000273" -> "1000271"  [label="AST: "];
"1000274" -> "1000271"  [label="AST: "];
"1000278" -> "1000271"  [label="CFG: "];
"1000271" -> "1000388"  [label="DDG: __sock_recv_timestamp(msg, sk, skb)"];
"1000221" -> "1000271"  [label="DDG: msg"];
"1000105" -> "1000271"  [label="DDG: msg"];
"1000257" -> "1000271"  [label="DDG: skb"];
"1000271" -> "1000298"  [label="DDG: skb"];
"1000271" -> "1000330"  [label="DDG: sk"];
"1000271" -> "1000368"  [label="DDG: msg"];
"1000221" -> "1000217"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="CFG: "];
"1000221" -> "1000388"  [label="DDG: unix_copy_addr(msg, skb->sk)"];
"1000221" -> "1000388"  [label="DDG: skb->sk"];
"1000221" -> "1000388"  [label="DDG: msg"];
"1000105" -> "1000221"  [label="DDG: msg"];
"1000221" -> "1000368"  [label="DDG: msg"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000388"  [label="DDG: msg"];
"1000105" -> "1000368"  [label="DDG: msg"];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000263"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000260" -> "1000257"  [label="AST: "];
"1000263" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1000388"  [label="DDG: skip"];
"1000257" -> "1000388"  [label="DDG: msg->msg_iov"];
"1000257" -> "1000388"  [label="DDG: size"];
"1000257" -> "1000255"  [label="DDG: skb"];
"1000257" -> "1000255"  [label="DDG: skip"];
"1000257" -> "1000255"  [label="DDG: msg->msg_iov"];
"1000257" -> "1000255"  [label="DDG: size"];
"1000179" -> "1000257"  [label="DDG: skb"];
"1000236" -> "1000257"  [label="DDG: skip"];
"1000245" -> "1000257"  [label="DDG: skip"];
"1000234" -> "1000257"  [label="DDG: size"];
"1000243" -> "1000257"  [label="DDG: size"];
"1000106" -> "1000257"  [label="DDG: size"];
"1000257" -> "1000298"  [label="DDG: skb"];
"1000257" -> "1000356"  [label="DDG: size"];
"1000257" -> "1000362"  [label="DDG: skip"];
"1000257" -> "1000358"  [label="DDG: size"];
"1000257" -> "1000376"  [label="DDG: skb"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000183" -> "1000179"  [label="CFG: "];
"1000210" -> "1000179"  [label="CFG: "];
"1000179" -> "1000388"  [label="DDG: !skb"];
"1000179" -> "1000388"  [label="DDG: skb"];
"1000167" -> "1000179"  [label="DDG: skb"];
"1000167" -> "1000108"  [label="AST: "];
"1000168" -> "1000167"  [label="AST: "];
"1000180" -> "1000167"  [label="CFG: "];
"1000167" -> "1000388"  [label="DDG: __skb_recv_datagram(sk, flags, &peeked, &skip, &err)"];
"1000236" -> "1000234"  [label="AST: "];
"1000236" -> "1000240"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000240" -> "1000236"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000236" -> "1000388"  [label="DDG: skb->len"];
"1000236" -> "1000234"  [label="DDG: skb->len"];
"1000236" -> "1000234"  [label="DDG: skip"];
"1000229" -> "1000236"  [label="DDG: skb->len"];
"1000229" -> "1000236"  [label="DDG: skip"];
"1000236" -> "1000330"  [label="DDG: skb->len"];
"1000236" -> "1000356"  [label="DDG: skb->len"];
"1000236" -> "1000356"  [label="DDG: skip"];
"1000236" -> "1000358"  [label="DDG: skb->len"];
"1000236" -> "1000358"  [label="DDG: skip"];
"1000236" -> "1000362"  [label="DDG: skb->len"];
"1000229" -> "1000227"  [label="AST: "];
"1000229" -> "1000233"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000233" -> "1000229"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000229" -> "1000227"  [label="DDG: skb->len"];
"1000229" -> "1000227"  [label="DDG: skip"];
"1000162" -> "1000229"  [label="DDG: skip"];
"1000229" -> "1000245"  [label="DDG: skb->len"];
"1000229" -> "1000245"  [label="DDG: skip"];
"1000162" -> "1000108"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000168" -> "1000162"  [label="CFG: "];
"1000162" -> "1000388"  [label="DDG: sk_peek_offset(sk, flags)"];
"1000162" -> "1000388"  [label="DDG: skip"];
"1000245" -> "1000243"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000245" -> "1000388"  [label="DDG: skb->len"];
"1000245" -> "1000243"  [label="DDG: skb->len"];
"1000245" -> "1000243"  [label="DDG: skip"];
"1000245" -> "1000330"  [label="DDG: skb->len"];
"1000245" -> "1000362"  [label="DDG: skb->len"];
"1000234" -> "1000226"  [label="AST: "];
"1000235" -> "1000234"  [label="AST: "];
"1000256" -> "1000234"  [label="CFG: "];
"1000234" -> "1000388"  [label="DDG: skb->len - skip"];
"1000106" -> "1000234"  [label="DDG: size"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1000388"  [label="DDG: size"];
"1000106" -> "1000227"  [label="DDG: size"];
"1000106" -> "1000243"  [label="DDG: size"];
"1000106" -> "1000356"  [label="DDG: size"];
"1000106" -> "1000358"  [label="DDG: size"];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000243"  [label="AST: "];
"1000252" -> "1000243"  [label="CFG: "];
"1000256" -> "1000243"  [label="CFG: "];
"1000243" -> "1000388"  [label="DDG: skb->len - skip"];
"1000243" -> "1000388"  [label="DDG: size < skb->len - skip"];
"1000227" -> "1000243"  [label="DDG: size"];
"1000243" -> "1000356"  [label="DDG: skb->len - skip"];
"1000243" -> "1000358"  [label="DDG: skb->len - skip"];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000227"  [label="AST: "];
"1000235" -> "1000227"  [label="CFG: "];
"1000244" -> "1000227"  [label="CFG: "];
"1000227" -> "1000388"  [label="DDG: size > skb->len - skip"];
"1000356" -> "1000108"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000369" -> "1000356"  [label="CFG: "];
"1000356" -> "1000388"  [label="DDG: err"];
"1000356" -> "1000388"  [label="DDG: (flags & MSG_TRUNC) ? skb->len - skip : size"];
"1000362" -> "1000356"  [label="DDG: skb->len"];
"1000362" -> "1000356"  [label="DDG: skip"];
"1000356" -> "1000386"  [label="DDG: err"];
"1000386" -> "1000108"  [label="AST: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="CFG: "];
"1000386" -> "1000388"  [label="DDG: <RET>"];
"1000387" -> "1000386"  [label="DDG: err"];
"1000192" -> "1000386"  [label="DDG: err"];
"1000155" -> "1000386"  [label="DDG: err"];
"1000255" -> "1000386"  [label="DDG: err"];
"1000145" -> "1000386"  [label="DDG: err"];
"1000136" -> "1000386"  [label="DDG: err"];
"1000201" -> "1000386"  [label="DDG: err"];
"1000358" -> "1000362"  [label="CFG: "];
"1000358" -> "1000367"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000362" -> "1000358"  [label="AST: "];
"1000367" -> "1000358"  [label="AST: "];
"1000358" -> "1000388"  [label="DDG: size"];
"1000358" -> "1000388"  [label="DDG: skb->len - skip"];
"1000358" -> "1000388"  [label="DDG: flags & MSG_TRUNC"];
"1000362" -> "1000358"  [label="DDG: skb->len"];
"1000362" -> "1000358"  [label="DDG: skip"];
"1000376" -> "1000108"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000379" -> "1000376"  [label="CFG: "];
"1000376" -> "1000388"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000376" -> "1000388"  [label="DDG: sk"];
"1000376" -> "1000388"  [label="DDG: skb"];
"1000330" -> "1000376"  [label="DDG: sk"];
"1000342" -> "1000376"  [label="DDG: skb"];
"1000325" -> "1000376"  [label="DDG: skb"];
"1000322" -> "1000376"  [label="DDG: skb"];
"1000353" -> "1000376"  [label="DDG: skb"];
}
