digraph "0_file_447558595a3650db2886cd2f416ad0beba965801@pointer" {
"1000149" [label="(Call,file_error(ms, 0, \"recursion nesting exceeded\"))"];
"1000104" [label="(MethodParameterIn,struct magic_set *ms)"];
"1002608" [label="(Call,file_printf(ms, F(m->desc, \"%u\"), offset))"];
"1002672" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1002549" [label="(Call,file_softmagic(ms, s + offset, nbytes - offset,\n\t\t    BINTEST, text))"];
"1000155" [label="(Literal,1)"];
"1002390" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, count))"];
"1000104" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000152" [label="(Literal,\"recursion nesting exceeded\")"];
"1002664" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1002696" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1002623" [label="(Call,file_printf(ms, \"%s\", rbuf))"];
"1000150" [label="(Identifier,ms)"];
"1000158" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, count))"];
"1002729" [label="(Call,file_printf(ms, \"%s\", m->desc))"];
"1000151" [label="(Literal,0)"];
"1002748" [label="(Call,mconvert(ms, m, flip))"];
"1000148" [label="(Block,)"];
"1000149" [label="(Call,file_error(ms, 0, \"recursion nesting exceeded\"))"];
"1002756" [label="(MethodReturn,RET)"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000152"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000155" -> "1000149"  [label="CFG: "];
"1000149" -> "1002756"  [label="DDG: "];
"1000149" -> "1002756"  [label="DDG: "];
"1000104" -> "1000149"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1002756"  [label="DDG: "];
"1000104" -> "1000158"  [label="DDG: "];
"1000104" -> "1002390"  [label="DDG: "];
"1000104" -> "1002549"  [label="DDG: "];
"1000104" -> "1002608"  [label="DDG: "];
"1000104" -> "1002623"  [label="DDG: "];
"1000104" -> "1002664"  [label="DDG: "];
"1000104" -> "1002672"  [label="DDG: "];
"1000104" -> "1002696"  [label="DDG: "];
"1000104" -> "1002729"  [label="DDG: "];
"1000104" -> "1002748"  [label="DDG: "];
}
