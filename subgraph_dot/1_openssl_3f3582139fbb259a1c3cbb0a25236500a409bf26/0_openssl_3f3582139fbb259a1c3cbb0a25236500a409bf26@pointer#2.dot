digraph "0_openssl_3f3582139fbb259a1c3cbb0a25236500a409bf26@pointer" {
"1000168" [label="(Call,ctx->cipher->do_cipher(ctx, out, in, inl))"];
"1000101" [label="(MethodParameterIn,EVP_CIPHER_CTX *ctx)"];
"1000102" [label="(MethodParameterIn,unsigned char *out)"];
"1000104" [label="(MethodParameterIn,const unsigned char *in)"];
"1000140" [label="(Call,inl <= 0)"];
"1000105" [label="(MethodParameterIn,int inl)"];
"1000160" [label="(Call,inl & (ctx->block_mask))"];
"1000174" [label="(Call,*outl = inl)"];
"1000334" [label="(MethodReturn,int)"];
"1000175" [label="(Call,*outl)"];
"1000259" [label="(Call,ctx->cipher->do_cipher(ctx, out, ctx->buf, bl))"];
"1000101" [label="(MethodParameterIn,EVP_CIPHER_CTX *ctx)"];
"1000141" [label="(Identifier,inl)"];
"1000162" [label="(Call,ctx->block_mask)"];
"1000142" [label="(Literal,0)"];
"1000105" [label="(MethodParameterIn,int inl)"];
"1000140" [label="(Call,inl <= 0)"];
"1000268" [label="(Call,inl -= j)"];
"1000168" [label="(Call,ctx->cipher->do_cipher(ctx, out, in, inl))"];
"1000156" [label="(Identifier,ctx)"];
"1000173" [label="(Block,)"];
"1000170" [label="(Identifier,out)"];
"1000161" [label="(Identifier,inl)"];
"1000176" [label="(Identifier,outl)"];
"1000177" [label="(Identifier,inl)"];
"1000216" [label="(Call,i + inl)"];
"1000160" [label="(Call,inl & (ctx->block_mask))"];
"1000169" [label="(Identifier,ctx)"];
"1000174" [label="(Call,*outl = inl)"];
"1000310" [label="(Call,*outl += inl)"];
"1000165" [label="(Literal,0)"];
"1000274" [label="(Call,out += bl)"];
"1000221" [label="(Call,memcpy(&(ctx->buf[i]), in, inl))"];
"1000230" [label="(Call,ctx->buf_len += inl)"];
"1000297" [label="(Call,inl > 0)"];
"1000149" [label="(Call,inl == 0)"];
"1000184" [label="(Identifier,outl)"];
"1000104" [label="(MethodParameterIn,const unsigned char *in)"];
"1000271" [label="(Call,in += j)"];
"1000102" [label="(MethodParameterIn,unsigned char *out)"];
"1000303" [label="(Call,ctx->cipher->do_cipher(ctx, out, in, inl))"];
"1000139" [label="(ControlStructure,if (inl <= 0))"];
"1000167" [label="(ControlStructure,if (ctx->cipher->do_cipher(ctx, out, in, inl)))"];
"1000248" [label="(Call,memcpy(&(ctx->buf[i]), in, j))"];
"1000288" [label="(Call,inl & (bl - 1))"];
"1000171" [label="(Identifier,in)"];
"1000146" [label="(Identifier,outl)"];
"1000159" [label="(Call,(inl & (ctx->block_mask)) == 0)"];
"1000121" [label="(Call,ctx->cipher->do_cipher(ctx, out, in, inl))"];
"1000179" [label="(Literal,1)"];
"1000172" [label="(Identifier,inl)"];
"1000293" [label="(Call,inl -= i)"];
"1000215" [label="(Call,i + inl < bl)"];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000172" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000184" -> "1000168"  [label="CFG: "];
"1000168" -> "1000334"  [label="DDG: ctx->cipher->do_cipher(ctx, out, in, inl)"];
"1000168" -> "1000334"  [label="DDG: inl"];
"1000168" -> "1000334"  [label="DDG: ctx"];
"1000168" -> "1000334"  [label="DDG: in"];
"1000168" -> "1000334"  [label="DDG: out"];
"1000101" -> "1000168"  [label="DDG: ctx"];
"1000102" -> "1000168"  [label="DDG: out"];
"1000104" -> "1000168"  [label="DDG: in"];
"1000140" -> "1000168"  [label="DDG: inl"];
"1000160" -> "1000168"  [label="DDG: inl"];
"1000105" -> "1000168"  [label="DDG: inl"];
"1000168" -> "1000174"  [label="DDG: inl"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000334"  [label="DDG: ctx"];
"1000101" -> "1000121"  [label="DDG: ctx"];
"1000101" -> "1000259"  [label="DDG: ctx"];
"1000101" -> "1000303"  [label="DDG: ctx"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000334"  [label="DDG: out"];
"1000102" -> "1000121"  [label="DDG: out"];
"1000102" -> "1000259"  [label="DDG: out"];
"1000102" -> "1000274"  [label="DDG: out"];
"1000102" -> "1000303"  [label="DDG: out"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000334"  [label="DDG: in"];
"1000104" -> "1000121"  [label="DDG: in"];
"1000104" -> "1000221"  [label="DDG: in"];
"1000104" -> "1000248"  [label="DDG: in"];
"1000104" -> "1000271"  [label="DDG: in"];
"1000104" -> "1000303"  [label="DDG: in"];
"1000140" -> "1000139"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000141" -> "1000140"  [label="AST: "];
"1000142" -> "1000140"  [label="AST: "];
"1000146" -> "1000140"  [label="CFG: "];
"1000156" -> "1000140"  [label="CFG: "];
"1000140" -> "1000334"  [label="DDG: inl <= 0"];
"1000105" -> "1000140"  [label="DDG: inl"];
"1000140" -> "1000149"  [label="DDG: inl"];
"1000140" -> "1000160"  [label="DDG: inl"];
"1000140" -> "1000215"  [label="DDG: inl"];
"1000140" -> "1000216"  [label="DDG: inl"];
"1000140" -> "1000221"  [label="DDG: inl"];
"1000140" -> "1000268"  [label="DDG: inl"];
"1000140" -> "1000288"  [label="DDG: inl"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000334"  [label="DDG: inl"];
"1000105" -> "1000121"  [label="DDG: inl"];
"1000105" -> "1000149"  [label="DDG: inl"];
"1000105" -> "1000160"  [label="DDG: inl"];
"1000105" -> "1000174"  [label="DDG: inl"];
"1000105" -> "1000215"  [label="DDG: inl"];
"1000105" -> "1000216"  [label="DDG: inl"];
"1000105" -> "1000221"  [label="DDG: inl"];
"1000105" -> "1000230"  [label="DDG: inl"];
"1000105" -> "1000268"  [label="DDG: inl"];
"1000105" -> "1000288"  [label="DDG: inl"];
"1000105" -> "1000293"  [label="DDG: inl"];
"1000105" -> "1000297"  [label="DDG: inl"];
"1000105" -> "1000303"  [label="DDG: inl"];
"1000105" -> "1000310"  [label="DDG: inl"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000165" -> "1000160"  [label="CFG: "];
"1000160" -> "1000334"  [label="DDG: ctx->block_mask"];
"1000160" -> "1000159"  [label="DDG: inl"];
"1000160" -> "1000159"  [label="DDG: ctx->block_mask"];
"1000160" -> "1000215"  [label="DDG: inl"];
"1000160" -> "1000216"  [label="DDG: inl"];
"1000160" -> "1000221"  [label="DDG: inl"];
"1000160" -> "1000268"  [label="DDG: inl"];
"1000160" -> "1000288"  [label="DDG: inl"];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000177"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="AST: "];
"1000179" -> "1000174"  [label="CFG: "];
"1000174" -> "1000334"  [label="DDG: inl"];
"1000174" -> "1000334"  [label="DDG: *outl"];
}
