digraph "0_jansson_8f80c2d83808150724d31793e6ade92749b1faa4_6@pointer" {
"1000139" [label="(Call,bucket = &hashtable->buckets[index])"];
"1000149" [label="(Call,hashtable_find_pair(hashtable, bucket, key, hash))"];
"1000147" [label="(Call,pair = hashtable_find_pair(hashtable, bucket, key, hash))"];
"1000172" [label="(Call,offsetof(pair_t, key))"];
"1000170" [label="(Call,jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1))"];
"1000168" [label="(Call,pair = jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1))"];
"1000180" [label="(Call,!pair)"];
"1000171" [label="(Call,offsetof(pair_t, key) + strlen(key) + 1)"];
"1000176" [label="(Call,strlen(key))"];
"1000175" [label="(Call,strlen(key) + 1)"];
"1000195" [label="(Call,strcpy(pair->key, key))"];
"1000185" [label="(Call,pair->hash = hash)"];
"1000210" [label="(Call,insert_to_bucket(hashtable, bucket, &pair->list))"];
"1000199" [label="(Identifier,key)"];
"1000202" [label="(Identifier,pair)"];
"1000170" [label="(Call,jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1))"];
"1000177" [label="(Identifier,key)"];
"1000212" [label="(Identifier,bucket)"];
"1000173" [label="(Identifier,pair_t)"];
"1000178" [label="(Literal,1)"];
"1000174" [label="(Identifier,key)"];
"1000223" [label="(MethodReturn,int)"];
"1000169" [label="(Identifier,pair)"];
"1000210" [label="(Call,insert_to_bucket(hashtable, bucket, &pair->list))"];
"1000153" [label="(Identifier,hash)"];
"1000107" [label="(Block,)"];
"1000186" [label="(Call,pair->hash)"];
"1000151" [label="(Identifier,bucket)"];
"1000181" [label="(Identifier,pair)"];
"1000147" [label="(Call,pair = hashtable_find_pair(hashtable, bucket, key, hash))"];
"1000184" [label="(Literal,1)"];
"1000189" [label="(Identifier,hash)"];
"1000172" [label="(Call,offsetof(pair_t, key))"];
"1000175" [label="(Call,strlen(key) + 1)"];
"1000213" [label="(Call,&pair->list)"];
"1000122" [label="(Call,hashtable_do_rehash(hashtable))"];
"1000179" [label="(ControlStructure,if(!pair))"];
"1000133" [label="(Call,hash & hashmask(hashtable->order))"];
"1000187" [label="(Identifier,pair)"];
"1000219" [label="(Identifier,hashtable)"];
"1000141" [label="(Call,&hashtable->buckets[index])"];
"1000155" [label="(Identifier,pair)"];
"1000196" [label="(Call,pair->key)"];
"1000152" [label="(Identifier,key)"];
"1000139" [label="(Call,bucket = &hashtable->buckets[index])"];
"1000211" [label="(Identifier,hashtable)"];
"1000176" [label="(Call,strlen(key))"];
"1000140" [label="(Identifier,bucket)"];
"1000149" [label="(Call,hashtable_find_pair(hashtable, bucket, key, hash))"];
"1000192" [label="(Identifier,pair)"];
"1000129" [label="(Call,hash_str(key))"];
"1000103" [label="(MethodParameterIn,hashtable_t *hashtable)"];
"1000104" [label="(MethodParameterIn,const char *key)"];
"1000180" [label="(Call,!pair)"];
"1000150" [label="(Identifier,hashtable)"];
"1000205" [label="(Call,list_init(&pair->list))"];
"1000167" [label="(Block,)"];
"1000195" [label="(Call,strcpy(pair->key, key))"];
"1000185" [label="(Call,pair->hash = hash)"];
"1000168" [label="(Call,pair = jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1))"];
"1000148" [label="(Identifier,pair)"];
"1000171" [label="(Call,offsetof(pair_t, key) + strlen(key) + 1)"];
"1000139" -> "1000107"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000148" -> "1000139"  [label="CFG: "];
"1000139" -> "1000223"  [label="DDG: &hashtable->buckets[index]"];
"1000139" -> "1000149"  [label="DDG: bucket"];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1000153"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000149" -> "1000223"  [label="DDG: bucket"];
"1000149" -> "1000223"  [label="DDG: key"];
"1000149" -> "1000223"  [label="DDG: hash"];
"1000149" -> "1000223"  [label="DDG: hashtable"];
"1000149" -> "1000147"  [label="DDG: hashtable"];
"1000149" -> "1000147"  [label="DDG: bucket"];
"1000149" -> "1000147"  [label="DDG: key"];
"1000149" -> "1000147"  [label="DDG: hash"];
"1000122" -> "1000149"  [label="DDG: hashtable"];
"1000103" -> "1000149"  [label="DDG: hashtable"];
"1000129" -> "1000149"  [label="DDG: key"];
"1000104" -> "1000149"  [label="DDG: key"];
"1000133" -> "1000149"  [label="DDG: hash"];
"1000149" -> "1000172"  [label="DDG: key"];
"1000149" -> "1000185"  [label="DDG: hash"];
"1000149" -> "1000210"  [label="DDG: hashtable"];
"1000149" -> "1000210"  [label="DDG: bucket"];
"1000147" -> "1000107"  [label="AST: "];
"1000148" -> "1000147"  [label="AST: "];
"1000155" -> "1000147"  [label="CFG: "];
"1000147" -> "1000223"  [label="DDG: hashtable_find_pair(hashtable, bucket, key, hash)"];
"1000147" -> "1000223"  [label="DDG: pair"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000177" -> "1000172"  [label="CFG: "];
"1000172" -> "1000223"  [label="DDG: pair_t"];
"1000172" -> "1000170"  [label="DDG: pair_t"];
"1000172" -> "1000170"  [label="DDG: key"];
"1000172" -> "1000171"  [label="DDG: pair_t"];
"1000172" -> "1000171"  [label="DDG: key"];
"1000104" -> "1000172"  [label="DDG: key"];
"1000172" -> "1000176"  [label="DDG: key"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000171"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000223"  [label="DDG: offsetof(pair_t, key) + strlen(key) + 1"];
"1000170" -> "1000168"  [label="DDG: offsetof(pair_t, key) + strlen(key) + 1"];
"1000176" -> "1000170"  [label="DDG: key"];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000181" -> "1000168"  [label="CFG: "];
"1000168" -> "1000223"  [label="DDG: jsonp_malloc(offsetof(pair_t, key) + strlen(key) + 1)"];
"1000168" -> "1000180"  [label="DDG: pair"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="CFG: "];
"1000187" -> "1000180"  [label="CFG: "];
"1000180" -> "1000223"  [label="DDG: pair"];
"1000180" -> "1000223"  [label="DDG: !pair"];
"1000171" -> "1000175"  [label="CFG: "];
"1000175" -> "1000171"  [label="AST: "];
"1000171" -> "1000223"  [label="DDG: offsetof(pair_t, key)"];
"1000171" -> "1000223"  [label="DDG: strlen(key) + 1"];
"1000176" -> "1000171"  [label="DDG: key"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="CFG: "];
"1000176" -> "1000223"  [label="DDG: key"];
"1000176" -> "1000175"  [label="DDG: key"];
"1000104" -> "1000176"  [label="DDG: key"];
"1000176" -> "1000195"  [label="DDG: key"];
"1000175" -> "1000178"  [label="CFG: "];
"1000178" -> "1000175"  [label="AST: "];
"1000175" -> "1000223"  [label="DDG: strlen(key)"];
"1000195" -> "1000167"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000202" -> "1000195"  [label="CFG: "];
"1000195" -> "1000223"  [label="DDG: key"];
"1000195" -> "1000223"  [label="DDG: strcpy(pair->key, key)"];
"1000195" -> "1000223"  [label="DDG: pair->key"];
"1000104" -> "1000195"  [label="DDG: key"];
"1000185" -> "1000167"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000192" -> "1000185"  [label="CFG: "];
"1000185" -> "1000223"  [label="DDG: pair->hash"];
"1000185" -> "1000223"  [label="DDG: hash"];
"1000210" -> "1000167"  [label="AST: "];
"1000210" -> "1000213"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000213" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="CFG: "];
"1000210" -> "1000223"  [label="DDG: bucket"];
"1000210" -> "1000223"  [label="DDG: insert_to_bucket(hashtable, bucket, &pair->list)"];
"1000210" -> "1000223"  [label="DDG: &pair->list"];
"1000210" -> "1000223"  [label="DDG: hashtable"];
"1000103" -> "1000210"  [label="DDG: hashtable"];
"1000205" -> "1000210"  [label="DDG: &pair->list"];
}
