digraph "0_radare2_f17bfd9f1da05f30f23a4dd05e9d2363e1406948@API" {
"1002031" [label="(Call,op->operands[0].reg == X86R_EAX)"];
"1002030" [label="(Call,op->operands[0].reg == X86R_EAX && op->operands[1].regs[0] == X86R_UNDEFINED)"];
"1002201" [label="(Call,op->operands[0].reg < 4)"];
"1002189" [label="(Call,op->operands[1].regs[0] >= X86R_R8 &&\n\t\t\t    op->operands[0].reg < 4)"];
"1002229" [label="(Call,op->operands[0].reg << 3)"];
"1002228" [label="(Call,op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8))"];
"1002223" [label="(Call,data[l++] = op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8))"];
"1002311" [label="(Call,op->operands[0].reg << 3)"];
"1002310" [label="(Call,op->operands[0].reg << 3 | 0x5)"];
"1002305" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x5)"];
"1002562" [label="(Call,op->operands[0].reg << 3)"];
"1002561" [label="(Call,op->operands[0].reg << 3 | 0x4)"];
"1002556" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1002586" [label="(Call,op->operands[0].reg << 3)"];
"1002585" [label="(Call,op->operands[0].reg << 3 | 0x5)"];
"1002580" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x5)"];
"1002647" [label="(Call,op->operands[0].reg << 3)"];
"1002646" [label="(Call,op->operands[0].reg << 3 | 4)"];
"1002641" [label="(Call,data[l++] = op->operands[0].reg << 3 | 4)"];
"1002792" [label="(Call,op->operands[0].reg << 3)"];
"1002791" [label="(Call,op->operands[0].reg << 3 | 0x4)"];
"1002786" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1002921" [label="(Call,op->operands[0].reg << 3)"];
"1002920" [label="(Call,op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1002918" [label="(Call,0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1002913" [label="(Call,data[l++] = 0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003063" [label="(Call,op->operands[1].regs[0] == X86R_ESP)"];
"1003103" [label="(Call,op->operands[1].regs[0] == X86R_EIP)"];
"1003093" [label="(Call,op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP)"];
"1003149" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003147" [label="(Call,offset || op->operands[1].regs[0] == X86R_RIP)"];
"1003141" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1003161" [label="(Call,data[l++] = offset)"];
"1003168" [label="(Call,op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP)"];
"1003195" [label="(Call,offset >> 8)"];
"1003190" [label="(Call,data[l++] = offset >> 8)"];
"1003203" [label="(Call,offset >> 16)"];
"1003198" [label="(Call,data[l++] = offset >> 16)"];
"1003211" [label="(Call,offset >> 24)"];
"1003206" [label="(Call,data[l++] = offset >> 24)"];
"1003178" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003044" [label="(Call,op->operands[0].reg << 3)"];
"1003043" [label="(Call,op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003039" [label="(Call,mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003034" [label="(Call,data[l++] = mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1002929" [label="(Literal,3)"];
"1002786" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1003052" [label="(Literal,3)"];
"1002167" [label="(Identifier,op)"];
"1003211" [label="(Call,offset >> 24)"];
"1002032" [label="(Call,op->operands[0].reg)"];
"1002656" [label="(Literal,4)"];
"1003150" [label="(Call,op->operands[1].regs[0])"];
"1003161" [label="(Call,data[l++] = offset)"];
"1003166" [label="(Identifier,offset)"];
"1002831" [label="(Call,offset || op->operands[1].regs[0] == X86R_EBP)"];
"1002045" [label="(Identifier,op)"];
"1002243" [label="(Identifier,op)"];
"1002557" [label="(Call,data[l++])"];
"1002655" [label="(Literal,3)"];
"1003207" [label="(Call,data[l++])"];
"1002920" [label="(Call,op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003208" [label="(Identifier,data)"];
"1003045" [label="(Call,op->operands[0].reg)"];
"1002201" [label="(Call,op->operands[0].reg < 4)"];
"1002310" [label="(Call,op->operands[0].reg << 3 | 0x5)"];
"1003005" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003093" [label="(Call,op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP)"];
"1003034" [label="(Call,data[l++] = mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003043" [label="(Call,op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1002323" [label="(Identifier,data)"];
"1002556" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x4)"];
"1003189" [label="(Block,)"];
"1002919" [label="(Literal,0x80)"];
"1002202" [label="(Call,op->operands[0].reg)"];
"1002646" [label="(Call,op->operands[0].reg << 3 | 4)"];
"1002801" [label="(Literal,0x4)"];
"1003083" [label="(Identifier,mod)"];
"1002787" [label="(Call,data[l++])"];
"1002029" [label="(ControlStructure,if (op->operands[0].reg == X86R_EAX && op->operands[1].regs[0] == X86R_UNDEFINED))"];
"1002594" [label="(Literal,3)"];
"1003199" [label="(Call,data[l++])"];
"1003033" [label="(Block,)"];
"1002595" [label="(Literal,0x5)"];
"1002228" [label="(Call,op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8))"];
"1003068" [label="(Identifier,op)"];
"1002229" [label="(Call,op->operands[0].reg << 3)"];
"1003149" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003159" [label="(Identifier,X86R_RIP)"];
"1002189" [label="(Call,op->operands[1].regs[0] >= X86R_R8 &&\n\t\t\t    op->operands[0].reg < 4)"];
"1003216" [label="(MethodReturn,static int)"];
"1002930" [label="(Call,op->operands[1].regs[0])"];
"1003160" [label="(Block,)"];
"1002570" [label="(Literal,3)"];
"1002663" [label="(Identifier,op)"];
"1003197" [label="(Literal,8)"];
"1002319" [label="(Literal,3)"];
"1002793" [label="(Call,op->operands[0].reg)"];
"1003073" [label="(Identifier,X86R_ESP)"];
"1002574" [label="(Identifier,data)"];
"1002320" [label="(Literal,0x5)"];
"1002882" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1002040" [label="(Call,op->operands[1].regs[0] == X86R_UNDEFINED)"];
"1003167" [label="(ControlStructure,if (op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP))"];
"1002913" [label="(Call,data[l++] = 0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1002188" [label="(ControlStructure,if (op->operands[1].regs[0] >= X86R_R8 &&\n\t\t\t    op->operands[0].reg < 4))"];
"1002561" [label="(Call,op->operands[0].reg << 3 | 0x4)"];
"1002305" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x5)"];
"1003168" [label="(Call,op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP)"];
"1002571" [label="(Literal,0x4)"];
"1002555" [label="(Block,)"];
"1002055" [label="(Identifier,a)"];
"1002934" [label="(Identifier,op)"];
"1002580" [label="(Call,data[l++] = op->operands[0].reg << 3 | 0x5)"];
"1002975" [label="(Call,op->operands[1].regs[0] == X86R_EIP)"];
"1003104" [label="(Call,op->operands[1].regs[0])"];
"1002642" [label="(Call,data[l++])"];
"1002238" [label="(Call,op->operands[1].regs[0] - 8)"];
"1002312" [label="(Call,op->operands[0].reg)"];
"1002914" [label="(Call,data[l++])"];
"1003212" [label="(Identifier,offset)"];
"1002266" [label="(Block,)"];
"1003205" [label="(Literal,16)"];
"1003039" [label="(Call,mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003062" [label="(ControlStructure,if (op->operands[1].regs[0] == X86R_ESP))"];
"1003142" [label="(Call,a->bits == 64)"];
"1003192" [label="(Identifier,data)"];
"1003198" [label="(Call,data[l++] = offset >> 16)"];
"1003190" [label="(Call,data[l++] = offset >> 8)"];
"1002030" [label="(Call,op->operands[0].reg == X86R_EAX && op->operands[1].regs[0] == X86R_UNDEFINED)"];
"1000104" [label="(MethodParameterIn,ut8 *data)"];
"1002562" [label="(Call,op->operands[0].reg << 3)"];
"1002031" [label="(Call,op->operands[0].reg == X86R_EAX)"];
"1002039" [label="(Identifier,X86R_EAX)"];
"1002230" [label="(Call,op->operands[0].reg)"];
"1003162" [label="(Call,data[l++])"];
"1002190" [label="(Call,op->operands[1].regs[0] >= X86R_R8)"];
"1003064" [label="(Call,op->operands[1].regs[0])"];
"1002946" [label="(Call,0x40 | op->operands[1].regs[0])"];
"1002209" [label="(Literal,4)"];
"1003103" [label="(Call,op->operands[1].regs[0] == X86R_EIP)"];
"1002974" [label="(Call,op->operands[1].regs[0] == X86R_EIP && (op->operands[0].type & OT_DWORD))"];
"1003203" [label="(Call,offset >> 16)"];
"1002962" [label="(Identifier,op)"];
"1003147" [label="(Call,offset || op->operands[1].regs[0] == X86R_RIP)"];
"1002791" [label="(Call,op->operands[0].reg << 3 | 0x4)"];
"1003035" [label="(Call,data[l++])"];
"1003200" [label="(Identifier,data)"];
"1003141" [label="(Call,a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP))"];
"1003117" [label="(Identifier,data)"];
"1003179" [label="(Call,op->operands[1].regs[0])"];
"1002921" [label="(Call,op->operands[0].reg << 3)"];
"1003188" [label="(Identifier,X86R_RIP)"];
"1003178" [label="(Call,op->operands[1].regs[0] == X86R_RIP)"];
"1003057" [label="(Identifier,op)"];
"1002598" [label="(Identifier,data)"];
"1002785" [label="(Block,)"];
"1003004" [label="(Call,op->operands[1].regs[0] == X86R_RIP && (op->operands[0].type & OT_QWORD))"];
"1002311" [label="(Call,op->operands[0].reg << 3)"];
"1002224" [label="(Call,data[l++])"];
"1002918" [label="(Call,0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0])"];
"1003053" [label="(Call,op->operands[1].regs[0])"];
"1003140" [label="(ControlStructure,if (a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)))"];
"1003040" [label="(Call,mod << 5)"];
"1002581" [label="(Call,data[l++])"];
"1002800" [label="(Literal,3)"];
"1003215" [label="(Identifier,l)"];
"1003196" [label="(Identifier,offset)"];
"1002640" [label="(Block,)"];
"1003163" [label="(Identifier,data)"];
"1003206" [label="(Call,data[l++] = offset >> 24)"];
"1002648" [label="(Call,op->operands[0].reg)"];
"1002579" [label="(Block,)"];
"1003213" [label="(Literal,24)"];
"1003204" [label="(Identifier,offset)"];
"1003044" [label="(Call,op->operands[0].reg << 3)"];
"1002587" [label="(Call,op->operands[0].reg)"];
"1002253" [label="(Literal,1)"];
"1002586" [label="(Call,op->operands[0].reg << 3)"];
"1002912" [label="(Block,)"];
"1003173" [label="(Identifier,op)"];
"1002804" [label="(Identifier,data)"];
"1002563" [label="(Call,op->operands[0].reg)"];
"1002869" [label="(Call,offset && op->operands[0].type & OT_QWORD)"];
"1002210" [label="(Block,)"];
"1002641" [label="(Call,data[l++] = op->operands[0].reg << 3 | 4)"];
"1003191" [label="(Call,data[l++])"];
"1002213" [label="(Identifier,data)"];
"1003063" [label="(Call,op->operands[1].regs[0] == X86R_ESP)"];
"1002647" [label="(Call,op->operands[0].reg << 3)"];
"1003077" [label="(Identifier,data)"];
"1003113" [label="(Identifier,X86R_EIP)"];
"1002250" [label="(Identifier,l)"];
"1002306" [label="(Call,data[l++])"];
"1002792" [label="(Call,op->operands[0].reg << 3)"];
"1002237" [label="(Literal,3)"];
"1003094" [label="(Call,op->operands[1].offset > 128)"];
"1003148" [label="(Identifier,offset)"];
"1003169" [label="(Call,op->operands[1].offset > 127)"];
"1002922" [label="(Call,op->operands[0].reg)"];
"1002223" [label="(Call,data[l++] = op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8))"];
"1002585" [label="(Call,op->operands[0].reg << 3 | 0x5)"];
"1003092" [label="(ControlStructure,if (op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP))"];
"1003195" [label="(Call,offset >> 8)"];
"1002031" -> "1002030"  [label="AST: "];
"1002031" -> "1002039"  [label="CFG: "];
"1002032" -> "1002031"  [label="AST: "];
"1002039" -> "1002031"  [label="AST: "];
"1002045" -> "1002031"  [label="CFG: "];
"1002030" -> "1002031"  [label="CFG: "];
"1002031" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1003216"  [label="DDG: X86R_EAX"];
"1002031" -> "1002030"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002030"  [label="DDG: X86R_EAX"];
"1002031" -> "1002201"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002229"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002311"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002562"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002586"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002647"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002792"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1002921"  [label="DDG: op->operands[0].reg"];
"1002031" -> "1003044"  [label="DDG: op->operands[0].reg"];
"1002030" -> "1002029"  [label="AST: "];
"1002030" -> "1002040"  [label="CFG: "];
"1002040" -> "1002030"  [label="AST: "];
"1002055" -> "1002030"  [label="CFG: "];
"1002167" -> "1002030"  [label="CFG: "];
"1002030" -> "1003216"  [label="DDG: op->operands[0].reg == X86R_EAX && op->operands[1].regs[0] == X86R_UNDEFINED"];
"1002030" -> "1003216"  [label="DDG: op->operands[0].reg == X86R_EAX"];
"1002030" -> "1003216"  [label="DDG: op->operands[1].regs[0] == X86R_UNDEFINED"];
"1002040" -> "1002030"  [label="DDG: op->operands[1].regs[0]"];
"1002040" -> "1002030"  [label="DDG: X86R_UNDEFINED"];
"1002201" -> "1002189"  [label="AST: "];
"1002201" -> "1002209"  [label="CFG: "];
"1002202" -> "1002201"  [label="AST: "];
"1002209" -> "1002201"  [label="AST: "];
"1002189" -> "1002201"  [label="CFG: "];
"1002201" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002201" -> "1002189"  [label="DDG: op->operands[0].reg"];
"1002201" -> "1002189"  [label="DDG: 4"];
"1002201" -> "1002229"  [label="DDG: op->operands[0].reg"];
"1002189" -> "1002188"  [label="AST: "];
"1002189" -> "1002190"  [label="CFG: "];
"1002190" -> "1002189"  [label="AST: "];
"1002213" -> "1002189"  [label="CFG: "];
"1002253" -> "1002189"  [label="CFG: "];
"1002189" -> "1003216"  [label="DDG: op->operands[1].regs[0] >= X86R_R8"];
"1002189" -> "1003216"  [label="DDG: op->operands[0].reg < 4"];
"1002189" -> "1003216"  [label="DDG: op->operands[1].regs[0] >= X86R_R8 &&\n\t\t\t    op->operands[0].reg < 4"];
"1002190" -> "1002189"  [label="DDG: op->operands[1].regs[0]"];
"1002190" -> "1002189"  [label="DDG: X86R_R8"];
"1002229" -> "1002228"  [label="AST: "];
"1002229" -> "1002237"  [label="CFG: "];
"1002230" -> "1002229"  [label="AST: "];
"1002237" -> "1002229"  [label="AST: "];
"1002243" -> "1002229"  [label="CFG: "];
"1002229" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002229" -> "1002228"  [label="DDG: op->operands[0].reg"];
"1002229" -> "1002228"  [label="DDG: 3"];
"1002228" -> "1002223"  [label="AST: "];
"1002228" -> "1002238"  [label="CFG: "];
"1002238" -> "1002228"  [label="AST: "];
"1002223" -> "1002228"  [label="CFG: "];
"1002228" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002228" -> "1003216"  [label="DDG: op->operands[1].regs[0] - 8"];
"1002228" -> "1002223"  [label="DDG: op->operands[0].reg << 3"];
"1002228" -> "1002223"  [label="DDG: op->operands[1].regs[0] - 8"];
"1002238" -> "1002228"  [label="DDG: op->operands[1].regs[0]"];
"1002238" -> "1002228"  [label="DDG: 8"];
"1002223" -> "1002210"  [label="AST: "];
"1002224" -> "1002223"  [label="AST: "];
"1002250" -> "1002223"  [label="CFG: "];
"1002223" -> "1003216"  [label="DDG: data[l++]"];
"1002223" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | (op->operands[1].regs[0] - 8)"];
"1000104" -> "1002223"  [label="DDG: data"];
"1002311" -> "1002310"  [label="AST: "];
"1002311" -> "1002319"  [label="CFG: "];
"1002312" -> "1002311"  [label="AST: "];
"1002319" -> "1002311"  [label="AST: "];
"1002320" -> "1002311"  [label="CFG: "];
"1002311" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002311" -> "1002310"  [label="DDG: op->operands[0].reg"];
"1002311" -> "1002310"  [label="DDG: 3"];
"1002310" -> "1002305"  [label="AST: "];
"1002310" -> "1002320"  [label="CFG: "];
"1002320" -> "1002310"  [label="AST: "];
"1002305" -> "1002310"  [label="CFG: "];
"1002310" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002310" -> "1002305"  [label="DDG: op->operands[0].reg << 3"];
"1002310" -> "1002305"  [label="DDG: 0x5"];
"1002305" -> "1002266"  [label="AST: "];
"1002306" -> "1002305"  [label="AST: "];
"1002323" -> "1002305"  [label="CFG: "];
"1002305" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | 0x5"];
"1000104" -> "1002305"  [label="DDG: data"];
"1002562" -> "1002561"  [label="AST: "];
"1002562" -> "1002570"  [label="CFG: "];
"1002563" -> "1002562"  [label="AST: "];
"1002570" -> "1002562"  [label="AST: "];
"1002571" -> "1002562"  [label="CFG: "];
"1002562" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002562" -> "1002561"  [label="DDG: op->operands[0].reg"];
"1002562" -> "1002561"  [label="DDG: 3"];
"1002561" -> "1002556"  [label="AST: "];
"1002561" -> "1002571"  [label="CFG: "];
"1002571" -> "1002561"  [label="AST: "];
"1002556" -> "1002561"  [label="CFG: "];
"1002561" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002561" -> "1002556"  [label="DDG: op->operands[0].reg << 3"];
"1002561" -> "1002556"  [label="DDG: 0x4"];
"1002556" -> "1002555"  [label="AST: "];
"1002557" -> "1002556"  [label="AST: "];
"1002574" -> "1002556"  [label="CFG: "];
"1002556" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | 0x4"];
"1000104" -> "1002556"  [label="DDG: data"];
"1002586" -> "1002585"  [label="AST: "];
"1002586" -> "1002594"  [label="CFG: "];
"1002587" -> "1002586"  [label="AST: "];
"1002594" -> "1002586"  [label="AST: "];
"1002595" -> "1002586"  [label="CFG: "];
"1002586" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002586" -> "1002585"  [label="DDG: op->operands[0].reg"];
"1002586" -> "1002585"  [label="DDG: 3"];
"1002585" -> "1002580"  [label="AST: "];
"1002585" -> "1002595"  [label="CFG: "];
"1002595" -> "1002585"  [label="AST: "];
"1002580" -> "1002585"  [label="CFG: "];
"1002585" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002585" -> "1002580"  [label="DDG: op->operands[0].reg << 3"];
"1002585" -> "1002580"  [label="DDG: 0x5"];
"1002580" -> "1002579"  [label="AST: "];
"1002581" -> "1002580"  [label="AST: "];
"1002598" -> "1002580"  [label="CFG: "];
"1002580" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | 0x5"];
"1000104" -> "1002580"  [label="DDG: data"];
"1002647" -> "1002646"  [label="AST: "];
"1002647" -> "1002655"  [label="CFG: "];
"1002648" -> "1002647"  [label="AST: "];
"1002655" -> "1002647"  [label="AST: "];
"1002656" -> "1002647"  [label="CFG: "];
"1002647" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002647" -> "1002646"  [label="DDG: op->operands[0].reg"];
"1002647" -> "1002646"  [label="DDG: 3"];
"1002646" -> "1002641"  [label="AST: "];
"1002646" -> "1002656"  [label="CFG: "];
"1002656" -> "1002646"  [label="AST: "];
"1002641" -> "1002646"  [label="CFG: "];
"1002646" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002646" -> "1002641"  [label="DDG: op->operands[0].reg << 3"];
"1002646" -> "1002641"  [label="DDG: 4"];
"1002641" -> "1002640"  [label="AST: "];
"1002642" -> "1002641"  [label="AST: "];
"1002663" -> "1002641"  [label="CFG: "];
"1002641" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | 4"];
"1000104" -> "1002641"  [label="DDG: data"];
"1002792" -> "1002791"  [label="AST: "];
"1002792" -> "1002800"  [label="CFG: "];
"1002793" -> "1002792"  [label="AST: "];
"1002800" -> "1002792"  [label="AST: "];
"1002801" -> "1002792"  [label="CFG: "];
"1002792" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002792" -> "1002791"  [label="DDG: op->operands[0].reg"];
"1002792" -> "1002791"  [label="DDG: 3"];
"1002791" -> "1002786"  [label="AST: "];
"1002791" -> "1002801"  [label="CFG: "];
"1002801" -> "1002791"  [label="AST: "];
"1002786" -> "1002791"  [label="CFG: "];
"1002791" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002791" -> "1002786"  [label="DDG: op->operands[0].reg << 3"];
"1002791" -> "1002786"  [label="DDG: 0x4"];
"1002786" -> "1002785"  [label="AST: "];
"1002787" -> "1002786"  [label="AST: "];
"1002804" -> "1002786"  [label="CFG: "];
"1002786" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | 0x4"];
"1000104" -> "1002786"  [label="DDG: data"];
"1002921" -> "1002920"  [label="AST: "];
"1002921" -> "1002929"  [label="CFG: "];
"1002922" -> "1002921"  [label="AST: "];
"1002929" -> "1002921"  [label="AST: "];
"1002934" -> "1002921"  [label="CFG: "];
"1002921" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1002921" -> "1002920"  [label="DDG: op->operands[0].reg"];
"1002921" -> "1002920"  [label="DDG: 3"];
"1002920" -> "1002918"  [label="AST: "];
"1002920" -> "1002930"  [label="CFG: "];
"1002930" -> "1002920"  [label="AST: "];
"1002918" -> "1002920"  [label="CFG: "];
"1002920" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1002920" -> "1002918"  [label="DDG: op->operands[0].reg << 3"];
"1002920" -> "1002918"  [label="DDG: op->operands[1].regs[0]"];
"1002882" -> "1002920"  [label="DDG: op->operands[1].regs[0]"];
"1002920" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1002918" -> "1002913"  [label="AST: "];
"1002919" -> "1002918"  [label="AST: "];
"1002913" -> "1002918"  [label="CFG: "];
"1002918" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1002918" -> "1002913"  [label="DDG: 0x80"];
"1002918" -> "1002913"  [label="DDG: op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1002913" -> "1002912"  [label="AST: "];
"1002914" -> "1002913"  [label="AST: "];
"1002962" -> "1002913"  [label="CFG: "];
"1002913" -> "1003216"  [label="DDG: data[l++]"];
"1002913" -> "1003216"  [label="DDG: 0x80 | op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1000104" -> "1002913"  [label="DDG: data"];
"1003063" -> "1003062"  [label="AST: "];
"1003063" -> "1003073"  [label="CFG: "];
"1003064" -> "1003063"  [label="AST: "];
"1003073" -> "1003063"  [label="AST: "];
"1003077" -> "1003063"  [label="CFG: "];
"1003083" -> "1003063"  [label="CFG: "];
"1003063" -> "1003216"  [label="DDG: op->operands[1].regs[0]"];
"1003063" -> "1003216"  [label="DDG: X86R_ESP"];
"1003063" -> "1003216"  [label="DDG: op->operands[1].regs[0] == X86R_ESP"];
"1003043" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1002946" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1003005" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1002882" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1002975" -> "1003063"  [label="DDG: op->operands[1].regs[0]"];
"1003063" -> "1003103"  [label="DDG: op->operands[1].regs[0]"];
"1003063" -> "1003149"  [label="DDG: op->operands[1].regs[0]"];
"1003063" -> "1003178"  [label="DDG: op->operands[1].regs[0]"];
"1003103" -> "1003093"  [label="AST: "];
"1003103" -> "1003113"  [label="CFG: "];
"1003104" -> "1003103"  [label="AST: "];
"1003113" -> "1003103"  [label="AST: "];
"1003093" -> "1003103"  [label="CFG: "];
"1003103" -> "1003216"  [label="DDG: op->operands[1].regs[0]"];
"1003103" -> "1003216"  [label="DDG: X86R_EIP"];
"1003103" -> "1003093"  [label="DDG: op->operands[1].regs[0]"];
"1003103" -> "1003093"  [label="DDG: X86R_EIP"];
"1002975" -> "1003103"  [label="DDG: X86R_EIP"];
"1003093" -> "1003092"  [label="AST: "];
"1003093" -> "1003094"  [label="CFG: "];
"1003094" -> "1003093"  [label="AST: "];
"1003117" -> "1003093"  [label="CFG: "];
"1003215" -> "1003093"  [label="CFG: "];
"1003093" -> "1003216"  [label="DDG: op->operands[1].offset > 128"];
"1003093" -> "1003216"  [label="DDG: op->operands[1].offset > 128 || op->operands[1].regs[0] == X86R_EIP"];
"1003093" -> "1003216"  [label="DDG: op->operands[1].regs[0] == X86R_EIP"];
"1003094" -> "1003093"  [label="DDG: op->operands[1].offset"];
"1003094" -> "1003093"  [label="DDG: 128"];
"1002974" -> "1003093"  [label="DDG: op->operands[1].regs[0] == X86R_EIP"];
"1003149" -> "1003147"  [label="AST: "];
"1003149" -> "1003159"  [label="CFG: "];
"1003150" -> "1003149"  [label="AST: "];
"1003159" -> "1003149"  [label="AST: "];
"1003147" -> "1003149"  [label="CFG: "];
"1003149" -> "1003216"  [label="DDG: op->operands[1].regs[0]"];
"1003149" -> "1003216"  [label="DDG: X86R_RIP"];
"1003149" -> "1003147"  [label="DDG: op->operands[1].regs[0]"];
"1003149" -> "1003147"  [label="DDG: X86R_RIP"];
"1002882" -> "1003149"  [label="DDG: X86R_RIP"];
"1003005" -> "1003149"  [label="DDG: X86R_RIP"];
"1003149" -> "1003178"  [label="DDG: op->operands[1].regs[0]"];
"1003149" -> "1003178"  [label="DDG: X86R_RIP"];
"1003147" -> "1003141"  [label="AST: "];
"1003147" -> "1003148"  [label="CFG: "];
"1003148" -> "1003147"  [label="AST: "];
"1003141" -> "1003147"  [label="CFG: "];
"1003147" -> "1003216"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003147" -> "1003216"  [label="DDG: offset"];
"1003147" -> "1003141"  [label="DDG: offset"];
"1003147" -> "1003141"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1002831" -> "1003147"  [label="DDG: offset"];
"1002869" -> "1003147"  [label="DDG: offset"];
"1002882" -> "1003147"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003004" -> "1003147"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003147" -> "1003161"  [label="DDG: offset"];
"1003147" -> "1003168"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003147" -> "1003195"  [label="DDG: offset"];
"1003141" -> "1003140"  [label="AST: "];
"1003141" -> "1003142"  [label="CFG: "];
"1003142" -> "1003141"  [label="AST: "];
"1003163" -> "1003141"  [label="CFG: "];
"1003215" -> "1003141"  [label="CFG: "];
"1003141" -> "1003216"  [label="DDG: a->bits == 64 && (offset || op->operands[1].regs[0] == X86R_RIP)"];
"1003141" -> "1003216"  [label="DDG: offset || op->operands[1].regs[0] == X86R_RIP"];
"1003141" -> "1003216"  [label="DDG: a->bits == 64"];
"1003142" -> "1003141"  [label="DDG: a->bits"];
"1003142" -> "1003141"  [label="DDG: 64"];
"1003161" -> "1003160"  [label="AST: "];
"1003161" -> "1003166"  [label="CFG: "];
"1003162" -> "1003161"  [label="AST: "];
"1003166" -> "1003161"  [label="AST: "];
"1003173" -> "1003161"  [label="CFG: "];
"1003161" -> "1003216"  [label="DDG: data[l++]"];
"1003161" -> "1003216"  [label="DDG: offset"];
"1002831" -> "1003161"  [label="DDG: offset"];
"1002869" -> "1003161"  [label="DDG: offset"];
"1000104" -> "1003161"  [label="DDG: data"];
"1003168" -> "1003167"  [label="AST: "];
"1003168" -> "1003169"  [label="CFG: "];
"1003168" -> "1003178"  [label="CFG: "];
"1003169" -> "1003168"  [label="AST: "];
"1003178" -> "1003168"  [label="AST: "];
"1003192" -> "1003168"  [label="CFG: "];
"1003215" -> "1003168"  [label="CFG: "];
"1003168" -> "1003216"  [label="DDG: op->operands[1].offset > 127"];
"1003168" -> "1003216"  [label="DDG: op->operands[1].offset > 127 || op->operands[1].regs[0] == X86R_RIP"];
"1003168" -> "1003216"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003169" -> "1003168"  [label="DDG: op->operands[1].offset"];
"1003169" -> "1003168"  [label="DDG: 127"];
"1002882" -> "1003168"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003004" -> "1003168"  [label="DDG: op->operands[1].regs[0] == X86R_RIP"];
"1003178" -> "1003168"  [label="DDG: op->operands[1].regs[0]"];
"1003178" -> "1003168"  [label="DDG: X86R_RIP"];
"1003195" -> "1003190"  [label="AST: "];
"1003195" -> "1003197"  [label="CFG: "];
"1003196" -> "1003195"  [label="AST: "];
"1003197" -> "1003195"  [label="AST: "];
"1003190" -> "1003195"  [label="CFG: "];
"1003195" -> "1003190"  [label="DDG: offset"];
"1003195" -> "1003190"  [label="DDG: 8"];
"1002831" -> "1003195"  [label="DDG: offset"];
"1002869" -> "1003195"  [label="DDG: offset"];
"1003195" -> "1003203"  [label="DDG: offset"];
"1003190" -> "1003189"  [label="AST: "];
"1003191" -> "1003190"  [label="AST: "];
"1003200" -> "1003190"  [label="CFG: "];
"1003190" -> "1003216"  [label="DDG: offset >> 8"];
"1000104" -> "1003190"  [label="DDG: data"];
"1003203" -> "1003198"  [label="AST: "];
"1003203" -> "1003205"  [label="CFG: "];
"1003204" -> "1003203"  [label="AST: "];
"1003205" -> "1003203"  [label="AST: "];
"1003198" -> "1003203"  [label="CFG: "];
"1003203" -> "1003198"  [label="DDG: offset"];
"1003203" -> "1003198"  [label="DDG: 16"];
"1003203" -> "1003211"  [label="DDG: offset"];
"1003198" -> "1003189"  [label="AST: "];
"1003199" -> "1003198"  [label="AST: "];
"1003208" -> "1003198"  [label="CFG: "];
"1003198" -> "1003216"  [label="DDG: offset >> 16"];
"1000104" -> "1003198"  [label="DDG: data"];
"1003211" -> "1003206"  [label="AST: "];
"1003211" -> "1003213"  [label="CFG: "];
"1003212" -> "1003211"  [label="AST: "];
"1003213" -> "1003211"  [label="AST: "];
"1003206" -> "1003211"  [label="CFG: "];
"1003211" -> "1003216"  [label="DDG: offset"];
"1003211" -> "1003206"  [label="DDG: offset"];
"1003211" -> "1003206"  [label="DDG: 24"];
"1003206" -> "1003189"  [label="AST: "];
"1003207" -> "1003206"  [label="AST: "];
"1003215" -> "1003206"  [label="CFG: "];
"1003206" -> "1003216"  [label="DDG: data[l++]"];
"1003206" -> "1003216"  [label="DDG: offset >> 24"];
"1000104" -> "1003206"  [label="DDG: data"];
"1003178" -> "1003188"  [label="CFG: "];
"1003179" -> "1003178"  [label="AST: "];
"1003188" -> "1003178"  [label="AST: "];
"1003178" -> "1003216"  [label="DDG: X86R_RIP"];
"1003178" -> "1003216"  [label="DDG: op->operands[1].regs[0]"];
"1002882" -> "1003178"  [label="DDG: X86R_RIP"];
"1003005" -> "1003178"  [label="DDG: X86R_RIP"];
"1003044" -> "1003043"  [label="AST: "];
"1003044" -> "1003052"  [label="CFG: "];
"1003045" -> "1003044"  [label="AST: "];
"1003052" -> "1003044"  [label="AST: "];
"1003057" -> "1003044"  [label="CFG: "];
"1003044" -> "1003216"  [label="DDG: op->operands[0].reg"];
"1003044" -> "1003043"  [label="DDG: op->operands[0].reg"];
"1003044" -> "1003043"  [label="DDG: 3"];
"1003043" -> "1003039"  [label="AST: "];
"1003043" -> "1003053"  [label="CFG: "];
"1003053" -> "1003043"  [label="AST: "];
"1003039" -> "1003043"  [label="CFG: "];
"1003043" -> "1003216"  [label="DDG: op->operands[0].reg << 3"];
"1003043" -> "1003039"  [label="DDG: op->operands[0].reg << 3"];
"1003043" -> "1003039"  [label="DDG: op->operands[1].regs[0]"];
"1003005" -> "1003043"  [label="DDG: op->operands[1].regs[0]"];
"1003039" -> "1003034"  [label="AST: "];
"1003040" -> "1003039"  [label="AST: "];
"1003034" -> "1003039"  [label="CFG: "];
"1003039" -> "1003216"  [label="DDG: mod << 5"];
"1003039" -> "1003216"  [label="DDG: op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1003039" -> "1003034"  [label="DDG: mod << 5"];
"1003039" -> "1003034"  [label="DDG: op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1003040" -> "1003039"  [label="DDG: mod"];
"1003040" -> "1003039"  [label="DDG: 5"];
"1003034" -> "1003033"  [label="AST: "];
"1003035" -> "1003034"  [label="AST: "];
"1003068" -> "1003034"  [label="CFG: "];
"1003034" -> "1003216"  [label="DDG: mod << 5 | op->operands[0].reg << 3 | op->operands[1].regs[0]"];
"1003034" -> "1003216"  [label="DDG: data[l++]"];
"1000104" -> "1003034"  [label="DDG: data"];
}
