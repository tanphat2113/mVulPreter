digraph "0_file_6f737ddfadb596d7d4a993f7ed2141ffd664a81c@API" {
"1000150" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m) == -1)"];
"1000151" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m))"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000130" [label="(Call,*p = &ms->ms_value)"];
"1000157" [label="(Call,m->flag & INDIR)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1000163" [label="(Call,(uint32_t)(offset + o))"];
"1000118" [label="(Call,offset = ms->offset)"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1000168" [label="(Call,(uint32_t)nbytes)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1000105" [label="(MethodParameterIn,struct magic *m)"];
"1000172" [label="(Call,-1)"];
"1000165" [label="(Call,offset + o)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1000531" [label="(Call,OFFSET_OOB(nbytes, offset, 2))"];
"1001518" [label="(Call,nbytes < offset)"];
"1001083" [label="(Call,OFFSET_OOB(nbytes, offset, 4))"];
"1000139" [label="(Identifier,recursion_level)"];
"1000176" [label="(Literal,1)"];
"1001755" [label="(MethodReturn,RET)"];
"1000116" [label="(Block,)"];
"1001575" [label="(Call,file_pop_buffer(ms, pb))"];
"1000170" [label="(Identifier,nbytes)"];
"1001442" [label="(Call,file_mdump(m))"];
"1001695" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001358" [label="(Call,offset += ms->c.li[cont_level-1].off)"];
"1000152" [label="(Identifier,ms)"];
"1001619" [label="(Call,file_printf(ms, \"%s\", rbuf))"];
"1000118" [label="(Call,offset = ms->offset)"];
"1001532" [label="(Call,nbytes < offset)"];
"1001403" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, m))"];
"1001747" [label="(Call,mconvert(ms, m, flip))"];
"1000173" [label="(Literal,1)"];
"1000207" [label="(Call,file_mdump(m))"];
"1001549" [label="(Call,file_softmagic(ms, s + offset, nbytes - offset,\n \t\t    recursion_level, BINTEST, text))"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1000158" [label="(Call,m->flag)"];
"1000154" [label="(Call,m->type)"];
"1000425" [label="(Call,OFFSET_OOB(nbytes, offset, 1))"];
"1000186" [label="(Call,fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"\n\t\t    SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\n\",\n\t\t    m->type, m->flag, offset, o, nbytes))"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000151" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m))"];
"1000181" [label="(Identifier,ms)"];
"1000210" [label="(Call,m->flag & INDIR)"];
"1000634" [label="(Call,OFFSET_OOB(nbytes, offset, 2))"];
"1000150" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m) == -1)"];
"1000171" [label="(Identifier,m)"];
"1001551" [label="(Call,s + offset)"];
"1000131" [label="(Identifier,p)"];
"1000964" [label="(Call,OFFSET_OOB(nbytes, offset, 4))"];
"1001319" [label="(Call,offset >>  0)"];
"1001728" [label="(Call,file_printf(ms, \"%s\", m->desc))"];
"1001451" [label="(Call,OFFSET_OOB(nbytes, offset, 1))"];
"1000844" [label="(Call,OFFSET_OOB(nbytes, offset, 4))"];
"1000737" [label="(Call,OFFSET_OOB(nbytes, offset, 2))"];
"1001462" [label="(Call,OFFSET_OOB(nbytes, offset, 2))"];
"1001526" [label="(Call,offset == 0)"];
"1001202" [label="(Call,OFFSET_OOB(nbytes, offset, 4))"];
"1001602" [label="(Call,file_printf(ms, F(ms, m, \"%u\"), offset))"];
"1000162" [label="(Identifier,s)"];
"1000149" [label="(ControlStructure,if (mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m) == -1))"];
"1000153" [label="(Identifier,p)"];
"1000202" [label="(Call,(void *)p)"];
"1001507" [label="(Call,OFFSET_OOB(nbytes, offset, m->vallen))"];
"1000142" [label="(Call,file_error(ms, 0, \"recursion nesting exceeded\"))"];
"1001496" [label="(Call,OFFSET_OOB(nbytes, offset, 8))"];
"1001604" [label="(Call,F(ms, m, \"%u\"))"];
"1001485" [label="(Call,OFFSET_OOB(nbytes, offset, 4))"];
"1001705" [label="(Call,offset + o)"];
"1000130" [label="(Call,*p = &ms->ms_value)"];
"1000105" [label="(MethodParameterIn,struct magic *m)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1001663" [label="(Call,file_magicfind(ms, rbuf, &ml))"];
"1000157" [label="(Call,m->flag & INDIR)"];
"1000161" [label="(Identifier,INDIR)"];
"1000132" [label="(Call,&ms->ms_value)"];
"1001541" [label="(Call,file_push_buffer(ms))"];
"1001637" [label="(Call,nbytes < offset)"];
"1001554" [label="(Call,nbytes - offset)"];
"1000168" [label="(Call,(uint32_t)nbytes)"];
"1000120" [label="(Call,ms->offset)"];
"1001671" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", rbuf))"];
"1000119" [label="(Identifier,offset)"];
"1000172" [label="(Call,-1)"];
"1000163" [label="(Call,(uint32_t)(offset + o))"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000172"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000172" -> "1000150"  [label="AST: "];
"1000176" -> "1000150"  [label="CFG: "];
"1000181" -> "1000150"  [label="CFG: "];
"1000150" -> "1001755"  [label="DDG: -1"];
"1000150" -> "1001755"  [label="DDG: mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m)"];
"1000150" -> "1001755"  [label="DDG: mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m) == -1"];
"1000151" -> "1000150"  [label="DDG: s"];
"1000151" -> "1000150"  [label="DDG: ms"];
"1000151" -> "1000150"  [label="DDG: (uint32_t)(offset + o)"];
"1000151" -> "1000150"  [label="DDG: m->flag & INDIR"];
"1000151" -> "1000150"  [label="DDG: m->type"];
"1000151" -> "1000150"  [label="DDG: m"];
"1000151" -> "1000150"  [label="DDG: p"];
"1000151" -> "1000150"  [label="DDG: (uint32_t)nbytes"];
"1000172" -> "1000150"  [label="DDG: 1"];
"1000151" -> "1000171"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="AST: "];
"1000162" -> "1000151"  [label="AST: "];
"1000163" -> "1000151"  [label="AST: "];
"1000168" -> "1000151"  [label="AST: "];
"1000171" -> "1000151"  [label="AST: "];
"1000173" -> "1000151"  [label="CFG: "];
"1000151" -> "1001755"  [label="DDG: (uint32_t)nbytes"];
"1000151" -> "1001755"  [label="DDG: m->flag & INDIR"];
"1000151" -> "1001755"  [label="DDG: ms"];
"1000151" -> "1001755"  [label="DDG: p"];
"1000151" -> "1001755"  [label="DDG: m->type"];
"1000151" -> "1001755"  [label="DDG: m"];
"1000151" -> "1001755"  [label="DDG: (uint32_t)(offset + o)"];
"1000151" -> "1001755"  [label="DDG: s"];
"1000103" -> "1000151"  [label="DDG: ms"];
"1000130" -> "1000151"  [label="DDG: p"];
"1000157" -> "1000151"  [label="DDG: m->flag"];
"1000157" -> "1000151"  [label="DDG: INDIR"];
"1000104" -> "1000151"  [label="DDG: s"];
"1000163" -> "1000151"  [label="DDG: offset + o"];
"1000168" -> "1000151"  [label="DDG: nbytes"];
"1000105" -> "1000151"  [label="DDG: m"];
"1000151" -> "1000186"  [label="DDG: m->type"];
"1000151" -> "1000202"  [label="DDG: p"];
"1000151" -> "1000207"  [label="DDG: m"];
"1000151" -> "1001403"  [label="DDG: ms"];
"1000151" -> "1001403"  [label="DDG: p"];
"1000151" -> "1001403"  [label="DDG: m->type"];
"1000151" -> "1001403"  [label="DDG: s"];
"1000151" -> "1001403"  [label="DDG: m"];
"1000151" -> "1001541"  [label="DDG: ms"];
"1000151" -> "1001549"  [label="DDG: s"];
"1000151" -> "1001551"  [label="DDG: s"];
"1000151" -> "1001604"  [label="DDG: m"];
"1000151" -> "1001663"  [label="DDG: ms"];
"1000151" -> "1001695"  [label="DDG: s"];
"1000151" -> "1001728"  [label="DDG: ms"];
"1000151" -> "1001747"  [label="DDG: ms"];
"1000151" -> "1001747"  [label="DDG: m"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1001755"  [label="DDG: ms"];
"1000103" -> "1000142"  [label="DDG: ms"];
"1000103" -> "1001403"  [label="DDG: ms"];
"1000103" -> "1001541"  [label="DDG: ms"];
"1000103" -> "1001549"  [label="DDG: ms"];
"1000103" -> "1001575"  [label="DDG: ms"];
"1000103" -> "1001602"  [label="DDG: ms"];
"1000103" -> "1001604"  [label="DDG: ms"];
"1000103" -> "1001619"  [label="DDG: ms"];
"1000103" -> "1001663"  [label="DDG: ms"];
"1000103" -> "1001671"  [label="DDG: ms"];
"1000103" -> "1001695"  [label="DDG: ms"];
"1000103" -> "1001728"  [label="DDG: ms"];
"1000103" -> "1001747"  [label="DDG: ms"];
"1000130" -> "1000116"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000139" -> "1000130"  [label="CFG: "];
"1000130" -> "1001755"  [label="DDG: &ms->ms_value"];
"1000130" -> "1001755"  [label="DDG: p"];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000157" -> "1001755"  [label="DDG: m->flag"];
"1000157" -> "1001755"  [label="DDG: INDIR"];
"1000157" -> "1000186"  [label="DDG: m->flag"];
"1000157" -> "1000210"  [label="DDG: m->flag"];
"1000157" -> "1000210"  [label="DDG: INDIR"];
"1000104" -> "1000102"  [label="AST: "];
"1000104" -> "1001755"  [label="DDG: s"];
"1000104" -> "1001403"  [label="DDG: s"];
"1000104" -> "1001549"  [label="DDG: s"];
"1000104" -> "1001551"  [label="DDG: s"];
"1000104" -> "1001695"  [label="DDG: s"];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000169" -> "1000163"  [label="CFG: "];
"1000163" -> "1001755"  [label="DDG: offset + o"];
"1000118" -> "1000163"  [label="DDG: offset"];
"1000107" -> "1000163"  [label="DDG: o"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000131" -> "1000118"  [label="CFG: "];
"1000118" -> "1001755"  [label="DDG: ms->offset"];
"1000118" -> "1001755"  [label="DDG: offset"];
"1000118" -> "1000165"  [label="DDG: offset"];
"1000118" -> "1000186"  [label="DDG: offset"];
"1000118" -> "1000425"  [label="DDG: offset"];
"1000118" -> "1000531"  [label="DDG: offset"];
"1000118" -> "1000634"  [label="DDG: offset"];
"1000118" -> "1000737"  [label="DDG: offset"];
"1000118" -> "1000844"  [label="DDG: offset"];
"1000118" -> "1000964"  [label="DDG: offset"];
"1000118" -> "1001083"  [label="DDG: offset"];
"1000118" -> "1001202"  [label="DDG: offset"];
"1000118" -> "1001319"  [label="DDG: offset"];
"1000118" -> "1001358"  [label="DDG: offset"];
"1000118" -> "1001403"  [label="DDG: offset"];
"1000118" -> "1001451"  [label="DDG: offset"];
"1000118" -> "1001462"  [label="DDG: offset"];
"1000118" -> "1001485"  [label="DDG: offset"];
"1000118" -> "1001496"  [label="DDG: offset"];
"1000118" -> "1001507"  [label="DDG: offset"];
"1000118" -> "1001518"  [label="DDG: offset"];
"1000118" -> "1001526"  [label="DDG: offset"];
"1000118" -> "1001637"  [label="DDG: offset"];
"1000107" -> "1000102"  [label="AST: "];
"1000107" -> "1001755"  [label="DDG: o"];
"1000107" -> "1000165"  [label="DDG: o"];
"1000107" -> "1000186"  [label="DDG: o"];
"1000107" -> "1001695"  [label="DDG: o"];
"1000107" -> "1001705"  [label="DDG: o"];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="CFG: "];
"1000168" -> "1001755"  [label="DDG: nbytes"];
"1000106" -> "1000168"  [label="DDG: nbytes"];
"1000168" -> "1000186"  [label="DDG: nbytes"];
"1000168" -> "1000425"  [label="DDG: nbytes"];
"1000168" -> "1000531"  [label="DDG: nbytes"];
"1000168" -> "1000634"  [label="DDG: nbytes"];
"1000168" -> "1000737"  [label="DDG: nbytes"];
"1000168" -> "1000844"  [label="DDG: nbytes"];
"1000168" -> "1000964"  [label="DDG: nbytes"];
"1000168" -> "1001083"  [label="DDG: nbytes"];
"1000168" -> "1001202"  [label="DDG: nbytes"];
"1000168" -> "1001403"  [label="DDG: nbytes"];
"1000168" -> "1001451"  [label="DDG: nbytes"];
"1000168" -> "1001462"  [label="DDG: nbytes"];
"1000168" -> "1001485"  [label="DDG: nbytes"];
"1000168" -> "1001496"  [label="DDG: nbytes"];
"1000168" -> "1001507"  [label="DDG: nbytes"];
"1000168" -> "1001518"  [label="DDG: nbytes"];
"1000168" -> "1001532"  [label="DDG: nbytes"];
"1000168" -> "1001637"  [label="DDG: nbytes"];
"1000106" -> "1000102"  [label="AST: "];
"1000106" -> "1001755"  [label="DDG: nbytes"];
"1000106" -> "1000186"  [label="DDG: nbytes"];
"1000106" -> "1000425"  [label="DDG: nbytes"];
"1000106" -> "1000531"  [label="DDG: nbytes"];
"1000106" -> "1000634"  [label="DDG: nbytes"];
"1000106" -> "1000737"  [label="DDG: nbytes"];
"1000106" -> "1000844"  [label="DDG: nbytes"];
"1000106" -> "1000964"  [label="DDG: nbytes"];
"1000106" -> "1001083"  [label="DDG: nbytes"];
"1000106" -> "1001202"  [label="DDG: nbytes"];
"1000106" -> "1001403"  [label="DDG: nbytes"];
"1000106" -> "1001451"  [label="DDG: nbytes"];
"1000106" -> "1001462"  [label="DDG: nbytes"];
"1000106" -> "1001485"  [label="DDG: nbytes"];
"1000106" -> "1001496"  [label="DDG: nbytes"];
"1000106" -> "1001507"  [label="DDG: nbytes"];
"1000106" -> "1001518"  [label="DDG: nbytes"];
"1000106" -> "1001532"  [label="DDG: nbytes"];
"1000106" -> "1001554"  [label="DDG: nbytes"];
"1000106" -> "1001637"  [label="DDG: nbytes"];
"1000106" -> "1001695"  [label="DDG: nbytes"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1001755"  [label="DDG: m"];
"1000105" -> "1000207"  [label="DDG: m"];
"1000105" -> "1001403"  [label="DDG: m"];
"1000105" -> "1001442"  [label="DDG: m"];
"1000105" -> "1001604"  [label="DDG: m"];
"1000105" -> "1001747"  [label="DDG: m"];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
}
