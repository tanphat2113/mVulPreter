digraph "0_linux_a0ac402cfcdc904f9772e1762b3fda112dcc56a0@pointer" {
"1000164" [label="(Call,__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy))"];
"1000102" [label="(MethodParameterIn,struct request *rq)"];
"1000103" [label="(MethodParameterIn,struct rq_map_data *map_data)"];
"1000182" [label="(Call,iov_iter_count(&i))"];
"1000164" [label="(Call,__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy))"];
"1000105" [label="(MethodParameterIn,gfp_t gfp_mask)"];
"1000133" [label="(Call,copy = true)"];
"1000142" [label="(Call,copy = true)"];
"1000108" [label="(Call,copy = false)"];
"1000149" [label="(Call,copy = queue_virt_boundary(q) & iov_iter_gap_alignment(iter))"];
"1000151" [label="(Call,queue_virt_boundary(q) & iov_iter_gap_alignment(iter))"];
"1000152" [label="(Call,queue_virt_boundary(q))"];
"1000147" [label="(Call,queue_virt_boundary(q))"];
"1000118" [label="(Call,queue_dma_alignment(q))"];
"1000101" [label="(MethodParameterIn,struct request_queue *q)"];
"1000154" [label="(Call,iov_iter_gap_alignment(iter))"];
"1000139" [label="(Call,iov_iter_alignment(iter))"];
"1000128" [label="(Call,iter_is_iovec(iter))"];
"1000104" [label="(MethodParameterIn,const struct iov_iter *iter)"];
"1000162" [label="(Call,ret =__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy))"];
"1000154" [label="(Call,iov_iter_gap_alignment(iter))"];
"1000128" [label="(Call,iter_is_iovec(iter))"];
"1000135" [label="(Identifier,true)"];
"1000142" [label="(Call,copy = true)"];
"1000148" [label="(Identifier,q)"];
"1000101" [label="(MethodParameterIn,struct request_queue *q)"];
"1000138" [label="(Call,iov_iter_alignment(iter) & align)"];
"1000110" [label="(Identifier,false)"];
"1000182" [label="(Call,iov_iter_count(&i))"];
"1000119" [label="(Identifier,q)"];
"1000163" [label="(Identifier,ret)"];
"1000149" [label="(Call,copy = queue_virt_boundary(q) & iov_iter_gap_alignment(iter))"];
"1000109" [label="(Identifier,copy)"];
"1000155" [label="(Identifier,iter)"];
"1000169" [label="(Identifier,gfp_mask)"];
"1000113" [label="(Identifier,align)"];
"1000139" [label="(Call,iov_iter_alignment(iter))"];
"1000170" [label="(Identifier,copy)"];
"1000166" [label="(Identifier,map_data)"];
"1000108" [label="(Call,copy = false)"];
"1000152" [label="(Call,queue_virt_boundary(q))"];
"1000140" [label="(Identifier,iter)"];
"1000209" [label="(MethodReturn,int)"];
"1000162" [label="(Call,ret =__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy))"];
"1000161" [label="(Block,)"];
"1000151" [label="(Call,queue_virt_boundary(q) & iov_iter_gap_alignment(iter))"];
"1000131" [label="(ControlStructure,if (map_data))"];
"1000104" [label="(MethodParameterIn,const struct iov_iter *iter)"];
"1000144" [label="(Identifier,true)"];
"1000153" [label="(Identifier,q)"];
"1000143" [label="(Identifier,copy)"];
"1000150" [label="(Identifier,copy)"];
"1000160" [label="(ControlStructure,do)"];
"1000164" [label="(Call,__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy))"];
"1000137" [label="(ControlStructure,if (iov_iter_alignment(iter) & align))"];
"1000127" [label="(Call,!iter_is_iovec(iter))"];
"1000118" [label="(Call,queue_dma_alignment(q))"];
"1000165" [label="(Identifier,rq)"];
"1000146" [label="(ControlStructure,if (queue_virt_boundary(q)))"];
"1000141" [label="(Identifier,align)"];
"1000114" [label="(Call,q->dma_pad_mask | queue_dma_alignment(q))"];
"1000106" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,gfp_t gfp_mask)"];
"1000133" [label="(Call,copy = true)"];
"1000103" [label="(MethodParameterIn,struct rq_map_data *map_data)"];
"1000147" [label="(Call,queue_virt_boundary(q))"];
"1000129" [label="(Identifier,iter)"];
"1000167" [label="(Call,&i)"];
"1000183" [label="(Call,&i)"];
"1000102" [label="(MethodParameterIn,struct request *rq)"];
"1000134" [label="(Identifier,copy)"];
"1000157" [label="(Identifier,i)"];
"1000188" [label="(Identifier,bio)"];
"1000172" [label="(Identifier,ret)"];
"1000164" -> "1000162"  [label="AST: "];
"1000164" -> "1000170"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000167" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="AST: "];
"1000170" -> "1000164"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000164" -> "1000209"  [label="DDG: gfp_mask"];
"1000164" -> "1000209"  [label="DDG: map_data"];
"1000164" -> "1000209"  [label="DDG: &i"];
"1000164" -> "1000209"  [label="DDG: copy"];
"1000164" -> "1000209"  [label="DDG: rq"];
"1000164" -> "1000162"  [label="DDG: copy"];
"1000164" -> "1000162"  [label="DDG: map_data"];
"1000164" -> "1000162"  [label="DDG: gfp_mask"];
"1000164" -> "1000162"  [label="DDG: rq"];
"1000164" -> "1000162"  [label="DDG: &i"];
"1000102" -> "1000164"  [label="DDG: rq"];
"1000103" -> "1000164"  [label="DDG: map_data"];
"1000182" -> "1000164"  [label="DDG: &i"];
"1000105" -> "1000164"  [label="DDG: gfp_mask"];
"1000133" -> "1000164"  [label="DDG: copy"];
"1000142" -> "1000164"  [label="DDG: copy"];
"1000108" -> "1000164"  [label="DDG: copy"];
"1000149" -> "1000164"  [label="DDG: copy"];
"1000164" -> "1000182"  [label="DDG: &i"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000209"  [label="DDG: rq"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000209"  [label="DDG: map_data"];
"1000182" -> "1000160"  [label="AST: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000163" -> "1000182"  [label="CFG: "];
"1000188" -> "1000182"  [label="CFG: "];
"1000182" -> "1000209"  [label="DDG: iov_iter_count(&i)"];
"1000182" -> "1000209"  [label="DDG: &i"];
"1000105" -> "1000100"  [label="AST: "];
"1000105" -> "1000209"  [label="DDG: gfp_mask"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000157" -> "1000133"  [label="CFG: "];
"1000133" -> "1000209"  [label="DDG: true"];
"1000142" -> "1000137"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000157" -> "1000142"  [label="CFG: "];
"1000142" -> "1000209"  [label="DDG: true"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000110"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000110" -> "1000108"  [label="AST: "];
"1000113" -> "1000108"  [label="CFG: "];
"1000108" -> "1000209"  [label="DDG: false"];
"1000108" -> "1000209"  [label="DDG: copy"];
"1000149" -> "1000146"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000157" -> "1000149"  [label="CFG: "];
"1000149" -> "1000209"  [label="DDG: queue_virt_boundary(q) & iov_iter_gap_alignment(iter)"];
"1000151" -> "1000149"  [label="DDG: queue_virt_boundary(q)"];
"1000151" -> "1000149"  [label="DDG: iov_iter_gap_alignment(iter)"];
"1000151" -> "1000154"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000151" -> "1000209"  [label="DDG: iov_iter_gap_alignment(iter)"];
"1000151" -> "1000209"  [label="DDG: queue_virt_boundary(q)"];
"1000152" -> "1000151"  [label="DDG: q"];
"1000154" -> "1000151"  [label="DDG: iter"];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000152" -> "1000209"  [label="DDG: q"];
"1000147" -> "1000152"  [label="DDG: q"];
"1000101" -> "1000152"  [label="DDG: q"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000150" -> "1000147"  [label="CFG: "];
"1000157" -> "1000147"  [label="CFG: "];
"1000147" -> "1000209"  [label="DDG: q"];
"1000147" -> "1000209"  [label="DDG: queue_virt_boundary(q)"];
"1000118" -> "1000147"  [label="DDG: q"];
"1000101" -> "1000147"  [label="DDG: q"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000114" -> "1000118"  [label="CFG: "];
"1000118" -> "1000209"  [label="DDG: q"];
"1000118" -> "1000114"  [label="DDG: q"];
"1000101" -> "1000118"  [label="DDG: q"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000209"  [label="DDG: q"];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000154" -> "1000209"  [label="DDG: iter"];
"1000139" -> "1000154"  [label="DDG: iter"];
"1000104" -> "1000154"  [label="DDG: iter"];
"1000139" -> "1000138"  [label="AST: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="CFG: "];
"1000139" -> "1000209"  [label="DDG: iter"];
"1000139" -> "1000138"  [label="DDG: iter"];
"1000128" -> "1000139"  [label="DDG: iter"];
"1000104" -> "1000139"  [label="DDG: iter"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000129"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000209"  [label="DDG: iter"];
"1000128" -> "1000127"  [label="DDG: iter"];
"1000104" -> "1000128"  [label="DDG: iter"];
"1000104" -> "1000100"  [label="AST: "];
"1000104" -> "1000209"  [label="DDG: iter"];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000172" -> "1000162"  [label="CFG: "];
"1000162" -> "1000209"  [label="DDG: __blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy)"];
"1000162" -> "1000209"  [label="DDG: ret"];
}
