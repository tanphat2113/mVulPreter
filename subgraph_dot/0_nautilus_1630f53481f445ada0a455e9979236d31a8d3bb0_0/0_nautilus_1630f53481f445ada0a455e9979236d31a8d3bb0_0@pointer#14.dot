digraph "0_nautilus_1630f53481f445ada0a455e9979236d31a8d3bb0_0@pointer" {
"1000238" [label="(Call,primary = copy_job->is_move ? g_strdup (_(\"You cannot move a folder into itself.\"))\n                  : g_strdup (_(\"You cannot copy a folder into itself.\")))"];
"1000244" [label="(Call,g_strdup (_(\"You cannot move a folder into itself.\")))"];
"1000245" [label="(Call,_(\"You cannot move a folder into itself.\"))"];
"1000247" [label="(Call,g_strdup (_(\"You cannot copy a folder into itself.\")))"];
"1000248" [label="(Call,_(\"You cannot copy a folder into itself.\"))"];
"1000257" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000255" [label="(Call,response = run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000274" [label="(Call,response == 0)"];
"1000273" [label="(Call,response == 0 || response == GTK_RESPONSE_DELETE_EVENT)"];
"1000277" [label="(Call,response == GTK_RESPONSE_DELETE_EVENT)"];
"1000285" [label="(Call,response == 1)"];
"1000296" [label="(Call,response == 2)"];
"1000281" [label="(Call,abort_job (job))"];
"1000302" [label="(Call,g_assert_not_reached ())"];
"1000278" [label="(Identifier,response)"];
"1000262" [label="(Call,source_info->num_files)"];
"1000297" [label="(Identifier,response)"];
"1000261" [label="(Identifier,NULL)"];
"1000257" [label="(Call,run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000245" [label="(Call,_(\"You cannot move a folder into itself.\"))"];
"1000295" [label="(ControlStructure,if (response == 2))"];
"1000249" [label="(Literal,\"You cannot copy a folder into itself.\")"];
"1000276" [label="(Literal,0)"];
"1000291" [label="(Identifier,job)"];
"1000303" [label="(ControlStructure,goto out;)"];
"1000244" [label="(Call,g_strdup (_(\"You cannot move a folder into itself.\")))"];
"1000279" [label="(Identifier,GTK_RESPONSE_DELETE_EVENT)"];
"1000247" [label="(Call,g_strdup (_(\"You cannot copy a folder into itself.\")))"];
"1001114" [label="(MethodReturn,RET)"];
"1000298" [label="(Literal,2)"];
"1000256" [label="(Identifier,response)"];
"1000240" [label="(Call,copy_job->is_move ? g_strdup (_(\"You cannot move a folder into itself.\"))\n                  : g_strdup (_(\"You cannot copy a folder into itself.\")))"];
"1000280" [label="(Block,)"];
"1000296" [label="(Call,response == 2)"];
"1000265" [label="(Call,source_info->num_files - transfer_info->num_files)"];
"1000246" [label="(Literal,\"You cannot move a folder into itself.\")"];
"1000250" [label="(Call,secondary = g_strdup (_(\"The destination folder is inside the source folder.\")))"];
"1000239" [label="(Identifier,primary)"];
"1000260" [label="(Identifier,secondary)"];
"1000275" [label="(Identifier,response)"];
"1000273" [label="(Call,response == 0 || response == GTK_RESPONSE_DELETE_EVENT)"];
"1000285" [label="(Call,response == 1)"];
"1000231" [label="(Block,)"];
"1000281" [label="(Call,abort_job (job))"];
"1000238" [label="(Call,primary = copy_job->is_move ? g_strdup (_(\"You cannot move a folder into itself.\"))\n                  : g_strdup (_(\"You cannot copy a folder into itself.\")))"];
"1000277" [label="(Call,response == GTK_RESPONSE_DELETE_EVENT)"];
"1000255" [label="(Call,response = run_cancel_or_skip_warning (job,\n                                               primary,\n                                               secondary,\n                                               NULL,\n                                               source_info->num_files,\n                                               source_info->num_files - transfer_info->num_files))"];
"1000282" [label="(Identifier,job)"];
"1000274" [label="(Call,response == 0)"];
"1000284" [label="(ControlStructure,if (response == 1))"];
"1000181" [label="(Call,*dest_fs_type != NULL)"];
"1000258" [label="(Identifier,job)"];
"1000167" [label="(Call,should_skip_file (job, src))"];
"1000287" [label="(Literal,1)"];
"1000200" [label="(Call,copy_job->target_name != NULL)"];
"1000251" [label="(Identifier,secondary)"];
"1000272" [label="(ControlStructure,if (response == 0 || response == GTK_RESPONSE_DELETE_EVENT))"];
"1000286" [label="(Identifier,response)"];
"1000248" [label="(Call,_(\"You cannot copy a folder into itself.\"))"];
"1000259" [label="(Identifier,primary)"];
"1000238" -> "1000231"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000251" -> "1000238"  [label="CFG: "];
"1000238" -> "1001114"  [label="DDG: "];
"1000244" -> "1000238"  [label="DDG: "];
"1000247" -> "1000238"  [label="DDG: "];
"1000238" -> "1000257"  [label="DDG: "];
"1000244" -> "1000240"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000244" -> "1001114"  [label="DDG: "];
"1000244" -> "1000240"  [label="DDG: "];
"1000245" -> "1000244"  [label="DDG: "];
"1000245" -> "1000246"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000240"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000240" -> "1000247"  [label="CFG: "];
"1000247" -> "1001114"  [label="DDG: "];
"1000247" -> "1000240"  [label="DDG: "];
"1000248" -> "1000247"  [label="DDG: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000265"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000260" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="AST: "];
"1000265" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1001114"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000257" -> "1000255"  [label="DDG: "];
"1000167" -> "1000257"  [label="DDG: "];
"1000250" -> "1000257"  [label="DDG: "];
"1000181" -> "1000257"  [label="DDG: "];
"1000200" -> "1000257"  [label="DDG: "];
"1000265" -> "1000257"  [label="DDG: "];
"1000265" -> "1000257"  [label="DDG: "];
"1000257" -> "1000281"  [label="DDG: "];
"1000255" -> "1000231"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000275" -> "1000255"  [label="CFG: "];
"1000255" -> "1001114"  [label="DDG: "];
"1000255" -> "1000274"  [label="DDG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="CFG: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1001114"  [label="DDG: "];
"1000274" -> "1000273"  [label="DDG: "];
"1000274" -> "1000273"  [label="DDG: "];
"1000274" -> "1000277"  [label="DDG: "];
"1000274" -> "1000285"  [label="DDG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000277" -> "1000273"  [label="AST: "];
"1000282" -> "1000273"  [label="CFG: "];
"1000286" -> "1000273"  [label="CFG: "];
"1000273" -> "1001114"  [label="DDG: "];
"1000273" -> "1001114"  [label="DDG: "];
"1000273" -> "1001114"  [label="DDG: "];
"1000277" -> "1000273"  [label="DDG: "];
"1000277" -> "1000273"  [label="DDG: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000277" -> "1001114"  [label="DDG: "];
"1000277" -> "1001114"  [label="DDG: "];
"1000277" -> "1000285"  [label="DDG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="CFG: "];
"1000297" -> "1000285"  [label="CFG: "];
"1000285" -> "1001114"  [label="DDG: "];
"1000285" -> "1001114"  [label="DDG: "];
"1000285" -> "1000296"  [label="DDG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000302" -> "1000296"  [label="CFG: "];
"1000296" -> "1001114"  [label="DDG: "];
"1000296" -> "1001114"  [label="DDG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000303" -> "1000281"  [label="CFG: "];
"1000281" -> "1001114"  [label="DDG: "];
"1000281" -> "1001114"  [label="DDG: "];
}
