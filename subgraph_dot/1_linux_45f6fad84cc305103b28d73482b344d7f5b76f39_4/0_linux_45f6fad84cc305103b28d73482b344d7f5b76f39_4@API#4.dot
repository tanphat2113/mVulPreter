digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_4@API" {
"1000278" [label="(Call,err = __ip4_datagram_connect(sk,\n\t\t\t\t\t     (struct sockaddr *) &sin,\n\t\t\t\t\t     sizeof(sin)))"];
"1000280" [label="(Call,__ip4_datagram_connect(sk,\n\t\t\t\t\t     (struct sockaddr *) &sin,\n\t\t\t\t\t     sizeof(sin)))"];
"1000247" [label="(Call,__ipv6_only_sock(sk))"];
"1000202" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000118" [label="(Call,inet_sk(sk))"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000194" [label="(Call,fl6.flowlabel&IPV6_FLOWLABEL_MASK)"];
"1000184" [label="(Call,fl6.flowlabel = usin->sin6_flowinfo&IPV6_FLOWINFO_MASK)"];
"1000188" [label="(Call,usin->sin6_flowinfo&IPV6_FLOWINFO_MASK)"];
"1000282" [label="(Call,(struct sockaddr *) &sin)"];
"1000595" [label="(Return,return err;)"];
"1000347" [label="(Call,sk->sk_prot->rehash(sk))"];
"1000204" [label="(Call,fl6.flowlabel)"];
"1000422" [label="(Call,np->flow_label = fl6.flowlabel)"];
"1000150" [label="(Call,err = __ip4_datagram_connect(sk, uaddr, addr_len))"];
"1000288" [label="(JumpTarget,ipv4_connected:)"];
"1000124" [label="(Identifier,sk)"];
"1000250" [label="(Call,err = -ENETUNREACH)"];
"1000214" [label="(Identifier,addr_type)"];
"1000596" [label="(Identifier,err)"];
"1000121" [label="(Call,*np = inet6_sk(sk))"];
"1000201" [label="(Identifier,flowlabel)"];
"1000193" [label="(ControlStructure,if (fl6.flowlabel&IPV6_FLOWLABEL_MASK))"];
"1000202" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000198" [label="(Identifier,IPV6_FLOWLABEL_MASK)"];
"1000287" [label="(Identifier,sin)"];
"1000184" [label="(Call,fl6.flowlabel = usin->sin6_flowinfo&IPV6_FLOWINFO_MASK)"];
"1000152" [label="(Call,__ip4_datagram_connect(sk, uaddr, addr_len))"];
"1000189" [label="(Call,usin->sin6_flowinfo)"];
"1000118" [label="(Call,inet_sk(sk))"];
"1000192" [label="(Identifier,IPV6_FLOWINFO_MASK)"];
"1000195" [label="(Call,fl6.flowlabel)"];
"1000119" [label="(Identifier,sk)"];
"1000194" [label="(Call,fl6.flowlabel&IPV6_FLOWLABEL_MASK)"];
"1000597" [label="(MethodReturn,static int)"];
"1000282" [label="(Call,(struct sockaddr *) &sin)"];
"1000105" [label="(MethodParameterIn,struct sock *sk)"];
"1000595" [label="(Return,return err;)"];
"1000257" [label="(Identifier,sin)"];
"1000284" [label="(Call,&sin)"];
"1000531" [label="(Call,err = 0)"];
"1000377" [label="(Call,err = -EINVAL)"];
"1000526" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000286" [label="(Call,sizeof(sin))"];
"1000590" [label="(Call,sk_set_txhash(sk))"];
"1000188" [label="(Call,usin->sin6_flowinfo&IPV6_FLOWINFO_MASK)"];
"1000581" [label="(Call,sk->sk_prot->rehash(sk))"];
"1000247" [label="(Call,__ipv6_only_sock(sk))"];
"1000278" [label="(Call,err = __ip4_datagram_connect(sk,\n\t\t\t\t\t     (struct sockaddr *) &sin,\n\t\t\t\t\t     sizeof(sin)))"];
"1000200" [label="(Call,flowlabel = fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000123" [label="(Call,inet6_sk(sk))"];
"1000116" [label="(Call,*inet = inet_sk(sk))"];
"1000183" [label="(Block,)"];
"1000279" [label="(Identifier,err)"];
"1000501" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000538" [label="(Call,err = PTR_ERR(dst))"];
"1000246" [label="(ControlStructure,if (__ipv6_only_sock(sk)))"];
"1000145" [label="(Call,__ipv6_only_sock(sk))"];
"1000108" [label="(Block,)"];
"1000244" [label="(Block,)"];
"1000280" [label="(Call,__ip4_datagram_connect(sk,\n\t\t\t\t\t     (struct sockaddr *) &sin,\n\t\t\t\t\t     sizeof(sin)))"];
"1000281" [label="(Identifier,sk)"];
"1000251" [label="(Identifier,err)"];
"1000203" [label="(Identifier,sk)"];
"1000196" [label="(Identifier,fl6)"];
"1000185" [label="(Call,fl6.flowlabel)"];
"1000248" [label="(Identifier,sk)"];
"1000411" [label="(Call,err = -EINVAL)"];
"1000278" -> "1000244"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000288" -> "1000278"  [label="CFG: "];
"1000278" -> "1000597"  [label="DDG: __ip4_datagram_connect(sk,\n\t\t\t\t\t     (struct sockaddr *) &sin,\n\t\t\t\t\t     sizeof(sin))"];
"1000278" -> "1000597"  [label="DDG: err"];
"1000280" -> "1000278"  [label="DDG: sk"];
"1000280" -> "1000278"  [label="DDG: (struct sockaddr *) &sin"];
"1000278" -> "1000595"  [label="DDG: err"];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000280" -> "1000597"  [label="DDG: (struct sockaddr *) &sin"];
"1000280" -> "1000597"  [label="DDG: sk"];
"1000247" -> "1000280"  [label="DDG: sk"];
"1000105" -> "1000280"  [label="DDG: sk"];
"1000282" -> "1000280"  [label="DDG: &sin"];
"1000280" -> "1000347"  [label="DDG: sk"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="CFG: "];
"1000257" -> "1000247"  [label="CFG: "];
"1000247" -> "1000597"  [label="DDG: sk"];
"1000247" -> "1000597"  [label="DDG: __ipv6_only_sock(sk)"];
"1000202" -> "1000247"  [label="DDG: sk"];
"1000123" -> "1000247"  [label="DDG: sk"];
"1000105" -> "1000247"  [label="DDG: sk"];
"1000202" -> "1000200"  [label="AST: "];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000202" -> "1000597"  [label="DDG: sk"];
"1000202" -> "1000597"  [label="DDG: fl6.flowlabel"];
"1000202" -> "1000200"  [label="DDG: sk"];
"1000202" -> "1000200"  [label="DDG: fl6.flowlabel"];
"1000123" -> "1000202"  [label="DDG: sk"];
"1000105" -> "1000202"  [label="DDG: sk"];
"1000194" -> "1000202"  [label="DDG: fl6.flowlabel"];
"1000202" -> "1000422"  [label="DDG: fl6.flowlabel"];
"1000202" -> "1000501"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000121" -> "1000123"  [label="CFG: "];
"1000123" -> "1000597"  [label="DDG: sk"];
"1000123" -> "1000121"  [label="DDG: sk"];
"1000118" -> "1000123"  [label="DDG: sk"];
"1000105" -> "1000123"  [label="DDG: sk"];
"1000123" -> "1000145"  [label="DDG: sk"];
"1000123" -> "1000501"  [label="DDG: sk"];
"1000118" -> "1000116"  [label="AST: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000118" -> "1000116"  [label="DDG: sk"];
"1000105" -> "1000118"  [label="DDG: sk"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000597"  [label="DDG: sk"];
"1000105" -> "1000145"  [label="DDG: sk"];
"1000105" -> "1000152"  [label="DDG: sk"];
"1000105" -> "1000347"  [label="DDG: sk"];
"1000105" -> "1000501"  [label="DDG: sk"];
"1000105" -> "1000526"  [label="DDG: sk"];
"1000105" -> "1000581"  [label="DDG: sk"];
"1000105" -> "1000590"  [label="DDG: sk"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000198"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="CFG: "];
"1000214" -> "1000194"  [label="CFG: "];
"1000194" -> "1000597"  [label="DDG: fl6.flowlabel&IPV6_FLOWLABEL_MASK"];
"1000194" -> "1000597"  [label="DDG: fl6.flowlabel"];
"1000194" -> "1000597"  [label="DDG: IPV6_FLOWLABEL_MASK"];
"1000184" -> "1000194"  [label="DDG: fl6.flowlabel"];
"1000194" -> "1000422"  [label="DDG: fl6.flowlabel"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000196" -> "1000184"  [label="CFG: "];
"1000184" -> "1000597"  [label="DDG: usin->sin6_flowinfo&IPV6_FLOWINFO_MASK"];
"1000188" -> "1000184"  [label="DDG: usin->sin6_flowinfo"];
"1000188" -> "1000184"  [label="DDG: IPV6_FLOWINFO_MASK"];
"1000188" -> "1000192"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000192" -> "1000188"  [label="AST: "];
"1000188" -> "1000597"  [label="DDG: usin->sin6_flowinfo"];
"1000188" -> "1000597"  [label="DDG: IPV6_FLOWINFO_MASK"];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000287" -> "1000282"  [label="CFG: "];
"1000282" -> "1000597"  [label="DDG: &sin"];
"1000595" -> "1000108"  [label="AST: "];
"1000595" -> "1000596"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000597" -> "1000595"  [label="CFG: "];
"1000595" -> "1000597"  [label="DDG: <RET>"];
"1000596" -> "1000595"  [label="DDG: err"];
"1000250" -> "1000595"  [label="DDG: err"];
"1000150" -> "1000595"  [label="DDG: err"];
"1000411" -> "1000595"  [label="DDG: err"];
"1000377" -> "1000595"  [label="DDG: err"];
"1000538" -> "1000595"  [label="DDG: err"];
"1000531" -> "1000595"  [label="DDG: err"];
}
