digraph "0_memcached_75cc83685e103bc8ba380a57468c8f04413033f9@pointer" {
"1000561" [label="(Call,cont <= (c->rcurr + c->rbytes))"];
"1000533" [label="(Call,cont = el + 1)"];
"1000493" [label="(Call,!el)"];
"1000482" [label="(Call,el = memchr(c->rcurr, '\n', c->rbytes))"];
"1000484" [label="(Call,memchr(c->rcurr, '\n', c->rbytes))"];
"1000115" [label="(Call,c->rcurr <= (c->rbuf + c->rsize))"];
"1000475" [label="(Call,c->rbytes == 0)"];
"1000127" [label="(Call,c->rbytes > 0)"];
"1000541" [label="(Call,el - c->rcurr)"];
"1000560" [label="(Call,assert(cont <= (c->rcurr + c->rbytes)))"];
"1000579" [label="(Call,cont - c->rcurr)"];
"1000575" [label="(Call,c->rbytes -= (cont - c->rcurr))"];
"1000584" [label="(Call,c->rcurr = cont)"];
"1000590" [label="(Call,c->rcurr <= (c->rbuf + c->rsize))"];
"1000589" [label="(Call,assert(c->rcurr <= (c->rbuf + c->rsize)))"];
"1000497" [label="(Call,c->rbytes > 1024)"];
"1000119" [label="(Call,c->rbuf + c->rsize)"];
"1000603" [label="(MethodReturn,static int)"];
"1000543" [label="(Call,c->rcurr)"];
"1000563" [label="(Call,c->rcurr + c->rbytes)"];
"1000570" [label="(Call,process_command(c, c->rcurr))"];
"1000589" [label="(Call,assert(c->rcurr <= (c->rbuf + c->rsize)))"];
"1000492" [label="(ControlStructure,if (!el))"];
"1000494" [label="(Identifier,el)"];
"1000128" [label="(Call,c->rbytes)"];
"1000116" [label="(Call,c->rcurr)"];
"1000546" [label="(Literal,1)"];
"1000115" [label="(Call,c->rcurr <= (c->rbuf + c->rsize))"];
"1000475" [label="(Call,c->rbytes == 0)"];
"1000590" [label="(Call,c->rcurr <= (c->rbuf + c->rsize))"];
"1000484" [label="(Call,memchr(c->rcurr, '\n', c->rbytes))"];
"1000482" [label="(Call,el = memchr(c->rcurr, '\n', c->rbytes))"];
"1000481" [label="(Literal,0)"];
"1000127" [label="(Call,c->rbytes > 0)"];
"1000554" [label="(Call,el--)"];
"1000562" [label="(Identifier,cont)"];
"1000499" [label="(Identifier,c)"];
"1000542" [label="(Identifier,el)"];
"1000580" [label="(Identifier,cont)"];
"1000211" [label="(Call,(long)(c->rcurr))"];
"1000584" [label="(Call,c->rcurr = cont)"];
"1000541" [label="(Call,el - c->rcurr)"];
"1000535" [label="(Call,el + 1)"];
"1000489" [label="(Call,c->rbytes)"];
"1000602" [label="(Literal,1)"];
"1000585" [label="(Call,c->rcurr)"];
"1000131" [label="(Literal,0)"];
"1000471" [label="(Block,)"];
"1000504" [label="(Call,*ptr = c->rcurr)"];
"1000571" [label="(Identifier,c)"];
"1000576" [label="(Call,c->rbytes)"];
"1000533" [label="(Call,cont = el + 1)"];
"1000195" [label="(Call,c->rbytes < sizeof(c->binary_header))"];
"1000588" [label="(Identifier,cont)"];
"1000560" [label="(Call,assert(cont <= (c->rcurr + c->rbytes)))"];
"1000114" [label="(Call,assert(c->rcurr <= (c->rbuf + c->rsize)))"];
"1000485" [label="(Call,c->rcurr)"];
"1000575" [label="(Call,c->rbytes -= (cont - c->rcurr))"];
"1000147" [label="(Call,(unsigned char)c->rbuf[0])"];
"1000126" [label="(Call,assert(c->rbytes > 0))"];
"1000581" [label="(Call,c->rcurr)"];
"1000534" [label="(Identifier,cont)"];
"1000488" [label="(Literal,'\n')"];
"1000561" [label="(Call,cont <= (c->rcurr + c->rbytes))"];
"1000479" [label="(Literal,0)"];
"1000586" [label="(Identifier,c)"];
"1000591" [label="(Call,c->rcurr)"];
"1000540" [label="(Call,(el - c->rcurr) > 1)"];
"1000549" [label="(Call,el - 1)"];
"1000594" [label="(Call,c->rbuf + c->rsize)"];
"1000483" [label="(Identifier,el)"];
"1000493" [label="(Call,!el)"];
"1000474" [label="(ControlStructure,if (c->rbytes == 0))"];
"1000579" [label="(Call,cont - c->rcurr)"];
"1000476" [label="(Call,c->rbytes)"];
"1000592" [label="(Identifier,c)"];
"1000561" -> "1000560"  [label="AST: "];
"1000561" -> "1000563"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000563" -> "1000561"  [label="AST: "];
"1000560" -> "1000561"  [label="CFG: "];
"1000561" -> "1000603"  [label="DDG: c->rcurr + c->rbytes"];
"1000561" -> "1000560"  [label="DDG: cont"];
"1000561" -> "1000560"  [label="DDG: c->rcurr + c->rbytes"];
"1000533" -> "1000561"  [label="DDG: cont"];
"1000541" -> "1000561"  [label="DDG: c->rcurr"];
"1000484" -> "1000561"  [label="DDG: c->rbytes"];
"1000561" -> "1000579"  [label="DDG: cont"];
"1000533" -> "1000471"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000542" -> "1000533"  [label="CFG: "];
"1000533" -> "1000603"  [label="DDG: el + 1"];
"1000493" -> "1000533"  [label="DDG: el"];
"1000493" -> "1000492"  [label="AST: "];
"1000493" -> "1000494"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000499" -> "1000493"  [label="CFG: "];
"1000534" -> "1000493"  [label="CFG: "];
"1000493" -> "1000603"  [label="DDG: el"];
"1000493" -> "1000603"  [label="DDG: !el"];
"1000482" -> "1000493"  [label="DDG: el"];
"1000493" -> "1000535"  [label="DDG: el"];
"1000493" -> "1000541"  [label="DDG: el"];
"1000482" -> "1000471"  [label="AST: "];
"1000482" -> "1000484"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000484" -> "1000482"  [label="AST: "];
"1000494" -> "1000482"  [label="CFG: "];
"1000482" -> "1000603"  [label="DDG: memchr(c->rcurr, '\n', c->rbytes)"];
"1000484" -> "1000482"  [label="DDG: c->rcurr"];
"1000484" -> "1000482"  [label="DDG: '\n'"];
"1000484" -> "1000482"  [label="DDG: c->rbytes"];
"1000484" -> "1000489"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000488" -> "1000484"  [label="AST: "];
"1000489" -> "1000484"  [label="AST: "];
"1000484" -> "1000603"  [label="DDG: c->rcurr"];
"1000115" -> "1000484"  [label="DDG: c->rcurr"];
"1000475" -> "1000484"  [label="DDG: c->rbytes"];
"1000484" -> "1000497"  [label="DDG: c->rbytes"];
"1000484" -> "1000504"  [label="DDG: c->rcurr"];
"1000484" -> "1000541"  [label="DDG: c->rcurr"];
"1000484" -> "1000563"  [label="DDG: c->rbytes"];
"1000484" -> "1000575"  [label="DDG: c->rbytes"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000119"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000119" -> "1000115"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000603"  [label="DDG: c->rbuf + c->rsize"];
"1000115" -> "1000603"  [label="DDG: c->rcurr"];
"1000115" -> "1000114"  [label="DDG: c->rcurr"];
"1000115" -> "1000114"  [label="DDG: c->rbuf + c->rsize"];
"1000115" -> "1000211"  [label="DDG: c->rcurr"];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000479"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000479" -> "1000475"  [label="AST: "];
"1000481" -> "1000475"  [label="CFG: "];
"1000483" -> "1000475"  [label="CFG: "];
"1000475" -> "1000603"  [label="DDG: c->rbytes"];
"1000475" -> "1000603"  [label="DDG: c->rbytes == 0"];
"1000127" -> "1000475"  [label="DDG: c->rbytes"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000131"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="DDG: c->rbytes"];
"1000127" -> "1000126"  [label="DDG: 0"];
"1000127" -> "1000195"  [label="DDG: c->rbytes"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000546" -> "1000541"  [label="CFG: "];
"1000541" -> "1000603"  [label="DDG: el"];
"1000541" -> "1000540"  [label="DDG: el"];
"1000541" -> "1000540"  [label="DDG: c->rcurr"];
"1000541" -> "1000549"  [label="DDG: el"];
"1000541" -> "1000554"  [label="DDG: el"];
"1000541" -> "1000563"  [label="DDG: c->rcurr"];
"1000541" -> "1000570"  [label="DDG: c->rcurr"];
"1000560" -> "1000471"  [label="AST: "];
"1000571" -> "1000560"  [label="CFG: "];
"1000560" -> "1000603"  [label="DDG: assert(cont <= (c->rcurr + c->rbytes))"];
"1000560" -> "1000603"  [label="DDG: cont <= (c->rcurr + c->rbytes)"];
"1000579" -> "1000575"  [label="AST: "];
"1000579" -> "1000581"  [label="CFG: "];
"1000580" -> "1000579"  [label="AST: "];
"1000581" -> "1000579"  [label="AST: "];
"1000575" -> "1000579"  [label="CFG: "];
"1000579" -> "1000575"  [label="DDG: cont"];
"1000579" -> "1000575"  [label="DDG: c->rcurr"];
"1000570" -> "1000579"  [label="DDG: c->rcurr"];
"1000579" -> "1000584"  [label="DDG: cont"];
"1000575" -> "1000471"  [label="AST: "];
"1000576" -> "1000575"  [label="AST: "];
"1000586" -> "1000575"  [label="CFG: "];
"1000575" -> "1000603"  [label="DDG: cont - c->rcurr"];
"1000575" -> "1000603"  [label="DDG: c->rbytes"];
"1000584" -> "1000471"  [label="AST: "];
"1000584" -> "1000588"  [label="CFG: "];
"1000585" -> "1000584"  [label="AST: "];
"1000588" -> "1000584"  [label="AST: "];
"1000592" -> "1000584"  [label="CFG: "];
"1000584" -> "1000603"  [label="DDG: cont"];
"1000584" -> "1000590"  [label="DDG: c->rcurr"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000594"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000594" -> "1000590"  [label="AST: "];
"1000589" -> "1000590"  [label="CFG: "];
"1000590" -> "1000603"  [label="DDG: c->rcurr"];
"1000590" -> "1000603"  [label="DDG: c->rbuf + c->rsize"];
"1000590" -> "1000589"  [label="DDG: c->rcurr"];
"1000590" -> "1000589"  [label="DDG: c->rbuf + c->rsize"];
"1000147" -> "1000590"  [label="DDG: c->rbuf[0]"];
"1000589" -> "1000471"  [label="AST: "];
"1000602" -> "1000589"  [label="CFG: "];
"1000589" -> "1000603"  [label="DDG: assert(c->rcurr <= (c->rbuf + c->rsize))"];
"1000589" -> "1000603"  [label="DDG: c->rcurr <= (c->rbuf + c->rsize)"];
}
