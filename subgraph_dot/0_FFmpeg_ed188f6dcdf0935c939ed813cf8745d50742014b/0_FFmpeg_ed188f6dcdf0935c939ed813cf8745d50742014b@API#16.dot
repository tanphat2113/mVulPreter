digraph "0_FFmpeg_ed188f6dcdf0935c939ed813cf8745d50742014b@API" {
"1000302" [label="(Call,sizeof(codec_name) - 1)"];
"1000299" [label="(Call,strncpy(codec_name, val, sizeof(codec_name) - 1))"];
"1000414" [label="(Call,get_second_size(codec_name))"];
"1000409" [label="(Call,(c->codec_second_size = get_second_size(codec_name)) == -1)"];
"1000410" [label="(Call,c->codec_second_size = get_second_size(codec_name))"];
"1000419" [label="(Call,av_log(s, AV_LOG_ERROR, \"unknown codec <%s>!\n\", codec_name))"];
"1000587" [label="(Call,!strcmp(codec_name, \"mp332\"))"];
"1000588" [label="(Call,strcmp(codec_name, \"mp332\"))"];
"1000620" [label="(Call,!strcmp(codec_name, \"acelp85\"))"];
"1000621" [label="(Call,strcmp(codec_name, \"acelp85\"))"];
"1000674" [label="(Call,!strcmp(codec_name, \"acelp16\"))"];
"1000675" [label="(Call,strcmp(codec_name, \"acelp16\"))"];
"1000587" [label="(Call,!strcmp(codec_name, \"mp332\"))"];
"1000415" [label="(Identifier,codec_name)"];
"1000417" [label="(Literal,1)"];
"1000676" [label="(Identifier,codec_name)"];
"1000414" [label="(Call,get_second_size(codec_name))"];
"1000620" [label="(Call,!strcmp(codec_name, \"acelp85\"))"];
"1000675" [label="(Call,strcmp(codec_name, \"acelp16\"))"];
"1000408" [label="(ControlStructure,if ((c->codec_second_size = get_second_size(codec_name)) == -1))"];
"1000628" [label="(Identifier,st)"];
"1000416" [label="(Call,-1)"];
"1000677" [label="(Literal,\"acelp16\")"];
"1000418" [label="(Block,)"];
"1000305" [label="(Literal,1)"];
"1000622" [label="(Identifier,codec_name)"];
"1000423" [label="(Identifier,codec_name)"];
"1000299" [label="(Call,strncpy(codec_name, val, sizeof(codec_name) - 1))"];
"1000589" [label="(Identifier,codec_name)"];
"1000294" [label="(Call,av_log(s, AV_LOG_DEBUG, \"Codec is <%s>\n\", val))"];
"1000419" [label="(Call,av_log(s, AV_LOG_ERROR, \"unknown codec <%s>!\n\", codec_name))"];
"1000303" [label="(Call,sizeof(codec_name))"];
"1000588" [label="(Call,strcmp(codec_name, \"mp332\"))"];
"1000682" [label="(Identifier,st)"];
"1000673" [label="(ControlStructure,if (!strcmp(codec_name, \"acelp16\")))"];
"1000674" [label="(Call,!strcmp(codec_name, \"acelp16\"))"];
"1000302" [label="(Call,sizeof(codec_name) - 1)"];
"1000127" [label="(MethodParameterIn,AVFormatContext *s)"];
"1000293" [label="(Block,)"];
"1000301" [label="(Identifier,val)"];
"1000300" [label="(Identifier,codec_name)"];
"1000253" [label="(Identifier,i)"];
"1000149" [label="(Call,codec_name[64] = {0})"];
"1000623" [label="(Literal,\"acelp85\")"];
"1000313" [label="(Call,av_log(s, AV_LOG_DEBUG, \"HeaderSeed is <%s>\n\", val))"];
"1000409" [label="(Call,(c->codec_second_size = get_second_size(codec_name)) == -1)"];
"1000429" [label="(Identifier,c)"];
"1000586" [label="(ControlStructure,if (!strcmp(codec_name, \"mp332\")))"];
"1000420" [label="(Identifier,s)"];
"1000426" [label="(Identifier,EINVAL)"];
"1000619" [label="(ControlStructure,if (!strcmp(codec_name, \"acelp85\")))"];
"1000422" [label="(Literal,\"unknown codec <%s>!\n\")"];
"1000421" [label="(Identifier,AV_LOG_ERROR)"];
"1000728" [label="(Identifier,i)"];
"1000380" [label="(Call,av_log(s, AV_LOG_DEBUG, \"\n\"))"];
"1000877" [label="(MethodReturn,static int)"];
"1000410" [label="(Call,c->codec_second_size = get_second_size(codec_name))"];
"1000411" [label="(Call,c->codec_second_size)"];
"1000621" [label="(Call,strcmp(codec_name, \"acelp85\"))"];
"1000595" [label="(Identifier,st)"];
"1000590" [label="(Literal,\"mp332\")"];
"1000302" -> "1000299"  [label="AST: "];
"1000302" -> "1000305"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="AST: "];
"1000299" -> "1000302"  [label="CFG: "];
"1000302" -> "1000299"  [label="DDG: "];
"1000299" -> "1000293"  [label="AST: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000253" -> "1000299"  [label="CFG: "];
"1000299" -> "1000877"  [label="DDG: "];
"1000299" -> "1000877"  [label="DDG: "];
"1000299" -> "1000877"  [label="DDG: "];
"1000299" -> "1000877"  [label="DDG: "];
"1000294" -> "1000299"  [label="DDG: "];
"1000299" -> "1000414"  [label="DDG: "];
"1000414" -> "1000410"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000410" -> "1000414"  [label="CFG: "];
"1000414" -> "1000877"  [label="DDG: "];
"1000414" -> "1000409"  [label="DDG: "];
"1000414" -> "1000410"  [label="DDG: "];
"1000149" -> "1000414"  [label="DDG: "];
"1000414" -> "1000419"  [label="DDG: "];
"1000414" -> "1000587"  [label="DDG: "];
"1000414" -> "1000588"  [label="DDG: "];
"1000414" -> "1000620"  [label="DDG: "];
"1000414" -> "1000621"  [label="DDG: "];
"1000414" -> "1000674"  [label="DDG: "];
"1000414" -> "1000675"  [label="DDG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000409" -> "1000416"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000416" -> "1000409"  [label="AST: "];
"1000420" -> "1000409"  [label="CFG: "];
"1000429" -> "1000409"  [label="CFG: "];
"1000409" -> "1000877"  [label="DDG: "];
"1000409" -> "1000877"  [label="DDG: "];
"1000410" -> "1000409"  [label="DDG: "];
"1000416" -> "1000409"  [label="DDG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000417" -> "1000410"  [label="CFG: "];
"1000410" -> "1000877"  [label="DDG: "];
"1000410" -> "1000877"  [label="DDG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000419" -> "1000423"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000422" -> "1000419"  [label="AST: "];
"1000423" -> "1000419"  [label="AST: "];
"1000426" -> "1000419"  [label="CFG: "];
"1000419" -> "1000877"  [label="DDG: "];
"1000419" -> "1000877"  [label="DDG: "];
"1000419" -> "1000877"  [label="DDG: "];
"1000419" -> "1000877"  [label="DDG: "];
"1000294" -> "1000419"  [label="DDG: "];
"1000313" -> "1000419"  [label="DDG: "];
"1000380" -> "1000419"  [label="DDG: "];
"1000127" -> "1000419"  [label="DDG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000588"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000595" -> "1000587"  [label="CFG: "];
"1000622" -> "1000587"  [label="CFG: "];
"1000587" -> "1000877"  [label="DDG: "];
"1000587" -> "1000877"  [label="DDG: "];
"1000588" -> "1000590"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000590" -> "1000588"  [label="AST: "];
"1000588" -> "1000877"  [label="DDG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000620" -> "1000621"  [label="CFG: "];
"1000621" -> "1000620"  [label="AST: "];
"1000628" -> "1000620"  [label="CFG: "];
"1000676" -> "1000620"  [label="CFG: "];
"1000620" -> "1000877"  [label="DDG: "];
"1000620" -> "1000877"  [label="DDG: "];
"1000621" -> "1000623"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000623" -> "1000621"  [label="AST: "];
"1000621" -> "1000877"  [label="DDG: "];
"1000674" -> "1000673"  [label="AST: "];
"1000674" -> "1000675"  [label="CFG: "];
"1000675" -> "1000674"  [label="AST: "];
"1000682" -> "1000674"  [label="CFG: "];
"1000728" -> "1000674"  [label="CFG: "];
"1000674" -> "1000877"  [label="DDG: "];
"1000674" -> "1000877"  [label="DDG: "];
"1000675" -> "1000677"  [label="CFG: "];
"1000676" -> "1000675"  [label="AST: "];
"1000677" -> "1000675"  [label="AST: "];
"1000675" -> "1000877"  [label="DDG: "];
}
