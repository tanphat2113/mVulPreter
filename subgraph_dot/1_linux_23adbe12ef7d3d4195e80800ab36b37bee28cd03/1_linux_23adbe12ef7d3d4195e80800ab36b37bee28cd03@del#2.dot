digraph "1_linux_23adbe12ef7d3d4195e80800ab36b37bee28cd03@del" {
"1000161" [label="(Call,!inode_capable(inode, CAP_CHOWN))"];
"1000162" [label="(Call,inode_capable(inode, CAP_CHOWN))"];
"1000125" [label="(Call,inode_newsize_ok(inode, attr->ia_size))"];
"1000108" [label="(MethodParameterIn,const struct inode *inode)"];
"1000145" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000141" [label="(Call,(ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000173" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000169" [label="(Call,(ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000145" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000229" [label="(Call,inode_capable(inode, CAP_FSETID))"];
"1000173" [label="(Call,(!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000248" [label="(Call,inode_owner_or_capable(inode))"];
"1000204" [label="(Identifier,ia_valid)"];
"1000201" [label="(Identifier,EPERM)"];
"1000169" [label="(Call,(ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000163" [label="(Identifier,inode)"];
"1000170" [label="(Call,ia_valid & ATTR_GID)"];
"1000168" [label="(ControlStructure,if ((ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN)))"];
"1000162" [label="(Call,inode_capable(inode, CAP_CHOWN))"];
"1000123" [label="(Call,error = inode_newsize_ok(inode, attr->ia_size))"];
"1000196" [label="(Call,inode_capable(inode, CAP_CHOWN))"];
"1000195" [label="(Call,!inode_capable(inode, CAP_CHOWN))"];
"1000125" [label="(Call,inode_newsize_ok(inode, attr->ia_size))"];
"1000164" [label="(Identifier,CAP_CHOWN)"];
"1000108" [label="(MethodParameterIn,const struct inode *inode)"];
"1000140" [label="(ControlStructure,if ((ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN)))"];
"1000171" [label="(Identifier,ia_valid)"];
"1000209" [label="(Call,inode_owner_or_capable(inode))"];
"1000161" [label="(Call,!inode_capable(inode, CAP_CHOWN))"];
"1000167" [label="(Identifier,EPERM)"];
"1000141" [label="(Call,(ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN))"];
"1000142" [label="(Call,ia_valid & ATTR_UID)"];
"1000127" [label="(Call,attr->ia_size)"];
"1000255" [label="(MethodReturn,int)"];
"1000126" [label="(Identifier,inode)"];
"1000146" [label="(Call,!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid))"];
"1000174" [label="(Call,!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid)))"];
"1000161" -> "1000145"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000145" -> "1000161"  [label="CFG: "];
"1000161" -> "1000255"  [label="DDG: inode_capable(inode, CAP_CHOWN)"];
"1000161" -> "1000145"  [label="DDG: inode_capable(inode, CAP_CHOWN)"];
"1000162" -> "1000161"  [label="DDG: inode"];
"1000162" -> "1000161"  [label="DDG: CAP_CHOWN"];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000162" -> "1000255"  [label="DDG: CAP_CHOWN"];
"1000162" -> "1000255"  [label="DDG: inode"];
"1000125" -> "1000162"  [label="DDG: inode"];
"1000108" -> "1000162"  [label="DDG: inode"];
"1000162" -> "1000196"  [label="DDG: inode"];
"1000162" -> "1000196"  [label="DDG: CAP_CHOWN"];
"1000162" -> "1000209"  [label="DDG: inode"];
"1000162" -> "1000248"  [label="DDG: inode"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000255"  [label="DDG: inode"];
"1000125" -> "1000255"  [label="DDG: attr->ia_size"];
"1000125" -> "1000123"  [label="DDG: inode"];
"1000125" -> "1000123"  [label="DDG: attr->ia_size"];
"1000108" -> "1000125"  [label="DDG: inode"];
"1000125" -> "1000196"  [label="DDG: inode"];
"1000125" -> "1000209"  [label="DDG: inode"];
"1000125" -> "1000248"  [label="DDG: inode"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000255"  [label="DDG: inode"];
"1000108" -> "1000196"  [label="DDG: inode"];
"1000108" -> "1000209"  [label="DDG: inode"];
"1000108" -> "1000229"  [label="DDG: inode"];
"1000108" -> "1000248"  [label="DDG: inode"];
"1000145" -> "1000141"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000141" -> "1000145"  [label="CFG: "];
"1000145" -> "1000255"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)"];
"1000145" -> "1000255"  [label="DDG: !inode_capable(inode, CAP_CHOWN)"];
"1000145" -> "1000141"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)"];
"1000145" -> "1000141"  [label="DDG: !inode_capable(inode, CAP_CHOWN)"];
"1000146" -> "1000145"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid)"];
"1000146" -> "1000145"  [label="DDG: !uid_eq(attr->ia_uid, inode->i_uid)"];
"1000145" -> "1000173"  [label="DDG: !inode_capable(inode, CAP_CHOWN)"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000167" -> "1000141"  [label="CFG: "];
"1000171" -> "1000141"  [label="CFG: "];
"1000141" -> "1000255"  [label="DDG: ia_valid & ATTR_UID"];
"1000141" -> "1000255"  [label="DDG: (ia_valid & ATTR_UID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN)"];
"1000141" -> "1000255"  [label="DDG: (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t     !uid_eq(attr->ia_uid, inode->i_uid)) &&\n\t    !inode_capable(inode, CAP_CHOWN)"];
"1000142" -> "1000141"  [label="DDG: ia_valid"];
"1000142" -> "1000141"  [label="DDG: ATTR_UID"];
"1000173" -> "1000169"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000173" -> "1000195"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000195" -> "1000173"  [label="AST: "];
"1000169" -> "1000173"  [label="CFG: "];
"1000173" -> "1000255"  [label="DDG: !inode_capable(inode, CAP_CHOWN)"];
"1000173" -> "1000255"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))"];
"1000173" -> "1000169"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))"];
"1000173" -> "1000169"  [label="DDG: !inode_capable(inode, CAP_CHOWN)"];
"1000174" -> "1000173"  [label="DDG: !uid_eq(current_fsuid(), inode->i_uid)"];
"1000174" -> "1000173"  [label="DDG: !in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid)"];
"1000195" -> "1000173"  [label="DDG: inode_capable(inode, CAP_CHOWN)"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000201" -> "1000169"  [label="CFG: "];
"1000204" -> "1000169"  [label="CFG: "];
"1000169" -> "1000255"  [label="DDG: (ia_valid & ATTR_GID) &&\n \t    (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN)"];
"1000169" -> "1000255"  [label="DDG: (!uid_eq(current_fsuid(), inode->i_uid) ||\n \t    (!in_group_p(attr->ia_gid) && !gid_eq(attr->ia_gid, inode->i_gid))) &&\n\t    !inode_capable(inode, CAP_CHOWN)"];
"1000169" -> "1000255"  [label="DDG: ia_valid & ATTR_GID"];
"1000170" -> "1000169"  [label="DDG: ia_valid"];
"1000170" -> "1000169"  [label="DDG: ATTR_GID"];
}
