digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_33@API" {
"1000463" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000284" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000266" [label="(Call,sk_acceptq_is_full(sk))"];
"1000121" [label="(Call,inet6_sk(sk))"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000275" [label="(Call,inet6_csk_route_req(sk, req))"];
"1000258" [label="(Call,inet6_rsk(req))"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000458" [label="(Call,opt != np->opt)"];
"1000454" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000423" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000401" [label="(Call,newnp->pktoptions = skb_clone(treq->pktopts, GFP_ATOMIC))"];
"1000405" [label="(Call,skb_clone(treq->pktopts, GFP_ATOMIC))"];
"1000395" [label="(Call,treq->pktopts != NULL)"];
"1000298" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000289" [label="(Call,newsk == NULL)"];
"1000282" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000279" [label="(Call,!dst)"];
"1000273" [label="(Call,dst = inet6_csk_route_req(sk, req))"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000270" [label="(Call,!dst)"];
"1000327" [label="(Call,inet6_sk(newsk))"];
"1000323" [label="(Call,inet_sk(newsk))"];
"1000319" [label="(Call,tcp_sk(newsk))"];
"1000310" [label="(Call,inet_sk(newsk))"];
"1000305" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000260" [label="(Call,opt = np->opt)"];
"1000527" [label="(Call,tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000524" [label="(Call,(key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL)"];
"1000547" [label="(Call,newkey != NULL)"];
"1000550" [label="(Call,tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen))"];
"1000562" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000561" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000567" [label="(Call,sock_put(newsk))"];
"1000570" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000573" [label="(Return,return newsk;)"];
"1000599" [label="(Call,sock_net(sk))"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000602" [label="(Return,return NULL;)"];
"1000525" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000419" [label="(ControlStructure,if (newnp->pktoptions))"];
"1000307" [label="(Identifier,newsk)"];
"1000577" [label="(Call,sock_net(sk))"];
"1000287" [label="(Identifier,skb)"];
"1000295" [label="(Identifier,newsk)"];
"1000277" [label="(Identifier,req)"];
"1000401" [label="(Call,newnp->pktoptions = skb_clone(treq->pktopts, GFP_ATOMIC))"];
"1000324" [label="(Identifier,newsk)"];
"1000327" [label="(Call,inet6_sk(newsk))"];
"1000400" [label="(Block,)"];
"1000550" [label="(Call,tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen))"];
"1000302" [label="(Identifier,NULL)"];
"1000564" [label="(Identifier,newsk)"];
"1000269" [label="(ControlStructure,if (!dst))"];
"1000406" [label="(Call,treq->pktopts)"];
"1000300" [label="(Identifier,dst)"];
"1000537" [label="(Identifier,newkey)"];
"1000551" [label="(Identifier,newsk)"];
"1000139" [label="(Call,tcp_v4_syn_recv_sock(sk, skb, req, dst))"];
"1000566" [label="(Block,)"];
"1000272" [label="(Block,)"];
"1000262" [label="(Call,np->opt)"];
"1000528" [label="(Identifier,sk)"];
"1000507" [label="(Call,tcp_initialize_rcv_mss(newsk))"];
"1000260" [label="(Call,opt = np->opt)"];
"1000499" [label="(Call,dst_mtu(dst))"];
"1000523" [label="(ControlStructure,if ((key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL))"];
"1000561" [label="(Call,__inet_inherit_port(sk, newsk) < 0)"];
"1000454" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000267" [label="(Identifier,sk)"];
"1000301" [label="(Identifier,NULL)"];
"1000328" [label="(Identifier,newsk)"];
"1000601" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000405" [label="(Call,skb_clone(treq->pktopts, GFP_ATOMIC))"];
"1000538" [label="(Call,kmemdup(key->key, key->keylen, GFP_ATOMIC))"];
"1000584" [label="(Call,opt != np->opt)"];
"1000527" [label="(Call,tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000471" [label="(Call,inet_csk(newsk))"];
"1000321" [label="(Call,newinet = inet_sk(newsk))"];
"1000568" [label="(Identifier,newsk)"];
"1000556" [label="(Identifier,newkey)"];
"1000427" [label="(Identifier,newsk)"];
"1000603" [label="(Identifier,NULL)"];
"1000409" [label="(Identifier,GFP_ATOMIC)"];
"1000281" [label="(ControlStructure,goto out;)"];
"1000320" [label="(Identifier,newsk)"];
"1000573" [label="(Return,return newsk;)"];
"1000274" [label="(Identifier,dst)"];
"1000600" [label="(Identifier,sk)"];
"1000288" [label="(ControlStructure,if (newsk == NULL))"];
"1000261" [label="(Identifier,opt)"];
"1000258" [label="(Call,inet6_rsk(req))"];
"1000589" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000273" [label="(Call,dst = inet6_csk_route_req(sk, req))"];
"1000536" [label="(Call,*newkey = kmemdup(key->key, key->keylen, GFP_ATOMIC))"];
"1000268" [label="(ControlStructure,goto out_overflow;)"];
"1000450" [label="(Call,newnp->opt = ipv6_dup_options(newsk, opt))"];
"1000323" [label="(Call,inet_sk(newsk))"];
"1000414" [label="(Call,treq->pktopts = NULL)"];
"1000122" [label="(Identifier,sk)"];
"1000525" [label="(Call,key = tcp_v6_md5_do_lookup(sk, &newnp->daddr))"];
"1000563" [label="(Identifier,sk)"];
"1000552" [label="(Call,&newnp->daddr)"];
"1000311" [label="(Identifier,newsk)"];
"1000304" [label="(Identifier,newtcp6sk)"];
"1000548" [label="(Identifier,newkey)"];
"1000292" [label="(ControlStructure,goto out_nonewsk;)"];
"1000266" [label="(Call,sk_acceptq_is_full(sk))"];
"1000529" [label="(Call,&newnp->daddr)"];
"1000275" [label="(Call,inet6_csk_route_req(sk, req))"];
"1000270" [label="(Call,!dst)"];
"1000284" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000402" [label="(Call,newnp->pktoptions)"];
"1000464" [label="(Identifier,sk)"];
"1000115" [label="(Block,)"];
"1000526" [label="(Identifier,key)"];
"1000286" [label="(Identifier,req)"];
"1000546" [label="(ControlStructure,if (newkey != NULL))"];
"1000437" [label="(Call,inet6_iif(skb))"];
"1000299" [label="(Identifier,newsk)"];
"1000428" [label="(Call,newnp->opt\t  = NULL)"];
"1000113" [label="(MethodParameterIn,struct request_sock *req)"];
"1000259" [label="(Identifier,req)"];
"1000505" [label="(Call,dst_metric_advmss(dst))"];
"1000280" [label="(Identifier,dst)"];
"1000290" [label="(Identifier,newsk)"];
"1000423" [label="(Call,skb_set_owner_r(newnp->pktoptions, newsk))"];
"1000334" [label="(Call,ipv6_addr_copy(&newnp->daddr, &treq->rmt_addr))"];
"1000309" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000399" [label="(Identifier,NULL)"];
"1000472" [label="(Identifier,newsk)"];
"1000458" [label="(Call,opt != np->opt)"];
"1000265" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000389" [label="(Call,newnp->pktoptions = NULL)"];
"1000283" [label="(Identifier,newsk)"];
"1000289" [label="(Call,newsk == NULL)"];
"1000305" [label="(Call,(struct tcp6_sock *)newsk)"];
"1000460" [label="(Call,np->opt)"];
"1000430" [label="(Identifier,newnp)"];
"1000394" [label="(ControlStructure,if (treq->pktopts != NULL))"];
"1000303" [label="(Call,newtcp6sk = (struct tcp6_sock *)newsk)"];
"1000466" [label="(Call,opt->tot_len)"];
"1000572" [label="(Identifier,NULL)"];
"1000373" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000412" [label="(Identifier,treq)"];
"1000112" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000595" [label="(Call,dst_release(dst))"];
"1000557" [label="(Call,key->keylen)"];
"1000424" [label="(Call,newnp->pktoptions)"];
"1000245" [label="(Call,ipv6_hdr(skb))"];
"1000533" [label="(Identifier,NULL)"];
"1000444" [label="(Call,ipv6_hdr(skb))"];
"1000457" [label="(ControlStructure,if (opt != np->opt))"];
"1000562" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000278" [label="(ControlStructure,if (!dst))"];
"1000598" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000549" [label="(Identifier,NULL)"];
"1000524" [label="(Call,(key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL)"];
"1000279" [label="(Call,!dst)"];
"1000298" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000256" [label="(Call,treq = inet6_rsk(req))"];
"1000271" [label="(Identifier,dst)"];
"1000368" [label="(Call,newinet->opt = NULL)"];
"1000111" [label="(MethodParameterIn,struct sock *sk)"];
"1000455" [label="(Identifier,newsk)"];
"1000604" [label="(MethodReturn,static struct sock *)"];
"1000459" [label="(Identifier,opt)"];
"1000285" [label="(Identifier,sk)"];
"1000325" [label="(Call,newnp = inet6_sk(newsk))"];
"1000456" [label="(Identifier,opt)"];
"1000312" [label="(FieldIdentifier,pinet6)"];
"1000465" [label="(Identifier,opt)"];
"1000403" [label="(Identifier,newnp)"];
"1000238" [label="(Call,inet6_iif(skb))"];
"1000570" [label="(Call,__inet6_hash(newsk, NULL))"];
"1000121" [label="(Call,inet6_sk(sk))"];
"1000291" [label="(Identifier,NULL)"];
"1000602" [label="(Return,return NULL;)"];
"1000599" [label="(Call,sock_net(sk))"];
"1000574" [label="(Identifier,newsk)"];
"1000317" [label="(Call,newtp = tcp_sk(newsk))"];
"1000567" [label="(Call,sock_put(newsk))"];
"1000276" [label="(Identifier,sk)"];
"1000119" [label="(Call,*np = inet6_sk(sk))"];
"1000396" [label="(Call,treq->pktopts)"];
"1000282" [label="(Call,newsk = tcp_create_openreq_child(sk, req, skb))"];
"1000410" [label="(Call,kfree_skb(treq->pktopts))"];
"1000571" [label="(Identifier,newsk)"];
"1000114" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000395" [label="(Call,treq->pktopts != NULL)"];
"1000463" [label="(Call,sock_kfree_s(sk, opt, opt->tot_len))"];
"1000310" [label="(Call,inet_sk(newsk))"];
"1000565" [label="(Literal,0)"];
"1000560" [label="(ControlStructure,if (__inet_inherit_port(sk, newsk) < 0))"];
"1000547" [label="(Call,newkey != NULL)"];
"1000319" [label="(Call,tcp_sk(newsk))"];
"1000582" [label="(Call,opt && opt != np->opt)"];
"1000569" [label="(ControlStructure,goto out;)"];
"1000463" -> "1000457"  [label="AST: "];
"1000463" -> "1000466"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000466" -> "1000463"  [label="AST: "];
"1000472" -> "1000463"  [label="CFG: "];
"1000463" -> "1000604"  [label="DDG: opt"];
"1000463" -> "1000604"  [label="DDG: sock_kfree_s(sk, opt, opt->tot_len)"];
"1000463" -> "1000604"  [label="DDG: opt->tot_len"];
"1000284" -> "1000463"  [label="DDG: sk"];
"1000111" -> "1000463"  [label="DDG: sk"];
"1000458" -> "1000463"  [label="DDG: opt"];
"1000463" -> "1000527"  [label="DDG: sk"];
"1000284" -> "1000282"  [label="AST: "];
"1000284" -> "1000287"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000284" -> "1000604"  [label="DDG: req"];
"1000284" -> "1000604"  [label="DDG: skb"];
"1000284" -> "1000282"  [label="DDG: sk"];
"1000284" -> "1000282"  [label="DDG: req"];
"1000284" -> "1000282"  [label="DDG: skb"];
"1000266" -> "1000284"  [label="DDG: sk"];
"1000275" -> "1000284"  [label="DDG: sk"];
"1000275" -> "1000284"  [label="DDG: req"];
"1000111" -> "1000284"  [label="DDG: sk"];
"1000258" -> "1000284"  [label="DDG: req"];
"1000113" -> "1000284"  [label="DDG: req"];
"1000112" -> "1000284"  [label="DDG: skb"];
"1000284" -> "1000437"  [label="DDG: skb"];
"1000284" -> "1000527"  [label="DDG: sk"];
"1000284" -> "1000589"  [label="DDG: sk"];
"1000284" -> "1000599"  [label="DDG: sk"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="CFG: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000604"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000121" -> "1000266"  [label="DDG: sk"];
"1000111" -> "1000266"  [label="DDG: sk"];
"1000266" -> "1000275"  [label="DDG: sk"];
"1000266" -> "1000577"  [label="DDG: sk"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000119"  [label="DDG: sk"];
"1000111" -> "1000121"  [label="DDG: sk"];
"1000121" -> "1000139"  [label="DDG: sk"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000604"  [label="DDG: sk"];
"1000111" -> "1000139"  [label="DDG: sk"];
"1000111" -> "1000275"  [label="DDG: sk"];
"1000111" -> "1000527"  [label="DDG: sk"];
"1000111" -> "1000562"  [label="DDG: sk"];
"1000111" -> "1000577"  [label="DDG: sk"];
"1000111" -> "1000589"  [label="DDG: sk"];
"1000111" -> "1000599"  [label="DDG: sk"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000604"  [label="DDG: req"];
"1000275" -> "1000273"  [label="DDG: sk"];
"1000275" -> "1000273"  [label="DDG: req"];
"1000258" -> "1000275"  [label="DDG: req"];
"1000113" -> "1000275"  [label="DDG: req"];
"1000275" -> "1000599"  [label="DDG: sk"];
"1000258" -> "1000256"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000258" -> "1000604"  [label="DDG: req"];
"1000258" -> "1000256"  [label="DDG: req"];
"1000113" -> "1000258"  [label="DDG: req"];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000604"  [label="DDG: req"];
"1000113" -> "1000139"  [label="DDG: req"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000604"  [label="DDG: skb"];
"1000112" -> "1000139"  [label="DDG: skb"];
"1000112" -> "1000238"  [label="DDG: skb"];
"1000112" -> "1000245"  [label="DDG: skb"];
"1000112" -> "1000437"  [label="DDG: skb"];
"1000112" -> "1000444"  [label="DDG: skb"];
"1000458" -> "1000457"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000458"  [label="AST: "];
"1000464" -> "1000458"  [label="CFG: "];
"1000472" -> "1000458"  [label="CFG: "];
"1000458" -> "1000604"  [label="DDG: np->opt"];
"1000458" -> "1000604"  [label="DDG: opt"];
"1000458" -> "1000604"  [label="DDG: opt != np->opt"];
"1000454" -> "1000458"  [label="DDG: opt"];
"1000454" -> "1000450"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000450" -> "1000454"  [label="CFG: "];
"1000454" -> "1000450"  [label="DDG: newsk"];
"1000454" -> "1000450"  [label="DDG: opt"];
"1000423" -> "1000454"  [label="DDG: newsk"];
"1000327" -> "1000454"  [label="DDG: newsk"];
"1000260" -> "1000454"  [label="DDG: opt"];
"1000454" -> "1000471"  [label="DDG: newsk"];
"1000423" -> "1000419"  [label="AST: "];
"1000423" -> "1000427"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000427" -> "1000423"  [label="AST: "];
"1000430" -> "1000423"  [label="CFG: "];
"1000423" -> "1000604"  [label="DDG: skb_set_owner_r(newnp->pktoptions, newsk)"];
"1000423" -> "1000604"  [label="DDG: newnp->pktoptions"];
"1000401" -> "1000423"  [label="DDG: newnp->pktoptions"];
"1000327" -> "1000423"  [label="DDG: newsk"];
"1000423" -> "1000471"  [label="DDG: newsk"];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000405"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="AST: "];
"1000412" -> "1000401"  [label="CFG: "];
"1000401" -> "1000604"  [label="DDG: skb_clone(treq->pktopts, GFP_ATOMIC)"];
"1000401" -> "1000604"  [label="DDG: newnp->pktoptions"];
"1000405" -> "1000401"  [label="DDG: treq->pktopts"];
"1000405" -> "1000401"  [label="DDG: GFP_ATOMIC"];
"1000405" -> "1000409"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000409" -> "1000405"  [label="AST: "];
"1000405" -> "1000604"  [label="DDG: GFP_ATOMIC"];
"1000395" -> "1000405"  [label="DDG: treq->pktopts"];
"1000405" -> "1000410"  [label="DDG: treq->pktopts"];
"1000405" -> "1000538"  [label="DDG: GFP_ATOMIC"];
"1000395" -> "1000394"  [label="AST: "];
"1000395" -> "1000399"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000399" -> "1000395"  [label="AST: "];
"1000403" -> "1000395"  [label="CFG: "];
"1000430" -> "1000395"  [label="CFG: "];
"1000395" -> "1000604"  [label="DDG: treq->pktopts"];
"1000395" -> "1000604"  [label="DDG: treq->pktopts != NULL"];
"1000298" -> "1000395"  [label="DDG: NULL"];
"1000395" -> "1000414"  [label="DDG: NULL"];
"1000395" -> "1000428"  [label="DDG: NULL"];
"1000395" -> "1000524"  [label="DDG: NULL"];
"1000298" -> "1000115"  [label="AST: "];
"1000298" -> "1000302"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000301" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="AST: "];
"1000304" -> "1000298"  [label="CFG: "];
"1000298" -> "1000604"  [label="DDG: __ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000289" -> "1000298"  [label="DDG: newsk"];
"1000289" -> "1000298"  [label="DDG: NULL"];
"1000279" -> "1000298"  [label="DDG: dst"];
"1000270" -> "1000298"  [label="DDG: dst"];
"1000114" -> "1000298"  [label="DDG: dst"];
"1000298" -> "1000305"  [label="DDG: newsk"];
"1000298" -> "1000368"  [label="DDG: NULL"];
"1000298" -> "1000373"  [label="DDG: NULL"];
"1000298" -> "1000389"  [label="DDG: NULL"];
"1000298" -> "1000499"  [label="DDG: dst"];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000292" -> "1000289"  [label="CFG: "];
"1000295" -> "1000289"  [label="CFG: "];
"1000289" -> "1000604"  [label="DDG: NULL"];
"1000289" -> "1000604"  [label="DDG: newsk"];
"1000289" -> "1000604"  [label="DDG: newsk == NULL"];
"1000282" -> "1000289"  [label="DDG: newsk"];
"1000289" -> "1000602"  [label="DDG: NULL"];
"1000282" -> "1000115"  [label="AST: "];
"1000283" -> "1000282"  [label="AST: "];
"1000290" -> "1000282"  [label="CFG: "];
"1000282" -> "1000604"  [label="DDG: tcp_create_openreq_child(sk, req, skb)"];
"1000279" -> "1000278"  [label="AST: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="CFG: "];
"1000283" -> "1000279"  [label="CFG: "];
"1000279" -> "1000604"  [label="DDG: dst"];
"1000279" -> "1000604"  [label="DDG: !dst"];
"1000273" -> "1000279"  [label="DDG: dst"];
"1000114" -> "1000279"  [label="DDG: dst"];
"1000279" -> "1000595"  [label="DDG: dst"];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000273"  [label="AST: "];
"1000280" -> "1000273"  [label="CFG: "];
"1000273" -> "1000604"  [label="DDG: inet6_csk_route_req(sk, req)"];
"1000114" -> "1000273"  [label="DDG: dst"];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000604"  [label="DDG: dst"];
"1000114" -> "1000139"  [label="DDG: dst"];
"1000114" -> "1000270"  [label="DDG: dst"];
"1000114" -> "1000499"  [label="DDG: dst"];
"1000114" -> "1000505"  [label="DDG: dst"];
"1000114" -> "1000595"  [label="DDG: dst"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000271"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="CFG: "];
"1000283" -> "1000270"  [label="CFG: "];
"1000270" -> "1000604"  [label="DDG: !dst"];
"1000270" -> "1000595"  [label="DDG: dst"];
"1000327" -> "1000325"  [label="AST: "];
"1000327" -> "1000328"  [label="CFG: "];
"1000328" -> "1000327"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000327" -> "1000325"  [label="DDG: newsk"];
"1000323" -> "1000327"  [label="DDG: newsk"];
"1000327" -> "1000471"  [label="DDG: newsk"];
"1000323" -> "1000321"  [label="AST: "];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000323" -> "1000321"  [label="DDG: newsk"];
"1000319" -> "1000323"  [label="DDG: newsk"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000317"  [label="DDG: newsk"];
"1000310" -> "1000319"  [label="DDG: newsk"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="CFG: "];
"1000305" -> "1000310"  [label="DDG: newsk"];
"1000305" -> "1000303"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000305" -> "1000303"  [label="DDG: newsk"];
"1000260" -> "1000115"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000267" -> "1000260"  [label="CFG: "];
"1000260" -> "1000604"  [label="DDG: np->opt"];
"1000260" -> "1000604"  [label="DDG: opt"];
"1000260" -> "1000582"  [label="DDG: opt"];
"1000260" -> "1000584"  [label="DDG: opt"];
"1000527" -> "1000525"  [label="AST: "];
"1000527" -> "1000529"  [label="CFG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000529" -> "1000527"  [label="AST: "];
"1000525" -> "1000527"  [label="CFG: "];
"1000527" -> "1000604"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000524"  [label="DDG: sk"];
"1000527" -> "1000524"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000525"  [label="DDG: sk"];
"1000527" -> "1000525"  [label="DDG: &newnp->daddr"];
"1000334" -> "1000527"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000550"  [label="DDG: &newnp->daddr"];
"1000527" -> "1000562"  [label="DDG: sk"];
"1000524" -> "1000523"  [label="AST: "];
"1000524" -> "1000533"  [label="CFG: "];
"1000525" -> "1000524"  [label="AST: "];
"1000533" -> "1000524"  [label="AST: "];
"1000537" -> "1000524"  [label="CFG: "];
"1000563" -> "1000524"  [label="CFG: "];
"1000524" -> "1000604"  [label="DDG: NULL"];
"1000524" -> "1000604"  [label="DDG: (key = tcp_v6_md5_do_lookup(sk, &newnp->daddr)) != NULL"];
"1000525" -> "1000524"  [label="DDG: key"];
"1000524" -> "1000547"  [label="DDG: NULL"];
"1000524" -> "1000570"  [label="DDG: NULL"];
"1000524" -> "1000602"  [label="DDG: NULL"];
"1000547" -> "1000546"  [label="AST: "];
"1000547" -> "1000549"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000549" -> "1000547"  [label="AST: "];
"1000551" -> "1000547"  [label="CFG: "];
"1000563" -> "1000547"  [label="CFG: "];
"1000547" -> "1000604"  [label="DDG: newkey"];
"1000547" -> "1000604"  [label="DDG: newkey != NULL"];
"1000547" -> "1000604"  [label="DDG: NULL"];
"1000536" -> "1000547"  [label="DDG: newkey"];
"1000547" -> "1000550"  [label="DDG: newkey"];
"1000547" -> "1000570"  [label="DDG: NULL"];
"1000547" -> "1000602"  [label="DDG: NULL"];
"1000550" -> "1000546"  [label="AST: "];
"1000550" -> "1000557"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="AST: "];
"1000556" -> "1000550"  [label="AST: "];
"1000557" -> "1000550"  [label="AST: "];
"1000563" -> "1000550"  [label="CFG: "];
"1000550" -> "1000604"  [label="DDG: tcp_v6_md5_do_add(newsk, &newnp->daddr,\n\t\t\t\t\t  newkey, key->keylen)"];
"1000550" -> "1000604"  [label="DDG: key->keylen"];
"1000550" -> "1000604"  [label="DDG: newkey"];
"1000550" -> "1000604"  [label="DDG: &newnp->daddr"];
"1000507" -> "1000550"  [label="DDG: newsk"];
"1000538" -> "1000550"  [label="DDG: key->keylen"];
"1000550" -> "1000562"  [label="DDG: newsk"];
"1000562" -> "1000561"  [label="AST: "];
"1000562" -> "1000564"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="AST: "];
"1000565" -> "1000562"  [label="CFG: "];
"1000562" -> "1000604"  [label="DDG: sk"];
"1000562" -> "1000561"  [label="DDG: sk"];
"1000562" -> "1000561"  [label="DDG: newsk"];
"1000507" -> "1000562"  [label="DDG: newsk"];
"1000562" -> "1000567"  [label="DDG: newsk"];
"1000562" -> "1000570"  [label="DDG: newsk"];
"1000562" -> "1000599"  [label="DDG: sk"];
"1000561" -> "1000560"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000565" -> "1000561"  [label="AST: "];
"1000568" -> "1000561"  [label="CFG: "];
"1000571" -> "1000561"  [label="CFG: "];
"1000561" -> "1000604"  [label="DDG: __inet_inherit_port(sk, newsk)"];
"1000561" -> "1000604"  [label="DDG: __inet_inherit_port(sk, newsk) < 0"];
"1000567" -> "1000566"  [label="AST: "];
"1000567" -> "1000568"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="CFG: "];
"1000567" -> "1000604"  [label="DDG: newsk"];
"1000567" -> "1000604"  [label="DDG: sock_put(newsk)"];
"1000570" -> "1000115"  [label="AST: "];
"1000570" -> "1000572"  [label="CFG: "];
"1000571" -> "1000570"  [label="AST: "];
"1000572" -> "1000570"  [label="AST: "];
"1000574" -> "1000570"  [label="CFG: "];
"1000570" -> "1000604"  [label="DDG: newsk"];
"1000570" -> "1000604"  [label="DDG: NULL"];
"1000570" -> "1000604"  [label="DDG: __inet6_hash(newsk, NULL)"];
"1000570" -> "1000573"  [label="DDG: newsk"];
"1000573" -> "1000115"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000604" -> "1000573"  [label="CFG: "];
"1000573" -> "1000604"  [label="DDG: <RET>"];
"1000574" -> "1000573"  [label="DDG: newsk"];
"1000599" -> "1000598"  [label="AST: "];
"1000599" -> "1000600"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="CFG: "];
"1000599" -> "1000604"  [label="DDG: sk"];
"1000599" -> "1000598"  [label="DDG: sk"];
"1000589" -> "1000599"  [label="DDG: sk"];
"1000577" -> "1000599"  [label="DDG: sk"];
"1000598" -> "1000115"  [label="AST: "];
"1000598" -> "1000601"  [label="CFG: "];
"1000601" -> "1000598"  [label="AST: "];
"1000603" -> "1000598"  [label="CFG: "];
"1000598" -> "1000604"  [label="DDG: sock_net(sk)"];
"1000598" -> "1000604"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000598" -> "1000604"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000602" -> "1000115"  [label="AST: "];
"1000602" -> "1000603"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000604" -> "1000602"  [label="CFG: "];
"1000602" -> "1000604"  [label="DDG: <RET>"];
"1000603" -> "1000602"  [label="DDG: NULL"];
"1000526" -> "1000525"  [label="AST: "];
"1000533" -> "1000525"  [label="CFG: "];
"1000525" -> "1000604"  [label="DDG: key"];
"1000525" -> "1000604"  [label="DDG: tcp_v6_md5_do_lookup(sk, &newnp->daddr)"];
}
