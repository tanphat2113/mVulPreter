digraph "0_libtiff_ce6841d9e41d621ba23cf18b190ee6a23b2cc833@array" {
"1000208" [label="(Call,code = prefix[code])"];
"1000102" [label="(MethodParameterIn,register int code)"];
"1000197" [label="(Call,code > clear)"];
"1000268" [label="(MethodReturn,RET)"];
"1000146" [label="(Call,fprintf(stderr, \"bad input: code=%d is larger than clear=%d\n\",code, clear))"];
"1000142" [label="(Call,code >= clear)"];
"1000209" [label="(Identifier,code)"];
"1000193" [label="(Call,code = oldcode)"];
"1000161" [label="(Call,firstchar = oldcode = code)"];
"1000199" [label="(Identifier,clear)"];
"1000197" [label="(Call,code > clear)"];
"1000163" [label="(Call,oldcode = code)"];
"1000204" [label="(Identifier,stackp)"];
"1000180" [label="(Call,incode = code)"];
"1000198" [label="(Identifier,code)"];
"1000184" [label="(Call,code == avail)"];
"1000108" [label="(Call,code == clear)"];
"1000196" [label="(ControlStructure,while (code > clear))"];
"1000208" [label="(Call,code = prefix[code])"];
"1000169" [label="(Call,code > avail)"];
"1000173" [label="(Call,fprintf(stderr, \"code %d too large for %d\n\", code, avail))"];
"1000216" [label="(Identifier,stackp)"];
"1000200" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,register int code)"];
"1000210" [label="(Call,prefix[code])"];
"1000208" -> "1000200"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000198" -> "1000208"  [label="CFG: "];
"1000208" -> "1000268"  [label="DDG: prefix[code]"];
"1000208" -> "1000197"  [label="DDG: code"];
"1000102" -> "1000208"  [label="DDG: code"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000268"  [label="DDG: code"];
"1000102" -> "1000108"  [label="DDG: code"];
"1000102" -> "1000142"  [label="DDG: code"];
"1000102" -> "1000146"  [label="DDG: code"];
"1000102" -> "1000161"  [label="DDG: code"];
"1000102" -> "1000163"  [label="DDG: code"];
"1000102" -> "1000169"  [label="DDG: code"];
"1000102" -> "1000173"  [label="DDG: code"];
"1000102" -> "1000180"  [label="DDG: code"];
"1000102" -> "1000184"  [label="DDG: code"];
"1000102" -> "1000193"  [label="DDG: code"];
"1000102" -> "1000197"  [label="DDG: code"];
"1000197" -> "1000196"  [label="AST: "];
"1000197" -> "1000199"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000197"  [label="AST: "];
"1000204" -> "1000197"  [label="CFG: "];
"1000216" -> "1000197"  [label="CFG: "];
"1000197" -> "1000268"  [label="DDG: code > clear"];
"1000197" -> "1000268"  [label="DDG: clear"];
"1000197" -> "1000268"  [label="DDG: code"];
"1000193" -> "1000197"  [label="DDG: code"];
"1000184" -> "1000197"  [label="DDG: code"];
"1000108" -> "1000197"  [label="DDG: clear"];
}
