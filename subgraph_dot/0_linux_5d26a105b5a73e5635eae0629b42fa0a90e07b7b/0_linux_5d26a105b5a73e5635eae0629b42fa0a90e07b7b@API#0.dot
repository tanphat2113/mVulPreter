digraph "0_linux_5d26a105b5a73e5635eae0629b42fa0a90e07b7b@API" {
"1000122" [label="(Call,alg = crypto_alg_lookup(name, type, mask))"];
"1000124" [label="(Call,crypto_alg_lookup(name, type, mask))"];
"1000107" [label="(Call,!name)"];
"1000101" [label="(MethodParameterIn,const char *name)"];
"1000119" [label="(Call,type &= mask)"];
"1000102" [label="(MethodParameterIn,u32 type)"];
"1000113" [label="(Call,mask &= ~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD))"];
"1000103" [label="(MethodParameterIn,u32 mask)"];
"1000115" [label="(Call,~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD))"];
"1000116" [label="(Call,CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD)"];
"1000129" [label="(Call,!alg)"];
"1000157" [label="(Call,crypto_is_larval(alg))"];
"1000156" [label="(Call,crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg)"];
"1000155" [label="(Return,return crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg;)"];
"1000159" [label="(Call,crypto_larval_wait(alg))"];
"1000157" [label="(Call,crypto_is_larval(alg))"];
"1000123" [label="(Identifier,alg)"];
"1000127" [label="(Identifier,mask)"];
"1000112" [label="(Identifier,ENOENT)"];
"1000116" [label="(Call,CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD)"];
"1000107" [label="(Call,!name)"];
"1000155" [label="(Return,return crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg;)"];
"1000121" [label="(Identifier,mask)"];
"1000158" [label="(Identifier,alg)"];
"1000144" [label="(Call,request_module(\"crypto-%s-all\", name))"];
"1000129" [label="(Call,!alg)"];
"1000126" [label="(Identifier,type)"];
"1000114" [label="(Identifier,mask)"];
"1000159" [label="(Call,crypto_larval_wait(alg))"];
"1000124" [label="(Call,crypto_alg_lookup(name, type, mask))"];
"1000138" [label="(Call,type ^ CRYPTO_ALG_NEED_FALLBACK)"];
"1000125" [label="(Identifier,name)"];
"1000101" [label="(MethodParameterIn,const char *name)"];
"1000113" [label="(Call,mask &= ~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD))"];
"1000102" [label="(MethodParameterIn,u32 type)"];
"1000119" [label="(Call,type &= mask)"];
"1000115" [label="(Call,~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD))"];
"1000117" [label="(Identifier,CRYPTO_ALG_LARVAL)"];
"1000133" [label="(Literal,\"crypto-%s\")"];
"1000128" [label="(ControlStructure,if (!alg))"];
"1000118" [label="(Identifier,CRYPTO_ALG_DEAD)"];
"1000108" [label="(Identifier,name)"];
"1000141" [label="(Call,mask &\n \t\t      CRYPTO_ALG_NEED_FALLBACK)"];
"1000104" [label="(Block,)"];
"1000120" [label="(Identifier,type)"];
"1000161" [label="(Identifier,alg)"];
"1000163" [label="(Call,crypto_larval_add(name, type, mask))"];
"1000122" [label="(Call,alg = crypto_alg_lookup(name, type, mask))"];
"1000106" [label="(ControlStructure,if (!name))"];
"1000156" [label="(Call,crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg)"];
"1000167" [label="(MethodReturn,struct crypto_alg *)"];
"1000147" [label="(Call,alg = crypto_alg_lookup(name, type, mask))"];
"1000132" [label="(Call,request_module(\"crypto-%s\", name))"];
"1000130" [label="(Identifier,alg)"];
"1000103" [label="(MethodParameterIn,u32 mask)"];
"1000149" [label="(Call,crypto_alg_lookup(name, type, mask))"];
"1000160" [label="(Identifier,alg)"];
"1000153" [label="(ControlStructure,if (alg))"];
"1000154" [label="(Identifier,alg)"];
"1000122" -> "1000104"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000130" -> "1000122"  [label="CFG: "];
"1000122" -> "1000167"  [label="DDG: crypto_alg_lookup(name, type, mask)"];
"1000124" -> "1000122"  [label="DDG: name"];
"1000124" -> "1000122"  [label="DDG: type"];
"1000124" -> "1000122"  [label="DDG: mask"];
"1000122" -> "1000129"  [label="DDG: alg"];
"1000124" -> "1000127"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000127" -> "1000124"  [label="AST: "];
"1000124" -> "1000167"  [label="DDG: name"];
"1000124" -> "1000167"  [label="DDG: mask"];
"1000124" -> "1000167"  [label="DDG: type"];
"1000107" -> "1000124"  [label="DDG: name"];
"1000101" -> "1000124"  [label="DDG: name"];
"1000119" -> "1000124"  [label="DDG: type"];
"1000119" -> "1000124"  [label="DDG: mask"];
"1000102" -> "1000124"  [label="DDG: type"];
"1000103" -> "1000124"  [label="DDG: mask"];
"1000124" -> "1000132"  [label="DDG: name"];
"1000124" -> "1000138"  [label="DDG: type"];
"1000124" -> "1000141"  [label="DDG: mask"];
"1000124" -> "1000163"  [label="DDG: name"];
"1000124" -> "1000163"  [label="DDG: type"];
"1000124" -> "1000163"  [label="DDG: mask"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000108"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000112" -> "1000107"  [label="CFG: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000167"  [label="DDG: name"];
"1000107" -> "1000167"  [label="DDG: !name"];
"1000101" -> "1000107"  [label="DDG: name"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000167"  [label="DDG: name"];
"1000101" -> "1000132"  [label="DDG: name"];
"1000101" -> "1000144"  [label="DDG: name"];
"1000101" -> "1000149"  [label="DDG: name"];
"1000101" -> "1000163"  [label="DDG: name"];
"1000119" -> "1000104"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000119" -> "1000167"  [label="DDG: type &= mask"];
"1000102" -> "1000119"  [label="DDG: type"];
"1000113" -> "1000119"  [label="DDG: mask"];
"1000103" -> "1000119"  [label="DDG: mask"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000167"  [label="DDG: type"];
"1000102" -> "1000138"  [label="DDG: type"];
"1000102" -> "1000149"  [label="DDG: type"];
"1000102" -> "1000163"  [label="DDG: type"];
"1000113" -> "1000104"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000120" -> "1000113"  [label="CFG: "];
"1000113" -> "1000167"  [label="DDG: ~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD)"];
"1000113" -> "1000167"  [label="DDG: mask &= ~(CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD)"];
"1000103" -> "1000113"  [label="DDG: mask"];
"1000115" -> "1000113"  [label="DDG: CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000167"  [label="DDG: mask"];
"1000103" -> "1000141"  [label="DDG: mask"];
"1000103" -> "1000149"  [label="DDG: mask"];
"1000103" -> "1000163"  [label="DDG: mask"];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000115" -> "1000167"  [label="DDG: CRYPTO_ALG_LARVAL | CRYPTO_ALG_DEAD"];
"1000116" -> "1000115"  [label="DDG: CRYPTO_ALG_LARVAL"];
"1000116" -> "1000115"  [label="DDG: CRYPTO_ALG_DEAD"];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000116" -> "1000167"  [label="DDG: CRYPTO_ALG_DEAD"];
"1000116" -> "1000167"  [label="DDG: CRYPTO_ALG_LARVAL"];
"1000129" -> "1000128"  [label="AST: "];
"1000129" -> "1000130"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000154" -> "1000129"  [label="CFG: "];
"1000129" -> "1000167"  [label="DDG: alg"];
"1000129" -> "1000167"  [label="DDG: !alg"];
"1000129" -> "1000157"  [label="DDG: alg"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="CFG: "];
"1000161" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="DDG: alg"];
"1000147" -> "1000157"  [label="DDG: alg"];
"1000157" -> "1000159"  [label="DDG: alg"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000159"  [label="CFG: "];
"1000156" -> "1000161"  [label="CFG: "];
"1000159" -> "1000156"  [label="AST: "];
"1000161" -> "1000156"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000167"  [label="DDG: crypto_is_larval(alg)"];
"1000156" -> "1000167"  [label="DDG: crypto_larval_wait(alg)"];
"1000156" -> "1000167"  [label="DDG: crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg"];
"1000156" -> "1000167"  [label="DDG: alg"];
"1000156" -> "1000155"  [label="DDG: crypto_is_larval(alg) ? crypto_larval_wait(alg) : alg"];
"1000159" -> "1000156"  [label="DDG: alg"];
"1000155" -> "1000153"  [label="AST: "];
"1000167" -> "1000155"  [label="CFG: "];
"1000155" -> "1000167"  [label="DDG: <RET>"];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
}
