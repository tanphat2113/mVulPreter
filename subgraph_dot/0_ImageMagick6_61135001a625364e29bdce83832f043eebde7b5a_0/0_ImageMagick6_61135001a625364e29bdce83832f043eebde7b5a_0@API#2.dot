digraph "0_ImageMagick6_61135001a625364e29bdce83832f043eebde7b5a_0@API" {
"1000363" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000280" [label="(Call,hash_prefix == (short *) NULL)"];
"1000248" [label="(Call,hash_prefix=(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000250" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000252" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000243" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000282" [label="(Call,(short *) NULL)"];
"1000276" [label="(Call,(short *) NULL)"];
"1000270" [label="(Call,(unsigned char *) NULL)"];
"1000224" [label="(Call,(Image *) NULL)"];
"1000366" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000356" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000261" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000361" [label="(Call,(void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000553" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000521" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000519" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000533" [label="(Call,k >= MaxHashTable)"];
"1000536" [label="(Call,k-=MaxHashTable)"];
"1000540" [label="(Call,k < 0)"];
"1000573" [label="(Call,k != 0)"];
"1000578" [label="(Call,MaxHashTable-k)"];
"1000576" [label="(Call,displacement=MaxHashTable-k)"];
"1000583" [label="(Call,k-=displacement)"];
"1000587" [label="(Call,k < 0)"];
"1000590" [label="(Call,k+=MaxHashTable)"];
"1000662" [label="(Call,k < MaxHashTable)"];
"1000665" [label="(Call,k++)"];
"1000523" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000552" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000601" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000602" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000629" [label="(Call,GIFOutputCode(waiting_code))"];
"1000644" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000838" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000836" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000834" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000770" [label="(Call,GIFOutputCode(waiting_code))"];
"1000584" [label="(Identifier,k)"];
"1000457" [label="(Call,(const Quantum *) NULL)"];
"1000773" [label="(Identifier,end_of_information_code)"];
"1000253" [label="(Identifier,MaxHashTable)"];
"1000586" [label="(ControlStructure,if (k < 0))"];
"1000520" [label="(Identifier,k)"];
"1000243" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000585" [label="(Identifier,displacement)"];
"1000466" [label="(Call,waiting_code=(short) GetPixelIndex(image,p))"];
"1000538" [label="(Identifier,MaxHashTable)"];
"1000524" [label="(Call,(size_t) index << (MaxGIFBits-8))"];
"1000609" [label="(Identifier,hash_suffix)"];
"1000630" [label="(Identifier,waiting_code)"];
"1000615" [label="(Call,waiting_code=hash_code[k])"];
"1000533" [label="(Call,k >= MaxHashTable)"];
"1000358" [label="(Call,sizeof(*hash_code))"];
"1000836" [label="(Call,(short *) RelinquishMagickMemory(hash_prefix))"];
"1000224" [label="(Call,(Image *) NULL)"];
"1000263" [label="(Call,sizeof(*hash_suffix))"];
"1000578" [label="(Call,MaxHashTable-k)"];
"1000270" [label="(Call,(unsigned char *) NULL)"];
"1000588" [label="(Identifier,k)"];
"1000645" [label="(Call,hash_prefix[k])"];
"1000582" [label="(Block,)"];
"1000284" [label="(Identifier,NULL)"];
"1000497" [label="(Block,)"];
"1000575" [label="(Literal,0)"];
"1000607" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000659" [label="(Call,k=0)"];
"1000272" [label="(Identifier,NULL)"];
"1000551" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000361" [label="(Call,(void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000664" [label="(Identifier,MaxHashTable)"];
"1000501" [label="(Call,displacement=1)"];
"1000250" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000590" [label="(Call,k+=MaxHashTable)"];
"1000635" [label="(Block,)"];
"1000567" [label="(Identifier,waiting_code)"];
"1000601" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000357" [label="(Identifier,MaxHashTable)"];
"1000663" [label="(Identifier,k)"];
"1000633" [label="(Identifier,free_code)"];
"1000534" [label="(Identifier,k)"];
"1000658" [label="(ControlStructure,for (k=0; k < MaxHashTable; k++))"];
"1000294" [label="(Call,(unsigned char *) NULL)"];
"1000368" [label="(Call,sizeof(*hash_prefix))"];
"1000554" [label="(Call,hash_prefix[k])"];
"1000366" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000662" [label="(Call,k < MaxHashTable)"];
"1000589" [label="(Literal,0)"];
"1000276" [label="(Call,(short *) NULL)"];
"1000226" [label="(Identifier,NULL)"];
"1000280" [label="(Call,hash_prefix == (short *) NULL)"];
"1000536" [label="(Call,k-=MaxHashTable)"];
"1000287" [label="(Call,(unsigned char *) NULL)"];
"1000248" [label="(Call,hash_prefix=(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000839" [label="(Identifier,hash_prefix)"];
"1000376" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000547" [label="(Identifier,hash_code)"];
"1000259" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000673" [label="(Identifier,free_code)"];
"1000770" [label="(Call,GIFOutputCode(waiting_code))"];
"1000686" [label="(Call,waiting_code=(short) index)"];
"1000665" [label="(Call,k++)"];
"1000577" [label="(Identifier,displacement)"];
"1000353" [label="(Call,memset(hash_code,0,MaxHashTable*sizeof(*hash_code)))"];
"1000367" [label="(Identifier,MaxHashTable)"];
"1000572" [label="(ControlStructure,if (k != 0))"];
"1000834" [label="(Call,hash_prefix=(short *) RelinquishMagickMemory(hash_prefix))"];
"1000274" [label="(Call,hash_code == (short *) NULL)"];
"1000669" [label="(Identifier,hash_code)"];
"1000552" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000254" [label="(Call,sizeof(*hash_prefix))"];
"1000519" [label="(Call,k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000282" [label="(Call,(short *) NULL)"];
"1000286" [label="(Identifier,hash_suffix)"];
"1000648" [label="(Identifier,waiting_code)"];
"1000835" [label="(Identifier,hash_prefix)"];
"1000537" [label="(Identifier,k)"];
"1000580" [label="(Identifier,k)"];
"1000244" [label="(Identifier,MaxHashTable)"];
"1000591" [label="(Identifier,k)"];
"1000558" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000629" [label="(Call,GIFOutputCode(waiting_code))"];
"1000616" [label="(Identifier,waiting_code)"];
"1000363" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000606" [label="(Identifier,waiting_code)"];
"1000281" [label="(Identifier,hash_prefix)"];
"1000540" [label="(Call,k < 0)"];
"1000576" [label="(Call,displacement=MaxHashTable-k)"];
"1000117" [label="(Block,)"];
"1000539" [label="(ControlStructure,if (k < 0))"];
"1000252" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000222" [label="(Call,image != (Image *) NULL)"];
"1000841" [label="(Identifier,hash_code)"];
"1000854" [label="(MethodReturn,static MagickBooleanType)"];
"1000560" [label="(Identifier,hash_suffix)"];
"1000592" [label="(Identifier,MaxHashTable)"];
"1000535" [label="(Identifier,MaxHashTable)"];
"1000644" [label="(Call,hash_prefix[k]=waiting_code)"];
"1000651" [label="(Identifier,hash_suffix)"];
"1000557" [label="(Identifier,waiting_code)"];
"1000316" [label="(Call,hash_prefix != (short *) NULL)"];
"1000553" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000543" [label="(ControlStructure,continue;)"];
"1000424" [label="(Call,waiting_code=0)"];
"1000573" [label="(Call,k != 0)"];
"1000596" [label="(Identifier,hash_code)"];
"1000603" [label="(Call,hash_prefix[k])"];
"1000245" [label="(Call,sizeof(*hash_code))"];
"1000268" [label="(Call,packet == (unsigned char *) NULL)"];
"1000531" [label="(Identifier,waiting_code)"];
"1000532" [label="(ControlStructure,if (k >= MaxHashTable))"];
"1000356" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000258" [label="(Identifier,hash_suffix)"];
"1000838" [label="(Call,RelinquishMagickMemory(hash_prefix))"];
"1000262" [label="(Identifier,MaxHashTable)"];
"1000364" [label="(Identifier,hash_prefix)"];
"1000566" [label="(Call,waiting_code=hash_code[k])"];
"1000541" [label="(Identifier,k)"];
"1000583" [label="(Call,k-=displacement)"];
"1000602" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000241" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000574" [label="(Identifier,k)"];
"1000521" [label="(Call,(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code))"];
"1000542" [label="(Literal,0)"];
"1000771" [label="(Identifier,waiting_code)"];
"1000587" [label="(Call,k < 0)"];
"1000579" [label="(Identifier,MaxHashTable)"];
"1000523" [label="(Call,((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000365" [label="(Literal,0)"];
"1000278" [label="(Identifier,NULL)"];
"1000261" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000666" [label="(Identifier,k)"];
"1000279" [label="(Call,(hash_prefix == (short *) NULL) ||\n      (hash_suffix == (unsigned char *) NULL))"];
"1000600" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000249" [label="(Identifier,hash_prefix)"];
"1000363" -> "1000361"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000363" -> "1000854"  [label="DDG: MaxHashTable*sizeof(*hash_prefix)"];
"1000363" -> "1000361"  [label="DDG: hash_prefix"];
"1000363" -> "1000361"  [label="DDG: 0"];
"1000363" -> "1000361"  [label="DDG: MaxHashTable*sizeof(*hash_prefix)"];
"1000280" -> "1000363"  [label="DDG: hash_prefix"];
"1000248" -> "1000363"  [label="DDG: hash_prefix"];
"1000366" -> "1000363"  [label="DDG: MaxHashTable"];
"1000363" -> "1000553"  [label="DDG: hash_prefix"];
"1000363" -> "1000602"  [label="DDG: hash_prefix"];
"1000363" -> "1000838"  [label="DDG: hash_prefix"];
"1000280" -> "1000279"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="CFG: "];
"1000279" -> "1000280"  [label="CFG: "];
"1000280" -> "1000854"  [label="DDG: (short *) NULL"];
"1000280" -> "1000279"  [label="DDG: hash_prefix"];
"1000280" -> "1000279"  [label="DDG: (short *) NULL"];
"1000248" -> "1000280"  [label="DDG: hash_prefix"];
"1000282" -> "1000280"  [label="DDG: NULL"];
"1000280" -> "1000316"  [label="DDG: hash_prefix"];
"1000248" -> "1000117"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="CFG: "];
"1000248" -> "1000854"  [label="DDG: (short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000250" -> "1000248"  [label="DDG: AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000248" -> "1000316"  [label="DDG: hash_prefix"];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000250" -> "1000854"  [label="DDG: AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix))"];
"1000252" -> "1000250"  [label="DDG: MaxHashTable"];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000243" -> "1000252"  [label="DDG: MaxHashTable"];
"1000252" -> "1000261"  [label="DDG: MaxHashTable"];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000243" -> "1000241"  [label="DDG: MaxHashTable"];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000282" -> "1000854"  [label="DDG: NULL"];
"1000276" -> "1000282"  [label="DDG: NULL"];
"1000282" -> "1000287"  [label="DDG: NULL"];
"1000282" -> "1000294"  [label="DDG: NULL"];
"1000282" -> "1000457"  [label="DDG: NULL"];
"1000276" -> "1000274"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000276" -> "1000854"  [label="DDG: NULL"];
"1000276" -> "1000274"  [label="DDG: NULL"];
"1000270" -> "1000276"  [label="DDG: NULL"];
"1000276" -> "1000294"  [label="DDG: NULL"];
"1000276" -> "1000457"  [label="DDG: NULL"];
"1000270" -> "1000268"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000270" -> "1000854"  [label="DDG: NULL"];
"1000270" -> "1000268"  [label="DDG: NULL"];
"1000224" -> "1000270"  [label="DDG: NULL"];
"1000270" -> "1000294"  [label="DDG: NULL"];
"1000270" -> "1000457"  [label="DDG: NULL"];
"1000224" -> "1000222"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000224" -> "1000222"  [label="DDG: NULL"];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000356" -> "1000366"  [label="DDG: MaxHashTable"];
"1000366" -> "1000376"  [label="DDG: MaxHashTable"];
"1000356" -> "1000353"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000353" -> "1000356"  [label="CFG: "];
"1000356" -> "1000353"  [label="DDG: MaxHashTable"];
"1000261" -> "1000356"  [label="DDG: MaxHashTable"];
"1000261" -> "1000259"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000261" -> "1000854"  [label="DDG: MaxHashTable"];
"1000261" -> "1000259"  [label="DDG: MaxHashTable"];
"1000361" -> "1000117"  [label="AST: "];
"1000362" -> "1000361"  [label="AST: "];
"1000372" -> "1000361"  [label="CFG: "];
"1000361" -> "1000854"  [label="DDG: (void) memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix))"];
"1000361" -> "1000854"  [label="DDG: memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix))"];
"1000553" -> "1000552"  [label="AST: "];
"1000553" -> "1000557"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000557" -> "1000553"  [label="AST: "];
"1000560" -> "1000553"  [label="CFG: "];
"1000552" -> "1000553"  [label="CFG: "];
"1000553" -> "1000854"  [label="DDG: hash_prefix[k]"];
"1000553" -> "1000521"  [label="DDG: waiting_code"];
"1000553" -> "1000523"  [label="DDG: waiting_code"];
"1000553" -> "1000552"  [label="DDG: hash_prefix[k]"];
"1000553" -> "1000552"  [label="DDG: waiting_code"];
"1000644" -> "1000553"  [label="DDG: hash_prefix[k]"];
"1000602" -> "1000553"  [label="DDG: hash_prefix[k]"];
"1000602" -> "1000553"  [label="DDG: waiting_code"];
"1000424" -> "1000553"  [label="DDG: waiting_code"];
"1000615" -> "1000553"  [label="DDG: waiting_code"];
"1000466" -> "1000553"  [label="DDG: waiting_code"];
"1000686" -> "1000553"  [label="DDG: waiting_code"];
"1000566" -> "1000553"  [label="DDG: waiting_code"];
"1000553" -> "1000602"  [label="DDG: hash_prefix[k]"];
"1000553" -> "1000602"  [label="DDG: waiting_code"];
"1000553" -> "1000629"  [label="DDG: waiting_code"];
"1000553" -> "1000770"  [label="DDG: waiting_code"];
"1000553" -> "1000838"  [label="DDG: hash_prefix[k]"];
"1000521" -> "1000519"  [label="AST: "];
"1000521" -> "1000523"  [label="CFG: "];
"1000522" -> "1000521"  [label="AST: "];
"1000523" -> "1000521"  [label="AST: "];
"1000519" -> "1000521"  [label="CFG: "];
"1000521" -> "1000854"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000521" -> "1000519"  [label="DDG: ((size_t) index << (MaxGIFBits-8))+waiting_code"];
"1000524" -> "1000521"  [label="DDG: (size_t) index"];
"1000524" -> "1000521"  [label="DDG: MaxGIFBits-8"];
"1000424" -> "1000521"  [label="DDG: waiting_code"];
"1000602" -> "1000521"  [label="DDG: waiting_code"];
"1000615" -> "1000521"  [label="DDG: waiting_code"];
"1000466" -> "1000521"  [label="DDG: waiting_code"];
"1000686" -> "1000521"  [label="DDG: waiting_code"];
"1000566" -> "1000521"  [label="DDG: waiting_code"];
"1000519" -> "1000497"  [label="AST: "];
"1000520" -> "1000519"  [label="AST: "];
"1000534" -> "1000519"  [label="CFG: "];
"1000519" -> "1000854"  [label="DDG: (ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code)"];
"1000519" -> "1000533"  [label="DDG: k"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000537" -> "1000533"  [label="CFG: "];
"1000541" -> "1000533"  [label="CFG: "];
"1000533" -> "1000854"  [label="DDG: k >= MaxHashTable"];
"1000533" -> "1000854"  [label="DDG: MaxHashTable"];
"1000578" -> "1000533"  [label="DDG: MaxHashTable"];
"1000376" -> "1000533"  [label="DDG: MaxHashTable"];
"1000662" -> "1000533"  [label="DDG: MaxHashTable"];
"1000533" -> "1000536"  [label="DDG: MaxHashTable"];
"1000533" -> "1000536"  [label="DDG: k"];
"1000533" -> "1000540"  [label="DDG: k"];
"1000533" -> "1000578"  [label="DDG: MaxHashTable"];
"1000533" -> "1000590"  [label="DDG: MaxHashTable"];
"1000533" -> "1000662"  [label="DDG: MaxHashTable"];
"1000536" -> "1000532"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000541" -> "1000536"  [label="CFG: "];
"1000536" -> "1000854"  [label="DDG: MaxHashTable"];
"1000536" -> "1000540"  [label="DDG: k"];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000543" -> "1000540"  [label="CFG: "];
"1000547" -> "1000540"  [label="CFG: "];
"1000540" -> "1000854"  [label="DDG: k < 0"];
"1000540" -> "1000854"  [label="DDG: k"];
"1000540" -> "1000573"  [label="DDG: k"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000577" -> "1000573"  [label="CFG: "];
"1000584" -> "1000573"  [label="CFG: "];
"1000573" -> "1000854"  [label="DDG: k != 0"];
"1000573" -> "1000578"  [label="DDG: k"];
"1000573" -> "1000583"  [label="DDG: k"];
"1000578" -> "1000576"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000580" -> "1000578"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000578" -> "1000854"  [label="DDG: MaxHashTable"];
"1000578" -> "1000576"  [label="DDG: MaxHashTable"];
"1000578" -> "1000576"  [label="DDG: k"];
"1000578" -> "1000583"  [label="DDG: k"];
"1000578" -> "1000590"  [label="DDG: MaxHashTable"];
"1000578" -> "1000662"  [label="DDG: MaxHashTable"];
"1000576" -> "1000572"  [label="AST: "];
"1000577" -> "1000576"  [label="AST: "];
"1000584" -> "1000576"  [label="CFG: "];
"1000576" -> "1000854"  [label="DDG: MaxHashTable-k"];
"1000576" -> "1000583"  [label="DDG: displacement"];
"1000583" -> "1000582"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="AST: "];
"1000588" -> "1000583"  [label="CFG: "];
"1000583" -> "1000854"  [label="DDG: displacement"];
"1000501" -> "1000583"  [label="DDG: displacement"];
"1000587" -> "1000583"  [label="DDG: k"];
"1000590" -> "1000583"  [label="DDG: k"];
"1000583" -> "1000587"  [label="DDG: k"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000589" -> "1000587"  [label="AST: "];
"1000591" -> "1000587"  [label="CFG: "];
"1000596" -> "1000587"  [label="CFG: "];
"1000587" -> "1000854"  [label="DDG: k"];
"1000587" -> "1000854"  [label="DDG: k < 0"];
"1000587" -> "1000590"  [label="DDG: k"];
"1000590" -> "1000586"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000596" -> "1000590"  [label="CFG: "];
"1000590" -> "1000854"  [label="DDG: MaxHashTable"];
"1000590" -> "1000854"  [label="DDG: k"];
"1000662" -> "1000658"  [label="AST: "];
"1000662" -> "1000664"  [label="CFG: "];
"1000663" -> "1000662"  [label="AST: "];
"1000664" -> "1000662"  [label="AST: "];
"1000669" -> "1000662"  [label="CFG: "];
"1000673" -> "1000662"  [label="CFG: "];
"1000662" -> "1000854"  [label="DDG: k"];
"1000662" -> "1000854"  [label="DDG: MaxHashTable"];
"1000662" -> "1000854"  [label="DDG: k < MaxHashTable"];
"1000659" -> "1000662"  [label="DDG: k"];
"1000665" -> "1000662"  [label="DDG: k"];
"1000662" -> "1000665"  [label="DDG: k"];
"1000665" -> "1000658"  [label="AST: "];
"1000665" -> "1000666"  [label="CFG: "];
"1000666" -> "1000665"  [label="AST: "];
"1000663" -> "1000665"  [label="CFG: "];
"1000523" -> "1000531"  [label="CFG: "];
"1000524" -> "1000523"  [label="AST: "];
"1000531" -> "1000523"  [label="AST: "];
"1000523" -> "1000854"  [label="DDG: (size_t) index << (MaxGIFBits-8)"];
"1000524" -> "1000523"  [label="DDG: (size_t) index"];
"1000524" -> "1000523"  [label="DDG: MaxGIFBits-8"];
"1000424" -> "1000523"  [label="DDG: waiting_code"];
"1000602" -> "1000523"  [label="DDG: waiting_code"];
"1000615" -> "1000523"  [label="DDG: waiting_code"];
"1000466" -> "1000523"  [label="DDG: waiting_code"];
"1000686" -> "1000523"  [label="DDG: waiting_code"];
"1000566" -> "1000523"  [label="DDG: waiting_code"];
"1000552" -> "1000551"  [label="AST: "];
"1000552" -> "1000558"  [label="CFG: "];
"1000558" -> "1000552"  [label="AST: "];
"1000567" -> "1000552"  [label="CFG: "];
"1000574" -> "1000552"  [label="CFG: "];
"1000552" -> "1000854"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000552" -> "1000854"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000552" -> "1000854"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000601" -> "1000552"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000558" -> "1000552"  [label="DDG: hash_suffix[k]"];
"1000558" -> "1000552"  [label="DDG: (unsigned char) index"];
"1000552" -> "1000601"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000601" -> "1000600"  [label="AST: "];
"1000601" -> "1000602"  [label="CFG: "];
"1000601" -> "1000607"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000607" -> "1000601"  [label="AST: "];
"1000584" -> "1000601"  [label="CFG: "];
"1000616" -> "1000601"  [label="CFG: "];
"1000601" -> "1000854"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000601" -> "1000854"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000601" -> "1000854"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000602" -> "1000601"  [label="DDG: hash_prefix[k]"];
"1000602" -> "1000601"  [label="DDG: waiting_code"];
"1000607" -> "1000601"  [label="DDG: hash_suffix[k]"];
"1000607" -> "1000601"  [label="DDG: (unsigned char) index"];
"1000602" -> "1000606"  [label="CFG: "];
"1000603" -> "1000602"  [label="AST: "];
"1000606" -> "1000602"  [label="AST: "];
"1000609" -> "1000602"  [label="CFG: "];
"1000602" -> "1000854"  [label="DDG: hash_prefix[k]"];
"1000602" -> "1000629"  [label="DDG: waiting_code"];
"1000602" -> "1000770"  [label="DDG: waiting_code"];
"1000602" -> "1000838"  [label="DDG: hash_prefix[k]"];
"1000629" -> "1000497"  [label="AST: "];
"1000629" -> "1000630"  [label="CFG: "];
"1000630" -> "1000629"  [label="AST: "];
"1000633" -> "1000629"  [label="CFG: "];
"1000615" -> "1000629"  [label="DDG: waiting_code"];
"1000424" -> "1000629"  [label="DDG: waiting_code"];
"1000466" -> "1000629"  [label="DDG: waiting_code"];
"1000686" -> "1000629"  [label="DDG: waiting_code"];
"1000566" -> "1000629"  [label="DDG: waiting_code"];
"1000629" -> "1000644"  [label="DDG: waiting_code"];
"1000644" -> "1000635"  [label="AST: "];
"1000644" -> "1000648"  [label="CFG: "];
"1000645" -> "1000644"  [label="AST: "];
"1000648" -> "1000644"  [label="AST: "];
"1000651" -> "1000644"  [label="CFG: "];
"1000644" -> "1000854"  [label="DDG: hash_prefix[k]"];
"1000644" -> "1000838"  [label="DDG: hash_prefix[k]"];
"1000838" -> "1000836"  [label="AST: "];
"1000838" -> "1000839"  [label="CFG: "];
"1000839" -> "1000838"  [label="AST: "];
"1000836" -> "1000838"  [label="CFG: "];
"1000838" -> "1000836"  [label="DDG: hash_prefix"];
"1000836" -> "1000834"  [label="AST: "];
"1000837" -> "1000836"  [label="AST: "];
"1000834" -> "1000836"  [label="CFG: "];
"1000836" -> "1000854"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000836" -> "1000834"  [label="DDG: RelinquishMagickMemory(hash_prefix)"];
"1000834" -> "1000117"  [label="AST: "];
"1000835" -> "1000834"  [label="AST: "];
"1000841" -> "1000834"  [label="CFG: "];
"1000834" -> "1000854"  [label="DDG: hash_prefix"];
"1000834" -> "1000854"  [label="DDG: (short *) RelinquishMagickMemory(hash_prefix)"];
"1000770" -> "1000117"  [label="AST: "];
"1000770" -> "1000771"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000773" -> "1000770"  [label="CFG: "];
"1000770" -> "1000854"  [label="DDG: GIFOutputCode(waiting_code)"];
"1000770" -> "1000854"  [label="DDG: waiting_code"];
"1000424" -> "1000770"  [label="DDG: waiting_code"];
"1000615" -> "1000770"  [label="DDG: waiting_code"];
"1000466" -> "1000770"  [label="DDG: waiting_code"];
"1000686" -> "1000770"  [label="DDG: waiting_code"];
"1000566" -> "1000770"  [label="DDG: waiting_code"];
}
