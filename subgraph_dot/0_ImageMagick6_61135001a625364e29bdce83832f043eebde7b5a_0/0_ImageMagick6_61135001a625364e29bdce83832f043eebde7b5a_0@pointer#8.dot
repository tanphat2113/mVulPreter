digraph "0_ImageMagick6_61135001a625364e29bdce83832f043eebde7b5a_0@pointer" {
"1000373" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000285" [label="(Call,hash_suffix == (unsigned char *) NULL)"];
"1000257" [label="(Call,hash_suffix=(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000259" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000261" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000252" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000243" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000287" [label="(Call,(unsigned char *) NULL)"];
"1000282" [label="(Call,(short *) NULL)"];
"1000276" [label="(Call,(short *) NULL)"];
"1000270" [label="(Call,(unsigned char *) NULL)"];
"1000224" [label="(Call,(Image *) NULL)"];
"1000376" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000366" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000356" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000371" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000558" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000552" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000601" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000607" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000832" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000830" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000828" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000830" [label="(Call,(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000584" [label="(Identifier,k)"];
"1000457" [label="(Call,(const Quantum *) NULL)"];
"1000253" [label="(Identifier,MaxHashTable)"];
"1000243" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000608" [label="(Call,hash_suffix[k])"];
"1000533" [label="(Call,k >= MaxHashTable)"];
"1000358" [label="(Call,sizeof(*hash_code))"];
"1000224" [label="(Call,(Image *) NULL)"];
"1000263" [label="(Call,sizeof(*hash_suffix))"];
"1000611" [label="(Call,(unsigned char) index)"];
"1000371" [label="(Call,(void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000289" [label="(Identifier,NULL)"];
"1000270" [label="(Call,(unsigned char *) NULL)"];
"1000378" [label="(Call,sizeof(*hash_suffix))"];
"1000284" [label="(Identifier,NULL)"];
"1000607" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000272" [label="(Identifier,NULL)"];
"1000551" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)))"];
"1000285" [label="(Call,hash_suffix == (unsigned char *) NULL)"];
"1000257" [label="(Call,hash_suffix=(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000250" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000567" [label="(Identifier,waiting_code)"];
"1000601" [label="(Call,(hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index))"];
"1000357" [label="(Identifier,MaxHashTable)"];
"1000269" [label="(Identifier,packet)"];
"1000559" [label="(Call,hash_suffix[k])"];
"1000294" [label="(Call,(unsigned char *) NULL)"];
"1000374" [label="(Identifier,hash_suffix)"];
"1000368" [label="(Call,sizeof(*hash_prefix))"];
"1000366" [label="(Call,MaxHashTable*sizeof(*hash_prefix))"];
"1000276" [label="(Call,(short *) NULL)"];
"1000226" [label="(Identifier,NULL)"];
"1000280" [label="(Call,hash_prefix == (short *) NULL)"];
"1000287" [label="(Call,(unsigned char *) NULL)"];
"1000382" [label="(Identifier,number_bits)"];
"1000376" [label="(Call,MaxHashTable*sizeof(*hash_suffix))"];
"1000259" [label="(Call,(unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000649" [label="(Call,hash_suffix[k]=(unsigned char) index)"];
"1000353" [label="(Call,memset(hash_code,0,MaxHashTable*sizeof(*hash_code)))"];
"1000367" [label="(Identifier,MaxHashTable)"];
"1000274" [label="(Call,hash_code == (short *) NULL)"];
"1000552" [label="(Call,(hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index))"];
"1000254" [label="(Call,sizeof(*hash_prefix))"];
"1000282" [label="(Call,(short *) NULL)"];
"1000286" [label="(Identifier,hash_suffix)"];
"1000835" [label="(Identifier,hash_prefix)"];
"1000244" [label="(Identifier,MaxHashTable)"];
"1000558" [label="(Call,hash_suffix[k] == (unsigned char) index)"];
"1000328" [label="(Call,hash_suffix != (unsigned char *) NULL)"];
"1000616" [label="(Identifier,waiting_code)"];
"1000363" [label="(Call,memset(hash_prefix,0,MaxHashTable*sizeof(*hash_prefix)))"];
"1000117" [label="(Block,)"];
"1000832" [label="(Call,RelinquishMagickMemory(hash_suffix))"];
"1000252" [label="(Call,AcquireQuantumMemory(MaxHashTable,sizeof(*hash_prefix)))"];
"1000222" [label="(Call,image != (Image *) NULL)"];
"1000373" [label="(Call,memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix)))"];
"1000854" [label="(MethodReturn,static MagickBooleanType)"];
"1000833" [label="(Identifier,hash_suffix)"];
"1000377" [label="(Identifier,MaxHashTable)"];
"1000553" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000562" [label="(Call,(unsigned char) index)"];
"1000245" [label="(Call,sizeof(*hash_code))"];
"1000268" [label="(Call,packet == (unsigned char *) NULL)"];
"1000356" [label="(Call,MaxHashTable*sizeof(*hash_code))"];
"1000258" [label="(Identifier,hash_suffix)"];
"1000829" [label="(Identifier,hash_suffix)"];
"1000262" [label="(Identifier,MaxHashTable)"];
"1000602" [label="(Call,hash_prefix[k] == waiting_code)"];
"1000241" [label="(Call,(short *) AcquireQuantumMemory(MaxHashTable,sizeof(*hash_code)))"];
"1000574" [label="(Identifier,k)"];
"1000828" [label="(Call,hash_suffix=(unsigned char *) RelinquishMagickMemory(hash_suffix))"];
"1000375" [label="(Literal,0)"];
"1000278" [label="(Identifier,NULL)"];
"1000261" [label="(Call,AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix)))"];
"1000279" [label="(Call,(hash_prefix == (short *) NULL) ||\n      (hash_suffix == (unsigned char *) NULL))"];
"1000600" [label="(ControlStructure,if ((hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)))"];
"1000373" -> "1000371"  [label="AST: "];
"1000373" -> "1000376"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000376" -> "1000373"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000373" -> "1000854"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000373" -> "1000371"  [label="DDG: hash_suffix"];
"1000373" -> "1000371"  [label="DDG: 0"];
"1000373" -> "1000371"  [label="DDG: MaxHashTable*sizeof(*hash_suffix)"];
"1000285" -> "1000373"  [label="DDG: hash_suffix"];
"1000257" -> "1000373"  [label="DDG: hash_suffix"];
"1000376" -> "1000373"  [label="DDG: MaxHashTable"];
"1000373" -> "1000558"  [label="DDG: hash_suffix"];
"1000373" -> "1000607"  [label="DDG: hash_suffix"];
"1000373" -> "1000832"  [label="DDG: hash_suffix"];
"1000285" -> "1000279"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000279" -> "1000285"  [label="CFG: "];
"1000285" -> "1000854"  [label="DDG: (unsigned char *) NULL"];
"1000285" -> "1000279"  [label="DDG: hash_suffix"];
"1000285" -> "1000279"  [label="DDG: (unsigned char *) NULL"];
"1000257" -> "1000285"  [label="DDG: hash_suffix"];
"1000287" -> "1000285"  [label="DDG: NULL"];
"1000285" -> "1000328"  [label="DDG: hash_suffix"];
"1000257" -> "1000117"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000269" -> "1000257"  [label="CFG: "];
"1000257" -> "1000854"  [label="DDG: (unsigned char *) AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000259" -> "1000257"  [label="DDG: AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000257" -> "1000328"  [label="DDG: hash_suffix"];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000259" -> "1000854"  [label="DDG: AcquireQuantumMemory(MaxHashTable,\n    sizeof(*hash_suffix))"];
"1000261" -> "1000259"  [label="DDG: MaxHashTable"];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000261" -> "1000854"  [label="DDG: MaxHashTable"];
"1000252" -> "1000261"  [label="DDG: MaxHashTable"];
"1000261" -> "1000356"  [label="DDG: MaxHashTable"];
"1000252" -> "1000250"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000252" -> "1000250"  [label="DDG: MaxHashTable"];
"1000243" -> "1000252"  [label="DDG: MaxHashTable"];
"1000243" -> "1000241"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000243" -> "1000241"  [label="DDG: MaxHashTable"];
"1000287" -> "1000289"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000289" -> "1000287"  [label="AST: "];
"1000287" -> "1000854"  [label="DDG: NULL"];
"1000282" -> "1000287"  [label="DDG: NULL"];
"1000287" -> "1000294"  [label="DDG: NULL"];
"1000287" -> "1000457"  [label="DDG: NULL"];
"1000282" -> "1000280"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000280" -> "1000282"  [label="CFG: "];
"1000282" -> "1000854"  [label="DDG: NULL"];
"1000282" -> "1000280"  [label="DDG: NULL"];
"1000276" -> "1000282"  [label="DDG: NULL"];
"1000282" -> "1000294"  [label="DDG: NULL"];
"1000282" -> "1000457"  [label="DDG: NULL"];
"1000276" -> "1000274"  [label="AST: "];
"1000276" -> "1000278"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000278" -> "1000276"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000276" -> "1000854"  [label="DDG: NULL"];
"1000276" -> "1000274"  [label="DDG: NULL"];
"1000270" -> "1000276"  [label="DDG: NULL"];
"1000276" -> "1000294"  [label="DDG: NULL"];
"1000276" -> "1000457"  [label="DDG: NULL"];
"1000270" -> "1000268"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000270" -> "1000854"  [label="DDG: NULL"];
"1000270" -> "1000268"  [label="DDG: NULL"];
"1000224" -> "1000270"  [label="DDG: NULL"];
"1000270" -> "1000294"  [label="DDG: NULL"];
"1000270" -> "1000457"  [label="DDG: NULL"];
"1000224" -> "1000222"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000224" -> "1000222"  [label="DDG: NULL"];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000376" -> "1000854"  [label="DDG: MaxHashTable"];
"1000366" -> "1000376"  [label="DDG: MaxHashTable"];
"1000376" -> "1000533"  [label="DDG: MaxHashTable"];
"1000366" -> "1000363"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000366" -> "1000363"  [label="DDG: MaxHashTable"];
"1000356" -> "1000366"  [label="DDG: MaxHashTable"];
"1000356" -> "1000353"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000353" -> "1000356"  [label="CFG: "];
"1000356" -> "1000353"  [label="DDG: MaxHashTable"];
"1000371" -> "1000117"  [label="AST: "];
"1000372" -> "1000371"  [label="AST: "];
"1000382" -> "1000371"  [label="CFG: "];
"1000371" -> "1000854"  [label="DDG: memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000371" -> "1000854"  [label="DDG: (void) memset(hash_suffix,0,MaxHashTable*sizeof(*hash_suffix))"];
"1000558" -> "1000552"  [label="AST: "];
"1000558" -> "1000562"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000562" -> "1000558"  [label="AST: "];
"1000552" -> "1000558"  [label="CFG: "];
"1000558" -> "1000854"  [label="DDG: (unsigned char) index"];
"1000558" -> "1000854"  [label="DDG: hash_suffix[k]"];
"1000558" -> "1000552"  [label="DDG: hash_suffix[k]"];
"1000558" -> "1000552"  [label="DDG: (unsigned char) index"];
"1000649" -> "1000558"  [label="DDG: hash_suffix[k]"];
"1000607" -> "1000558"  [label="DDG: hash_suffix[k]"];
"1000562" -> "1000558"  [label="DDG: index"];
"1000558" -> "1000607"  [label="DDG: hash_suffix[k]"];
"1000558" -> "1000832"  [label="DDG: hash_suffix[k]"];
"1000552" -> "1000551"  [label="AST: "];
"1000552" -> "1000553"  [label="CFG: "];
"1000553" -> "1000552"  [label="AST: "];
"1000567" -> "1000552"  [label="CFG: "];
"1000574" -> "1000552"  [label="CFG: "];
"1000552" -> "1000854"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000552" -> "1000854"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000552" -> "1000854"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n              (hash_suffix[k] == (unsigned char) index)"];
"1000553" -> "1000552"  [label="DDG: hash_prefix[k]"];
"1000553" -> "1000552"  [label="DDG: waiting_code"];
"1000601" -> "1000552"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000552" -> "1000601"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000601" -> "1000600"  [label="AST: "];
"1000601" -> "1000602"  [label="CFG: "];
"1000601" -> "1000607"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000607" -> "1000601"  [label="AST: "];
"1000584" -> "1000601"  [label="CFG: "];
"1000616" -> "1000601"  [label="CFG: "];
"1000601" -> "1000854"  [label="DDG: hash_suffix[k] == (unsigned char) index"];
"1000601" -> "1000854"  [label="DDG: hash_prefix[k] == waiting_code"];
"1000601" -> "1000854"  [label="DDG: (hash_prefix[k] == waiting_code) &&\n                (hash_suffix[k] == (unsigned char) index)"];
"1000602" -> "1000601"  [label="DDG: hash_prefix[k]"];
"1000602" -> "1000601"  [label="DDG: waiting_code"];
"1000607" -> "1000601"  [label="DDG: hash_suffix[k]"];
"1000607" -> "1000601"  [label="DDG: (unsigned char) index"];
"1000607" -> "1000611"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000611" -> "1000607"  [label="AST: "];
"1000607" -> "1000854"  [label="DDG: hash_suffix[k]"];
"1000607" -> "1000854"  [label="DDG: (unsigned char) index"];
"1000649" -> "1000607"  [label="DDG: hash_suffix[k]"];
"1000611" -> "1000607"  [label="DDG: index"];
"1000607" -> "1000832"  [label="DDG: hash_suffix[k]"];
"1000832" -> "1000830"  [label="AST: "];
"1000832" -> "1000833"  [label="CFG: "];
"1000833" -> "1000832"  [label="AST: "];
"1000830" -> "1000832"  [label="CFG: "];
"1000832" -> "1000830"  [label="DDG: hash_suffix"];
"1000649" -> "1000832"  [label="DDG: hash_suffix[k]"];
"1000830" -> "1000828"  [label="AST: "];
"1000831" -> "1000830"  [label="AST: "];
"1000828" -> "1000830"  [label="CFG: "];
"1000830" -> "1000854"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000830" -> "1000828"  [label="DDG: RelinquishMagickMemory(hash_suffix)"];
"1000828" -> "1000117"  [label="AST: "];
"1000829" -> "1000828"  [label="AST: "];
"1000835" -> "1000828"  [label="CFG: "];
"1000828" -> "1000854"  [label="DDG: hash_suffix"];
"1000828" -> "1000854"  [label="DDG: (unsigned char *) RelinquishMagickMemory(hash_suffix)"];
}
