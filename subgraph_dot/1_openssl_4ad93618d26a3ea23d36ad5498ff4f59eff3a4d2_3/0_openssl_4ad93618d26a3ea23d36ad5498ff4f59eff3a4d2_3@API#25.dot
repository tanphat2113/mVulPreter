digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_3@API" {
"1000231" [label="(Call,memcpy(header, dtlsseq, 8))"];
"1000305" [label="(Call,ssl3_cbc_digest_record(mac_ctx,\n                                   md, &md_size,\n                                   header, rec->input,\n                                   rec->length + md_size, rec->orig_len,\n                                   ssl->s3->read_mac_secret,\n                                   ssl->s3->read_mac_secret_size, 0))"];
"1000304" [label="(Call,ssl3_cbc_digest_record(mac_ctx,\n                                   md, &md_size,\n                                   header, rec->input,\n                                   rec->length + md_size, rec->orig_len,\n                                   ssl->s3->read_mac_secret,\n                                   ssl->s3->read_mac_secret_size, 0) <= 0)"];
"1000495" [label="(Call,fprintf(stderr, \"%02X \", md[z]))"];
"1000501" [label="(Call,fprintf(stderr, \"\n\"))"];
"1000496" [label="(Identifier,stderr)"];
"1000307" [label="(Identifier,md)"];
"1000497" [label="(Literal,\"%02X \")"];
"1000494" [label="(Identifier,z)"];
"1000247" [label="(Call,header[9] = (unsigned char)(ssl->version >> 8))"];
"1000502" [label="(Identifier,stderr)"];
"1000455" [label="(Call,fprintf(stderr, \"\n\"))"];
"1000308" [label="(Call,&md_size)"];
"1000204" [label="(Block,)"];
"1000106" [label="(MethodParameterIn,unsigned char *md)"];
"1000267" [label="(Call,header[11] = (rec->length) >> 8)"];
"1000486" [label="(ControlStructure,for (z = 0; z < md_size; z++))"];
"1000332" [label="(Literal,0)"];
"1000303" [label="(ControlStructure,if (ssl3_cbc_digest_record(mac_ctx,\n                                   md, &md_size,\n                                   header, rec->input,\n                                   rec->length + md_size, rec->orig_len,\n                                   ssl->s3->read_mac_secret,\n                                   ssl->s3->read_mac_secret_size, 0) <= 0))"];
"1000242" [label="(Identifier,header)"];
"1000232" [label="(Identifier,header)"];
"1000333" [label="(Literal,0)"];
"1000498" [label="(Call,md[z])"];
"1000506" [label="(MethodReturn,int)"];
"1000240" [label="(Call,header[8] = rec->type)"];
"1000311" [label="(Call,rec->input)"];
"1000236" [label="(Call,memcpy(header, seq, 8))"];
"1000178" [label="(Call,mac_ctx = hash)"];
"1000258" [label="(Call,header[10] = (unsigned char)(ssl->version))"];
"1000319" [label="(Call,rec->orig_len)"];
"1000363" [label="(Call,EVP_DigestSignFinal(mac_ctx, md, &md_size))"];
"1000276" [label="(Call,header[12] = (rec->length) & 0xff)"];
"1000300" [label="(Call,ssl3_cbc_record_digest_supported(mac_ctx))"];
"1000407" [label="(Identifier,hmac)"];
"1000304" [label="(Call,ssl3_cbc_digest_record(mac_ctx,\n                                   md, &md_size,\n                                   header, rec->input,\n                                   rec->length + md_size, rec->orig_len,\n                                   ssl->s3->read_mac_secret,\n                                   ssl->s3->read_mac_secret_size, 0) <= 0)"];
"1000495" [label="(Call,fprintf(stderr, \"%02X \", md[z]))"];
"1000322" [label="(Call,ssl->s3->read_mac_secret)"];
"1000306" [label="(Identifier,mac_ctx)"];
"1000505" [label="(Identifier,md_size)"];
"1000231" [label="(Call,memcpy(header, dtlsseq, 8))"];
"1000198" [label="(Call,mac_ctx = hmac)"];
"1000172" [label="(Call,md_size = t)"];
"1000310" [label="(Identifier,header)"];
"1000280" [label="(Call,(rec->length) & 0xff)"];
"1000336" [label="(Identifier,hmac)"];
"1000501" [label="(Call,fprintf(stderr, \"\n\"))"];
"1000234" [label="(Literal,8)"];
"1000233" [label="(Identifier,dtlsseq)"];
"1000484" [label="(Block,)"];
"1000503" [label="(Literal,\"\n\")"];
"1000314" [label="(Call,rec->length + md_size)"];
"1000305" [label="(Call,ssl3_cbc_digest_record(mac_ctx,\n                                   md, &md_size,\n                                   header, rec->input,\n                                   rec->length + md_size, rec->orig_len,\n                                   ssl->s3->read_mac_secret,\n                                   ssl->s3->read_mac_secret_size, 0))"];
"1000327" [label="(Call,ssl->s3->read_mac_secret_size)"];
"1000231" -> "1000204"  [label="AST: "];
"1000231" -> "1000234"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000234" -> "1000231"  [label="AST: "];
"1000242" -> "1000231"  [label="CFG: "];
"1000231" -> "1000506"  [label="DDG: "];
"1000231" -> "1000506"  [label="DDG: "];
"1000231" -> "1000305"  [label="DDG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000305" -> "1000332"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000308" -> "1000305"  [label="AST: "];
"1000310" -> "1000305"  [label="AST: "];
"1000311" -> "1000305"  [label="AST: "];
"1000314" -> "1000305"  [label="AST: "];
"1000319" -> "1000305"  [label="AST: "];
"1000322" -> "1000305"  [label="AST: "];
"1000327" -> "1000305"  [label="AST: "];
"1000332" -> "1000305"  [label="AST: "];
"1000333" -> "1000305"  [label="CFG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000506"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000305" -> "1000304"  [label="DDG: "];
"1000178" -> "1000305"  [label="DDG: "];
"1000300" -> "1000305"  [label="DDG: "];
"1000198" -> "1000305"  [label="DDG: "];
"1000106" -> "1000305"  [label="DDG: "];
"1000236" -> "1000305"  [label="DDG: "];
"1000267" -> "1000305"  [label="DDG: "];
"1000276" -> "1000305"  [label="DDG: "];
"1000240" -> "1000305"  [label="DDG: "];
"1000258" -> "1000305"  [label="DDG: "];
"1000247" -> "1000305"  [label="DDG: "];
"1000280" -> "1000305"  [label="DDG: "];
"1000172" -> "1000305"  [label="DDG: "];
"1000305" -> "1000495"  [label="DDG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000333"  [label="CFG: "];
"1000333" -> "1000304"  [label="AST: "];
"1000336" -> "1000304"  [label="CFG: "];
"1000407" -> "1000304"  [label="CFG: "];
"1000304" -> "1000506"  [label="DDG: "];
"1000304" -> "1000506"  [label="DDG: "];
"1000495" -> "1000486"  [label="AST: "];
"1000495" -> "1000498"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000497" -> "1000495"  [label="AST: "];
"1000498" -> "1000495"  [label="AST: "];
"1000494" -> "1000495"  [label="CFG: "];
"1000495" -> "1000506"  [label="DDG: "];
"1000495" -> "1000506"  [label="DDG: "];
"1000455" -> "1000495"  [label="DDG: "];
"1000363" -> "1000495"  [label="DDG: "];
"1000106" -> "1000495"  [label="DDG: "];
"1000495" -> "1000501"  [label="DDG: "];
"1000501" -> "1000484"  [label="AST: "];
"1000501" -> "1000503"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000503" -> "1000501"  [label="AST: "];
"1000505" -> "1000501"  [label="CFG: "];
"1000501" -> "1000506"  [label="DDG: "];
"1000501" -> "1000506"  [label="DDG: "];
"1000455" -> "1000501"  [label="DDG: "];
}
