digraph "0_php_a72cd07f2983dc43a6bb35209dc4687852e53c09@pointer" {
"1000331" [label="(Call,load_1(ms, action, fn, &errs, mset))"];
"1000155" [label="(Call,action == FILE_CHECK)"];
"1000167" [label="(Call,php_sys_stat(fn, &st))"];
"1000383" [label="(Call,set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000355" [label="(Call,i < mset[j].count)"];
"1000378" [label="(Call,i++)"];
"1000396" [label="(Call,qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort))"];
"1000415" [label="(Call,set_last_default(ms, mset[j].me, mset[j].count))"];
"1000429" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]))"];
"1000428" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1)"];
"1000469" [label="(Call,magic_entry_free(mset[j].me, mset[j].count))"];
"1000381" [label="(Call,i = set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000331" [label="(Call,load_1(ms, action, fn, &errs, mset))"];
"1000155" [label="(Call,action == FILE_CHECK)"];
"1000154" [label="(ControlStructure,if (action == FILE_CHECK))"];
"1000350" [label="(Block,)"];
"1000416" [label="(Identifier,ms)"];
"1000333" [label="(Identifier,action)"];
"1000475" [label="(Call,mset[j].count)"];
"1000441" [label="(Call,&map->magic[j])"];
"1000384" [label="(Identifier,ms)"];
"1000379" [label="(Identifier,i)"];
"1000454" [label="(Literal,1)"];
"1000334" [label="(Identifier,fn)"];
"1000169" [label="(Call,&st)"];
"1000407" [label="(Call,sizeof(*mset[j].me))"];
"1000362" [label="(Block,)"];
"1000315" [label="(Call,load_1(ms, action, filearr[i], &errs, mset))"];
"1000166" [label="(Call,php_sys_stat(fn, &st) == 0)"];
"1000356" [label="(Identifier,i)"];
"1000469" [label="(Call,magic_entry_free(mset[j].me, mset[j].count))"];
"1000380" [label="(ControlStructure,continue;)"];
"1000430" [label="(Identifier,ms)"];
"1000431" [label="(Call,mset[j].me)"];
"1000377" [label="(Block,)"];
"1000428" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1)"];
"1000378" [label="(Call,i++)"];
"1000417" [label="(Call,mset[j].me)"];
"1000427" [label="(ControlStructure,if (coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1))"];
"1000352" [label="(Call,i = 0)"];
"1000390" [label="(Call,mset[j].count)"];
"1000355" [label="(Call,i < mset[j].count)"];
"1000385" [label="(Call,mset[j].me)"];
"1000468" [label="(Identifier,j)"];
"1000414" [label="(Identifier,apprentice_sort)"];
"1000171" [label="(Literal,0)"];
"1000447" [label="(Call,&map->nmagic[j])"];
"1000382" [label="(Identifier,i)"];
"1000415" [label="(Call,set_last_default(ms, mset[j].me, mset[j].count))"];
"1000370" [label="(Identifier,mset)"];
"1000156" [label="(Identifier,action)"];
"1000511" [label="(MethodReturn,RET)"];
"1000157" [label="(Identifier,FILE_CHECK)"];
"1000436" [label="(Call,mset[j].count)"];
"1000349" [label="(Identifier,j)"];
"1000335" [label="(Call,&errs)"];
"1000182" [label="(Call,(char *)fn)"];
"1000399" [label="(Identifier,mset)"];
"1000167" [label="(Call,php_sys_stat(fn, &st))"];
"1000397" [label="(Call,mset[j].me)"];
"1000470" [label="(Call,mset[j].me)"];
"1000337" [label="(Identifier,mset)"];
"1000339" [label="(Identifier,errs)"];
"1000332" [label="(Identifier,ms)"];
"1000429" [label="(Call,coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]))"];
"1000396" [label="(Call,qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort))"];
"1000357" [label="(Call,mset[j].count)"];
"1000330" [label="(ControlStructure,else)"];
"1000234" [label="(Call,stat(mfn, &st))"];
"1000453" [label="(Call,-1)"];
"1000168" [label="(Identifier,fn)"];
"1000402" [label="(Call,mset[j].count)"];
"1000351" [label="(ControlStructure,for (i = 0; i < mset[j].count; ))"];
"1000457" [label="(Identifier,errs)"];
"1000422" [label="(Call,mset[j].count)"];
"1000381" [label="(Call,i = set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000460" [label="(ControlStructure,for (j = 0; j < MAGIC_SETS; j++))"];
"1000395" [label="(Identifier,i)"];
"1000383" [label="(Call,set_text_binary(ms, mset[j].me, mset[j].count, i))"];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000337"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000334" -> "1000331"  [label="AST: "];
"1000335" -> "1000331"  [label="AST: "];
"1000337" -> "1000331"  [label="AST: "];
"1000339" -> "1000331"  [label="CFG: "];
"1000331" -> "1000511"  [label="DDG: fn"];
"1000331" -> "1000511"  [label="DDG: load_1(ms, action, fn, &errs, mset)"];
"1000331" -> "1000511"  [label="DDG: action"];
"1000331" -> "1000511"  [label="DDG: ms"];
"1000331" -> "1000511"  [label="DDG: mset"];
"1000331" -> "1000511"  [label="DDG: &errs"];
"1000155" -> "1000331"  [label="DDG: action"];
"1000167" -> "1000331"  [label="DDG: fn"];
"1000331" -> "1000383"  [label="DDG: ms"];
"1000331" -> "1000415"  [label="DDG: ms"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="CFG: "];
"1000168" -> "1000155"  [label="CFG: "];
"1000155" -> "1000511"  [label="DDG: FILE_CHECK"];
"1000155" -> "1000511"  [label="DDG: action == FILE_CHECK"];
"1000155" -> "1000511"  [label="DDG: action"];
"1000155" -> "1000315"  [label="DDG: action"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000169"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000169" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="CFG: "];
"1000167" -> "1000511"  [label="DDG: &st"];
"1000167" -> "1000166"  [label="DDG: fn"];
"1000167" -> "1000166"  [label="DDG: &st"];
"1000167" -> "1000182"  [label="DDG: fn"];
"1000167" -> "1000234"  [label="DDG: &st"];
"1000383" -> "1000381"  [label="AST: "];
"1000383" -> "1000395"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000390" -> "1000383"  [label="AST: "];
"1000395" -> "1000383"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000383" -> "1000511"  [label="DDG: ms"];
"1000383" -> "1000511"  [label="DDG: mset[j].me"];
"1000383" -> "1000355"  [label="DDG: mset[j].count"];
"1000383" -> "1000381"  [label="DDG: ms"];
"1000383" -> "1000381"  [label="DDG: mset[j].me"];
"1000383" -> "1000381"  [label="DDG: mset[j].count"];
"1000383" -> "1000381"  [label="DDG: i"];
"1000315" -> "1000383"  [label="DDG: ms"];
"1000429" -> "1000383"  [label="DDG: ms"];
"1000429" -> "1000383"  [label="DDG: mset[j].me"];
"1000355" -> "1000383"  [label="DDG: mset[j].count"];
"1000355" -> "1000383"  [label="DDG: i"];
"1000383" -> "1000396"  [label="DDG: mset[j].me"];
"1000383" -> "1000415"  [label="DDG: ms"];
"1000383" -> "1000469"  [label="DDG: mset[j].me"];
"1000355" -> "1000351"  [label="AST: "];
"1000355" -> "1000357"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="AST: "];
"1000370" -> "1000355"  [label="CFG: "];
"1000399" -> "1000355"  [label="CFG: "];
"1000355" -> "1000511"  [label="DDG: i"];
"1000355" -> "1000511"  [label="DDG: mset[j].count"];
"1000355" -> "1000511"  [label="DDG: i < mset[j].count"];
"1000352" -> "1000355"  [label="DDG: i"];
"1000378" -> "1000355"  [label="DDG: i"];
"1000381" -> "1000355"  [label="DDG: i"];
"1000429" -> "1000355"  [label="DDG: mset[j].count"];
"1000355" -> "1000378"  [label="DDG: i"];
"1000355" -> "1000396"  [label="DDG: mset[j].count"];
"1000355" -> "1000469"  [label="DDG: mset[j].count"];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000379"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="CFG: "];
"1000378" -> "1000511"  [label="DDG: i"];
"1000396" -> "1000350"  [label="AST: "];
"1000396" -> "1000414"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000402" -> "1000396"  [label="AST: "];
"1000407" -> "1000396"  [label="AST: "];
"1000414" -> "1000396"  [label="AST: "];
"1000416" -> "1000396"  [label="CFG: "];
"1000396" -> "1000511"  [label="DDG: qsort(mset[j].me, mset[j].count, sizeof(*mset[j].me),\n\t\t    apprentice_sort)"];
"1000396" -> "1000511"  [label="DDG: apprentice_sort"];
"1000429" -> "1000396"  [label="DDG: mset[j].me"];
"1000396" -> "1000415"  [label="DDG: mset[j].me"];
"1000396" -> "1000415"  [label="DDG: mset[j].count"];
"1000415" -> "1000350"  [label="AST: "];
"1000415" -> "1000422"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000422" -> "1000415"  [label="AST: "];
"1000430" -> "1000415"  [label="CFG: "];
"1000415" -> "1000511"  [label="DDG: set_last_default(ms, mset[j].me, mset[j].count)"];
"1000315" -> "1000415"  [label="DDG: ms"];
"1000429" -> "1000415"  [label="DDG: ms"];
"1000415" -> "1000429"  [label="DDG: ms"];
"1000415" -> "1000429"  [label="DDG: mset[j].me"];
"1000415" -> "1000429"  [label="DDG: mset[j].count"];
"1000429" -> "1000428"  [label="AST: "];
"1000429" -> "1000447"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000431" -> "1000429"  [label="AST: "];
"1000436" -> "1000429"  [label="AST: "];
"1000441" -> "1000429"  [label="AST: "];
"1000447" -> "1000429"  [label="AST: "];
"1000454" -> "1000429"  [label="CFG: "];
"1000429" -> "1000511"  [label="DDG: mset[j].count"];
"1000429" -> "1000511"  [label="DDG: &map->nmagic[j]"];
"1000429" -> "1000511"  [label="DDG: mset[j].me"];
"1000429" -> "1000511"  [label="DDG: &map->magic[j]"];
"1000429" -> "1000511"  [label="DDG: ms"];
"1000429" -> "1000428"  [label="DDG: mset[j].me"];
"1000429" -> "1000428"  [label="DDG: &map->magic[j]"];
"1000429" -> "1000428"  [label="DDG: ms"];
"1000429" -> "1000428"  [label="DDG: &map->nmagic[j]"];
"1000429" -> "1000428"  [label="DDG: mset[j].count"];
"1000429" -> "1000469"  [label="DDG: mset[j].me"];
"1000429" -> "1000469"  [label="DDG: mset[j].count"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000453"  [label="CFG: "];
"1000453" -> "1000428"  [label="AST: "];
"1000457" -> "1000428"  [label="CFG: "];
"1000349" -> "1000428"  [label="CFG: "];
"1000428" -> "1000511"  [label="DDG: coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j]) == -1"];
"1000428" -> "1000511"  [label="DDG: -1"];
"1000428" -> "1000511"  [label="DDG: coalesce_entries(ms, mset[j].me, mset[j].count,\n\t\t    &map->magic[j], &map->nmagic[j])"];
"1000453" -> "1000428"  [label="DDG: 1"];
"1000469" -> "1000460"  [label="AST: "];
"1000469" -> "1000475"  [label="CFG: "];
"1000470" -> "1000469"  [label="AST: "];
"1000475" -> "1000469"  [label="AST: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000511"  [label="DDG: magic_entry_free(mset[j].me, mset[j].count)"];
"1000469" -> "1000511"  [label="DDG: mset[j].count"];
"1000469" -> "1000511"  [label="DDG: mset[j].me"];
"1000381" -> "1000362"  [label="AST: "];
"1000382" -> "1000381"  [label="AST: "];
"1000356" -> "1000381"  [label="CFG: "];
"1000381" -> "1000511"  [label="DDG: set_text_binary(ms, mset[j].me, mset[j].count, i)"];
}
