digraph "0_mbedtls_31458a18788b0cf0b722acda9bb2f2fe13a3fb32_1@pointer" {
"1000188" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_MD)"];
"1000166" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_EXPIRED)"];
"1000176" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_FUTURE)"];
"1000200" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_PK)"];
"1000215" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000285" [label="(Call,*flags |= x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000455" [label="(Call,*flags |= parent_flags)"];
"1000246" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_KEY)"];
"1000281" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000160" [label="(ControlStructure,if( mbedtls_x509_time_is_past( &child->valid_to ) ))"];
"1000195" [label="(Identifier,profile)"];
"1000179" [label="(Identifier,MBEDTLS_X509_BADCERT_FUTURE)"];
"1000216" [label="(Call,*flags)"];
"1000282" [label="(Call,*flags)"];
"1000183" [label="(Identifier,profile)"];
"1000281" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000201" [label="(Call,*flags)"];
"1000177" [label="(Call,*flags)"];
"1000218" [label="(Identifier,MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000234" [label="(ControlStructure,if( x509_profile_check_key( profile, child->sig_pk, &parent->pk ) != 0 ))"];
"1000180" [label="(ControlStructure,if( x509_profile_check_md_alg( profile, child->sig_md ) != 0 ))"];
"1000169" [label="(Identifier,MBEDTLS_X509_BADCERT_EXPIRED)"];
"1000215" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000176" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_FUTURE)"];
"1000286" [label="(Call,*flags)"];
"1000205" [label="(Identifier,md_info)"];
"1000455" [label="(Call,*flags |= parent_flags)"];
"1000200" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_PK)"];
"1000284" [label="(Identifier,MBEDTLS_X509_BADCERT_NOT_TRUSTED)"];
"1000280" [label="(Block,)"];
"1000214" [label="(Block,)"];
"1000174" [label="(Identifier,child)"];
"1000458" [label="(Identifier,parent_flags)"];
"1000188" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_MD)"];
"1000249" [label="(Identifier,MBEDTLS_X509_BADCERT_BAD_KEY)"];
"1000120" [label="(Block,)"];
"1000456" [label="(Call,*flags)"];
"1000285" [label="(Call,*flags |= x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000460" [label="(Literal,0)"];
"1000203" [label="(Identifier,MBEDTLS_X509_BADCERT_BAD_PK)"];
"1000166" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_EXPIRED)"];
"1000246" [label="(Call,*flags |= MBEDTLS_X509_BADCERT_BAD_KEY)"];
"1000123" [label="(Call,parent_flags = 0)"];
"1000254" [label="(Identifier,child)"];
"1000461" [label="(MethodReturn,static int)"];
"1000189" [label="(Call,*flags)"];
"1000191" [label="(Identifier,MBEDTLS_X509_BADCERT_BAD_MD)"];
"1000170" [label="(ControlStructure,if( mbedtls_x509_time_is_future( &child->valid_from ) ))"];
"1000287" [label="(Identifier,flags)"];
"1000295" [label="(Identifier,grandparent)"];
"1000167" [label="(Call,*flags)"];
"1000192" [label="(ControlStructure,if( x509_profile_check_pk_alg( profile, child->sig_pk ) != 0 ))"];
"1000247" [label="(Call,*flags)"];
"1000288" [label="(Call,x509_crt_verifycrl(child, parent, ca_crl, profile ))"];
"1000188" -> "1000180"  [label="AST: "];
"1000188" -> "1000191"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000188" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_BAD_MD"];
"1000188" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_BAD_MD"];
"1000166" -> "1000188"  [label="DDG: *flags"];
"1000176" -> "1000188"  [label="DDG: *flags"];
"1000188" -> "1000200"  [label="DDG: *flags"];
"1000188" -> "1000215"  [label="DDG: *flags"];
"1000188" -> "1000246"  [label="DDG: *flags"];
"1000188" -> "1000281"  [label="DDG: *flags"];
"1000188" -> "1000285"  [label="DDG: *flags"];
"1000166" -> "1000160"  [label="AST: "];
"1000166" -> "1000169"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000169" -> "1000166"  [label="AST: "];
"1000174" -> "1000166"  [label="CFG: "];
"1000166" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_EXPIRED"];
"1000166" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_EXPIRED"];
"1000166" -> "1000176"  [label="DDG: *flags"];
"1000166" -> "1000200"  [label="DDG: *flags"];
"1000166" -> "1000215"  [label="DDG: *flags"];
"1000166" -> "1000246"  [label="DDG: *flags"];
"1000166" -> "1000281"  [label="DDG: *flags"];
"1000166" -> "1000285"  [label="DDG: *flags"];
"1000176" -> "1000170"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="AST: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000176" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_FUTURE"];
"1000176" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_FUTURE"];
"1000176" -> "1000200"  [label="DDG: *flags"];
"1000176" -> "1000215"  [label="DDG: *flags"];
"1000176" -> "1000246"  [label="DDG: *flags"];
"1000176" -> "1000281"  [label="DDG: *flags"];
"1000176" -> "1000285"  [label="DDG: *flags"];
"1000200" -> "1000192"  [label="AST: "];
"1000200" -> "1000203"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000203" -> "1000200"  [label="AST: "];
"1000205" -> "1000200"  [label="CFG: "];
"1000200" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_BAD_PK"];
"1000200" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_BAD_PK"];
"1000200" -> "1000215"  [label="DDG: *flags"];
"1000200" -> "1000246"  [label="DDG: *flags"];
"1000200" -> "1000281"  [label="DDG: *flags"];
"1000200" -> "1000285"  [label="DDG: *flags"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000218"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000218" -> "1000215"  [label="AST: "];
"1000287" -> "1000215"  [label="CFG: "];
"1000215" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_NOT_TRUSTED"];
"1000215" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED"];
"1000215" -> "1000285"  [label="DDG: *flags"];
"1000285" -> "1000120"  [label="AST: "];
"1000285" -> "1000288"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000288" -> "1000285"  [label="AST: "];
"1000295" -> "1000285"  [label="CFG: "];
"1000285" -> "1000461"  [label="DDG: *flags"];
"1000285" -> "1000461"  [label="DDG: *flags |= x509_crt_verifycrl(child, parent, ca_crl, profile )"];
"1000285" -> "1000461"  [label="DDG: x509_crt_verifycrl(child, parent, ca_crl, profile )"];
"1000281" -> "1000285"  [label="DDG: *flags"];
"1000246" -> "1000285"  [label="DDG: *flags"];
"1000288" -> "1000285"  [label="DDG: child"];
"1000288" -> "1000285"  [label="DDG: parent"];
"1000288" -> "1000285"  [label="DDG: ca_crl"];
"1000288" -> "1000285"  [label="DDG: profile"];
"1000285" -> "1000455"  [label="DDG: *flags"];
"1000455" -> "1000120"  [label="AST: "];
"1000455" -> "1000458"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000458" -> "1000455"  [label="AST: "];
"1000460" -> "1000455"  [label="CFG: "];
"1000455" -> "1000461"  [label="DDG: *flags |= parent_flags"];
"1000455" -> "1000461"  [label="DDG: parent_flags"];
"1000455" -> "1000461"  [label="DDG: *flags"];
"1000123" -> "1000455"  [label="DDG: parent_flags"];
"1000246" -> "1000234"  [label="AST: "];
"1000246" -> "1000249"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000249" -> "1000246"  [label="AST: "];
"1000254" -> "1000246"  [label="CFG: "];
"1000246" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_BAD_KEY"];
"1000246" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_BAD_KEY"];
"1000246" -> "1000281"  [label="DDG: *flags"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000284"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000284" -> "1000281"  [label="AST: "];
"1000287" -> "1000281"  [label="CFG: "];
"1000281" -> "1000461"  [label="DDG: MBEDTLS_X509_BADCERT_NOT_TRUSTED"];
"1000281" -> "1000461"  [label="DDG: *flags |= MBEDTLS_X509_BADCERT_NOT_TRUSTED"];
}
