digraph "1_libplist_3a55ddd3c4c11ce75a86afbefd085d8d397ff957_0@pointer" {
"1000101" [label="(MethodParameterIn,unsigned char *target)"];
"1000181" [label="(Call,target[i++] = (char)((w1*4 + (w2 >> 4)) & 255))"];
"1000202" [label="(Call,target[i++] = (char)((w2*16 + (w3 >> 2)) & 255))"];
"1000223" [label="(Call,target[i++] = (char)((w3*64 + w4) & 255))"];
"1000202" [label="(Call,target[i++] = (char)((w2*16 + (w3 >> 2)) & 255))"];
"1000224" [label="(Call,target[i++])"];
"1000101" [label="(MethodParameterIn,unsigned char *target)"];
"1000180" [label="(Block,)"];
"1000223" [label="(Call,target[i++] = (char)((w3*64 + w4) & 255))"];
"1000220" [label="(Identifier,w4)"];
"1000228" [label="(Call,(char)((w3*64 + w4) & 255))"];
"1000181" [label="(Call,target[i++] = (char)((w1*4 + (w2 >> 4)) & 255))"];
"1000207" [label="(Call,(char)((w2*16 + (w3 >> 2)) & 255))"];
"1000238" [label="(Identifier,n)"];
"1000199" [label="(Identifier,w3)"];
"1000182" [label="(Call,target[i++])"];
"1000242" [label="(MethodReturn,static int)"];
"1000201" [label="(Block,)"];
"1000186" [label="(Call,(char)((w1*4 + (w2 >> 4)) & 255))"];
"1000222" [label="(Block,)"];
"1000203" [label="(Call,target[i++])"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000242"  [label="DDG: target"];
"1000101" -> "1000181"  [label="DDG: target"];
"1000101" -> "1000202"  [label="DDG: target"];
"1000101" -> "1000223"  [label="DDG: target"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000186"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000186" -> "1000181"  [label="AST: "];
"1000199" -> "1000181"  [label="CFG: "];
"1000181" -> "1000242"  [label="DDG: target[i++]"];
"1000181" -> "1000242"  [label="DDG: (char)((w1*4 + (w2 >> 4)) & 255)"];
"1000186" -> "1000181"  [label="DDG: (w1*4 + (w2 >> 4)) & 255"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000207"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000207" -> "1000202"  [label="AST: "];
"1000220" -> "1000202"  [label="CFG: "];
"1000202" -> "1000242"  [label="DDG: (char)((w2*16 + (w3 >> 2)) & 255)"];
"1000202" -> "1000242"  [label="DDG: target[i++]"];
"1000207" -> "1000202"  [label="DDG: (w2*16 + (w3 >> 2)) & 255"];
"1000223" -> "1000222"  [label="AST: "];
"1000223" -> "1000228"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000228" -> "1000223"  [label="AST: "];
"1000238" -> "1000223"  [label="CFG: "];
"1000223" -> "1000242"  [label="DDG: (char)((w3*64 + w4) & 255)"];
"1000223" -> "1000242"  [label="DDG: target[i++]"];
"1000228" -> "1000223"  [label="DDG: (w3*64 + w4) & 255"];
}
