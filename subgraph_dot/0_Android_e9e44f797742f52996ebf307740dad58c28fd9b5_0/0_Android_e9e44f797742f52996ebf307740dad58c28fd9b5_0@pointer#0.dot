digraph "0_Android_e9e44f797742f52996ebf307740dad58c28fd9b5_0@pointer" {
"1000196" [label="(Call,metadata->entry_count > metadata->entry_capacity)"];
"1000204" [label="(Call,ALOGE(\"%s: Entry count (%\" PRIu32 \") should be <= entry capacity \"\n \"(%\" PRIu32 \")\",\n              __FUNCTION__, metadata->entry_count, metadata->entry_capacity))"];
"1000239" [label="(Call,entries_end = metadata->entries_start + metadata->entry_capacity)"];
"1000250" [label="(Call,entries_end < metadata->entries_start)"];
"1000249" [label="(Call,entries_end < metadata->entries_start || // overflow check\n         entries_end > metadata->data_start)"];
"1000255" [label="(Call,entries_end > metadata->data_start)"];
"1000261" [label="(Call,ALOGE(\"%s: Entry start + capacity (%\" PRIu32 \") should be <= data start \"\n \"(%\" PRIu32 \")\",\n               __FUNCTION__,\n (metadata->entries_start + metadata->entry_capacity),\n              metadata->data_start))"];
"1000277" [label="(Call,data_end =\n        metadata->data_start + metadata->data_capacity)"];
"1000288" [label="(Call,data_end < metadata->data_start)"];
"1000287" [label="(Call,data_end < metadata->data_start || // overflow check\n        data_end > metadata->size)"];
"1000293" [label="(Call,data_end > metadata->size)"];
"1000299" [label="(Call,ALOGE(\"%s: Data start + capacity (%\" PRIu32 \") should be <= total size \"\n \"(%\" PRIu32 \")\",\n               __FUNCTION__,\n (metadata->data_start + metadata->data_capacity),\n              metadata->size))"];
"1000302" [label="(Call,metadata->data_start + metadata->data_capacity)"];
"1000279" [label="(Call,metadata->data_start + metadata->data_capacity)"];
"1000264" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000241" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000315" [label="(Call,entry_count = metadata->entry_count)"];
"1000330" [label="(Call,i < entry_count)"];
"1000333" [label="(Call,++i)"];
"1000351" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000375" [label="(Call,ALOGE(\"%s: Entry index %zu had a bad type %d\",\n                  __FUNCTION__, i, entry.type))"];
"1000412" [label="(Call,ALOGE(\"%s: Entry index %zu had tag type %d, but the type was %d\",\n                  __FUNCTION__, i, tag_type, entry.type))"];
"1000205" [label="(Literal,\"%s: Entry count (%\" PRIu32 \") should be <= entry capacity \"\n \"(%\" PRIu32 \")\")"];
"1000287" [label="(Call,data_end < metadata->data_start || // overflow check\n        data_end > metadata->size)"];
"1000333" [label="(Call,++i)"];
"1000195" [label="(ControlStructure,if (metadata->entry_count > metadata->entry_capacity))"];
"1000315" [label="(Call,entry_count = metadata->entry_count)"];
"1000316" [label="(Identifier,entry_count)"];
"1000351" [label="(Call,ALOGE(\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\",\n                  __FUNCTION__, i, &entries[i], ENTRY_ALIGNMENT))"];
"1000369" [label="(Call,entry.type >= NUM_TYPES)"];
"1000294" [label="(Identifier,data_end)"];
"1000293" [label="(Call,data_end > metadata->size)"];
"1000218" [label="(Identifier,metadata)"];
"1000413" [label="(Literal,\"%s: Entry index %zu had tag type %d, but the type was %d\")"];
"1000108" [label="(Block,)"];
"1000354" [label="(Identifier,i)"];
"1000317" [label="(Call,metadata->entry_count)"];
"1000377" [label="(Identifier,__FUNCTION__)"];
"1000240" [label="(Identifier,entries_end)"];
"1000334" [label="(Identifier,i)"];
"1000374" [label="(Block,)"];
"1000272" [label="(Identifier,metadata)"];
"1000204" [label="(Call,ALOGE(\"%s: Entry count (%\" PRIu32 \") should be <= entry capacity \"\n \"(%\" PRIu32 \")\",\n              __FUNCTION__, metadata->entry_count, metadata->entry_capacity))"];
"1000295" [label="(Call,metadata->size)"];
"1000248" [label="(ControlStructure,if (entries_end < metadata->entries_start || // overflow check\n         entries_end > metadata->data_start))"];
"1000290" [label="(Call,metadata->data_start)"];
"1000363" [label="(Call,entry = entries[i])"];
"1000207" [label="(Call,metadata->entry_count)"];
"1000350" [label="(Block,)"];
"1000375" [label="(Call,ALOGE(\"%s: Entry index %zu had a bad type %d\",\n                  __FUNCTION__, i, entry.type))"];
"1000251" [label="(Identifier,entries_end)"];
"1000300" [label="(Literal,\"%s: Data start + capacity (%\" PRIu32 \") should be <= total size \"\n \"(%\" PRIu32 \")\")"];
"1000401" [label="(Call,tag_type != (int)entry.type)"];
"1000523" [label="(Identifier,OK)"];
"1000203" [label="(Block,)"];
"1000361" [label="(Identifier,ERROR)"];
"1000353" [label="(Identifier,__FUNCTION__)"];
"1000200" [label="(Call,metadata->entry_capacity)"];
"1000299" [label="(Call,ALOGE(\"%s: Data start + capacity (%\" PRIu32 \") should be <= total size \"\n \"(%\" PRIu32 \")\",\n               __FUNCTION__,\n (metadata->data_start + metadata->data_capacity),\n              metadata->size))"];
"1000383" [label="(Identifier,ERROR)"];
"1000288" [label="(Call,data_end < metadata->data_start)"];
"1000250" [label="(Call,entries_end < metadata->entries_start)"];
"1000352" [label="(Literal,\"%s: Entry index %zu had bad alignment (address %p),\"\n \" expected alignment %zu\")"];
"1000359" [label="(Identifier,ENTRY_ALIGNMENT)"];
"1000255" [label="(Call,entries_end > metadata->data_start)"];
"1000376" [label="(Literal,\"%s: Entry index %zu had a bad type %d\")"];
"1000417" [label="(Call,entry.type)"];
"1000415" [label="(Identifier,i)"];
"1000197" [label="(Call,metadata->entry_count)"];
"1000344" [label="(Call,ALIGN_TO(&entries[i], ENTRY_ALIGNMENT))"];
"1000268" [label="(Call,metadata->entry_capacity)"];
"1000379" [label="(Call,entry.type)"];
"1000306" [label="(Call,metadata->data_capacity)"];
"1000280" [label="(Call,metadata->data_start)"];
"1000414" [label="(Identifier,__FUNCTION__)"];
"1000416" [label="(Identifier,tag_type)"];
"1000249" [label="(Call,entries_end < metadata->entries_start || // overflow check\n         entries_end > metadata->data_start)"];
"1000330" [label="(Call,i < entry_count)"];
"1000325" [label="(ControlStructure,for (size_t i = 0; i < entry_count; ++i))"];
"1000301" [label="(Identifier,__FUNCTION__)"];
"1000298" [label="(Block,)"];
"1000322" [label="(Identifier,entries)"];
"1000327" [label="(Call,i = 0)"];
"1000206" [label="(Identifier,__FUNCTION__)"];
"1000277" [label="(Call,data_end =\n        metadata->data_start + metadata->data_capacity)"];
"1000241" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000257" [label="(Call,metadata->data_start)"];
"1000252" [label="(Call,metadata->entries_start)"];
"1000265" [label="(Call,metadata->entries_start)"];
"1000411" [label="(Block,)"];
"1000262" [label="(Literal,\"%s: Entry start + capacity (%\" PRIu32 \") should be <= data start \"\n \"(%\" PRIu32 \")\")"];
"1000412" [label="(Call,ALOGE(\"%s: Entry index %zu had tag type %d, but the type was %d\",\n                  __FUNCTION__, i, tag_type, entry.type))"];
"1000286" [label="(ControlStructure,if (data_end < metadata->data_start || // overflow check\n        data_end > metadata->size))"];
"1000210" [label="(Call,metadata->entry_capacity)"];
"1000214" [label="(Identifier,ERROR)"];
"1000279" [label="(Call,metadata->data_start + metadata->data_capacity)"];
"1000421" [label="(Identifier,ERROR)"];
"1000331" [label="(Identifier,i)"];
"1000403" [label="(Call,(int)entry.type)"];
"1000260" [label="(Block,)"];
"1000309" [label="(Call,metadata->size)"];
"1000524" [label="(MethodReturn,int)"];
"1000245" [label="(Call,metadata->entry_capacity)"];
"1000261" [label="(Call,ALOGE(\"%s: Entry start + capacity (%\" PRIu32 \") should be <= data start \"\n \"(%\" PRIu32 \")\",\n               __FUNCTION__,\n (metadata->entries_start + metadata->entry_capacity),\n              metadata->data_start))"];
"1000275" [label="(Identifier,ERROR)"];
"1000256" [label="(Identifier,entries_end)"];
"1000278" [label="(Identifier,data_end)"];
"1000196" [label="(Call,metadata->entry_count > metadata->entry_capacity)"];
"1000216" [label="(Call,metadata->data_count > metadata->data_capacity)"];
"1000302" [label="(Call,metadata->data_start + metadata->data_capacity)"];
"1000271" [label="(Call,metadata->data_start)"];
"1000239" [label="(Call,entries_end = metadata->entries_start + metadata->entry_capacity)"];
"1000355" [label="(Call,&entries[i])"];
"1000178" [label="(Call,metadata->size > *expected_size)"];
"1000378" [label="(Identifier,i)"];
"1000313" [label="(Identifier,ERROR)"];
"1000242" [label="(Call,metadata->entries_start)"];
"1000289" [label="(Identifier,data_end)"];
"1000264" [label="(Call,metadata->entries_start + metadata->entry_capacity)"];
"1000310" [label="(Identifier,metadata)"];
"1000332" [label="(Identifier,entry_count)"];
"1000303" [label="(Call,metadata->data_start)"];
"1000283" [label="(Call,metadata->data_capacity)"];
"1000263" [label="(Identifier,__FUNCTION__)"];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000200"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000200" -> "1000196"  [label="AST: "];
"1000205" -> "1000196"  [label="CFG: "];
"1000218" -> "1000196"  [label="CFG: "];
"1000196" -> "1000524"  [label="DDG: "];
"1000196" -> "1000524"  [label="DDG: "];
"1000196" -> "1000524"  [label="DDG: "];
"1000196" -> "1000204"  [label="DDG: "];
"1000196" -> "1000204"  [label="DDG: "];
"1000196" -> "1000239"  [label="DDG: "];
"1000196" -> "1000241"  [label="DDG: "];
"1000196" -> "1000261"  [label="DDG: "];
"1000196" -> "1000264"  [label="DDG: "];
"1000196" -> "1000315"  [label="DDG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000210"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000210" -> "1000204"  [label="AST: "];
"1000214" -> "1000204"  [label="CFG: "];
"1000204" -> "1000524"  [label="DDG: "];
"1000204" -> "1000524"  [label="DDG: "];
"1000204" -> "1000524"  [label="DDG: "];
"1000204" -> "1000524"  [label="DDG: "];
"1000239" -> "1000108"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000251" -> "1000239"  [label="CFG: "];
"1000239" -> "1000524"  [label="DDG: "];
"1000239" -> "1000250"  [label="DDG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000256" -> "1000250"  [label="CFG: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000524"  [label="DDG: "];
"1000250" -> "1000524"  [label="DDG: "];
"1000250" -> "1000249"  [label="DDG: "];
"1000250" -> "1000249"  [label="DDG: "];
"1000250" -> "1000255"  [label="DDG: "];
"1000250" -> "1000261"  [label="DDG: "];
"1000250" -> "1000264"  [label="DDG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000255"  [label="CFG: "];
"1000255" -> "1000249"  [label="AST: "];
"1000262" -> "1000249"  [label="CFG: "];
"1000278" -> "1000249"  [label="CFG: "];
"1000249" -> "1000524"  [label="DDG: "];
"1000249" -> "1000524"  [label="DDG: "];
"1000249" -> "1000524"  [label="DDG: "];
"1000255" -> "1000249"  [label="DDG: "];
"1000255" -> "1000249"  [label="DDG: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000255" -> "1000524"  [label="DDG: "];
"1000255" -> "1000261"  [label="DDG: "];
"1000255" -> "1000277"  [label="DDG: "];
"1000255" -> "1000279"  [label="DDG: "];
"1000255" -> "1000288"  [label="DDG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000271"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="AST: "];
"1000271" -> "1000261"  [label="AST: "];
"1000275" -> "1000261"  [label="CFG: "];
"1000261" -> "1000524"  [label="DDG: "];
"1000261" -> "1000524"  [label="DDG: "];
"1000261" -> "1000524"  [label="DDG: "];
"1000261" -> "1000524"  [label="DDG: "];
"1000277" -> "1000108"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000289" -> "1000277"  [label="CFG: "];
"1000277" -> "1000524"  [label="DDG: "];
"1000216" -> "1000277"  [label="DDG: "];
"1000277" -> "1000288"  [label="DDG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000294" -> "1000288"  [label="CFG: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000524"  [label="DDG: "];
"1000288" -> "1000524"  [label="DDG: "];
"1000288" -> "1000287"  [label="DDG: "];
"1000288" -> "1000287"  [label="DDG: "];
"1000288" -> "1000293"  [label="DDG: "];
"1000288" -> "1000299"  [label="DDG: "];
"1000288" -> "1000302"  [label="DDG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000293"  [label="CFG: "];
"1000293" -> "1000287"  [label="AST: "];
"1000300" -> "1000287"  [label="CFG: "];
"1000316" -> "1000287"  [label="CFG: "];
"1000287" -> "1000524"  [label="DDG: "];
"1000287" -> "1000524"  [label="DDG: "];
"1000287" -> "1000524"  [label="DDG: "];
"1000293" -> "1000287"  [label="DDG: "];
"1000293" -> "1000287"  [label="DDG: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000293" -> "1000524"  [label="DDG: "];
"1000293" -> "1000524"  [label="DDG: "];
"1000178" -> "1000293"  [label="DDG: "];
"1000293" -> "1000299"  [label="DDG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000309"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="AST: "];
"1000302" -> "1000299"  [label="AST: "];
"1000309" -> "1000299"  [label="AST: "];
"1000313" -> "1000299"  [label="CFG: "];
"1000299" -> "1000524"  [label="DDG: "];
"1000299" -> "1000524"  [label="DDG: "];
"1000299" -> "1000524"  [label="DDG: "];
"1000299" -> "1000524"  [label="DDG: "];
"1000216" -> "1000299"  [label="DDG: "];
"1000178" -> "1000299"  [label="DDG: "];
"1000302" -> "1000306"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000306" -> "1000302"  [label="AST: "];
"1000310" -> "1000302"  [label="CFG: "];
"1000302" -> "1000524"  [label="DDG: "];
"1000302" -> "1000524"  [label="DDG: "];
"1000216" -> "1000302"  [label="DDG: "];
"1000279" -> "1000283"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000283" -> "1000279"  [label="AST: "];
"1000279" -> "1000524"  [label="DDG: "];
"1000216" -> "1000279"  [label="DDG: "];
"1000264" -> "1000268"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000268" -> "1000264"  [label="AST: "];
"1000272" -> "1000264"  [label="CFG: "];
"1000264" -> "1000524"  [label="DDG: "];
"1000264" -> "1000524"  [label="DDG: "];
"1000241" -> "1000245"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000241" -> "1000524"  [label="DDG: "];
"1000315" -> "1000108"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="CFG: "];
"1000315" -> "1000524"  [label="DDG: "];
"1000315" -> "1000330"  [label="DDG: "];
"1000330" -> "1000325"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000339" -> "1000330"  [label="CFG: "];
"1000523" -> "1000330"  [label="CFG: "];
"1000330" -> "1000524"  [label="DDG: "];
"1000330" -> "1000524"  [label="DDG: "];
"1000330" -> "1000524"  [label="DDG: "];
"1000333" -> "1000330"  [label="DDG: "];
"1000327" -> "1000330"  [label="DDG: "];
"1000330" -> "1000333"  [label="DDG: "];
"1000330" -> "1000351"  [label="DDG: "];
"1000330" -> "1000375"  [label="DDG: "];
"1000330" -> "1000412"  [label="DDG: "];
"1000333" -> "1000325"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000359"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000354" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="AST: "];
"1000359" -> "1000351"  [label="AST: "];
"1000361" -> "1000351"  [label="CFG: "];
"1000351" -> "1000524"  [label="DDG: "];
"1000351" -> "1000524"  [label="DDG: "];
"1000351" -> "1000524"  [label="DDG: "];
"1000351" -> "1000524"  [label="DDG: "];
"1000351" -> "1000524"  [label="DDG: "];
"1000344" -> "1000351"  [label="DDG: "];
"1000344" -> "1000351"  [label="DDG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000379"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000378" -> "1000375"  [label="AST: "];
"1000379" -> "1000375"  [label="AST: "];
"1000383" -> "1000375"  [label="CFG: "];
"1000375" -> "1000524"  [label="DDG: "];
"1000375" -> "1000524"  [label="DDG: "];
"1000375" -> "1000524"  [label="DDG: "];
"1000375" -> "1000524"  [label="DDG: "];
"1000369" -> "1000375"  [label="DDG: "];
"1000363" -> "1000375"  [label="DDG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000417"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000415" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="AST: "];
"1000417" -> "1000412"  [label="AST: "];
"1000421" -> "1000412"  [label="CFG: "];
"1000412" -> "1000524"  [label="DDG: "];
"1000412" -> "1000524"  [label="DDG: "];
"1000412" -> "1000524"  [label="DDG: "];
"1000412" -> "1000524"  [label="DDG: "];
"1000412" -> "1000524"  [label="DDG: "];
"1000401" -> "1000412"  [label="DDG: "];
"1000403" -> "1000412"  [label="DDG: "];
"1000363" -> "1000412"  [label="DDG: "];
}
