digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16_0@API" {
"1000538" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000540" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000543" [label="(Call,gsasl_strerror(ret))"];
"1000532" [label="(Call,_sx_debug(ZONE, \"gsasl_base64_from failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000536" [label="(Call,gsasl_strerror(ret))"];
"1000528" [label="(Call,ret != GSASL_OK)"];
"1000518" [label="(Call,ret = gsasl_base64_from(in, inlen, &buf, &buflen))"];
"1000520" [label="(Call,gsasl_base64_from(in, inlen, &buf, &buflen))"];
"1000124" [label="(MethodParameterIn,const char *in)"];
"1000125" [label="(MethodParameterIn,int inlen)"];
"1000786" [label="(Call,_sx_sasl_failure(s, out, gsasl_strerror(ret)))"];
"1000493" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000520" [label="(Call,gsasl_base64_from(in, inlen, &buf, &buflen))"];
"1000124" [label="(MethodParameterIn,const char *in)"];
"1000529" [label="(Identifier,ret)"];
"1000532" [label="(Call,_sx_debug(ZONE, \"gsasl_base64_from failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000452" [label="(Call,strstr(in, \"<\"))"];
"1000613" [label="(Call,_sx_nad_write(s, _sx_sasl_success(s, buf, buflen), 0))"];
"1000541" [label="(Identifier,s)"];
"1000660" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000491" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000784" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, out, gsasl_strerror(ret)), 0))"];
"1000535" [label="(Identifier,ret)"];
"1000703" [label="(Call,_sx_nad_write(s, _sx_sasl_challenge(s, buf, buflen), 0))"];
"1000523" [label="(Call,&buf)"];
"1000592" [label="(Call,ret == GSASL_OK)"];
"1000517" [label="(Block,)"];
"1000443" [label="(Call,strstr(in, \"<\"))"];
"1000544" [label="(Identifier,ret)"];
"1000420" [label="(Call,(ctx->cb)(sx_sasl_cb_GEN_AUTHZID, NULL, (void **)&out, s, ctx->cbarg))"];
"1000542" [label="(Identifier,_sasl_err_INCORRECT_ENCODING)"];
"1000186" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000184" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL), 0))"];
"1000722" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000536" [label="(Call,gsasl_strerror(ret))"];
"1000558" [label="(Call,_sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"))"];
"1000525" [label="(Call,&buflen)"];
"1000125" [label="(MethodParameterIn,int inlen)"];
"1000212" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)), 0))"];
"1000534" [label="(Literal,\"gsasl_base64_from failed, no sasl for this conn; (%d): %s\")"];
"1000521" [label="(Identifier,in)"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000537" [label="(Identifier,ret)"];
"1000250" [label="(Call,sctx->s = s)"];
"1000531" [label="(Block,)"];
"1000214" [label="(Call,_sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)))"];
"1000615" [label="(Call,_sx_sasl_success(s, buf, buflen))"];
"1000601" [label="(Call,gsasl_base64_to(out, outlen, &buf, &buflen))"];
"1000792" [label="(MethodReturn,static void)"];
"1000658" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000546" [label="(Return,return;)"];
"1000528" [label="(Call,ret != GSASL_OK)"];
"1000221" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000473" [label="(Call,gsasl_base64_from(in, inlen, &buf, &buflen))"];
"1000522" [label="(Identifier,inlen)"];
"1000519" [label="(Identifier,ret)"];
"1000518" [label="(Call,ret = gsasl_base64_from(in, inlen, &buf, &buflen))"];
"1000556" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"), 0))"];
"1000530" [label="(Identifier,GSASL_OK)"];
"1000538" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000539" [label="(Identifier,s)"];
"1000545" [label="(Literal,0)"];
"1000543" [label="(Call,gsasl_strerror(ret))"];
"1000691" [label="(Call,gsasl_base64_to(out, outlen, &buf, &buflen))"];
"1000720" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000448" [label="(Call,strncmp(in, \"=\", strstr(in, \"<\") - in ))"];
"1000549" [label="(Identifier,sd)"];
"1000451" [label="(Call,strstr(in, \"<\") - in)"];
"1000540" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000705" [label="(Call,_sx_sasl_challenge(s, buf, buflen))"];
"1000527" [label="(ControlStructure,if (ret != GSASL_OK))"];
"1000533" [label="(Identifier,ZONE)"];
"1000538" -> "1000531"  [label="AST: "];
"1000538" -> "1000545"  [label="CFG: "];
"1000539" -> "1000538"  [label="AST: "];
"1000540" -> "1000538"  [label="AST: "];
"1000545" -> "1000538"  [label="AST: "];
"1000546" -> "1000538"  [label="CFG: "];
"1000538" -> "1000792"  [label="DDG: "];
"1000538" -> "1000792"  [label="DDG: "];
"1000538" -> "1000792"  [label="DDG: "];
"1000540" -> "1000538"  [label="DDG: "];
"1000540" -> "1000538"  [label="DDG: "];
"1000540" -> "1000538"  [label="DDG: "];
"1000120" -> "1000538"  [label="DDG: "];
"1000540" -> "1000543"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000543" -> "1000540"  [label="AST: "];
"1000545" -> "1000540"  [label="CFG: "];
"1000540" -> "1000792"  [label="DDG: "];
"1000540" -> "1000792"  [label="DDG: "];
"1000120" -> "1000540"  [label="DDG: "];
"1000543" -> "1000540"  [label="DDG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000792"  [label="DDG: "];
"1000120" -> "1000184"  [label="DDG: "];
"1000120" -> "1000186"  [label="DDG: "];
"1000120" -> "1000212"  [label="DDG: "];
"1000120" -> "1000214"  [label="DDG: "];
"1000120" -> "1000221"  [label="DDG: "];
"1000120" -> "1000250"  [label="DDG: "];
"1000120" -> "1000420"  [label="DDG: "];
"1000120" -> "1000491"  [label="DDG: "];
"1000120" -> "1000493"  [label="DDG: "];
"1000120" -> "1000556"  [label="DDG: "];
"1000120" -> "1000558"  [label="DDG: "];
"1000120" -> "1000613"  [label="DDG: "];
"1000120" -> "1000615"  [label="DDG: "];
"1000120" -> "1000658"  [label="DDG: "];
"1000120" -> "1000660"  [label="DDG: "];
"1000120" -> "1000703"  [label="DDG: "];
"1000120" -> "1000705"  [label="DDG: "];
"1000120" -> "1000720"  [label="DDG: "];
"1000120" -> "1000722"  [label="DDG: "];
"1000120" -> "1000784"  [label="DDG: "];
"1000120" -> "1000786"  [label="DDG: "];
"1000543" -> "1000544"  [label="CFG: "];
"1000544" -> "1000543"  [label="AST: "];
"1000543" -> "1000792"  [label="DDG: "];
"1000532" -> "1000543"  [label="DDG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000532" -> "1000536"  [label="CFG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000534" -> "1000532"  [label="AST: "];
"1000535" -> "1000532"  [label="AST: "];
"1000536" -> "1000532"  [label="AST: "];
"1000539" -> "1000532"  [label="CFG: "];
"1000532" -> "1000792"  [label="DDG: "];
"1000532" -> "1000792"  [label="DDG: "];
"1000536" -> "1000532"  [label="DDG: "];
"1000536" -> "1000537"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000528" -> "1000536"  [label="DDG: "];
"1000528" -> "1000527"  [label="AST: "];
"1000528" -> "1000530"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000533" -> "1000528"  [label="CFG: "];
"1000549" -> "1000528"  [label="CFG: "];
"1000528" -> "1000792"  [label="DDG: "];
"1000528" -> "1000792"  [label="DDG: "];
"1000528" -> "1000792"  [label="DDG: "];
"1000518" -> "1000528"  [label="DDG: "];
"1000528" -> "1000592"  [label="DDG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000529" -> "1000518"  [label="CFG: "];
"1000518" -> "1000792"  [label="DDG: "];
"1000520" -> "1000518"  [label="DDG: "];
"1000520" -> "1000518"  [label="DDG: "];
"1000520" -> "1000518"  [label="DDG: "];
"1000520" -> "1000518"  [label="DDG: "];
"1000520" -> "1000525"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000523" -> "1000520"  [label="AST: "];
"1000525" -> "1000520"  [label="AST: "];
"1000520" -> "1000792"  [label="DDG: "];
"1000520" -> "1000792"  [label="DDG: "];
"1000520" -> "1000792"  [label="DDG: "];
"1000520" -> "1000792"  [label="DDG: "];
"1000124" -> "1000520"  [label="DDG: "];
"1000125" -> "1000520"  [label="DDG: "];
"1000520" -> "1000601"  [label="DDG: "];
"1000520" -> "1000601"  [label="DDG: "];
"1000520" -> "1000691"  [label="DDG: "];
"1000520" -> "1000691"  [label="DDG: "];
"1000124" -> "1000119"  [label="AST: "];
"1000124" -> "1000792"  [label="DDG: "];
"1000124" -> "1000443"  [label="DDG: "];
"1000124" -> "1000448"  [label="DDG: "];
"1000124" -> "1000452"  [label="DDG: "];
"1000124" -> "1000451"  [label="DDG: "];
"1000124" -> "1000473"  [label="DDG: "];
"1000125" -> "1000119"  [label="AST: "];
"1000125" -> "1000792"  [label="DDG: "];
"1000125" -> "1000473"  [label="DDG: "];
}
