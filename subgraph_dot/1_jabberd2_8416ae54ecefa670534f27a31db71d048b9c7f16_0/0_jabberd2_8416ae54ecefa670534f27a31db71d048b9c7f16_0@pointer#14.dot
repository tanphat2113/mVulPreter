digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16_0@pointer" {
"1000180" [label="(Call,_sx_debug(ZONE, \"client requested mechanism (%s) that we didn't offer\", mech))"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000164" [label="(Call,mech != NULL)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000174" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000173" [label="(Call,!gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000194" [label="(Call,gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000564" [label="(Call,buf != NULL)"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000186" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000166" [label="(Identifier,NULL)"];
"1000182" [label="(Literal,\"client requested mechanism (%s) that we didn't offer\")"];
"1000174" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000164" [label="(Call,mech != NULL)"];
"1000171" [label="(Identifier,mech)"];
"1000183" [label="(Identifier,mech)"];
"1000415" [label="(Call,strcmp(mech, \"ANONYMOUS\"))"];
"1000178" [label="(Identifier,mech)"];
"1000792" [label="(MethodReturn,static void)"];
"1000176" [label="(Identifier,ctx)"];
"1000170" [label="(Literal,\"auth request from client (mechanism=%s)\")"];
"1000221" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000519" [label="(Identifier,ret)"];
"1000206" [label="(Call,_sx_debug(ZONE, \"gsasl_server_start failed, no sasl for this conn; (%d): %s\", ret, gsasl_strerror(ret)))"];
"1000175" [label="(Call,ctx->gsasl_ctx)"];
"1000180" [label="(Call,_sx_debug(ZONE, \"client requested mechanism (%s) that we didn't offer\", mech))"];
"1000163" [label="(ControlStructure,if(mech != NULL))"];
"1000396" [label="(Call,_sx_debug(ZONE, \"sasl context initialised for %d\", s->tag))"];
"1000179" [label="(Block,)"];
"1000586" [label="(Call,buf != NULL)"];
"1000181" [label="(Identifier,ZONE)"];
"1000167" [label="(Block,)"];
"1000185" [label="(Identifier,s)"];
"1000169" [label="(Identifier,ZONE)"];
"1000165" [label="(Identifier,mech)"];
"1000414" [label="(Call,strcmp(mech, \"ANONYMOUS\") == 0)"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000183"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000183" -> "1000180"  [label="AST: "];
"1000185" -> "1000180"  [label="CFG: "];
"1000180" -> "1000792"  [label="DDG: "];
"1000180" -> "1000792"  [label="DDG: "];
"1000180" -> "1000792"  [label="DDG: "];
"1000168" -> "1000180"  [label="DDG: "];
"1000174" -> "1000180"  [label="DDG: "];
"1000123" -> "1000180"  [label="DDG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000168" -> "1000171"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000171" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000168" -> "1000792"  [label="DDG: "];
"1000164" -> "1000168"  [label="DDG: "];
"1000123" -> "1000168"  [label="DDG: "];
"1000168" -> "1000174"  [label="DDG: "];
"1000168" -> "1000206"  [label="DDG: "];
"1000168" -> "1000396"  [label="DDG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000519" -> "1000164"  [label="CFG: "];
"1000164" -> "1000792"  [label="DDG: "];
"1000164" -> "1000792"  [label="DDG: "];
"1000164" -> "1000792"  [label="DDG: "];
"1000123" -> "1000164"  [label="DDG: "];
"1000164" -> "1000186"  [label="DDG: "];
"1000164" -> "1000221"  [label="DDG: "];
"1000164" -> "1000564"  [label="DDG: "];
"1000164" -> "1000586"  [label="DDG: "];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000792"  [label="DDG: "];
"1000123" -> "1000174"  [label="DDG: "];
"1000123" -> "1000194"  [label="DDG: "];
"1000123" -> "1000414"  [label="DDG: "];
"1000123" -> "1000415"  [label="DDG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000174" -> "1000178"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000792"  [label="DDG: "];
"1000174" -> "1000173"  [label="DDG: "];
"1000174" -> "1000173"  [label="DDG: "];
"1000174" -> "1000194"  [label="DDG: "];
"1000174" -> "1000194"  [label="DDG: "];
}
