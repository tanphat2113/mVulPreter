digraph "0_jabberd2_8416ae54ecefa670534f27a31db71d048b9c7f16_0@API" {
"1000240" [label="(Call,free(sctx))"];
"1000237" [label="(Call,sctx != NULL)"];
"1000232" [label="(Call,sctx = gsasl_session_hook_get(sd))"];
"1000234" [label="(Call,gsasl_session_hook_get(sd))"];
"1000122" [label="(MethodParameterIn,Gsasl_session *sd)"];
"1000221" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000164" [label="(Call,mech != NULL)"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000224" [label="(Call,(void **) &realm)"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000786" [label="(Call,_sx_sasl_failure(s, out, gsasl_strerror(ret)))"];
"1000224" [label="(Call,(void **) &realm)"];
"1000493" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000288" [label="(Call,gsasl_property_set(sd, GSASL_HOSTNAME, hostname))"];
"1000241" [label="(Identifier,sctx)"];
"1000194" [label="(Call,gsasl_server_start(ctx->gsasl_ctx, mech, &sd))"];
"1000660" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000564" [label="(Call,buf != NULL)"];
"1000226" [label="(Call,&realm)"];
"1000239" [label="(Identifier,NULL)"];
"1000613" [label="(Call,_sx_nad_write(s, _sx_sasl_success(s, buf, buflen), 0))"];
"1000265" [label="(Call,gsasl_property_set(sd, GSASL_SERVICE, ctx->appname))"];
"1000491" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000784" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, out, gsasl_strerror(ret)), 0))"];
"1000321" [label="(Call,s->plugin_data[s->env->plugins[i]->index] != NULL)"];
"1000703" [label="(Call,_sx_nad_write(s, _sx_sasl_challenge(s, buf, buflen), 0))"];
"1000168" [label="(Call,_sx_debug(ZONE, \"auth request from client (mechanism=%s)\", mech))"];
"1000420" [label="(Call,(ctx->cb)(sx_sasl_cb_GEN_AUTHZID, NULL, (void **)&out, s, ctx->cbarg))"];
"1000722" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000186" [label="(Call,_sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL))"];
"1000184" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INVALID_MECHANISM, NULL), 0))"];
"1000123" [label="(MethodParameterIn,const char *mech)"];
"1000558" [label="(Call,_sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"))"];
"1000166" [label="(Identifier,NULL)"];
"1000212" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)), 0))"];
"1000164" [label="(Call,mech != NULL)"];
"1000174" [label="(Call,gsasl_server_support_p(ctx->gsasl_ctx, mech))"];
"1000292" [label="(Call,ext_id = NULL)"];
"1000508" [label="(Call,gsasl_step(sd, buf, buflen, &out, &outlen))"];
"1000120" [label="(MethodParameterIn,sx_t s)"];
"1000250" [label="(Call,sctx->s = s)"];
"1000240" [label="(Call,free(sctx))"];
"1000234" [label="(Call,gsasl_session_hook_get(sd))"];
"1000214" [label="(Call,_sx_sasl_failure(s, _sasl_err_TEMPORARY_FAILURE, gsasl_strerror(ret)))"];
"1000415" [label="(Call,strcmp(mech, \"ANONYMOUS\"))"];
"1000410" [label="(Call,(void *) sd)"];
"1000229" [label="(Call,ctx->cbarg)"];
"1000615" [label="(Call,_sx_sasl_success(s, buf, buflen))"];
"1000236" [label="(ControlStructure,if (sctx != NULL))"];
"1000792" [label="(MethodReturn,static void)"];
"1000577" [label="(Call,gsasl_step(sd, buf, buflen, &out, &outlen))"];
"1000548" [label="(Call,!sd)"];
"1000233" [label="(Identifier,sctx)"];
"1000658" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000356" [label="(Call,ext_id != NULL)"];
"1000235" [label="(Identifier,sd)"];
"1000221" [label="(Call,(ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg))"];
"1000260" [label="(Call,gsasl_session_hook_set(sd, (void *) sctx))"];
"1000519" [label="(Identifier,ret)"];
"1000237" [label="(Call,sctx != NULL)"];
"1000271" [label="(Call,gsasl_property_set(sd, GSASL_REALM, realm))"];
"1000228" [label="(Identifier,s)"];
"1000238" [label="(Identifier,sctx)"];
"1000163" [label="(ControlStructure,if(mech != NULL))"];
"1000180" [label="(Call,_sx_debug(ZONE, \"client requested mechanism (%s) that we didn't offer\", mech))"];
"1000538" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000243" [label="(Identifier,sctx)"];
"1000232" [label="(Call,sctx = gsasl_session_hook_get(sd))"];
"1000223" [label="(Identifier,NULL)"];
"1000556" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_MECH_TOO_WEAK, \"response send before auth request enabling mechanism\"), 0))"];
"1000122" [label="(MethodParameterIn,Gsasl_session *sd)"];
"1000720" [label="(Call,_sx_nad_write(s, _sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)), 0))"];
"1000586" [label="(Call,buf != NULL)"];
"1000222" [label="(Identifier,sx_sasl_cb_GET_REALM)"];
"1000167" [label="(Block,)"];
"1000540" [label="(Call,_sx_sasl_failure(s, _sasl_err_INCORRECT_ENCODING, gsasl_strerror(ret)))"];
"1000705" [label="(Call,_sx_sasl_challenge(s, buf, buflen))"];
"1000169" [label="(Identifier,ZONE)"];
"1000165" [label="(Identifier,mech)"];
"1000414" [label="(Call,strcmp(mech, \"ANONYMOUS\") == 0)"];
"1000240" -> "1000236"  [label="AST: "];
"1000240" -> "1000241"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000243" -> "1000240"  [label="CFG: "];
"1000237" -> "1000240"  [label="DDG: sctx"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="CFG: "];
"1000243" -> "1000237"  [label="CFG: "];
"1000237" -> "1000792"  [label="DDG: sctx != NULL"];
"1000232" -> "1000237"  [label="DDG: sctx"];
"1000221" -> "1000237"  [label="DDG: NULL"];
"1000237" -> "1000292"  [label="DDG: NULL"];
"1000237" -> "1000321"  [label="DDG: NULL"];
"1000237" -> "1000356"  [label="DDG: NULL"];
"1000232" -> "1000167"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000238" -> "1000232"  [label="CFG: "];
"1000232" -> "1000792"  [label="DDG: gsasl_session_hook_get(sd)"];
"1000234" -> "1000232"  [label="DDG: sd"];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000122" -> "1000234"  [label="DDG: sd"];
"1000234" -> "1000260"  [label="DDG: sd"];
"1000122" -> "1000119"  [label="AST: "];
"1000122" -> "1000792"  [label="DDG: sd"];
"1000122" -> "1000260"  [label="DDG: sd"];
"1000122" -> "1000265"  [label="DDG: sd"];
"1000122" -> "1000271"  [label="DDG: sd"];
"1000122" -> "1000288"  [label="DDG: sd"];
"1000122" -> "1000410"  [label="DDG: sd"];
"1000122" -> "1000508"  [label="DDG: sd"];
"1000122" -> "1000548"  [label="DDG: sd"];
"1000122" -> "1000577"  [label="DDG: sd"];
"1000221" -> "1000167"  [label="AST: "];
"1000221" -> "1000229"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000224" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="AST: "];
"1000229" -> "1000221"  [label="AST: "];
"1000233" -> "1000221"  [label="CFG: "];
"1000221" -> "1000792"  [label="DDG: (ctx->cb)(sx_sasl_cb_GET_REALM, NULL, (void **) &realm, s, ctx->cbarg)"];
"1000221" -> "1000792"  [label="DDG: ctx->cbarg"];
"1000221" -> "1000792"  [label="DDG: sx_sasl_cb_GET_REALM"];
"1000221" -> "1000792"  [label="DDG: (void **) &realm"];
"1000164" -> "1000221"  [label="DDG: NULL"];
"1000224" -> "1000221"  [label="DDG: &realm"];
"1000120" -> "1000221"  [label="DDG: s"];
"1000221" -> "1000250"  [label="DDG: s"];
"1000221" -> "1000420"  [label="DDG: s"];
"1000221" -> "1000420"  [label="DDG: ctx->cbarg"];
"1000221" -> "1000493"  [label="DDG: s"];
"1000221" -> "1000615"  [label="DDG: s"];
"1000221" -> "1000660"  [label="DDG: s"];
"1000221" -> "1000705"  [label="DDG: s"];
"1000221" -> "1000722"  [label="DDG: s"];
"1000221" -> "1000786"  [label="DDG: s"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000519" -> "1000164"  [label="CFG: "];
"1000164" -> "1000792"  [label="DDG: mech != NULL"];
"1000164" -> "1000792"  [label="DDG: NULL"];
"1000164" -> "1000792"  [label="DDG: mech"];
"1000123" -> "1000164"  [label="DDG: mech"];
"1000164" -> "1000168"  [label="DDG: mech"];
"1000164" -> "1000186"  [label="DDG: NULL"];
"1000164" -> "1000564"  [label="DDG: NULL"];
"1000164" -> "1000586"  [label="DDG: NULL"];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000792"  [label="DDG: mech"];
"1000123" -> "1000168"  [label="DDG: mech"];
"1000123" -> "1000174"  [label="DDG: mech"];
"1000123" -> "1000180"  [label="DDG: mech"];
"1000123" -> "1000194"  [label="DDG: mech"];
"1000123" -> "1000414"  [label="DDG: mech"];
"1000123" -> "1000415"  [label="DDG: mech"];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="CFG: "];
"1000224" -> "1000792"  [label="DDG: &realm"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000792"  [label="DDG: s"];
"1000120" -> "1000184"  [label="DDG: s"];
"1000120" -> "1000186"  [label="DDG: s"];
"1000120" -> "1000212"  [label="DDG: s"];
"1000120" -> "1000214"  [label="DDG: s"];
"1000120" -> "1000250"  [label="DDG: s"];
"1000120" -> "1000420"  [label="DDG: s"];
"1000120" -> "1000491"  [label="DDG: s"];
"1000120" -> "1000493"  [label="DDG: s"];
"1000120" -> "1000538"  [label="DDG: s"];
"1000120" -> "1000540"  [label="DDG: s"];
"1000120" -> "1000556"  [label="DDG: s"];
"1000120" -> "1000558"  [label="DDG: s"];
"1000120" -> "1000613"  [label="DDG: s"];
"1000120" -> "1000615"  [label="DDG: s"];
"1000120" -> "1000658"  [label="DDG: s"];
"1000120" -> "1000660"  [label="DDG: s"];
"1000120" -> "1000703"  [label="DDG: s"];
"1000120" -> "1000705"  [label="DDG: s"];
"1000120" -> "1000720"  [label="DDG: s"];
"1000120" -> "1000722"  [label="DDG: s"];
"1000120" -> "1000784"  [label="DDG: s"];
"1000120" -> "1000786"  [label="DDG: s"];
}
