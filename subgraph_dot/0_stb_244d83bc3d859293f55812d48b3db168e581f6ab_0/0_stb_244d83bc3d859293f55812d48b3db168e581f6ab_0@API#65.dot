digraph "0_stb_244d83bc3d859293f55812d48b3db168e581f6ab_0@API" {
"1002454" [label="(Call,sizeof(r->residue_books[0]) * r->classifications)"];
"1002416" [label="(Call,j < r->classifications)"];
"1002413" [label="(Call,j=0)"];
"1002421" [label="(Call,++j)"];
"1002384" [label="(Call,r->classifications = get_bits(f,6)+1)"];
"1002389" [label="(Call,get_bits(f,6))"];
"1002380" [label="(Call,get_bits(f,24))"];
"1002360" [label="(Call,get_bits(f, 24))"];
"1002353" [label="(Call,get_bits(f, 24))"];
"1002334" [label="(Call,get_bits(f, 16))"];
"1002550" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002452" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1002440" [label="(Call,get_bits(f,5))"];
"1002435" [label="(Call,get_bits(f,1))"];
"1002431" [label="(Call,get_bits(f,3))"];
"1002397" [label="(Call,get_bits(f,8))"];
"1000108" [label="(MethodParameterIn,vorb *f)"];
"1002454" [label="(Call,sizeof(r->residue_books[0]) * r->classifications)"];
"1002513" [label="(Call,get_bits(f, 8))"];
"1002552" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002600" [label="(Call,j < f->codebooks[r->classbook].entries)"];
"1002597" [label="(Call,j=0)"];
"1002611" [label="(Call,++j)"];
"1002581" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002638" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002640" [label="(Call,sizeof(r->classdata[j][0]) * classwords)"];
"1002615" [label="(Call,classwords = f->codebooks[r->classbook].dimensions)"];
"1002270" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1002260" [label="(Call,get_bits(f, 6))"];
"1002130" [label="(Call,get_bits(f, g->rangebits))"];
"1002062" [label="(Call,get_bits(f,4))"];
"1002054" [label="(Call,get_bits(f,2))"];
"1002029" [label="(Call,get_bits(f,8))"];
"1001987" [label="(Call,get_bits(f, 8))"];
"1001971" [label="(Call,get_bits(f, 2))"];
"1001961" [label="(Call,get_bits(f, 3))"];
"1001926" [label="(Call,get_bits(f, 4))"];
"1001905" [label="(Call,get_bits(f, 5))"];
"1001779" [label="(Call,get_bits(f, 16))"];
"1001740" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1001730" [label="(Call,get_bits(f, 6))"];
"1001697" [label="(Call,get_bits(f, 6))"];
"1001692" [label="(Call,CHECK(f))"];
"1001185" [label="(Call,get_bits(f, 4))"];
"1001179" [label="(Call,CHECK(f))"];
"1000896" [label="(Call,CHECK(f))"];
"1000667" [label="(Call,get_bits(f,5))"];
"1000630" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1000603" [label="(Call,get_bits(f,1))"];
"1000593" [label="(Call,get_bits(f,1))"];
"1000582" [label="(Call,get_bits(f, 8))"];
"1000573" [label="(Call,get_bits(f, 8))"];
"1000568" [label="(Call,get_bits(f, 8))"];
"1000561" [label="(Call,get_bits(f, 8))"];
"1000552" [label="(Call,get_bits(f, 8))"];
"1000539" [label="(Call,get_bits(f, 8))"];
"1000526" [label="(Call,get_bits(f, 8))"];
"1000513" [label="(Call,get_bits(f, 8))"];
"1000509" [label="(Call,CHECK(f))"];
"1000446" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000436" [label="(Call,get_bits(f,8))"];
"1000401" [label="(Call,get8_packet(f))"];
"1000376" [label="(Call,IS_PUSH_MODE(f))"];
"1000371" [label="(Call,start_packet(f))"];
"1000360" [label="(Call,skip(f, len))"];
"1000358" [label="(Call,next_segment(f))"];
"1000350" [label="(Call,start_packet(f))"];
"1000344" [label="(Call,start_page(f))"];
"1000331" [label="(Call,get8(f))"];
"1000268" [label="(Call,get8(f))"];
"1000264" [label="(Call,get32(f))"];
"1000262" [label="(Call,get32(f))"];
"1000260" [label="(Call,get32(f))"];
"1000249" [label="(Call,get32(f))"];
"1000224" [label="(Call,get8(f))"];
"1000213" [label="(Call,get32(f))"];
"1000195" [label="(Call,getn(f, header, 6))"];
"1000186" [label="(Call,get8(f))"];
"1000127" [label="(Call,start_page(f))"];
"1000356" [label="(Call,len = next_segment(f))"];
"1000381" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1000421" [label="(Call,get8_packet(f))"];
"1000448" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1000431" [label="(Call,f->codebook_count = get_bits(f,8) + 1)"];
"1000613" [label="(Call,c->entries != 0)"];
"1000576" [label="(Call,c->entries = (get_bits(f, 8)<<16) + (y<<8) + x)"];
"1000581" [label="(Call,get_bits(f, 8)<<16)"];
"1000587" [label="(Call,y<<8)"];
"1000571" [label="(Call,y = get_bits(f, 8))"];
"1000566" [label="(Call,x = get_bits(f, 8))"];
"1000644" [label="(Call,setup_malloc(f, c->entries))"];
"1000689" [label="(Call,get_bits(f, ilog(limit)))"];
"1000691" [label="(Call,ilog(limit))"];
"1000679" [label="(Call,limit = c->entries - current_entry)"];
"1000681" [label="(Call,c->entries - current_entry)"];
"1000672" [label="(Call,current_entry < c->entries)"];
"1000714" [label="(Call,current_entry += n)"];
"1000708" [label="(Call,memset(lengths + current_entry, current_length, n))"];
"1000650" [label="(Call,!lengths)"];
"1000636" [label="(Call,lengths = c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000638" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000642" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1000881" [label="(Call,lengths[j] != NO_CODE)"];
"1000876" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1000759" [label="(Call,lengths[j] == 32)"];
"1000747" [label="(Call,lengths[j] = get_bits(f, 5) + 1)"];
"1000752" [label="(Call,get_bits(f, 5))"];
"1000740" [label="(Call,get_bits(f,1))"];
"1000770" [label="(Call,lengths[j] = NO_CODE)"];
"1000840" [label="(Call,lengths = c->codeword_lengths)"];
"1000826" [label="(Call,memcpy(c->codeword_lengths, lengths, c->entries))"];
"1000817" [label="(Call,c->codeword_lengths == NULL)"];
"1000805" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000809" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1000811" [label="(Call,setup_malloc(f, c->entries))"];
"1000789" [label="(Call,c->entries > (int) f->setup_temp_memory_required)"];
"1000782" [label="(Call,c->entries >> 2)"];
"1000725" [label="(Call,j < c->entries)"];
"1000730" [label="(Call,++j)"];
"1000722" [label="(Call,j=0)"];
"1000793" [label="(Call,(int) f->setup_temp_memory_required)"];
"1001025" [label="(Call,size > f->setup_temp_memory_required)"];
"1001005" [label="(Call,size = c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1000834" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1000867" [label="(Call,j < c->entries)"];
"1000864" [label="(Call,j=0)"];
"1000872" [label="(Call,++j)"];
"1001011" [label="(Call,(sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1000991" [label="(Call,sizeof(*values) * c->sorted_entries)"];
"1000967" [label="(Call,sizeof(*c->codewords) * c->sorted_entries)"];
"1000945" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1000888" [label="(Call,c->sorted_entries = sorted_count)"];
"1000886" [label="(Call,++sorted_count)"];
"1000860" [label="(Call,sorted_count = 0)"];
"1000855" [label="(Call,sorted_count = total)"];
"1000756" [label="(Call,++total)"];
"1000497" [label="(Call,total=0)"];
"1000780" [label="(Call,total >= c->entries >> 2)"];
"1000798" [label="(Call,f->setup_temp_memory_required = c->entries)"];
"1001030" [label="(Call,f->setup_temp_memory_required = size)"];
"1001294" [label="(Call,mults == NULL)"];
"1001279" [label="(Call,mults = (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001281" [label="(Call,(uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001283" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001235" [label="(Call,get_bits(f,1))"];
"1001227" [label="(Call,get_bits(f, 4))"];
"1001219" [label="(Call,get_bits(f, 32))"];
"1001211" [label="(Call,get_bits(f, 32))"];
"1001285" [label="(Call,sizeof(mults[0]) * c->lookup_values)"];
"1001270" [label="(Call,c->lookup_values == 0)"];
"1001245" [label="(Call,c->lookup_values = lookup1_values(c->entries, c->dimensions))"];
"1001249" [label="(Call,lookup1_values(c->entries, c->dimensions))"];
"1001037" [label="(Call,compute_codewords(c, lengths, c->entries, values))"];
"1000502" [label="(Call,*c = f->codebooks+i)"];
"1000467" [label="(Call,memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count))"];
"1000458" [label="(Call,f->codebooks == NULL)"];
"1000440" [label="(Call,f->codebooks = (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000444" [label="(Call,(Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000472" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1000485" [label="(Call,i < f->codebook_count)"];
"1000482" [label="(Call,i=0)"];
"1000490" [label="(Call,++i)"];
"1000912" [label="(Call,sizeof(c->codewords[0]) * c->entries)"];
"1000893" [label="(Call,values = NULL)"];
"1001111" [label="(Call,c->sorted_values == NULL)"];
"1001091" [label="(Call,c->sorted_values    = ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001095" [label="(Call,( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001097" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001068" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1000910" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000989" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1000965" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001070" [label="(Call,sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001099" [label="(Call,sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001124" [label="(Call,c->sorted_values[-1] = -1)"];
"1001131" [label="(Call,-1)"];
"1001082" [label="(Call,c->sorted_codewords == NULL)"];
"1001062" [label="(Call,c->sorted_codewords = (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001066" [label="(Call,(uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001613" [label="(Call,c->multiplicands == NULL)"];
"1001521" [label="(Call,c->multiplicands[j*c->dimensions + k] = val)"];
"1001506" [label="(Call,val = mults[off]*c->delta_value + c->minimum_value + last)"];
"1001509" [label="(Call,mults[off]*c->delta_value)"];
"1001214" [label="(Call,c->delta_value = float32_unpack(get_bits(f, 32)))"];
"1001218" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1001206" [label="(Call,c->minimum_value = float32_unpack(get_bits(f, 32)))"];
"1001210" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1001363" [label="(Call,last=0)"];
"1001538" [label="(Call,last = val)"];
"1001664" [label="(Call,c->multiplicands[j] = val)"];
"1001649" [label="(Call,val = mults[j] * c->delta_value + c->minimum_value + last)"];
"1001652" [label="(Call,mults[j] * c->delta_value)"];
"1001343" [label="(Call,mults[j] = q)"];
"1001324" [label="(Call,q == EOP)"];
"1001316" [label="(Call,q = get_bits(f, c->value_bits))"];
"1001318" [label="(Call,get_bits(f, c->value_bits))"];
"1001222" [label="(Call,c->value_bits = get_bits(f, 4)+1)"];
"1001589" [label="(Call,last=0)"];
"1001675" [label="(Call,last = val)"];
"1001594" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001598" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001600" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001592" [label="(Call,CHECK(f))"];
"1001602" [label="(Call,sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001307" [label="(Call,(int) c->lookup_values)"];
"1001422" [label="(Call,c->multiplicands == NULL)"];
"1001376" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001380" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001382" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001384" [label="(Call,sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001391" [label="(Call,c->sorted_entries * c->dimensions)"];
"1001370" [label="(Call,c->sorted_entries == 0)"];
"1001157" [label="(Call,sizeof(*c->codewords)*c->sorted_entries)"];
"1001145" [label="(Call,sizeof(*values)*c->sorted_entries)"];
"1001262" [label="(Call,c->entries * c->dimensions)"];
"1001166" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001152" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1001142" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1001133" [label="(Call,compute_sorted_huffman(c, lengths, values))"];
"1001172" [label="(Call,c->codewords = NULL)"];
"1000977" [label="(Call,!c->codewords)"];
"1000959" [label="(Call,c->codewords = (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1000963" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1000923" [label="(Call,!c->codewords)"];
"1000904" [label="(Call,c->codewords = (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000908" [label="(Call,(uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000608" [label="(Call,c->dimensions == 0)"];
"1000555" [label="(Call,c->dimensions = (get_bits(f, 8)<<8) + x)"];
"1000560" [label="(Call,get_bits(f, 8)<<8)"];
"1000550" [label="(Call,x = get_bits(f, 8))"];
"1001399" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001403" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001405" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001407" [label="(Call,sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001414" [label="(Call,c->entries        * c->dimensions)"];
"1000999" [label="(Call,!values)"];
"1000985" [label="(Call,values = (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1000987" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1001258" [label="(Call,c->lookup_values = c->entries * c->dimensions)"];
"1000626" [label="(Call,lengths = (uint8 *) setup_temp_malloc(f, c->entries))"];
"1000628" [label="(Call,(uint8 *) setup_temp_malloc(f, c->entries))"];
"1000717" [label="(Call,++current_length)"];
"1000664" [label="(Call,current_length = get_bits(f,5) + 1)"];
"1000687" [label="(Call,n = get_bits(f, ilog(limit)))"];
"1000660" [label="(Call,current_entry = 0)"];
"1000698" [label="(Call,(int) c->entries)"];
"1001690" [label="(Call,CHECK(f))"];
"1001679" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1001682" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1001493" [label="(Call,(z / div) % c->lookup_values)"];
"1001494" [label="(Call,z / div)"];
"1001464" [label="(Call,z = sparse ? c->sorted_values[j] : j)"];
"1001457" [label="(Call,j < len)"];
"1001460" [label="(Call,++j)"];
"1001527" [label="(Call,j*c->dimensions)"];
"1001482" [label="(Call,k < c->dimensions)"];
"1001487" [label="(Call,++k)"];
"1001479" [label="(Call,k=0)"];
"1001542" [label="(Call,k+1 < c->dimensions)"];
"1001454" [label="(Call,j=0)"];
"1001443" [label="(Call,len = sparse ? c->sorted_entries : c->entries)"];
"1001475" [label="(Call,div=1)"];
"1001576" [label="(Call,div *= c->lookup_values)"];
"1001555" [label="(Call,(unsigned int) c->lookup_values)"];
"1001551" [label="(Call,div > UINT_MAX / (unsigned int) c->lookup_values)"];
"1001553" [label="(Call,UINT_MAX / (unsigned int) c->lookup_values)"];
"1001640" [label="(Call,(int) c->lookup_values)"];
"1001714" [label="(Call,get_bits(f, 16))"];
"1001742" [label="(Call,f->floor_count * sizeof(*f->floor_config))"];
"1001725" [label="(Call,f->floor_count = get_bits(f, 6)+1)"];
"1002078" [label="(Call,1 << g->rangebits)"];
"1002058" [label="(Call,g->rangebits = get_bits(f,4))"];
"1002272" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1002255" [label="(Call,f->residue_count = get_bits(f, 6)+1)"];
"1002471" [label="(Call,error(f, VORBIS_outofmem))"];
"1002470" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002505" [label="(Call,r->residue_books[j][k] = get_bits(f, 8))"];
"1002517" [label="(Call,r->residue_books[j][k] >= f->codebook_count)"];
"1002401" [label="(Call,r->classbook >= f->codebook_count)"];
"1002529" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002528" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002328" [label="(Call,f->residue_types[i] = get_bits(f, 16))"];
"1002338" [label="(Call,f->residue_types[i] > 2)"];
"1002346" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002345" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002349" [label="(Call,r->begin = get_bits(f, 24))"];
"1002364" [label="(Call,r->end < r->begin)"];
"1003422" [label="(Call,r->begin < actual_size)"];
"1003419" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003447" [label="(Call,limit_r_end - limit_r_begin)"];
"1003445" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1003453" [label="(Call,n_read / r->part_size)"];
"1003451" [label="(Call,part_read = n_read / r->part_size)"];
"1003459" [label="(Call,part_read > max_part_read)"];
"1003462" [label="(Call,max_part_read = part_read)"];
"1003474" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1003467" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003465" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003478" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003484" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003489" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003517" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003518" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003522" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1003471" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003421" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003435" [label="(Call,r->end   < actual_size)"];
"1003432" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003434" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1002356" [label="(Call,r->end = get_bits(f, 24))"];
"1002372" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002371" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002375" [label="(Call,r->part_size = get_bits(f,24)+1)"];
"1002379" [label="(Call,get_bits(f,24)+1)"];
"1002478" [label="(Call,j < r->classifications)"];
"1002483" [label="(Call,++j)"];
"1002682" [label="(Call,temp % r->classifications)"];
"1002674" [label="(Call,r->classdata[j][k] = temp % r->classifications)"];
"1002651" [label="(Call,r->classdata[j] == NULL)"];
"1002465" [label="(Call,r->residue_books == NULL)"];
"1002719" [label="(Call,f->mapping == NULL)"];
"1002728" [label="(Call,memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping)))"];
"1002755" [label="(Call,*m = f->mapping + i)"];
"1002757" [label="(Call,f->mapping + i)"];
"1002794" [label="(Call,m->chan == NULL)"];
"1003243" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003251" [label="(Call,f->previous_window[i] == NULL)"];
"1003250" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003258" [label="(Call,f->finalY[i] == NULL)"];
"1003288" [label="(Call,f->floor_buffers[i] == NULL)"];
"1002568" [label="(Call,!r->classdata)"];
"1002576" [label="(Call,memset(r->classdata, 0, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002687" [label="(Call,temp /= r->classifications)"];
"1002388" [label="(Call,get_bits(f,6)+1)"];
"1002393" [label="(Call,r->classbook = get_bits(f,8))"];
"1002409" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002408" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002429" [label="(Call,low_bits=get_bits(f,3))"];
"1002443" [label="(Call,residue_cascade[j] = high_bits*8 + low_bits)"];
"1002497" [label="(Call,residue_cascade[j] & (1 << k))"];
"1002447" [label="(Call,high_bits*8 + low_bits)"];
"1002438" [label="(Call,high_bits = get_bits(f,5))"];
"1002448" [label="(Call,high_bits*8)"];
"1002548" [label="(Call,(uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002544" [label="(Call,r->classdata = (uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002573" [label="(Call,error(f, VORBIS_outofmem))"];
"1002572" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002636" [label="(Call,(uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002630" [label="(Call,r->classdata[j] = (uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002659" [label="(Call,error(f, VORBIS_outofmem))"];
"1002658" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002697" [label="(Call,get_bits(f,6))"];
"1002692" [label="(Call,f->mapping_count = get_bits(f,6)+1)"];
"1002709" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1002707" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002705" [label="(Call,(Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002701" [label="(Call,f->mapping = (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002725" [label="(Call,error(f, VORBIS_outofmem))"];
"1002724" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002765" [label="(Call,get_bits(f,16))"];
"1002763" [label="(Call,mapping_type = get_bits(f,16))"];
"1002769" [label="(Call,mapping_type != 0)"];
"1002773" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002772" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002782" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002780" [label="(Call,(MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002776" [label="(Call,m->chan = (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002800" [label="(Call,error(f, VORBIS_outofmem))"];
"1002799" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002804" [label="(Call,get_bits(f,1))"];
"1002812" [label="(Call,get_bits(f,4))"];
"1002807" [label="(Call,m->submaps = get_bits(f,4)+1)"];
"1002823" [label="(Call,m->submaps > max_submaps)"];
"1002828" [label="(Call,max_submaps = m->submaps)"];
"1002958" [label="(Call,m->submaps > 1)"];
"1002988" [label="(Call,m->chan[j].mux >= m->submaps)"];
"1003028" [label="(Call,j < m->submaps)"];
"1003033" [label="(Call,++j)"];
"1002811" [label="(Call,get_bits(f,4)+1)"];
"1002834" [label="(Call,get_bits(f,1))"];
"1002843" [label="(Call,get_bits(f,8))"];
"1002838" [label="(Call,m->coupling_steps = get_bits(f,8)+1)"];
"1002851" [label="(Call,k < m->coupling_steps)"];
"1002856" [label="(Call,++k)"];
"1002842" [label="(Call,get_bits(f,8)+1)"];
"1002867" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1002859" [label="(Call,m->chan[k].magnitude = get_bits(f, ilog(f->channels-1)))"];
"1002892" [label="(Call,m->chan[k].magnitude >= f->channels)"];
"1002908" [label="(Call,m->chan[k].angle     >= f->channels)"];
"1002870" [label="(Call,f->channels-1)"];
"1002869" [label="(Call,ilog(f->channels-1))"];
"1002886" [label="(Call,f->channels-1)"];
"1002885" [label="(Call,ilog(f->channels-1))"];
"1002883" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1002875" [label="(Call,m->chan[k].angle = get_bits(f, ilog(f->channels-1)))"];
"1002904" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002903" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002920" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002919" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002940" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002939" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002950" [label="(Call,get_bits(f,2))"];
"1002954" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002953" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002984" [label="(Call,get_bits(f, 4))"];
"1002976" [label="(Call,m->chan[j].mux = get_bits(f, 4))"];
"1003000" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002999" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003036" [label="(Call,get_bits(f,8))"];
"1003045" [label="(Call,get_bits(f,8))"];
"1003039" [label="(Call,m->submap_floor[j] = get_bits(f,8))"];
"1003058" [label="(Call,m->submap_floor[j] >= f->floor_count)"];
"1003054" [label="(Call,get_bits(f,8))"];
"1003048" [label="(Call,m->submap_residue[j] = get_bits(f,8))"];
"1003072" [label="(Call,m->submap_residue[j] >= f->residue_count)"];
"1003394" [label="(Call,i < f->residue_count)"];
"1003399" [label="(Call,++i)"];
"1003403" [label="(Call,*r = f->residue_config + i)"];
"1003405" [label="(Call,f->residue_config + i)"];
"1003068" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003067" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003082" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003081" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003090" [label="(Call,get_bits(f, 6))"];
"1003085" [label="(Call,f->mode_count = get_bits(f, 6)+1)"];
"1003098" [label="(Call,i < f->mode_count)"];
"1003103" [label="(Call,++i)"];
"1003107" [label="(Call,*m = f->mode_config+i)"];
"1003109" [label="(Call,f->mode_config+i)"];
"1003089" [label="(Call,get_bits(f, 6)+1)"];
"1003118" [label="(Call,get_bits(f,1))"];
"1003114" [label="(Call,m->blockflag = get_bits(f,1))"];
"1003125" [label="(Call,get_bits(f,16))"];
"1003121" [label="(Call,m->windowtype = get_bits(f,16))"];
"1003143" [label="(Call,m->windowtype != 0)"];
"1003132" [label="(Call,get_bits(f,16))"];
"1003128" [label="(Call,m->transformtype = get_bits(f,16))"];
"1003153" [label="(Call,m->transformtype != 0)"];
"1003139" [label="(Call,get_bits(f,8))"];
"1003135" [label="(Call,m->mapping = get_bits(f,8))"];
"1003163" [label="(Call,m->mapping >= f->mapping_count)"];
"1003149" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003148" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003159" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003158" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003171" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003170" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003174" [label="(Call,flush_packet(f))"];
"1003201" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003199" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003193" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003217" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003215" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003209" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003235" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003233" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003227" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003266" [label="(Call,error(f, VORBIS_outofmem))"];
"1003265" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003277" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003275" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003269" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003296" [label="(Call,error(f, VORBIS_outofmem))"];
"1003295" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003301" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003300" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003311" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003310" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003328" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003377" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003374" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003413" [label="(Call,f->blocksize_1 / 2)"];
"1003411" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1003535" [label="(Call,error(f, VORBIS_outofmem))"];
"1003534" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003542" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1003538" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003319" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1002924" [label="(Call,m->chan[k].magnitude == m->chan[k].angle)"];
"1002968" [label="(Call,j < f->channels)"];
"1002784" [label="(Call,f->channels * sizeof(*m->chan))"];
"1003008" [label="(Call,j < f->channels)"];
"1003013" [label="(Call,++j)"];
"1003185" [label="(Call,i < f->channels)"];
"1003190" [label="(Call,++i)"];
"1002973" [label="(Call,++j)"];
"1002733" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1002746" [label="(Call,i < f->mapping_count)"];
"1002751" [label="(Call,++i)"];
"1002696" [label="(Call,get_bits(f,6)+1)"];
"1003025" [label="(Call,j=0)"];
"1000943" [label="(Call,(uint8 *) setup_malloc(f, c->sorted_entries))"];
"1001142" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1002469" [label="(Identifier,NULL)"];
"1000673" [label="(Identifier,current_entry)"];
"1002869" [label="(Call,ilog(f->channels-1))"];
"1000497" [label="(Call,total=0)"];
"1002484" [label="(Identifier,j)"];
"1003387" [label="(Call,max_part_read=0)"];
"1003538" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1000478" [label="(Call,f->codebook_count)"];
"1000613" [label="(Call,c->entries != 0)"];
"1001487" [label="(Call,++k)"];
"1001157" [label="(Call,sizeof(*c->codewords)*c->sorted_entries)"];
"1000842" [label="(Call,c->codeword_lengths)"];
"1002001" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001738" [label="(Call,(Floor *)  setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1001698" [label="(Identifier,f)"];
"1003463" [label="(Identifier,max_part_read)"];
"1000447" [label="(Identifier,f)"];
"1001459" [label="(Identifier,len)"];
"1003087" [label="(Identifier,f)"];
"1000581" [label="(Call,get_bits(f, 8)<<16)"];
"1001384" [label="(Call,sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001901" [label="(Call,g->partitions = get_bits(f, 5))"];
"1001407" [label="(Call,sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001631" [label="(Call,error(f, VORBIS_outofmem))"];
"1001187" [label="(Literal,4)"];
"1002638" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002346" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003421" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1002375" [label="(Call,r->part_size = get_bits(f,24)+1)"];
"1001298" [label="(Call,error(f, VORBIS_outofmem))"];
"1000383" [label="(Identifier,TRUE)"];
"1000806" [label="(Call,c->codeword_lengths)"];
"1001299" [label="(Identifier,f)"];
"1001284" [label="(Identifier,f)"];
"1003185" [label="(Call,i < f->channels)"];
"1001832" [label="(Call,get_bits(f,16))"];
"1000370" [label="(Call,!start_packet(f))"];
"1000821" [label="(Identifier,NULL)"];
"1000983" [label="(Identifier,f)"];
"1003413" [label="(Call,f->blocksize_1 / 2)"];
"1000376" [label="(Call,IS_PUSH_MODE(f))"];
"1000787" [label="(Block,)"];
"1003084" [label="(Identifier,VORBIS_invalid_setup)"];
"1002905" [label="(Identifier,f)"];
"1000960" [label="(Call,c->codewords)"];
"1000344" [label="(Call,start_page(f))"];
"1001424" [label="(Identifier,c)"];
"1000763" [label="(Literal,32)"];
"1000268" [label="(Call,get8(f))"];
"1003098" [label="(Call,i < f->mode_count)"];
"1003471" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003447" [label="(Call,limit_r_end - limit_r_begin)"];
"1002587" [label="(Call,f->codebooks[r->classbook].entries)"];
"1002951" [label="(Identifier,f)"];
"1002801" [label="(Identifier,f)"];
"1000577" [label="(Call,c->entries)"];
"1003181" [label="(ControlStructure,for (i=0; i < f->channels; ++i))"];
"1002509" [label="(Identifier,r)"];
"1002397" [label="(Call,get_bits(f,8))"];
"1000159" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001135" [label="(Identifier,lengths)"];
"1002665" [label="(Call,classwords-1)"];
"1001370" [label="(Call,c->sorted_entries == 0)"];
"1001481" [label="(Literal,0)"];
"1002376" [label="(Call,r->part_size)"];
"1002390" [label="(Identifier,f)"];
"1001533" [label="(Identifier,val)"];
"1000665" [label="(Identifier,current_length)"];
"1002262" [label="(Literal,6)"];
"1000713" [label="(Identifier,n)"];
"1000260" [label="(Call,get32(f))"];
"1000448" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1002514" [label="(Identifier,f)"];
"1000867" [label="(Call,j < c->entries)"];
"1000998" [label="(ControlStructure,if (!values))"];
"1003094" [label="(ControlStructure,for (i=0; i < f->mode_count; ++i))"];
"1001158" [label="(Call,sizeof(*c->codewords))"];
"1000913" [label="(Call,sizeof(c->codewords[0]))"];
"1000213" [label="(Call,get32(f))"];
"1002388" [label="(Call,get_bits(f,6)+1)"];
"1003411" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1002318" [label="(Block,)"];
"1000882" [label="(Call,lengths[j])"];
"1001226" [label="(Call,get_bits(f, 4)+1)"];
"1002920" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003427" [label="(Call,r->begin)"];
"1001661" [label="(Identifier,c)"];
"1003426" [label="(Identifier,actual_size)"];
"1002599" [label="(Literal,0)"];
"1001069" [label="(Identifier,f)"];
"1001716" [label="(Literal,16)"];
"1002263" [label="(Literal,1)"];
"1002640" [label="(Call,sizeof(r->classdata[j][0]) * classwords)"];
"1001431" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1003145" [label="(Identifier,m)"];
"1000592" [label="(Identifier,ordered)"];
"1000730" [label="(Call,++j)"];
"1000910" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1002381" [label="(Identifier,f)"];
"1001113" [label="(Identifier,c)"];
"1003287" [label="(ControlStructure,if (f->floor_buffers[i] == NULL))"];
"1003409" [label="(Identifier,i)"];
"1000834" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001068" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001825" [label="(Call,get_bits(f,16))"];
"1000956" [label="(Call,error(f, VORBIS_outofmem))"];
"1002833" [label="(ControlStructure,if (get_bits(f,1)))"];
"1002597" [label="(Call,j=0)"];
"1003071" [label="(ControlStructure,if (m->submap_residue[j] >= f->residue_count))"];
"1000736" [label="(Call,c->sparse ? get_bits(f,1) : 1)"];
"1002703" [label="(Identifier,f)"];
"1000788" [label="(ControlStructure,if (c->entries > (int) f->setup_temp_memory_required))"];
"1002572" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1001494" [label="(Call,z / div)"];
"1002755" [label="(Call,*m = f->mapping + i)"];
"1002916" [label="(Call,f->channels)"];
"1003075" [label="(Identifier,m)"];
"1000708" [label="(Call,memset(lengths + current_entry, current_length, n))"];
"1001528" [label="(Identifier,j)"];
"1002389" [label="(Call,get_bits(f,6))"];
"1003155" [label="(Identifier,m)"];
"1000498" [label="(Identifier,total)"];
"1001614" [label="(Call,c->multiplicands)"];
"1003414" [label="(Call,f->blocksize_1)"];
"1001458" [label="(Identifier,j)"];
"1001742" [label="(Call,f->floor_count * sizeof(*f->floor_config))"];
"1001596" [label="(Identifier,c)"];
"1000741" [label="(Identifier,f)"];
"1003372" [label="(Block,)"];
"1000923" [label="(Call,!c->codewords)"];
"1002707" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1000731" [label="(Identifier,j)"];
"1000190" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002649" [label="(Identifier,classwords)"];
"1000751" [label="(Call,get_bits(f, 5) + 1)"];
"1000735" [label="(Identifier,present)"];
"1001012" [label="(Call,sizeof(*c->codewords) + sizeof(*values))"];
"1003115" [label="(Call,m->blockflag)"];
"1000789" [label="(Call,c->entries > (int) f->setup_temp_memory_required)"];
"1002414" [label="(Identifier,j)"];
"1002702" [label="(Call,f->mapping)"];
"1002778" [label="(Identifier,m)"];
"1002728" [label="(Call,memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping)))"];
"1003250" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1002292" [label="(Call,memset(f->residue_config, 0, f->residue_count * sizeof(f->residue_config[0])))"];
"1001286" [label="(Call,sizeof(mults[0]))"];
"1000658" [label="(Block,)"];
"1001093" [label="(Identifier,c)"];
"1001440" [label="(Call,error(f, VORBIS_outofmem))"];
"1001280" [label="(Identifier,mults)"];
"1002842" [label="(Call,get_bits(f,8)+1)"];
"1000250" [label="(Identifier,f)"];
"1002824" [label="(Call,m->submaps)"];
"1003296" [label="(Call,error(f, VORBIS_outofmem))"];
"1001283" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001066" [label="(Call,(uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1000695" [label="(Call,current_entry + n)"];
"1002891" [label="(ControlStructure,if (m->chan[k].magnitude >= f->channels))"];
"1003289" [label="(Call,f->floor_buffers[i])"];
"1000985" [label="(Call,values = (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1001642" [label="(Call,c->lookup_values)"];
"1000966" [label="(Identifier,f)"];
"1000486" [label="(Identifier,i)"];
"1001544" [label="(Identifier,k)"];
"1000604" [label="(Identifier,f)"];
"1001765" [label="(Call,i < f->floor_count)"];
"1003058" [label="(Call,m->submap_floor[j] >= f->floor_count)"];
"1002879" [label="(Identifier,m)"];
"1003236" [label="(Identifier,f)"];
"1000541" [label="(Literal,8)"];
"1000805" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1002411" [label="(Identifier,VORBIS_invalid_setup)"];
"1003134" [label="(Literal,16)"];
"1002501" [label="(Call,1 << k)"];
"1000356" [label="(Call,len = next_segment(f))"];
"1001638" [label="(Call,j < (int) c->lookup_values)"];
"1003309" [label="(ControlStructure,if (!init_blocksize(f, 1, f->blocksize_1)))"];
"1000586" [label="(Call,(y<<8) + x)"];
"1000645" [label="(Identifier,f)"];
"1002957" [label="(ControlStructure,if (m->submaps > 1))"];
"1000672" [label="(Call,current_entry < c->entries)"];
"1002529" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001257" [label="(Block,)"];
"1002757" [label="(Call,f->mapping + i)"];
"1003490" [label="(Call,f->temp_memory_required)"];
"1000671" [label="(ControlStructure,while (current_entry < c->entries))"];
"1003154" [label="(Call,m->transformtype)"];
"1002999" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001649" [label="(Call,val = mults[j] * c->delta_value + c->minimum_value + last)"];
"1000524" [label="(Call,x = get_bits(f, 8))"];
"1000650" [label="(Call,!lengths)"];
"1003036" [label="(Call,get_bits(f,8))"];
"1003308" [label="(Identifier,FALSE)"];
"1001091" [label="(Call,c->sorted_values    = ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1003170" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000196" [label="(Identifier,f)"];
"1001653" [label="(Call,mults[j])"];
"1000798" [label="(Call,f->setup_temp_memory_required = c->entries)"];
"1003433" [label="(Identifier,limit_r_end)"];
"1003172" [label="(Identifier,f)"];
"1000757" [label="(Identifier,total)"];
"1003540" [label="(Identifier,f)"];
"1001237" [label="(Literal,1)"];
"1003004" [label="(ControlStructure,for (j=0; j < f->channels; ++j))"];
"1000976" [label="(ControlStructure,if (!c->codewords))"];
"1002698" [label="(Identifier,f)"];
"1002574" [label="(Identifier,f)"];
"1001464" [label="(Call,z = sparse ? c->sorted_values[j] : j)"];
"1001369" [label="(ControlStructure,if (c->sorted_entries == 0))"];
"1001601" [label="(Identifier,f)"];
"1001144" [label="(Identifier,values)"];
"1001516" [label="(Call,c->minimum_value + last)"];
"1000771" [label="(Call,lengths[j])"];
"1000664" [label="(Call,current_length = get_bits(f,5) + 1)"];
"1000422" [label="(Identifier,f)"];
"1000813" [label="(Call,c->entries)"];
"1002848" [label="(Call,k=0)"];
"1003291" [label="(Identifier,f)"];
"1000584" [label="(Literal,8)"];
"1002696" [label="(Call,get_bits(f,6)+1)"];
"1001551" [label="(Call,div > UINT_MAX / (unsigned int) c->lookup_values)"];
"1000631" [label="(Identifier,f)"];
"1000186" [label="(Call,get8(f))"];
"1000555" [label="(Call,c->dimensions = (get_bits(f, 8)<<8) + x)"];
"1000572" [label="(Identifier,y)"];
"1002827" [label="(Identifier,max_submaps)"];
"1002708" [label="(Identifier,f)"];
"1002068" [label="(Identifier,g)"];
"1000800" [label="(Identifier,f)"];
"1003047" [label="(Literal,8)"];
"1002733" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1003516" [label="(ControlStructure,if (f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset))"];
"1001167" [label="(Identifier,f)"];
"1002394" [label="(Call,r->classbook)"];
"1000361" [label="(Identifier,f)"];
"1000681" [label="(Call,c->entries - current_entry)"];
"1000561" [label="(Call,get_bits(f, 8))"];
"1003537" [label="(Identifier,VORBIS_outofmem)"];
"1000139" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003252" [label="(Call,f->previous_window[i])"];
"1001732" [label="(Literal,6)"];
"1001168" [label="(Identifier,lengths)"];
"1002260" [label="(Call,get_bits(f, 6))"];
"1002630" [label="(Call,r->classdata[j] = (uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1000187" [label="(Identifier,f)"];
"1001181" [label="(Call,c->lookup_type = get_bits(f, 4))"];
"1001981" [label="(Call,g->class_masterbooks[j] = get_bits(f, 8))"];
"1001521" [label="(Call,c->multiplicands[j*c->dimensions + k] = val)"];
"1002766" [label="(Identifier,f)"];
"1001400" [label="(Call,c->multiplicands)"];
"1000776" [label="(Call,c->sparse && total >= c->entries >> 2)"];
"1003475" [label="(Identifier,max_part_read)"];
"1003037" [label="(Identifier,f)"];
"1002576" [label="(Call,memset(r->classdata, 0, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1000978" [label="(Call,c->codewords)"];
"1000431" [label="(Call,f->codebook_count = get_bits(f,8) + 1)"];
"1003008" [label="(Call,j < f->channels)"];
"1001152" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1003417" [label="(Literal,2)"];
"1000662" [label="(Literal,0)"];
"1002072" [label="(Call,g->Xlist[1] = 1 << g->rangebits)"];
"1001453" [label="(ControlStructure,for (j=0; j < len; ++j))"];
"1003485" [label="(Identifier,imdct_mem)"];
"1000809" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1002353" [label="(Call,get_bits(f, 24))"];
"1000855" [label="(Call,sorted_count = total)"];
"1001224" [label="(Identifier,c)"];
"1001223" [label="(Call,c->value_bits)"];
"1001277" [label="(Identifier,f)"];
"1001714" [label="(Call,get_bits(f, 16))"];
"1001082" [label="(Call,c->sorted_codewords == NULL)"];
"1000674" [label="(Call,c->entries)"];
"1002657" [label="(Identifier,NULL)"];
"1000716" [label="(Identifier,n)"];
"1002409" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002980" [label="(Identifier,m)"];
"1001590" [label="(Identifier,last)"];
"1000215" [label="(Literal,0)"];
"1001743" [label="(Call,f->floor_count)"];
"1000198" [label="(Literal,6)"];
"1000876" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1000468" [label="(Call,f->codebooks)"];
"1002401" [label="(Call,r->classbook >= f->codebook_count)"];
"1002752" [label="(Identifier,i)"];
"1001309" [label="(Call,c->lookup_values)"];
"1003529" [label="(Call,(unsigned) f->temp_offset)"];
"1000438" [label="(Literal,8)"];
"1001214" [label="(Call,c->delta_value = float32_unpack(get_bits(f, 32)))"];
"1001117" [label="(Call,error(f, VORBIS_outofmem))"];
"1002348" [label="(Identifier,VORBIS_invalid_setup)"];
"1003073" [label="(Call,m->submap_residue[j])"];
"1002829" [label="(Identifier,max_submaps)"];
"1000224" [label="(Call,get8(f))"];
"1001174" [label="(Identifier,c)"];
"1002843" [label="(Call,get_bits(f,8))"];
"1001049" [label="(Call,setup_temp_free(f, values, 0))"];
"1001963" [label="(Literal,3)"];
"1002825" [label="(Identifier,m)"];
"1003046" [label="(Identifier,f)"];
"1002442" [label="(Literal,5)"];
"1000627" [label="(Identifier,lengths)"];
"1000654" [label="(Identifier,f)"];
"1002859" [label="(Call,m->chan[k].magnitude = get_bits(f, ilog(f->channels-1)))"];
"1000885" [label="(Identifier,NO_CODE)"];
"1003270" [label="(Call,f->floor_buffers[i])"];
"1003086" [label="(Call,f->mode_count)"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1002426" [label="(Identifier,high_bits)"];
"1002734" [label="(Call,f->mapping_count)"];
"1001680" [label="(Identifier,f)"];
"1000576" [label="(Call,c->entries = (get_bits(f, 8)<<16) + (y<<8) + x)"];
"1000722" [label="(Call,j=0)"];
"1000484" [label="(Literal,0)"];
"1001602" [label="(Call,sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1003544" [label="(Return,return TRUE;)"];
"1003165" [label="(Identifier,m)"];
"1003448" [label="(Identifier,limit_r_end)"];
"1000570" [label="(Literal,8)"];
"1001314" [label="(Block,)"];
"1002817" [label="(Call,m->submaps = 1)"];
"1003030" [label="(Call,m->submaps)"];
"1002550" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1001482" [label="(Call,k < c->dimensions)"];
"1002795" [label="(Call,m->chan)"];
"1000878" [label="(Identifier,lengths)"];
"1002581" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002056" [label="(Literal,2)"];
"1001040" [label="(Call,c->entries)"];
"1003038" [label="(Literal,8)"];
"1003039" [label="(Call,m->submap_floor[j] = get_bits(f,8))"];
"1001318" [label="(Call,get_bits(f, c->value_bits))"];
"1002726" [label="(Identifier,f)"];
"1002782" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1001177" [label="(Call,compute_accelerated_huffman(c))"];
"1002317" [label="(Identifier,i)"];
"1002544" [label="(Call,r->classdata = (uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1003193" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1002400" [label="(ControlStructure,if (r->classbook >= f->codebook_count))"];
"1001495" [label="(Identifier,z)"];
"1001973" [label="(Literal,2)"];
"1002794" [label="(Call,m->chan == NULL)"];
"1003164" [label="(Call,m->mapping)"];
"1001115" [label="(Identifier,NULL)"];
"1001329" [label="(Identifier,f)"];
"1000783" [label="(Call,c->entries)"];
"1000550" [label="(Call,x = get_bits(f, 8))"];
"1001443" [label="(Call,len = sparse ? c->sorted_entries : c->entries)"];
"1003092" [label="(Literal,6)"];
"1003310" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1001084" [label="(Identifier,c)"];
"1002689" [label="(Call,r->classifications)"];
"1000437" [label="(Identifier,f)"];
"1003275" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000444" [label="(Call,(Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000590" [label="(Identifier,x)"];
"1002582" [label="(Call,sizeof(*r->classdata))"];
"1001422" [label="(Call,c->multiplicands == NULL)"];
"1003542" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1001529" [label="(Call,c->dimensions)"];
"1002639" [label="(Identifier,f)"];
"1000854" [label="(Block,)"];
"1001589" [label="(Call,last=0)"];
"1001272" [label="(Identifier,c)"];
"1001988" [label="(Identifier,f)"];
"1000901" [label="(Identifier,c)"];
"1002798" [label="(Identifier,NULL)"];
"1002373" [label="(Identifier,f)"];
"1002472" [label="(Identifier,f)"];
"1002672" [label="(Identifier,k)"];
"1000306" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003057" [label="(ControlStructure,if (m->submap_floor[j] >= f->floor_count))"];
"1000362" [label="(Identifier,len)"];
"1002616" [label="(Identifier,classwords)"];
"1001179" [label="(Call,CHECK(f))"];
"1002382" [label="(Literal,24)"];
"1000892" [label="(Identifier,sorted_count)"];
"1000454" [label="(Call,f->codebook_count)"];
"1000636" [label="(Call,lengths = c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1002505" [label="(Call,r->residue_books[j][k] = get_bits(f, 8))"];
"1002985" [label="(Identifier,f)"];
"1002271" [label="(Identifier,f)"];
"1001513" [label="(Call,c->delta_value)"];
"1001132" [label="(Literal,1)"];
"1002836" [label="(Literal,1)"];
"1000580" [label="(Call,(get_bits(f, 8)<<16) + (y<<8) + x)"];
"1001622" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1002031" [label="(Literal,8)"];
"1000365" [label="(Identifier,f)"];
"1003455" [label="(Call,r->part_size)"];
"1003388" [label="(Identifier,max_part_read)"];
"1003042" [label="(Identifier,m)"];
"1000874" [label="(ControlStructure,if (lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH && lengths[j] != NO_CODE))"];
"1001173" [label="(Call,c->codewords)"];
"1001555" [label="(Call,(unsigned int) c->lookup_values)"];
"1002847" [label="(ControlStructure,for (k=0; k < m->coupling_steps; ++k))"];
"1003251" [label="(Call,f->previous_window[i] == NULL)"];
"1001316" [label="(Call,q = get_bits(f, c->value_bits))"];
"1001598" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001061" [label="(Block,)"];
"1003304" [label="(Call,f->blocksize_0)"];
"1001733" [label="(Literal,1)"];
"1002886" [label="(Call,f->channels-1)"];
"1001722" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000435" [label="(Call,get_bits(f,8) + 1)"];
"1003404" [label="(Identifier,r)"];
"1002885" [label="(Call,ilog(f->channels-1))"];
"1001693" [label="(Identifier,f)"];
"1000332" [label="(Identifier,f)"];
"1002775" [label="(Identifier,VORBIS_invalid_setup)"];
"1002751" [label="(Call,++i)"];
"1000266" [label="(Call,x = get8(f))"];
"1002636" [label="(Call,(uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1003466" [label="(Identifier,classify_mem)"];
"1001269" [label="(ControlStructure,if (c->lookup_values == 0))"];
"1000513" [label="(Call,get_bits(f, 8))"];
"1000582" [label="(Call,get_bits(f, 8))"];
"1001002" [label="(Call,error(f, VORBIS_outofmem))"];
"1001281" [label="(Call,(uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1000195" [label="(Call,getn(f, header, 6))"];
"1003446" [label="(Identifier,n_read)"];
"1000609" [label="(Call,c->dimensions)"];
"1001279" [label="(Call,mults = (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1002053" [label="(Call,get_bits(f,2)+1)"];
"1001675" [label="(Call,last = val)"];
"1003269" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000928" [label="(Call,error(f, VORBIS_outofmem))"];
"1000562" [label="(Identifier,f)"];
"1003096" [label="(Identifier,i)"];
"1002440" [label="(Call,get_bits(f,5))"];
"1001987" [label="(Call,get_bits(f, 8))"];
"1000290" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1001665" [label="(Call,c->multiplicands[j])"];
"1001007" [label="(Call,c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1002412" [label="(ControlStructure,for (j=0; j < r->classifications; ++j))"];
"1001476" [label="(Identifier,div)"];
"1002808" [label="(Call,m->submaps)"];
"1002417" [label="(Identifier,j)"];
"1003163" [label="(Call,m->mapping >= f->mapping_count)"];
"1002497" [label="(Call,residue_cascade[j] & (1 << k))"];
"1002719" [label="(Call,f->mapping == NULL)"];
"1003319" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1003420" [label="(Identifier,limit_r_begin)"];
"1003295" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1000860" [label="(Call,sorted_count = 0)"];
"1001456" [label="(Literal,0)"];
"1001444" [label="(Identifier,len)"];
"1003341" [label="(Identifier,integer_divide_table)"];
"1000761" [label="(Identifier,lengths)"];
"1002344" [label="(Literal,2)"];
"1002748" [label="(Call,f->mapping_count)"];
"1001507" [label="(Identifier,val)"];
"1003187" [label="(Call,f->channels)"];
"1002615" [label="(Call,classwords = f->codebooks[r->classbook].dimensions)"];
"1000560" [label="(Call,get_bits(f, 8)<<8)"];
"1000642" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1001460" [label="(Call,++j)"];
"1002451" [label="(Identifier,low_bits)"];
"1001679" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1001262" [label="(Call,c->entries * c->dimensions)"];
"1003201" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000802" [label="(Call,c->entries)"];
"1003010" [label="(Call,f->channels)"];
"1003192" [label="(Block,)"];
"1003432" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003440" [label="(Call,r->end)"];
"1003311" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1001415" [label="(Call,c->entries)"];
"1002977" [label="(Call,m->chan[j].mux)"];
"1003534" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003383" [label="(Literal,1)"];
"1003377" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1000502" [label="(Call,*c = f->codebooks+i)"];
"1000857" [label="(Identifier,total)"];
"1002803" [label="(ControlStructure,if (get_bits(f,1)))"];
"1003486" [label="(Call,f->temp_memory_required)"];
"1000872" [label="(Call,++j)"];
"1000924" [label="(Call,c->codewords)"];
"1002765" [label="(Call,get_bits(f,16))"];
"1001229" [label="(Literal,4)"];
"1001690" [label="(Call,CHECK(f))"];
"1002029" [label="(Call,get_bits(f,8))"];
"1001609" [label="(Call,c->lookup_values)"];
"1003259" [label="(Call,f->finalY[i])"];
"1000515" [label="(Literal,8)"];
"1002976" [label="(Call,m->chan[j].mux = get_bits(f, 4))"];
"1001454" [label="(Call,j=0)"];
"1002467" [label="(Identifier,r)"];
"1000503" [label="(Identifier,c)"];
"1001664" [label="(Call,c->multiplicands[j] = val)"];
"1001972" [label="(Identifier,f)"];
"1002439" [label="(Identifier,high_bits)"];
"1002471" [label="(Call,error(f, VORBIS_outofmem))"];
"1003105" [label="(Block,)"];
"1001250" [label="(Call,c->entries)"];
"1001112" [label="(Call,c->sorted_values)"];
"1002464" [label="(ControlStructure,if (r->residue_books == NULL))"];
"1002311" [label="(Call,i < f->residue_count)"];
"1003375" [label="(Identifier,imdct_mem)"];
"1001249" [label="(Call,lookup1_values(c->entries, c->dimensions))"];
"1002675" [label="(Call,r->classdata[j][k])"];
"1003151" [label="(Identifier,VORBIS_invalid_setup)"];
"1003278" [label="(Identifier,f)"];
"1003546" [label="(MethodReturn,static int)"];
"1002028" [label="(Call,get_bits(f,8)-1)"];
"1003091" [label="(Identifier,f)"];
"1002357" [label="(Call,r->end)"];
"1003474" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1000982" [label="(Call,error(f, VORBIS_outofmem))"];
"1003095" [label="(Call,i=0)"];
"1001367" [label="(Identifier,sparse)"];
"1003522" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1000537" [label="(Call,x = get_bits(f, 8))"];
"1000594" [label="(Identifier,f)"];
"1002355" [label="(Literal,24)"];
"1000212" [label="(Call,get32(f) != 0)"];
"1003328" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1000644" [label="(Call,setup_malloc(f, c->entries))"];
"1000492" [label="(Block,)"];
"1002658" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002538" [label="(Identifier,r)"];
"1001522" [label="(Call,c->multiplicands[j*c->dimensions + k])"];
"1002612" [label="(Identifier,j)"];
"1002900" [label="(Call,f->channels)"];
"1002942" [label="(Identifier,VORBIS_invalid_setup)"];
"1001484" [label="(Call,c->dimensions)"];
"1002425" [label="(Call,high_bits=0)"];
"1002466" [label="(Call,r->residue_books)"];
"1000351" [label="(Identifier,f)"];
"1003219" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1002687" [label="(Call,temp /= r->classifications)"];
"1000605" [label="(Literal,1)"];
"1002496" [label="(ControlStructure,if (residue_cascade[j] & (1 << k)))"];
"1003212" [label="(Identifier,f)"];
"1002641" [label="(Call,sizeof(r->classdata[j][0]))"];
"1000568" [label="(Call,get_bits(f, 8))"];
"1001540" [label="(Identifier,val)"];
"1002613" [label="(Block,)"];
"1001954" [label="(Call,g->class_dimensions[j] = get_bits(f, 3)+1)"];
"1000861" [label="(Identifier,sorted_count)"];
"1002887" [label="(Call,f->channels)"];
"1003329" [label="(Call,f->blocksize[1])"];
"1003266" [label="(Call,error(f, VORBIS_outofmem))"];
"1001491" [label="(Call,off = (z / div) % c->lookup_values)"];
"1003320" [label="(Call,f->blocksize[0])"];
"1001696" [label="(Call,get_bits(f, 6) + 1)"];
"1002908" [label="(Call,m->chan[k].angle     >= f->channels)"];
"1002434" [label="(ControlStructure,if (get_bits(f,1)))"];
"1002710" [label="(Call,f->mapping_count)"];
"1001791" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001646" [label="(Identifier,j)"];
"1002408" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000512" [label="(Identifier,x)"];
"1003257" [label="(Identifier,NULL)"];
"1002699" [label="(Literal,6)"];
"1002871" [label="(Call,f->channels)"];
"1000491" [label="(Identifier,i)"];
"1000691" [label="(Call,ilog(limit))"];
"1002960" [label="(Identifier,m)"];
"1001143" [label="(Identifier,f)"];
"1002767" [label="(Literal,16)"];
"1000578" [label="(Identifier,c)"];
"1002966" [label="(Identifier,j)"];
"1001746" [label="(Call,sizeof(*f->floor_config))"];
"1002815" [label="(Literal,1)"];
"1000700" [label="(Call,c->entries)"];
"1001539" [label="(Identifier,last)"];
"1002835" [label="(Identifier,f)"];
"1003123" [label="(Identifier,m)"];
"1000995" [label="(Call,c->sorted_entries)"];
"1001613" [label="(Call,c->multiplicands == NULL)"];
"1002384" [label="(Call,r->classifications = get_bits(f,6)+1)"];
"1002601" [label="(Identifier,j)"];
"1003395" [label="(Identifier,i)"];
"1000847" [label="(Identifier,c)"];
"1002578" [label="(Identifier,r)"];
"1001095" [label="(Call,( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1002334" [label="(Call,get_bits(f, 16))"];
"1002954" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000265" [label="(Identifier,f)"];
"1000893" [label="(Call,values = NULL)"];
"1003543" [label="(Identifier,f)"];
"1002758" [label="(Call,f->mapping)"];
"1002724" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1000922" [label="(ControlStructure,if (!c->codewords))"];
"1002772" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000864" [label="(Call,j=0)"];
"1003403" [label="(Call,*r = f->residue_config + i)"];
"1001905" [label="(Call,get_bits(f, 5))"];
"1001211" [label="(Call,get_bits(f, 32))"];
"1003294" [label="(Identifier,NULL)"];
"1002461" [label="(Call,r->classifications)"];
"1001818" [label="(Call,get_bits(f,8))"];
"1000343" [label="(Call,!start_page(f))"];
"1001365" [label="(Literal,0)"];
"1000421" [label="(Call,get8_packet(f))"];
"1003113" [label="(Identifier,i)"];
"1002374" [label="(Identifier,VORBIS_invalid_setup)"];
"1000261" [label="(Identifier,f)"];
"1001398" [label="(ControlStructure,else)"];
"1003009" [label="(Identifier,j)"];
"1000109" [label="(Block,)"];
"1003523" [label="(Call,sizeof(*f))"];
"1002730" [label="(Identifier,f)"];
"1001961" [label="(Call,get_bits(f, 3))"];
"1000778" [label="(Identifier,c)"];
"1002921" [label="(Identifier,f)"];
"1001293" [label="(ControlStructure,if (mults == NULL))"];
"1000355" [label="(Block,)"];
"1002692" [label="(Call,f->mapping_count = get_bits(f,6)+1)"];
"1003175" [label="(Identifier,f)"];
"1000442" [label="(Identifier,f)"];
"1001532" [label="(Identifier,k)"];
"1002453" [label="(Identifier,f)"];
"1002335" [label="(Identifier,f)"];
"1001039" [label="(Identifier,lengths)"];
"1000540" [label="(Identifier,f)"];
"1002837" [label="(Block,)"];
"1000947" [label="(Call,c->sorted_entries)"];
"1001670" [label="(Identifier,val)"];
"1001323" [label="(ControlStructure,if (q == EOP))"];
"1001325" [label="(Identifier,q)"];
"1001562" [label="(Identifier,f)"];
"1002530" [label="(Identifier,f)"];
"1001294" [label="(Call,mults == NULL)"];
"1002853" [label="(Call,m->coupling_steps)"];
"1002435" [label="(Call,get_bits(f,1))"];
"1001026" [label="(Identifier,size)"];
"1002366" [label="(Identifier,r)"];
"1002577" [label="(Call,r->classdata)"];
"1001344" [label="(Call,mults[j])"];
"1002422" [label="(Identifier,j)"];
"1003089" [label="(Call,get_bits(f, 6)+1)"];
"1001216" [label="(Identifier,c)"];
"1002474" [label="(ControlStructure,for (j=0; j < r->classifications; ++j))"];
"1002431" [label="(Call,get_bits(f,3))"];
"1003045" [label="(Call,get_bits(f,8))"];
"1001640" [label="(Call,(int) c->lookup_values)"];
"1001081" [label="(ControlStructure,if (c->sorted_codewords == NULL))"];
"1001076" [label="(Call,c->sorted_entries+1)"];
"1000632" [label="(Call,c->entries)"];
"1001313" [label="(Identifier,j)"];
"1002844" [label="(Identifier,f)"];
"1003458" [label="(ControlStructure,if (part_read > max_part_read))"];
"1002268" [label="(Call,(Residue *) setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1001034" [label="(Identifier,size)"];
"1002513" [label="(Call,get_bits(f, 8))"];
"1000989" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002949" [label="(ControlStructure,if (get_bits(f,2)))"];
"1002840" [label="(Identifier,m)"];
"1003412" [label="(Identifier,actual_size)"];
"1003144" [label="(Call,m->windowtype)"];
"1000200" [label="(Call,error(f, VORBIS_unexpected_eof))"];
"1002806" [label="(Literal,1)"];
"1000635" [label="(ControlStructure,else)"];
"1001122" [label="(Identifier,c)"];
"1000232" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002654" [label="(Identifier,r)"];
"1003174" [label="(Call,flush_packet(f))"];
"1000755" [label="(Literal,1)"];
"1000567" [label="(Identifier,x)"];
"1000585" [label="(Literal,16)"];
"1003472" [label="(Call,sizeof(void*))"];
"1000886" [label="(Call,++sorted_count)"];
"1000753" [label="(Identifier,f)"];
"1002364" [label="(Call,r->end < r->begin)"];
"1000372" [label="(Identifier,f)"];
"1001729" [label="(Call,get_bits(f, 6)+1)"];
"1002777" [label="(Call,m->chan)"];
"1002906" [label="(Identifier,VORBIS_invalid_setup)"];
"1001166" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1000446" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000402" [label="(Identifier,f)"];
"1002800" [label="(Call,error(f, VORBIS_outofmem))"];
"1002812" [label="(Call,get_bits(f,4))"];
"1000987" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002761" [label="(Identifier,i)"];
"1000262" [label="(Call,get32(f))"];
"1002551" [label="(Identifier,f)"];
"1000127" [label="(Call,start_page(f))"];
"1001676" [label="(Identifier,last)"];
"1000118" [label="(Call,max_submaps = 0)"];
"1001110" [label="(ControlStructure,if (c->sorted_values == NULL))"];
"1002874" [label="(Literal,1)"];
"1000564" [label="(Literal,8)"];
"1003203" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1002661" [label="(Identifier,VORBIS_outofmem)"];
"1000349" [label="(Call,!start_packet(f))"];
"1002925" [label="(Call,m->chan[k].magnitude)"];
"1002611" [label="(Call,++j)"];
"1000469" [label="(Identifier,f)"];
"1001497" [label="(Call,c->lookup_values)"];
"1002744" [label="(Identifier,i)"];
"1003148" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000769" [label="(Block,)"];
"1001003" [label="(Identifier,f)"];
"1000269" [label="(Identifier,f)"];
"1002341" [label="(Identifier,f)"];
"1002809" [label="(Identifier,m)"];
"1002259" [label="(Call,get_bits(f, 6)+1)"];
"1001647" [label="(Block,)"];
"1003140" [label="(Identifier,f)"];
"1001962" [label="(Identifier,f)"];
"1001271" [label="(Call,c->lookup_values)"];
"1001125" [label="(Call,c->sorted_values[-1])"];
"1000651" [label="(Identifier,lengths)"];
"1001549" [label="(Block,)"];
"1001620" [label="(Identifier,f)"];
"1000398" [label="(Call,crc32_init())"];
"1001492" [label="(Identifier,off)"];
"1002909" [label="(Call,m->chan[k].angle)"];
"1000591" [label="(Call,ordered = get_bits(f,1))"];
"1003405" [label="(Call,f->residue_config + i)"];
"1002054" [label="(Call,get_bits(f,2))"];
"1003230" [label="(Identifier,f)"];
"1002617" [label="(Call,f->codebooks[r->classbook].dimensions)"];
"1002399" [label="(Literal,8)"];
"1002932" [label="(Call,m->chan[k].angle)"];
"1002732" [label="(Literal,0)"];
"1001378" [label="(Identifier,c)"];
"1003391" [label="(Call,i=0)"];
"1002956" [label="(Identifier,VORBIS_invalid_setup)"];
"1003029" [label="(Identifier,j)"];
"1002273" [label="(Call,f->residue_count)"];
"1001600" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003160" [label="(Identifier,f)"];
"1002405" [label="(Call,f->codebook_count)"];
"1002418" [label="(Call,r->classifications)"];
"1001510" [label="(Call,mults[off])"];
"1001236" [label="(Identifier,f)"];
"1002386" [label="(Identifier,r)"];
"1002705" [label="(Call,(Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1000169" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001215" [label="(Call,c->delta_value)"];
"1002852" [label="(Identifier,k)"];
"1002867" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1001274" [label="(Literal,0)"];
"1000905" [label="(Call,c->codewords)"];
"1003536" [label="(Identifier,f)"];
"1000679" [label="(Call,limit = c->entries - current_entry)"];
"1000819" [label="(Identifier,c)"];
"1002573" [label="(Call,error(f, VORBIS_outofmem))"];
"1000377" [label="(Identifier,f)"];
"1000877" [label="(Call,lengths[j])"];
"1002600" [label="(Call,j < f->codebooks[r->classbook].entries)"];
"1001088" [label="(Call,error(f, VORBIS_outofmem))"];
"1002575" [label="(Identifier,VORBIS_outofmem)"];
"1001561" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1003137" [label="(Identifier,m)"];
"1003099" [label="(Identifier,i)"];
"1001960" [label="(Call,get_bits(f, 3)+1)"];
"1000350" [label="(Call,start_packet(f))"];
"1003233" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003381" [label="(Call,sizeof(float))"];
"1003139" [label="(Call,get_bits(f,8))"];
"1002423" [label="(Block,)"];
"1002764" [label="(Identifier,mapping_type)"];
"1001099" [label="(Call,sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1002737" [label="(Call,sizeof(*f->mapping))"];
"1000689" [label="(Call,get_bits(f, ilog(limit)))"];
"1000565" [label="(Identifier,x)"];
"1000432" [label="(Call,f->codebook_count)"];
"1002328" [label="(Call,f->residue_types[i] = get_bits(f, 16))"];
"1002518" [label="(Call,r->residue_books[j][k])"];
"1003116" [label="(Identifier,m)"];
"1000823" [label="(Call,error(f, VORBIS_outofmem))"];
"1000680" [label="(Identifier,limit)"];
"1000754" [label="(Literal,5)"];
"1001377" [label="(Call,c->multiplicands)"];
"1002838" [label="(Call,m->coupling_steps = get_bits(f,8)+1)"];
"1000267" [label="(Identifier,x)"];
"1001489" [label="(Block,)"];
"1001403" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1000462" [label="(Identifier,NULL)"];
"1001124" [label="(Call,c->sorted_values[-1] = -1)"];
"1001382" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1000863" [label="(ControlStructure,for (j=0; j < c->entries; ++j))"];
"1002413" [label="(Call,j=0)"];
"1002924" [label="(Call,m->chan[k].magnitude == m->chan[k].angle)"];
"1000692" [label="(Identifier,limit)"];
"1003453" [label="(Call,n_read / r->part_size)"];
"1000554" [label="(Literal,8)"];
"1003465" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1000688" [label="(Identifier,n)"];
"1000197" [label="(Identifier,header)"];
"1001043" [label="(Identifier,values)"];
"1002783" [label="(Identifier,f)"];
"1003142" [label="(ControlStructure,if (m->windowtype != 0))"];
"1000670" [label="(Literal,1)"];
"1000812" [label="(Identifier,f)"];
"1002804" [label="(Call,get_bits(f,1))"];
"1003028" [label="(Call,j < m->submaps)"];
"1001428" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1003461" [label="(Identifier,max_part_read)"];
"1001612" [label="(ControlStructure,if (c->multiplicands == NULL))"];
"1000746" [label="(Block,)"];
"1001546" [label="(Call,c->dimensions)"];
"1001405" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1003072" [label="(Call,m->submap_residue[j] >= f->residue_count)"];
"1002890" [label="(Literal,1)"];
"1003441" [label="(Identifier,r)"];
"1000575" [label="(Literal,8)"];
"1001651" [label="(Call,mults[j] * c->delta_value + c->minimum_value + last)"];
"1001212" [label="(Identifier,f)"];
"1001354" [label="(Block,)"];
"1003210" [label="(Call,f->previous_window[i])"];
"1002701" [label="(Call,f->mapping = (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1001186" [label="(Identifier,f)"];
"1000126" [label="(Call,!start_page(f))"];
"1003149" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001461" [label="(Identifier,j)"];
"1002531" [label="(Identifier,VORBIS_invalid_setup)"];
"1000380" [label="(Call,!is_whole_packet_present(f, TRUE))"];
"1002403" [label="(Identifier,r)"];
"1003325" [label="(Call,f->blocksize_0)"];
"1001392" [label="(Call,c->sorted_entries)"];
"1000472" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1002356" [label="(Call,r->end = get_bits(f, 24))"];
"1000968" [label="(Call,sizeof(*c->codewords))"];
"1003484" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1000790" [label="(Call,c->entries)"];
"1003445" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1001207" [label="(Call,c->minimum_value)"];
"1003024" [label="(ControlStructure,for (j=0; j < m->submaps; ++j))"];
"1000428" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001185" [label="(Call,get_bits(f, 4))"];
"1001218" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1000760" [label="(Call,lengths[j])"];
"1001564" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1002770" [label="(Identifier,mapping_type)"];
"1003299" [label="(ControlStructure,if (!init_blocksize(f, 0, f->blocksize_0)))"];
"1001671" [label="(ControlStructure,if (c->sequence_p))"];
"1002546" [label="(Identifier,r)"];
"1003191" [label="(Identifier,i)"];
"1001619" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1000959" [label="(Call,c->codewords = (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001178" [label="(Identifier,c)"];
"1002030" [label="(Identifier,f)"];
"1003464" [label="(Identifier,part_read)"];
"1000217" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002674" [label="(Call,r->classdata[j][k] = temp % r->classifications)"];
"1000835" [label="(Identifier,f)"];
"1002444" [label="(Call,residue_cascade[j])"];
"1001780" [label="(Identifier,f)"];
"1003312" [label="(Identifier,f)"];
"1000714" [label="(Call,current_entry += n)"];
"1001227" [label="(Call,get_bits(f, 4))"];
"1001083" [label="(Call,c->sorted_codewords)"];
"1003067" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000836" [label="(Identifier,lengths)"];
"1001406" [label="(Identifier,f)"];
"1000986" [label="(Identifier,values)"];
"1001479" [label="(Call,k=0)"];
"1002261" [label="(Identifier,f)"];
"1003434" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1000992" [label="(Call,sizeof(*values))"];
"1001475" [label="(Call,div=1)"];
"1001736" [label="(Identifier,f)"];
"1000547" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003114" [label="(Call,m->blockflag = get_bits(f,1))"];
"1000464" [label="(Call,error(f, VORBIS_outofmem))"];
"1000458" [label="(Call,f->codebooks == NULL)"];
"1002329" [label="(Call,f->residue_types[i])"];
"1000526" [label="(Call,get_bits(f, 8))"];
"1001374" [label="(Literal,0)"];
"1003496" [label="(Identifier,f)"];
"1000888" [label="(Call,c->sorted_entries = sorted_count)"];
"1003119" [label="(Identifier,f)"];
"1003136" [label="(Call,m->mapping)"];
"1002659" [label="(Call,error(f, VORBIS_outofmem))"];
"1002055" [label="(Identifier,f)"];
"1001509" [label="(Call,mults[off]*c->delta_value)"];
"1002857" [label="(Identifier,k)"];
"1000358" [label="(Call,next_segment(f))"];
"1003153" [label="(Call,m->transformtype != 0)"];
"1000566" [label="(Call,x = get_bits(f, 8))"];
"1002062" [label="(Call,get_bits(f,4))"];
"1003159" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001726" [label="(Call,f->floor_count)"];
"1003519" [label="(Call,f->setup_offset)"];
"1002950" [label="(Call,get_bits(f,2))"];
"1000786" [label="(Literal,2)"];
"1003083" [label="(Identifier,f)"];
"1002063" [label="(Identifier,f)"];
"1002987" [label="(ControlStructure,if (m->chan[j].mux >= m->submaps))"];
"1002964" [label="(ControlStructure,for (j=0; j < f->channels; ++j))"];
"1001552" [label="(Identifier,div)"];
"1000824" [label="(Identifier,f)"];
"1002651" [label="(Call,r->classdata[j] == NULL)"];
"1001233" [label="(Identifier,c)"];
"1003002" [label="(Identifier,VORBIS_invalid_setup)"];
"1001854" [label="(Call,get_bits(f,4))"];
"1002713" [label="(Call,sizeof(*f->mapping))"];
"1000249" [label="(Call,get32(f))"];
"1001027" [label="(Call,f->setup_temp_memory_required)"];
"1001324" [label="(Call,q == EOP)"];
"1001541" [label="(ControlStructure,if (k+1 < c->dimensions))"];
"1002058" [label="(Call,g->rangebits = get_bits(f,4))"];
"1001466" [label="(Call,sparse ? c->sorted_values[j] : j)"];
"1002718" [label="(ControlStructure,if (f->mapping == NULL))"];
"1002814" [label="(Literal,4)"];
"1003535" [label="(Call,error(f, VORBIS_outofmem))"];
"1001063" [label="(Call,c->sorted_codewords)"];
"1002771" [label="(Literal,0)"];
"1000712" [label="(Identifier,current_length)"];
"1003199" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000875" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH && lengths[j] != NO_CODE)"];
"1000436" [label="(Call,get_bits(f,8))"];
"1001270" [label="(Call,c->lookup_values == 0)"];
"1002973" [label="(Call,++j)"];
"1001518" [label="(Identifier,c)"];
"1002846" [label="(Literal,1)"];
"1002773" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002385" [label="(Call,r->classifications)"];
"1002383" [label="(Literal,1)"];
"1000869" [label="(Call,c->entries)"];
"1003107" [label="(Call,*m = f->mode_config+i)"];
"1001154" [label="(Call,c->codewords)"];
"1002940" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001319" [label="(Identifier,f)"];
"1000587" [label="(Call,y<<8)"];
"1002362" [label="(Literal,24)"];
"1000528" [label="(Literal,8)"];
"1003125" [label="(Call,get_bits(f,16))"];
"1002441" [label="(Identifier,f)"];
"1003202" [label="(Identifier,f)"];
"1002358" [label="(Identifier,r)"];
"1002553" [label="(Call,sizeof(*r->classdata))"];
"1000945" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1001195" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000514" [label="(Identifier,f)"];
"1001457" [label="(Call,j < len)"];
"1000725" [label="(Call,j < c->entries)"];
"1000460" [label="(Identifier,f)"];
"1001136" [label="(Identifier,values)"];
"1000742" [label="(Literal,1)"];
"1000795" [label="(Call,f->setup_temp_memory_required)"];
"1000511" [label="(Call,x = get_bits(f, 8))"];
"1001000" [label="(Identifier,values)"];
"1001210" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1002521" [label="(Identifier,r)"];
"1003272" [label="(Identifier,f)"];
"1000661" [label="(Identifier,current_entry)"];
"1001538" [label="(Call,last = val)"];
"1001320" [label="(Call,c->value_bits)"];
"1001700" [label="(Literal,1)"];
"1003110" [label="(Call,f->mode_config)"];
"1002753" [label="(Block,)"];
"1002130" [label="(Call,get_bits(f, g->rangebits))"];
"1000793" [label="(Call,(int) f->setup_temp_memory_required)"];
"1002452" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1002377" [label="(Identifier,r)"];
"1000687" [label="(Call,n = get_bits(f, ilog(limit)))"];
"1003093" [label="(Literal,1)"];
"1001246" [label="(Call,c->lookup_values)"];
"1002429" [label="(Call,low_bits=get_bits(f,3))"];
"1002450" [label="(Literal,8)"];
"1003186" [label="(Identifier,i)"];
"1002892" [label="(Call,m->chan[k].magnitude >= f->channels)"];
"1000831" [label="(Call,c->entries)"];
"1003109" [label="(Call,f->mode_config+i)"];
"1001595" [label="(Call,c->multiplicands)"];
"1000482" [label="(Call,i=0)"];
"1002567" [label="(ControlStructure,if (!r->classdata))"];
"1003048" [label="(Call,m->submap_residue[j] = get_bits(f,8))"];
"1002570" [label="(Identifier,r)"];
"1002883" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1003423" [label="(Call,r->begin)"];
"1002421" [label="(Call,++j)"];
"1002922" [label="(Identifier,VORBIS_invalid_setup)"];
"1000925" [label="(Identifier,c)"];
"1003143" [label="(Call,m->windowtype != 0)"];
"1002652" [label="(Call,r->classdata[j])"];
"1000441" [label="(Call,f->codebooks)"];
"1002858" [label="(Block,)"];
"1000747" [label="(Call,lengths[j] = get_bits(f, 5) + 1)"];
"1000527" [label="(Identifier,f)"];
"1000717" [label="(Call,++current_length)"];
"1002479" [label="(Identifier,j)"];
"1000551" [label="(Identifier,x)"];
"1003313" [label="(Literal,1)"];
"1001141" [label="(Block,)"];
"1001478" [label="(ControlStructure,for (k=0; k < c->dimensions; ++k))"];
"1000225" [label="(Identifier,f)"];
"1002959" [label="(Call,m->submaps)"];
"1001204" [label="(Block,)"];
"1000510" [label="(Identifier,f)"];
"1001971" [label="(Call,get_bits(f, 2))"];
"1002811" [label="(Call,get_bits(f,4)+1)"];
"1000382" [label="(Identifier,f)"];
"1002046" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001553" [label="(Call,UINT_MAX / (unsigned int) c->lookup_values)"];
"1002515" [label="(Literal,8)"];
"1000400" [label="(Call,get8_packet(f) != VORBIS_packet_setup)"];
"1002283" [label="(Call,f->residue_config == NULL)"];
"1002682" [label="(Call,temp % r->classifications)"];
"1002673" [label="(Block,)"];
"1000709" [label="(Call,lengths + current_entry)"];
"1000188" [label="(Identifier,VORBIS_packet_id)"];
"1000977" [label="(Call,!c->codewords)"];
"1003217" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1002849" [label="(Identifier,k)"];
"1000990" [label="(Identifier,f)"];
"1002398" [label="(Identifier,f)"];
"1003082" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002769" [label="(Call,mapping_type != 0)"];
"1003068" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003064" [label="(Call,f->floor_count)"];
"1003235" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003054" [label="(Call,get_bits(f,8))"];
"1002506" [label="(Call,r->residue_books[j][k])"];
"1002436" [label="(Identifier,f)"];
"1000257" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001694" [label="(Call,x = get_bits(f, 6) + 1)"];
"1000752" [label="(Call,get_bits(f, 5))"];
"1003468" [label="(Call,f->channels)"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1002049" [label="(Call,g->floor1_multiplier = get_bits(f,2)+1)"];
"1001021" [label="(Call,c->sorted_entries)"];
"1003394" [label="(Call,i < f->residue_count)"];
"1000715" [label="(Identifier,current_entry)"];
"1002596" [label="(ControlStructure,for (j=0; j < f->codebooks[r->classbook].entries; ++j))"];
"1003264" [label="(Identifier,NULL)"];
"1001773" [label="(Call,f->floor_types[i] = get_bits(f, 16))"];
"1002984" [label="(Call,get_bits(f, 4))"];
"1000403" [label="(Identifier,VORBIS_packet_setup)"];
"1001285" [label="(Call,sizeof(mults[0]) * c->lookup_values)"];
"1001071" [label="(Call,sizeof(*c->sorted_codewords))"];
"1003494" [label="(Call,f->first_decode = TRUE)"];
"1002763" [label="(Call,mapping_type = get_bits(f,16))"];
"1000208" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002580" [label="(Literal,0)"];
"1002802" [label="(Identifier,VORBIS_outofmem)"];
"1001105" [label="(Call,c->sorted_entries+1)"];
"1001258" [label="(Call,c->lookup_values = c->entries * c->dimensions)"];
"1001927" [label="(Identifier,f)"];
"1000588" [label="(Identifier,y)"];
"1000405" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000473" [label="(Call,sizeof(*f->codebooks))"];
"1003035" [label="(Block,)"];
"1001681" [label="(Identifier,mults)"];
"1001907" [label="(Literal,5)"];
"1002805" [label="(Identifier,f)"];
"1003545" [label="(Identifier,TRUE)"];
"1001371" [label="(Call,c->sorted_entries)"];
"1000862" [label="(Literal,0)"];
"1003483" [label="(ControlStructure,if (imdct_mem > f->temp_memory_required))"];
"1002756" [label="(Identifier,m)"];
"1003334" [label="(Call,f->blocksize_1)"];
"1001477" [label="(Literal,1)"];
"1000765" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000668" [label="(Identifier,f)"];
"1001677" [label="(Identifier,val)"];
"1000440" [label="(Call,f->codebooks = (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1001089" [label="(Identifier,f)"];
"1001656" [label="(Call,c->delta_value)"];
"1003390" [label="(ControlStructure,for (i=0; i < f->residue_count; ++i))"];
"1002276" [label="(Call,sizeof(f->residue_config[0]))"];
"1000509" [label="(Call,CHECK(f))"];
"1002875" [label="(Call,m->chan[k].angle = get_bits(f, ilog(f->channels-1)))"];
"1001343" [label="(Call,mults[j] = q)"];
"1000569" [label="(Identifier,f)"];
"1001692" [label="(Call,CHECK(f))"];
"1000782" [label="(Call,c->entries >> 2)"];
"1000770" [label="(Call,lengths[j] = NO_CODE)"];
"1000557" [label="(Identifier,c)"];
"1002912" [label="(Identifier,m)"];
"1001928" [label="(Literal,4)"];
"1000614" [label="(Call,c->entries)"];
"1002955" [label="(Identifier,f)"];
"1000718" [label="(Identifier,current_length)"];
"1000908" [label="(Call,(uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1003539" [label="(Call,f->first_audio_page_offset)"];
"1001594" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1002968" [label="(Call,j < f->channels)"];
"1001363" [label="(Call,last=0)"];
"1000660" [label="(Call,current_entry = 0)"];
"1001111" [label="(Call,c->sorted_values == NULL)"];
"1001220" [label="(Identifier,f)"];
"1003167" [label="(Call,f->mapping_count)"];
"1001554" [label="(Identifier,UINT_MAX)"];
"1002830" [label="(Call,m->submaps)"];
"1002338" [label="(Call,f->residue_types[i] > 2)"];
"1001092" [label="(Call,c->sorted_values)"];
"1003178" [label="(Identifier,f)"];
"1003439" [label="(Identifier,actual_size)"];
"1003422" [label="(Call,r->begin < actual_size)"];
"1001465" [label="(Identifier,z)"];
"1001429" [label="(Identifier,f)"];
"1001673" [label="(Identifier,c)"];
"1000889" [label="(Call,c->sorted_entries)"];
"1002416" [label="(Call,j < r->classifications)"];
"1001418" [label="(Call,c->dimensions)"];
"1000696" [label="(Identifier,current_entry)"];
"1002392" [label="(Literal,1)"];
"1001183" [label="(Identifier,c)"];
"1003019" [label="(Identifier,m)"];
"1001591" [label="(Literal,0)"];
"1002132" [label="(Call,g->rangebits)"];
"1003196" [label="(Identifier,f)"];
"1001219" [label="(Call,get_bits(f, 32))"];
"1002391" [label="(Literal,6)"];
"1001222" [label="(Call,c->value_bits = get_bits(f, 4)+1)"];
"1001296" [label="(Identifier,NULL)"];
"1001368" [label="(Block,)"];
"1002432" [label="(Identifier,f)"];
"1000485" [label="(Call,i < f->codebook_count)"];
"1001253" [label="(Call,c->dimensions)"];
"1003265" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002860" [label="(Call,m->chan[k].magnitude)"];
"1000727" [label="(Call,c->entries)"];
"1000816" [label="(ControlStructure,if (c->codeword_lengths == NULL))"];
"1003100" [label="(Call,f->mode_count)"];
"1003282" [label="(Call,f->blocksize_1/2)"];
"1001480" [label="(Identifier,k)"];
"1001462" [label="(Block,)"];
"1003489" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1002896" [label="(Identifier,m)"];
"1003085" [label="(Call,f->mode_count = get_bits(f, 6)+1)"];
"1002893" [label="(Call,m->chan[k].magnitude)"];
"1001508" [label="(Call,mults[off]*c->delta_value + c->minimum_value + last)"];
"1002365" [label="(Call,r->end)"];
"1000331" [label="(Call,get8(f))"];
"1002345" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000220" [label="(Call,f->channels = get8(f))"];
"1002528" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000698" [label="(Call,(int) c->entries)"];
"1002256" [label="(Call,f->residue_count)"];
"1000504" [label="(Call,f->codebooks+i)"];
"1003479" [label="(Call,f->temp_memory_required)"];
"1003401" [label="(Block,)"];
"1001230" [label="(Literal,1)"];
"1003476" [label="(Call,sizeof(uint8 *))"];
"1002768" [label="(ControlStructure,if (mapping_type != 0))"];
"1000895" [label="(Identifier,NULL)"];
"1002952" [label="(Literal,2)"];
"1003227" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1001118" [label="(Identifier,f)"];
"1000596" [label="(Call,c->sparse = ordered ? 0 : get_bits(f,1))"];
"1002962" [label="(Literal,1)"];
"1001740" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1000487" [label="(Call,f->codebook_count)"];
"1000911" [label="(Identifier,f)"];
"1003162" [label="(ControlStructure,if (m->mapping >= f->mapping_count))"];
"1003108" [label="(Identifier,m)"];
"1001697" [label="(Call,get_bits(f, 6))"];
"1000283" [label="(Call,f->blocksize_0 = 1 << log0)"];
"1001176" [label="(Identifier,NULL)"];
"1003518" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003051" [label="(Identifier,m)"];
"1001839" [label="(Call,get_bits(f,6))"];
"1002525" [label="(Call,f->codebook_count)"];
"1002923" [label="(ControlStructure,if (m->chan[k].magnitude == m->chan[k].angle))"];
"1001926" [label="(Call,get_bits(f, 4))"];
"1000873" [label="(Identifier,j)"];
"1000593" [label="(Call,get_bits(f,1))"];
"1002856" [label="(Call,++k)"];
"1001781" [label="(Literal,16)"];
"1002627" [label="(Call,temp = j)"];
"1001231" [label="(Call,c->sequence_p = get_bits(f,1))"];
"1000967" [label="(Call,sizeof(*c->codewords) * c->sorted_entries)"];
"1000912" [label="(Call,sizeof(c->codewords[0]) * c->entries)"];
"1000595" [label="(Literal,1)"];
"1000705" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001145" [label="(Call,sizeof(*values)*c->sorted_entries)"];
"1000329" [label="(Call,x = get8(f))"];
"1002700" [label="(Literal,1)"];
"1002807" [label="(Call,m->submaps = get_bits(f,4)+1)"];
"1001221" [label="(Literal,32)"];
"1001615" [label="(Identifier,c)"];
"1002650" [label="(ControlStructure,if (r->classdata[j] == NULL))"];
"1003171" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001086" [label="(Identifier,NULL)"];
"1003147" [label="(Literal,0)"];
"1001133" [label="(Call,compute_sorted_huffman(c, lengths, values))"];
"1003006" [label="(Identifier,j)"];
"1000758" [label="(ControlStructure,if (lengths[j] == 32))"];
"1002958" [label="(Call,m->submaps > 1)"];
"1001965" [label="(Call,g->class_subclasses[j] = get_bits(f, 2))"];
"1003318" [label="(Identifier,FALSE)"];
"1001725" [label="(Call,f->floor_count = get_bits(f, 6)+1)"];
"1001383" [label="(Identifier,f)"];
"1002988" [label="(Call,m->chan[j].mux >= m->submaps)"];
"1000903" [label="(Block,)"];
"1003001" [label="(Identifier,f)"];
"1000326" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002476" [label="(Identifier,j)"];
"1000881" [label="(Call,lengths[j] != NO_CODE)"];
"1002438" [label="(Call,high_bits = get_bits(f,5))"];
"1002568" [label="(Call,!r->classdata)"];
"1002498" [label="(Call,residue_cascade[j])"];
"1000774" [label="(Identifier,NO_CODE)"];
"1002433" [label="(Literal,3)"];
"1000417" [label="(Call,header[i] = get8_packet(f))"];
"1003000" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000339" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002494" [label="(Identifier,k)"];
"1003104" [label="(Identifier,i)"];
"1003158" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000818" [label="(Call,c->codeword_lengths)"];
"1002478" [label="(Call,j < r->classifications)"];
"1002602" [label="(Call,f->codebooks[r->classbook].entries)"];
"1002863" [label="(Identifier,m)"];
"1002078" [label="(Call,1 << g->rangebits)"];
"1002393" [label="(Call,r->classbook = get_bits(f,8))"];
"1001636" [label="(Identifier,j)"];
"1002742" [label="(ControlStructure,for (i=0; i < f->mapping_count; ++i))"];
"1003331" [label="(Identifier,f)"];
"1000965" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1002743" [label="(Call,i=0)"];
"1003130" [label="(Identifier,m)"];
"1000563" [label="(Literal,8)"];
"1003300" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003190" [label="(Call,++i)"];
"1002079" [label="(Literal,1)"];
"1001617" [label="(Identifier,NULL)"];
"1002368" [label="(Call,r->begin)"];
"1002475" [label="(Call,j=0)"];
"1000381" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1003055" [label="(Identifier,f)"];
"1002919" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000214" [label="(Identifier,f)"];
"1001527" [label="(Call,j*c->dimensions)"];
"1000828" [label="(Identifier,c)"];
"1001347" [label="(Identifier,q)"];
"1003451" [label="(Call,part_read = n_read / r->part_size)"];
"1000318" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000638" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1001712" [label="(Call,z = get_bits(f, 16))"];
"1001578" [label="(Call,c->lookup_values)"];
"1003070" [label="(Identifier,VORBIS_invalid_setup)"];
"1001741" [label="(Identifier,f)"];
"1002380" [label="(Call,get_bits(f,24))"];
"1001989" [label="(Literal,8)"];
"1002545" [label="(Call,r->classdata)"];
"1001496" [label="(Identifier,div)"];
"1000887" [label="(Identifier,sorted_count)"];
"1001038" [label="(Identifier,c)"];
"1003406" [label="(Call,f->residue_config)"];
"1002941" [label="(Identifier,f)"];
"1001244" [label="(Block,)"];
"1002907" [label="(ControlStructure,if (m->chan[k].angle     >= f->channels))"];
"1000457" [label="(ControlStructure,if (f->codebooks == NULL))"];
"1002080" [label="(Call,g->rangebits)"];
"1001667" [label="(Identifier,c)"];
"1002415" [label="(Literal,0)"];
"1001134" [label="(Identifier,c)"];
"1001259" [label="(Call,c->lookup_values)"];
"1002445" [label="(Identifier,residue_cascade)"];
"1000556" [label="(Call,c->dimensions)"];
"1002884" [label="(Identifier,f)"];
"1000465" [label="(Identifier,f)"];
"1003141" [label="(Literal,8)"];
"1000667" [label="(Call,get_bits(f,5))"];
"1001543" [label="(Call,k+1)"];
"1000630" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1001699" [label="(Literal,6)"];
"1000521" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001098" [label="(Identifier,f)"];
"1002723" [label="(Identifier,NULL)"];
"1002903" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000883" [label="(Identifier,lengths)"];
"1001964" [label="(Literal,1)"];
"1000690" [label="(Identifier,f)"];
"1000919" [label="(Call,c->entries)"];
"1003026" [label="(Identifier,j)"];
"1003056" [label="(Literal,8)"];
"1000811" [label="(Call,setup_malloc(f, c->entries))"];
"1003399" [label="(Call,++i)"];
"1000467" [label="(Call,memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count))"];
"1000589" [label="(Literal,8)"];
"1001715" [label="(Identifier,f)"];
"1000236" [label="(Call,f->channels > STB_VORBIS_MAX_CHANNELS)"];
"1000682" [label="(Call,c->entries)"];
"1001263" [label="(Call,c->entries)"];
"1003218" [label="(Identifier,f)"];
"1003132" [label="(Call,get_bits(f,16))"];
"1001340" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001331" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1003069" [label="(Identifier,f)"];
"1003436" [label="(Call,r->end)"];
"1001228" [label="(Identifier,f)"];
"1000756" [label="(Call,++total)"];
"1000649" [label="(ControlStructure,if (!lengths))"];
"1003254" [label="(Identifier,f)"];
"1002953" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001652" [label="(Call,mults[j] * c->delta_value)"];
"1000552" [label="(Call,get_bits(f, 8))"];
"1001534" [label="(ControlStructure,if (c->sequence_p))"];
"1001120" [label="(Call,++c->sorted_values)"];
"1002785" [label="(Call,f->channels)"];
"1000904" [label="(Call,c->codewords = (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000837" [label="(Call,c->entries)"];
"1001062" [label="(Call,c->sorted_codewords = (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001455" [label="(Identifier,j)"];
"1001875" [label="(Call,get_bits(f,8))"];
"1001493" [label="(Call,(z / div) % c->lookup_values)"];
"1002569" [label="(Call,r->classdata)"];
"1001025" [label="(Call,size > f->setup_temp_memory_required)"];
"1000490" [label="(Call,++i)"];
"1003430" [label="(Identifier,actual_size)"];
"1003288" [label="(Call,f->floor_buffers[i] == NULL)"];
"1001131" [label="(Call,-1)"];
"1003173" [label="(Identifier,VORBIS_invalid_setup)"];
"1002347" [label="(Identifier,f)"];
"1003303" [label="(Literal,0)"];
"1003246" [label="(Identifier,f)"];
"1003517" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003244" [label="(Call,f->channel_buffers[i])"];
"1000245" [label="(Call,f->sample_rate = get32(f))"];
"1003182" [label="(Call,i=0)"];
"1003152" [label="(ControlStructure,if (m->transformtype != 0))"];
"1003209" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003493" [label="(Identifier,imdct_mem)"];
"1000483" [label="(Identifier,i)"];
"1001846" [label="(Call,get_bits(f,8))"];
"1002868" [label="(Identifier,f)"];
"1003122" [label="(Call,m->windowtype)"];
"1001920" [label="(Call,g->partition_class_list[j] = get_bits(f, 4))"];
"1000799" [label="(Call,f->setup_temp_memory_required)"];
"1001163" [label="(Call,c->sorted_entries)"];
"1001659" [label="(Call,c->minimum_value + last)"];
"1002255" [label="(Call,f->residue_count = get_bits(f, 6)+1)"];
"1002688" [label="(Identifier,temp)"];
"1000608" [label="(Call,c->dimensions == 0)"];
"1002970" [label="(Call,f->channels)"];
"1000840" [label="(Call,lengths = c->codeword_lengths)"];
"1000979" [label="(Identifier,c)"];
"1000766" [label="(Identifier,f)"];
"1000929" [label="(Identifier,f)"];
"1000759" [label="(Call,lengths[j] == 32)"];
"1003128" [label="(Call,m->transformtype = get_bits(f,16))"];
"1000726" [label="(Identifier,j)"];
"1003243" [label="(Call,f->channel_buffers[i] == NULL)"];
"1002693" [label="(Call,f->mapping_count)"];
"1002819" [label="(Identifier,m)"];
"1002558" [label="(Call,f->codebooks[r->classbook].entries)"];
"1000205" [label="(Call,vorbis_validate(header))"];
"1000637" [label="(Identifier,lengths)"];
"1002788" [label="(Call,sizeof(*m->chan))"];
"1003241" [label="(ControlStructure,if (f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL))"];
"1000185" [label="(Call,get8(f) != VORBIS_packet_id)"];
"1000499" [label="(Literal,0)"];
"1002297" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1002851" [label="(Call,k < m->coupling_steps)"];
"1002448" [label="(Call,high_bits*8)"];
"1001691" [label="(Identifier,f)"];
"1001070" [label="(Call,sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1002064" [label="(Literal,4)"];
"1002447" [label="(Call,high_bits*8 + low_bits)"];
"1003126" [label="(Identifier,f)"];
"1003261" [label="(Identifier,f)"];
"1002504" [label="(Block,)"];
"1002122" [label="(Call,g->Xlist[g->values] = get_bits(f, g->rangebits))"];
"1000628" [label="(Call,(uint8 *) setup_temp_malloc(f, c->entries))"];
"1003454" [label="(Identifier,n_read)"];
"1003005" [label="(Call,j=0)"];
"1003258" [label="(Call,f->finalY[i] == NULL)"];
"1000807" [label="(Identifier,c)"];
"1001037" [label="(Call,compute_codewords(c, lengths, c->entries, values))"];
"1001032" [label="(Identifier,f)"];
"1000375" [label="(ControlStructure,if (IS_PUSH_MODE(f)))"];
"1002822" [label="(ControlStructure,if (m->submaps > max_submaps))"];
"1001991" [label="(Call,g->class_masterbooks[j] >= f->codebook_count)"];
"1000481" [label="(ControlStructure,for (i=0; i < f->codebook_count; ++i))"];
"1002517" [label="(Call,r->residue_books[j][k] >= f->codebook_count)"];
"1001682" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1000859" [label="(Block,)"];
"1001506" [label="(Call,val = mults[off]*c->delta_value + c->minimum_value + last)"];
"1003228" [label="(Call,f->finalY[i])"];
"1002839" [label="(Call,m->coupling_steps)"];
"1003081" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003090" [label="(Call,get_bits(f, 6))"];
"1002059" [label="(Call,g->rangebits)"];
"1002720" [label="(Call,f->mapping)"];
"1000657" [label="(Identifier,ordered)"];
"1002746" [label="(Call,i < f->mapping_count)"];
"1001295" [label="(Identifier,mults)"];
"1000612" [label="(Literal,0)"];
"1002727" [label="(Identifier,VORBIS_outofmem)"];
"1001526" [label="(Call,j*c->dimensions + k)"];
"1001153" [label="(Identifier,f)"];
"1002747" [label="(Identifier,i)"];
"1003121" [label="(Call,m->windowtype = get_bits(f,16))"];
"1002876" [label="(Call,m->chan[k].angle)"];
"1001328" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1001879" [label="(Call,error(f, VORBIS_feature_not_supported))"];
"1002664" [label="(Identifier,k)"];
"1001587" [label="(Block,)"];
"1001326" [label="(Identifier,EOP)"];
"1000780" [label="(Call,total >= c->entries >> 2)"];
"1001730" [label="(Call,get_bits(f, 6))"];
"1003482" [label="(Identifier,classify_mem)"];
"1003279" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003314" [label="(Call,f->blocksize_1)"];
"1002774" [label="(Identifier,f)"];
"1002361" [label="(Identifier,f)"];
"1003301" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003467" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1000748" [label="(Call,lengths[j])"];
"1002683" [label="(Identifier,temp)"];
"1003268" [label="(Identifier,VORBIS_outofmem)"];
"1003322" [label="(Identifier,f)"];
"1001445" [label="(Call,sparse ? c->sorted_entries : c->entries)"];
"1003033" [label="(Call,++j)"];
"1002697" [label="(Call,get_bits(f,6))"];
"1000868" [label="(Identifier,j)"];
"1000181" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000740" [label="(Call,get_bits(f,1))"];
"1001758" [label="(Call,error(f, VORBIS_outofmem))"];
"1001423" [label="(Call,c->multiplicands)"];
"1000439" [label="(Literal,1)"];
"1003103" [label="(Call,++i)"];
"1002349" [label="(Call,r->begin = get_bits(f, 24))"];
"1001011" [label="(Call,(sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1001139" [label="(Identifier,c)"];
"1002339" [label="(Call,f->residue_types[i])"];
"1001235" [label="(Call,get_bits(f,1))"];
"1001483" [label="(Identifier,k)"];
"1001172" [label="(Call,c->codewords = NULL)"];
"1000781" [label="(Identifier,total)"];
"1003277" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003302" [label="(Identifier,f)"];
"1003298" [label="(Identifier,VORBIS_outofmem)"];
"1003462" [label="(Call,max_part_read = part_read)"];
"1001005" [label="(Call,size = c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1002057" [label="(Literal,1)"];
"1002395" [label="(Identifier,r)"];
"1000603" [label="(Call,get_bits(f,1))"];
"1001213" [label="(Literal,32)"];
"1002360" [label="(Call,get_bits(f, 24))"];
"1000360" [label="(Call,skip(f, len))"];
"1003059" [label="(Call,m->submap_floor[j])"];
"1000242" [label="(Call,error(f, VORBIS_too_many_channels))"];
"1001169" [label="(Call,c->entries)"];
"1000534" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002480" [label="(Call,r->classifications)"];
"1000669" [label="(Literal,5)"];
"1002351" [label="(Identifier,r)"];
"1001573" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003215" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1001146" [label="(Call,sizeof(*values))"];
"1002928" [label="(Identifier,m)"];
"1003013" [label="(Call,++j)"];
"1001524" [label="(Identifier,c)"];
"1002725" [label="(Call,error(f, VORBIS_outofmem))"];
"1002350" [label="(Call,r->begin)"];
"1002989" [label="(Call,m->chan[j].mux)"];
"1000600" [label="(Call,ordered ? 0 : get_bits(f,1))"];
"1000573" [label="(Call,get_bits(f, 8))"];
"1002266" [label="(Identifier,f)"];
"1002796" [label="(Identifier,m)"];
"1001206" [label="(Call,c->minimum_value = float32_unpack(get_bits(f, 32)))"];
"1001303" [label="(Identifier,j)"];
"1001180" [label="(Identifier,f)"];
"1001408" [label="(Call,sizeof(c->multiplicands[0]))"];
"1000345" [label="(Identifier,f)"];
"1002729" [label="(Call,f->mapping)"];
"1000108" [label="(MethodParameterIn,vorb *f)"];
"1002371" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000357" [label="(Identifier,len)"];
"1002946" [label="(Identifier,m)"];
"1002776" [label="(Call,m->chan = (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1000646" [label="(Call,c->entries)"];
"1001031" [label="(Call,f->setup_temp_memory_required)"];
"1002465" [label="(Call,r->residue_books == NULL)"];
"1002289" [label="(Call,error(f, VORBIS_outofmem))"];
"1001385" [label="(Call,sizeof(c->multiplicands[0]))"];
"1001731" [label="(Identifier,f)"];
"1000841" [label="(Identifier,lengths)"];
"1001317" [label="(Identifier,q)"];
"1000963" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001305" [label="(Call,j < (int) c->lookup_values)"];
"1001426" [label="(Identifier,NULL)"];
"1002834" [label="(Call,get_bits(f,1))"];
"1000617" [label="(Literal,0)"];
"1003040" [label="(Call,m->submap_floor[j])"];
"1002813" [label="(Identifier,f)"];
"1002969" [label="(Identifier,j)"];
"1003249" [label="(Identifier,NULL)"];
"1002470" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002784" [label="(Call,f->channels * sizeof(*m->chan))"];
"1003400" [label="(Identifier,i)"];
"1003449" [label="(Identifier,limit_r_begin)"];
"1002473" [label="(Identifier,VORBIS_outofmem)"];
"1000880" [label="(Identifier,STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1001399" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1000359" [label="(Identifier,f)"];
"1002455" [label="(Call,sizeof(r->residue_books[0]))"];
"1003526" [label="(Call,f->temp_memory_required)"];
"1003237" [label="(Call,sizeof(int16) * longest_floorlist)"];
"1000694" [label="(Call,current_entry + n > (int) c->entries)"];
"1001752" [label="(Call,f->floor_config == NULL)"];
"1002454" [label="(Call,sizeof(r->residue_books[0]) * r->classifications)"];
"1003034" [label="(Identifier,j)"];
"1003161" [label="(Identifier,VORBIS_invalid_setup)"];
"1001030" [label="(Call,f->setup_temp_memory_required = size)"];
"1000553" [label="(Identifier,f)"];
"1000973" [label="(Call,c->sorted_entries)"];
"1001380" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1003078" [label="(Call,f->residue_count)"];
"1000932" [label="(Block,)"];
"1000721" [label="(ControlStructure,for (j=0; j < c->entries; ++j))"];
"1002828" [label="(Call,max_submaps = m->submaps)"];
"1002823" [label="(Call,m->submaps > max_submaps)"];
"1003194" [label="(Call,f->channel_buffers[i])"];
"1003419" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1001557" [label="(Call,c->lookup_values)"];
"1002488" [label="(Identifier,k)"];
"1002449" [label="(Identifier,high_bits)"];
"1003374" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003118" [label="(Call,get_bits(f,1))"];
"1001421" [label="(ControlStructure,if (c->multiplicands == NULL))"];
"1003460" [label="(Identifier,part_read)"];
"1000946" [label="(Identifier,f)"];
"1001245" [label="(Call,c->lookup_values = lookup1_values(c->entries, c->dimensions))"];
"1003135" [label="(Call,m->mapping = get_bits(f,8))"];
"1002516" [label="(ControlStructure,if (r->residue_books[j][k] >= f->codebook_count))"];
"1001583" [label="(Identifier,c)"];
"1001488" [label="(Identifier,k)"];
"1003150" [label="(Identifier,f)"];
"1000639" [label="(Call,c->codeword_lengths)"];
"1000653" [label="(Call,error(f, VORBIS_outofmem))"];
"1001036" [label="(Call,!compute_codewords(c, lengths, c->entries, values))"];
"1001550" [label="(ControlStructure,if (div > UINT_MAX / (unsigned int) c->lookup_values))"];
"1001695" [label="(Identifier,x)"];
"1001536" [label="(Identifier,c)"];
"1002437" [label="(Literal,1)"];
"1000817" [label="(Call,c->codeword_lengths == NULL)"];
"1003435" [label="(Call,r->end   < actual_size)"];
"1003157" [label="(Literal,0)"];
"1002904" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000149" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001097" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1000685" [label="(Identifier,current_entry)"];
"1001577" [label="(Identifier,div)"];
"1000607" [label="(Call,c->dimensions == 0 && c->entries != 0)"];
"1002780" [label="(Call,(MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1000734" [label="(Call,present = c->sparse ? get_bits(f,1) : 1)"];
"1001501" [label="(Call,val = mults[off])"];
"1002974" [label="(Identifier,j)"];
"1001149" [label="(Call,c->sorted_entries)"];
"1002996" [label="(Call,m->submaps)"];
"1000724" [label="(Literal,0)"];
"1001683" [label="(Call,sizeof(mults[0]))"];
"1003133" [label="(Identifier,f)"];
"1003014" [label="(Identifier,j)"];
"1002131" [label="(Identifier,f)"];
"1000626" [label="(Call,lengths = (uint8 *) setup_temp_malloc(f, c->entries))"];
"1001024" [label="(ControlStructure,if (size > f->setup_temp_memory_required))"];
"1002410" [label="(Identifier,f)"];
"1000897" [label="(Identifier,f)"];
"1002845" [label="(Literal,8)"];
"1002870" [label="(Call,f->channels-1)"];
"1003061" [label="(Identifier,m)"];
"1003297" [label="(Identifier,f)"];
"1000938" [label="(Block,)"];
"1000615" [label="(Identifier,c)"];
"1001375" [label="(ControlStructure,goto skip;)"];
"1002272" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1002721" [label="(Identifier,f)"];
"1000999" [label="(Call,!values)"];
"1003478" [label="(Call,f->temp_memory_required = classify_mem)"];
"1001345" [label="(Identifier,mults)"];
"1003378" [label="(Call,f->blocksize_1)"];
"1003443" [label="(Identifier,actual_size)"];
"1001576" [label="(Call,div *= c->lookup_values)"];
"1002430" [label="(Identifier,low_bits)"];
"1003396" [label="(Call,f->residue_count)"];
"1001603" [label="(Call,sizeof(c->multiplicands[0]))"];
"1002337" [label="(ControlStructure,if (f->residue_types[i] > 2))"];
"1001592" [label="(Call,CHECK(f))"];
"1003452" [label="(Identifier,part_read)"];
"1003129" [label="(Call,m->transformtype)"];
"1002965" [label="(Call,j=0)"];
"1003267" [label="(Identifier,f)"];
"1002379" [label="(Call,get_bits(f,24)+1)"];
"1002709" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1002548" [label="(Call,(uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002975" [label="(Block,)"];
"1000539" [label="(Call,get_bits(f, 8))"];
"1002631" [label="(Call,r->classdata[j])"];
"1000723" [label="(Identifier,j)"];
"1000865" [label="(Identifier,j)"];
"1001687" [label="(Call,c->lookup_values)"];
"1000571" [label="(Call,y = get_bits(f, 8))"];
"1000371" [label="(Call,start_packet(f))"];
"1001883" [label="(Block,)"];
"1003459" [label="(Call,part_read > max_part_read)"];
"1000856" [label="(Identifier,sorted_count)"];
"1000991" [label="(Call,sizeof(*values) * c->sorted_entries)"];
"1000401" [label="(Call,get8_packet(f))"];
"1002793" [label="(ControlStructure,if (m->chan == NULL))"];
"1000622" [label="(ControlStructure,if (c->sparse))"];
"1001290" [label="(Call,c->lookup_values)"];
"1001364" [label="(Identifier,last)"];
"1002034" [label="(Call,g->subclass_books[j][k] >= f->codebook_count)"];
"1002992" [label="(Identifier,m)"];
"1003127" [label="(Literal,16)"];
"1000894" [label="(Identifier,values)"];
"1001391" [label="(Call,c->sorted_entries * c->dimensions)"];
"1001376" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001593" [label="(Identifier,f)"];
"1002939" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000619" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000827" [label="(Call,c->codeword_lengths)"];
"1000826" [label="(Call,memcpy(c->codeword_lengths, lengths, c->entries))"];
"1000896" [label="(Call,CHECK(f))"];
"1001906" [label="(Identifier,f)"];
"1000194" [label="(Call,!getn(f, header, 6))"];
"1002483" [label="(Call,++j)"];
"1000677" [label="(Block,)"];
"1000128" [label="(Identifier,f)"];
"1001779" [label="(Call,get_bits(f, 16))"];
"1001650" [label="(Identifier,val)"];
"1002270" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1002660" [label="(Identifier,f)"];
"1003480" [label="(Identifier,f)"];
"1002363" [label="(ControlStructure,if (r->end < r->begin))"];
"1003491" [label="(Identifier,f)"];
"1000666" [label="(Call,get_bits(f,5) + 1)"];
"1001266" [label="(Call,c->dimensions)"];
"1001054" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002336" [label="(Literal,16)"];
"1000830" [label="(Identifier,lengths)"];
"1000583" [label="(Identifier,f)"];
"1000471" [label="(Literal,0)"];
"1001498" [label="(Identifier,c)"];
"1000449" [label="(Call,sizeof(*f->codebooks))"];
"1000890" [label="(Identifier,c)"];
"1001006" [label="(Identifier,size)"];
"1002402" [label="(Call,r->classbook)"];
"1000574" [label="(Identifier,f)"];
"1000459" [label="(Call,f->codebooks)"];
"1001542" [label="(Call,k+1 < c->dimensions)"];
"1000866" [label="(Literal,0)"];
"1002354" [label="(Identifier,f)"];
"1001100" [label="(Call,sizeof(*c->sorted_values   ))"];
"1001276" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003049" [label="(Call,m->submap_residue[j])"];
"1002598" [label="(Identifier,j)"];
"1000559" [label="(Call,(get_bits(f, 8)<<8) + x)"];
"1002986" [label="(Literal,4)"];
"1002372" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001307" [label="(Call,(int) c->lookup_values)"];
"1001395" [label="(Call,c->dimensions)"];
"1002443" [label="(Call,residue_cascade[j] = high_bits*8 + low_bits)"];
"1000264" [label="(Call,get32(f))"];
"1002799" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002032" [label="(Literal,1)"];
"1003428" [label="(Identifier,r)"];
"1002552" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1000263" [label="(Identifier,f)"];
"1002684" [label="(Call,r->classifications)"];
"1002628" [label="(Identifier,temp)"];
"1001414" [label="(Call,c->entries        * c->dimensions)"];
"1003120" [label="(Literal,1)"];
"1002454" -> "1002452"  [label="AST: "];
"1002454" -> "1002461"  [label="CFG: "];
"1002455" -> "1002454"  [label="AST: "];
"1002461" -> "1002454"  [label="AST: "];
"1002452" -> "1002454"  [label="CFG: "];
"1002454" -> "1003546"  [label="DDG: r->classifications"];
"1002454" -> "1002452"  [label="DDG: r->classifications"];
"1002416" -> "1002454"  [label="DDG: r->classifications"];
"1002454" -> "1002478"  [label="DDG: r->classifications"];
"1002416" -> "1002412"  [label="AST: "];
"1002416" -> "1002418"  [label="CFG: "];
"1002417" -> "1002416"  [label="AST: "];
"1002418" -> "1002416"  [label="AST: "];
"1002426" -> "1002416"  [label="CFG: "];
"1002453" -> "1002416"  [label="CFG: "];
"1002416" -> "1003546"  [label="DDG: j"];
"1002416" -> "1003546"  [label="DDG: j < r->classifications"];
"1002413" -> "1002416"  [label="DDG: j"];
"1002421" -> "1002416"  [label="DDG: j"];
"1002384" -> "1002416"  [label="DDG: r->classifications"];
"1002416" -> "1002421"  [label="DDG: j"];
"1002413" -> "1002412"  [label="AST: "];
"1002413" -> "1002415"  [label="CFG: "];
"1002414" -> "1002413"  [label="AST: "];
"1002415" -> "1002413"  [label="AST: "];
"1002417" -> "1002413"  [label="CFG: "];
"1002421" -> "1002412"  [label="AST: "];
"1002421" -> "1002422"  [label="CFG: "];
"1002422" -> "1002421"  [label="AST: "];
"1002417" -> "1002421"  [label="CFG: "];
"1002384" -> "1002318"  [label="AST: "];
"1002384" -> "1002388"  [label="CFG: "];
"1002385" -> "1002384"  [label="AST: "];
"1002388" -> "1002384"  [label="AST: "];
"1002395" -> "1002384"  [label="CFG: "];
"1002384" -> "1003546"  [label="DDG: r->classifications"];
"1002384" -> "1003546"  [label="DDG: get_bits(f,6)+1"];
"1002389" -> "1002384"  [label="DDG: f"];
"1002389" -> "1002384"  [label="DDG: 6"];
"1002389" -> "1002388"  [label="AST: "];
"1002389" -> "1002391"  [label="CFG: "];
"1002390" -> "1002389"  [label="AST: "];
"1002391" -> "1002389"  [label="AST: "];
"1002392" -> "1002389"  [label="CFG: "];
"1002389" -> "1002388"  [label="DDG: f"];
"1002389" -> "1002388"  [label="DDG: 6"];
"1002380" -> "1002389"  [label="DDG: f"];
"1000108" -> "1002389"  [label="DDG: f"];
"1002389" -> "1002397"  [label="DDG: f"];
"1002380" -> "1002379"  [label="AST: "];
"1002380" -> "1002382"  [label="CFG: "];
"1002381" -> "1002380"  [label="AST: "];
"1002382" -> "1002380"  [label="AST: "];
"1002383" -> "1002380"  [label="CFG: "];
"1002380" -> "1002375"  [label="DDG: f"];
"1002380" -> "1002375"  [label="DDG: 24"];
"1002380" -> "1002379"  [label="DDG: f"];
"1002380" -> "1002379"  [label="DDG: 24"];
"1002360" -> "1002380"  [label="DDG: f"];
"1000108" -> "1002380"  [label="DDG: f"];
"1002360" -> "1002356"  [label="AST: "];
"1002360" -> "1002362"  [label="CFG: "];
"1002361" -> "1002360"  [label="AST: "];
"1002362" -> "1002360"  [label="AST: "];
"1002356" -> "1002360"  [label="CFG: "];
"1002360" -> "1002356"  [label="DDG: f"];
"1002360" -> "1002356"  [label="DDG: 24"];
"1002353" -> "1002360"  [label="DDG: f"];
"1000108" -> "1002360"  [label="DDG: f"];
"1002360" -> "1002372"  [label="DDG: f"];
"1002353" -> "1002349"  [label="AST: "];
"1002353" -> "1002355"  [label="CFG: "];
"1002354" -> "1002353"  [label="AST: "];
"1002355" -> "1002353"  [label="AST: "];
"1002349" -> "1002353"  [label="CFG: "];
"1002353" -> "1002349"  [label="DDG: f"];
"1002353" -> "1002349"  [label="DDG: 24"];
"1002334" -> "1002353"  [label="DDG: f"];
"1000108" -> "1002353"  [label="DDG: f"];
"1002334" -> "1002328"  [label="AST: "];
"1002334" -> "1002336"  [label="CFG: "];
"1002335" -> "1002334"  [label="AST: "];
"1002336" -> "1002334"  [label="AST: "];
"1002328" -> "1002334"  [label="CFG: "];
"1002334" -> "1002328"  [label="DDG: f"];
"1002334" -> "1002328"  [label="DDG: 16"];
"1002550" -> "1002334"  [label="DDG: f"];
"1002638" -> "1002334"  [label="DDG: f"];
"1002270" -> "1002334"  [label="DDG: f"];
"1000108" -> "1002334"  [label="DDG: f"];
"1002334" -> "1002346"  [label="DDG: f"];
"1002550" -> "1002548"  [label="AST: "];
"1002550" -> "1002552"  [label="CFG: "];
"1002551" -> "1002550"  [label="AST: "];
"1002552" -> "1002550"  [label="AST: "];
"1002548" -> "1002550"  [label="CFG: "];
"1002550" -> "1003546"  [label="DDG: sizeof(*r->classdata) * f->codebooks[r->classbook].entries"];
"1002550" -> "1002548"  [label="DDG: f"];
"1002550" -> "1002548"  [label="DDG: sizeof(*r->classdata) * f->codebooks[r->classbook].entries"];
"1002452" -> "1002550"  [label="DDG: f"];
"1002513" -> "1002550"  [label="DDG: f"];
"1000108" -> "1002550"  [label="DDG: f"];
"1002552" -> "1002550"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002550" -> "1002573"  [label="DDG: f"];
"1002550" -> "1002638"  [label="DDG: f"];
"1002550" -> "1002697"  [label="DDG: f"];
"1002452" -> "1002318"  [label="AST: "];
"1002453" -> "1002452"  [label="AST: "];
"1002467" -> "1002452"  [label="CFG: "];
"1002452" -> "1003546"  [label="DDG: sizeof(r->residue_books[0]) * r->classifications"];
"1002452" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications)"];
"1002440" -> "1002452"  [label="DDG: f"];
"1002397" -> "1002452"  [label="DDG: f"];
"1002435" -> "1002452"  [label="DDG: f"];
"1000108" -> "1002452"  [label="DDG: f"];
"1002452" -> "1002471"  [label="DDG: f"];
"1002452" -> "1002513"  [label="DDG: f"];
"1002440" -> "1002438"  [label="AST: "];
"1002440" -> "1002442"  [label="CFG: "];
"1002441" -> "1002440"  [label="AST: "];
"1002442" -> "1002440"  [label="AST: "];
"1002438" -> "1002440"  [label="CFG: "];
"1002440" -> "1002431"  [label="DDG: f"];
"1002440" -> "1002438"  [label="DDG: f"];
"1002440" -> "1002438"  [label="DDG: 5"];
"1002435" -> "1002440"  [label="DDG: f"];
"1000108" -> "1002440"  [label="DDG: f"];
"1002435" -> "1002434"  [label="AST: "];
"1002435" -> "1002437"  [label="CFG: "];
"1002436" -> "1002435"  [label="AST: "];
"1002437" -> "1002435"  [label="AST: "];
"1002439" -> "1002435"  [label="CFG: "];
"1002445" -> "1002435"  [label="CFG: "];
"1002435" -> "1003546"  [label="DDG: get_bits(f,1)"];
"1002435" -> "1002431"  [label="DDG: f"];
"1002431" -> "1002435"  [label="DDG: f"];
"1000108" -> "1002435"  [label="DDG: f"];
"1002431" -> "1002429"  [label="AST: "];
"1002431" -> "1002433"  [label="CFG: "];
"1002432" -> "1002431"  [label="AST: "];
"1002433" -> "1002431"  [label="AST: "];
"1002429" -> "1002431"  [label="CFG: "];
"1002431" -> "1002429"  [label="DDG: f"];
"1002431" -> "1002429"  [label="DDG: 3"];
"1002397" -> "1002431"  [label="DDG: f"];
"1000108" -> "1002431"  [label="DDG: f"];
"1002397" -> "1002393"  [label="AST: "];
"1002397" -> "1002399"  [label="CFG: "];
"1002398" -> "1002397"  [label="AST: "];
"1002399" -> "1002397"  [label="AST: "];
"1002393" -> "1002397"  [label="CFG: "];
"1002397" -> "1002393"  [label="DDG: f"];
"1002397" -> "1002393"  [label="DDG: 8"];
"1000108" -> "1002397"  [label="DDG: f"];
"1002397" -> "1002409"  [label="DDG: f"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1003546"  [label="DDG: f"];
"1000108" -> "1000127"  [label="DDG: f"];
"1000108" -> "1000139"  [label="DDG: f"];
"1000108" -> "1000149"  [label="DDG: f"];
"1000108" -> "1000159"  [label="DDG: f"];
"1000108" -> "1000169"  [label="DDG: f"];
"1000108" -> "1000181"  [label="DDG: f"];
"1000108" -> "1000186"  [label="DDG: f"];
"1000108" -> "1000190"  [label="DDG: f"];
"1000108" -> "1000195"  [label="DDG: f"];
"1000108" -> "1000200"  [label="DDG: f"];
"1000108" -> "1000208"  [label="DDG: f"];
"1000108" -> "1000213"  [label="DDG: f"];
"1000108" -> "1000217"  [label="DDG: f"];
"1000108" -> "1000224"  [label="DDG: f"];
"1000108" -> "1000232"  [label="DDG: f"];
"1000108" -> "1000242"  [label="DDG: f"];
"1000108" -> "1000249"  [label="DDG: f"];
"1000108" -> "1000257"  [label="DDG: f"];
"1000108" -> "1000260"  [label="DDG: f"];
"1000108" -> "1000262"  [label="DDG: f"];
"1000108" -> "1000264"  [label="DDG: f"];
"1000108" -> "1000268"  [label="DDG: f"];
"1000108" -> "1000306"  [label="DDG: f"];
"1000108" -> "1000318"  [label="DDG: f"];
"1000108" -> "1000326"  [label="DDG: f"];
"1000108" -> "1000331"  [label="DDG: f"];
"1000108" -> "1000339"  [label="DDG: f"];
"1000108" -> "1000344"  [label="DDG: f"];
"1000108" -> "1000350"  [label="DDG: f"];
"1000108" -> "1000358"  [label="DDG: f"];
"1000108" -> "1000360"  [label="DDG: f"];
"1000108" -> "1000371"  [label="DDG: f"];
"1000108" -> "1000376"  [label="DDG: f"];
"1000108" -> "1000381"  [label="DDG: f"];
"1000108" -> "1000401"  [label="DDG: f"];
"1000108" -> "1000405"  [label="DDG: f"];
"1000108" -> "1000421"  [label="DDG: f"];
"1000108" -> "1000428"  [label="DDG: f"];
"1000108" -> "1000436"  [label="DDG: f"];
"1000108" -> "1000446"  [label="DDG: f"];
"1000108" -> "1000464"  [label="DDG: f"];
"1000108" -> "1000509"  [label="DDG: f"];
"1000108" -> "1000513"  [label="DDG: f"];
"1000108" -> "1000521"  [label="DDG: f"];
"1000108" -> "1000526"  [label="DDG: f"];
"1000108" -> "1000534"  [label="DDG: f"];
"1000108" -> "1000539"  [label="DDG: f"];
"1000108" -> "1000547"  [label="DDG: f"];
"1000108" -> "1000552"  [label="DDG: f"];
"1000108" -> "1000561"  [label="DDG: f"];
"1000108" -> "1000568"  [label="DDG: f"];
"1000108" -> "1000573"  [label="DDG: f"];
"1000108" -> "1000582"  [label="DDG: f"];
"1000108" -> "1000593"  [label="DDG: f"];
"1000108" -> "1000603"  [label="DDG: f"];
"1000108" -> "1000619"  [label="DDG: f"];
"1000108" -> "1000630"  [label="DDG: f"];
"1000108" -> "1000644"  [label="DDG: f"];
"1000108" -> "1000653"  [label="DDG: f"];
"1000108" -> "1000667"  [label="DDG: f"];
"1000108" -> "1000689"  [label="DDG: f"];
"1000108" -> "1000705"  [label="DDG: f"];
"1000108" -> "1000740"  [label="DDG: f"];
"1000108" -> "1000752"  [label="DDG: f"];
"1000108" -> "1000765"  [label="DDG: f"];
"1000108" -> "1000811"  [label="DDG: f"];
"1000108" -> "1000823"  [label="DDG: f"];
"1000108" -> "1000834"  [label="DDG: f"];
"1000108" -> "1000896"  [label="DDG: f"];
"1000108" -> "1000910"  [label="DDG: f"];
"1000108" -> "1000928"  [label="DDG: f"];
"1000108" -> "1000945"  [label="DDG: f"];
"1000108" -> "1000956"  [label="DDG: f"];
"1000108" -> "1000965"  [label="DDG: f"];
"1000108" -> "1000982"  [label="DDG: f"];
"1000108" -> "1000989"  [label="DDG: f"];
"1000108" -> "1001002"  [label="DDG: f"];
"1000108" -> "1001049"  [label="DDG: f"];
"1000108" -> "1001054"  [label="DDG: f"];
"1000108" -> "1001068"  [label="DDG: f"];
"1000108" -> "1001088"  [label="DDG: f"];
"1000108" -> "1001097"  [label="DDG: f"];
"1000108" -> "1001117"  [label="DDG: f"];
"1000108" -> "1001142"  [label="DDG: f"];
"1000108" -> "1001152"  [label="DDG: f"];
"1000108" -> "1001166"  [label="DDG: f"];
"1000108" -> "1001179"  [label="DDG: f"];
"1000108" -> "1001185"  [label="DDG: f"];
"1000108" -> "1001195"  [label="DDG: f"];
"1000108" -> "1001211"  [label="DDG: f"];
"1000108" -> "1001219"  [label="DDG: f"];
"1000108" -> "1001227"  [label="DDG: f"];
"1000108" -> "1001235"  [label="DDG: f"];
"1000108" -> "1001276"  [label="DDG: f"];
"1000108" -> "1001283"  [label="DDG: f"];
"1000108" -> "1001298"  [label="DDG: f"];
"1000108" -> "1001318"  [label="DDG: f"];
"1000108" -> "1001328"  [label="DDG: f"];
"1000108" -> "1001340"  [label="DDG: f"];
"1000108" -> "1001382"  [label="DDG: f"];
"1000108" -> "1001405"  [label="DDG: f"];
"1000108" -> "1001428"  [label="DDG: f"];
"1000108" -> "1001440"  [label="DDG: f"];
"1000108" -> "1001561"  [label="DDG: f"];
"1000108" -> "1001573"  [label="DDG: f"];
"1000108" -> "1001592"  [label="DDG: f"];
"1000108" -> "1001600"  [label="DDG: f"];
"1000108" -> "1001619"  [label="DDG: f"];
"1000108" -> "1001631"  [label="DDG: f"];
"1000108" -> "1001679"  [label="DDG: f"];
"1000108" -> "1001690"  [label="DDG: f"];
"1000108" -> "1001692"  [label="DDG: f"];
"1000108" -> "1001697"  [label="DDG: f"];
"1000108" -> "1001714"  [label="DDG: f"];
"1000108" -> "1001722"  [label="DDG: f"];
"1000108" -> "1001730"  [label="DDG: f"];
"1000108" -> "1001740"  [label="DDG: f"];
"1000108" -> "1001758"  [label="DDG: f"];
"1000108" -> "1001779"  [label="DDG: f"];
"1000108" -> "1001791"  [label="DDG: f"];
"1000108" -> "1001818"  [label="DDG: f"];
"1000108" -> "1001825"  [label="DDG: f"];
"1000108" -> "1001832"  [label="DDG: f"];
"1000108" -> "1001839"  [label="DDG: f"];
"1000108" -> "1001846"  [label="DDG: f"];
"1000108" -> "1001854"  [label="DDG: f"];
"1000108" -> "1001875"  [label="DDG: f"];
"1000108" -> "1001879"  [label="DDG: f"];
"1000108" -> "1001905"  [label="DDG: f"];
"1000108" -> "1001926"  [label="DDG: f"];
"1000108" -> "1001961"  [label="DDG: f"];
"1000108" -> "1001971"  [label="DDG: f"];
"1000108" -> "1001987"  [label="DDG: f"];
"1000108" -> "1002001"  [label="DDG: f"];
"1000108" -> "1002029"  [label="DDG: f"];
"1000108" -> "1002046"  [label="DDG: f"];
"1000108" -> "1002054"  [label="DDG: f"];
"1000108" -> "1002062"  [label="DDG: f"];
"1000108" -> "1002130"  [label="DDG: f"];
"1000108" -> "1002260"  [label="DDG: f"];
"1000108" -> "1002270"  [label="DDG: f"];
"1000108" -> "1002289"  [label="DDG: f"];
"1000108" -> "1002346"  [label="DDG: f"];
"1000108" -> "1002372"  [label="DDG: f"];
"1000108" -> "1002409"  [label="DDG: f"];
"1000108" -> "1002471"  [label="DDG: f"];
"1000108" -> "1002513"  [label="DDG: f"];
"1000108" -> "1002529"  [label="DDG: f"];
"1000108" -> "1002573"  [label="DDG: f"];
"1000108" -> "1002638"  [label="DDG: f"];
"1000108" -> "1002659"  [label="DDG: f"];
"1000108" -> "1002697"  [label="DDG: f"];
"1000108" -> "1002707"  [label="DDG: f"];
"1000108" -> "1002725"  [label="DDG: f"];
"1000108" -> "1002765"  [label="DDG: f"];
"1000108" -> "1002773"  [label="DDG: f"];
"1000108" -> "1002782"  [label="DDG: f"];
"1000108" -> "1002800"  [label="DDG: f"];
"1000108" -> "1002804"  [label="DDG: f"];
"1000108" -> "1002812"  [label="DDG: f"];
"1000108" -> "1002834"  [label="DDG: f"];
"1000108" -> "1002843"  [label="DDG: f"];
"1000108" -> "1002867"  [label="DDG: f"];
"1000108" -> "1002883"  [label="DDG: f"];
"1000108" -> "1002904"  [label="DDG: f"];
"1000108" -> "1002920"  [label="DDG: f"];
"1000108" -> "1002940"  [label="DDG: f"];
"1000108" -> "1002950"  [label="DDG: f"];
"1000108" -> "1002954"  [label="DDG: f"];
"1000108" -> "1002984"  [label="DDG: f"];
"1000108" -> "1003000"  [label="DDG: f"];
"1000108" -> "1003036"  [label="DDG: f"];
"1000108" -> "1003045"  [label="DDG: f"];
"1000108" -> "1003054"  [label="DDG: f"];
"1000108" -> "1003068"  [label="DDG: f"];
"1000108" -> "1003082"  [label="DDG: f"];
"1000108" -> "1003090"  [label="DDG: f"];
"1000108" -> "1003118"  [label="DDG: f"];
"1000108" -> "1003125"  [label="DDG: f"];
"1000108" -> "1003132"  [label="DDG: f"];
"1000108" -> "1003139"  [label="DDG: f"];
"1000108" -> "1003149"  [label="DDG: f"];
"1000108" -> "1003159"  [label="DDG: f"];
"1000108" -> "1003171"  [label="DDG: f"];
"1000108" -> "1003174"  [label="DDG: f"];
"1000108" -> "1003201"  [label="DDG: f"];
"1000108" -> "1003217"  [label="DDG: f"];
"1000108" -> "1003235"  [label="DDG: f"];
"1000108" -> "1003266"  [label="DDG: f"];
"1000108" -> "1003277"  [label="DDG: f"];
"1000108" -> "1003296"  [label="DDG: f"];
"1000108" -> "1003301"  [label="DDG: f"];
"1000108" -> "1003311"  [label="DDG: f"];
"1000108" -> "1003535"  [label="DDG: f"];
"1000108" -> "1003542"  [label="DDG: f"];
"1002513" -> "1002505"  [label="AST: "];
"1002513" -> "1002515"  [label="CFG: "];
"1002514" -> "1002513"  [label="AST: "];
"1002515" -> "1002513"  [label="AST: "];
"1002505" -> "1002513"  [label="CFG: "];
"1002513" -> "1002505"  [label="DDG: f"];
"1002513" -> "1002505"  [label="DDG: 8"];
"1002513" -> "1002529"  [label="DDG: f"];
"1002552" -> "1002558"  [label="CFG: "];
"1002553" -> "1002552"  [label="AST: "];
"1002558" -> "1002552"  [label="AST: "];
"1002552" -> "1003546"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002600" -> "1002552"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002552" -> "1002581"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002600" -> "1002596"  [label="AST: "];
"1002600" -> "1002602"  [label="CFG: "];
"1002601" -> "1002600"  [label="AST: "];
"1002602" -> "1002600"  [label="AST: "];
"1002616" -> "1002600"  [label="CFG: "];
"1002317" -> "1002600"  [label="CFG: "];
"1002600" -> "1003546"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002600" -> "1003546"  [label="DDG: j"];
"1002600" -> "1003546"  [label="DDG: j < f->codebooks[r->classbook].entries"];
"1002597" -> "1002600"  [label="DDG: j"];
"1002611" -> "1002600"  [label="DDG: j"];
"1002581" -> "1002600"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002600" -> "1002611"  [label="DDG: j"];
"1002600" -> "1002627"  [label="DDG: j"];
"1002597" -> "1002596"  [label="AST: "];
"1002597" -> "1002599"  [label="CFG: "];
"1002598" -> "1002597"  [label="AST: "];
"1002599" -> "1002597"  [label="AST: "];
"1002601" -> "1002597"  [label="CFG: "];
"1002611" -> "1002596"  [label="AST: "];
"1002611" -> "1002612"  [label="CFG: "];
"1002612" -> "1002611"  [label="AST: "];
"1002601" -> "1002611"  [label="CFG: "];
"1002581" -> "1002576"  [label="AST: "];
"1002581" -> "1002587"  [label="CFG: "];
"1002582" -> "1002581"  [label="AST: "];
"1002587" -> "1002581"  [label="AST: "];
"1002576" -> "1002581"  [label="CFG: "];
"1002581" -> "1002576"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002638" -> "1002636"  [label="AST: "];
"1002638" -> "1002640"  [label="CFG: "];
"1002639" -> "1002638"  [label="AST: "];
"1002640" -> "1002638"  [label="AST: "];
"1002636" -> "1002638"  [label="CFG: "];
"1002638" -> "1003546"  [label="DDG: sizeof(r->classdata[j][0]) * classwords"];
"1002638" -> "1002636"  [label="DDG: f"];
"1002638" -> "1002636"  [label="DDG: sizeof(r->classdata[j][0]) * classwords"];
"1002640" -> "1002638"  [label="DDG: classwords"];
"1002638" -> "1002659"  [label="DDG: f"];
"1002638" -> "1002697"  [label="DDG: f"];
"1002640" -> "1002649"  [label="CFG: "];
"1002641" -> "1002640"  [label="AST: "];
"1002649" -> "1002640"  [label="AST: "];
"1002640" -> "1003546"  [label="DDG: classwords"];
"1002615" -> "1002640"  [label="DDG: classwords"];
"1002640" -> "1002665"  [label="DDG: classwords"];
"1002615" -> "1002613"  [label="AST: "];
"1002615" -> "1002617"  [label="CFG: "];
"1002616" -> "1002615"  [label="AST: "];
"1002617" -> "1002615"  [label="AST: "];
"1002628" -> "1002615"  [label="CFG: "];
"1002615" -> "1003546"  [label="DDG: f->codebooks[r->classbook].dimensions"];
"1002270" -> "1002268"  [label="AST: "];
"1002270" -> "1002272"  [label="CFG: "];
"1002271" -> "1002270"  [label="AST: "];
"1002272" -> "1002270"  [label="AST: "];
"1002268" -> "1002270"  [label="CFG: "];
"1002270" -> "1003546"  [label="DDG: f->residue_count * sizeof(f->residue_config[0])"];
"1002270" -> "1002268"  [label="DDG: f"];
"1002270" -> "1002268"  [label="DDG: f->residue_count * sizeof(f->residue_config[0])"];
"1002260" -> "1002270"  [label="DDG: f"];
"1002272" -> "1002270"  [label="DDG: f->residue_count"];
"1002270" -> "1002289"  [label="DDG: f"];
"1002270" -> "1002697"  [label="DDG: f"];
"1002260" -> "1002259"  [label="AST: "];
"1002260" -> "1002262"  [label="CFG: "];
"1002261" -> "1002260"  [label="AST: "];
"1002262" -> "1002260"  [label="AST: "];
"1002263" -> "1002260"  [label="CFG: "];
"1002260" -> "1002255"  [label="DDG: f"];
"1002260" -> "1002255"  [label="DDG: 6"];
"1002260" -> "1002259"  [label="DDG: f"];
"1002260" -> "1002259"  [label="DDG: 6"];
"1002130" -> "1002260"  [label="DDG: f"];
"1002062" -> "1002260"  [label="DDG: f"];
"1001740" -> "1002260"  [label="DDG: f"];
"1002130" -> "1002122"  [label="AST: "];
"1002130" -> "1002132"  [label="CFG: "];
"1002131" -> "1002130"  [label="AST: "];
"1002132" -> "1002130"  [label="AST: "];
"1002122" -> "1002130"  [label="CFG: "];
"1002130" -> "1003546"  [label="DDG: g->rangebits"];
"1002130" -> "1001779"  [label="DDG: f"];
"1002130" -> "1002122"  [label="DDG: f"];
"1002130" -> "1002122"  [label="DDG: g->rangebits"];
"1002062" -> "1002130"  [label="DDG: f"];
"1002078" -> "1002130"  [label="DDG: g->rangebits"];
"1002062" -> "1002058"  [label="AST: "];
"1002062" -> "1002064"  [label="CFG: "];
"1002063" -> "1002062"  [label="AST: "];
"1002064" -> "1002062"  [label="AST: "];
"1002058" -> "1002062"  [label="CFG: "];
"1002062" -> "1001779"  [label="DDG: f"];
"1002062" -> "1002058"  [label="DDG: f"];
"1002062" -> "1002058"  [label="DDG: 4"];
"1002054" -> "1002062"  [label="DDG: f"];
"1002054" -> "1002053"  [label="AST: "];
"1002054" -> "1002056"  [label="CFG: "];
"1002055" -> "1002054"  [label="AST: "];
"1002056" -> "1002054"  [label="AST: "];
"1002057" -> "1002054"  [label="CFG: "];
"1002054" -> "1002049"  [label="DDG: f"];
"1002054" -> "1002049"  [label="DDG: 2"];
"1002054" -> "1002053"  [label="DDG: f"];
"1002054" -> "1002053"  [label="DDG: 2"];
"1002029" -> "1002054"  [label="DDG: f"];
"1001987" -> "1002054"  [label="DDG: f"];
"1001971" -> "1002054"  [label="DDG: f"];
"1001926" -> "1002054"  [label="DDG: f"];
"1001905" -> "1002054"  [label="DDG: f"];
"1002029" -> "1002028"  [label="AST: "];
"1002029" -> "1002031"  [label="CFG: "];
"1002030" -> "1002029"  [label="AST: "];
"1002031" -> "1002029"  [label="AST: "];
"1002032" -> "1002029"  [label="CFG: "];
"1002029" -> "1001961"  [label="DDG: f"];
"1002029" -> "1002028"  [label="DDG: f"];
"1002029" -> "1002028"  [label="DDG: 8"];
"1001987" -> "1002029"  [label="DDG: f"];
"1001971" -> "1002029"  [label="DDG: f"];
"1002029" -> "1002046"  [label="DDG: f"];
"1001987" -> "1001981"  [label="AST: "];
"1001987" -> "1001989"  [label="CFG: "];
"1001988" -> "1001987"  [label="AST: "];
"1001989" -> "1001987"  [label="AST: "];
"1001981" -> "1001987"  [label="CFG: "];
"1001987" -> "1001961"  [label="DDG: f"];
"1001987" -> "1001981"  [label="DDG: f"];
"1001987" -> "1001981"  [label="DDG: 8"];
"1001971" -> "1001987"  [label="DDG: f"];
"1001987" -> "1002001"  [label="DDG: f"];
"1001971" -> "1001965"  [label="AST: "];
"1001971" -> "1001973"  [label="CFG: "];
"1001972" -> "1001971"  [label="AST: "];
"1001973" -> "1001971"  [label="AST: "];
"1001965" -> "1001971"  [label="CFG: "];
"1001971" -> "1001961"  [label="DDG: f"];
"1001971" -> "1001965"  [label="DDG: f"];
"1001971" -> "1001965"  [label="DDG: 2"];
"1001961" -> "1001971"  [label="DDG: f"];
"1001961" -> "1001960"  [label="AST: "];
"1001961" -> "1001963"  [label="CFG: "];
"1001962" -> "1001961"  [label="AST: "];
"1001963" -> "1001961"  [label="AST: "];
"1001964" -> "1001961"  [label="CFG: "];
"1001961" -> "1001954"  [label="DDG: f"];
"1001961" -> "1001954"  [label="DDG: 3"];
"1001961" -> "1001960"  [label="DDG: f"];
"1001961" -> "1001960"  [label="DDG: 3"];
"1001926" -> "1001961"  [label="DDG: f"];
"1001905" -> "1001961"  [label="DDG: f"];
"1001926" -> "1001920"  [label="AST: "];
"1001926" -> "1001928"  [label="CFG: "];
"1001927" -> "1001926"  [label="AST: "];
"1001928" -> "1001926"  [label="AST: "];
"1001920" -> "1001926"  [label="CFG: "];
"1001926" -> "1001920"  [label="DDG: f"];
"1001926" -> "1001920"  [label="DDG: 4"];
"1001905" -> "1001926"  [label="DDG: f"];
"1001905" -> "1001901"  [label="AST: "];
"1001905" -> "1001907"  [label="CFG: "];
"1001906" -> "1001905"  [label="AST: "];
"1001907" -> "1001905"  [label="AST: "];
"1001901" -> "1001905"  [label="CFG: "];
"1001905" -> "1001901"  [label="DDG: f"];
"1001905" -> "1001901"  [label="DDG: 5"];
"1001779" -> "1001905"  [label="DDG: f"];
"1001779" -> "1001773"  [label="AST: "];
"1001779" -> "1001781"  [label="CFG: "];
"1001780" -> "1001779"  [label="AST: "];
"1001781" -> "1001779"  [label="AST: "];
"1001773" -> "1001779"  [label="CFG: "];
"1001779" -> "1001773"  [label="DDG: f"];
"1001779" -> "1001773"  [label="DDG: 16"];
"1001740" -> "1001779"  [label="DDG: f"];
"1001779" -> "1001791"  [label="DDG: f"];
"1001779" -> "1001818"  [label="DDG: f"];
"1001740" -> "1001738"  [label="AST: "];
"1001740" -> "1001742"  [label="CFG: "];
"1001741" -> "1001740"  [label="AST: "];
"1001742" -> "1001740"  [label="AST: "];
"1001738" -> "1001740"  [label="CFG: "];
"1001740" -> "1003546"  [label="DDG: f->floor_count * sizeof(*f->floor_config)"];
"1001740" -> "1001738"  [label="DDG: f"];
"1001740" -> "1001738"  [label="DDG: f->floor_count * sizeof(*f->floor_config)"];
"1001730" -> "1001740"  [label="DDG: f"];
"1001742" -> "1001740"  [label="DDG: f->floor_count"];
"1001740" -> "1001758"  [label="DDG: f"];
"1001730" -> "1001729"  [label="AST: "];
"1001730" -> "1001732"  [label="CFG: "];
"1001731" -> "1001730"  [label="AST: "];
"1001732" -> "1001730"  [label="AST: "];
"1001733" -> "1001730"  [label="CFG: "];
"1001730" -> "1001725"  [label="DDG: f"];
"1001730" -> "1001725"  [label="DDG: 6"];
"1001730" -> "1001729"  [label="DDG: f"];
"1001730" -> "1001729"  [label="DDG: 6"];
"1001697" -> "1001730"  [label="DDG: f"];
"1001714" -> "1001730"  [label="DDG: f"];
"1001697" -> "1001696"  [label="AST: "];
"1001697" -> "1001699"  [label="CFG: "];
"1001698" -> "1001697"  [label="AST: "];
"1001699" -> "1001697"  [label="AST: "];
"1001700" -> "1001697"  [label="CFG: "];
"1001697" -> "1001694"  [label="DDG: f"];
"1001697" -> "1001694"  [label="DDG: 6"];
"1001697" -> "1001696"  [label="DDG: f"];
"1001697" -> "1001696"  [label="DDG: 6"];
"1001692" -> "1001697"  [label="DDG: f"];
"1000446" -> "1001697"  [label="DDG: f"];
"1001697" -> "1001714"  [label="DDG: f"];
"1001692" -> "1000492"  [label="AST: "];
"1001692" -> "1001693"  [label="CFG: "];
"1001693" -> "1001692"  [label="AST: "];
"1000491" -> "1001692"  [label="CFG: "];
"1001692" -> "1003546"  [label="DDG: CHECK(f)"];
"1001692" -> "1000509"  [label="DDG: f"];
"1001185" -> "1001692"  [label="DDG: f"];
"1001690" -> "1001692"  [label="DDG: f"];
"1001185" -> "1001181"  [label="AST: "];
"1001185" -> "1001187"  [label="CFG: "];
"1001186" -> "1001185"  [label="AST: "];
"1001187" -> "1001185"  [label="AST: "];
"1001181" -> "1001185"  [label="CFG: "];
"1001185" -> "1001181"  [label="DDG: f"];
"1001185" -> "1001181"  [label="DDG: 4"];
"1001179" -> "1001185"  [label="DDG: f"];
"1001185" -> "1001195"  [label="DDG: f"];
"1001185" -> "1001211"  [label="DDG: f"];
"1001179" -> "1000492"  [label="AST: "];
"1001179" -> "1001180"  [label="CFG: "];
"1001180" -> "1001179"  [label="AST: "];
"1001183" -> "1001179"  [label="CFG: "];
"1001179" -> "1003546"  [label="DDG: CHECK(f)"];
"1000896" -> "1001179"  [label="DDG: f"];
"1000910" -> "1001179"  [label="DDG: f"];
"1001166" -> "1001179"  [label="DDG: f"];
"1001097" -> "1001179"  [label="DDG: f"];
"1000989" -> "1001179"  [label="DDG: f"];
"1000896" -> "1000492"  [label="AST: "];
"1000896" -> "1000897"  [label="CFG: "];
"1000897" -> "1000896"  [label="AST: "];
"1000901" -> "1000896"  [label="CFG: "];
"1000896" -> "1003546"  [label="DDG: CHECK(f)"];
"1000667" -> "1000896"  [label="DDG: f"];
"1000689" -> "1000896"  [label="DDG: f"];
"1000630" -> "1000896"  [label="DDG: f"];
"1000752" -> "1000896"  [label="DDG: f"];
"1000834" -> "1000896"  [label="DDG: f"];
"1000740" -> "1000896"  [label="DDG: f"];
"1000644" -> "1000896"  [label="DDG: f"];
"1000896" -> "1000910"  [label="DDG: f"];
"1000896" -> "1000945"  [label="DDG: f"];
"1000896" -> "1001049"  [label="DDG: f"];
"1000896" -> "1001054"  [label="DDG: f"];
"1000896" -> "1001068"  [label="DDG: f"];
"1000896" -> "1001142"  [label="DDG: f"];
"1000667" -> "1000666"  [label="AST: "];
"1000667" -> "1000669"  [label="CFG: "];
"1000668" -> "1000667"  [label="AST: "];
"1000669" -> "1000667"  [label="AST: "];
"1000670" -> "1000667"  [label="CFG: "];
"1000667" -> "1000664"  [label="DDG: f"];
"1000667" -> "1000664"  [label="DDG: 5"];
"1000667" -> "1000666"  [label="DDG: f"];
"1000667" -> "1000666"  [label="DDG: 5"];
"1000630" -> "1000667"  [label="DDG: f"];
"1000644" -> "1000667"  [label="DDG: f"];
"1000667" -> "1000689"  [label="DDG: f"];
"1000667" -> "1000811"  [label="DDG: f"];
"1000630" -> "1000628"  [label="AST: "];
"1000630" -> "1000632"  [label="CFG: "];
"1000631" -> "1000630"  [label="AST: "];
"1000632" -> "1000630"  [label="AST: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000630" -> "1003546"  [label="DDG: c->entries"];
"1000630" -> "1000628"  [label="DDG: f"];
"1000630" -> "1000628"  [label="DDG: c->entries"];
"1000603" -> "1000630"  [label="DDG: f"];
"1000593" -> "1000630"  [label="DDG: f"];
"1000613" -> "1000630"  [label="DDG: c->entries"];
"1000576" -> "1000630"  [label="DDG: c->entries"];
"1000630" -> "1000653"  [label="DDG: f"];
"1000630" -> "1000672"  [label="DDG: c->entries"];
"1000630" -> "1000725"  [label="DDG: c->entries"];
"1000630" -> "1000740"  [label="DDG: f"];
"1000630" -> "1000752"  [label="DDG: f"];
"1000630" -> "1000811"  [label="DDG: f"];
"1000603" -> "1000600"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000600" -> "1000603"  [label="CFG: "];
"1000603" -> "1000596"  [label="DDG: f"];
"1000603" -> "1000596"  [label="DDG: 1"];
"1000603" -> "1000600"  [label="DDG: f"];
"1000603" -> "1000600"  [label="DDG: 1"];
"1000593" -> "1000603"  [label="DDG: f"];
"1000603" -> "1000619"  [label="DDG: f"];
"1000603" -> "1000644"  [label="DDG: f"];
"1000603" -> "1000734"  [label="DDG: f"];
"1000603" -> "1000734"  [label="DDG: 1"];
"1000603" -> "1000736"  [label="DDG: f"];
"1000603" -> "1000736"  [label="DDG: 1"];
"1000593" -> "1000591"  [label="AST: "];
"1000593" -> "1000595"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000595" -> "1000593"  [label="AST: "];
"1000591" -> "1000593"  [label="CFG: "];
"1000593" -> "1000591"  [label="DDG: f"];
"1000593" -> "1000591"  [label="DDG: 1"];
"1000582" -> "1000593"  [label="DDG: f"];
"1000593" -> "1000596"  [label="DDG: f"];
"1000593" -> "1000596"  [label="DDG: 1"];
"1000593" -> "1000600"  [label="DDG: f"];
"1000593" -> "1000600"  [label="DDG: 1"];
"1000593" -> "1000619"  [label="DDG: f"];
"1000593" -> "1000644"  [label="DDG: f"];
"1000593" -> "1000734"  [label="DDG: f"];
"1000593" -> "1000734"  [label="DDG: 1"];
"1000593" -> "1000736"  [label="DDG: f"];
"1000593" -> "1000736"  [label="DDG: 1"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000584"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000584" -> "1000582"  [label="AST: "];
"1000585" -> "1000582"  [label="CFG: "];
"1000582" -> "1000581"  [label="DDG: f"];
"1000582" -> "1000581"  [label="DDG: 8"];
"1000573" -> "1000582"  [label="DDG: f"];
"1000573" -> "1000571"  [label="AST: "];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000571" -> "1000573"  [label="CFG: "];
"1000573" -> "1000571"  [label="DDG: f"];
"1000573" -> "1000571"  [label="DDG: 8"];
"1000568" -> "1000573"  [label="DDG: f"];
"1000568" -> "1000566"  [label="AST: "];
"1000568" -> "1000570"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000570" -> "1000568"  [label="AST: "];
"1000566" -> "1000568"  [label="CFG: "];
"1000568" -> "1000566"  [label="DDG: f"];
"1000568" -> "1000566"  [label="DDG: 8"];
"1000561" -> "1000568"  [label="DDG: f"];
"1000561" -> "1000560"  [label="AST: "];
"1000561" -> "1000563"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000563" -> "1000561"  [label="AST: "];
"1000564" -> "1000561"  [label="CFG: "];
"1000561" -> "1000560"  [label="DDG: f"];
"1000561" -> "1000560"  [label="DDG: 8"];
"1000552" -> "1000561"  [label="DDG: f"];
"1000552" -> "1000550"  [label="AST: "];
"1000552" -> "1000554"  [label="CFG: "];
"1000553" -> "1000552"  [label="AST: "];
"1000554" -> "1000552"  [label="AST: "];
"1000550" -> "1000552"  [label="CFG: "];
"1000552" -> "1000550"  [label="DDG: f"];
"1000552" -> "1000550"  [label="DDG: 8"];
"1000539" -> "1000552"  [label="DDG: f"];
"1000539" -> "1000537"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000537" -> "1000539"  [label="CFG: "];
"1000539" -> "1000537"  [label="DDG: f"];
"1000539" -> "1000537"  [label="DDG: 8"];
"1000526" -> "1000539"  [label="DDG: f"];
"1000539" -> "1000547"  [label="DDG: f"];
"1000526" -> "1000524"  [label="AST: "];
"1000526" -> "1000528"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000528" -> "1000526"  [label="AST: "];
"1000524" -> "1000526"  [label="CFG: "];
"1000526" -> "1000524"  [label="DDG: f"];
"1000526" -> "1000524"  [label="DDG: 8"];
"1000513" -> "1000526"  [label="DDG: f"];
"1000526" -> "1000534"  [label="DDG: f"];
"1000513" -> "1000511"  [label="AST: "];
"1000513" -> "1000515"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000515" -> "1000513"  [label="AST: "];
"1000511" -> "1000513"  [label="CFG: "];
"1000513" -> "1000511"  [label="DDG: f"];
"1000513" -> "1000511"  [label="DDG: 8"];
"1000509" -> "1000513"  [label="DDG: f"];
"1000513" -> "1000521"  [label="DDG: f"];
"1000509" -> "1000492"  [label="AST: "];
"1000509" -> "1000510"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000512" -> "1000509"  [label="CFG: "];
"1000509" -> "1003546"  [label="DDG: CHECK(f)"];
"1000446" -> "1000509"  [label="DDG: f"];
"1000446" -> "1000444"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000446" -> "1003546"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000446" -> "1000444"  [label="DDG: f"];
"1000446" -> "1000444"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000436" -> "1000446"  [label="DDG: f"];
"1000448" -> "1000446"  [label="DDG: f->codebook_count"];
"1000446" -> "1000464"  [label="DDG: f"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000439" -> "1000436"  [label="CFG: "];
"1000436" -> "1000431"  [label="DDG: f"];
"1000436" -> "1000431"  [label="DDG: 8"];
"1000436" -> "1000435"  [label="DDG: f"];
"1000436" -> "1000435"  [label="DDG: 8"];
"1000401" -> "1000436"  [label="DDG: f"];
"1000421" -> "1000436"  [label="DDG: f"];
"1000401" -> "1000400"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="CFG: "];
"1000401" -> "1000400"  [label="DDG: f"];
"1000376" -> "1000401"  [label="DDG: f"];
"1000381" -> "1000401"  [label="DDG: f"];
"1000401" -> "1000405"  [label="DDG: f"];
"1000401" -> "1000421"  [label="DDG: f"];
"1000401" -> "1000428"  [label="DDG: f"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000377"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000382" -> "1000376"  [label="CFG: "];
"1000398" -> "1000376"  [label="CFG: "];
"1000376" -> "1003546"  [label="DDG: IS_PUSH_MODE(f)"];
"1000371" -> "1000376"  [label="DDG: f"];
"1000376" -> "1000381"  [label="DDG: f"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000370" -> "1000371"  [label="CFG: "];
"1000371" -> "1003546"  [label="DDG: f"];
"1000371" -> "1000370"  [label="DDG: f"];
"1000360" -> "1000371"  [label="DDG: f"];
"1000360" -> "1000355"  [label="AST: "];
"1000360" -> "1000362"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000365" -> "1000360"  [label="CFG: "];
"1000360" -> "1003546"  [label="DDG: skip(f, len)"];
"1000360" -> "1003546"  [label="DDG: len"];
"1000360" -> "1000358"  [label="DDG: f"];
"1000358" -> "1000360"  [label="DDG: f"];
"1000356" -> "1000360"  [label="DDG: len"];
"1000358" -> "1000356"  [label="AST: "];
"1000358" -> "1000359"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000358" -> "1000356"  [label="DDG: f"];
"1000350" -> "1000358"  [label="DDG: f"];
"1000350" -> "1000349"  [label="AST: "];
"1000350" -> "1000351"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000349" -> "1000350"  [label="CFG: "];
"1000350" -> "1003546"  [label="DDG: f"];
"1000350" -> "1000349"  [label="DDG: f"];
"1000344" -> "1000350"  [label="DDG: f"];
"1000344" -> "1000343"  [label="AST: "];
"1000344" -> "1000345"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1003546"  [label="DDG: f"];
"1000344" -> "1000343"  [label="DDG: f"];
"1000331" -> "1000344"  [label="DDG: f"];
"1000331" -> "1000329"  [label="AST: "];
"1000331" -> "1000332"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000331" -> "1000329"  [label="DDG: f"];
"1000268" -> "1000331"  [label="DDG: f"];
"1000331" -> "1000339"  [label="DDG: f"];
"1000268" -> "1000266"  [label="AST: "];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000268" -> "1000266"  [label="DDG: f"];
"1000264" -> "1000268"  [label="DDG: f"];
"1000268" -> "1000306"  [label="DDG: f"];
"1000268" -> "1000318"  [label="DDG: f"];
"1000268" -> "1000326"  [label="DDG: f"];
"1000264" -> "1000109"  [label="AST: "];
"1000264" -> "1000265"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000267" -> "1000264"  [label="CFG: "];
"1000264" -> "1003546"  [label="DDG: get32(f)"];
"1000262" -> "1000264"  [label="DDG: f"];
"1000262" -> "1000109"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="CFG: "];
"1000260" -> "1000262"  [label="DDG: f"];
"1000260" -> "1000109"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="CFG: "];
"1000249" -> "1000260"  [label="DDG: f"];
"1000249" -> "1000245"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000249" -> "1000245"  [label="DDG: f"];
"1000224" -> "1000249"  [label="DDG: f"];
"1000249" -> "1000257"  [label="DDG: f"];
"1000224" -> "1000220"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000224" -> "1000220"  [label="DDG: f"];
"1000213" -> "1000224"  [label="DDG: f"];
"1000224" -> "1000232"  [label="DDG: f"];
"1000224" -> "1000242"  [label="DDG: f"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="DDG: f"];
"1000195" -> "1000213"  [label="DDG: f"];
"1000213" -> "1000217"  [label="DDG: f"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000198"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000198" -> "1000195"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1003546"  [label="DDG: header"];
"1000195" -> "1000194"  [label="DDG: f"];
"1000195" -> "1000194"  [label="DDG: header"];
"1000195" -> "1000194"  [label="DDG: 6"];
"1000186" -> "1000195"  [label="DDG: f"];
"1000195" -> "1000200"  [label="DDG: f"];
"1000195" -> "1000205"  [label="DDG: header"];
"1000195" -> "1000208"  [label="DDG: f"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="DDG: f"];
"1000127" -> "1000186"  [label="DDG: f"];
"1000186" -> "1000190"  [label="DDG: f"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1003546"  [label="DDG: f"];
"1000127" -> "1000126"  [label="DDG: f"];
"1000127" -> "1000139"  [label="DDG: f"];
"1000127" -> "1000149"  [label="DDG: f"];
"1000127" -> "1000159"  [label="DDG: f"];
"1000127" -> "1000169"  [label="DDG: f"];
"1000127" -> "1000181"  [label="DDG: f"];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000356"  [label="AST: "];
"1000361" -> "1000356"  [label="CFG: "];
"1000356" -> "1003546"  [label="DDG: next_segment(f)"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000380" -> "1000381"  [label="CFG: "];
"1000381" -> "1003546"  [label="DDG: TRUE"];
"1000381" -> "1003546"  [label="DDG: f"];
"1000381" -> "1000380"  [label="DDG: f"];
"1000381" -> "1000380"  [label="DDG: TRUE"];
"1000381" -> "1003494"  [label="DDG: TRUE"];
"1000381" -> "1003544"  [label="DDG: TRUE"];
"1000421" -> "1000417"  [label="AST: "];
"1000421" -> "1000422"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000417" -> "1000421"  [label="CFG: "];
"1000421" -> "1000417"  [label="DDG: f"];
"1000421" -> "1000428"  [label="DDG: f"];
"1000448" -> "1000454"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000454" -> "1000448"  [label="AST: "];
"1000448" -> "1003546"  [label="DDG: f->codebook_count"];
"1000431" -> "1000448"  [label="DDG: f->codebook_count"];
"1000448" -> "1000472"  [label="DDG: f->codebook_count"];
"1000431" -> "1000109"  [label="AST: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="AST: "];
"1000442" -> "1000431"  [label="CFG: "];
"1000431" -> "1003546"  [label="DDG: get_bits(f,8) + 1"];
"1000613" -> "1000607"  [label="AST: "];
"1000613" -> "1000617"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="AST: "];
"1000607" -> "1000613"  [label="CFG: "];
"1000613" -> "1003546"  [label="DDG: c->entries"];
"1000613" -> "1000607"  [label="DDG: c->entries"];
"1000613" -> "1000607"  [label="DDG: 0"];
"1000576" -> "1000613"  [label="DDG: c->entries"];
"1000613" -> "1000644"  [label="DDG: c->entries"];
"1000576" -> "1000492"  [label="AST: "];
"1000576" -> "1000580"  [label="CFG: "];
"1000577" -> "1000576"  [label="AST: "];
"1000580" -> "1000576"  [label="AST: "];
"1000592" -> "1000576"  [label="CFG: "];
"1000576" -> "1003546"  [label="DDG: (get_bits(f, 8)<<16) + (y<<8) + x"];
"1000576" -> "1003546"  [label="DDG: c->entries"];
"1000581" -> "1000576"  [label="DDG: get_bits(f, 8)"];
"1000581" -> "1000576"  [label="DDG: 16"];
"1000587" -> "1000576"  [label="DDG: y"];
"1000587" -> "1000576"  [label="DDG: 8"];
"1000566" -> "1000576"  [label="DDG: x"];
"1000576" -> "1000644"  [label="DDG: c->entries"];
"1000581" -> "1000580"  [label="AST: "];
"1000581" -> "1000585"  [label="CFG: "];
"1000585" -> "1000581"  [label="AST: "];
"1000588" -> "1000581"  [label="CFG: "];
"1000581" -> "1003546"  [label="DDG: get_bits(f, 8)"];
"1000581" -> "1000580"  [label="DDG: get_bits(f, 8)"];
"1000581" -> "1000580"  [label="DDG: 16"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000589"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000589" -> "1000587"  [label="AST: "];
"1000590" -> "1000587"  [label="CFG: "];
"1000587" -> "1003546"  [label="DDG: y"];
"1000587" -> "1000580"  [label="DDG: y"];
"1000587" -> "1000580"  [label="DDG: 8"];
"1000587" -> "1000586"  [label="DDG: y"];
"1000587" -> "1000586"  [label="DDG: 8"];
"1000571" -> "1000587"  [label="DDG: y"];
"1000571" -> "1000492"  [label="AST: "];
"1000572" -> "1000571"  [label="AST: "];
"1000578" -> "1000571"  [label="CFG: "];
"1000566" -> "1000492"  [label="AST: "];
"1000567" -> "1000566"  [label="AST: "];
"1000572" -> "1000566"  [label="CFG: "];
"1000566" -> "1000580"  [label="DDG: x"];
"1000566" -> "1000586"  [label="DDG: x"];
"1000644" -> "1000642"  [label="AST: "];
"1000644" -> "1000646"  [label="CFG: "];
"1000645" -> "1000644"  [label="AST: "];
"1000646" -> "1000644"  [label="AST: "];
"1000642" -> "1000644"  [label="CFG: "];
"1000644" -> "1003546"  [label="DDG: c->entries"];
"1000644" -> "1000642"  [label="DDG: f"];
"1000644" -> "1000642"  [label="DDG: c->entries"];
"1000644" -> "1000653"  [label="DDG: f"];
"1000644" -> "1000672"  [label="DDG: c->entries"];
"1000644" -> "1000725"  [label="DDG: c->entries"];
"1000644" -> "1000740"  [label="DDG: f"];
"1000644" -> "1000752"  [label="DDG: f"];
"1000644" -> "1000811"  [label="DDG: f"];
"1000689" -> "1000687"  [label="AST: "];
"1000689" -> "1000691"  [label="CFG: "];
"1000690" -> "1000689"  [label="AST: "];
"1000691" -> "1000689"  [label="AST: "];
"1000687" -> "1000689"  [label="CFG: "];
"1000689" -> "1003546"  [label="DDG: ilog(limit)"];
"1000689" -> "1000687"  [label="DDG: f"];
"1000689" -> "1000687"  [label="DDG: ilog(limit)"];
"1000691" -> "1000689"  [label="DDG: limit"];
"1000689" -> "1000705"  [label="DDG: f"];
"1000689" -> "1000811"  [label="DDG: f"];
"1000691" -> "1000692"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000691" -> "1003546"  [label="DDG: limit"];
"1000679" -> "1000691"  [label="DDG: limit"];
"1000679" -> "1000677"  [label="AST: "];
"1000679" -> "1000681"  [label="CFG: "];
"1000680" -> "1000679"  [label="AST: "];
"1000681" -> "1000679"  [label="AST: "];
"1000688" -> "1000679"  [label="CFG: "];
"1000679" -> "1003546"  [label="DDG: c->entries - current_entry"];
"1000681" -> "1000679"  [label="DDG: c->entries"];
"1000681" -> "1000679"  [label="DDG: current_entry"];
"1000681" -> "1000685"  [label="CFG: "];
"1000682" -> "1000681"  [label="AST: "];
"1000685" -> "1000681"  [label="AST: "];
"1000672" -> "1000681"  [label="DDG: c->entries"];
"1000672" -> "1000681"  [label="DDG: current_entry"];
"1000681" -> "1000694"  [label="DDG: current_entry"];
"1000681" -> "1000695"  [label="DDG: current_entry"];
"1000681" -> "1000698"  [label="DDG: c->entries"];
"1000681" -> "1000708"  [label="DDG: current_entry"];
"1000681" -> "1000709"  [label="DDG: current_entry"];
"1000681" -> "1000714"  [label="DDG: current_entry"];
"1000672" -> "1000671"  [label="AST: "];
"1000672" -> "1000674"  [label="CFG: "];
"1000673" -> "1000672"  [label="AST: "];
"1000674" -> "1000672"  [label="AST: "];
"1000680" -> "1000672"  [label="CFG: "];
"1000778" -> "1000672"  [label="CFG: "];
"1000672" -> "1003546"  [label="DDG: current_entry < c->entries"];
"1000672" -> "1003546"  [label="DDG: c->entries"];
"1000672" -> "1003546"  [label="DDG: current_entry"];
"1000714" -> "1000672"  [label="DDG: current_entry"];
"1000660" -> "1000672"  [label="DDG: current_entry"];
"1000698" -> "1000672"  [label="DDG: c->entries"];
"1000672" -> "1000782"  [label="DDG: c->entries"];
"1000672" -> "1000789"  [label="DDG: c->entries"];
"1000672" -> "1000867"  [label="DDG: c->entries"];
"1000672" -> "1000912"  [label="DDG: c->entries"];
"1000672" -> "1001005"  [label="DDG: c->entries"];
"1000672" -> "1001007"  [label="DDG: c->entries"];
"1000672" -> "1001037"  [label="DDG: c->entries"];
"1000714" -> "1000677"  [label="AST: "];
"1000714" -> "1000716"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000716" -> "1000714"  [label="AST: "];
"1000718" -> "1000714"  [label="CFG: "];
"1000714" -> "1003546"  [label="DDG: n"];
"1000708" -> "1000714"  [label="DDG: n"];
"1000708" -> "1000677"  [label="AST: "];
"1000708" -> "1000713"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000712" -> "1000708"  [label="AST: "];
"1000713" -> "1000708"  [label="AST: "];
"1000715" -> "1000708"  [label="CFG: "];
"1000708" -> "1003546"  [label="DDG: lengths + current_entry"];
"1000708" -> "1003546"  [label="DDG: memset(lengths + current_entry, current_length, n)"];
"1000650" -> "1000708"  [label="DDG: lengths"];
"1000759" -> "1000708"  [label="DDG: lengths[j]"];
"1000881" -> "1000708"  [label="DDG: lengths[j]"];
"1000876" -> "1000708"  [label="DDG: lengths[j]"];
"1000770" -> "1000708"  [label="DDG: lengths[j]"];
"1000717" -> "1000708"  [label="DDG: current_length"];
"1000664" -> "1000708"  [label="DDG: current_length"];
"1000687" -> "1000708"  [label="DDG: n"];
"1000708" -> "1000717"  [label="DDG: current_length"];
"1000650" -> "1000649"  [label="AST: "];
"1000650" -> "1000651"  [label="CFG: "];
"1000651" -> "1000650"  [label="AST: "];
"1000654" -> "1000650"  [label="CFG: "];
"1000657" -> "1000650"  [label="CFG: "];
"1000650" -> "1003546"  [label="DDG: !lengths"];
"1000650" -> "1003546"  [label="DDG: lengths"];
"1000636" -> "1000650"  [label="DDG: lengths"];
"1000881" -> "1000650"  [label="DDG: lengths[j]"];
"1000876" -> "1000650"  [label="DDG: lengths[j]"];
"1000770" -> "1000650"  [label="DDG: lengths[j]"];
"1000626" -> "1000650"  [label="DDG: lengths"];
"1000759" -> "1000650"  [label="DDG: lengths[j]"];
"1000650" -> "1000709"  [label="DDG: lengths"];
"1000650" -> "1000759"  [label="DDG: lengths"];
"1000650" -> "1000826"  [label="DDG: lengths"];
"1000650" -> "1000876"  [label="DDG: lengths"];
"1000650" -> "1000881"  [label="DDG: lengths"];
"1000650" -> "1001037"  [label="DDG: lengths"];
"1000636" -> "1000635"  [label="AST: "];
"1000636" -> "1000638"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000638" -> "1000636"  [label="AST: "];
"1000651" -> "1000636"  [label="CFG: "];
"1000638" -> "1000636"  [label="DDG: c->codeword_lengths"];
"1000642" -> "1000636"  [label="DDG: setup_malloc(f, c->entries)"];
"1000638" -> "1000642"  [label="CFG: "];
"1000639" -> "1000638"  [label="AST: "];
"1000642" -> "1000638"  [label="AST: "];
"1000638" -> "1003546"  [label="DDG: c->codeword_lengths"];
"1000638" -> "1003546"  [label="DDG: (uint8 *) setup_malloc(f, c->entries)"];
"1000642" -> "1000638"  [label="DDG: setup_malloc(f, c->entries)"];
"1000643" -> "1000642"  [label="AST: "];
"1000642" -> "1003546"  [label="DDG: setup_malloc(f, c->entries)"];
"1000881" -> "1000875"  [label="AST: "];
"1000881" -> "1000885"  [label="CFG: "];
"1000882" -> "1000881"  [label="AST: "];
"1000885" -> "1000881"  [label="AST: "];
"1000875" -> "1000881"  [label="CFG: "];
"1000881" -> "1003546"  [label="DDG: NO_CODE"];
"1000881" -> "1003546"  [label="DDG: lengths[j]"];
"1000881" -> "1000709"  [label="DDG: lengths[j]"];
"1000881" -> "1000770"  [label="DDG: NO_CODE"];
"1000881" -> "1000826"  [label="DDG: lengths[j]"];
"1000881" -> "1000834"  [label="DDG: lengths[j]"];
"1000881" -> "1000876"  [label="DDG: lengths[j]"];
"1000881" -> "1000875"  [label="DDG: lengths[j]"];
"1000881" -> "1000875"  [label="DDG: NO_CODE"];
"1000876" -> "1000881"  [label="DDG: lengths[j]"];
"1000840" -> "1000881"  [label="DDG: lengths"];
"1000759" -> "1000881"  [label="DDG: lengths[j]"];
"1000770" -> "1000881"  [label="DDG: lengths[j]"];
"1000881" -> "1001037"  [label="DDG: lengths[j]"];
"1000881" -> "1001133"  [label="DDG: lengths[j]"];
"1000881" -> "1001166"  [label="DDG: lengths[j]"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000880"  [label="CFG: "];
"1000877" -> "1000876"  [label="AST: "];
"1000880" -> "1000876"  [label="AST: "];
"1000883" -> "1000876"  [label="CFG: "];
"1000875" -> "1000876"  [label="CFG: "];
"1000876" -> "1003546"  [label="DDG: STB_VORBIS_FAST_HUFFMAN_LENGTH"];
"1000876" -> "1003546"  [label="DDG: lengths[j]"];
"1000876" -> "1000709"  [label="DDG: lengths[j]"];
"1000876" -> "1000826"  [label="DDG: lengths[j]"];
"1000876" -> "1000834"  [label="DDG: lengths[j]"];
"1000876" -> "1000875"  [label="DDG: lengths[j]"];
"1000876" -> "1000875"  [label="DDG: STB_VORBIS_FAST_HUFFMAN_LENGTH"];
"1000759" -> "1000876"  [label="DDG: lengths[j]"];
"1000770" -> "1000876"  [label="DDG: lengths[j]"];
"1000840" -> "1000876"  [label="DDG: lengths"];
"1000876" -> "1001037"  [label="DDG: lengths[j]"];
"1000876" -> "1001133"  [label="DDG: lengths[j]"];
"1000876" -> "1001166"  [label="DDG: lengths[j]"];
"1000759" -> "1000758"  [label="AST: "];
"1000759" -> "1000763"  [label="CFG: "];
"1000760" -> "1000759"  [label="AST: "];
"1000763" -> "1000759"  [label="AST: "];
"1000766" -> "1000759"  [label="CFG: "];
"1000731" -> "1000759"  [label="CFG: "];
"1000759" -> "1003546"  [label="DDG: lengths[j]"];
"1000759" -> "1003546"  [label="DDG: lengths[j] == 32"];
"1000759" -> "1000709"  [label="DDG: lengths[j]"];
"1000747" -> "1000759"  [label="DDG: lengths[j]"];
"1000759" -> "1000826"  [label="DDG: lengths[j]"];
"1000759" -> "1000834"  [label="DDG: lengths[j]"];
"1000759" -> "1001037"  [label="DDG: lengths[j]"];
"1000759" -> "1001133"  [label="DDG: lengths[j]"];
"1000759" -> "1001166"  [label="DDG: lengths[j]"];
"1000747" -> "1000746"  [label="AST: "];
"1000747" -> "1000751"  [label="CFG: "];
"1000748" -> "1000747"  [label="AST: "];
"1000751" -> "1000747"  [label="AST: "];
"1000757" -> "1000747"  [label="CFG: "];
"1000747" -> "1003546"  [label="DDG: get_bits(f, 5) + 1"];
"1000752" -> "1000747"  [label="DDG: f"];
"1000752" -> "1000747"  [label="DDG: 5"];
"1000752" -> "1000751"  [label="AST: "];
"1000752" -> "1000754"  [label="CFG: "];
"1000753" -> "1000752"  [label="AST: "];
"1000754" -> "1000752"  [label="AST: "];
"1000755" -> "1000752"  [label="CFG: "];
"1000752" -> "1000740"  [label="DDG: f"];
"1000752" -> "1000751"  [label="DDG: f"];
"1000752" -> "1000751"  [label="DDG: 5"];
"1000740" -> "1000752"  [label="DDG: f"];
"1000752" -> "1000765"  [label="DDG: f"];
"1000752" -> "1000811"  [label="DDG: f"];
"1000740" -> "1000736"  [label="AST: "];
"1000740" -> "1000742"  [label="CFG: "];
"1000741" -> "1000740"  [label="AST: "];
"1000742" -> "1000740"  [label="AST: "];
"1000736" -> "1000740"  [label="CFG: "];
"1000740" -> "1000734"  [label="DDG: f"];
"1000740" -> "1000734"  [label="DDG: 1"];
"1000740" -> "1000736"  [label="DDG: f"];
"1000740" -> "1000736"  [label="DDG: 1"];
"1000740" -> "1000811"  [label="DDG: f"];
"1000770" -> "1000769"  [label="AST: "];
"1000770" -> "1000774"  [label="CFG: "];
"1000771" -> "1000770"  [label="AST: "];
"1000774" -> "1000770"  [label="AST: "];
"1000731" -> "1000770"  [label="CFG: "];
"1000770" -> "1003546"  [label="DDG: NO_CODE"];
"1000770" -> "1003546"  [label="DDG: lengths[j]"];
"1000770" -> "1000709"  [label="DDG: lengths[j]"];
"1000770" -> "1000826"  [label="DDG: lengths[j]"];
"1000770" -> "1000834"  [label="DDG: lengths[j]"];
"1000770" -> "1001037"  [label="DDG: lengths[j]"];
"1000770" -> "1001133"  [label="DDG: lengths[j]"];
"1000770" -> "1001166"  [label="DDG: lengths[j]"];
"1000840" -> "1000787"  [label="AST: "];
"1000840" -> "1000842"  [label="CFG: "];
"1000841" -> "1000840"  [label="AST: "];
"1000842" -> "1000840"  [label="AST: "];
"1000847" -> "1000840"  [label="CFG: "];
"1000840" -> "1003546"  [label="DDG: c->codeword_lengths"];
"1000840" -> "1003546"  [label="DDG: lengths"];
"1000826" -> "1000840"  [label="DDG: c->codeword_lengths"];
"1000840" -> "1001037"  [label="DDG: lengths"];
"1000826" -> "1000787"  [label="AST: "];
"1000826" -> "1000831"  [label="CFG: "];
"1000827" -> "1000826"  [label="AST: "];
"1000830" -> "1000826"  [label="AST: "];
"1000831" -> "1000826"  [label="AST: "];
"1000835" -> "1000826"  [label="CFG: "];
"1000826" -> "1003546"  [label="DDG: memcpy(c->codeword_lengths, lengths, c->entries)"];
"1000817" -> "1000826"  [label="DDG: c->codeword_lengths"];
"1000811" -> "1000826"  [label="DDG: c->entries"];
"1000826" -> "1000834"  [label="DDG: lengths"];
"1000826" -> "1000834"  [label="DDG: c->entries"];
"1000817" -> "1000816"  [label="AST: "];
"1000817" -> "1000821"  [label="CFG: "];
"1000818" -> "1000817"  [label="AST: "];
"1000821" -> "1000817"  [label="AST: "];
"1000824" -> "1000817"  [label="CFG: "];
"1000828" -> "1000817"  [label="CFG: "];
"1000817" -> "1003546"  [label="DDG: c->codeword_lengths"];
"1000817" -> "1003546"  [label="DDG: c->codeword_lengths == NULL"];
"1000817" -> "1003546"  [label="DDG: NULL"];
"1000805" -> "1000817"  [label="DDG: c->codeword_lengths"];
"1001294" -> "1000817"  [label="DDG: NULL"];
"1001111" -> "1000817"  [label="DDG: NULL"];
"1001613" -> "1000817"  [label="DDG: NULL"];
"1000458" -> "1000817"  [label="DDG: NULL"];
"1001422" -> "1000817"  [label="DDG: NULL"];
"1000817" -> "1000893"  [label="DDG: NULL"];
"1000817" -> "1001082"  [label="DDG: NULL"];
"1000817" -> "1001172"  [label="DDG: NULL"];
"1000817" -> "1001294"  [label="DDG: NULL"];
"1000817" -> "1001752"  [label="DDG: NULL"];
"1000805" -> "1000787"  [label="AST: "];
"1000805" -> "1000809"  [label="CFG: "];
"1000806" -> "1000805"  [label="AST: "];
"1000809" -> "1000805"  [label="AST: "];
"1000819" -> "1000805"  [label="CFG: "];
"1000805" -> "1003546"  [label="DDG: (uint8 *) setup_malloc(f, c->entries)"];
"1000809" -> "1000805"  [label="DDG: setup_malloc(f, c->entries)"];
"1000809" -> "1000811"  [label="CFG: "];
"1000810" -> "1000809"  [label="AST: "];
"1000811" -> "1000809"  [label="AST: "];
"1000809" -> "1003546"  [label="DDG: setup_malloc(f, c->entries)"];
"1000811" -> "1000809"  [label="DDG: f"];
"1000811" -> "1000809"  [label="DDG: c->entries"];
"1000811" -> "1000813"  [label="CFG: "];
"1000812" -> "1000811"  [label="AST: "];
"1000813" -> "1000811"  [label="AST: "];
"1000811" -> "1003546"  [label="DDG: c->entries"];
"1000789" -> "1000811"  [label="DDG: c->entries"];
"1000811" -> "1000823"  [label="DDG: f"];
"1000811" -> "1000834"  [label="DDG: f"];
"1000789" -> "1000788"  [label="AST: "];
"1000789" -> "1000793"  [label="CFG: "];
"1000790" -> "1000789"  [label="AST: "];
"1000793" -> "1000789"  [label="AST: "];
"1000800" -> "1000789"  [label="CFG: "];
"1000807" -> "1000789"  [label="CFG: "];
"1000789" -> "1003546"  [label="DDG: c->entries > (int) f->setup_temp_memory_required"];
"1000789" -> "1003546"  [label="DDG: (int) f->setup_temp_memory_required"];
"1000782" -> "1000789"  [label="DDG: c->entries"];
"1000725" -> "1000789"  [label="DDG: c->entries"];
"1000793" -> "1000789"  [label="DDG: f->setup_temp_memory_required"];
"1000789" -> "1000798"  [label="DDG: c->entries"];
"1000782" -> "1000780"  [label="AST: "];
"1000782" -> "1000786"  [label="CFG: "];
"1000783" -> "1000782"  [label="AST: "];
"1000786" -> "1000782"  [label="AST: "];
"1000780" -> "1000782"  [label="CFG: "];
"1000782" -> "1003546"  [label="DDG: c->entries"];
"1000782" -> "1000780"  [label="DDG: c->entries"];
"1000782" -> "1000780"  [label="DDG: 2"];
"1000725" -> "1000782"  [label="DDG: c->entries"];
"1000782" -> "1000867"  [label="DDG: c->entries"];
"1000782" -> "1000912"  [label="DDG: c->entries"];
"1000782" -> "1001005"  [label="DDG: c->entries"];
"1000782" -> "1001007"  [label="DDG: c->entries"];
"1000782" -> "1001037"  [label="DDG: c->entries"];
"1000725" -> "1000721"  [label="AST: "];
"1000725" -> "1000727"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000727" -> "1000725"  [label="AST: "];
"1000735" -> "1000725"  [label="CFG: "];
"1000778" -> "1000725"  [label="CFG: "];
"1000725" -> "1003546"  [label="DDG: c->entries"];
"1000725" -> "1003546"  [label="DDG: j < c->entries"];
"1000725" -> "1003546"  [label="DDG: j"];
"1000730" -> "1000725"  [label="DDG: j"];
"1000722" -> "1000725"  [label="DDG: j"];
"1000725" -> "1000730"  [label="DDG: j"];
"1000725" -> "1000867"  [label="DDG: c->entries"];
"1000725" -> "1000912"  [label="DDG: c->entries"];
"1000725" -> "1001005"  [label="DDG: c->entries"];
"1000725" -> "1001007"  [label="DDG: c->entries"];
"1000725" -> "1001037"  [label="DDG: c->entries"];
"1000730" -> "1000721"  [label="AST: "];
"1000730" -> "1000731"  [label="CFG: "];
"1000731" -> "1000730"  [label="AST: "];
"1000726" -> "1000730"  [label="CFG: "];
"1000722" -> "1000721"  [label="AST: "];
"1000722" -> "1000724"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000724" -> "1000722"  [label="AST: "];
"1000726" -> "1000722"  [label="CFG: "];
"1000793" -> "1000795"  [label="CFG: "];
"1000794" -> "1000793"  [label="AST: "];
"1000795" -> "1000793"  [label="AST: "];
"1000793" -> "1003546"  [label="DDG: f->setup_temp_memory_required"];
"1001025" -> "1000793"  [label="DDG: f->setup_temp_memory_required"];
"1000798" -> "1000793"  [label="DDG: f->setup_temp_memory_required"];
"1001030" -> "1000793"  [label="DDG: f->setup_temp_memory_required"];
"1000793" -> "1001025"  [label="DDG: f->setup_temp_memory_required"];
"1001025" -> "1001024"  [label="AST: "];
"1001025" -> "1001027"  [label="CFG: "];
"1001026" -> "1001025"  [label="AST: "];
"1001027" -> "1001025"  [label="AST: "];
"1001032" -> "1001025"  [label="CFG: "];
"1001038" -> "1001025"  [label="CFG: "];
"1001025" -> "1003546"  [label="DDG: size"];
"1001025" -> "1003546"  [label="DDG: f->setup_temp_memory_required"];
"1001025" -> "1003546"  [label="DDG: size > f->setup_temp_memory_required"];
"1001005" -> "1001025"  [label="DDG: size"];
"1000798" -> "1001025"  [label="DDG: f->setup_temp_memory_required"];
"1001030" -> "1001025"  [label="DDG: f->setup_temp_memory_required"];
"1001025" -> "1001030"  [label="DDG: size"];
"1001005" -> "1000932"  [label="AST: "];
"1001005" -> "1001007"  [label="CFG: "];
"1001006" -> "1001005"  [label="AST: "];
"1001007" -> "1001005"  [label="AST: "];
"1001026" -> "1001005"  [label="CFG: "];
"1001005" -> "1003546"  [label="DDG: c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries"];
"1000834" -> "1001005"  [label="DDG: c->entries"];
"1000867" -> "1001005"  [label="DDG: c->entries"];
"1001011" -> "1001005"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001011" -> "1001005"  [label="DDG: c->sorted_entries"];
"1000834" -> "1000787"  [label="AST: "];
"1000834" -> "1000837"  [label="CFG: "];
"1000835" -> "1000834"  [label="AST: "];
"1000836" -> "1000834"  [label="AST: "];
"1000837" -> "1000834"  [label="AST: "];
"1000841" -> "1000834"  [label="CFG: "];
"1000834" -> "1003546"  [label="DDG: setup_temp_free(f, lengths, c->entries)"];
"1000834" -> "1003546"  [label="DDG: c->entries"];
"1000834" -> "1000867"  [label="DDG: c->entries"];
"1000834" -> "1000912"  [label="DDG: c->entries"];
"1000834" -> "1001007"  [label="DDG: c->entries"];
"1000834" -> "1001037"  [label="DDG: c->entries"];
"1000867" -> "1000863"  [label="AST: "];
"1000867" -> "1000869"  [label="CFG: "];
"1000868" -> "1000867"  [label="AST: "];
"1000869" -> "1000867"  [label="AST: "];
"1000878" -> "1000867"  [label="CFG: "];
"1000890" -> "1000867"  [label="CFG: "];
"1000867" -> "1003546"  [label="DDG: j < c->entries"];
"1000867" -> "1003546"  [label="DDG: j"];
"1000867" -> "1003546"  [label="DDG: c->entries"];
"1000864" -> "1000867"  [label="DDG: j"];
"1000872" -> "1000867"  [label="DDG: j"];
"1000867" -> "1000872"  [label="DDG: j"];
"1000867" -> "1000912"  [label="DDG: c->entries"];
"1000867" -> "1001007"  [label="DDG: c->entries"];
"1000867" -> "1001037"  [label="DDG: c->entries"];
"1000864" -> "1000863"  [label="AST: "];
"1000864" -> "1000866"  [label="CFG: "];
"1000865" -> "1000864"  [label="AST: "];
"1000866" -> "1000864"  [label="AST: "];
"1000868" -> "1000864"  [label="CFG: "];
"1000872" -> "1000863"  [label="AST: "];
"1000872" -> "1000873"  [label="CFG: "];
"1000873" -> "1000872"  [label="AST: "];
"1000868" -> "1000872"  [label="CFG: "];
"1001011" -> "1001007"  [label="AST: "];
"1001011" -> "1001021"  [label="CFG: "];
"1001012" -> "1001011"  [label="AST: "];
"1001021" -> "1001011"  [label="AST: "];
"1001007" -> "1001011"  [label="CFG: "];
"1001011" -> "1003546"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001011" -> "1003546"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001007"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001011" -> "1001007"  [label="DDG: c->sorted_entries"];
"1000991" -> "1001011"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001011"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001070"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001076"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001099"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001105"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001145"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001370"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001443"  [label="DDG: c->sorted_entries"];
"1001011" -> "1001445"  [label="DDG: c->sorted_entries"];
"1000991" -> "1000989"  [label="AST: "];
"1000991" -> "1000995"  [label="CFG: "];
"1000992" -> "1000991"  [label="AST: "];
"1000995" -> "1000991"  [label="AST: "];
"1000989" -> "1000991"  [label="CFG: "];
"1000991" -> "1003546"  [label="DDG: c->sorted_entries"];
"1000991" -> "1000989"  [label="DDG: c->sorted_entries"];
"1000967" -> "1000991"  [label="DDG: c->sorted_entries"];
"1000967" -> "1000965"  [label="AST: "];
"1000967" -> "1000973"  [label="CFG: "];
"1000968" -> "1000967"  [label="AST: "];
"1000973" -> "1000967"  [label="AST: "];
"1000965" -> "1000967"  [label="CFG: "];
"1000967" -> "1003546"  [label="DDG: c->sorted_entries"];
"1000967" -> "1000965"  [label="DDG: c->sorted_entries"];
"1000945" -> "1000967"  [label="DDG: c->sorted_entries"];
"1000945" -> "1000943"  [label="AST: "];
"1000945" -> "1000947"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000947" -> "1000945"  [label="AST: "];
"1000943" -> "1000945"  [label="CFG: "];
"1000945" -> "1003546"  [label="DDG: c->sorted_entries"];
"1000945" -> "1000943"  [label="DDG: f"];
"1000945" -> "1000943"  [label="DDG: c->sorted_entries"];
"1000888" -> "1000945"  [label="DDG: c->sorted_entries"];
"1000945" -> "1000956"  [label="DDG: f"];
"1000945" -> "1000965"  [label="DDG: f"];
"1000888" -> "1000492"  [label="AST: "];
"1000888" -> "1000892"  [label="CFG: "];
"1000889" -> "1000888"  [label="AST: "];
"1000892" -> "1000888"  [label="AST: "];
"1000894" -> "1000888"  [label="CFG: "];
"1000888" -> "1003546"  [label="DDG: sorted_count"];
"1000888" -> "1003546"  [label="DDG: c->sorted_entries"];
"1000886" -> "1000888"  [label="DDG: sorted_count"];
"1000855" -> "1000888"  [label="DDG: sorted_count"];
"1000860" -> "1000888"  [label="DDG: sorted_count"];
"1000888" -> "1001070"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001076"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001099"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001105"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001145"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001370"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001443"  [label="DDG: c->sorted_entries"];
"1000888" -> "1001445"  [label="DDG: c->sorted_entries"];
"1000886" -> "1000874"  [label="AST: "];
"1000886" -> "1000887"  [label="CFG: "];
"1000887" -> "1000886"  [label="AST: "];
"1000873" -> "1000886"  [label="CFG: "];
"1000860" -> "1000886"  [label="DDG: sorted_count"];
"1000860" -> "1000859"  [label="AST: "];
"1000860" -> "1000862"  [label="CFG: "];
"1000861" -> "1000860"  [label="AST: "];
"1000862" -> "1000860"  [label="AST: "];
"1000865" -> "1000860"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000855" -> "1000857"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000857" -> "1000855"  [label="AST: "];
"1000890" -> "1000855"  [label="CFG: "];
"1000855" -> "1003546"  [label="DDG: total"];
"1000756" -> "1000855"  [label="DDG: total"];
"1000780" -> "1000855"  [label="DDG: total"];
"1000497" -> "1000855"  [label="DDG: total"];
"1000756" -> "1000746"  [label="AST: "];
"1000756" -> "1000757"  [label="CFG: "];
"1000757" -> "1000756"  [label="AST: "];
"1000761" -> "1000756"  [label="CFG: "];
"1000756" -> "1003546"  [label="DDG: total"];
"1000497" -> "1000756"  [label="DDG: total"];
"1000756" -> "1000780"  [label="DDG: total"];
"1000497" -> "1000492"  [label="AST: "];
"1000497" -> "1000499"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000503" -> "1000497"  [label="CFG: "];
"1000497" -> "1003546"  [label="DDG: total"];
"1000497" -> "1000780"  [label="DDG: total"];
"1000780" -> "1000776"  [label="AST: "];
"1000781" -> "1000780"  [label="AST: "];
"1000776" -> "1000780"  [label="CFG: "];
"1000780" -> "1003546"  [label="DDG: total"];
"1000780" -> "1003546"  [label="DDG: c->entries >> 2"];
"1000780" -> "1000776"  [label="DDG: total"];
"1000780" -> "1000776"  [label="DDG: c->entries >> 2"];
"1000798" -> "1000788"  [label="AST: "];
"1000798" -> "1000802"  [label="CFG: "];
"1000799" -> "1000798"  [label="AST: "];
"1000802" -> "1000798"  [label="AST: "];
"1000807" -> "1000798"  [label="CFG: "];
"1000798" -> "1003546"  [label="DDG: f->setup_temp_memory_required"];
"1001030" -> "1001024"  [label="AST: "];
"1001030" -> "1001034"  [label="CFG: "];
"1001031" -> "1001030"  [label="AST: "];
"1001034" -> "1001030"  [label="AST: "];
"1001038" -> "1001030"  [label="CFG: "];
"1001030" -> "1003546"  [label="DDG: size"];
"1001030" -> "1003546"  [label="DDG: f->setup_temp_memory_required"];
"1001294" -> "1001293"  [label="AST: "];
"1001294" -> "1001296"  [label="CFG: "];
"1001295" -> "1001294"  [label="AST: "];
"1001296" -> "1001294"  [label="AST: "];
"1001299" -> "1001294"  [label="CFG: "];
"1001303" -> "1001294"  [label="CFG: "];
"1001294" -> "1003546"  [label="DDG: mults"];
"1001294" -> "1003546"  [label="DDG: NULL"];
"1001294" -> "1003546"  [label="DDG: mults == NULL"];
"1001294" -> "1000893"  [label="DDG: NULL"];
"1001294" -> "1001082"  [label="DDG: NULL"];
"1001294" -> "1001172"  [label="DDG: NULL"];
"1001279" -> "1001294"  [label="DDG: mults"];
"1001509" -> "1001294"  [label="DDG: mults[off]"];
"1001343" -> "1001294"  [label="DDG: mults[j]"];
"1001652" -> "1001294"  [label="DDG: mults[j]"];
"1001111" -> "1001294"  [label="DDG: NULL"];
"1001613" -> "1001294"  [label="DDG: NULL"];
"1000458" -> "1001294"  [label="DDG: NULL"];
"1001422" -> "1001294"  [label="DDG: NULL"];
"1001294" -> "1001328"  [label="DDG: mults"];
"1001294" -> "1001422"  [label="DDG: NULL"];
"1001294" -> "1001428"  [label="DDG: mults"];
"1001294" -> "1001501"  [label="DDG: mults"];
"1001294" -> "1001509"  [label="DDG: mults"];
"1001294" -> "1001561"  [label="DDG: mults"];
"1001294" -> "1001613"  [label="DDG: NULL"];
"1001294" -> "1001619"  [label="DDG: mults"];
"1001294" -> "1001652"  [label="DDG: mults"];
"1001294" -> "1001679"  [label="DDG: mults"];
"1001294" -> "1001752"  [label="DDG: NULL"];
"1001279" -> "1001204"  [label="AST: "];
"1001279" -> "1001281"  [label="CFG: "];
"1001280" -> "1001279"  [label="AST: "];
"1001281" -> "1001279"  [label="AST: "];
"1001295" -> "1001279"  [label="CFG: "];
"1001279" -> "1003546"  [label="DDG: (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001281" -> "1001279"  [label="DDG: setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001281" -> "1001283"  [label="CFG: "];
"1001282" -> "1001281"  [label="AST: "];
"1001283" -> "1001281"  [label="AST: "];
"1001281" -> "1003546"  [label="DDG: setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001283" -> "1001281"  [label="DDG: f"];
"1001283" -> "1001281"  [label="DDG: sizeof(mults[0]) * c->lookup_values"];
"1001283" -> "1001285"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001285" -> "1001283"  [label="AST: "];
"1001283" -> "1003546"  [label="DDG: sizeof(mults[0]) * c->lookup_values"];
"1001235" -> "1001283"  [label="DDG: f"];
"1001285" -> "1001283"  [label="DDG: c->lookup_values"];
"1001283" -> "1001298"  [label="DDG: f"];
"1001283" -> "1001318"  [label="DDG: f"];
"1001283" -> "1001382"  [label="DDG: f"];
"1001283" -> "1001405"  [label="DDG: f"];
"1001283" -> "1001592"  [label="DDG: f"];
"1001283" -> "1001679"  [label="DDG: f"];
"1001235" -> "1001231"  [label="AST: "];
"1001235" -> "1001237"  [label="CFG: "];
"1001236" -> "1001235"  [label="AST: "];
"1001237" -> "1001235"  [label="AST: "];
"1001231" -> "1001235"  [label="CFG: "];
"1001235" -> "1001231"  [label="DDG: f"];
"1001235" -> "1001231"  [label="DDG: 1"];
"1001227" -> "1001235"  [label="DDG: f"];
"1001235" -> "1001276"  [label="DDG: f"];
"1001227" -> "1001226"  [label="AST: "];
"1001227" -> "1001229"  [label="CFG: "];
"1001228" -> "1001227"  [label="AST: "];
"1001229" -> "1001227"  [label="AST: "];
"1001230" -> "1001227"  [label="CFG: "];
"1001227" -> "1001222"  [label="DDG: f"];
"1001227" -> "1001222"  [label="DDG: 4"];
"1001227" -> "1001226"  [label="DDG: f"];
"1001227" -> "1001226"  [label="DDG: 4"];
"1001219" -> "1001227"  [label="DDG: f"];
"1001219" -> "1001218"  [label="AST: "];
"1001219" -> "1001221"  [label="CFG: "];
"1001220" -> "1001219"  [label="AST: "];
"1001221" -> "1001219"  [label="AST: "];
"1001218" -> "1001219"  [label="CFG: "];
"1001219" -> "1001218"  [label="DDG: f"];
"1001219" -> "1001218"  [label="DDG: 32"];
"1001211" -> "1001219"  [label="DDG: f"];
"1001211" -> "1001210"  [label="AST: "];
"1001211" -> "1001213"  [label="CFG: "];
"1001212" -> "1001211"  [label="AST: "];
"1001213" -> "1001211"  [label="AST: "];
"1001210" -> "1001211"  [label="CFG: "];
"1001211" -> "1001210"  [label="DDG: f"];
"1001211" -> "1001210"  [label="DDG: 32"];
"1001285" -> "1001290"  [label="CFG: "];
"1001286" -> "1001285"  [label="AST: "];
"1001290" -> "1001285"  [label="AST: "];
"1001285" -> "1003546"  [label="DDG: c->lookup_values"];
"1001270" -> "1001285"  [label="DDG: c->lookup_values"];
"1001285" -> "1001307"  [label="DDG: c->lookup_values"];
"1001270" -> "1001269"  [label="AST: "];
"1001270" -> "1001274"  [label="CFG: "];
"1001271" -> "1001270"  [label="AST: "];
"1001274" -> "1001270"  [label="AST: "];
"1001277" -> "1001270"  [label="CFG: "];
"1001280" -> "1001270"  [label="CFG: "];
"1001270" -> "1003546"  [label="DDG: c->lookup_values == 0"];
"1001270" -> "1003546"  [label="DDG: c->lookup_values"];
"1001245" -> "1001270"  [label="DDG: c->lookup_values"];
"1001258" -> "1001270"  [label="DDG: c->lookup_values"];
"1001245" -> "1001244"  [label="AST: "];
"1001245" -> "1001249"  [label="CFG: "];
"1001246" -> "1001245"  [label="AST: "];
"1001249" -> "1001245"  [label="AST: "];
"1001272" -> "1001245"  [label="CFG: "];
"1001245" -> "1003546"  [label="DDG: lookup1_values(c->entries, c->dimensions)"];
"1001249" -> "1001245"  [label="DDG: c->entries"];
"1001249" -> "1001245"  [label="DDG: c->dimensions"];
"1001249" -> "1001253"  [label="CFG: "];
"1001250" -> "1001249"  [label="AST: "];
"1001253" -> "1001249"  [label="AST: "];
"1001249" -> "1003546"  [label="DDG: c->dimensions"];
"1001249" -> "1003546"  [label="DDG: c->entries"];
"1001037" -> "1001249"  [label="DDG: c->entries"];
"1001166" -> "1001249"  [label="DDG: c->entries"];
"1000608" -> "1001249"  [label="DDG: c->dimensions"];
"1001249" -> "1001391"  [label="DDG: c->dimensions"];
"1001249" -> "1001414"  [label="DDG: c->entries"];
"1001249" -> "1001414"  [label="DDG: c->dimensions"];
"1001249" -> "1001443"  [label="DDG: c->entries"];
"1001249" -> "1001445"  [label="DDG: c->entries"];
"1001037" -> "1001036"  [label="AST: "];
"1001037" -> "1001043"  [label="CFG: "];
"1001038" -> "1001037"  [label="AST: "];
"1001039" -> "1001037"  [label="AST: "];
"1001040" -> "1001037"  [label="AST: "];
"1001043" -> "1001037"  [label="AST: "];
"1001036" -> "1001037"  [label="CFG: "];
"1001037" -> "1003546"  [label="DDG: c->entries"];
"1001037" -> "1003546"  [label="DDG: c"];
"1001037" -> "1003546"  [label="DDG: values"];
"1001037" -> "1003546"  [label="DDG: lengths"];
"1001037" -> "1001036"  [label="DDG: c"];
"1001037" -> "1001036"  [label="DDG: lengths"];
"1001037" -> "1001036"  [label="DDG: c->entries"];
"1001037" -> "1001036"  [label="DDG: values"];
"1000502" -> "1001037"  [label="DDG: c"];
"1000912" -> "1001037"  [label="DDG: c->entries"];
"1000893" -> "1001037"  [label="DDG: values"];
"1000999" -> "1001037"  [label="DDG: values"];
"1001037" -> "1001049"  [label="DDG: values"];
"1001037" -> "1001133"  [label="DDG: c"];
"1001037" -> "1001133"  [label="DDG: lengths"];
"1001037" -> "1001133"  [label="DDG: values"];
"1001037" -> "1001142"  [label="DDG: values"];
"1001037" -> "1001166"  [label="DDG: lengths"];
"1001037" -> "1001166"  [label="DDG: c->entries"];
"1001037" -> "1001177"  [label="DDG: c"];
"1001037" -> "1001262"  [label="DDG: c->entries"];
"1000502" -> "1000492"  [label="AST: "];
"1000502" -> "1000504"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000504" -> "1000502"  [label="AST: "];
"1000510" -> "1000502"  [label="CFG: "];
"1000502" -> "1003546"  [label="DDG: c"];
"1000502" -> "1003546"  [label="DDG: f->codebooks+i"];
"1000467" -> "1000502"  [label="DDG: f->codebooks"];
"1000485" -> "1000502"  [label="DDG: i"];
"1000467" -> "1000109"  [label="AST: "];
"1000467" -> "1000472"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000471" -> "1000467"  [label="AST: "];
"1000472" -> "1000467"  [label="AST: "];
"1000483" -> "1000467"  [label="CFG: "];
"1000467" -> "1003546"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000467" -> "1003546"  [label="DDG: f->codebooks"];
"1000467" -> "1003546"  [label="DDG: memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count)"];
"1000458" -> "1000467"  [label="DDG: f->codebooks"];
"1000472" -> "1000467"  [label="DDG: f->codebook_count"];
"1000467" -> "1000504"  [label="DDG: f->codebooks"];
"1000458" -> "1000457"  [label="AST: "];
"1000458" -> "1000462"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000462" -> "1000458"  [label="AST: "];
"1000465" -> "1000458"  [label="CFG: "];
"1000469" -> "1000458"  [label="CFG: "];
"1000458" -> "1003546"  [label="DDG: f->codebooks"];
"1000458" -> "1003546"  [label="DDG: NULL"];
"1000458" -> "1003546"  [label="DDG: f->codebooks == NULL"];
"1000440" -> "1000458"  [label="DDG: f->codebooks"];
"1000458" -> "1000893"  [label="DDG: NULL"];
"1000458" -> "1001082"  [label="DDG: NULL"];
"1000458" -> "1001172"  [label="DDG: NULL"];
"1000458" -> "1001752"  [label="DDG: NULL"];
"1000440" -> "1000109"  [label="AST: "];
"1000440" -> "1000444"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="AST: "];
"1000460" -> "1000440"  [label="CFG: "];
"1000440" -> "1003546"  [label="DDG: (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000444" -> "1000440"  [label="DDG: setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000445" -> "1000444"  [label="AST: "];
"1000444" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000472" -> "1000478"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000478" -> "1000472"  [label="AST: "];
"1000472" -> "1000485"  [label="DDG: f->codebook_count"];
"1000485" -> "1000481"  [label="AST: "];
"1000485" -> "1000487"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000498" -> "1000485"  [label="CFG: "];
"1001695" -> "1000485"  [label="CFG: "];
"1000485" -> "1003546"  [label="DDG: f->codebook_count"];
"1000485" -> "1003546"  [label="DDG: i < f->codebook_count"];
"1000482" -> "1000485"  [label="DDG: i"];
"1000490" -> "1000485"  [label="DDG: i"];
"1000485" -> "1000490"  [label="DDG: i"];
"1000485" -> "1000504"  [label="DDG: i"];
"1000485" -> "1001991"  [label="DDG: f->codebook_count"];
"1000485" -> "1002034"  [label="DDG: f->codebook_count"];
"1000485" -> "1002401"  [label="DDG: f->codebook_count"];
"1000482" -> "1000481"  [label="AST: "];
"1000482" -> "1000484"  [label="CFG: "];
"1000483" -> "1000482"  [label="AST: "];
"1000484" -> "1000482"  [label="AST: "];
"1000486" -> "1000482"  [label="CFG: "];
"1000490" -> "1000481"  [label="AST: "];
"1000490" -> "1000491"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000486" -> "1000490"  [label="CFG: "];
"1000912" -> "1000910"  [label="AST: "];
"1000912" -> "1000919"  [label="CFG: "];
"1000913" -> "1000912"  [label="AST: "];
"1000919" -> "1000912"  [label="AST: "];
"1000910" -> "1000912"  [label="CFG: "];
"1000912" -> "1003546"  [label="DDG: c->entries"];
"1000912" -> "1000910"  [label="DDG: c->entries"];
"1000893" -> "1000492"  [label="AST: "];
"1000893" -> "1000895"  [label="CFG: "];
"1000894" -> "1000893"  [label="AST: "];
"1000895" -> "1000893"  [label="AST: "];
"1000897" -> "1000893"  [label="CFG: "];
"1000893" -> "1003546"  [label="DDG: NULL"];
"1000893" -> "1003546"  [label="DDG: values"];
"1001111" -> "1000893"  [label="DDG: NULL"];
"1001613" -> "1000893"  [label="DDG: NULL"];
"1001422" -> "1000893"  [label="DDG: NULL"];
"1001111" -> "1001110"  [label="AST: "];
"1001111" -> "1001115"  [label="CFG: "];
"1001112" -> "1001111"  [label="AST: "];
"1001115" -> "1001111"  [label="AST: "];
"1001118" -> "1001111"  [label="CFG: "];
"1001122" -> "1001111"  [label="CFG: "];
"1001111" -> "1003546"  [label="DDG: c->sorted_values == NULL"];
"1001111" -> "1003546"  [label="DDG: NULL"];
"1001111" -> "1003546"  [label="DDG: c->sorted_values"];
"1001111" -> "1001082"  [label="DDG: NULL"];
"1001091" -> "1001111"  [label="DDG: c->sorted_values"];
"1001124" -> "1001111"  [label="DDG: c->sorted_values[-1]"];
"1001082" -> "1001111"  [label="DDG: NULL"];
"1001111" -> "1001120"  [label="DDG: c->sorted_values"];
"1001111" -> "1001172"  [label="DDG: NULL"];
"1001111" -> "1001752"  [label="DDG: NULL"];
"1001091" -> "1001061"  [label="AST: "];
"1001091" -> "1001095"  [label="CFG: "];
"1001092" -> "1001091"  [label="AST: "];
"1001095" -> "1001091"  [label="AST: "];
"1001113" -> "1001091"  [label="CFG: "];
"1001091" -> "1003546"  [label="DDG: ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001095" -> "1001091"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001095" -> "1001097"  [label="CFG: "];
"1001096" -> "1001095"  [label="AST: "];
"1001097" -> "1001095"  [label="AST: "];
"1001095" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001097" -> "1001095"  [label="DDG: f"];
"1001097" -> "1001095"  [label="DDG: sizeof(*c->sorted_values   ) * (c->sorted_entries+1)"];
"1001097" -> "1001099"  [label="CFG: "];
"1001098" -> "1001097"  [label="AST: "];
"1001099" -> "1001097"  [label="AST: "];
"1001097" -> "1003546"  [label="DDG: sizeof(*c->sorted_values   ) * (c->sorted_entries+1)"];
"1001068" -> "1001097"  [label="DDG: f"];
"1001099" -> "1001097"  [label="DDG: c->sorted_entries+1"];
"1001097" -> "1001117"  [label="DDG: f"];
"1001097" -> "1001142"  [label="DDG: f"];
"1001068" -> "1001066"  [label="AST: "];
"1001068" -> "1001070"  [label="CFG: "];
"1001069" -> "1001068"  [label="AST: "];
"1001070" -> "1001068"  [label="AST: "];
"1001066" -> "1001068"  [label="CFG: "];
"1001068" -> "1003546"  [label="DDG: sizeof(*c->sorted_codewords) * (c->sorted_entries+1)"];
"1001068" -> "1001066"  [label="DDG: f"];
"1001068" -> "1001066"  [label="DDG: sizeof(*c->sorted_codewords) * (c->sorted_entries+1)"];
"1000910" -> "1001068"  [label="DDG: f"];
"1000989" -> "1001068"  [label="DDG: f"];
"1001070" -> "1001068"  [label="DDG: c->sorted_entries+1"];
"1001068" -> "1001088"  [label="DDG: f"];
"1000910" -> "1000908"  [label="AST: "];
"1000911" -> "1000910"  [label="AST: "];
"1000908" -> "1000910"  [label="CFG: "];
"1000910" -> "1003546"  [label="DDG: sizeof(c->codewords[0]) * c->entries"];
"1000910" -> "1000908"  [label="DDG: f"];
"1000910" -> "1000908"  [label="DDG: sizeof(c->codewords[0]) * c->entries"];
"1000910" -> "1000928"  [label="DDG: f"];
"1000910" -> "1001049"  [label="DDG: f"];
"1000910" -> "1001054"  [label="DDG: f"];
"1000910" -> "1001142"  [label="DDG: f"];
"1000989" -> "1000987"  [label="AST: "];
"1000990" -> "1000989"  [label="AST: "];
"1000987" -> "1000989"  [label="CFG: "];
"1000989" -> "1003546"  [label="DDG: sizeof(*values) * c->sorted_entries"];
"1000989" -> "1000987"  [label="DDG: f"];
"1000989" -> "1000987"  [label="DDG: sizeof(*values) * c->sorted_entries"];
"1000965" -> "1000989"  [label="DDG: f"];
"1000989" -> "1001002"  [label="DDG: f"];
"1000989" -> "1001049"  [label="DDG: f"];
"1000989" -> "1001054"  [label="DDG: f"];
"1000989" -> "1001142"  [label="DDG: f"];
"1000965" -> "1000963"  [label="AST: "];
"1000966" -> "1000965"  [label="AST: "];
"1000963" -> "1000965"  [label="CFG: "];
"1000965" -> "1003546"  [label="DDG: sizeof(*c->codewords) * c->sorted_entries"];
"1000965" -> "1000963"  [label="DDG: f"];
"1000965" -> "1000963"  [label="DDG: sizeof(*c->codewords) * c->sorted_entries"];
"1000965" -> "1000982"  [label="DDG: f"];
"1001070" -> "1001076"  [label="CFG: "];
"1001071" -> "1001070"  [label="AST: "];
"1001076" -> "1001070"  [label="AST: "];
"1001070" -> "1003546"  [label="DDG: c->sorted_entries+1"];
"1001099" -> "1001105"  [label="CFG: "];
"1001100" -> "1001099"  [label="AST: "];
"1001105" -> "1001099"  [label="AST: "];
"1001099" -> "1003546"  [label="DDG: c->sorted_entries+1"];
"1001124" -> "1001061"  [label="AST: "];
"1001124" -> "1001131"  [label="CFG: "];
"1001125" -> "1001124"  [label="AST: "];
"1001131" -> "1001124"  [label="AST: "];
"1001134" -> "1001124"  [label="CFG: "];
"1001124" -> "1003546"  [label="DDG: -1"];
"1001124" -> "1003546"  [label="DDG: c->sorted_values[-1]"];
"1001124" -> "1001120"  [label="DDG: c->sorted_values[-1]"];
"1001131" -> "1001124"  [label="DDG: 1"];
"1001131" -> "1001132"  [label="CFG: "];
"1001132" -> "1001131"  [label="AST: "];
"1001082" -> "1001081"  [label="AST: "];
"1001082" -> "1001086"  [label="CFG: "];
"1001083" -> "1001082"  [label="AST: "];
"1001086" -> "1001082"  [label="AST: "];
"1001089" -> "1001082"  [label="CFG: "];
"1001093" -> "1001082"  [label="CFG: "];
"1001082" -> "1003546"  [label="DDG: NULL"];
"1001082" -> "1003546"  [label="DDG: c->sorted_codewords"];
"1001082" -> "1003546"  [label="DDG: c->sorted_codewords == NULL"];
"1001062" -> "1001082"  [label="DDG: c->sorted_codewords"];
"1001613" -> "1001082"  [label="DDG: NULL"];
"1001422" -> "1001082"  [label="DDG: NULL"];
"1001062" -> "1001061"  [label="AST: "];
"1001062" -> "1001066"  [label="CFG: "];
"1001063" -> "1001062"  [label="AST: "];
"1001066" -> "1001062"  [label="AST: "];
"1001084" -> "1001062"  [label="CFG: "];
"1001062" -> "1003546"  [label="DDG: (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001066" -> "1001062"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001067" -> "1001066"  [label="AST: "];
"1001066" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001613" -> "1001612"  [label="AST: "];
"1001613" -> "1001617"  [label="CFG: "];
"1001614" -> "1001613"  [label="AST: "];
"1001617" -> "1001613"  [label="AST: "];
"1001620" -> "1001613"  [label="CFG: "];
"1001636" -> "1001613"  [label="CFG: "];
"1001613" -> "1003546"  [label="DDG: c->multiplicands"];
"1001613" -> "1003546"  [label="DDG: NULL"];
"1001613" -> "1003546"  [label="DDG: c->multiplicands == NULL"];
"1001613" -> "1001172"  [label="DDG: NULL"];
"1001521" -> "1001613"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001664" -> "1001613"  [label="DDG: c->multiplicands[j]"];
"1001594" -> "1001613"  [label="DDG: c->multiplicands"];
"1001613" -> "1001752"  [label="DDG: NULL"];
"1001521" -> "1001489"  [label="AST: "];
"1001521" -> "1001533"  [label="CFG: "];
"1001522" -> "1001521"  [label="AST: "];
"1001533" -> "1001521"  [label="AST: "];
"1001536" -> "1001521"  [label="CFG: "];
"1001521" -> "1003546"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001521" -> "1003546"  [label="DDG: val"];
"1001521" -> "1001422"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001506" -> "1001521"  [label="DDG: val"];
"1001506" -> "1001489"  [label="AST: "];
"1001506" -> "1001508"  [label="CFG: "];
"1001507" -> "1001506"  [label="AST: "];
"1001508" -> "1001506"  [label="AST: "];
"1001524" -> "1001506"  [label="CFG: "];
"1001506" -> "1003546"  [label="DDG: mults[off]*c->delta_value + c->minimum_value + last"];
"1001509" -> "1001506"  [label="DDG: mults[off]"];
"1001509" -> "1001506"  [label="DDG: c->delta_value"];
"1001206" -> "1001506"  [label="DDG: c->minimum_value"];
"1001363" -> "1001506"  [label="DDG: last"];
"1001538" -> "1001506"  [label="DDG: last"];
"1001506" -> "1001538"  [label="DDG: val"];
"1001509" -> "1001508"  [label="AST: "];
"1001509" -> "1001513"  [label="CFG: "];
"1001510" -> "1001509"  [label="AST: "];
"1001513" -> "1001509"  [label="AST: "];
"1001518" -> "1001509"  [label="CFG: "];
"1001509" -> "1003546"  [label="DDG: c->delta_value"];
"1001509" -> "1003546"  [label="DDG: mults[off]"];
"1001509" -> "1001328"  [label="DDG: mults[off]"];
"1001509" -> "1001428"  [label="DDG: mults[off]"];
"1001509" -> "1001501"  [label="DDG: mults[off]"];
"1001509" -> "1001508"  [label="DDG: mults[off]"];
"1001509" -> "1001508"  [label="DDG: c->delta_value"];
"1001214" -> "1001509"  [label="DDG: c->delta_value"];
"1001509" -> "1001561"  [label="DDG: mults[off]"];
"1001509" -> "1001619"  [label="DDG: mults[off]"];
"1001509" -> "1001679"  [label="DDG: mults[off]"];
"1001214" -> "1001204"  [label="AST: "];
"1001214" -> "1001218"  [label="CFG: "];
"1001215" -> "1001214"  [label="AST: "];
"1001218" -> "1001214"  [label="AST: "];
"1001224" -> "1001214"  [label="CFG: "];
"1001214" -> "1003546"  [label="DDG: c->delta_value"];
"1001214" -> "1003546"  [label="DDG: float32_unpack(get_bits(f, 32))"];
"1001218" -> "1001214"  [label="DDG: get_bits(f, 32)"];
"1001214" -> "1001652"  [label="DDG: c->delta_value"];
"1001218" -> "1003546"  [label="DDG: get_bits(f, 32)"];
"1001206" -> "1001204"  [label="AST: "];
"1001206" -> "1001210"  [label="CFG: "];
"1001207" -> "1001206"  [label="AST: "];
"1001210" -> "1001206"  [label="AST: "];
"1001216" -> "1001206"  [label="CFG: "];
"1001206" -> "1003546"  [label="DDG: c->minimum_value"];
"1001210" -> "1001206"  [label="DDG: get_bits(f, 32)"];
"1001206" -> "1001508"  [label="DDG: c->minimum_value"];
"1001206" -> "1001516"  [label="DDG: c->minimum_value"];
"1001206" -> "1001649"  [label="DDG: c->minimum_value"];
"1001206" -> "1001651"  [label="DDG: c->minimum_value"];
"1001206" -> "1001659"  [label="DDG: c->minimum_value"];
"1001363" -> "1001354"  [label="AST: "];
"1001363" -> "1001365"  [label="CFG: "];
"1001364" -> "1001363"  [label="AST: "];
"1001365" -> "1001363"  [label="AST: "];
"1001367" -> "1001363"  [label="CFG: "];
"1001363" -> "1003546"  [label="DDG: last"];
"1001363" -> "1001508"  [label="DDG: last"];
"1001363" -> "1001516"  [label="DDG: last"];
"1001538" -> "1001534"  [label="AST: "];
"1001538" -> "1001540"  [label="CFG: "];
"1001539" -> "1001538"  [label="AST: "];
"1001540" -> "1001538"  [label="AST: "];
"1001544" -> "1001538"  [label="CFG: "];
"1001538" -> "1003546"  [label="DDG: last"];
"1001538" -> "1003546"  [label="DDG: val"];
"1001538" -> "1001508"  [label="DDG: last"];
"1001538" -> "1001516"  [label="DDG: last"];
"1001664" -> "1001647"  [label="AST: "];
"1001664" -> "1001670"  [label="CFG: "];
"1001665" -> "1001664"  [label="AST: "];
"1001670" -> "1001664"  [label="AST: "];
"1001673" -> "1001664"  [label="CFG: "];
"1001664" -> "1003546"  [label="DDG: c->multiplicands[j]"];
"1001664" -> "1003546"  [label="DDG: val"];
"1001664" -> "1001422"  [label="DDG: c->multiplicands[j]"];
"1001649" -> "1001664"  [label="DDG: val"];
"1001649" -> "1001647"  [label="AST: "];
"1001649" -> "1001651"  [label="CFG: "];
"1001650" -> "1001649"  [label="AST: "];
"1001651" -> "1001649"  [label="AST: "];
"1001667" -> "1001649"  [label="CFG: "];
"1001649" -> "1003546"  [label="DDG: mults[j] * c->delta_value + c->minimum_value + last"];
"1001652" -> "1001649"  [label="DDG: mults[j]"];
"1001652" -> "1001649"  [label="DDG: c->delta_value"];
"1001589" -> "1001649"  [label="DDG: last"];
"1001675" -> "1001649"  [label="DDG: last"];
"1001649" -> "1001675"  [label="DDG: val"];
"1001652" -> "1001651"  [label="AST: "];
"1001652" -> "1001656"  [label="CFG: "];
"1001653" -> "1001652"  [label="AST: "];
"1001656" -> "1001652"  [label="AST: "];
"1001661" -> "1001652"  [label="CFG: "];
"1001652" -> "1003546"  [label="DDG: c->delta_value"];
"1001652" -> "1003546"  [label="DDG: mults[j]"];
"1001652" -> "1001328"  [label="DDG: mults[j]"];
"1001652" -> "1001428"  [label="DDG: mults[j]"];
"1001652" -> "1001561"  [label="DDG: mults[j]"];
"1001652" -> "1001619"  [label="DDG: mults[j]"];
"1001652" -> "1001651"  [label="DDG: mults[j]"];
"1001652" -> "1001651"  [label="DDG: c->delta_value"];
"1001343" -> "1001652"  [label="DDG: mults[j]"];
"1001652" -> "1001679"  [label="DDG: mults[j]"];
"1001343" -> "1001314"  [label="AST: "];
"1001343" -> "1001347"  [label="CFG: "];
"1001344" -> "1001343"  [label="AST: "];
"1001347" -> "1001343"  [label="AST: "];
"1001313" -> "1001343"  [label="CFG: "];
"1001343" -> "1003546"  [label="DDG: q"];
"1001343" -> "1003546"  [label="DDG: mults[j]"];
"1001343" -> "1001328"  [label="DDG: mults[j]"];
"1001324" -> "1001343"  [label="DDG: q"];
"1001343" -> "1001428"  [label="DDG: mults[j]"];
"1001343" -> "1001561"  [label="DDG: mults[j]"];
"1001343" -> "1001619"  [label="DDG: mults[j]"];
"1001343" -> "1001679"  [label="DDG: mults[j]"];
"1001324" -> "1001323"  [label="AST: "];
"1001324" -> "1001326"  [label="CFG: "];
"1001325" -> "1001324"  [label="AST: "];
"1001326" -> "1001324"  [label="AST: "];
"1001329" -> "1001324"  [label="CFG: "];
"1001345" -> "1001324"  [label="CFG: "];
"1001324" -> "1003546"  [label="DDG: EOP"];
"1001324" -> "1003546"  [label="DDG: q == EOP"];
"1001324" -> "1003546"  [label="DDG: q"];
"1001316" -> "1001324"  [label="DDG: q"];
"1001316" -> "1001314"  [label="AST: "];
"1001316" -> "1001318"  [label="CFG: "];
"1001317" -> "1001316"  [label="AST: "];
"1001318" -> "1001316"  [label="AST: "];
"1001325" -> "1001316"  [label="CFG: "];
"1001316" -> "1003546"  [label="DDG: get_bits(f, c->value_bits)"];
"1001318" -> "1001316"  [label="DDG: f"];
"1001318" -> "1001316"  [label="DDG: c->value_bits"];
"1001318" -> "1001320"  [label="CFG: "];
"1001319" -> "1001318"  [label="AST: "];
"1001320" -> "1001318"  [label="AST: "];
"1001318" -> "1003546"  [label="DDG: c->value_bits"];
"1001222" -> "1001318"  [label="DDG: c->value_bits"];
"1001318" -> "1001328"  [label="DDG: f"];
"1001318" -> "1001382"  [label="DDG: f"];
"1001318" -> "1001405"  [label="DDG: f"];
"1001318" -> "1001592"  [label="DDG: f"];
"1001318" -> "1001679"  [label="DDG: f"];
"1001222" -> "1001204"  [label="AST: "];
"1001222" -> "1001226"  [label="CFG: "];
"1001223" -> "1001222"  [label="AST: "];
"1001226" -> "1001222"  [label="AST: "];
"1001233" -> "1001222"  [label="CFG: "];
"1001222" -> "1003546"  [label="DDG: c->value_bits"];
"1001222" -> "1003546"  [label="DDG: get_bits(f, 4)+1"];
"1001589" -> "1001587"  [label="AST: "];
"1001589" -> "1001591"  [label="CFG: "];
"1001590" -> "1001589"  [label="AST: "];
"1001591" -> "1001589"  [label="AST: "];
"1001593" -> "1001589"  [label="CFG: "];
"1001589" -> "1003546"  [label="DDG: last"];
"1001589" -> "1001651"  [label="DDG: last"];
"1001589" -> "1001659"  [label="DDG: last"];
"1001675" -> "1001671"  [label="AST: "];
"1001675" -> "1001677"  [label="CFG: "];
"1001676" -> "1001675"  [label="AST: "];
"1001677" -> "1001675"  [label="AST: "];
"1001646" -> "1001675"  [label="CFG: "];
"1001675" -> "1003546"  [label="DDG: val"];
"1001675" -> "1003546"  [label="DDG: last"];
"1001675" -> "1001651"  [label="DDG: last"];
"1001675" -> "1001659"  [label="DDG: last"];
"1001594" -> "1001587"  [label="AST: "];
"1001594" -> "1001598"  [label="CFG: "];
"1001595" -> "1001594"  [label="AST: "];
"1001598" -> "1001594"  [label="AST: "];
"1001615" -> "1001594"  [label="CFG: "];
"1001594" -> "1003546"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001598" -> "1001594"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001598" -> "1001600"  [label="CFG: "];
"1001599" -> "1001598"  [label="AST: "];
"1001600" -> "1001598"  [label="AST: "];
"1001598" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001600" -> "1001598"  [label="DDG: f"];
"1001600" -> "1001598"  [label="DDG: sizeof(c->multiplicands[0]) * c->lookup_values"];
"1001600" -> "1001602"  [label="CFG: "];
"1001601" -> "1001600"  [label="AST: "];
"1001602" -> "1001600"  [label="AST: "];
"1001600" -> "1003546"  [label="DDG: sizeof(c->multiplicands[0]) * c->lookup_values"];
"1001592" -> "1001600"  [label="DDG: f"];
"1001602" -> "1001600"  [label="DDG: c->lookup_values"];
"1001600" -> "1001619"  [label="DDG: f"];
"1001600" -> "1001679"  [label="DDG: f"];
"1001592" -> "1001587"  [label="AST: "];
"1001592" -> "1001593"  [label="CFG: "];
"1001593" -> "1001592"  [label="AST: "];
"1001596" -> "1001592"  [label="CFG: "];
"1001592" -> "1003546"  [label="DDG: CHECK(f)"];
"1001602" -> "1001609"  [label="CFG: "];
"1001603" -> "1001602"  [label="AST: "];
"1001609" -> "1001602"  [label="AST: "];
"1001307" -> "1001602"  [label="DDG: c->lookup_values"];
"1001602" -> "1001622"  [label="DDG: c->lookup_values"];
"1001602" -> "1001640"  [label="DDG: c->lookup_values"];
"1001307" -> "1001305"  [label="AST: "];
"1001307" -> "1001309"  [label="CFG: "];
"1001308" -> "1001307"  [label="AST: "];
"1001309" -> "1001307"  [label="AST: "];
"1001305" -> "1001307"  [label="CFG: "];
"1001307" -> "1001305"  [label="DDG: c->lookup_values"];
"1001307" -> "1001331"  [label="DDG: c->lookup_values"];
"1001307" -> "1001431"  [label="DDG: c->lookup_values"];
"1001307" -> "1001493"  [label="DDG: c->lookup_values"];
"1001307" -> "1001682"  [label="DDG: c->lookup_values"];
"1001422" -> "1001421"  [label="AST: "];
"1001422" -> "1001426"  [label="CFG: "];
"1001423" -> "1001422"  [label="AST: "];
"1001426" -> "1001422"  [label="AST: "];
"1001429" -> "1001422"  [label="CFG: "];
"1001444" -> "1001422"  [label="CFG: "];
"1001422" -> "1003546"  [label="DDG: c->multiplicands == NULL"];
"1001422" -> "1003546"  [label="DDG: c->multiplicands"];
"1001422" -> "1003546"  [label="DDG: NULL"];
"1001422" -> "1001172"  [label="DDG: NULL"];
"1001376" -> "1001422"  [label="DDG: c->multiplicands"];
"1001399" -> "1001422"  [label="DDG: c->multiplicands"];
"1001422" -> "1001752"  [label="DDG: NULL"];
"1001376" -> "1001368"  [label="AST: "];
"1001376" -> "1001380"  [label="CFG: "];
"1001377" -> "1001376"  [label="AST: "];
"1001380" -> "1001376"  [label="AST: "];
"1001424" -> "1001376"  [label="CFG: "];
"1001376" -> "1003546"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001380" -> "1001376"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001380" -> "1001382"  [label="CFG: "];
"1001381" -> "1001380"  [label="AST: "];
"1001382" -> "1001380"  [label="AST: "];
"1001380" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001382" -> "1001380"  [label="DDG: f"];
"1001382" -> "1001380"  [label="DDG: sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions"];
"1001382" -> "1001384"  [label="CFG: "];
"1001383" -> "1001382"  [label="AST: "];
"1001384" -> "1001382"  [label="AST: "];
"1001382" -> "1003546"  [label="DDG: sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions"];
"1001384" -> "1001382"  [label="DDG: c->sorted_entries * c->dimensions"];
"1001382" -> "1001428"  [label="DDG: f"];
"1001382" -> "1001561"  [label="DDG: f"];
"1001382" -> "1001679"  [label="DDG: f"];
"1001384" -> "1001391"  [label="CFG: "];
"1001385" -> "1001384"  [label="AST: "];
"1001391" -> "1001384"  [label="AST: "];
"1001384" -> "1003546"  [label="DDG: c->sorted_entries * c->dimensions"];
"1001391" -> "1001384"  [label="DDG: c->sorted_entries"];
"1001391" -> "1001384"  [label="DDG: c->dimensions"];
"1001391" -> "1001395"  [label="CFG: "];
"1001392" -> "1001391"  [label="AST: "];
"1001395" -> "1001391"  [label="AST: "];
"1001391" -> "1003546"  [label="DDG: c->sorted_entries"];
"1001391" -> "1003546"  [label="DDG: c->dimensions"];
"1001370" -> "1001391"  [label="DDG: c->sorted_entries"];
"1001262" -> "1001391"  [label="DDG: c->dimensions"];
"1001391" -> "1001443"  [label="DDG: c->sorted_entries"];
"1001391" -> "1001445"  [label="DDG: c->sorted_entries"];
"1001391" -> "1001482"  [label="DDG: c->dimensions"];
"1001370" -> "1001369"  [label="AST: "];
"1001370" -> "1001374"  [label="CFG: "];
"1001371" -> "1001370"  [label="AST: "];
"1001374" -> "1001370"  [label="AST: "];
"1001375" -> "1001370"  [label="CFG: "];
"1001378" -> "1001370"  [label="CFG: "];
"1001370" -> "1003546"  [label="DDG: c->sorted_entries"];
"1001370" -> "1003546"  [label="DDG: c->sorted_entries == 0"];
"1001157" -> "1001370"  [label="DDG: c->sorted_entries"];
"1001157" -> "1001152"  [label="AST: "];
"1001157" -> "1001163"  [label="CFG: "];
"1001158" -> "1001157"  [label="AST: "];
"1001163" -> "1001157"  [label="AST: "];
"1001152" -> "1001157"  [label="CFG: "];
"1001157" -> "1003546"  [label="DDG: c->sorted_entries"];
"1001157" -> "1001152"  [label="DDG: c->sorted_entries"];
"1001145" -> "1001157"  [label="DDG: c->sorted_entries"];
"1001157" -> "1001443"  [label="DDG: c->sorted_entries"];
"1001157" -> "1001445"  [label="DDG: c->sorted_entries"];
"1001145" -> "1001142"  [label="AST: "];
"1001145" -> "1001149"  [label="CFG: "];
"1001146" -> "1001145"  [label="AST: "];
"1001149" -> "1001145"  [label="AST: "];
"1001142" -> "1001145"  [label="CFG: "];
"1001145" -> "1001142"  [label="DDG: c->sorted_entries"];
"1001262" -> "1001258"  [label="AST: "];
"1001262" -> "1001266"  [label="CFG: "];
"1001263" -> "1001262"  [label="AST: "];
"1001266" -> "1001262"  [label="AST: "];
"1001258" -> "1001262"  [label="CFG: "];
"1001262" -> "1003546"  [label="DDG: c->dimensions"];
"1001262" -> "1003546"  [label="DDG: c->entries"];
"1001262" -> "1001258"  [label="DDG: c->entries"];
"1001262" -> "1001258"  [label="DDG: c->dimensions"];
"1001166" -> "1001262"  [label="DDG: c->entries"];
"1000608" -> "1001262"  [label="DDG: c->dimensions"];
"1001262" -> "1001414"  [label="DDG: c->entries"];
"1001262" -> "1001414"  [label="DDG: c->dimensions"];
"1001262" -> "1001443"  [label="DDG: c->entries"];
"1001262" -> "1001445"  [label="DDG: c->entries"];
"1001166" -> "1001141"  [label="AST: "];
"1001166" -> "1001169"  [label="CFG: "];
"1001167" -> "1001166"  [label="AST: "];
"1001168" -> "1001166"  [label="AST: "];
"1001169" -> "1001166"  [label="AST: "];
"1001174" -> "1001166"  [label="CFG: "];
"1001166" -> "1003546"  [label="DDG: setup_temp_free(f, lengths, c->entries)"];
"1001166" -> "1003546"  [label="DDG: c->entries"];
"1001166" -> "1003546"  [label="DDG: lengths"];
"1001152" -> "1001166"  [label="DDG: f"];
"1001133" -> "1001166"  [label="DDG: lengths"];
"1001152" -> "1001141"  [label="AST: "];
"1001153" -> "1001152"  [label="AST: "];
"1001154" -> "1001152"  [label="AST: "];
"1001167" -> "1001152"  [label="CFG: "];
"1001152" -> "1003546"  [label="DDG: setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries)"];
"1001152" -> "1003546"  [label="DDG: sizeof(*c->codewords)*c->sorted_entries"];
"1001142" -> "1001152"  [label="DDG: f"];
"1001172" -> "1001152"  [label="DDG: c->codewords"];
"1000977" -> "1001152"  [label="DDG: c->codewords"];
"1000923" -> "1001152"  [label="DDG: c->codewords"];
"1001142" -> "1001141"  [label="AST: "];
"1001143" -> "1001142"  [label="AST: "];
"1001144" -> "1001142"  [label="AST: "];
"1001153" -> "1001142"  [label="CFG: "];
"1001142" -> "1003546"  [label="DDG: sizeof(*values)*c->sorted_entries"];
"1001142" -> "1003546"  [label="DDG: setup_temp_free(f, values, sizeof(*values)*c->sorted_entries)"];
"1001142" -> "1003546"  [label="DDG: values"];
"1001133" -> "1001142"  [label="DDG: values"];
"1001133" -> "1001061"  [label="AST: "];
"1001133" -> "1001136"  [label="CFG: "];
"1001134" -> "1001133"  [label="AST: "];
"1001135" -> "1001133"  [label="AST: "];
"1001136" -> "1001133"  [label="AST: "];
"1001139" -> "1001133"  [label="CFG: "];
"1001133" -> "1003546"  [label="DDG: lengths"];
"1001133" -> "1003546"  [label="DDG: values"];
"1001133" -> "1003546"  [label="DDG: compute_sorted_huffman(c, lengths, values)"];
"1001133" -> "1001177"  [label="DDG: c"];
"1001172" -> "1001141"  [label="AST: "];
"1001172" -> "1001176"  [label="CFG: "];
"1001173" -> "1001172"  [label="AST: "];
"1001176" -> "1001172"  [label="AST: "];
"1001178" -> "1001172"  [label="CFG: "];
"1001172" -> "1003546"  [label="DDG: NULL"];
"1001172" -> "1003546"  [label="DDG: c->codewords"];
"1000977" -> "1000976"  [label="AST: "];
"1000977" -> "1000978"  [label="CFG: "];
"1000978" -> "1000977"  [label="AST: "];
"1000983" -> "1000977"  [label="CFG: "];
"1000986" -> "1000977"  [label="CFG: "];
"1000977" -> "1003546"  [label="DDG: !c->codewords"];
"1000977" -> "1003546"  [label="DDG: c->codewords"];
"1000959" -> "1000977"  [label="DDG: c->codewords"];
"1000959" -> "1000938"  [label="AST: "];
"1000959" -> "1000963"  [label="CFG: "];
"1000960" -> "1000959"  [label="AST: "];
"1000963" -> "1000959"  [label="AST: "];
"1000979" -> "1000959"  [label="CFG: "];
"1000959" -> "1003546"  [label="DDG: (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1000963" -> "1000959"  [label="DDG: setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1000964" -> "1000963"  [label="AST: "];
"1000963" -> "1003546"  [label="DDG: setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1000923" -> "1000922"  [label="AST: "];
"1000923" -> "1000924"  [label="CFG: "];
"1000924" -> "1000923"  [label="AST: "];
"1000929" -> "1000923"  [label="CFG: "];
"1001038" -> "1000923"  [label="CFG: "];
"1000923" -> "1003546"  [label="DDG: !c->codewords"];
"1000923" -> "1003546"  [label="DDG: c->codewords"];
"1000904" -> "1000923"  [label="DDG: c->codewords"];
"1000904" -> "1000903"  [label="AST: "];
"1000904" -> "1000908"  [label="CFG: "];
"1000905" -> "1000904"  [label="AST: "];
"1000908" -> "1000904"  [label="AST: "];
"1000925" -> "1000904"  [label="CFG: "];
"1000904" -> "1003546"  [label="DDG: (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1000908" -> "1000904"  [label="DDG: setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1000909" -> "1000908"  [label="AST: "];
"1000908" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1000608" -> "1000607"  [label="AST: "];
"1000608" -> "1000612"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000612" -> "1000608"  [label="AST: "];
"1000615" -> "1000608"  [label="CFG: "];
"1000607" -> "1000608"  [label="CFG: "];
"1000608" -> "1003546"  [label="DDG: c->dimensions"];
"1000608" -> "1000607"  [label="DDG: c->dimensions"];
"1000608" -> "1000607"  [label="DDG: 0"];
"1000555" -> "1000608"  [label="DDG: c->dimensions"];
"1000555" -> "1000492"  [label="AST: "];
"1000555" -> "1000559"  [label="CFG: "];
"1000556" -> "1000555"  [label="AST: "];
"1000559" -> "1000555"  [label="AST: "];
"1000567" -> "1000555"  [label="CFG: "];
"1000555" -> "1003546"  [label="DDG: (get_bits(f, 8)<<8) + x"];
"1000560" -> "1000555"  [label="DDG: get_bits(f, 8)"];
"1000560" -> "1000555"  [label="DDG: 8"];
"1000550" -> "1000555"  [label="DDG: x"];
"1000560" -> "1000559"  [label="AST: "];
"1000560" -> "1000564"  [label="CFG: "];
"1000564" -> "1000560"  [label="AST: "];
"1000565" -> "1000560"  [label="CFG: "];
"1000560" -> "1000559"  [label="DDG: get_bits(f, 8)"];
"1000560" -> "1000559"  [label="DDG: 8"];
"1000550" -> "1000492"  [label="AST: "];
"1000551" -> "1000550"  [label="AST: "];
"1000557" -> "1000550"  [label="CFG: "];
"1000550" -> "1000559"  [label="DDG: x"];
"1001399" -> "1001398"  [label="AST: "];
"1001399" -> "1001403"  [label="CFG: "];
"1001400" -> "1001399"  [label="AST: "];
"1001403" -> "1001399"  [label="AST: "];
"1001424" -> "1001399"  [label="CFG: "];
"1001399" -> "1003546"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001403" -> "1001399"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001403" -> "1001405"  [label="CFG: "];
"1001404" -> "1001403"  [label="AST: "];
"1001405" -> "1001403"  [label="AST: "];
"1001403" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001405" -> "1001403"  [label="DDG: f"];
"1001405" -> "1001403"  [label="DDG: sizeof(c->multiplicands[0]) * c->entries        * c->dimensions"];
"1001405" -> "1001407"  [label="CFG: "];
"1001406" -> "1001405"  [label="AST: "];
"1001407" -> "1001405"  [label="AST: "];
"1001405" -> "1003546"  [label="DDG: sizeof(c->multiplicands[0]) * c->entries        * c->dimensions"];
"1001407" -> "1001405"  [label="DDG: c->entries        * c->dimensions"];
"1001405" -> "1001428"  [label="DDG: f"];
"1001405" -> "1001561"  [label="DDG: f"];
"1001405" -> "1001679"  [label="DDG: f"];
"1001407" -> "1001414"  [label="CFG: "];
"1001408" -> "1001407"  [label="AST: "];
"1001414" -> "1001407"  [label="AST: "];
"1001407" -> "1003546"  [label="DDG: c->entries        * c->dimensions"];
"1001414" -> "1001407"  [label="DDG: c->entries"];
"1001414" -> "1001407"  [label="DDG: c->dimensions"];
"1001414" -> "1001418"  [label="CFG: "];
"1001415" -> "1001414"  [label="AST: "];
"1001418" -> "1001414"  [label="AST: "];
"1001414" -> "1003546"  [label="DDG: c->entries"];
"1001414" -> "1003546"  [label="DDG: c->dimensions"];
"1001414" -> "1001443"  [label="DDG: c->entries"];
"1001414" -> "1001445"  [label="DDG: c->entries"];
"1001414" -> "1001482"  [label="DDG: c->dimensions"];
"1000999" -> "1000998"  [label="AST: "];
"1000999" -> "1001000"  [label="CFG: "];
"1001000" -> "1000999"  [label="AST: "];
"1001003" -> "1000999"  [label="CFG: "];
"1001006" -> "1000999"  [label="CFG: "];
"1000999" -> "1003546"  [label="DDG: !values"];
"1000999" -> "1003546"  [label="DDG: values"];
"1000985" -> "1000999"  [label="DDG: values"];
"1000985" -> "1000938"  [label="AST: "];
"1000985" -> "1000987"  [label="CFG: "];
"1000986" -> "1000985"  [label="AST: "];
"1000987" -> "1000985"  [label="AST: "];
"1001000" -> "1000985"  [label="CFG: "];
"1000985" -> "1003546"  [label="DDG: (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1000987" -> "1000985"  [label="DDG: setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1000988" -> "1000987"  [label="AST: "];
"1000987" -> "1003546"  [label="DDG: setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1001258" -> "1001257"  [label="AST: "];
"1001259" -> "1001258"  [label="AST: "];
"1001272" -> "1001258"  [label="CFG: "];
"1001258" -> "1003546"  [label="DDG: c->entries * c->dimensions"];
"1000626" -> "1000622"  [label="AST: "];
"1000626" -> "1000628"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000628" -> "1000626"  [label="AST: "];
"1000651" -> "1000626"  [label="CFG: "];
"1000626" -> "1003546"  [label="DDG: (uint8 *) setup_temp_malloc(f, c->entries)"];
"1000628" -> "1000626"  [label="DDG: setup_temp_malloc(f, c->entries)"];
"1000629" -> "1000628"  [label="AST: "];
"1000628" -> "1003546"  [label="DDG: setup_temp_malloc(f, c->entries)"];
"1000717" -> "1000677"  [label="AST: "];
"1000717" -> "1000718"  [label="CFG: "];
"1000718" -> "1000717"  [label="AST: "];
"1000673" -> "1000717"  [label="CFG: "];
"1000717" -> "1003546"  [label="DDG: current_length"];
"1000664" -> "1000658"  [label="AST: "];
"1000664" -> "1000666"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000666" -> "1000664"  [label="AST: "];
"1000673" -> "1000664"  [label="CFG: "];
"1000664" -> "1003546"  [label="DDG: get_bits(f,5) + 1"];
"1000664" -> "1003546"  [label="DDG: current_length"];
"1000687" -> "1000677"  [label="AST: "];
"1000688" -> "1000687"  [label="AST: "];
"1000696" -> "1000687"  [label="CFG: "];
"1000687" -> "1003546"  [label="DDG: get_bits(f, ilog(limit))"];
"1000687" -> "1000694"  [label="DDG: n"];
"1000687" -> "1000695"  [label="DDG: n"];
"1000660" -> "1000658"  [label="AST: "];
"1000660" -> "1000662"  [label="CFG: "];
"1000661" -> "1000660"  [label="AST: "];
"1000662" -> "1000660"  [label="AST: "];
"1000665" -> "1000660"  [label="CFG: "];
"1000698" -> "1000694"  [label="AST: "];
"1000698" -> "1000700"  [label="CFG: "];
"1000699" -> "1000698"  [label="AST: "];
"1000700" -> "1000698"  [label="AST: "];
"1000694" -> "1000698"  [label="CFG: "];
"1000698" -> "1003546"  [label="DDG: c->entries"];
"1000698" -> "1000694"  [label="DDG: c->entries"];
"1001690" -> "1001204"  [label="AST: "];
"1001690" -> "1001691"  [label="CFG: "];
"1001691" -> "1001690"  [label="AST: "];
"1001693" -> "1001690"  [label="CFG: "];
"1001679" -> "1001690"  [label="DDG: f"];
"1001679" -> "1001204"  [label="AST: "];
"1001679" -> "1001682"  [label="CFG: "];
"1001680" -> "1001679"  [label="AST: "];
"1001681" -> "1001679"  [label="AST: "];
"1001682" -> "1001679"  [label="AST: "];
"1001691" -> "1001679"  [label="CFG: "];
"1001679" -> "1003546"  [label="DDG: sizeof(mults[0])*c->lookup_values"];
"1001679" -> "1003546"  [label="DDG: setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values)"];
"1001679" -> "1003546"  [label="DDG: mults"];
"1001682" -> "1001679"  [label="DDG: c->lookup_values"];
"1001682" -> "1001687"  [label="CFG: "];
"1001683" -> "1001682"  [label="AST: "];
"1001687" -> "1001682"  [label="AST: "];
"1001682" -> "1003546"  [label="DDG: c->lookup_values"];
"1001493" -> "1001682"  [label="DDG: c->lookup_values"];
"1001640" -> "1001682"  [label="DDG: c->lookup_values"];
"1001555" -> "1001682"  [label="DDG: c->lookup_values"];
"1001493" -> "1001491"  [label="AST: "];
"1001493" -> "1001497"  [label="CFG: "];
"1001494" -> "1001493"  [label="AST: "];
"1001497" -> "1001493"  [label="AST: "];
"1001491" -> "1001493"  [label="CFG: "];
"1001493" -> "1003546"  [label="DDG: z / div"];
"1001493" -> "1001491"  [label="DDG: z / div"];
"1001493" -> "1001491"  [label="DDG: c->lookup_values"];
"1001494" -> "1001493"  [label="DDG: z"];
"1001494" -> "1001493"  [label="DDG: div"];
"1001555" -> "1001493"  [label="DDG: c->lookup_values"];
"1001493" -> "1001555"  [label="DDG: c->lookup_values"];
"1001494" -> "1001496"  [label="CFG: "];
"1001495" -> "1001494"  [label="AST: "];
"1001496" -> "1001494"  [label="AST: "];
"1001498" -> "1001494"  [label="CFG: "];
"1001494" -> "1003546"  [label="DDG: z"];
"1001494" -> "1003546"  [label="DDG: div"];
"1001464" -> "1001494"  [label="DDG: z"];
"1001475" -> "1001494"  [label="DDG: div"];
"1001576" -> "1001494"  [label="DDG: div"];
"1001494" -> "1001551"  [label="DDG: div"];
"1001464" -> "1001462"  [label="AST: "];
"1001464" -> "1001466"  [label="CFG: "];
"1001465" -> "1001464"  [label="AST: "];
"1001466" -> "1001464"  [label="AST: "];
"1001476" -> "1001464"  [label="CFG: "];
"1001464" -> "1003546"  [label="DDG: sparse ? c->sorted_values[j] : j"];
"1001464" -> "1003546"  [label="DDG: z"];
"1001457" -> "1001464"  [label="DDG: j"];
"1001457" -> "1001453"  [label="AST: "];
"1001457" -> "1001459"  [label="CFG: "];
"1001458" -> "1001457"  [label="AST: "];
"1001459" -> "1001457"  [label="AST: "];
"1001465" -> "1001457"  [label="CFG: "];
"1001583" -> "1001457"  [label="CFG: "];
"1001457" -> "1003546"  [label="DDG: len"];
"1001457" -> "1003546"  [label="DDG: j < len"];
"1001457" -> "1003546"  [label="DDG: j"];
"1001460" -> "1001457"  [label="DDG: j"];
"1001454" -> "1001457"  [label="DDG: j"];
"1001443" -> "1001457"  [label="DDG: len"];
"1001457" -> "1001460"  [label="DDG: j"];
"1001457" -> "1001466"  [label="DDG: j"];
"1001457" -> "1001527"  [label="DDG: j"];
"1001460" -> "1001453"  [label="AST: "];
"1001460" -> "1001461"  [label="CFG: "];
"1001461" -> "1001460"  [label="AST: "];
"1001458" -> "1001460"  [label="CFG: "];
"1001527" -> "1001460"  [label="DDG: j"];
"1001527" -> "1001526"  [label="AST: "];
"1001527" -> "1001529"  [label="CFG: "];
"1001528" -> "1001527"  [label="AST: "];
"1001529" -> "1001527"  [label="AST: "];
"1001532" -> "1001527"  [label="CFG: "];
"1001527" -> "1003546"  [label="DDG: j"];
"1001527" -> "1001526"  [label="DDG: j"];
"1001527" -> "1001526"  [label="DDG: c->dimensions"];
"1001482" -> "1001527"  [label="DDG: c->dimensions"];
"1001527" -> "1001542"  [label="DDG: c->dimensions"];
"1001482" -> "1001478"  [label="AST: "];
"1001482" -> "1001484"  [label="CFG: "];
"1001483" -> "1001482"  [label="AST: "];
"1001484" -> "1001482"  [label="AST: "];
"1001492" -> "1001482"  [label="CFG: "];
"1001461" -> "1001482"  [label="CFG: "];
"1001482" -> "1003546"  [label="DDG: k"];
"1001482" -> "1003546"  [label="DDG: c->dimensions"];
"1001482" -> "1003546"  [label="DDG: k < c->dimensions"];
"1001487" -> "1001482"  [label="DDG: k"];
"1001479" -> "1001482"  [label="DDG: k"];
"1001542" -> "1001482"  [label="DDG: c->dimensions"];
"1001482" -> "1001487"  [label="DDG: k"];
"1001482" -> "1001526"  [label="DDG: k"];
"1001482" -> "1001542"  [label="DDG: k"];
"1001482" -> "1001543"  [label="DDG: k"];
"1001487" -> "1001478"  [label="AST: "];
"1001487" -> "1001488"  [label="CFG: "];
"1001488" -> "1001487"  [label="AST: "];
"1001483" -> "1001487"  [label="CFG: "];
"1001479" -> "1001478"  [label="AST: "];
"1001479" -> "1001481"  [label="CFG: "];
"1001480" -> "1001479"  [label="AST: "];
"1001481" -> "1001479"  [label="AST: "];
"1001483" -> "1001479"  [label="CFG: "];
"1001542" -> "1001541"  [label="AST: "];
"1001542" -> "1001546"  [label="CFG: "];
"1001543" -> "1001542"  [label="AST: "];
"1001546" -> "1001542"  [label="AST: "];
"1001552" -> "1001542"  [label="CFG: "];
"1001488" -> "1001542"  [label="CFG: "];
"1001542" -> "1003546"  [label="DDG: k+1"];
"1001542" -> "1003546"  [label="DDG: k+1 < c->dimensions"];
"1001542" -> "1003546"  [label="DDG: c->dimensions"];
"1001454" -> "1001453"  [label="AST: "];
"1001454" -> "1001456"  [label="CFG: "];
"1001455" -> "1001454"  [label="AST: "];
"1001456" -> "1001454"  [label="AST: "];
"1001458" -> "1001454"  [label="CFG: "];
"1001443" -> "1001354"  [label="AST: "];
"1001443" -> "1001445"  [label="CFG: "];
"1001444" -> "1001443"  [label="AST: "];
"1001445" -> "1001443"  [label="AST: "];
"1001455" -> "1001443"  [label="CFG: "];
"1001443" -> "1003546"  [label="DDG: sparse ? c->sorted_entries : c->entries"];
"1001475" -> "1001462"  [label="AST: "];
"1001475" -> "1001477"  [label="CFG: "];
"1001476" -> "1001475"  [label="AST: "];
"1001477" -> "1001475"  [label="AST: "];
"1001480" -> "1001475"  [label="CFG: "];
"1001475" -> "1003546"  [label="DDG: div"];
"1001576" -> "1001549"  [label="AST: "];
"1001576" -> "1001578"  [label="CFG: "];
"1001577" -> "1001576"  [label="AST: "];
"1001578" -> "1001576"  [label="AST: "];
"1001488" -> "1001576"  [label="CFG: "];
"1001576" -> "1003546"  [label="DDG: div"];
"1001555" -> "1001576"  [label="DDG: c->lookup_values"];
"1001551" -> "1001576"  [label="DDG: div"];
"1001555" -> "1001553"  [label="AST: "];
"1001555" -> "1001557"  [label="CFG: "];
"1001556" -> "1001555"  [label="AST: "];
"1001557" -> "1001555"  [label="AST: "];
"1001553" -> "1001555"  [label="CFG: "];
"1001555" -> "1001553"  [label="DDG: c->lookup_values"];
"1001555" -> "1001564"  [label="DDG: c->lookup_values"];
"1001551" -> "1001550"  [label="AST: "];
"1001551" -> "1001553"  [label="CFG: "];
"1001552" -> "1001551"  [label="AST: "];
"1001553" -> "1001551"  [label="AST: "];
"1001562" -> "1001551"  [label="CFG: "];
"1001577" -> "1001551"  [label="CFG: "];
"1001551" -> "1003546"  [label="DDG: div > UINT_MAX / (unsigned int) c->lookup_values"];
"1001551" -> "1003546"  [label="DDG: UINT_MAX / (unsigned int) c->lookup_values"];
"1001551" -> "1003546"  [label="DDG: div"];
"1001553" -> "1001551"  [label="DDG: UINT_MAX"];
"1001553" -> "1001551"  [label="DDG: (unsigned int) c->lookup_values"];
"1001554" -> "1001553"  [label="AST: "];
"1001553" -> "1003546"  [label="DDG: UINT_MAX"];
"1001553" -> "1003546"  [label="DDG: (unsigned int) c->lookup_values"];
"1001640" -> "1001638"  [label="AST: "];
"1001640" -> "1001642"  [label="CFG: "];
"1001641" -> "1001640"  [label="AST: "];
"1001642" -> "1001640"  [label="AST: "];
"1001638" -> "1001640"  [label="CFG: "];
"1001640" -> "1001638"  [label="DDG: c->lookup_values"];
"1001714" -> "1001712"  [label="AST: "];
"1001714" -> "1001716"  [label="CFG: "];
"1001715" -> "1001714"  [label="AST: "];
"1001716" -> "1001714"  [label="AST: "];
"1001712" -> "1001714"  [label="CFG: "];
"1001714" -> "1001712"  [label="DDG: f"];
"1001714" -> "1001712"  [label="DDG: 16"];
"1001714" -> "1001722"  [label="DDG: f"];
"1001742" -> "1001746"  [label="CFG: "];
"1001743" -> "1001742"  [label="AST: "];
"1001746" -> "1001742"  [label="AST: "];
"1001742" -> "1003546"  [label="DDG: f->floor_count"];
"1001725" -> "1001742"  [label="DDG: f->floor_count"];
"1001742" -> "1001765"  [label="DDG: f->floor_count"];
"1001725" -> "1000109"  [label="AST: "];
"1001725" -> "1001729"  [label="CFG: "];
"1001726" -> "1001725"  [label="AST: "];
"1001729" -> "1001725"  [label="AST: "];
"1001736" -> "1001725"  [label="CFG: "];
"1001725" -> "1003546"  [label="DDG: get_bits(f, 6)+1"];
"1002078" -> "1002072"  [label="AST: "];
"1002078" -> "1002080"  [label="CFG: "];
"1002079" -> "1002078"  [label="AST: "];
"1002080" -> "1002078"  [label="AST: "];
"1002072" -> "1002078"  [label="CFG: "];
"1002078" -> "1003546"  [label="DDG: g->rangebits"];
"1002078" -> "1002072"  [label="DDG: 1"];
"1002078" -> "1002072"  [label="DDG: g->rangebits"];
"1002058" -> "1002078"  [label="DDG: g->rangebits"];
"1002058" -> "1001883"  [label="AST: "];
"1002059" -> "1002058"  [label="AST: "];
"1002068" -> "1002058"  [label="CFG: "];
"1002058" -> "1003546"  [label="DDG: get_bits(f,4)"];
"1002272" -> "1002276"  [label="CFG: "];
"1002273" -> "1002272"  [label="AST: "];
"1002276" -> "1002272"  [label="AST: "];
"1002272" -> "1003546"  [label="DDG: f->residue_count"];
"1002255" -> "1002272"  [label="DDG: f->residue_count"];
"1002272" -> "1002297"  [label="DDG: f->residue_count"];
"1002255" -> "1000109"  [label="AST: "];
"1002255" -> "1002259"  [label="CFG: "];
"1002256" -> "1002255"  [label="AST: "];
"1002259" -> "1002255"  [label="AST: "];
"1002266" -> "1002255"  [label="CFG: "];
"1002255" -> "1003546"  [label="DDG: get_bits(f, 6)+1"];
"1002471" -> "1002470"  [label="AST: "];
"1002471" -> "1002473"  [label="CFG: "];
"1002472" -> "1002471"  [label="AST: "];
"1002473" -> "1002471"  [label="AST: "];
"1002470" -> "1002471"  [label="CFG: "];
"1002471" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1002471" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002471" -> "1003546"  [label="DDG: f"];
"1002471" -> "1002470"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002470" -> "1002464"  [label="AST: "];
"1003546" -> "1002470"  [label="CFG: "];
"1002470" -> "1003546"  [label="DDG: <RET>"];
"1002505" -> "1002504"  [label="AST: "];
"1002506" -> "1002505"  [label="AST: "];
"1002521" -> "1002505"  [label="CFG: "];
"1002505" -> "1003546"  [label="DDG: get_bits(f, 8)"];
"1002505" -> "1002517"  [label="DDG: r->residue_books[j][k]"];
"1002517" -> "1002516"  [label="AST: "];
"1002517" -> "1002525"  [label="CFG: "];
"1002518" -> "1002517"  [label="AST: "];
"1002525" -> "1002517"  [label="AST: "];
"1002530" -> "1002517"  [label="CFG: "];
"1002494" -> "1002517"  [label="CFG: "];
"1002517" -> "1003546"  [label="DDG: r->residue_books[j][k]"];
"1002517" -> "1003546"  [label="DDG: r->residue_books[j][k] >= f->codebook_count"];
"1002517" -> "1003546"  [label="DDG: f->codebook_count"];
"1002517" -> "1002401"  [label="DDG: f->codebook_count"];
"1002401" -> "1002517"  [label="DDG: f->codebook_count"];
"1002401" -> "1002400"  [label="AST: "];
"1002401" -> "1002405"  [label="CFG: "];
"1002402" -> "1002401"  [label="AST: "];
"1002405" -> "1002401"  [label="AST: "];
"1002410" -> "1002401"  [label="CFG: "];
"1002414" -> "1002401"  [label="CFG: "];
"1002401" -> "1003546"  [label="DDG: r->classbook"];
"1002401" -> "1003546"  [label="DDG: r->classbook >= f->codebook_count"];
"1002401" -> "1003546"  [label="DDG: f->codebook_count"];
"1002393" -> "1002401"  [label="DDG: r->classbook"];
"1002034" -> "1002401"  [label="DDG: f->codebook_count"];
"1001991" -> "1002401"  [label="DDG: f->codebook_count"];
"1002529" -> "1002528"  [label="AST: "];
"1002529" -> "1002531"  [label="CFG: "];
"1002530" -> "1002529"  [label="AST: "];
"1002531" -> "1002529"  [label="AST: "];
"1002528" -> "1002529"  [label="CFG: "];
"1002529" -> "1003546"  [label="DDG: f"];
"1002529" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002529" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002529" -> "1002528"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002528" -> "1002516"  [label="AST: "];
"1003546" -> "1002528"  [label="CFG: "];
"1002528" -> "1003546"  [label="DDG: <RET>"];
"1002328" -> "1002318"  [label="AST: "];
"1002329" -> "1002328"  [label="AST: "];
"1002341" -> "1002328"  [label="CFG: "];
"1002328" -> "1003546"  [label="DDG: get_bits(f, 16)"];
"1002328" -> "1002338"  [label="DDG: f->residue_types[i]"];
"1002338" -> "1002337"  [label="AST: "];
"1002338" -> "1002344"  [label="CFG: "];
"1002339" -> "1002338"  [label="AST: "];
"1002344" -> "1002338"  [label="AST: "];
"1002347" -> "1002338"  [label="CFG: "];
"1002351" -> "1002338"  [label="CFG: "];
"1002338" -> "1003546"  [label="DDG: f->residue_types[i]"];
"1002338" -> "1003546"  [label="DDG: f->residue_types[i] > 2"];
"1002346" -> "1002345"  [label="AST: "];
"1002346" -> "1002348"  [label="CFG: "];
"1002347" -> "1002346"  [label="AST: "];
"1002348" -> "1002346"  [label="AST: "];
"1002345" -> "1002346"  [label="CFG: "];
"1002346" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002346" -> "1003546"  [label="DDG: f"];
"1002346" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002346" -> "1002345"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002345" -> "1002337"  [label="AST: "];
"1003546" -> "1002345"  [label="CFG: "];
"1002345" -> "1003546"  [label="DDG: <RET>"];
"1002349" -> "1002318"  [label="AST: "];
"1002350" -> "1002349"  [label="AST: "];
"1002358" -> "1002349"  [label="CFG: "];
"1002349" -> "1002364"  [label="DDG: r->begin"];
"1002364" -> "1002363"  [label="AST: "];
"1002364" -> "1002368"  [label="CFG: "];
"1002365" -> "1002364"  [label="AST: "];
"1002368" -> "1002364"  [label="AST: "];
"1002373" -> "1002364"  [label="CFG: "];
"1002377" -> "1002364"  [label="CFG: "];
"1002364" -> "1003546"  [label="DDG: r->end"];
"1002364" -> "1003546"  [label="DDG: r->end < r->begin"];
"1002364" -> "1003546"  [label="DDG: r->begin"];
"1002356" -> "1002364"  [label="DDG: r->end"];
"1002364" -> "1003422"  [label="DDG: r->begin"];
"1002364" -> "1003435"  [label="DDG: r->end"];
"1003422" -> "1003421"  [label="AST: "];
"1003422" -> "1003426"  [label="CFG: "];
"1003423" -> "1003422"  [label="AST: "];
"1003426" -> "1003422"  [label="AST: "];
"1003428" -> "1003422"  [label="CFG: "];
"1003430" -> "1003422"  [label="CFG: "];
"1003422" -> "1003419"  [label="DDG: r->begin"];
"1003422" -> "1003419"  [label="DDG: actual_size"];
"1003411" -> "1003422"  [label="DDG: actual_size"];
"1003422" -> "1003421"  [label="DDG: r->begin"];
"1003422" -> "1003421"  [label="DDG: actual_size"];
"1003422" -> "1003435"  [label="DDG: actual_size"];
"1003419" -> "1003401"  [label="AST: "];
"1003419" -> "1003421"  [label="CFG: "];
"1003420" -> "1003419"  [label="AST: "];
"1003421" -> "1003419"  [label="AST: "];
"1003433" -> "1003419"  [label="CFG: "];
"1003419" -> "1003546"  [label="DDG: r->begin < actual_size ? r->begin : actual_size"];
"1003419" -> "1003447"  [label="DDG: limit_r_begin"];
"1003447" -> "1003445"  [label="AST: "];
"1003447" -> "1003449"  [label="CFG: "];
"1003448" -> "1003447"  [label="AST: "];
"1003449" -> "1003447"  [label="AST: "];
"1003445" -> "1003447"  [label="CFG: "];
"1003447" -> "1003546"  [label="DDG: limit_r_begin"];
"1003447" -> "1003546"  [label="DDG: limit_r_end"];
"1003447" -> "1003445"  [label="DDG: limit_r_end"];
"1003447" -> "1003445"  [label="DDG: limit_r_begin"];
"1003432" -> "1003447"  [label="DDG: limit_r_end"];
"1003445" -> "1003401"  [label="AST: "];
"1003446" -> "1003445"  [label="AST: "];
"1003452" -> "1003445"  [label="CFG: "];
"1003445" -> "1003546"  [label="DDG: limit_r_end - limit_r_begin"];
"1003445" -> "1003453"  [label="DDG: n_read"];
"1003453" -> "1003451"  [label="AST: "];
"1003453" -> "1003455"  [label="CFG: "];
"1003454" -> "1003453"  [label="AST: "];
"1003455" -> "1003453"  [label="AST: "];
"1003451" -> "1003453"  [label="CFG: "];
"1003453" -> "1003546"  [label="DDG: n_read"];
"1003453" -> "1003546"  [label="DDG: r->part_size"];
"1003453" -> "1003451"  [label="DDG: n_read"];
"1003453" -> "1003451"  [label="DDG: r->part_size"];
"1002375" -> "1003453"  [label="DDG: r->part_size"];
"1003451" -> "1003401"  [label="AST: "];
"1003452" -> "1003451"  [label="AST: "];
"1003460" -> "1003451"  [label="CFG: "];
"1003451" -> "1003546"  [label="DDG: n_read / r->part_size"];
"1003451" -> "1003459"  [label="DDG: part_read"];
"1003459" -> "1003458"  [label="AST: "];
"1003459" -> "1003461"  [label="CFG: "];
"1003460" -> "1003459"  [label="AST: "];
"1003461" -> "1003459"  [label="AST: "];
"1003463" -> "1003459"  [label="CFG: "];
"1003400" -> "1003459"  [label="CFG: "];
"1003459" -> "1003546"  [label="DDG: part_read"];
"1003459" -> "1003546"  [label="DDG: part_read > max_part_read"];
"1003462" -> "1003459"  [label="DDG: max_part_read"];
"1003387" -> "1003459"  [label="DDG: max_part_read"];
"1003459" -> "1003462"  [label="DDG: part_read"];
"1003459" -> "1003474"  [label="DDG: max_part_read"];
"1003462" -> "1003458"  [label="AST: "];
"1003462" -> "1003464"  [label="CFG: "];
"1003463" -> "1003462"  [label="AST: "];
"1003464" -> "1003462"  [label="AST: "];
"1003400" -> "1003462"  [label="CFG: "];
"1003462" -> "1003546"  [label="DDG: part_read"];
"1003462" -> "1003474"  [label="DDG: max_part_read"];
"1003474" -> "1003471"  [label="AST: "];
"1003474" -> "1003476"  [label="CFG: "];
"1003475" -> "1003474"  [label="AST: "];
"1003476" -> "1003474"  [label="AST: "];
"1003471" -> "1003474"  [label="CFG: "];
"1003474" -> "1003546"  [label="DDG: max_part_read"];
"1003474" -> "1003467"  [label="DDG: max_part_read"];
"1003474" -> "1003471"  [label="DDG: max_part_read"];
"1003387" -> "1003474"  [label="DDG: max_part_read"];
"1003467" -> "1003465"  [label="AST: "];
"1003467" -> "1003471"  [label="CFG: "];
"1003468" -> "1003467"  [label="AST: "];
"1003471" -> "1003467"  [label="AST: "];
"1003465" -> "1003467"  [label="CFG: "];
"1003467" -> "1003546"  [label="DDG: f->channels"];
"1003467" -> "1003546"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003467" -> "1003465"  [label="DDG: f->channels"];
"1003467" -> "1003465"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003185" -> "1003467"  [label="DDG: f->channels"];
"1003465" -> "1003372"  [label="AST: "];
"1003466" -> "1003465"  [label="AST: "];
"1003480" -> "1003465"  [label="CFG: "];
"1003465" -> "1003546"  [label="DDG: f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003465" -> "1003478"  [label="DDG: classify_mem"];
"1003478" -> "1003372"  [label="AST: "];
"1003478" -> "1003482"  [label="CFG: "];
"1003479" -> "1003478"  [label="AST: "];
"1003482" -> "1003478"  [label="AST: "];
"1003485" -> "1003478"  [label="CFG: "];
"1003478" -> "1003546"  [label="DDG: classify_mem"];
"1003478" -> "1003484"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003483"  [label="AST: "];
"1003484" -> "1003486"  [label="CFG: "];
"1003485" -> "1003484"  [label="AST: "];
"1003486" -> "1003484"  [label="AST: "];
"1003491" -> "1003484"  [label="CFG: "];
"1003496" -> "1003484"  [label="CFG: "];
"1003484" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003546"  [label="DDG: imdct_mem"];
"1003484" -> "1003546"  [label="DDG: imdct_mem > f->temp_memory_required"];
"1003374" -> "1003484"  [label="DDG: imdct_mem"];
"1003484" -> "1003489"  [label="DDG: imdct_mem"];
"1003484" -> "1003517"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003518"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003522"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003483"  [label="AST: "];
"1003489" -> "1003493"  [label="CFG: "];
"1003490" -> "1003489"  [label="AST: "];
"1003493" -> "1003489"  [label="AST: "];
"1003496" -> "1003489"  [label="CFG: "];
"1003489" -> "1003546"  [label="DDG: imdct_mem"];
"1003489" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003517"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003518"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003522"  [label="DDG: f->temp_memory_required"];
"1003517" -> "1003516"  [label="AST: "];
"1003517" -> "1003529"  [label="CFG: "];
"1003518" -> "1003517"  [label="AST: "];
"1003529" -> "1003517"  [label="AST: "];
"1003536" -> "1003517"  [label="CFG: "];
"1003540" -> "1003517"  [label="CFG: "];
"1003517" -> "1003546"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset"];
"1003517" -> "1003546"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required"];
"1003517" -> "1003546"  [label="DDG: (unsigned) f->temp_offset"];
"1003529" -> "1003517"  [label="DDG: f->temp_offset"];
"1003518" -> "1003522"  [label="CFG: "];
"1003519" -> "1003518"  [label="AST: "];
"1003522" -> "1003518"  [label="AST: "];
"1003530" -> "1003518"  [label="CFG: "];
"1003518" -> "1003546"  [label="DDG: sizeof(*f) + f->temp_memory_required"];
"1003518" -> "1003546"  [label="DDG: f->setup_offset"];
"1003522" -> "1003526"  [label="CFG: "];
"1003523" -> "1003522"  [label="AST: "];
"1003526" -> "1003522"  [label="AST: "];
"1003522" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003472" -> "1003471"  [label="AST: "];
"1003471" -> "1003546"  [label="DDG: max_part_read * sizeof(uint8 *)"];
"1003421" -> "1003427"  [label="CFG: "];
"1003421" -> "1003430"  [label="CFG: "];
"1003427" -> "1003421"  [label="AST: "];
"1003430" -> "1003421"  [label="AST: "];
"1003421" -> "1003546"  [label="DDG: r->begin < actual_size"];
"1003421" -> "1003546"  [label="DDG: r->begin"];
"1003435" -> "1003434"  [label="AST: "];
"1003435" -> "1003439"  [label="CFG: "];
"1003436" -> "1003435"  [label="AST: "];
"1003439" -> "1003435"  [label="AST: "];
"1003441" -> "1003435"  [label="CFG: "];
"1003443" -> "1003435"  [label="CFG: "];
"1003435" -> "1003432"  [label="DDG: r->end"];
"1003435" -> "1003432"  [label="DDG: actual_size"];
"1003435" -> "1003434"  [label="DDG: r->end"];
"1003435" -> "1003434"  [label="DDG: actual_size"];
"1003432" -> "1003401"  [label="AST: "];
"1003432" -> "1003434"  [label="CFG: "];
"1003433" -> "1003432"  [label="AST: "];
"1003434" -> "1003432"  [label="AST: "];
"1003446" -> "1003432"  [label="CFG: "];
"1003432" -> "1003546"  [label="DDG: r->end   < actual_size ? r->end   : actual_size"];
"1003434" -> "1003440"  [label="CFG: "];
"1003434" -> "1003443"  [label="CFG: "];
"1003440" -> "1003434"  [label="AST: "];
"1003443" -> "1003434"  [label="AST: "];
"1003434" -> "1003546"  [label="DDG: r->end"];
"1003434" -> "1003546"  [label="DDG: r->end   < actual_size"];
"1003434" -> "1003546"  [label="DDG: actual_size"];
"1002356" -> "1002318"  [label="AST: "];
"1002357" -> "1002356"  [label="AST: "];
"1002366" -> "1002356"  [label="CFG: "];
"1002356" -> "1003546"  [label="DDG: get_bits(f, 24)"];
"1002372" -> "1002371"  [label="AST: "];
"1002372" -> "1002374"  [label="CFG: "];
"1002373" -> "1002372"  [label="AST: "];
"1002374" -> "1002372"  [label="AST: "];
"1002371" -> "1002372"  [label="CFG: "];
"1002372" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002372" -> "1003546"  [label="DDG: f"];
"1002372" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002372" -> "1002371"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002371" -> "1002363"  [label="AST: "];
"1003546" -> "1002371"  [label="CFG: "];
"1002371" -> "1003546"  [label="DDG: <RET>"];
"1002375" -> "1002318"  [label="AST: "];
"1002375" -> "1002379"  [label="CFG: "];
"1002376" -> "1002375"  [label="AST: "];
"1002379" -> "1002375"  [label="AST: "];
"1002386" -> "1002375"  [label="CFG: "];
"1002375" -> "1003546"  [label="DDG: r->part_size"];
"1002375" -> "1003546"  [label="DDG: get_bits(f,24)+1"];
"1002379" -> "1002383"  [label="CFG: "];
"1002383" -> "1002379"  [label="AST: "];
"1002379" -> "1003546"  [label="DDG: get_bits(f,24)"];
"1002478" -> "1002474"  [label="AST: "];
"1002478" -> "1002480"  [label="CFG: "];
"1002479" -> "1002478"  [label="AST: "];
"1002480" -> "1002478"  [label="AST: "];
"1002488" -> "1002478"  [label="CFG: "];
"1002546" -> "1002478"  [label="CFG: "];
"1002478" -> "1003546"  [label="DDG: j < r->classifications"];
"1002478" -> "1003546"  [label="DDG: j"];
"1002478" -> "1003546"  [label="DDG: r->classifications"];
"1002483" -> "1002478"  [label="DDG: j"];
"1002475" -> "1002478"  [label="DDG: j"];
"1002478" -> "1002483"  [label="DDG: j"];
"1002478" -> "1002682"  [label="DDG: r->classifications"];
"1002483" -> "1002474"  [label="AST: "];
"1002483" -> "1002484"  [label="CFG: "];
"1002484" -> "1002483"  [label="AST: "];
"1002479" -> "1002483"  [label="CFG: "];
"1002682" -> "1002674"  [label="AST: "];
"1002682" -> "1002684"  [label="CFG: "];
"1002683" -> "1002682"  [label="AST: "];
"1002684" -> "1002682"  [label="AST: "];
"1002674" -> "1002682"  [label="CFG: "];
"1002682" -> "1002674"  [label="DDG: temp"];
"1002682" -> "1002674"  [label="DDG: r->classifications"];
"1002627" -> "1002682"  [label="DDG: temp"];
"1002687" -> "1002682"  [label="DDG: temp"];
"1002682" -> "1002687"  [label="DDG: r->classifications"];
"1002682" -> "1002687"  [label="DDG: temp"];
"1002674" -> "1002673"  [label="AST: "];
"1002675" -> "1002674"  [label="AST: "];
"1002688" -> "1002674"  [label="CFG: "];
"1002674" -> "1003546"  [label="DDG: r->classdata[j][k]"];
"1002674" -> "1003546"  [label="DDG: temp % r->classifications"];
"1002674" -> "1002651"  [label="DDG: r->classdata[j][k]"];
"1002651" -> "1002650"  [label="AST: "];
"1002651" -> "1002657"  [label="CFG: "];
"1002652" -> "1002651"  [label="AST: "];
"1002657" -> "1002651"  [label="AST: "];
"1002660" -> "1002651"  [label="CFG: "];
"1002664" -> "1002651"  [label="CFG: "];
"1002651" -> "1003546"  [label="DDG: r->classdata[j]"];
"1002651" -> "1003546"  [label="DDG: r->classdata[j] == NULL"];
"1002651" -> "1003546"  [label="DDG: NULL"];
"1002651" -> "1002465"  [label="DDG: NULL"];
"1002651" -> "1002568"  [label="DDG: r->classdata[j]"];
"1002651" -> "1002576"  [label="DDG: r->classdata[j]"];
"1002630" -> "1002651"  [label="DDG: r->classdata[j]"];
"1002465" -> "1002651"  [label="DDG: NULL"];
"1002651" -> "1002719"  [label="DDG: NULL"];
"1002465" -> "1002464"  [label="AST: "];
"1002465" -> "1002469"  [label="CFG: "];
"1002466" -> "1002465"  [label="AST: "];
"1002469" -> "1002465"  [label="AST: "];
"1002472" -> "1002465"  [label="CFG: "];
"1002476" -> "1002465"  [label="CFG: "];
"1002465" -> "1003546"  [label="DDG: r->residue_books"];
"1002465" -> "1003546"  [label="DDG: NULL"];
"1002465" -> "1003546"  [label="DDG: r->residue_books == NULL"];
"1002283" -> "1002465"  [label="DDG: NULL"];
"1002465" -> "1002719"  [label="DDG: NULL"];
"1002719" -> "1002718"  [label="AST: "];
"1002719" -> "1002723"  [label="CFG: "];
"1002720" -> "1002719"  [label="AST: "];
"1002723" -> "1002719"  [label="AST: "];
"1002726" -> "1002719"  [label="CFG: "];
"1002730" -> "1002719"  [label="CFG: "];
"1002719" -> "1003546"  [label="DDG: NULL"];
"1002719" -> "1003546"  [label="DDG: f->mapping"];
"1002719" -> "1003546"  [label="DDG: f->mapping == NULL"];
"1002701" -> "1002719"  [label="DDG: f->mapping"];
"1002283" -> "1002719"  [label="DDG: NULL"];
"1002719" -> "1002728"  [label="DDG: f->mapping"];
"1002719" -> "1002794"  [label="DDG: NULL"];
"1002719" -> "1003243"  [label="DDG: NULL"];
"1002728" -> "1000109"  [label="AST: "];
"1002728" -> "1002733"  [label="CFG: "];
"1002729" -> "1002728"  [label="AST: "];
"1002732" -> "1002728"  [label="AST: "];
"1002733" -> "1002728"  [label="AST: "];
"1002744" -> "1002728"  [label="CFG: "];
"1002728" -> "1003546"  [label="DDG: memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping))"];
"1002728" -> "1003546"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002728" -> "1003546"  [label="DDG: f->mapping"];
"1002733" -> "1002728"  [label="DDG: f->mapping_count"];
"1002728" -> "1002755"  [label="DDG: f->mapping"];
"1002728" -> "1002757"  [label="DDG: f->mapping"];
"1002755" -> "1002753"  [label="AST: "];
"1002755" -> "1002757"  [label="CFG: "];
"1002756" -> "1002755"  [label="AST: "];
"1002757" -> "1002755"  [label="AST: "];
"1002764" -> "1002755"  [label="CFG: "];
"1002755" -> "1003546"  [label="DDG: f->mapping + i"];
"1002755" -> "1003546"  [label="DDG: m"];
"1002746" -> "1002755"  [label="DDG: i"];
"1002757" -> "1002761"  [label="CFG: "];
"1002758" -> "1002757"  [label="AST: "];
"1002761" -> "1002757"  [label="AST: "];
"1002757" -> "1003546"  [label="DDG: f->mapping"];
"1002757" -> "1003546"  [label="DDG: i"];
"1002746" -> "1002757"  [label="DDG: i"];
"1002794" -> "1002793"  [label="AST: "];
"1002794" -> "1002798"  [label="CFG: "];
"1002795" -> "1002794"  [label="AST: "];
"1002798" -> "1002794"  [label="AST: "];
"1002801" -> "1002794"  [label="CFG: "];
"1002805" -> "1002794"  [label="CFG: "];
"1002794" -> "1003546"  [label="DDG: NULL"];
"1002794" -> "1003546"  [label="DDG: m->chan"];
"1002794" -> "1003546"  [label="DDG: m->chan == NULL"];
"1002776" -> "1002794"  [label="DDG: m->chan"];
"1002794" -> "1003243"  [label="DDG: NULL"];
"1003243" -> "1003242"  [label="AST: "];
"1003243" -> "1003249"  [label="CFG: "];
"1003244" -> "1003243"  [label="AST: "];
"1003249" -> "1003243"  [label="AST: "];
"1003254" -> "1003243"  [label="CFG: "];
"1003242" -> "1003243"  [label="CFG: "];
"1003243" -> "1003546"  [label="DDG: NULL"];
"1003243" -> "1003546"  [label="DDG: f->channel_buffers[i]"];
"1003243" -> "1003242"  [label="DDG: f->channel_buffers[i]"];
"1003243" -> "1003242"  [label="DDG: NULL"];
"1003193" -> "1003243"  [label="DDG: f->channel_buffers[i]"];
"1003288" -> "1003243"  [label="DDG: NULL"];
"1003243" -> "1003251"  [label="DDG: NULL"];
"1003243" -> "1003288"  [label="DDG: NULL"];
"1003242" -> "1003241"  [label="AST: "];
"1003242" -> "1003250"  [label="CFG: "];
"1003250" -> "1003242"  [label="AST: "];
"1003267" -> "1003242"  [label="CFG: "];
"1003272" -> "1003242"  [label="CFG: "];
"1003242" -> "1003546"  [label="DDG: f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003242" -> "1003546"  [label="DDG: f->channel_buffers[i] == NULL"];
"1003242" -> "1003546"  [label="DDG: f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003250" -> "1003242"  [label="DDG: f->previous_window[i] == NULL"];
"1003250" -> "1003242"  [label="DDG: f->finalY[i] == NULL"];
"1003251" -> "1003250"  [label="AST: "];
"1003251" -> "1003257"  [label="CFG: "];
"1003252" -> "1003251"  [label="AST: "];
"1003257" -> "1003251"  [label="AST: "];
"1003261" -> "1003251"  [label="CFG: "];
"1003250" -> "1003251"  [label="CFG: "];
"1003251" -> "1003546"  [label="DDG: NULL"];
"1003251" -> "1003546"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003250"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003250"  [label="DDG: NULL"];
"1003209" -> "1003251"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003258"  [label="DDG: NULL"];
"1003251" -> "1003288"  [label="DDG: NULL"];
"1003250" -> "1003258"  [label="CFG: "];
"1003258" -> "1003250"  [label="AST: "];
"1003250" -> "1003546"  [label="DDG: f->previous_window[i] == NULL"];
"1003250" -> "1003546"  [label="DDG: f->finalY[i] == NULL"];
"1003258" -> "1003250"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003250"  [label="DDG: NULL"];
"1003258" -> "1003264"  [label="CFG: "];
"1003259" -> "1003258"  [label="AST: "];
"1003264" -> "1003258"  [label="AST: "];
"1003258" -> "1003546"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003546"  [label="DDG: NULL"];
"1003227" -> "1003258"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003288"  [label="DDG: NULL"];
"1003288" -> "1003287"  [label="AST: "];
"1003288" -> "1003294"  [label="CFG: "];
"1003289" -> "1003288"  [label="AST: "];
"1003294" -> "1003288"  [label="AST: "];
"1003297" -> "1003288"  [label="CFG: "];
"1003191" -> "1003288"  [label="CFG: "];
"1003288" -> "1003546"  [label="DDG: f->floor_buffers[i] == NULL"];
"1003288" -> "1003546"  [label="DDG: NULL"];
"1003288" -> "1003546"  [label="DDG: f->floor_buffers[i]"];
"1003269" -> "1003288"  [label="DDG: f->floor_buffers[i]"];
"1002568" -> "1002567"  [label="AST: "];
"1002568" -> "1002569"  [label="CFG: "];
"1002569" -> "1002568"  [label="AST: "];
"1002574" -> "1002568"  [label="CFG: "];
"1002578" -> "1002568"  [label="CFG: "];
"1002568" -> "1003546"  [label="DDG: r->classdata"];
"1002568" -> "1003546"  [label="DDG: !r->classdata"];
"1002544" -> "1002568"  [label="DDG: r->classdata"];
"1002568" -> "1002576"  [label="DDG: r->classdata"];
"1002576" -> "1002318"  [label="AST: "];
"1002577" -> "1002576"  [label="AST: "];
"1002580" -> "1002576"  [label="AST: "];
"1002598" -> "1002576"  [label="CFG: "];
"1002576" -> "1003546"  [label="DDG: sizeof(*r->classdata) * f->codebooks[r->classbook].entries"];
"1002576" -> "1003546"  [label="DDG: r->classdata"];
"1002576" -> "1003546"  [label="DDG: memset(r->classdata, 0, sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002687" -> "1002673"  [label="AST: "];
"1002687" -> "1002689"  [label="CFG: "];
"1002688" -> "1002687"  [label="AST: "];
"1002689" -> "1002687"  [label="AST: "];
"1002672" -> "1002687"  [label="CFG: "];
"1002687" -> "1003546"  [label="DDG: r->classifications"];
"1002687" -> "1003546"  [label="DDG: temp"];
"1002388" -> "1002392"  [label="CFG: "];
"1002392" -> "1002388"  [label="AST: "];
"1002388" -> "1003546"  [label="DDG: get_bits(f,6)"];
"1002393" -> "1002318"  [label="AST: "];
"1002394" -> "1002393"  [label="AST: "];
"1002403" -> "1002393"  [label="CFG: "];
"1002393" -> "1003546"  [label="DDG: get_bits(f,8)"];
"1002409" -> "1002408"  [label="AST: "];
"1002409" -> "1002411"  [label="CFG: "];
"1002410" -> "1002409"  [label="AST: "];
"1002411" -> "1002409"  [label="AST: "];
"1002408" -> "1002409"  [label="CFG: "];
"1002409" -> "1003546"  [label="DDG: f"];
"1002409" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002409" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002409" -> "1002408"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002408" -> "1002400"  [label="AST: "];
"1003546" -> "1002408"  [label="CFG: "];
"1002408" -> "1003546"  [label="DDG: <RET>"];
"1002429" -> "1002423"  [label="AST: "];
"1002430" -> "1002429"  [label="AST: "];
"1002436" -> "1002429"  [label="CFG: "];
"1002429" -> "1003546"  [label="DDG: get_bits(f,3)"];
"1002429" -> "1002443"  [label="DDG: low_bits"];
"1002429" -> "1002447"  [label="DDG: low_bits"];
"1002443" -> "1002423"  [label="AST: "];
"1002443" -> "1002447"  [label="CFG: "];
"1002444" -> "1002443"  [label="AST: "];
"1002447" -> "1002443"  [label="AST: "];
"1002422" -> "1002443"  [label="CFG: "];
"1002443" -> "1003546"  [label="DDG: high_bits*8 + low_bits"];
"1002443" -> "1003546"  [label="DDG: residue_cascade[j]"];
"1002448" -> "1002443"  [label="DDG: high_bits"];
"1002448" -> "1002443"  [label="DDG: 8"];
"1002443" -> "1002497"  [label="DDG: residue_cascade[j]"];
"1002497" -> "1002496"  [label="AST: "];
"1002497" -> "1002501"  [label="CFG: "];
"1002498" -> "1002497"  [label="AST: "];
"1002501" -> "1002497"  [label="AST: "];
"1002509" -> "1002497"  [label="CFG: "];
"1002538" -> "1002497"  [label="CFG: "];
"1002497" -> "1003546"  [label="DDG: residue_cascade[j] & (1 << k)"];
"1002497" -> "1003546"  [label="DDG: residue_cascade[j]"];
"1002497" -> "1003546"  [label="DDG: 1 << k"];
"1002501" -> "1002497"  [label="DDG: 1"];
"1002501" -> "1002497"  [label="DDG: k"];
"1002447" -> "1002451"  [label="CFG: "];
"1002448" -> "1002447"  [label="AST: "];
"1002451" -> "1002447"  [label="AST: "];
"1002447" -> "1003546"  [label="DDG: low_bits"];
"1002447" -> "1003546"  [label="DDG: high_bits*8"];
"1002448" -> "1002447"  [label="DDG: high_bits"];
"1002448" -> "1002447"  [label="DDG: 8"];
"1002438" -> "1002434"  [label="AST: "];
"1002439" -> "1002438"  [label="AST: "];
"1002445" -> "1002438"  [label="CFG: "];
"1002438" -> "1003546"  [label="DDG: get_bits(f,5)"];
"1002438" -> "1002448"  [label="DDG: high_bits"];
"1002448" -> "1002450"  [label="CFG: "];
"1002449" -> "1002448"  [label="AST: "];
"1002450" -> "1002448"  [label="AST: "];
"1002451" -> "1002448"  [label="CFG: "];
"1002448" -> "1003546"  [label="DDG: high_bits"];
"1002425" -> "1002448"  [label="DDG: high_bits"];
"1002548" -> "1002544"  [label="AST: "];
"1002549" -> "1002548"  [label="AST: "];
"1002544" -> "1002548"  [label="CFG: "];
"1002548" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002548" -> "1002544"  [label="DDG: setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002544" -> "1002318"  [label="AST: "];
"1002545" -> "1002544"  [label="AST: "];
"1002570" -> "1002544"  [label="CFG: "];
"1002544" -> "1003546"  [label="DDG: (uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002573" -> "1002572"  [label="AST: "];
"1002573" -> "1002575"  [label="CFG: "];
"1002574" -> "1002573"  [label="AST: "];
"1002575" -> "1002573"  [label="AST: "];
"1002572" -> "1002573"  [label="CFG: "];
"1002573" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002573" -> "1003546"  [label="DDG: f"];
"1002573" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1002573" -> "1002572"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002572" -> "1002567"  [label="AST: "];
"1003546" -> "1002572"  [label="CFG: "];
"1002572" -> "1003546"  [label="DDG: <RET>"];
"1002636" -> "1002630"  [label="AST: "];
"1002637" -> "1002636"  [label="AST: "];
"1002630" -> "1002636"  [label="CFG: "];
"1002636" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(r->classdata[j][0]) * classwords)"];
"1002636" -> "1002630"  [label="DDG: setup_malloc(f, sizeof(r->classdata[j][0]) * classwords)"];
"1002630" -> "1002613"  [label="AST: "];
"1002631" -> "1002630"  [label="AST: "];
"1002654" -> "1002630"  [label="CFG: "];
"1002630" -> "1003546"  [label="DDG: (uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords)"];
"1002659" -> "1002658"  [label="AST: "];
"1002659" -> "1002661"  [label="CFG: "];
"1002660" -> "1002659"  [label="AST: "];
"1002661" -> "1002659"  [label="AST: "];
"1002658" -> "1002659"  [label="CFG: "];
"1002659" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002659" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1002659" -> "1003546"  [label="DDG: f"];
"1002659" -> "1002658"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002658" -> "1002650"  [label="AST: "];
"1003546" -> "1002658"  [label="CFG: "];
"1002658" -> "1003546"  [label="DDG: <RET>"];
"1002697" -> "1002696"  [label="AST: "];
"1002697" -> "1002699"  [label="CFG: "];
"1002698" -> "1002697"  [label="AST: "];
"1002699" -> "1002697"  [label="AST: "];
"1002700" -> "1002697"  [label="CFG: "];
"1002697" -> "1002692"  [label="DDG: f"];
"1002697" -> "1002692"  [label="DDG: 6"];
"1002697" -> "1002696"  [label="DDG: f"];
"1002697" -> "1002696"  [label="DDG: 6"];
"1002697" -> "1002707"  [label="DDG: f"];
"1002692" -> "1000109"  [label="AST: "];
"1002692" -> "1002696"  [label="CFG: "];
"1002693" -> "1002692"  [label="AST: "];
"1002696" -> "1002692"  [label="AST: "];
"1002703" -> "1002692"  [label="CFG: "];
"1002692" -> "1003546"  [label="DDG: get_bits(f,6)+1"];
"1002692" -> "1002709"  [label="DDG: f->mapping_count"];
"1002709" -> "1002707"  [label="AST: "];
"1002709" -> "1002713"  [label="CFG: "];
"1002710" -> "1002709"  [label="AST: "];
"1002713" -> "1002709"  [label="AST: "];
"1002707" -> "1002709"  [label="CFG: "];
"1002709" -> "1003546"  [label="DDG: f->mapping_count"];
"1002709" -> "1002707"  [label="DDG: f->mapping_count"];
"1002709" -> "1002733"  [label="DDG: f->mapping_count"];
"1002707" -> "1002705"  [label="AST: "];
"1002708" -> "1002707"  [label="AST: "];
"1002705" -> "1002707"  [label="CFG: "];
"1002707" -> "1003546"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002707" -> "1002705"  [label="DDG: f"];
"1002707" -> "1002705"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002707" -> "1002725"  [label="DDG: f"];
"1002707" -> "1002765"  [label="DDG: f"];
"1002707" -> "1003090"  [label="DDG: f"];
"1002705" -> "1002701"  [label="AST: "];
"1002706" -> "1002705"  [label="AST: "];
"1002701" -> "1002705"  [label="CFG: "];
"1002705" -> "1003546"  [label="DDG: setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002705" -> "1002701"  [label="DDG: setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002701" -> "1000109"  [label="AST: "];
"1002702" -> "1002701"  [label="AST: "];
"1002721" -> "1002701"  [label="CFG: "];
"1002701" -> "1003546"  [label="DDG: (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002725" -> "1002724"  [label="AST: "];
"1002725" -> "1002727"  [label="CFG: "];
"1002726" -> "1002725"  [label="AST: "];
"1002727" -> "1002725"  [label="AST: "];
"1002724" -> "1002725"  [label="CFG: "];
"1002725" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1002725" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002725" -> "1003546"  [label="DDG: f"];
"1002725" -> "1002724"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002724" -> "1002718"  [label="AST: "];
"1003546" -> "1002724"  [label="CFG: "];
"1002724" -> "1003546"  [label="DDG: <RET>"];
"1002765" -> "1002763"  [label="AST: "];
"1002765" -> "1002767"  [label="CFG: "];
"1002766" -> "1002765"  [label="AST: "];
"1002767" -> "1002765"  [label="AST: "];
"1002763" -> "1002765"  [label="CFG: "];
"1002765" -> "1002763"  [label="DDG: f"];
"1002765" -> "1002763"  [label="DDG: 16"];
"1002984" -> "1002765"  [label="DDG: f"];
"1002950" -> "1002765"  [label="DDG: f"];
"1003054" -> "1002765"  [label="DDG: f"];
"1002765" -> "1002773"  [label="DDG: f"];
"1002765" -> "1002782"  [label="DDG: f"];
"1002763" -> "1002753"  [label="AST: "];
"1002764" -> "1002763"  [label="AST: "];
"1002770" -> "1002763"  [label="CFG: "];
"1002763" -> "1003546"  [label="DDG: get_bits(f,16)"];
"1002763" -> "1002769"  [label="DDG: mapping_type"];
"1002769" -> "1002768"  [label="AST: "];
"1002769" -> "1002771"  [label="CFG: "];
"1002770" -> "1002769"  [label="AST: "];
"1002771" -> "1002769"  [label="AST: "];
"1002774" -> "1002769"  [label="CFG: "];
"1002778" -> "1002769"  [label="CFG: "];
"1002769" -> "1003546"  [label="DDG: mapping_type"];
"1002769" -> "1003546"  [label="DDG: mapping_type != 0"];
"1002773" -> "1002772"  [label="AST: "];
"1002773" -> "1002775"  [label="CFG: "];
"1002774" -> "1002773"  [label="AST: "];
"1002775" -> "1002773"  [label="AST: "];
"1002772" -> "1002773"  [label="CFG: "];
"1002773" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002773" -> "1003546"  [label="DDG: f"];
"1002773" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002773" -> "1002772"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002772" -> "1002768"  [label="AST: "];
"1003546" -> "1002772"  [label="CFG: "];
"1002772" -> "1003546"  [label="DDG: <RET>"];
"1002782" -> "1002780"  [label="AST: "];
"1002782" -> "1002784"  [label="CFG: "];
"1002783" -> "1002782"  [label="AST: "];
"1002784" -> "1002782"  [label="AST: "];
"1002780" -> "1002782"  [label="CFG: "];
"1002782" -> "1003546"  [label="DDG: f->channels * sizeof(*m->chan)"];
"1002782" -> "1002780"  [label="DDG: f"];
"1002782" -> "1002780"  [label="DDG: f->channels * sizeof(*m->chan)"];
"1002784" -> "1002782"  [label="DDG: f->channels"];
"1002782" -> "1002800"  [label="DDG: f"];
"1002782" -> "1002804"  [label="DDG: f"];
"1002780" -> "1002776"  [label="AST: "];
"1002781" -> "1002780"  [label="AST: "];
"1002776" -> "1002780"  [label="CFG: "];
"1002780" -> "1003546"  [label="DDG: setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002780" -> "1002776"  [label="DDG: setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002776" -> "1002753"  [label="AST: "];
"1002777" -> "1002776"  [label="AST: "];
"1002796" -> "1002776"  [label="CFG: "];
"1002776" -> "1003546"  [label="DDG: (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002800" -> "1002799"  [label="AST: "];
"1002800" -> "1002802"  [label="CFG: "];
"1002801" -> "1002800"  [label="AST: "];
"1002802" -> "1002800"  [label="AST: "];
"1002799" -> "1002800"  [label="CFG: "];
"1002800" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1002800" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002800" -> "1003546"  [label="DDG: f"];
"1002800" -> "1002799"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002799" -> "1002793"  [label="AST: "];
"1003546" -> "1002799"  [label="CFG: "];
"1002799" -> "1003546"  [label="DDG: <RET>"];
"1002804" -> "1002803"  [label="AST: "];
"1002804" -> "1002806"  [label="CFG: "];
"1002805" -> "1002804"  [label="AST: "];
"1002806" -> "1002804"  [label="AST: "];
"1002809" -> "1002804"  [label="CFG: "];
"1002819" -> "1002804"  [label="CFG: "];
"1002804" -> "1002812"  [label="DDG: f"];
"1002804" -> "1002834"  [label="DDG: f"];
"1002812" -> "1002811"  [label="AST: "];
"1002812" -> "1002814"  [label="CFG: "];
"1002813" -> "1002812"  [label="AST: "];
"1002814" -> "1002812"  [label="AST: "];
"1002815" -> "1002812"  [label="CFG: "];
"1002812" -> "1002807"  [label="DDG: f"];
"1002812" -> "1002807"  [label="DDG: 4"];
"1002812" -> "1002811"  [label="DDG: f"];
"1002812" -> "1002811"  [label="DDG: 4"];
"1002812" -> "1002834"  [label="DDG: f"];
"1002807" -> "1002803"  [label="AST: "];
"1002807" -> "1002811"  [label="CFG: "];
"1002808" -> "1002807"  [label="AST: "];
"1002811" -> "1002807"  [label="AST: "];
"1002825" -> "1002807"  [label="CFG: "];
"1002807" -> "1003546"  [label="DDG: get_bits(f,4)+1"];
"1002807" -> "1002823"  [label="DDG: m->submaps"];
"1002823" -> "1002822"  [label="AST: "];
"1002823" -> "1002827"  [label="CFG: "];
"1002824" -> "1002823"  [label="AST: "];
"1002827" -> "1002823"  [label="AST: "];
"1002829" -> "1002823"  [label="CFG: "];
"1002835" -> "1002823"  [label="CFG: "];
"1002823" -> "1003546"  [label="DDG: max_submaps"];
"1002823" -> "1003546"  [label="DDG: m->submaps"];
"1002823" -> "1003546"  [label="DDG: m->submaps > max_submaps"];
"1002817" -> "1002823"  [label="DDG: m->submaps"];
"1002828" -> "1002823"  [label="DDG: max_submaps"];
"1000118" -> "1002823"  [label="DDG: max_submaps"];
"1002823" -> "1002828"  [label="DDG: m->submaps"];
"1002823" -> "1002958"  [label="DDG: m->submaps"];
"1002828" -> "1002822"  [label="AST: "];
"1002828" -> "1002830"  [label="CFG: "];
"1002829" -> "1002828"  [label="AST: "];
"1002830" -> "1002828"  [label="AST: "];
"1002835" -> "1002828"  [label="CFG: "];
"1002828" -> "1003546"  [label="DDG: max_submaps"];
"1002828" -> "1003546"  [label="DDG: m->submaps"];
"1002958" -> "1002957"  [label="AST: "];
"1002958" -> "1002962"  [label="CFG: "];
"1002959" -> "1002958"  [label="AST: "];
"1002962" -> "1002958"  [label="AST: "];
"1002966" -> "1002958"  [label="CFG: "];
"1003006" -> "1002958"  [label="CFG: "];
"1002958" -> "1003546"  [label="DDG: m->submaps > 1"];
"1002958" -> "1002988"  [label="DDG: m->submaps"];
"1002958" -> "1003028"  [label="DDG: m->submaps"];
"1002988" -> "1002987"  [label="AST: "];
"1002988" -> "1002996"  [label="CFG: "];
"1002989" -> "1002988"  [label="AST: "];
"1002996" -> "1002988"  [label="AST: "];
"1003001" -> "1002988"  [label="CFG: "];
"1002974" -> "1002988"  [label="CFG: "];
"1002988" -> "1003546"  [label="DDG: m->chan[j].mux >= m->submaps"];
"1002988" -> "1003546"  [label="DDG: m->submaps"];
"1002988" -> "1003546"  [label="DDG: m->chan[j].mux"];
"1002976" -> "1002988"  [label="DDG: m->chan[j].mux"];
"1002988" -> "1003028"  [label="DDG: m->submaps"];
"1003028" -> "1003024"  [label="AST: "];
"1003028" -> "1003030"  [label="CFG: "];
"1003029" -> "1003028"  [label="AST: "];
"1003030" -> "1003028"  [label="AST: "];
"1003037" -> "1003028"  [label="CFG: "];
"1002752" -> "1003028"  [label="CFG: "];
"1003028" -> "1003546"  [label="DDG: j < m->submaps"];
"1003028" -> "1003546"  [label="DDG: m->submaps"];
"1003028" -> "1003546"  [label="DDG: j"];
"1003025" -> "1003028"  [label="DDG: j"];
"1003033" -> "1003028"  [label="DDG: j"];
"1003028" -> "1003033"  [label="DDG: j"];
"1003033" -> "1003024"  [label="AST: "];
"1003033" -> "1003034"  [label="CFG: "];
"1003034" -> "1003033"  [label="AST: "];
"1003029" -> "1003033"  [label="CFG: "];
"1002811" -> "1002815"  [label="CFG: "];
"1002815" -> "1002811"  [label="AST: "];
"1002811" -> "1003546"  [label="DDG: get_bits(f,4)"];
"1002834" -> "1002833"  [label="AST: "];
"1002834" -> "1002836"  [label="CFG: "];
"1002835" -> "1002834"  [label="AST: "];
"1002836" -> "1002834"  [label="AST: "];
"1002840" -> "1002834"  [label="CFG: "];
"1002946" -> "1002834"  [label="CFG: "];
"1002834" -> "1003546"  [label="DDG: get_bits(f,1)"];
"1002834" -> "1002843"  [label="DDG: f"];
"1002834" -> "1002950"  [label="DDG: f"];
"1002843" -> "1002842"  [label="AST: "];
"1002843" -> "1002845"  [label="CFG: "];
"1002844" -> "1002843"  [label="AST: "];
"1002845" -> "1002843"  [label="AST: "];
"1002846" -> "1002843"  [label="CFG: "];
"1002843" -> "1002838"  [label="DDG: f"];
"1002843" -> "1002838"  [label="DDG: 8"];
"1002843" -> "1002842"  [label="DDG: f"];
"1002843" -> "1002842"  [label="DDG: 8"];
"1002843" -> "1002867"  [label="DDG: f"];
"1002843" -> "1002950"  [label="DDG: f"];
"1002838" -> "1002837"  [label="AST: "];
"1002838" -> "1002842"  [label="CFG: "];
"1002839" -> "1002838"  [label="AST: "];
"1002842" -> "1002838"  [label="AST: "];
"1002849" -> "1002838"  [label="CFG: "];
"1002838" -> "1003546"  [label="DDG: get_bits(f,8)+1"];
"1002838" -> "1002851"  [label="DDG: m->coupling_steps"];
"1002851" -> "1002847"  [label="AST: "];
"1002851" -> "1002853"  [label="CFG: "];
"1002852" -> "1002851"  [label="AST: "];
"1002853" -> "1002851"  [label="AST: "];
"1002863" -> "1002851"  [label="CFG: "];
"1002951" -> "1002851"  [label="CFG: "];
"1002851" -> "1003546"  [label="DDG: m->coupling_steps"];
"1002851" -> "1003546"  [label="DDG: k < m->coupling_steps"];
"1002851" -> "1003546"  [label="DDG: k"];
"1002848" -> "1002851"  [label="DDG: k"];
"1002856" -> "1002851"  [label="DDG: k"];
"1002851" -> "1002856"  [label="DDG: k"];
"1002856" -> "1002847"  [label="AST: "];
"1002856" -> "1002857"  [label="CFG: "];
"1002857" -> "1002856"  [label="AST: "];
"1002852" -> "1002856"  [label="CFG: "];
"1002842" -> "1002846"  [label="CFG: "];
"1002846" -> "1002842"  [label="AST: "];
"1002842" -> "1003546"  [label="DDG: get_bits(f,8)"];
"1002867" -> "1002859"  [label="AST: "];
"1002867" -> "1002869"  [label="CFG: "];
"1002868" -> "1002867"  [label="AST: "];
"1002869" -> "1002867"  [label="AST: "];
"1002859" -> "1002867"  [label="CFG: "];
"1002867" -> "1002859"  [label="DDG: f"];
"1002867" -> "1002859"  [label="DDG: ilog(f->channels-1)"];
"1002883" -> "1002867"  [label="DDG: f"];
"1002869" -> "1002867"  [label="DDG: f->channels-1"];
"1002867" -> "1002883"  [label="DDG: f"];
"1002859" -> "1002858"  [label="AST: "];
"1002860" -> "1002859"  [label="AST: "];
"1002879" -> "1002859"  [label="CFG: "];
"1002859" -> "1002892"  [label="DDG: m->chan[k].magnitude"];
"1002892" -> "1002891"  [label="AST: "];
"1002892" -> "1002900"  [label="CFG: "];
"1002893" -> "1002892"  [label="AST: "];
"1002900" -> "1002892"  [label="AST: "];
"1002905" -> "1002892"  [label="CFG: "];
"1002912" -> "1002892"  [label="CFG: "];
"1002892" -> "1003546"  [label="DDG: m->chan[k].magnitude >= f->channels"];
"1002892" -> "1003546"  [label="DDG: f->channels"];
"1002892" -> "1003546"  [label="DDG: m->chan[k].magnitude"];
"1002886" -> "1002892"  [label="DDG: f->channels"];
"1002892" -> "1002908"  [label="DDG: f->channels"];
"1002892" -> "1002924"  [label="DDG: m->chan[k].magnitude"];
"1002908" -> "1002907"  [label="AST: "];
"1002908" -> "1002916"  [label="CFG: "];
"1002909" -> "1002908"  [label="AST: "];
"1002916" -> "1002908"  [label="AST: "];
"1002921" -> "1002908"  [label="CFG: "];
"1002928" -> "1002908"  [label="CFG: "];
"1002908" -> "1003546"  [label="DDG: m->chan[k].angle"];
"1002908" -> "1003546"  [label="DDG: m->chan[k].angle     >= f->channels"];
"1002908" -> "1003546"  [label="DDG: f->channels"];
"1002908" -> "1002870"  [label="DDG: f->channels"];
"1002875" -> "1002908"  [label="DDG: m->chan[k].angle"];
"1002908" -> "1002924"  [label="DDG: m->chan[k].angle"];
"1002908" -> "1002968"  [label="DDG: f->channels"];
"1002908" -> "1003008"  [label="DDG: f->channels"];
"1002870" -> "1002869"  [label="AST: "];
"1002870" -> "1002874"  [label="CFG: "];
"1002871" -> "1002870"  [label="AST: "];
"1002874" -> "1002870"  [label="AST: "];
"1002869" -> "1002870"  [label="CFG: "];
"1002870" -> "1002869"  [label="DDG: f->channels"];
"1002870" -> "1002869"  [label="DDG: 1"];
"1002784" -> "1002870"  [label="DDG: f->channels"];
"1002870" -> "1002886"  [label="DDG: f->channels"];
"1002886" -> "1002885"  [label="AST: "];
"1002886" -> "1002890"  [label="CFG: "];
"1002887" -> "1002886"  [label="AST: "];
"1002890" -> "1002886"  [label="AST: "];
"1002885" -> "1002886"  [label="CFG: "];
"1002886" -> "1002885"  [label="DDG: f->channels"];
"1002886" -> "1002885"  [label="DDG: 1"];
"1002885" -> "1002883"  [label="AST: "];
"1002883" -> "1002885"  [label="CFG: "];
"1002885" -> "1003546"  [label="DDG: f->channels-1"];
"1002885" -> "1002883"  [label="DDG: f->channels-1"];
"1002883" -> "1002875"  [label="AST: "];
"1002884" -> "1002883"  [label="AST: "];
"1002875" -> "1002883"  [label="CFG: "];
"1002883" -> "1003546"  [label="DDG: ilog(f->channels-1)"];
"1002883" -> "1002875"  [label="DDG: f"];
"1002883" -> "1002875"  [label="DDG: ilog(f->channels-1)"];
"1002883" -> "1002904"  [label="DDG: f"];
"1002883" -> "1002920"  [label="DDG: f"];
"1002883" -> "1002940"  [label="DDG: f"];
"1002883" -> "1002950"  [label="DDG: f"];
"1002875" -> "1002858"  [label="AST: "];
"1002876" -> "1002875"  [label="AST: "];
"1002896" -> "1002875"  [label="CFG: "];
"1002875" -> "1003546"  [label="DDG: m->chan[k].angle"];
"1002875" -> "1003546"  [label="DDG: get_bits(f, ilog(f->channels-1))"];
"1002904" -> "1002903"  [label="AST: "];
"1002904" -> "1002906"  [label="CFG: "];
"1002905" -> "1002904"  [label="AST: "];
"1002906" -> "1002904"  [label="AST: "];
"1002903" -> "1002904"  [label="CFG: "];
"1002904" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002904" -> "1003546"  [label="DDG: f"];
"1002904" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002904" -> "1002903"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002903" -> "1002891"  [label="AST: "];
"1003546" -> "1002903"  [label="CFG: "];
"1002903" -> "1003546"  [label="DDG: <RET>"];
"1002920" -> "1002919"  [label="AST: "];
"1002920" -> "1002922"  [label="CFG: "];
"1002921" -> "1002920"  [label="AST: "];
"1002922" -> "1002920"  [label="AST: "];
"1002919" -> "1002920"  [label="CFG: "];
"1002920" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002920" -> "1003546"  [label="DDG: f"];
"1002920" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002920" -> "1002919"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002919" -> "1002907"  [label="AST: "];
"1003546" -> "1002919"  [label="CFG: "];
"1002919" -> "1003546"  [label="DDG: <RET>"];
"1002940" -> "1002939"  [label="AST: "];
"1002940" -> "1002942"  [label="CFG: "];
"1002941" -> "1002940"  [label="AST: "];
"1002942" -> "1002940"  [label="AST: "];
"1002939" -> "1002940"  [label="CFG: "];
"1002940" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002940" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002940" -> "1003546"  [label="DDG: f"];
"1002940" -> "1002939"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002939" -> "1002923"  [label="AST: "];
"1003546" -> "1002939"  [label="CFG: "];
"1002939" -> "1003546"  [label="DDG: <RET>"];
"1002950" -> "1002949"  [label="AST: "];
"1002950" -> "1002952"  [label="CFG: "];
"1002951" -> "1002950"  [label="AST: "];
"1002952" -> "1002950"  [label="AST: "];
"1002955" -> "1002950"  [label="CFG: "];
"1002960" -> "1002950"  [label="CFG: "];
"1002950" -> "1003546"  [label="DDG: get_bits(f,2)"];
"1002950" -> "1002954"  [label="DDG: f"];
"1002950" -> "1002984"  [label="DDG: f"];
"1002950" -> "1003036"  [label="DDG: f"];
"1002950" -> "1003090"  [label="DDG: f"];
"1002954" -> "1002953"  [label="AST: "];
"1002954" -> "1002956"  [label="CFG: "];
"1002955" -> "1002954"  [label="AST: "];
"1002956" -> "1002954"  [label="AST: "];
"1002953" -> "1002954"  [label="CFG: "];
"1002954" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002954" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1002954" -> "1003546"  [label="DDG: f"];
"1002954" -> "1002953"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002953" -> "1002949"  [label="AST: "];
"1003546" -> "1002953"  [label="CFG: "];
"1002953" -> "1003546"  [label="DDG: <RET>"];
"1002984" -> "1002976"  [label="AST: "];
"1002984" -> "1002986"  [label="CFG: "];
"1002985" -> "1002984"  [label="AST: "];
"1002986" -> "1002984"  [label="AST: "];
"1002976" -> "1002984"  [label="CFG: "];
"1002984" -> "1002976"  [label="DDG: f"];
"1002984" -> "1002976"  [label="DDG: 4"];
"1002984" -> "1003000"  [label="DDG: f"];
"1002984" -> "1003036"  [label="DDG: f"];
"1002984" -> "1003090"  [label="DDG: f"];
"1002976" -> "1002975"  [label="AST: "];
"1002977" -> "1002976"  [label="AST: "];
"1002992" -> "1002976"  [label="CFG: "];
"1002976" -> "1003546"  [label="DDG: get_bits(f, 4)"];
"1003000" -> "1002999"  [label="AST: "];
"1003000" -> "1003002"  [label="CFG: "];
"1003001" -> "1003000"  [label="AST: "];
"1003002" -> "1003000"  [label="AST: "];
"1002999" -> "1003000"  [label="CFG: "];
"1003000" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003000" -> "1003546"  [label="DDG: f"];
"1003000" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003000" -> "1002999"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002999" -> "1002987"  [label="AST: "];
"1003546" -> "1002999"  [label="CFG: "];
"1002999" -> "1003546"  [label="DDG: <RET>"];
"1003036" -> "1003035"  [label="AST: "];
"1003036" -> "1003038"  [label="CFG: "];
"1003037" -> "1003036"  [label="AST: "];
"1003038" -> "1003036"  [label="AST: "];
"1003042" -> "1003036"  [label="CFG: "];
"1003054" -> "1003036"  [label="DDG: f"];
"1003036" -> "1003045"  [label="DDG: f"];
"1003045" -> "1003039"  [label="AST: "];
"1003045" -> "1003047"  [label="CFG: "];
"1003046" -> "1003045"  [label="AST: "];
"1003047" -> "1003045"  [label="AST: "];
"1003039" -> "1003045"  [label="CFG: "];
"1003045" -> "1003039"  [label="DDG: f"];
"1003045" -> "1003039"  [label="DDG: 8"];
"1003045" -> "1003054"  [label="DDG: f"];
"1003039" -> "1003035"  [label="AST: "];
"1003040" -> "1003039"  [label="AST: "];
"1003051" -> "1003039"  [label="CFG: "];
"1003039" -> "1003058"  [label="DDG: m->submap_floor[j]"];
"1003058" -> "1003057"  [label="AST: "];
"1003058" -> "1003064"  [label="CFG: "];
"1003059" -> "1003058"  [label="AST: "];
"1003064" -> "1003058"  [label="AST: "];
"1003069" -> "1003058"  [label="CFG: "];
"1003075" -> "1003058"  [label="CFG: "];
"1003058" -> "1003546"  [label="DDG: f->floor_count"];
"1003058" -> "1003546"  [label="DDG: m->submap_floor[j] >= f->floor_count"];
"1003058" -> "1003546"  [label="DDG: m->submap_floor[j]"];
"1001765" -> "1003058"  [label="DDG: f->floor_count"];
"1003054" -> "1003048"  [label="AST: "];
"1003054" -> "1003056"  [label="CFG: "];
"1003055" -> "1003054"  [label="AST: "];
"1003056" -> "1003054"  [label="AST: "];
"1003048" -> "1003054"  [label="CFG: "];
"1003054" -> "1003048"  [label="DDG: f"];
"1003054" -> "1003048"  [label="DDG: 8"];
"1003054" -> "1003068"  [label="DDG: f"];
"1003054" -> "1003082"  [label="DDG: f"];
"1003054" -> "1003090"  [label="DDG: f"];
"1003048" -> "1003035"  [label="AST: "];
"1003049" -> "1003048"  [label="AST: "];
"1003061" -> "1003048"  [label="CFG: "];
"1003048" -> "1003546"  [label="DDG: m->submap_residue[j]"];
"1003048" -> "1003546"  [label="DDG: get_bits(f,8)"];
"1003048" -> "1003072"  [label="DDG: m->submap_residue[j]"];
"1003072" -> "1003071"  [label="AST: "];
"1003072" -> "1003078"  [label="CFG: "];
"1003073" -> "1003072"  [label="AST: "];
"1003078" -> "1003072"  [label="AST: "];
"1003083" -> "1003072"  [label="CFG: "];
"1003034" -> "1003072"  [label="CFG: "];
"1003072" -> "1003546"  [label="DDG: m->submap_residue[j] >= f->residue_count"];
"1003072" -> "1003546"  [label="DDG: m->submap_residue[j]"];
"1003072" -> "1003546"  [label="DDG: f->residue_count"];
"1002311" -> "1003072"  [label="DDG: f->residue_count"];
"1003072" -> "1003394"  [label="DDG: f->residue_count"];
"1003394" -> "1003390"  [label="AST: "];
"1003394" -> "1003396"  [label="CFG: "];
"1003395" -> "1003394"  [label="AST: "];
"1003396" -> "1003394"  [label="AST: "];
"1003404" -> "1003394"  [label="CFG: "];
"1003466" -> "1003394"  [label="CFG: "];
"1003394" -> "1003546"  [label="DDG: f->residue_count"];
"1003394" -> "1003546"  [label="DDG: i < f->residue_count"];
"1003394" -> "1003546"  [label="DDG: i"];
"1003399" -> "1003394"  [label="DDG: i"];
"1003391" -> "1003394"  [label="DDG: i"];
"1002311" -> "1003394"  [label="DDG: f->residue_count"];
"1003394" -> "1003399"  [label="DDG: i"];
"1003394" -> "1003403"  [label="DDG: i"];
"1003394" -> "1003405"  [label="DDG: i"];
"1003399" -> "1003390"  [label="AST: "];
"1003399" -> "1003400"  [label="CFG: "];
"1003400" -> "1003399"  [label="AST: "];
"1003395" -> "1003399"  [label="CFG: "];
"1003403" -> "1003401"  [label="AST: "];
"1003403" -> "1003405"  [label="CFG: "];
"1003404" -> "1003403"  [label="AST: "];
"1003405" -> "1003403"  [label="AST: "];
"1003412" -> "1003403"  [label="CFG: "];
"1003403" -> "1003546"  [label="DDG: r"];
"1003403" -> "1003546"  [label="DDG: f->residue_config + i"];
"1002292" -> "1003403"  [label="DDG: f->residue_config"];
"1003405" -> "1003409"  [label="CFG: "];
"1003406" -> "1003405"  [label="AST: "];
"1003409" -> "1003405"  [label="AST: "];
"1003405" -> "1003546"  [label="DDG: f->residue_config"];
"1002292" -> "1003405"  [label="DDG: f->residue_config"];
"1003068" -> "1003067"  [label="AST: "];
"1003068" -> "1003070"  [label="CFG: "];
"1003069" -> "1003068"  [label="AST: "];
"1003070" -> "1003068"  [label="AST: "];
"1003067" -> "1003068"  [label="CFG: "];
"1003068" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003068" -> "1003546"  [label="DDG: f"];
"1003068" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003068" -> "1003067"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003067" -> "1003057"  [label="AST: "];
"1003546" -> "1003067"  [label="CFG: "];
"1003067" -> "1003546"  [label="DDG: <RET>"];
"1003082" -> "1003081"  [label="AST: "];
"1003082" -> "1003084"  [label="CFG: "];
"1003083" -> "1003082"  [label="AST: "];
"1003084" -> "1003082"  [label="AST: "];
"1003081" -> "1003082"  [label="CFG: "];
"1003082" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003082" -> "1003546"  [label="DDG: f"];
"1003082" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003082" -> "1003081"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003081" -> "1003071"  [label="AST: "];
"1003546" -> "1003081"  [label="CFG: "];
"1003081" -> "1003546"  [label="DDG: <RET>"];
"1003090" -> "1003089"  [label="AST: "];
"1003090" -> "1003092"  [label="CFG: "];
"1003091" -> "1003090"  [label="AST: "];
"1003092" -> "1003090"  [label="AST: "];
"1003093" -> "1003090"  [label="CFG: "];
"1003090" -> "1003085"  [label="DDG: f"];
"1003090" -> "1003085"  [label="DDG: 6"];
"1003090" -> "1003089"  [label="DDG: f"];
"1003090" -> "1003089"  [label="DDG: 6"];
"1003090" -> "1003118"  [label="DDG: f"];
"1003090" -> "1003174"  [label="DDG: f"];
"1003085" -> "1000109"  [label="AST: "];
"1003085" -> "1003089"  [label="CFG: "];
"1003086" -> "1003085"  [label="AST: "];
"1003089" -> "1003085"  [label="AST: "];
"1003096" -> "1003085"  [label="CFG: "];
"1003085" -> "1003546"  [label="DDG: get_bits(f, 6)+1"];
"1003085" -> "1003098"  [label="DDG: f->mode_count"];
"1003098" -> "1003094"  [label="AST: "];
"1003098" -> "1003100"  [label="CFG: "];
"1003099" -> "1003098"  [label="AST: "];
"1003100" -> "1003098"  [label="AST: "];
"1003108" -> "1003098"  [label="CFG: "];
"1003175" -> "1003098"  [label="CFG: "];
"1003098" -> "1003546"  [label="DDG: f->mode_count"];
"1003098" -> "1003546"  [label="DDG: i < f->mode_count"];
"1003103" -> "1003098"  [label="DDG: i"];
"1003095" -> "1003098"  [label="DDG: i"];
"1003098" -> "1003103"  [label="DDG: i"];
"1003098" -> "1003107"  [label="DDG: i"];
"1003098" -> "1003109"  [label="DDG: i"];
"1003103" -> "1003094"  [label="AST: "];
"1003103" -> "1003104"  [label="CFG: "];
"1003104" -> "1003103"  [label="AST: "];
"1003099" -> "1003103"  [label="CFG: "];
"1003107" -> "1003105"  [label="AST: "];
"1003107" -> "1003109"  [label="CFG: "];
"1003108" -> "1003107"  [label="AST: "];
"1003109" -> "1003107"  [label="AST: "];
"1003116" -> "1003107"  [label="CFG: "];
"1003107" -> "1003546"  [label="DDG: m"];
"1003107" -> "1003546"  [label="DDG: f->mode_config+i"];
"1003109" -> "1003113"  [label="CFG: "];
"1003110" -> "1003109"  [label="AST: "];
"1003113" -> "1003109"  [label="AST: "];
"1003109" -> "1003546"  [label="DDG: f->mode_config"];
"1003109" -> "1003546"  [label="DDG: i"];
"1003089" -> "1003093"  [label="CFG: "];
"1003093" -> "1003089"  [label="AST: "];
"1003089" -> "1003546"  [label="DDG: get_bits(f, 6)"];
"1003118" -> "1003114"  [label="AST: "];
"1003118" -> "1003120"  [label="CFG: "];
"1003119" -> "1003118"  [label="AST: "];
"1003120" -> "1003118"  [label="AST: "];
"1003114" -> "1003118"  [label="CFG: "];
"1003118" -> "1003114"  [label="DDG: f"];
"1003118" -> "1003114"  [label="DDG: 1"];
"1003139" -> "1003118"  [label="DDG: f"];
"1003118" -> "1003125"  [label="DDG: f"];
"1003114" -> "1003105"  [label="AST: "];
"1003115" -> "1003114"  [label="AST: "];
"1003123" -> "1003114"  [label="CFG: "];
"1003114" -> "1003546"  [label="DDG: get_bits(f,1)"];
"1003114" -> "1003546"  [label="DDG: m->blockflag"];
"1003125" -> "1003121"  [label="AST: "];
"1003125" -> "1003127"  [label="CFG: "];
"1003126" -> "1003125"  [label="AST: "];
"1003127" -> "1003125"  [label="AST: "];
"1003121" -> "1003125"  [label="CFG: "];
"1003125" -> "1003121"  [label="DDG: f"];
"1003125" -> "1003121"  [label="DDG: 16"];
"1003125" -> "1003132"  [label="DDG: f"];
"1003121" -> "1003105"  [label="AST: "];
"1003122" -> "1003121"  [label="AST: "];
"1003130" -> "1003121"  [label="CFG: "];
"1003121" -> "1003143"  [label="DDG: m->windowtype"];
"1003143" -> "1003142"  [label="AST: "];
"1003143" -> "1003147"  [label="CFG: "];
"1003144" -> "1003143"  [label="AST: "];
"1003147" -> "1003143"  [label="AST: "];
"1003150" -> "1003143"  [label="CFG: "];
"1003155" -> "1003143"  [label="CFG: "];
"1003143" -> "1003546"  [label="DDG: m->windowtype != 0"];
"1003143" -> "1003546"  [label="DDG: m->windowtype"];
"1003132" -> "1003128"  [label="AST: "];
"1003132" -> "1003134"  [label="CFG: "];
"1003133" -> "1003132"  [label="AST: "];
"1003134" -> "1003132"  [label="AST: "];
"1003128" -> "1003132"  [label="CFG: "];
"1003132" -> "1003128"  [label="DDG: f"];
"1003132" -> "1003128"  [label="DDG: 16"];
"1003132" -> "1003139"  [label="DDG: f"];
"1003128" -> "1003105"  [label="AST: "];
"1003129" -> "1003128"  [label="AST: "];
"1003137" -> "1003128"  [label="CFG: "];
"1003128" -> "1003546"  [label="DDG: get_bits(f,16)"];
"1003128" -> "1003546"  [label="DDG: m->transformtype"];
"1003128" -> "1003153"  [label="DDG: m->transformtype"];
"1003153" -> "1003152"  [label="AST: "];
"1003153" -> "1003157"  [label="CFG: "];
"1003154" -> "1003153"  [label="AST: "];
"1003157" -> "1003153"  [label="AST: "];
"1003160" -> "1003153"  [label="CFG: "];
"1003165" -> "1003153"  [label="CFG: "];
"1003153" -> "1003546"  [label="DDG: m->transformtype"];
"1003153" -> "1003546"  [label="DDG: m->transformtype != 0"];
"1003139" -> "1003135"  [label="AST: "];
"1003139" -> "1003141"  [label="CFG: "];
"1003140" -> "1003139"  [label="AST: "];
"1003141" -> "1003139"  [label="AST: "];
"1003135" -> "1003139"  [label="CFG: "];
"1003139" -> "1003135"  [label="DDG: f"];
"1003139" -> "1003135"  [label="DDG: 8"];
"1003139" -> "1003149"  [label="DDG: f"];
"1003139" -> "1003159"  [label="DDG: f"];
"1003139" -> "1003171"  [label="DDG: f"];
"1003139" -> "1003174"  [label="DDG: f"];
"1003135" -> "1003105"  [label="AST: "];
"1003136" -> "1003135"  [label="AST: "];
"1003145" -> "1003135"  [label="CFG: "];
"1003135" -> "1003546"  [label="DDG: m->mapping"];
"1003135" -> "1003546"  [label="DDG: get_bits(f,8)"];
"1003135" -> "1003163"  [label="DDG: m->mapping"];
"1003163" -> "1003162"  [label="AST: "];
"1003163" -> "1003167"  [label="CFG: "];
"1003164" -> "1003163"  [label="AST: "];
"1003167" -> "1003163"  [label="AST: "];
"1003172" -> "1003163"  [label="CFG: "];
"1003104" -> "1003163"  [label="CFG: "];
"1003163" -> "1003546"  [label="DDG: m->mapping >= f->mapping_count"];
"1003163" -> "1003546"  [label="DDG: m->mapping"];
"1003163" -> "1003546"  [label="DDG: f->mapping_count"];
"1002746" -> "1003163"  [label="DDG: f->mapping_count"];
"1003149" -> "1003148"  [label="AST: "];
"1003149" -> "1003151"  [label="CFG: "];
"1003150" -> "1003149"  [label="AST: "];
"1003151" -> "1003149"  [label="AST: "];
"1003148" -> "1003149"  [label="CFG: "];
"1003149" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003149" -> "1003546"  [label="DDG: f"];
"1003149" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003149" -> "1003148"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003148" -> "1003142"  [label="AST: "];
"1003546" -> "1003148"  [label="CFG: "];
"1003148" -> "1003546"  [label="DDG: <RET>"];
"1003159" -> "1003158"  [label="AST: "];
"1003159" -> "1003161"  [label="CFG: "];
"1003160" -> "1003159"  [label="AST: "];
"1003161" -> "1003159"  [label="AST: "];
"1003158" -> "1003159"  [label="CFG: "];
"1003159" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003159" -> "1003546"  [label="DDG: f"];
"1003159" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003159" -> "1003158"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003158" -> "1003152"  [label="AST: "];
"1003546" -> "1003158"  [label="CFG: "];
"1003158" -> "1003546"  [label="DDG: <RET>"];
"1003171" -> "1003170"  [label="AST: "];
"1003171" -> "1003173"  [label="CFG: "];
"1003172" -> "1003171"  [label="AST: "];
"1003173" -> "1003171"  [label="AST: "];
"1003170" -> "1003171"  [label="CFG: "];
"1003171" -> "1003546"  [label="DDG: f"];
"1003171" -> "1003546"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003171" -> "1003546"  [label="DDG: VORBIS_invalid_setup"];
"1003171" -> "1003170"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003170" -> "1003162"  [label="AST: "];
"1003546" -> "1003170"  [label="CFG: "];
"1003170" -> "1003546"  [label="DDG: <RET>"];
"1003174" -> "1000109"  [label="AST: "];
"1003174" -> "1003175"  [label="CFG: "];
"1003175" -> "1003174"  [label="AST: "];
"1003178" -> "1003174"  [label="CFG: "];
"1003174" -> "1003546"  [label="DDG: flush_packet(f)"];
"1003174" -> "1003201"  [label="DDG: f"];
"1003174" -> "1003301"  [label="DDG: f"];
"1003201" -> "1003199"  [label="AST: "];
"1003201" -> "1003203"  [label="CFG: "];
"1003202" -> "1003201"  [label="AST: "];
"1003203" -> "1003201"  [label="AST: "];
"1003199" -> "1003201"  [label="CFG: "];
"1003201" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003201" -> "1003199"  [label="DDG: f"];
"1003201" -> "1003199"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003277" -> "1003201"  [label="DDG: f"];
"1003203" -> "1003201"  [label="DDG: f->blocksize_1"];
"1003201" -> "1003217"  [label="DDG: f"];
"1003199" -> "1003193"  [label="AST: "];
"1003200" -> "1003199"  [label="AST: "];
"1003193" -> "1003199"  [label="CFG: "];
"1003199" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003199" -> "1003193"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003193" -> "1003192"  [label="AST: "];
"1003194" -> "1003193"  [label="AST: "];
"1003212" -> "1003193"  [label="CFG: "];
"1003193" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003217" -> "1003215"  [label="AST: "];
"1003217" -> "1003219"  [label="CFG: "];
"1003218" -> "1003217"  [label="AST: "];
"1003219" -> "1003217"  [label="AST: "];
"1003215" -> "1003217"  [label="CFG: "];
"1003217" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003217" -> "1003215"  [label="DDG: f"];
"1003217" -> "1003215"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003219" -> "1003217"  [label="DDG: f->blocksize_1/2"];
"1003217" -> "1003235"  [label="DDG: f"];
"1003215" -> "1003209"  [label="AST: "];
"1003216" -> "1003215"  [label="AST: "];
"1003209" -> "1003215"  [label="CFG: "];
"1003215" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003215" -> "1003209"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003209" -> "1003192"  [label="AST: "];
"1003210" -> "1003209"  [label="AST: "];
"1003230" -> "1003209"  [label="CFG: "];
"1003209" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003209" -> "1003546"  [label="DDG: f->previous_window[i]"];
"1003235" -> "1003233"  [label="AST: "];
"1003235" -> "1003237"  [label="CFG: "];
"1003236" -> "1003235"  [label="AST: "];
"1003237" -> "1003235"  [label="AST: "];
"1003233" -> "1003235"  [label="CFG: "];
"1003235" -> "1003546"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003235" -> "1003233"  [label="DDG: f"];
"1003235" -> "1003233"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003237" -> "1003235"  [label="DDG: longest_floorlist"];
"1003235" -> "1003266"  [label="DDG: f"];
"1003235" -> "1003277"  [label="DDG: f"];
"1003233" -> "1003227"  [label="AST: "];
"1003234" -> "1003233"  [label="AST: "];
"1003227" -> "1003233"  [label="CFG: "];
"1003233" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003233" -> "1003227"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003227" -> "1003192"  [label="AST: "];
"1003228" -> "1003227"  [label="AST: "];
"1003246" -> "1003227"  [label="CFG: "];
"1003227" -> "1003546"  [label="DDG: f->finalY[i]"];
"1003227" -> "1003546"  [label="DDG: (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003266" -> "1003265"  [label="AST: "];
"1003266" -> "1003268"  [label="CFG: "];
"1003267" -> "1003266"  [label="AST: "];
"1003268" -> "1003266"  [label="AST: "];
"1003265" -> "1003266"  [label="CFG: "];
"1003266" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003266" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003266" -> "1003546"  [label="DDG: f"];
"1003266" -> "1003265"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003265" -> "1003241"  [label="AST: "];
"1003546" -> "1003265"  [label="CFG: "];
"1003265" -> "1003546"  [label="DDG: <RET>"];
"1003277" -> "1003275"  [label="AST: "];
"1003277" -> "1003279"  [label="CFG: "];
"1003278" -> "1003277"  [label="AST: "];
"1003279" -> "1003277"  [label="AST: "];
"1003275" -> "1003277"  [label="CFG: "];
"1003277" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003277" -> "1003275"  [label="DDG: f"];
"1003277" -> "1003275"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003279" -> "1003277"  [label="DDG: f->blocksize_1/2"];
"1003277" -> "1003296"  [label="DDG: f"];
"1003277" -> "1003301"  [label="DDG: f"];
"1003275" -> "1003269"  [label="AST: "];
"1003276" -> "1003275"  [label="AST: "];
"1003269" -> "1003275"  [label="CFG: "];
"1003275" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003275" -> "1003269"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003269" -> "1003192"  [label="AST: "];
"1003270" -> "1003269"  [label="AST: "];
"1003291" -> "1003269"  [label="CFG: "];
"1003269" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003296" -> "1003295"  [label="AST: "];
"1003296" -> "1003298"  [label="CFG: "];
"1003297" -> "1003296"  [label="AST: "];
"1003298" -> "1003296"  [label="AST: "];
"1003295" -> "1003296"  [label="CFG: "];
"1003296" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003296" -> "1003546"  [label="DDG: f"];
"1003296" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003296" -> "1003295"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003295" -> "1003287"  [label="AST: "];
"1003546" -> "1003295"  [label="CFG: "];
"1003295" -> "1003546"  [label="DDG: <RET>"];
"1003301" -> "1003300"  [label="AST: "];
"1003301" -> "1003304"  [label="CFG: "];
"1003302" -> "1003301"  [label="AST: "];
"1003303" -> "1003301"  [label="AST: "];
"1003304" -> "1003301"  [label="AST: "];
"1003300" -> "1003301"  [label="CFG: "];
"1003301" -> "1003546"  [label="DDG: f->blocksize_0"];
"1003301" -> "1003546"  [label="DDG: f"];
"1003301" -> "1003300"  [label="DDG: f"];
"1003301" -> "1003300"  [label="DDG: 0"];
"1003301" -> "1003300"  [label="DDG: f->blocksize_0"];
"1000283" -> "1003301"  [label="DDG: f->blocksize_0"];
"1003301" -> "1003311"  [label="DDG: f"];
"1003301" -> "1003319"  [label="DDG: f->blocksize_0"];
"1003300" -> "1003299"  [label="AST: "];
"1003308" -> "1003300"  [label="CFG: "];
"1003312" -> "1003300"  [label="CFG: "];
"1003300" -> "1003546"  [label="DDG: init_blocksize(f, 0, f->blocksize_0)"];
"1003300" -> "1003546"  [label="DDG: !init_blocksize(f, 0, f->blocksize_0)"];
"1003311" -> "1003310"  [label="AST: "];
"1003311" -> "1003314"  [label="CFG: "];
"1003312" -> "1003311"  [label="AST: "];
"1003313" -> "1003311"  [label="AST: "];
"1003314" -> "1003311"  [label="AST: "];
"1003310" -> "1003311"  [label="CFG: "];
"1003311" -> "1003546"  [label="DDG: f"];
"1003311" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003310"  [label="DDG: f"];
"1003311" -> "1003310"  [label="DDG: 1"];
"1003311" -> "1003310"  [label="DDG: f->blocksize_1"];
"1000290" -> "1003311"  [label="DDG: f->blocksize_1"];
"1003282" -> "1003311"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003328"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003377"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003535"  [label="DDG: f"];
"1003311" -> "1003542"  [label="DDG: f"];
"1003310" -> "1003309"  [label="AST: "];
"1003318" -> "1003310"  [label="CFG: "];
"1003322" -> "1003310"  [label="CFG: "];
"1003310" -> "1003546"  [label="DDG: !init_blocksize(f, 1, f->blocksize_1)"];
"1003310" -> "1003546"  [label="DDG: init_blocksize(f, 1, f->blocksize_1)"];
"1003328" -> "1000109"  [label="AST: "];
"1003328" -> "1003334"  [label="CFG: "];
"1003329" -> "1003328"  [label="AST: "];
"1003334" -> "1003328"  [label="AST: "];
"1003341" -> "1003328"  [label="CFG: "];
"1003328" -> "1003546"  [label="DDG: f->blocksize[1]"];
"1003377" -> "1003376"  [label="AST: "];
"1003377" -> "1003381"  [label="CFG: "];
"1003378" -> "1003377"  [label="AST: "];
"1003381" -> "1003377"  [label="AST: "];
"1003383" -> "1003377"  [label="CFG: "];
"1003377" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003377" -> "1003376"  [label="DDG: f->blocksize_1"];
"1003377" -> "1003413"  [label="DDG: f->blocksize_1"];
"1003376" -> "1003374"  [label="AST: "];
"1003376" -> "1003383"  [label="CFG: "];
"1003383" -> "1003376"  [label="AST: "];
"1003374" -> "1003376"  [label="CFG: "];
"1003376" -> "1003546"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003376" -> "1003374"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003376" -> "1003374"  [label="DDG: 1"];
"1003374" -> "1003372"  [label="AST: "];
"1003375" -> "1003374"  [label="AST: "];
"1003388" -> "1003374"  [label="CFG: "];
"1003374" -> "1003546"  [label="DDG: f->blocksize_1 * sizeof(float) >> 1"];
"1003413" -> "1003411"  [label="AST: "];
"1003413" -> "1003417"  [label="CFG: "];
"1003414" -> "1003413"  [label="AST: "];
"1003417" -> "1003413"  [label="AST: "];
"1003411" -> "1003413"  [label="CFG: "];
"1003413" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003413" -> "1003411"  [label="DDG: f->blocksize_1"];
"1003413" -> "1003411"  [label="DDG: 2"];
"1003411" -> "1003401"  [label="AST: "];
"1003412" -> "1003411"  [label="AST: "];
"1003420" -> "1003411"  [label="CFG: "];
"1003411" -> "1003546"  [label="DDG: f->blocksize_1 / 2"];
"1003535" -> "1003534"  [label="AST: "];
"1003535" -> "1003537"  [label="CFG: "];
"1003536" -> "1003535"  [label="AST: "];
"1003537" -> "1003535"  [label="AST: "];
"1003534" -> "1003535"  [label="CFG: "];
"1003535" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003535" -> "1003546"  [label="DDG: f"];
"1003535" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003535" -> "1003534"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003534" -> "1003516"  [label="AST: "];
"1003546" -> "1003534"  [label="CFG: "];
"1003534" -> "1003546"  [label="DDG: <RET>"];
"1003542" -> "1003538"  [label="AST: "];
"1003542" -> "1003543"  [label="CFG: "];
"1003543" -> "1003542"  [label="AST: "];
"1003538" -> "1003542"  [label="CFG: "];
"1003542" -> "1003546"  [label="DDG: f"];
"1003542" -> "1003538"  [label="DDG: f"];
"1003538" -> "1000109"  [label="AST: "];
"1003539" -> "1003538"  [label="AST: "];
"1003545" -> "1003538"  [label="CFG: "];
"1003538" -> "1003546"  [label="DDG: stb_vorbis_get_file_offset(f)"];
"1003538" -> "1003546"  [label="DDG: f->first_audio_page_offset"];
"1003319" -> "1000109"  [label="AST: "];
"1003319" -> "1003325"  [label="CFG: "];
"1003320" -> "1003319"  [label="AST: "];
"1003325" -> "1003319"  [label="AST: "];
"1003331" -> "1003319"  [label="CFG: "];
"1003319" -> "1003546"  [label="DDG: f->blocksize[0]"];
"1003319" -> "1003546"  [label="DDG: f->blocksize_0"];
"1002924" -> "1002923"  [label="AST: "];
"1002924" -> "1002932"  [label="CFG: "];
"1002925" -> "1002924"  [label="AST: "];
"1002932" -> "1002924"  [label="AST: "];
"1002941" -> "1002924"  [label="CFG: "];
"1002857" -> "1002924"  [label="CFG: "];
"1002924" -> "1003546"  [label="DDG: m->chan[k].magnitude == m->chan[k].angle"];
"1002924" -> "1003546"  [label="DDG: m->chan[k].angle"];
"1002924" -> "1003546"  [label="DDG: m->chan[k].magnitude"];
"1002968" -> "1002964"  [label="AST: "];
"1002968" -> "1002970"  [label="CFG: "];
"1002969" -> "1002968"  [label="AST: "];
"1002970" -> "1002968"  [label="AST: "];
"1002980" -> "1002968"  [label="CFG: "];
"1003026" -> "1002968"  [label="CFG: "];
"1002968" -> "1003546"  [label="DDG: j"];
"1002968" -> "1003546"  [label="DDG: f->channels"];
"1002968" -> "1003546"  [label="DDG: j < f->channels"];
"1002968" -> "1002784"  [label="DDG: f->channels"];
"1002965" -> "1002968"  [label="DDG: j"];
"1002973" -> "1002968"  [label="DDG: j"];
"1002784" -> "1002968"  [label="DDG: f->channels"];
"1002968" -> "1002973"  [label="DDG: j"];
"1002968" -> "1003185"  [label="DDG: f->channels"];
"1002784" -> "1002788"  [label="CFG: "];
"1002785" -> "1002784"  [label="AST: "];
"1002788" -> "1002784"  [label="AST: "];
"1002784" -> "1003546"  [label="DDG: f->channels"];
"1000236" -> "1002784"  [label="DDG: f->channels"];
"1003008" -> "1002784"  [label="DDG: f->channels"];
"1002784" -> "1003008"  [label="DDG: f->channels"];
"1003008" -> "1003004"  [label="AST: "];
"1003008" -> "1003010"  [label="CFG: "];
"1003009" -> "1003008"  [label="AST: "];
"1003010" -> "1003008"  [label="AST: "];
"1003019" -> "1003008"  [label="CFG: "];
"1003026" -> "1003008"  [label="CFG: "];
"1003008" -> "1003546"  [label="DDG: f->channels"];
"1003008" -> "1003546"  [label="DDG: j < f->channels"];
"1003013" -> "1003008"  [label="DDG: j"];
"1003005" -> "1003008"  [label="DDG: j"];
"1003008" -> "1003013"  [label="DDG: j"];
"1003008" -> "1003185"  [label="DDG: f->channels"];
"1003013" -> "1003004"  [label="AST: "];
"1003013" -> "1003014"  [label="CFG: "];
"1003014" -> "1003013"  [label="AST: "];
"1003009" -> "1003013"  [label="CFG: "];
"1003185" -> "1003181"  [label="AST: "];
"1003185" -> "1003187"  [label="CFG: "];
"1003186" -> "1003185"  [label="AST: "];
"1003187" -> "1003185"  [label="AST: "];
"1003196" -> "1003185"  [label="CFG: "];
"1003302" -> "1003185"  [label="CFG: "];
"1003185" -> "1003546"  [label="DDG: i"];
"1003185" -> "1003546"  [label="DDG: f->channels"];
"1003185" -> "1003546"  [label="DDG: i < f->channels"];
"1003190" -> "1003185"  [label="DDG: i"];
"1003182" -> "1003185"  [label="DDG: i"];
"1000236" -> "1003185"  [label="DDG: f->channels"];
"1003185" -> "1003190"  [label="DDG: i"];
"1003190" -> "1003181"  [label="AST: "];
"1003190" -> "1003191"  [label="CFG: "];
"1003191" -> "1003190"  [label="AST: "];
"1003186" -> "1003190"  [label="CFG: "];
"1002973" -> "1002964"  [label="AST: "];
"1002973" -> "1002974"  [label="CFG: "];
"1002974" -> "1002973"  [label="AST: "];
"1002969" -> "1002973"  [label="CFG: "];
"1002733" -> "1002737"  [label="CFG: "];
"1002734" -> "1002733"  [label="AST: "];
"1002737" -> "1002733"  [label="AST: "];
"1002733" -> "1002746"  [label="DDG: f->mapping_count"];
"1002746" -> "1002742"  [label="AST: "];
"1002746" -> "1002748"  [label="CFG: "];
"1002747" -> "1002746"  [label="AST: "];
"1002748" -> "1002746"  [label="AST: "];
"1002756" -> "1002746"  [label="CFG: "];
"1003087" -> "1002746"  [label="CFG: "];
"1002746" -> "1003546"  [label="DDG: f->mapping_count"];
"1002746" -> "1003546"  [label="DDG: i < f->mapping_count"];
"1002743" -> "1002746"  [label="DDG: i"];
"1002751" -> "1002746"  [label="DDG: i"];
"1002746" -> "1002751"  [label="DDG: i"];
"1002751" -> "1002742"  [label="AST: "];
"1002751" -> "1002752"  [label="CFG: "];
"1002752" -> "1002751"  [label="AST: "];
"1002747" -> "1002751"  [label="CFG: "];
"1002696" -> "1002700"  [label="CFG: "];
"1002700" -> "1002696"  [label="AST: "];
"1002696" -> "1003546"  [label="DDG: get_bits(f,6)"];
}
