digraph "0_stb_244d83bc3d859293f55812d48b3db168e581f6ab_0@API" {
"1003219" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003222" [label="(Call,f->blocksize_1/2)"];
"1003203" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1000290" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1000294" [label="(Call,1 << log1)"];
"1000278" [label="(Call,log1 = x >> 4)"];
"1000280" [label="(Call,x >> 4)"];
"1000275" [label="(Call,x & 15)"];
"1000266" [label="(Call,x = get8(f))"];
"1000268" [label="(Call,get8(f))"];
"1000264" [label="(Call,get32(f))"];
"1000262" [label="(Call,get32(f))"];
"1000260" [label="(Call,get32(f))"];
"1000249" [label="(Call,get32(f))"];
"1000224" [label="(Call,get8(f))"];
"1000213" [label="(Call,get32(f))"];
"1000195" [label="(Call,getn(f, header, 6))"];
"1000186" [label="(Call,get8(f))"];
"1000127" [label="(Call,start_page(f))"];
"1000108" [label="(MethodParameterIn,vorb *f)"];
"1003282" [label="(Call,f->blocksize_1/2)"];
"1003217" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003215" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003209" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003251" [label="(Call,f->previous_window[i] == NULL)"];
"1003250" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003258" [label="(Call,f->finalY[i] == NULL)"];
"1003288" [label="(Call,f->floor_buffers[i] == NULL)"];
"1003243" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003235" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003233" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003227" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003266" [label="(Call,error(f, VORBIS_outofmem))"];
"1003265" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003277" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003201" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003199" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003193" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003275" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003269" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003296" [label="(Call,error(f, VORBIS_outofmem))"];
"1003295" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003301" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003300" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003311" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003310" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003328" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003377" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003374" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003484" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003489" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003517" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003518" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003522" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1003413" [label="(Call,f->blocksize_1 / 2)"];
"1003411" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1003422" [label="(Call,r->begin < actual_size)"];
"1003419" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003447" [label="(Call,limit_r_end - limit_r_begin)"];
"1003445" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1003453" [label="(Call,n_read / r->part_size)"];
"1003451" [label="(Call,part_read = n_read / r->part_size)"];
"1003459" [label="(Call,part_read > max_part_read)"];
"1003462" [label="(Call,max_part_read = part_read)"];
"1003474" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1003467" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003465" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003478" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003471" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003421" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003435" [label="(Call,r->end   < actual_size)"];
"1003432" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003434" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1003535" [label="(Call,error(f, VORBIS_outofmem))"];
"1003534" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003542" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1003538" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003319" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1001002" [label="(Call,error(f, VORBIS_outofmem))"];
"1000195" [label="(Call,getn(f, header, 6))"];
"1001142" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1003446" [label="(Identifier,n_read)"];
"1003464" [label="(Identifier,part_read)"];
"1000217" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003312" [label="(Identifier,f)"];
"1000294" [label="(Call,1 << log1)"];
"1001227" [label="(Call,get_bits(f, 4))"];
"1003206" [label="(Call,f->blocksize_1)"];
"1003269" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000928" [label="(Call,error(f, VORBIS_outofmem))"];
"1000667" [label="(Call,get_bits(f,5))"];
"1000630" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1000521" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002440" [label="(Call,get_bits(f,5))"];
"1003387" [label="(Call,max_part_read=0)"];
"1003538" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1000276" [label="(Identifier,x)"];
"1001987" [label="(Call,get_bits(f, 8))"];
"1000290" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1003220" [label="(Call,sizeof(float))"];
"1003434" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1000291" [label="(Call,f->blocksize_1)"];
"1002719" [label="(Call,f->mapping == NULL)"];
"1000547" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003319" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1000811" [label="(Call,setup_malloc(f, c->entries))"];
"1002001" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003420" [label="(Identifier,limit_r_begin)"];
"1000464" [label="(Call,error(f, VORBIS_outofmem))"];
"1003463" [label="(Identifier,max_part_read)"];
"1003295" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1000296" [label="(Identifier,log1)"];
"1000526" [label="(Call,get_bits(f, 8))"];
"1003341" [label="(Identifier,integer_divide_table)"];
"1003496" [label="(Identifier,f)"];
"1003218" [label="(Identifier,f)"];
"1003132" [label="(Call,get_bits(f,16))"];
"1001340" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001631" [label="(Call,error(f, VORBIS_outofmem))"];
"1002638" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002659" [label="(Call,error(f, VORBIS_outofmem))"];
"1002346" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003421" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1001298" [label="(Call,error(f, VORBIS_outofmem))"];
"1002375" [label="(Call,r->part_size = get_bits(f,24)+1)"];
"1003185" [label="(Call,i < f->channels)"];
"1000358" [label="(Call,next_segment(f))"];
"1001832" [label="(Call,get_bits(f,16))"];
"1001679" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1002062" [label="(Call,get_bits(f,4))"];
"1003201" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003159" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003436" [label="(Call,r->end)"];
"1003519" [label="(Call,f->setup_offset)"];
"1002950" [label="(Call,get_bits(f,2))"];
"1003192" [label="(Block,)"];
"1003432" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003440" [label="(Call,r->end)"];
"1003311" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003534" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003383" [label="(Literal,1)"];
"1003413" [label="(Call,f->blocksize_1 / 2)"];
"1003377" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1000376" [label="(Call,IS_PUSH_MODE(f))"];
"1000344" [label="(Call,start_page(f))"];
"1000268" [label="(Call,get8(f))"];
"1003486" [label="(Call,f->temp_memory_required)"];
"1003471" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003254" [label="(Identifier,f)"];
"1003447" [label="(Call,limit_r_end - limit_r_begin)"];
"1002765" [label="(Call,get_bits(f,16))"];
"1000552" [label="(Call,get_bits(f, 8))"];
"1001854" [label="(Call,get_bits(f,4))"];
"1000249" [label="(Call,get32(f))"];
"1001690" [label="(Call,CHECK(f))"];
"1002029" [label="(Call,get_bits(f,8))"];
"1003259" [label="(Call,f->finalY[i])"];
"1002397" [label="(Call,get_bits(f,8))"];
"1000159" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002471" [label="(Call,error(f, VORBIS_outofmem))"];
"1003535" [label="(Call,error(f, VORBIS_outofmem))"];
"1003199" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000436" [label="(Call,get_bits(f,8))"];
"1001875" [label="(Call,get_bits(f,8))"];
"1002773" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003375" [label="(Identifier,imdct_mem)"];
"1002940" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003288" [label="(Call,f->floor_buffers[i] == NULL)"];
"1003430" [label="(Identifier,actual_size)"];
"1003278" [label="(Identifier,f)"];
"1003303" [label="(Literal,0)"];
"1000282" [label="(Literal,4)"];
"1003546" [label="(MethodReturn,static int)"];
"1003246" [label="(Identifier,f)"];
"1000260" [label="(Call,get32(f))"];
"1003517" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003244" [label="(Call,f->channel_buffers[i])"];
"1000245" [label="(Call,f->sample_rate = get32(f))"];
"1003474" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1003204" [label="(Call,sizeof(float))"];
"1003125" [label="(Call,get_bits(f,16))"];
"1000982" [label="(Call,error(f, VORBIS_outofmem))"];
"1003209" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003493" [label="(Identifier,imdct_mem)"];
"1000311" [label="(Call,log1 < 6)"];
"1000270" [label="(Block,)"];
"1003202" [label="(Identifier,f)"];
"1001846" [label="(Call,get_bits(f,8))"];
"1003522" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1000945" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1000213" [label="(Call,get32(f))"];
"1001195" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003411" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1002920" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003427" [label="(Call,r->begin)"];
"1000212" [label="(Call,get32(f) != 0)"];
"1003328" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1000644" [label="(Call,setup_malloc(f, c->entries))"];
"1003426" [label="(Identifier,actual_size)"];
"1003243" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003272" [label="(Identifier,f)"];
"1000205" [label="(Call,vorbis_validate(header))"];
"1000910" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1003241" [label="(ControlStructure,if (f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL))"];
"1003287" [label="(ControlStructure,if (f->floor_buffers[i] == NULL))"];
"1000185" [label="(Call,get8(f) != VORBIS_packet_id)"];
"1003219" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1000834" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001068" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001825" [label="(Call,get_bits(f,16))"];
"1000956" [label="(Call,error(f, VORBIS_outofmem))"];
"1003283" [label="(Call,f->blocksize_1)"];
"1002130" [label="(Call,get_bits(f, g->rangebits))"];
"1003212" [label="(Identifier,f)"];
"1003261" [label="(Identifier,f)"];
"1002452" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1003454" [label="(Identifier,n_read)"];
"1000568" [label="(Call,get_bits(f, 8))"];
"1000295" [label="(Literal,1)"];
"1002389" [label="(Call,get_bits(f,6))"];
"1003258" [label="(Call,f->finalY[i] == NULL)"];
"1003329" [label="(Call,f->blocksize[1])"];
"1003266" [label="(Call,error(f, VORBIS_outofmem))"];
"1003414" [label="(Call,f->blocksize_1)"];
"1003320" [label="(Call,f->blocksize[0])"];
"1002883" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1000300" [label="(Identifier,log0)"];
"1003423" [label="(Call,r->begin)"];
"1003372" [label="(Block,)"];
"1001791" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002707" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1003228" [label="(Call,f->finalY[i])"];
"1000190" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003257" [label="(Identifier,NULL)"];
"1003090" [label="(Call,get_bits(f, 6))"];
"1003250" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003313" [label="(Literal,1)"];
"1003223" [label="(Call,f->blocksize_1)"];
"1000225" [label="(Identifier,f)"];
"1003222" [label="(Call,f->blocksize_1/2)"];
"1001440" [label="(Call,error(f, VORBIS_outofmem))"];
"1001971" [label="(Call,get_bits(f, 2))"];
"1000250" [label="(Identifier,f)"];
"1003296" [label="(Call,error(f, VORBIS_outofmem))"];
"1001283" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001328" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1002046" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001879" [label="(Call,error(f, VORBIS_feature_not_supported))"];
"1001730" [label="(Call,get_bits(f, 6))"];
"1000188" [label="(Identifier,VORBIS_packet_id)"];
"1003482" [label="(Identifier,classify_mem)"];
"1003217" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003279" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003314" [label="(Call,f->blocksize_1)"];
"1003289" [label="(Call,f->floor_buffers[i])"];
"1003082" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003068" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003301" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003467" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003235" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1002334" [label="(Call,get_bits(f, 16))"];
"1003236" [label="(Identifier,f)"];
"1003268" [label="(Identifier,VORBIS_outofmem)"];
"1002954" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003322" [label="(Identifier,f)"];
"1003054" [label="(Call,get_bits(f,8))"];
"1000257" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000265" [label="(Identifier,f)"];
"1002697" [label="(Call,get_bits(f,6))"];
"1000181" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000740" [label="(Call,get_bits(f,1))"];
"1003543" [label="(Identifier,f)"];
"1001758" [label="(Call,error(f, VORBIS_outofmem))"];
"1000752" [label="(Call,get_bits(f, 5))"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003468" [label="(Call,f->channels)"];
"1001905" [label="(Call,get_bits(f, 5))"];
"1001211" [label="(Call,get_bits(f, 32))"];
"1001235" [label="(Call,get_bits(f,1))"];
"1003294" [label="(Identifier,NULL)"];
"1003309" [label="(ControlStructure,if (!init_blocksize(f, 1, f->blocksize_1)))"];
"1003226" [label="(Literal,2)"];
"1001818" [label="(Call,get_bits(f,8))"];
"1003264" [label="(Identifier,NULL)"];
"1000279" [label="(Identifier,log1)"];
"1002984" [label="(Call,get_bits(f, 4))"];
"1000421" [label="(Call,get8_packet(f))"];
"1002529" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003277" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003298" [label="(Identifier,VORBIS_outofmem)"];
"1003302" [label="(Identifier,f)"];
"1003462" [label="(Call,max_part_read = part_read)"];
"1003490" [label="(Call,f->temp_memory_required)"];
"1000261" [label="(Identifier,f)"];
"1003036" [label="(Call,get_bits(f,8))"];
"1003308" [label="(Identifier,FALSE)"];
"1000208" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000603" [label="(Call,get_bits(f,1))"];
"1000109" [label="(Block,)"];
"1000196" [label="(Identifier,f)"];
"1003523" [label="(Call,sizeof(*f))"];
"1003433" [label="(Identifier,limit_r_end)"];
"1002360" [label="(Call,get_bits(f, 24))"];
"1000360" [label="(Call,skip(f, len))"];
"1001961" [label="(Call,get_bits(f, 3))"];
"1003540" [label="(Identifier,f)"];
"1000405" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000242" [label="(Call,error(f, VORBIS_too_many_channels))"];
"1000534" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001573" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003215" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1002725" [label="(Call,error(f, VORBIS_outofmem))"];
"1003545" [label="(Identifier,TRUE)"];
"1003483" [label="(ControlStructure,if (imdct_mem > f->temp_memory_required))"];
"1003334" [label="(Call,f->blocksize_1)"];
"1000573" [label="(Call,get_bits(f, 8))"];
"1000765" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002435" [label="(Call,get_bits(f,1))"];
"1000108" [label="(MethodParameterIn,vorb *f)"];
"1000509" [label="(Call,CHECK(f))"];
"1003291" [label="(Identifier,f)"];
"1001692" [label="(Call,CHECK(f))"];
"1000186" [label="(Call,get8(f))"];
"1000281" [label="(Identifier,x)"];
"1002431" [label="(Call,get_bits(f,3))"];
"1003045" [label="(Call,get_bits(f,8))"];
"1003539" [label="(Call,f->first_audio_page_offset)"];
"1000273" [label="(Call,log0 = x & 15)"];
"1002289" [label="(Call,error(f, VORBIS_outofmem))"];
"1003516" [label="(ControlStructure,if (f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset))"];
"1003458" [label="(ControlStructure,if (part_read > max_part_read))"];
"1000989" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002513" [label="(Call,get_bits(f, 8))"];
"1002834" [label="(Call,get_bits(f,1))"];
"1000561" [label="(Call,get_bits(f, 8))"];
"1003537" [label="(Identifier,VORBIS_outofmem)"];
"1000139" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003252" [label="(Call,f->previous_window[i])"];
"1002260" [label="(Call,get_bits(f, 6))"];
"1003249" [label="(Identifier,NULL)"];
"1003439" [label="(Identifier,actual_size)"];
"1003412" [label="(Identifier,actual_size)"];
"1000187" [label="(Identifier,f)"];
"1000200" [label="(Call,error(f, VORBIS_unexpected_eof))"];
"1003422" [label="(Call,r->begin < actual_size)"];
"1003400" [label="(Identifier,i)"];
"1003449" [label="(Identifier,limit_r_begin)"];
"1003475" [label="(Identifier,max_part_read)"];
"1000232" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003174" [label="(Call,flush_packet(f))"];
"1001152" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1003417" [label="(Literal,2)"];
"1003472" [label="(Call,sizeof(void*))"];
"1003237" [label="(Call,sizeof(int16) * longest_floorlist)"];
"1003526" [label="(Call,f->temp_memory_required)"];
"1001219" [label="(Call,get_bits(f, 32))"];
"1002364" [label="(Call,r->end < r->begin)"];
"1003485" [label="(Identifier,imdct_mem)"];
"1000274" [label="(Identifier,log0)"];
"1001166" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1003194" [label="(Call,f->channel_buffers[i])"];
"1000446" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1003419" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003265" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002800" [label="(Call,error(f, VORBIS_outofmem))"];
"1002353" [label="(Call,get_bits(f, 24))"];
"1003374" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003118" [label="(Call,get_bits(f,1))"];
"1003460" [label="(Identifier,part_read)"];
"1002812" [label="(Call,get_bits(f,4))"];
"1000262" [label="(Call,get32(f))"];
"1003282" [label="(Call,f->blocksize_1/2)"];
"1001714" [label="(Call,get_bits(f, 16))"];
"1000127" [label="(Call,start_page(f))"];
"1002409" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000215" [label="(Literal,0)"];
"1003489" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1000198" [label="(Literal,6)"];
"1003203" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1000653" [label="(Call,error(f, VORBIS_outofmem))"];
"1000331" [label="(Call,get8(f))"];
"1000220" [label="(Call,f->channels = get8(f))"];
"1000269" [label="(Identifier,f)"];
"1003529" [label="(Call,(unsigned) f->temp_offset)"];
"1003435" [label="(Call,r->end   < actual_size)"];
"1002904" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000275" [label="(Call,x & 15)"];
"1000149" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003479" [label="(Call,f->temp_memory_required)"];
"1001117" [label="(Call,error(f, VORBIS_outofmem))"];
"1001097" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1000224" [label="(Call,get8(f))"];
"1002843" [label="(Call,get_bits(f,8))"];
"1001049" [label="(Call,setup_temp_free(f, values, 0))"];
"1003401" [label="(Block,)"];
"1003476" [label="(Call,sizeof(uint8 *))"];
"1003227" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003270" [label="(Call,f->floor_buffers[i])"];
"1001740" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1002054" [label="(Call,get_bits(f,2))"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003230" [label="(Identifier,f)"];
"1001697" [label="(Call,get_bits(f, 6))"];
"1000283" [label="(Call,f->blocksize_0 = 1 << log0)"];
"1003518" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003448" [label="(Identifier,limit_r_end)"];
"1001839" [label="(Call,get_bits(f,6))"];
"1003297" [label="(Identifier,f)"];
"1001600" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001926" [label="(Call,get_bits(f, 4))"];
"1002550" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1000169" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000593" [label="(Call,get_bits(f,1))"];
"1001318" [label="(Call,get_bits(f, c->value_bits))"];
"1002867" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1003536" [label="(Identifier,f)"];
"1002573" [label="(Call,error(f, VORBIS_outofmem))"];
"1002782" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1003478" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003378" [label="(Call,f->blocksize_1)"];
"1003443" [label="(Identifier,actual_size)"];
"1000705" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001088" [label="(Call,error(f, VORBIS_outofmem))"];
"1003193" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1001592" [label="(Call,CHECK(f))"];
"1001561" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1003452" [label="(Identifier,part_read)"];
"1003267" [label="(Identifier,f)"];
"1003233" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1000350" [label="(Call,start_packet(f))"];
"1003381" [label="(Call,sizeof(float))"];
"1003139" [label="(Call,get_bits(f,8))"];
"1002794" [label="(Call,m->chan == NULL)"];
"1000539" [label="(Call,get_bits(f, 8))"];
"1003171" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000371" [label="(Call,start_packet(f))"];
"1003459" [label="(Call,part_read > max_part_read)"];
"1000401" [label="(Call,get8_packet(f))"];
"1000689" [label="(Call,get_bits(f, ilog(limit)))"];
"1003310" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003318" [label="(Identifier,FALSE)"];
"1003275" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000823" [label="(Call,error(f, VORBIS_outofmem))"];
"1000267" [label="(Identifier,x)"];
"1003542" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1000285" [label="(Identifier,f)"];
"1000326" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000619" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001382" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1000896" [label="(Call,CHECK(f))"];
"1000194" [label="(Call,!getn(f, header, 6))"];
"1003453" [label="(Call,n_read / r->part_size)"];
"1003465" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003000" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000197" [label="(Identifier,header)"];
"1000339" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000128" [label="(Identifier,f)"];
"1001779" [label="(Call,get_bits(f, 16))"];
"1000306" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000280" [label="(Call,x >> 4)"];
"1002804" [label="(Call,get_bits(f,1))"];
"1002270" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1001428" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1003461" [label="(Identifier,max_part_read)"];
"1003480" [label="(Identifier,f)"];
"1003491" [label="(Identifier,f)"];
"1003331" [label="(Identifier,f)"];
"1003286" [label="(Literal,2)"];
"1000965" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001054" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001179" [label="(Call,CHECK(f))"];
"1000277" [label="(Literal,15)"];
"1001405" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1003441" [label="(Identifier,r)"];
"1003300" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003210" [label="(Call,f->previous_window[i])"];
"1000381" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1000126" [label="(Call,!start_page(f))"];
"1000214" [label="(Identifier,f)"];
"1003149" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003451" [label="(Call,part_read = n_read / r->part_size)"];
"1001276" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000318" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000278" [label="(Call,log1 = x >> 4)"];
"1003325" [label="(Call,f->blocksize_0)"];
"1003388" [label="(Identifier,max_part_read)"];
"1003455" [label="(Call,r->part_size)"];
"1002372" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003251" [label="(Call,f->previous_window[i] == NULL)"];
"1003304" [label="(Call,f->blocksize_0)"];
"1003484" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1001722" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002380" [label="(Call,get_bits(f,24))"];
"1003445" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1000264" [label="(Call,get32(f))"];
"1000428" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001185" [label="(Call,get_bits(f, 4))"];
"1003299" [label="(ControlStructure,if (!init_blocksize(f, 0, f->blocksize_0)))"];
"1003428" [label="(Identifier,r)"];
"1003191" [label="(Identifier,i)"];
"1000266" [label="(Call,x = get8(f))"];
"1000263" [label="(Identifier,f)"];
"1003466" [label="(Identifier,classify_mem)"];
"1001619" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1000513" [label="(Call,get_bits(f, 8))"];
"1000582" [label="(Call,get_bits(f, 8))"];
"1003219" -> "1003217"  [label="AST: "];
"1003219" -> "1003222"  [label="CFG: "];
"1003220" -> "1003219"  [label="AST: "];
"1003222" -> "1003219"  [label="AST: "];
"1003217" -> "1003219"  [label="CFG: "];
"1003219" -> "1003546"  [label="DDG: f->blocksize_1/2"];
"1003219" -> "1003217"  [label="DDG: f->blocksize_1/2"];
"1003222" -> "1003219"  [label="DDG: f->blocksize_1"];
"1003222" -> "1003219"  [label="DDG: 2"];
"1003222" -> "1003226"  [label="CFG: "];
"1003223" -> "1003222"  [label="AST: "];
"1003226" -> "1003222"  [label="AST: "];
"1003222" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003203" -> "1003222"  [label="DDG: f->blocksize_1"];
"1003222" -> "1003282"  [label="DDG: f->blocksize_1"];
"1003203" -> "1003201"  [label="AST: "];
"1003203" -> "1003206"  [label="CFG: "];
"1003204" -> "1003203"  [label="AST: "];
"1003206" -> "1003203"  [label="AST: "];
"1003201" -> "1003203"  [label="CFG: "];
"1003203" -> "1003201"  [label="DDG: f->blocksize_1"];
"1000290" -> "1003203"  [label="DDG: f->blocksize_1"];
"1003282" -> "1003203"  [label="DDG: f->blocksize_1"];
"1000290" -> "1000270"  [label="AST: "];
"1000290" -> "1000294"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="AST: "];
"1000300" -> "1000290"  [label="CFG: "];
"1000290" -> "1003546"  [label="DDG: f->blocksize_1"];
"1000290" -> "1003546"  [label="DDG: 1 << log1"];
"1000294" -> "1000290"  [label="DDG: 1"];
"1000294" -> "1000290"  [label="DDG: log1"];
"1000290" -> "1003311"  [label="DDG: f->blocksize_1"];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000294" -> "1003546"  [label="DDG: log1"];
"1000278" -> "1000294"  [label="DDG: log1"];
"1000294" -> "1000311"  [label="DDG: log1"];
"1000278" -> "1000270"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000285" -> "1000278"  [label="CFG: "];
"1000278" -> "1003546"  [label="DDG: x >> 4"];
"1000280" -> "1000278"  [label="DDG: x"];
"1000280" -> "1000278"  [label="DDG: 4"];
"1000280" -> "1000282"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000280" -> "1003546"  [label="DDG: x"];
"1000275" -> "1000280"  [label="DDG: x"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1000273"  [label="DDG: x"];
"1000275" -> "1000273"  [label="DDG: 15"];
"1000266" -> "1000275"  [label="DDG: x"];
"1000266" -> "1000109"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1003546"  [label="DDG: get8(f)"];
"1000268" -> "1000266"  [label="DDG: f"];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000264" -> "1000268"  [label="DDG: f"];
"1000108" -> "1000268"  [label="DDG: f"];
"1000268" -> "1000306"  [label="DDG: f"];
"1000268" -> "1000318"  [label="DDG: f"];
"1000268" -> "1000326"  [label="DDG: f"];
"1000268" -> "1000331"  [label="DDG: f"];
"1000264" -> "1000109"  [label="AST: "];
"1000264" -> "1000265"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000267" -> "1000264"  [label="CFG: "];
"1000264" -> "1003546"  [label="DDG: get32(f)"];
"1000262" -> "1000264"  [label="DDG: f"];
"1000108" -> "1000264"  [label="DDG: f"];
"1000262" -> "1000109"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="CFG: "];
"1000260" -> "1000262"  [label="DDG: f"];
"1000108" -> "1000262"  [label="DDG: f"];
"1000260" -> "1000109"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000263" -> "1000260"  [label="CFG: "];
"1000249" -> "1000260"  [label="DDG: f"];
"1000108" -> "1000260"  [label="DDG: f"];
"1000249" -> "1000245"  [label="AST: "];
"1000249" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000249" -> "1000245"  [label="DDG: f"];
"1000224" -> "1000249"  [label="DDG: f"];
"1000108" -> "1000249"  [label="DDG: f"];
"1000249" -> "1000257"  [label="DDG: f"];
"1000224" -> "1000220"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000224" -> "1000220"  [label="DDG: f"];
"1000213" -> "1000224"  [label="DDG: f"];
"1000108" -> "1000224"  [label="DDG: f"];
"1000224" -> "1000232"  [label="DDG: f"];
"1000224" -> "1000242"  [label="DDG: f"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="DDG: f"];
"1000195" -> "1000213"  [label="DDG: f"];
"1000108" -> "1000213"  [label="DDG: f"];
"1000213" -> "1000217"  [label="DDG: f"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000198"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000198" -> "1000195"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1003546"  [label="DDG: header"];
"1000195" -> "1000194"  [label="DDG: f"];
"1000195" -> "1000194"  [label="DDG: header"];
"1000195" -> "1000194"  [label="DDG: 6"];
"1000186" -> "1000195"  [label="DDG: f"];
"1000108" -> "1000195"  [label="DDG: f"];
"1000195" -> "1000200"  [label="DDG: f"];
"1000195" -> "1000205"  [label="DDG: header"];
"1000195" -> "1000208"  [label="DDG: f"];
"1000186" -> "1000185"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="DDG: f"];
"1000127" -> "1000186"  [label="DDG: f"];
"1000108" -> "1000186"  [label="DDG: f"];
"1000186" -> "1000190"  [label="DDG: f"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1003546"  [label="DDG: f"];
"1000127" -> "1000126"  [label="DDG: f"];
"1000108" -> "1000127"  [label="DDG: f"];
"1000127" -> "1000139"  [label="DDG: f"];
"1000127" -> "1000149"  [label="DDG: f"];
"1000127" -> "1000159"  [label="DDG: f"];
"1000127" -> "1000169"  [label="DDG: f"];
"1000127" -> "1000181"  [label="DDG: f"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1003546"  [label="DDG: f"];
"1000108" -> "1000139"  [label="DDG: f"];
"1000108" -> "1000149"  [label="DDG: f"];
"1000108" -> "1000159"  [label="DDG: f"];
"1000108" -> "1000169"  [label="DDG: f"];
"1000108" -> "1000181"  [label="DDG: f"];
"1000108" -> "1000190"  [label="DDG: f"];
"1000108" -> "1000200"  [label="DDG: f"];
"1000108" -> "1000208"  [label="DDG: f"];
"1000108" -> "1000217"  [label="DDG: f"];
"1000108" -> "1000232"  [label="DDG: f"];
"1000108" -> "1000242"  [label="DDG: f"];
"1000108" -> "1000257"  [label="DDG: f"];
"1000108" -> "1000306"  [label="DDG: f"];
"1000108" -> "1000318"  [label="DDG: f"];
"1000108" -> "1000326"  [label="DDG: f"];
"1000108" -> "1000331"  [label="DDG: f"];
"1000108" -> "1000339"  [label="DDG: f"];
"1000108" -> "1000344"  [label="DDG: f"];
"1000108" -> "1000350"  [label="DDG: f"];
"1000108" -> "1000358"  [label="DDG: f"];
"1000108" -> "1000360"  [label="DDG: f"];
"1000108" -> "1000371"  [label="DDG: f"];
"1000108" -> "1000376"  [label="DDG: f"];
"1000108" -> "1000381"  [label="DDG: f"];
"1000108" -> "1000401"  [label="DDG: f"];
"1000108" -> "1000405"  [label="DDG: f"];
"1000108" -> "1000421"  [label="DDG: f"];
"1000108" -> "1000428"  [label="DDG: f"];
"1000108" -> "1000436"  [label="DDG: f"];
"1000108" -> "1000446"  [label="DDG: f"];
"1000108" -> "1000464"  [label="DDG: f"];
"1000108" -> "1000509"  [label="DDG: f"];
"1000108" -> "1000513"  [label="DDG: f"];
"1000108" -> "1000521"  [label="DDG: f"];
"1000108" -> "1000526"  [label="DDG: f"];
"1000108" -> "1000534"  [label="DDG: f"];
"1000108" -> "1000539"  [label="DDG: f"];
"1000108" -> "1000547"  [label="DDG: f"];
"1000108" -> "1000552"  [label="DDG: f"];
"1000108" -> "1000561"  [label="DDG: f"];
"1000108" -> "1000568"  [label="DDG: f"];
"1000108" -> "1000573"  [label="DDG: f"];
"1000108" -> "1000582"  [label="DDG: f"];
"1000108" -> "1000593"  [label="DDG: f"];
"1000108" -> "1000603"  [label="DDG: f"];
"1000108" -> "1000619"  [label="DDG: f"];
"1000108" -> "1000630"  [label="DDG: f"];
"1000108" -> "1000644"  [label="DDG: f"];
"1000108" -> "1000653"  [label="DDG: f"];
"1000108" -> "1000667"  [label="DDG: f"];
"1000108" -> "1000689"  [label="DDG: f"];
"1000108" -> "1000705"  [label="DDG: f"];
"1000108" -> "1000740"  [label="DDG: f"];
"1000108" -> "1000752"  [label="DDG: f"];
"1000108" -> "1000765"  [label="DDG: f"];
"1000108" -> "1000811"  [label="DDG: f"];
"1000108" -> "1000823"  [label="DDG: f"];
"1000108" -> "1000834"  [label="DDG: f"];
"1000108" -> "1000896"  [label="DDG: f"];
"1000108" -> "1000910"  [label="DDG: f"];
"1000108" -> "1000928"  [label="DDG: f"];
"1000108" -> "1000945"  [label="DDG: f"];
"1000108" -> "1000956"  [label="DDG: f"];
"1000108" -> "1000965"  [label="DDG: f"];
"1000108" -> "1000982"  [label="DDG: f"];
"1000108" -> "1000989"  [label="DDG: f"];
"1000108" -> "1001002"  [label="DDG: f"];
"1000108" -> "1001049"  [label="DDG: f"];
"1000108" -> "1001054"  [label="DDG: f"];
"1000108" -> "1001068"  [label="DDG: f"];
"1000108" -> "1001088"  [label="DDG: f"];
"1000108" -> "1001097"  [label="DDG: f"];
"1000108" -> "1001117"  [label="DDG: f"];
"1000108" -> "1001142"  [label="DDG: f"];
"1000108" -> "1001152"  [label="DDG: f"];
"1000108" -> "1001166"  [label="DDG: f"];
"1000108" -> "1001179"  [label="DDG: f"];
"1000108" -> "1001185"  [label="DDG: f"];
"1000108" -> "1001195"  [label="DDG: f"];
"1000108" -> "1001211"  [label="DDG: f"];
"1000108" -> "1001219"  [label="DDG: f"];
"1000108" -> "1001227"  [label="DDG: f"];
"1000108" -> "1001235"  [label="DDG: f"];
"1000108" -> "1001276"  [label="DDG: f"];
"1000108" -> "1001283"  [label="DDG: f"];
"1000108" -> "1001298"  [label="DDG: f"];
"1000108" -> "1001318"  [label="DDG: f"];
"1000108" -> "1001328"  [label="DDG: f"];
"1000108" -> "1001340"  [label="DDG: f"];
"1000108" -> "1001382"  [label="DDG: f"];
"1000108" -> "1001405"  [label="DDG: f"];
"1000108" -> "1001428"  [label="DDG: f"];
"1000108" -> "1001440"  [label="DDG: f"];
"1000108" -> "1001561"  [label="DDG: f"];
"1000108" -> "1001573"  [label="DDG: f"];
"1000108" -> "1001592"  [label="DDG: f"];
"1000108" -> "1001600"  [label="DDG: f"];
"1000108" -> "1001619"  [label="DDG: f"];
"1000108" -> "1001631"  [label="DDG: f"];
"1000108" -> "1001679"  [label="DDG: f"];
"1000108" -> "1001690"  [label="DDG: f"];
"1000108" -> "1001692"  [label="DDG: f"];
"1000108" -> "1001697"  [label="DDG: f"];
"1000108" -> "1001714"  [label="DDG: f"];
"1000108" -> "1001722"  [label="DDG: f"];
"1000108" -> "1001730"  [label="DDG: f"];
"1000108" -> "1001740"  [label="DDG: f"];
"1000108" -> "1001758"  [label="DDG: f"];
"1000108" -> "1001779"  [label="DDG: f"];
"1000108" -> "1001791"  [label="DDG: f"];
"1000108" -> "1001818"  [label="DDG: f"];
"1000108" -> "1001825"  [label="DDG: f"];
"1000108" -> "1001832"  [label="DDG: f"];
"1000108" -> "1001839"  [label="DDG: f"];
"1000108" -> "1001846"  [label="DDG: f"];
"1000108" -> "1001854"  [label="DDG: f"];
"1000108" -> "1001875"  [label="DDG: f"];
"1000108" -> "1001879"  [label="DDG: f"];
"1000108" -> "1001905"  [label="DDG: f"];
"1000108" -> "1001926"  [label="DDG: f"];
"1000108" -> "1001961"  [label="DDG: f"];
"1000108" -> "1001971"  [label="DDG: f"];
"1000108" -> "1001987"  [label="DDG: f"];
"1000108" -> "1002001"  [label="DDG: f"];
"1000108" -> "1002029"  [label="DDG: f"];
"1000108" -> "1002046"  [label="DDG: f"];
"1000108" -> "1002054"  [label="DDG: f"];
"1000108" -> "1002062"  [label="DDG: f"];
"1000108" -> "1002130"  [label="DDG: f"];
"1000108" -> "1002260"  [label="DDG: f"];
"1000108" -> "1002270"  [label="DDG: f"];
"1000108" -> "1002289"  [label="DDG: f"];
"1000108" -> "1002334"  [label="DDG: f"];
"1000108" -> "1002346"  [label="DDG: f"];
"1000108" -> "1002353"  [label="DDG: f"];
"1000108" -> "1002360"  [label="DDG: f"];
"1000108" -> "1002372"  [label="DDG: f"];
"1000108" -> "1002380"  [label="DDG: f"];
"1000108" -> "1002389"  [label="DDG: f"];
"1000108" -> "1002397"  [label="DDG: f"];
"1000108" -> "1002409"  [label="DDG: f"];
"1000108" -> "1002431"  [label="DDG: f"];
"1000108" -> "1002435"  [label="DDG: f"];
"1000108" -> "1002440"  [label="DDG: f"];
"1000108" -> "1002452"  [label="DDG: f"];
"1000108" -> "1002471"  [label="DDG: f"];
"1000108" -> "1002513"  [label="DDG: f"];
"1000108" -> "1002529"  [label="DDG: f"];
"1000108" -> "1002550"  [label="DDG: f"];
"1000108" -> "1002573"  [label="DDG: f"];
"1000108" -> "1002638"  [label="DDG: f"];
"1000108" -> "1002659"  [label="DDG: f"];
"1000108" -> "1002697"  [label="DDG: f"];
"1000108" -> "1002707"  [label="DDG: f"];
"1000108" -> "1002725"  [label="DDG: f"];
"1000108" -> "1002765"  [label="DDG: f"];
"1000108" -> "1002773"  [label="DDG: f"];
"1000108" -> "1002782"  [label="DDG: f"];
"1000108" -> "1002800"  [label="DDG: f"];
"1000108" -> "1002804"  [label="DDG: f"];
"1000108" -> "1002812"  [label="DDG: f"];
"1000108" -> "1002834"  [label="DDG: f"];
"1000108" -> "1002843"  [label="DDG: f"];
"1000108" -> "1002867"  [label="DDG: f"];
"1000108" -> "1002883"  [label="DDG: f"];
"1000108" -> "1002904"  [label="DDG: f"];
"1000108" -> "1002920"  [label="DDG: f"];
"1000108" -> "1002940"  [label="DDG: f"];
"1000108" -> "1002950"  [label="DDG: f"];
"1000108" -> "1002954"  [label="DDG: f"];
"1000108" -> "1002984"  [label="DDG: f"];
"1000108" -> "1003000"  [label="DDG: f"];
"1000108" -> "1003036"  [label="DDG: f"];
"1000108" -> "1003045"  [label="DDG: f"];
"1000108" -> "1003054"  [label="DDG: f"];
"1000108" -> "1003068"  [label="DDG: f"];
"1000108" -> "1003082"  [label="DDG: f"];
"1000108" -> "1003090"  [label="DDG: f"];
"1000108" -> "1003118"  [label="DDG: f"];
"1000108" -> "1003125"  [label="DDG: f"];
"1000108" -> "1003132"  [label="DDG: f"];
"1000108" -> "1003139"  [label="DDG: f"];
"1000108" -> "1003149"  [label="DDG: f"];
"1000108" -> "1003159"  [label="DDG: f"];
"1000108" -> "1003171"  [label="DDG: f"];
"1000108" -> "1003174"  [label="DDG: f"];
"1000108" -> "1003201"  [label="DDG: f"];
"1000108" -> "1003217"  [label="DDG: f"];
"1000108" -> "1003235"  [label="DDG: f"];
"1000108" -> "1003266"  [label="DDG: f"];
"1000108" -> "1003277"  [label="DDG: f"];
"1000108" -> "1003296"  [label="DDG: f"];
"1000108" -> "1003301"  [label="DDG: f"];
"1000108" -> "1003311"  [label="DDG: f"];
"1000108" -> "1003535"  [label="DDG: f"];
"1000108" -> "1003542"  [label="DDG: f"];
"1003282" -> "1003279"  [label="AST: "];
"1003282" -> "1003286"  [label="CFG: "];
"1003283" -> "1003282"  [label="AST: "];
"1003286" -> "1003282"  [label="AST: "];
"1003279" -> "1003282"  [label="CFG: "];
"1003282" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003282" -> "1003279"  [label="DDG: f->blocksize_1"];
"1003282" -> "1003279"  [label="DDG: 2"];
"1003282" -> "1003311"  [label="DDG: f->blocksize_1"];
"1003217" -> "1003215"  [label="AST: "];
"1003218" -> "1003217"  [label="AST: "];
"1003215" -> "1003217"  [label="CFG: "];
"1003217" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003217" -> "1003215"  [label="DDG: f"];
"1003217" -> "1003215"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003201" -> "1003217"  [label="DDG: f"];
"1003217" -> "1003235"  [label="DDG: f"];
"1003215" -> "1003209"  [label="AST: "];
"1003216" -> "1003215"  [label="AST: "];
"1003209" -> "1003215"  [label="CFG: "];
"1003215" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003215" -> "1003209"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003209" -> "1003192"  [label="AST: "];
"1003210" -> "1003209"  [label="AST: "];
"1003230" -> "1003209"  [label="CFG: "];
"1003209" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003209" -> "1003546"  [label="DDG: f->previous_window[i]"];
"1003209" -> "1003251"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003250"  [label="AST: "];
"1003251" -> "1003257"  [label="CFG: "];
"1003252" -> "1003251"  [label="AST: "];
"1003257" -> "1003251"  [label="AST: "];
"1003261" -> "1003251"  [label="CFG: "];
"1003250" -> "1003251"  [label="CFG: "];
"1003251" -> "1003546"  [label="DDG: NULL"];
"1003251" -> "1003546"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003250"  [label="DDG: f->previous_window[i]"];
"1003251" -> "1003250"  [label="DDG: NULL"];
"1003243" -> "1003251"  [label="DDG: NULL"];
"1003251" -> "1003258"  [label="DDG: NULL"];
"1003251" -> "1003288"  [label="DDG: NULL"];
"1003250" -> "1003242"  [label="AST: "];
"1003250" -> "1003258"  [label="CFG: "];
"1003258" -> "1003250"  [label="AST: "];
"1003242" -> "1003250"  [label="CFG: "];
"1003250" -> "1003546"  [label="DDG: f->previous_window[i] == NULL"];
"1003250" -> "1003546"  [label="DDG: f->finalY[i] == NULL"];
"1003250" -> "1003242"  [label="DDG: f->previous_window[i] == NULL"];
"1003250" -> "1003242"  [label="DDG: f->finalY[i] == NULL"];
"1003258" -> "1003250"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003250"  [label="DDG: NULL"];
"1003242" -> "1003241"  [label="AST: "];
"1003242" -> "1003243"  [label="CFG: "];
"1003243" -> "1003242"  [label="AST: "];
"1003267" -> "1003242"  [label="CFG: "];
"1003272" -> "1003242"  [label="CFG: "];
"1003242" -> "1003546"  [label="DDG: f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003242" -> "1003546"  [label="DDG: f->channel_buffers[i] == NULL"];
"1003242" -> "1003546"  [label="DDG: f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003243" -> "1003242"  [label="DDG: f->channel_buffers[i]"];
"1003243" -> "1003242"  [label="DDG: NULL"];
"1003258" -> "1003264"  [label="CFG: "];
"1003259" -> "1003258"  [label="AST: "];
"1003264" -> "1003258"  [label="AST: "];
"1003258" -> "1003546"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003546"  [label="DDG: NULL"];
"1003227" -> "1003258"  [label="DDG: f->finalY[i]"];
"1003258" -> "1003288"  [label="DDG: NULL"];
"1003288" -> "1003287"  [label="AST: "];
"1003288" -> "1003294"  [label="CFG: "];
"1003289" -> "1003288"  [label="AST: "];
"1003294" -> "1003288"  [label="AST: "];
"1003297" -> "1003288"  [label="CFG: "];
"1003191" -> "1003288"  [label="CFG: "];
"1003288" -> "1003546"  [label="DDG: f->floor_buffers[i] == NULL"];
"1003288" -> "1003546"  [label="DDG: NULL"];
"1003288" -> "1003546"  [label="DDG: f->floor_buffers[i]"];
"1003288" -> "1003243"  [label="DDG: NULL"];
"1003269" -> "1003288"  [label="DDG: f->floor_buffers[i]"];
"1003243" -> "1003288"  [label="DDG: NULL"];
"1003243" -> "1003249"  [label="CFG: "];
"1003244" -> "1003243"  [label="AST: "];
"1003249" -> "1003243"  [label="AST: "];
"1003254" -> "1003243"  [label="CFG: "];
"1003243" -> "1003546"  [label="DDG: NULL"];
"1003243" -> "1003546"  [label="DDG: f->channel_buffers[i]"];
"1003193" -> "1003243"  [label="DDG: f->channel_buffers[i]"];
"1002719" -> "1003243"  [label="DDG: NULL"];
"1002794" -> "1003243"  [label="DDG: NULL"];
"1003235" -> "1003233"  [label="AST: "];
"1003235" -> "1003237"  [label="CFG: "];
"1003236" -> "1003235"  [label="AST: "];
"1003237" -> "1003235"  [label="AST: "];
"1003233" -> "1003235"  [label="CFG: "];
"1003235" -> "1003546"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003235" -> "1003233"  [label="DDG: f"];
"1003235" -> "1003233"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003237" -> "1003235"  [label="DDG: longest_floorlist"];
"1003235" -> "1003266"  [label="DDG: f"];
"1003235" -> "1003277"  [label="DDG: f"];
"1003233" -> "1003227"  [label="AST: "];
"1003234" -> "1003233"  [label="AST: "];
"1003227" -> "1003233"  [label="CFG: "];
"1003233" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003233" -> "1003227"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003227" -> "1003192"  [label="AST: "];
"1003228" -> "1003227"  [label="AST: "];
"1003246" -> "1003227"  [label="CFG: "];
"1003227" -> "1003546"  [label="DDG: f->finalY[i]"];
"1003227" -> "1003546"  [label="DDG: (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003266" -> "1003265"  [label="AST: "];
"1003266" -> "1003268"  [label="CFG: "];
"1003267" -> "1003266"  [label="AST: "];
"1003268" -> "1003266"  [label="AST: "];
"1003265" -> "1003266"  [label="CFG: "];
"1003266" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003266" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003266" -> "1003546"  [label="DDG: f"];
"1003266" -> "1003265"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003265" -> "1003241"  [label="AST: "];
"1003546" -> "1003265"  [label="CFG: "];
"1003265" -> "1003546"  [label="DDG: <RET>"];
"1003277" -> "1003275"  [label="AST: "];
"1003277" -> "1003279"  [label="CFG: "];
"1003278" -> "1003277"  [label="AST: "];
"1003279" -> "1003277"  [label="AST: "];
"1003275" -> "1003277"  [label="CFG: "];
"1003277" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003277" -> "1003201"  [label="DDG: f"];
"1003277" -> "1003275"  [label="DDG: f"];
"1003277" -> "1003275"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003279" -> "1003277"  [label="DDG: f->blocksize_1/2"];
"1003277" -> "1003296"  [label="DDG: f"];
"1003277" -> "1003301"  [label="DDG: f"];
"1003201" -> "1003199"  [label="AST: "];
"1003202" -> "1003201"  [label="AST: "];
"1003199" -> "1003201"  [label="CFG: "];
"1003201" -> "1003546"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003201" -> "1003199"  [label="DDG: f"];
"1003201" -> "1003199"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003174" -> "1003201"  [label="DDG: f"];
"1003199" -> "1003193"  [label="AST: "];
"1003200" -> "1003199"  [label="AST: "];
"1003193" -> "1003199"  [label="CFG: "];
"1003199" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003199" -> "1003193"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003193" -> "1003192"  [label="AST: "];
"1003194" -> "1003193"  [label="AST: "];
"1003212" -> "1003193"  [label="CFG: "];
"1003193" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003275" -> "1003269"  [label="AST: "];
"1003276" -> "1003275"  [label="AST: "];
"1003269" -> "1003275"  [label="CFG: "];
"1003275" -> "1003546"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003275" -> "1003269"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003269" -> "1003192"  [label="AST: "];
"1003270" -> "1003269"  [label="AST: "];
"1003291" -> "1003269"  [label="CFG: "];
"1003269" -> "1003546"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003296" -> "1003295"  [label="AST: "];
"1003296" -> "1003298"  [label="CFG: "];
"1003297" -> "1003296"  [label="AST: "];
"1003298" -> "1003296"  [label="AST: "];
"1003295" -> "1003296"  [label="CFG: "];
"1003296" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003296" -> "1003546"  [label="DDG: f"];
"1003296" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003296" -> "1003295"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003295" -> "1003287"  [label="AST: "];
"1003546" -> "1003295"  [label="CFG: "];
"1003295" -> "1003546"  [label="DDG: <RET>"];
"1003301" -> "1003300"  [label="AST: "];
"1003301" -> "1003304"  [label="CFG: "];
"1003302" -> "1003301"  [label="AST: "];
"1003303" -> "1003301"  [label="AST: "];
"1003304" -> "1003301"  [label="AST: "];
"1003300" -> "1003301"  [label="CFG: "];
"1003301" -> "1003546"  [label="DDG: f->blocksize_0"];
"1003301" -> "1003546"  [label="DDG: f"];
"1003301" -> "1003300"  [label="DDG: f"];
"1003301" -> "1003300"  [label="DDG: 0"];
"1003301" -> "1003300"  [label="DDG: f->blocksize_0"];
"1003174" -> "1003301"  [label="DDG: f"];
"1000283" -> "1003301"  [label="DDG: f->blocksize_0"];
"1003301" -> "1003311"  [label="DDG: f"];
"1003301" -> "1003319"  [label="DDG: f->blocksize_0"];
"1003300" -> "1003299"  [label="AST: "];
"1003308" -> "1003300"  [label="CFG: "];
"1003312" -> "1003300"  [label="CFG: "];
"1003300" -> "1003546"  [label="DDG: init_blocksize(f, 0, f->blocksize_0)"];
"1003300" -> "1003546"  [label="DDG: !init_blocksize(f, 0, f->blocksize_0)"];
"1003311" -> "1003310"  [label="AST: "];
"1003311" -> "1003314"  [label="CFG: "];
"1003312" -> "1003311"  [label="AST: "];
"1003313" -> "1003311"  [label="AST: "];
"1003314" -> "1003311"  [label="AST: "];
"1003310" -> "1003311"  [label="CFG: "];
"1003311" -> "1003546"  [label="DDG: f"];
"1003311" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003310"  [label="DDG: f"];
"1003311" -> "1003310"  [label="DDG: 1"];
"1003311" -> "1003310"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003328"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003377"  [label="DDG: f->blocksize_1"];
"1003311" -> "1003535"  [label="DDG: f"];
"1003311" -> "1003542"  [label="DDG: f"];
"1003310" -> "1003309"  [label="AST: "];
"1003318" -> "1003310"  [label="CFG: "];
"1003322" -> "1003310"  [label="CFG: "];
"1003310" -> "1003546"  [label="DDG: !init_blocksize(f, 1, f->blocksize_1)"];
"1003310" -> "1003546"  [label="DDG: init_blocksize(f, 1, f->blocksize_1)"];
"1003328" -> "1000109"  [label="AST: "];
"1003328" -> "1003334"  [label="CFG: "];
"1003329" -> "1003328"  [label="AST: "];
"1003334" -> "1003328"  [label="AST: "];
"1003341" -> "1003328"  [label="CFG: "];
"1003328" -> "1003546"  [label="DDG: f->blocksize[1]"];
"1003377" -> "1003376"  [label="AST: "];
"1003377" -> "1003381"  [label="CFG: "];
"1003378" -> "1003377"  [label="AST: "];
"1003381" -> "1003377"  [label="AST: "];
"1003383" -> "1003377"  [label="CFG: "];
"1003377" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003377" -> "1003376"  [label="DDG: f->blocksize_1"];
"1003377" -> "1003413"  [label="DDG: f->blocksize_1"];
"1003376" -> "1003374"  [label="AST: "];
"1003376" -> "1003383"  [label="CFG: "];
"1003383" -> "1003376"  [label="AST: "];
"1003374" -> "1003376"  [label="CFG: "];
"1003376" -> "1003546"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003376" -> "1003374"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003376" -> "1003374"  [label="DDG: 1"];
"1003374" -> "1003372"  [label="AST: "];
"1003375" -> "1003374"  [label="AST: "];
"1003388" -> "1003374"  [label="CFG: "];
"1003374" -> "1003546"  [label="DDG: f->blocksize_1 * sizeof(float) >> 1"];
"1003374" -> "1003484"  [label="DDG: imdct_mem"];
"1003484" -> "1003483"  [label="AST: "];
"1003484" -> "1003486"  [label="CFG: "];
"1003485" -> "1003484"  [label="AST: "];
"1003486" -> "1003484"  [label="AST: "];
"1003491" -> "1003484"  [label="CFG: "];
"1003496" -> "1003484"  [label="CFG: "];
"1003484" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003546"  [label="DDG: imdct_mem"];
"1003484" -> "1003546"  [label="DDG: imdct_mem > f->temp_memory_required"];
"1003478" -> "1003484"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003489"  [label="DDG: imdct_mem"];
"1003484" -> "1003517"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003518"  [label="DDG: f->temp_memory_required"];
"1003484" -> "1003522"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003483"  [label="AST: "];
"1003489" -> "1003493"  [label="CFG: "];
"1003490" -> "1003489"  [label="AST: "];
"1003493" -> "1003489"  [label="AST: "];
"1003496" -> "1003489"  [label="CFG: "];
"1003489" -> "1003546"  [label="DDG: imdct_mem"];
"1003489" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003517"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003518"  [label="DDG: f->temp_memory_required"];
"1003489" -> "1003522"  [label="DDG: f->temp_memory_required"];
"1003517" -> "1003516"  [label="AST: "];
"1003517" -> "1003529"  [label="CFG: "];
"1003518" -> "1003517"  [label="AST: "];
"1003529" -> "1003517"  [label="AST: "];
"1003536" -> "1003517"  [label="CFG: "];
"1003540" -> "1003517"  [label="CFG: "];
"1003517" -> "1003546"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset"];
"1003517" -> "1003546"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required"];
"1003517" -> "1003546"  [label="DDG: (unsigned) f->temp_offset"];
"1003529" -> "1003517"  [label="DDG: f->temp_offset"];
"1003518" -> "1003522"  [label="CFG: "];
"1003519" -> "1003518"  [label="AST: "];
"1003522" -> "1003518"  [label="AST: "];
"1003530" -> "1003518"  [label="CFG: "];
"1003518" -> "1003546"  [label="DDG: sizeof(*f) + f->temp_memory_required"];
"1003518" -> "1003546"  [label="DDG: f->setup_offset"];
"1003522" -> "1003526"  [label="CFG: "];
"1003523" -> "1003522"  [label="AST: "];
"1003526" -> "1003522"  [label="AST: "];
"1003522" -> "1003546"  [label="DDG: f->temp_memory_required"];
"1003413" -> "1003411"  [label="AST: "];
"1003413" -> "1003417"  [label="CFG: "];
"1003414" -> "1003413"  [label="AST: "];
"1003417" -> "1003413"  [label="AST: "];
"1003411" -> "1003413"  [label="CFG: "];
"1003413" -> "1003546"  [label="DDG: f->blocksize_1"];
"1003413" -> "1003411"  [label="DDG: f->blocksize_1"];
"1003413" -> "1003411"  [label="DDG: 2"];
"1003411" -> "1003401"  [label="AST: "];
"1003412" -> "1003411"  [label="AST: "];
"1003420" -> "1003411"  [label="CFG: "];
"1003411" -> "1003546"  [label="DDG: f->blocksize_1 / 2"];
"1003411" -> "1003422"  [label="DDG: actual_size"];
"1003422" -> "1003421"  [label="AST: "];
"1003422" -> "1003426"  [label="CFG: "];
"1003423" -> "1003422"  [label="AST: "];
"1003426" -> "1003422"  [label="AST: "];
"1003428" -> "1003422"  [label="CFG: "];
"1003430" -> "1003422"  [label="CFG: "];
"1003422" -> "1003419"  [label="DDG: r->begin"];
"1003422" -> "1003419"  [label="DDG: actual_size"];
"1002364" -> "1003422"  [label="DDG: r->begin"];
"1003422" -> "1003421"  [label="DDG: r->begin"];
"1003422" -> "1003421"  [label="DDG: actual_size"];
"1003422" -> "1003435"  [label="DDG: actual_size"];
"1003419" -> "1003401"  [label="AST: "];
"1003419" -> "1003421"  [label="CFG: "];
"1003420" -> "1003419"  [label="AST: "];
"1003421" -> "1003419"  [label="AST: "];
"1003433" -> "1003419"  [label="CFG: "];
"1003419" -> "1003546"  [label="DDG: r->begin < actual_size ? r->begin : actual_size"];
"1003419" -> "1003447"  [label="DDG: limit_r_begin"];
"1003447" -> "1003445"  [label="AST: "];
"1003447" -> "1003449"  [label="CFG: "];
"1003448" -> "1003447"  [label="AST: "];
"1003449" -> "1003447"  [label="AST: "];
"1003445" -> "1003447"  [label="CFG: "];
"1003447" -> "1003546"  [label="DDG: limit_r_begin"];
"1003447" -> "1003546"  [label="DDG: limit_r_end"];
"1003447" -> "1003445"  [label="DDG: limit_r_end"];
"1003447" -> "1003445"  [label="DDG: limit_r_begin"];
"1003432" -> "1003447"  [label="DDG: limit_r_end"];
"1003445" -> "1003401"  [label="AST: "];
"1003446" -> "1003445"  [label="AST: "];
"1003452" -> "1003445"  [label="CFG: "];
"1003445" -> "1003546"  [label="DDG: limit_r_end - limit_r_begin"];
"1003445" -> "1003453"  [label="DDG: n_read"];
"1003453" -> "1003451"  [label="AST: "];
"1003453" -> "1003455"  [label="CFG: "];
"1003454" -> "1003453"  [label="AST: "];
"1003455" -> "1003453"  [label="AST: "];
"1003451" -> "1003453"  [label="CFG: "];
"1003453" -> "1003546"  [label="DDG: n_read"];
"1003453" -> "1003546"  [label="DDG: r->part_size"];
"1003453" -> "1003451"  [label="DDG: n_read"];
"1003453" -> "1003451"  [label="DDG: r->part_size"];
"1002375" -> "1003453"  [label="DDG: r->part_size"];
"1003451" -> "1003401"  [label="AST: "];
"1003452" -> "1003451"  [label="AST: "];
"1003460" -> "1003451"  [label="CFG: "];
"1003451" -> "1003546"  [label="DDG: n_read / r->part_size"];
"1003451" -> "1003459"  [label="DDG: part_read"];
"1003459" -> "1003458"  [label="AST: "];
"1003459" -> "1003461"  [label="CFG: "];
"1003460" -> "1003459"  [label="AST: "];
"1003461" -> "1003459"  [label="AST: "];
"1003463" -> "1003459"  [label="CFG: "];
"1003400" -> "1003459"  [label="CFG: "];
"1003459" -> "1003546"  [label="DDG: part_read"];
"1003459" -> "1003546"  [label="DDG: part_read > max_part_read"];
"1003462" -> "1003459"  [label="DDG: max_part_read"];
"1003387" -> "1003459"  [label="DDG: max_part_read"];
"1003459" -> "1003462"  [label="DDG: part_read"];
"1003459" -> "1003474"  [label="DDG: max_part_read"];
"1003462" -> "1003458"  [label="AST: "];
"1003462" -> "1003464"  [label="CFG: "];
"1003463" -> "1003462"  [label="AST: "];
"1003464" -> "1003462"  [label="AST: "];
"1003400" -> "1003462"  [label="CFG: "];
"1003462" -> "1003546"  [label="DDG: part_read"];
"1003462" -> "1003474"  [label="DDG: max_part_read"];
"1003474" -> "1003471"  [label="AST: "];
"1003474" -> "1003476"  [label="CFG: "];
"1003475" -> "1003474"  [label="AST: "];
"1003476" -> "1003474"  [label="AST: "];
"1003471" -> "1003474"  [label="CFG: "];
"1003474" -> "1003546"  [label="DDG: max_part_read"];
"1003474" -> "1003467"  [label="DDG: max_part_read"];
"1003474" -> "1003471"  [label="DDG: max_part_read"];
"1003387" -> "1003474"  [label="DDG: max_part_read"];
"1003467" -> "1003465"  [label="AST: "];
"1003467" -> "1003471"  [label="CFG: "];
"1003468" -> "1003467"  [label="AST: "];
"1003471" -> "1003467"  [label="AST: "];
"1003465" -> "1003467"  [label="CFG: "];
"1003467" -> "1003546"  [label="DDG: f->channels"];
"1003467" -> "1003546"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003467" -> "1003465"  [label="DDG: f->channels"];
"1003467" -> "1003465"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003185" -> "1003467"  [label="DDG: f->channels"];
"1003465" -> "1003372"  [label="AST: "];
"1003466" -> "1003465"  [label="AST: "];
"1003480" -> "1003465"  [label="CFG: "];
"1003465" -> "1003546"  [label="DDG: f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003465" -> "1003478"  [label="DDG: classify_mem"];
"1003478" -> "1003372"  [label="AST: "];
"1003478" -> "1003482"  [label="CFG: "];
"1003479" -> "1003478"  [label="AST: "];
"1003482" -> "1003478"  [label="AST: "];
"1003485" -> "1003478"  [label="CFG: "];
"1003478" -> "1003546"  [label="DDG: classify_mem"];
"1003472" -> "1003471"  [label="AST: "];
"1003471" -> "1003546"  [label="DDG: max_part_read * sizeof(uint8 *)"];
"1003421" -> "1003427"  [label="CFG: "];
"1003421" -> "1003430"  [label="CFG: "];
"1003427" -> "1003421"  [label="AST: "];
"1003430" -> "1003421"  [label="AST: "];
"1003421" -> "1003546"  [label="DDG: r->begin < actual_size"];
"1003421" -> "1003546"  [label="DDG: r->begin"];
"1003435" -> "1003434"  [label="AST: "];
"1003435" -> "1003439"  [label="CFG: "];
"1003436" -> "1003435"  [label="AST: "];
"1003439" -> "1003435"  [label="AST: "];
"1003441" -> "1003435"  [label="CFG: "];
"1003443" -> "1003435"  [label="CFG: "];
"1003435" -> "1003432"  [label="DDG: r->end"];
"1003435" -> "1003432"  [label="DDG: actual_size"];
"1002364" -> "1003435"  [label="DDG: r->end"];
"1003435" -> "1003434"  [label="DDG: r->end"];
"1003435" -> "1003434"  [label="DDG: actual_size"];
"1003432" -> "1003401"  [label="AST: "];
"1003432" -> "1003434"  [label="CFG: "];
"1003433" -> "1003432"  [label="AST: "];
"1003434" -> "1003432"  [label="AST: "];
"1003446" -> "1003432"  [label="CFG: "];
"1003432" -> "1003546"  [label="DDG: r->end   < actual_size ? r->end   : actual_size"];
"1003434" -> "1003440"  [label="CFG: "];
"1003434" -> "1003443"  [label="CFG: "];
"1003440" -> "1003434"  [label="AST: "];
"1003443" -> "1003434"  [label="AST: "];
"1003434" -> "1003546"  [label="DDG: r->end"];
"1003434" -> "1003546"  [label="DDG: r->end   < actual_size"];
"1003434" -> "1003546"  [label="DDG: actual_size"];
"1003535" -> "1003534"  [label="AST: "];
"1003535" -> "1003537"  [label="CFG: "];
"1003536" -> "1003535"  [label="AST: "];
"1003537" -> "1003535"  [label="AST: "];
"1003534" -> "1003535"  [label="CFG: "];
"1003535" -> "1003546"  [label="DDG: VORBIS_outofmem"];
"1003535" -> "1003546"  [label="DDG: f"];
"1003535" -> "1003546"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003535" -> "1003534"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003534" -> "1003516"  [label="AST: "];
"1003546" -> "1003534"  [label="CFG: "];
"1003534" -> "1003546"  [label="DDG: <RET>"];
"1003542" -> "1003538"  [label="AST: "];
"1003542" -> "1003543"  [label="CFG: "];
"1003543" -> "1003542"  [label="AST: "];
"1003538" -> "1003542"  [label="CFG: "];
"1003542" -> "1003546"  [label="DDG: f"];
"1003542" -> "1003538"  [label="DDG: f"];
"1003538" -> "1000109"  [label="AST: "];
"1003539" -> "1003538"  [label="AST: "];
"1003545" -> "1003538"  [label="CFG: "];
"1003538" -> "1003546"  [label="DDG: stb_vorbis_get_file_offset(f)"];
"1003538" -> "1003546"  [label="DDG: f->first_audio_page_offset"];
"1003319" -> "1000109"  [label="AST: "];
"1003319" -> "1003325"  [label="CFG: "];
"1003320" -> "1003319"  [label="AST: "];
"1003325" -> "1003319"  [label="AST: "];
"1003331" -> "1003319"  [label="CFG: "];
"1003319" -> "1003546"  [label="DDG: f->blocksize[0]"];
"1003319" -> "1003546"  [label="DDG: f->blocksize_0"];
}
