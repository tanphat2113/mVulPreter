digraph "0_ghostscript_241d91112771a6104de10b3948c3f350d6690c1d@pointer" {
"1000144" [label="(Call,gs_main_run_string(minst,\n            \"/BGPrint /GetDeviceParam .special_op \\n            {{ <</BeginPage {pop} /EndPage {pop pop //false } \\n              /BGPrint false /NumRenderingThreads 0>> setpagedevice} if} if \\n              serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse \\n              .systemvar exec\",\n            0 , &exit_code, &error_object))"];
"1000133" [label="(Call,gs_main_tempnames(minst))"];
"1000115" [label="(MethodParameterIn,gs_main_instance * minst)"];
"1000363" [label="(Call,gs_main_run_string(minst,\n        \"(%stdout) (w) file closefile (%stderr) (w) file closefile \\n        serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse .systemexec \\n          systemdict /savedinitialgstate .forceundef\",\n        0 , &exit_code, &error_object))"];
"1000384" [label="(Call,print_resource_usage(minst, &gs_imemory, \"Final\"))"];
"1000389" [label="(Call,dmprintf1(minst->heap, \"%% Exiting instance 0x%p\n\", minst))"];
"1000539" [label="(Call,gs_lib_finit(exit_status, code, minst->heap))"];
"1000545" [label="(Call,gs_free_object(minst->heap, minst->lib_path.container.value.refs, \"lib_path array\"))"];
"1000562" [label="(Return,return exit_status;)"];
"1000561" [label="(Identifier,dmem)"];
"1000365" [label="(Literal,\"(%stdout) (w) file closefile (%stderr) (w) file closefile \\n        serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse .systemexec \\n          systemdict /savedinitialgstate .forceundef\")"];
"1000116" [label="(MethodParameterIn,int exit_status)"];
"1000542" [label="(Call,minst->heap)"];
"1000268" [label="(Call,code < 0)"];
"1000385" [label="(Identifier,minst)"];
"1000558" [label="(Literal,\"lib_path array\")"];
"1000391" [label="(Identifier,minst)"];
"1000117" [label="(MethodParameterIn,int code)"];
"1000563" [label="(Identifier,exit_status)"];
"1000394" [label="(Identifier,minst)"];
"1000539" [label="(Call,gs_lib_finit(exit_status, code, minst->heap))"];
"1000145" [label="(Identifier,minst)"];
"1000179" [label="(Call,code < 0)"];
"1000303" [label="(Call,code < 0)"];
"1000547" [label="(Identifier,minst)"];
"1000545" [label="(Call,gs_free_object(minst->heap, minst->lib_path.container.value.refs, \"lib_path array\"))"];
"1000115" [label="(MethodParameterIn,gs_main_instance * minst)"];
"1000144" [label="(Call,gs_main_run_string(minst,\n            \"/BGPrint /GetDeviceParam .special_op \\n            {{ <</BeginPage {pop} /EndPage {pop pop //false } \\n              /BGPrint false /NumRenderingThreads 0>> setpagedevice} if} if \\n              serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse \\n              .systemvar exec\",\n            0 , &exit_code, &error_object))"];
"1000369" [label="(Call,&error_object)"];
"1000564" [label="(MethodReturn,RET)"];
"1000354" [label="(Call,exit_status == 0)"];
"1000133" [label="(Call,gs_main_tempnames(minst))"];
"1000118" [label="(Block,)"];
"1000363" [label="(Call,gs_main_run_string(minst,\n        \"(%stdout) (w) file closefile (%stderr) (w) file closefile \\n        serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse .systemexec \\n          systemdict /savedinitialgstate .forceundef\",\n        0 , &exit_code, &error_object))"];
"1000427" [label="(Call,code < 0)"];
"1000147" [label="(Literal,0)"];
"1000541" [label="(Identifier,code)"];
"1000388" [label="(Literal,\"Final\")"];
"1000398" [label="(Identifier,minst)"];
"1000150" [label="(Call,&error_object)"];
"1000131" [label="(Call,tempnames = gs_main_tempnames(minst))"];
"1000389" [label="(Call,dmprintf1(minst->heap, \"%% Exiting instance 0x%p\n\", minst))"];
"1000390" [label="(Call,minst->heap)"];
"1000540" [label="(Identifier,exit_status)"];
"1000383" [label="(Block,)"];
"1000367" [label="(Call,&exit_code)"];
"1000562" [label="(Return,return exit_status;)"];
"1000366" [label="(Literal,0)"];
"1000546" [label="(Call,minst->heap)"];
"1000344" [label="(Call,emprintf2(imemory, \"UNKNOWN ERROR %d closing %s device.\n\", code, dname))"];
"1000158" [label="(Block,)"];
"1000228" [label="(Call,code != gs_error_VMerror)"];
"1000360" [label="(Call,exit_status = code)"];
"1000336" [label="(Call,emprintf3(imemory, \"ERROR: %s (%d) on closing %s device.\n\", err_str, code, dname))"];
"1000364" [label="(Identifier,minst)"];
"1000134" [label="(Identifier,minst)"];
"1000384" [label="(Call,print_resource_usage(minst, &gs_imemory, \"Final\"))"];
"1000148" [label="(Call,&exit_code)"];
"1000155" [label="(Identifier,minst)"];
"1000393" [label="(Literal,\"%% Exiting instance 0x%p\n\")"];
"1000357" [label="(Call,exit_status == gs_error_Quit)"];
"1000143" [label="(Block,)"];
"1000160" [label="(Call,code = 0)"];
"1000386" [label="(Call,&gs_imemory)"];
"1000430" [label="(Call,emprintf1(mem_raw,\n                      \"ERROR %d while the final restore. See gs/psi/ierrors.h for code explanation.\n\",\n                      code))"];
"1000146" [label="(Literal,\"/BGPrint /GetDeviceParam .special_op \\n            {{ <</BeginPage {pop} /EndPage {pop pop //false } \\n              /BGPrint false /NumRenderingThreads 0>> setpagedevice} if} if \\n              serverdict /.jobsavelevel get 0 eq {/quit} {/stop} ifelse \\n              .systemvar exec\")"];
"1000373" [label="(Identifier,minst)"];
"1000549" [label="(Call,minst->lib_path.container.value.refs)"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000150"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000146" -> "1000144"  [label="AST: "];
"1000147" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000150" -> "1000144"  [label="AST: "];
"1000155" -> "1000144"  [label="CFG: "];
"1000144" -> "1000564"  [label="DDG: "];
"1000144" -> "1000564"  [label="DDG: "];
"1000144" -> "1000564"  [label="DDG: "];
"1000144" -> "1000564"  [label="DDG: "];
"1000133" -> "1000144"  [label="DDG: "];
"1000115" -> "1000144"  [label="DDG: "];
"1000144" -> "1000363"  [label="DDG: "];
"1000144" -> "1000363"  [label="DDG: "];
"1000144" -> "1000363"  [label="DDG: "];
"1000144" -> "1000384"  [label="DDG: "];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000133" -> "1000564"  [label="DDG: "];
"1000133" -> "1000131"  [label="DDG: "];
"1000115" -> "1000133"  [label="DDG: "];
"1000133" -> "1000363"  [label="DDG: "];
"1000133" -> "1000384"  [label="DDG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000564"  [label="DDG: "];
"1000115" -> "1000363"  [label="DDG: "];
"1000115" -> "1000384"  [label="DDG: "];
"1000115" -> "1000389"  [label="DDG: "];
"1000363" -> "1000158"  [label="AST: "];
"1000363" -> "1000369"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000367" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="AST: "];
"1000373" -> "1000363"  [label="CFG: "];
"1000363" -> "1000564"  [label="DDG: "];
"1000363" -> "1000564"  [label="DDG: "];
"1000363" -> "1000564"  [label="DDG: "];
"1000363" -> "1000564"  [label="DDG: "];
"1000363" -> "1000384"  [label="DDG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000384" -> "1000388"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000386" -> "1000384"  [label="AST: "];
"1000388" -> "1000384"  [label="AST: "];
"1000391" -> "1000384"  [label="CFG: "];
"1000384" -> "1000564"  [label="DDG: "];
"1000384" -> "1000564"  [label="DDG: "];
"1000384" -> "1000389"  [label="DDG: "];
"1000389" -> "1000383"  [label="AST: "];
"1000389" -> "1000394"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000393" -> "1000389"  [label="AST: "];
"1000394" -> "1000389"  [label="AST: "];
"1000398" -> "1000389"  [label="CFG: "];
"1000389" -> "1000564"  [label="DDG: "];
"1000389" -> "1000564"  [label="DDG: "];
"1000389" -> "1000539"  [label="DDG: "];
"1000539" -> "1000118"  [label="AST: "];
"1000539" -> "1000542"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000542" -> "1000539"  [label="AST: "];
"1000547" -> "1000539"  [label="CFG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000360" -> "1000539"  [label="DDG: "];
"1000357" -> "1000539"  [label="DDG: "];
"1000354" -> "1000539"  [label="DDG: "];
"1000116" -> "1000539"  [label="DDG: "];
"1000303" -> "1000539"  [label="DDG: "];
"1000268" -> "1000539"  [label="DDG: "];
"1000228" -> "1000539"  [label="DDG: "];
"1000430" -> "1000539"  [label="DDG: "];
"1000336" -> "1000539"  [label="DDG: "];
"1000160" -> "1000539"  [label="DDG: "];
"1000427" -> "1000539"  [label="DDG: "];
"1000344" -> "1000539"  [label="DDG: "];
"1000179" -> "1000539"  [label="DDG: "];
"1000117" -> "1000539"  [label="DDG: "];
"1000539" -> "1000545"  [label="DDG: "];
"1000539" -> "1000562"  [label="DDG: "];
"1000545" -> "1000118"  [label="AST: "];
"1000545" -> "1000558"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="AST: "];
"1000558" -> "1000545"  [label="AST: "];
"1000561" -> "1000545"  [label="CFG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000562" -> "1000118"  [label="AST: "];
"1000562" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="CFG: "];
"1000562" -> "1000564"  [label="DDG: "];
"1000563" -> "1000562"  [label="DDG: "];
"1000116" -> "1000562"  [label="DDG: "];
}
