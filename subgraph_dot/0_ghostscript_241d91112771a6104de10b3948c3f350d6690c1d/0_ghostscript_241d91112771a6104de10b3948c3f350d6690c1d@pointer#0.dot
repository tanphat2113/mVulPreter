digraph "0_ghostscript_241d91112771a6104de10b3948c3f350d6690c1d@pointer" {
"1000403" [label="(Call,*mem_raw = i_ctx_p->memory.current->non_gc_memory)"];
"1000430" [label="(Call,emprintf1(mem_raw,\n                      \"ERROR %d while the final restore. See gs/psi/ierrors.h for code explanation.\n\",\n                      code))"];
"1000437" [label="(Call,i_plugin_finit(mem_raw, h))"];
"1000539" [label="(Call,gs_lib_finit(exit_status, code, minst->heap))"];
"1000545" [label="(Call,gs_free_object(minst->heap, minst->lib_path.container.value.refs, \"lib_path array\"))"];
"1000562" [label="(Return,return exit_status;)"];
"1000433" [label="(Identifier,code)"];
"1000561" [label="(Identifier,dmem)"];
"1000116" [label="(MethodParameterIn,int exit_status)"];
"1000542" [label="(Call,minst->heap)"];
"1000268" [label="(Call,code < 0)"];
"1000437" [label="(Call,i_plugin_finit(mem_raw, h))"];
"1000558" [label="(Literal,\"lib_path array\")"];
"1000439" [label="(Identifier,h)"];
"1000117" [label="(MethodParameterIn,int code)"];
"1000563" [label="(Identifier,exit_status)"];
"1000401" [label="(Block,)"];
"1000539" [label="(Call,gs_lib_finit(exit_status, code, minst->heap))"];
"1000405" [label="(Call,i_ctx_p->memory.current->non_gc_memory)"];
"1000179" [label="(Call,code < 0)"];
"1000303" [label="(Call,code < 0)"];
"1000547" [label="(Identifier,minst)"];
"1000545" [label="(Call,gs_free_object(minst->heap, minst->lib_path.container.value.refs, \"lib_path array\"))"];
"1000564" [label="(MethodReturn,RET)"];
"1000426" [label="(ControlStructure,if (code < 0))"];
"1000354" [label="(Call,exit_status == 0)"];
"1000413" [label="(Call,*h = i_ctx_p->plugin_list)"];
"1000118" [label="(Block,)"];
"1000431" [label="(Identifier,mem_raw)"];
"1000432" [label="(Literal,\"ERROR %d while the final restore. See gs/psi/ierrors.h for code explanation.\n\")"];
"1000427" [label="(Call,code < 0)"];
"1000541" [label="(Identifier,code)"];
"1000389" [label="(Call,dmprintf1(minst->heap, \"%% Exiting instance 0x%p\n\", minst))"];
"1000540" [label="(Identifier,exit_status)"];
"1000562" [label="(Return,return exit_status;)"];
"1000546" [label="(Call,minst->heap)"];
"1000344" [label="(Call,emprintf2(imemory, \"UNKNOWN ERROR %d closing %s device.\n\", code, dname))"];
"1000228" [label="(Call,code != gs_error_VMerror)"];
"1000360" [label="(Call,exit_status = code)"];
"1000336" [label="(Call,emprintf3(imemory, \"ERROR: %s (%d) on closing %s device.\n\", err_str, code, dname))"];
"1000445" [label="(Identifier,minst)"];
"1000403" [label="(Call,*mem_raw = i_ctx_p->memory.current->non_gc_memory)"];
"1000414" [label="(Identifier,h)"];
"1000404" [label="(Identifier,mem_raw)"];
"1000357" [label="(Call,exit_status == gs_error_Quit)"];
"1000436" [label="(Identifier,dmem)"];
"1000160" [label="(Call,code = 0)"];
"1000430" [label="(Call,emprintf1(mem_raw,\n                      \"ERROR %d while the final restore. See gs/psi/ierrors.h for code explanation.\n\",\n                      code))"];
"1000549" [label="(Call,minst->lib_path.container.value.refs)"];
"1000438" [label="(Identifier,mem_raw)"];
"1000403" -> "1000401"  [label="AST: "];
"1000403" -> "1000405"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000414" -> "1000403"  [label="CFG: "];
"1000403" -> "1000564"  [label="DDG: "];
"1000403" -> "1000430"  [label="DDG: "];
"1000403" -> "1000437"  [label="DDG: "];
"1000430" -> "1000426"  [label="AST: "];
"1000430" -> "1000433"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000433" -> "1000430"  [label="AST: "];
"1000436" -> "1000430"  [label="CFG: "];
"1000430" -> "1000564"  [label="DDG: "];
"1000427" -> "1000430"  [label="DDG: "];
"1000117" -> "1000430"  [label="DDG: "];
"1000430" -> "1000437"  [label="DDG: "];
"1000430" -> "1000539"  [label="DDG: "];
"1000437" -> "1000401"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000445" -> "1000437"  [label="CFG: "];
"1000437" -> "1000564"  [label="DDG: "];
"1000437" -> "1000564"  [label="DDG: "];
"1000437" -> "1000564"  [label="DDG: "];
"1000413" -> "1000437"  [label="DDG: "];
"1000539" -> "1000118"  [label="AST: "];
"1000539" -> "1000542"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000542" -> "1000539"  [label="AST: "];
"1000547" -> "1000539"  [label="CFG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000539" -> "1000564"  [label="DDG: "];
"1000360" -> "1000539"  [label="DDG: "];
"1000357" -> "1000539"  [label="DDG: "];
"1000354" -> "1000539"  [label="DDG: "];
"1000116" -> "1000539"  [label="DDG: "];
"1000303" -> "1000539"  [label="DDG: "];
"1000268" -> "1000539"  [label="DDG: "];
"1000228" -> "1000539"  [label="DDG: "];
"1000336" -> "1000539"  [label="DDG: "];
"1000160" -> "1000539"  [label="DDG: "];
"1000427" -> "1000539"  [label="DDG: "];
"1000344" -> "1000539"  [label="DDG: "];
"1000179" -> "1000539"  [label="DDG: "];
"1000117" -> "1000539"  [label="DDG: "];
"1000389" -> "1000539"  [label="DDG: "];
"1000539" -> "1000545"  [label="DDG: "];
"1000539" -> "1000562"  [label="DDG: "];
"1000545" -> "1000118"  [label="AST: "];
"1000545" -> "1000558"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000549" -> "1000545"  [label="AST: "];
"1000558" -> "1000545"  [label="AST: "];
"1000561" -> "1000545"  [label="CFG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000545" -> "1000564"  [label="DDG: "];
"1000562" -> "1000118"  [label="AST: "];
"1000562" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="CFG: "];
"1000562" -> "1000564"  [label="DDG: "];
"1000563" -> "1000562"  [label="DDG: "];
"1000116" -> "1000562"  [label="DDG: "];
}
