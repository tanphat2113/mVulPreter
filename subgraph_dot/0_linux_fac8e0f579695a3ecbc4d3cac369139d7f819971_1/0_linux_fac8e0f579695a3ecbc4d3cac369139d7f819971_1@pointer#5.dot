digraph "0_linux_fac8e0f579695a3ecbc4d3cac369139d7f819971_1@pointer" {
"1000183" [label="(Call,uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive)"];
"1000184" [label="(Call,uo_priv->offload->port == uh->dest)"];
"1000172" [label="(Call,net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)) &&\n\t\t    uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive)"];
"1000190" [label="(Call,uh->dest)"];
"1000185" [label="(Call,uo_priv->offload->port)"];
"1000171" [label="(ControlStructure,if (net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)) &&\n\t\t    uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive))"];
"1000172" [label="(Call,net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)) &&\n\t\t    uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive)"];
"1000193" [label="(Call,uo_priv->offload->callbacks.gro_receive)"];
"1000200" [label="(ControlStructure,goto unflush;)"];
"1000196" [label="(Identifier,uo_priv)"];
"1000173" [label="(Call,net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)))"];
"1000183" [label="(Call,uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive)"];
"1000184" [label="(Call,uo_priv->offload->port == uh->dest)"];
"1000306" [label="(MethodReturn,struct sk_buff **)"];
"1000165" [label="(Identifier,uo_priv)"];
"1000183" -> "1000172"  [label="AST: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000183" -> "1000193"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000193" -> "1000183"  [label="AST: "];
"1000172" -> "1000183"  [label="CFG: "];
"1000183" -> "1000306"  [label="DDG: uo_priv->offload->port == uh->dest"];
"1000183" -> "1000306"  [label="DDG: uo_priv->offload->callbacks.gro_receive"];
"1000183" -> "1000172"  [label="DDG: uo_priv->offload->port == uh->dest"];
"1000183" -> "1000172"  [label="DDG: uo_priv->offload->callbacks.gro_receive"];
"1000184" -> "1000183"  [label="DDG: uo_priv->offload->port"];
"1000184" -> "1000183"  [label="DDG: uh->dest"];
"1000184" -> "1000190"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="AST: "];
"1000196" -> "1000184"  [label="CFG: "];
"1000184" -> "1000306"  [label="DDG: uo_priv->offload->port"];
"1000184" -> "1000306"  [label="DDG: uh->dest"];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000173"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000200" -> "1000172"  [label="CFG: "];
"1000165" -> "1000172"  [label="CFG: "];
"1000172" -> "1000306"  [label="DDG: net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev)) &&\n\t\t    uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive"];
"1000172" -> "1000306"  [label="DDG: net_eq(read_pnet(&uo_priv->net), dev_net(skb->dev))"];
"1000172" -> "1000306"  [label="DDG: uo_priv->offload->port == uh->dest &&\n\t\t    uo_priv->offload->callbacks.gro_receive"];
"1000173" -> "1000172"  [label="DDG: read_pnet(&uo_priv->net)"];
"1000173" -> "1000172"  [label="DDG: dev_net(skb->dev)"];
}
