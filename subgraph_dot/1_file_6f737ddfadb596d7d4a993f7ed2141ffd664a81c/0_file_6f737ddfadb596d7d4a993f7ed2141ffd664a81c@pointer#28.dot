digraph "0_file_6f737ddfadb596d7d4a993f7ed2141ffd664a81c@pointer" {
"1001664" [label="(Call,sbuf = m->value.s)"];
"1001677" [label="(Call,sbuf++)"];
"1001685" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1001684" [label="(Call,file_magicfind(ms, sbuf, &ml) == -1)"];
"1001693" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1001717" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001715" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001738" [label="(Call,rv != 1)"];
"1001745" [label="(Return,return rv;)"];
"1001733" [label="(Identifier,recursion_level)"];
"1001717" [label="(Call,match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001745" [label="(Return,return rv;)"];
"1001716" [label="(Identifier,rv)"];
"1001738" [label="(Call,rv != 1)"];
"1001679" [label="(Call,flip = !flip)"];
"1001740" [label="(Literal,1)"];
"1000110" [label="(MethodParameterIn,int text)"];
"1001739" [label="(Identifier,rv)"];
"1000103" [label="(MethodParameterIn,struct magic_set *ms)"];
"1001665" [label="(Identifier,sbuf)"];
"1001718" [label="(Identifier,ms)"];
"1000115" [label="(MethodParameterIn,int *returnval)"];
"1001722" [label="(Call,ml.nmagic)"];
"1001746" [label="(Identifier,rv)"];
"1001695" [label="(Literal,0)"];
"1001664" [label="(Call,sbuf = m->value.s)"];
"1001732" [label="(Identifier,flip)"];
"1000113" [label="(MethodParameterIn,int *printed_something)"];
"1001693" [label="(Call,file_error(ms, 0, \"cannot find entry `%s'\", sbuf))"];
"1001690" [label="(Call,-1)"];
"1001702" [label="(Identifier,oneed_separator)"];
"1001735" [label="(Identifier,need_separator)"];
"1000111" [label="(MethodParameterIn,int flip)"];
"1001659" [label="(Call,nbytes < offset)"];
"1001687" [label="(Identifier,sbuf)"];
"1001694" [label="(Identifier,ms)"];
"1001688" [label="(Call,&ml)"];
"1000106" [label="(MethodParameterIn,size_t nbytes)"];
"1001696" [label="(Literal,\"cannot find entry `%s'\")"];
"1000112" [label="(MethodParameterIn,int recursion_level)"];
"1001677" [label="(Call,sbuf++)"];
"1000107" [label="(MethodParameterIn,size_t o)"];
"1001684" [label="(Call,file_magicfind(ms, sbuf, &ml) == -1)"];
"1001736" [label="(Identifier,returnval)"];
"1001697" [label="(Identifier,sbuf)"];
"1001731" [label="(Identifier,text)"];
"1001666" [label="(Call,m->value.s)"];
"1000104" [label="(MethodParameterIn,const unsigned char *s)"];
"1001743" [label="(Identifier,need_separator)"];
"1000187" [label="(Call,fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"\n\t\t    SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\n\",\n\t\t    m->type, m->flag, offset, o, nbytes))"];
"1000152" [label="(Call,mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),\n\t    (uint32_t)nbytes, m))"];
"1001691" [label="(Literal,1)"];
"1001683" [label="(ControlStructure,if (file_magicfind(ms, sbuf, &ml) == -1))"];
"1001685" [label="(Call,file_magicfind(ms, sbuf, &ml))"];
"1001700" [label="(Literal,1)"];
"1000139" [label="(Call,recursion_level >= 20)"];
"1001727" [label="(Call,offset + o)"];
"1001676" [label="(Block,)"];
"1001674" [label="(Identifier,sbuf)"];
"1001404" [label="(Call,mcopy(ms, p, m->type, 0, s, offset, nbytes, m))"];
"1001725" [label="(Identifier,s)"];
"1001726" [label="(Identifier,nbytes)"];
"1001719" [label="(Call,ml.magic)"];
"1000114" [label="(MethodParameterIn,int *need_separator)"];
"1001737" [label="(ControlStructure,if (rv != 1))"];
"1001678" [label="(Identifier,sbuf)"];
"1001734" [label="(Identifier,printed_something)"];
"1001686" [label="(Identifier,ms)"];
"1001692" [label="(Block,)"];
"1001680" [label="(Identifier,flip)"];
"1001715" [label="(Call,rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,\n\t\t    mode, text, flip, recursion_level, printed_something,\n\t\t    need_separator, returnval))"];
"1001730" [label="(Identifier,mode)"];
"1000109" [label="(MethodParameterIn,int mode)"];
"1000418" [label="(Call,cvt_flip(m->in_type, flip))"];
"1001777" [label="(MethodReturn,RET)"];
"1001449" [label="(Block,)"];
"1001664" -> "1001449"  [label="AST: "];
"1001664" -> "1001666"  [label="CFG: "];
"1001665" -> "1001664"  [label="AST: "];
"1001666" -> "1001664"  [label="AST: "];
"1001674" -> "1001664"  [label="CFG: "];
"1001664" -> "1001777"  [label="DDG: "];
"1001664" -> "1001677"  [label="DDG: "];
"1001664" -> "1001685"  [label="DDG: "];
"1001677" -> "1001676"  [label="AST: "];
"1001677" -> "1001678"  [label="CFG: "];
"1001678" -> "1001677"  [label="AST: "];
"1001680" -> "1001677"  [label="CFG: "];
"1001677" -> "1001685"  [label="DDG: "];
"1001685" -> "1001684"  [label="AST: "];
"1001685" -> "1001688"  [label="CFG: "];
"1001686" -> "1001685"  [label="AST: "];
"1001687" -> "1001685"  [label="AST: "];
"1001688" -> "1001685"  [label="AST: "];
"1001691" -> "1001685"  [label="CFG: "];
"1001685" -> "1001777"  [label="DDG: "];
"1001685" -> "1001777"  [label="DDG: "];
"1001685" -> "1001684"  [label="DDG: "];
"1001685" -> "1001684"  [label="DDG: "];
"1001685" -> "1001684"  [label="DDG: "];
"1001404" -> "1001685"  [label="DDG: "];
"1000152" -> "1001685"  [label="DDG: "];
"1000103" -> "1001685"  [label="DDG: "];
"1001685" -> "1001693"  [label="DDG: "];
"1001685" -> "1001693"  [label="DDG: "];
"1001685" -> "1001717"  [label="DDG: "];
"1001684" -> "1001683"  [label="AST: "];
"1001684" -> "1001690"  [label="CFG: "];
"1001690" -> "1001684"  [label="AST: "];
"1001694" -> "1001684"  [label="CFG: "];
"1001702" -> "1001684"  [label="CFG: "];
"1001684" -> "1001777"  [label="DDG: "];
"1001684" -> "1001777"  [label="DDG: "];
"1001684" -> "1001777"  [label="DDG: "];
"1001690" -> "1001684"  [label="DDG: "];
"1001693" -> "1001692"  [label="AST: "];
"1001693" -> "1001697"  [label="CFG: "];
"1001694" -> "1001693"  [label="AST: "];
"1001695" -> "1001693"  [label="AST: "];
"1001696" -> "1001693"  [label="AST: "];
"1001697" -> "1001693"  [label="AST: "];
"1001700" -> "1001693"  [label="CFG: "];
"1001693" -> "1001777"  [label="DDG: "];
"1001693" -> "1001777"  [label="DDG: "];
"1001693" -> "1001777"  [label="DDG: "];
"1000103" -> "1001693"  [label="DDG: "];
"1001717" -> "1001715"  [label="AST: "];
"1001717" -> "1001736"  [label="CFG: "];
"1001718" -> "1001717"  [label="AST: "];
"1001719" -> "1001717"  [label="AST: "];
"1001722" -> "1001717"  [label="AST: "];
"1001725" -> "1001717"  [label="AST: "];
"1001726" -> "1001717"  [label="AST: "];
"1001727" -> "1001717"  [label="AST: "];
"1001730" -> "1001717"  [label="AST: "];
"1001731" -> "1001717"  [label="AST: "];
"1001732" -> "1001717"  [label="AST: "];
"1001733" -> "1001717"  [label="AST: "];
"1001734" -> "1001717"  [label="AST: "];
"1001735" -> "1001717"  [label="AST: "];
"1001736" -> "1001717"  [label="AST: "];
"1001715" -> "1001717"  [label="CFG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001777"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1001717" -> "1001715"  [label="DDG: "];
"1000103" -> "1001717"  [label="DDG: "];
"1001404" -> "1001717"  [label="DDG: "];
"1000152" -> "1001717"  [label="DDG: "];
"1000104" -> "1001717"  [label="DDG: "];
"1001659" -> "1001717"  [label="DDG: "];
"1001659" -> "1001717"  [label="DDG: "];
"1000106" -> "1001717"  [label="DDG: "];
"1000187" -> "1001717"  [label="DDG: "];
"1000107" -> "1001717"  [label="DDG: "];
"1000109" -> "1001717"  [label="DDG: "];
"1000110" -> "1001717"  [label="DDG: "];
"1001679" -> "1001717"  [label="DDG: "];
"1000418" -> "1001717"  [label="DDG: "];
"1000111" -> "1001717"  [label="DDG: "];
"1000139" -> "1001717"  [label="DDG: "];
"1000112" -> "1001717"  [label="DDG: "];
"1000113" -> "1001717"  [label="DDG: "];
"1000114" -> "1001717"  [label="DDG: "];
"1000115" -> "1001717"  [label="DDG: "];
"1001715" -> "1001449"  [label="AST: "];
"1001716" -> "1001715"  [label="AST: "];
"1001739" -> "1001715"  [label="CFG: "];
"1001715" -> "1001777"  [label="DDG: "];
"1001715" -> "1001738"  [label="DDG: "];
"1001738" -> "1001737"  [label="AST: "];
"1001738" -> "1001740"  [label="CFG: "];
"1001739" -> "1001738"  [label="AST: "];
"1001740" -> "1001738"  [label="AST: "];
"1001743" -> "1001738"  [label="CFG: "];
"1001746" -> "1001738"  [label="CFG: "];
"1001738" -> "1001777"  [label="DDG: "];
"1001738" -> "1001777"  [label="DDG: "];
"1001738" -> "1001745"  [label="DDG: "];
"1001745" -> "1001449"  [label="AST: "];
"1001745" -> "1001746"  [label="CFG: "];
"1001746" -> "1001745"  [label="AST: "];
"1001777" -> "1001745"  [label="CFG: "];
"1001745" -> "1001777"  [label="DDG: "];
"1001746" -> "1001745"  [label="DDG: "];
}
