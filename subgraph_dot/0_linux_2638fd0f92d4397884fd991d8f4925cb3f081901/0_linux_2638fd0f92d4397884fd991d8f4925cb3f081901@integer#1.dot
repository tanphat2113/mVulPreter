digraph "0_linux_2638fd0f92d4397884fd991d8f4925cb3f081901@integer" {
"1000226" [label="(Call,newmss = min_mtu - minlen)"];
"1000228" [label="(Call,min_mtu - minlen)"];
"1000216" [label="(Call,min_mtu <= minlen)"];
"1000208" [label="(Call,min_mtu = min(dst_mtu(skb_dst(skb)), in_mtu))"];
"1000210" [label="(Call,min(dst_mtu(skb_dst(skb)), in_mtu))"];
"1000211" [label="(Call,dst_mtu(skb_dst(skb)))"];
"1000212" [label="(Call,skb_dst(skb))"];
"1000203" [label="(Call,tcpmss_reverse_mtu(net, skb, family))"];
"1000196" [label="(Call,*net = xt_net(par))"];
"1000198" [label="(Call,xt_net(par))"];
"1000108" [label="(MethodParameterIn,const struct xt_action_param *par)"];
"1000166" [label="(Call,skb_network_header(skb))"];
"1000136" [label="(Call,skb_make_writable(skb, skb->len))"];
"1000107" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000109" [label="(MethodParameterIn,unsigned int family)"];
"1000201" [label="(Call,in_mtu = tcpmss_reverse_mtu(net, skb, family))"];
"1000111" [label="(MethodParameterIn,unsigned int minlen)"];
"1000290" [label="(Call,oldmss <= newmss)"];
"1000302" [label="(Call,newmss & 0xff00)"];
"1000301" [label="(Call,(newmss & 0xff00) >> 8)"];
"1000295" [label="(Call,opt[i+2] = (newmss & 0xff00) >> 8)"];
"1000312" [label="(Call,newmss & 0x00ff)"];
"1000306" [label="(Call,opt[i+3] = newmss & 0x00ff)"];
"1000323" [label="(Call,htons(newmss))"];
"1000315" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t\t\t htons(oldmss), htons(newmss),\n\t\t\t\t\t\t false))"];
"1000321" [label="(Call,htons(oldmss))"];
"1000378" [label="(Call,min(newmss, (u16)536))"];
"1000376" [label="(Call,newmss = min(newmss, (u16)536))"];
"1000436" [label="(Call,newmss & 0xff00)"];
"1000435" [label="(Call,(newmss & 0xff00) >> 8)"];
"1000431" [label="(Call,opt[2] = (newmss & 0xff00) >> 8)"];
"1000455" [label="(Call,(__be32 *)opt)"];
"1000444" [label="(Call,newmss & 0x00ff)"];
"1000440" [label="(Call,opt[3] = newmss & 0x00ff)"];
"1000386" [label="(Call,min(newmss, (u16)1220))"];
"1000384" [label="(Call,newmss = min(newmss, (u16)1220))"];
"1000108" [label="(MethodParameterIn,const struct xt_action_param *par)"];
"1000365" [label="(Call,skb_network_header(skb))"];
"1000265" [label="(Call,opt[i+1] == TCPOLEN_MSS)"];
"1000109" [label="(MethodParameterIn,unsigned int family)"];
"1000274" [label="(Call,oldmss = (opt[i+2] << 8) | opt[i+3])"];
"1000308" [label="(Identifier,opt)"];
"1000199" [label="(Identifier,par)"];
"1000197" [label="(Identifier,net)"];
"1000371" [label="(ControlStructure,if (xt_family(par) == NFPROTO_IPV4))"];
"1000295" [label="(Call,opt[i+2] = (newmss & 0xff00) >> 8)"];
"1000230" [label="(Identifier,minlen)"];
"1000304" [label="(Literal,0xff00)"];
"1000376" [label="(Call,newmss = min(newmss, (u16)536))"];
"1000137" [label="(Identifier,skb)"];
"1000383" [label="(ControlStructure,else)"];
"1000377" [label="(Identifier,newmss)"];
"1000313" [label="(Identifier,newmss)"];
"1000218" [label="(Identifier,minlen)"];
"1000444" [label="(Call,newmss & 0x00ff)"];
"1000436" [label="(Call,newmss & 0xff00)"];
"1000314" [label="(Literal,0x00ff)"];
"1000290" [label="(Call,oldmss <= newmss)"];
"1000226" [label="(Call,newmss = min_mtu - minlen)"];
"1000307" [label="(Call,opt[i+3])"];
"1000206" [label="(Identifier,family)"];
"1000437" [label="(Identifier,newmss)"];
"1000455" [label="(Call,(__be32 *)opt)"];
"1000454" [label="(Call,*((__be32 *)opt))"];
"1000204" [label="(Identifier,net)"];
"1000302" [label="(Call,newmss & 0xff00)"];
"1000421" [label="(Call,opt[0] = TCPOPT_MSS)"];
"1000232" [label="(Call,newmss = info->mss)"];
"1000435" [label="(Call,(newmss & 0xff00) >> 8)"];
"1000136" [label="(Call,skb_make_writable(skb, skb->len))"];
"1000297" [label="(Identifier,opt)"];
"1000212" [label="(Call,skb_dst(skb))"];
"1000205" [label="(Identifier,skb)"];
"1000354" [label="(Call,skb_tailroom(skb))"];
"1000323" [label="(Call,htons(newmss))"];
"1000432" [label="(Call,opt[2])"];
"1000322" [label="(Identifier,oldmss)"];
"1000112" [label="(Block,)"];
"1000227" [label="(Identifier,newmss)"];
"1000216" [label="(Call,min_mtu <= minlen)"];
"1000349" [label="(Call,pskb_expand_head(skb, 0,\n\t\t\t\t     TCPOLEN_MSS - skb_tailroom(skb),\n\t\t\t\t     GFP_ATOMIC))"];
"1000450" [label="(Identifier,tcph)"];
"1000165" [label="(Call,skb_network_header(skb) + tcphoff)"];
"1000238" [label="(Identifier,opt)"];
"1000217" [label="(Identifier,min_mtu)"];
"1000344" [label="(Call,skb_tailroom(skb))"];
"1000201" [label="(Call,in_mtu = tcpmss_reverse_mtu(net, skb, family))"];
"1000209" [label="(Identifier,min_mtu)"];
"1000386" [label="(Call,min(newmss, (u16)1220))"];
"1000373" [label="(Call,xt_family(par))"];
"1000438" [label="(Literal,0xff00)"];
"1000446" [label="(Literal,0x00ff)"];
"1000292" [label="(Identifier,newmss)"];
"1000488" [label="(MethodReturn,RET)"];
"1000324" [label="(Identifier,newmss)"];
"1000385" [label="(Identifier,newmss)"];
"1000312" [label="(Call,newmss & 0x00ff)"];
"1000439" [label="(Literal,8)"];
"1000368" [label="(Call,skb_put(skb, TCPOLEN_MSS))"];
"1000392" [label="(Identifier,opt)"];
"1000221" [label="(Literal,\"unknown or invalid path-MTU (%u)\n\")"];
"1000315" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t\t\t htons(oldmss), htons(newmss),\n\t\t\t\t\t\t false))"];
"1000166" [label="(Call,skb_network_header(skb))"];
"1000325" [label="(Identifier,false)"];
"1000380" [label="(Call,(u16)536)"];
"1000426" [label="(Call,opt[1] = TCPOLEN_MSS)"];
"1000379" [label="(Identifier,newmss)"];
"1000431" [label="(Call,opt[2] = (newmss & 0xff00) >> 8)"];
"1000387" [label="(Identifier,newmss)"];
"1000408" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t htons(len), htons(len + TCPOLEN_MSS), true))"];
"1000208" [label="(Call,min_mtu = min(dst_mtu(skb_dst(skb)), in_mtu))"];
"1000320" [label="(Identifier,skb)"];
"1000457" [label="(Identifier,opt)"];
"1000211" [label="(Call,dst_mtu(skb_dst(skb)))"];
"1000272" [label="(Block,)"];
"1000294" [label="(Literal,0)"];
"1000198" [label="(Call,xt_net(par))"];
"1000210" [label="(Call,min(dst_mtu(skb_dst(skb)), in_mtu))"];
"1000442" [label="(Identifier,opt)"];
"1000107" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000214" [label="(Identifier,in_mtu)"];
"1000203" [label="(Call,tcpmss_reverse_mtu(net, skb, family))"];
"1000296" [label="(Call,opt[i+2])"];
"1000316" [label="(Call,&tcph->check)"];
"1000202" [label="(Identifier,in_mtu)"];
"1000146" [label="(Call,skb->len - tcphoff)"];
"1000399" [label="(Call,memmove(opt + TCPOLEN_MSS, opt, len - sizeof(struct tcphdr)))"];
"1000305" [label="(Literal,8)"];
"1000327" [label="(Literal,0)"];
"1000111" [label="(MethodParameterIn,unsigned int minlen)"];
"1000220" [label="(Call,net_err_ratelimited(\"unknown or invalid path-MTU (%u)\n\",\n\t\t\t\t\t    min_mtu))"];
"1000138" [label="(Call,skb->len)"];
"1000291" [label="(Identifier,oldmss)"];
"1000163" [label="(Call,(struct tcphdr *)(skb_network_header(skb) + tcphoff))"];
"1000303" [label="(Identifier,newmss)"];
"1000167" [label="(Identifier,skb)"];
"1000447" [label="(Call,inet_proto_csum_replace4(&tcph->check, skb, 0, *((__be32 *)opt), false))"];
"1000194" [label="(Block,)"];
"1000196" [label="(Call,*net = xt_net(par))"];
"1000213" [label="(Identifier,skb)"];
"1000440" [label="(Call,opt[3] = newmss & 0x00ff)"];
"1000135" [label="(Call,!skb_make_writable(skb, skb->len))"];
"1000260" [label="(Call,opt[i] == TCPOPT_MSS)"];
"1000168" [label="(Identifier,tcphoff)"];
"1000388" [label="(Call,(u16)1220)"];
"1000301" [label="(Call,(newmss & 0xff00) >> 8)"];
"1000318" [label="(Identifier,tcph)"];
"1000441" [label="(Call,opt[3])"];
"1000306" [label="(Call,opt[i+3] = newmss & 0x00ff)"];
"1000228" [label="(Call,min_mtu - minlen)"];
"1000378" [label="(Call,min(newmss, (u16)536))"];
"1000289" [label="(ControlStructure,if (oldmss <= newmss))"];
"1000445" [label="(Identifier,newmss)"];
"1000321" [label="(Call,htons(oldmss))"];
"1000384" [label="(Call,newmss = min(newmss, (u16)1220))"];
"1000473" [label="(Call,inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t oldval, ((__be16 *)tcph)[6], false))"];
"1000215" [label="(ControlStructure,if (min_mtu <= minlen))"];
"1000229" [label="(Identifier,min_mtu)"];
"1000226" -> "1000194"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000238" -> "1000226"  [label="CFG: "];
"1000226" -> "1000488"  [label="DDG: newmss"];
"1000226" -> "1000488"  [label="DDG: min_mtu - minlen"];
"1000228" -> "1000226"  [label="DDG: min_mtu"];
"1000228" -> "1000226"  [label="DDG: minlen"];
"1000226" -> "1000290"  [label="DDG: newmss"];
"1000226" -> "1000378"  [label="DDG: newmss"];
"1000226" -> "1000386"  [label="DDG: newmss"];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000228" -> "1000488"  [label="DDG: min_mtu"];
"1000228" -> "1000488"  [label="DDG: minlen"];
"1000216" -> "1000228"  [label="DDG: min_mtu"];
"1000216" -> "1000228"  [label="DDG: minlen"];
"1000111" -> "1000228"  [label="DDG: minlen"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="CFG: "];
"1000227" -> "1000216"  [label="CFG: "];
"1000216" -> "1000488"  [label="DDG: min_mtu <= minlen"];
"1000216" -> "1000488"  [label="DDG: minlen"];
"1000208" -> "1000216"  [label="DDG: min_mtu"];
"1000111" -> "1000216"  [label="DDG: minlen"];
"1000216" -> "1000220"  [label="DDG: min_mtu"];
"1000208" -> "1000194"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000217" -> "1000208"  [label="CFG: "];
"1000208" -> "1000488"  [label="DDG: min(dst_mtu(skb_dst(skb)), in_mtu)"];
"1000210" -> "1000208"  [label="DDG: dst_mtu(skb_dst(skb))"];
"1000210" -> "1000208"  [label="DDG: in_mtu"];
"1000210" -> "1000214"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000214" -> "1000210"  [label="AST: "];
"1000210" -> "1000488"  [label="DDG: in_mtu"];
"1000210" -> "1000488"  [label="DDG: dst_mtu(skb_dst(skb))"];
"1000211" -> "1000210"  [label="DDG: skb_dst(skb)"];
"1000201" -> "1000210"  [label="DDG: in_mtu"];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000214" -> "1000211"  [label="CFG: "];
"1000211" -> "1000488"  [label="DDG: skb_dst(skb)"];
"1000212" -> "1000211"  [label="DDG: skb"];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000212" -> "1000488"  [label="DDG: skb"];
"1000203" -> "1000212"  [label="DDG: skb"];
"1000107" -> "1000212"  [label="DDG: skb"];
"1000212" -> "1000315"  [label="DDG: skb"];
"1000212" -> "1000344"  [label="DDG: skb"];
"1000203" -> "1000201"  [label="AST: "];
"1000203" -> "1000206"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000206" -> "1000203"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000203" -> "1000488"  [label="DDG: family"];
"1000203" -> "1000488"  [label="DDG: net"];
"1000203" -> "1000201"  [label="DDG: net"];
"1000203" -> "1000201"  [label="DDG: skb"];
"1000203" -> "1000201"  [label="DDG: family"];
"1000196" -> "1000203"  [label="DDG: net"];
"1000166" -> "1000203"  [label="DDG: skb"];
"1000107" -> "1000203"  [label="DDG: skb"];
"1000109" -> "1000203"  [label="DDG: family"];
"1000196" -> "1000194"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000198" -> "1000196"  [label="AST: "];
"1000202" -> "1000196"  [label="CFG: "];
"1000196" -> "1000488"  [label="DDG: xt_net(par)"];
"1000198" -> "1000196"  [label="DDG: par"];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000198" -> "1000488"  [label="DDG: par"];
"1000108" -> "1000198"  [label="DDG: par"];
"1000198" -> "1000373"  [label="DDG: par"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000488"  [label="DDG: par"];
"1000108" -> "1000373"  [label="DDG: par"];
"1000166" -> "1000165"  [label="AST: "];
"1000166" -> "1000167"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="CFG: "];
"1000166" -> "1000488"  [label="DDG: skb"];
"1000166" -> "1000163"  [label="DDG: skb"];
"1000166" -> "1000165"  [label="DDG: skb"];
"1000136" -> "1000166"  [label="DDG: skb"];
"1000107" -> "1000166"  [label="DDG: skb"];
"1000166" -> "1000315"  [label="DDG: skb"];
"1000166" -> "1000344"  [label="DDG: skb"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000135" -> "1000136"  [label="CFG: "];
"1000136" -> "1000488"  [label="DDG: skb->len"];
"1000136" -> "1000488"  [label="DDG: skb"];
"1000136" -> "1000135"  [label="DDG: skb"];
"1000136" -> "1000135"  [label="DDG: skb->len"];
"1000107" -> "1000136"  [label="DDG: skb"];
"1000136" -> "1000146"  [label="DDG: skb->len"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000488"  [label="DDG: skb"];
"1000107" -> "1000315"  [label="DDG: skb"];
"1000107" -> "1000344"  [label="DDG: skb"];
"1000107" -> "1000349"  [label="DDG: skb"];
"1000107" -> "1000354"  [label="DDG: skb"];
"1000107" -> "1000365"  [label="DDG: skb"];
"1000107" -> "1000368"  [label="DDG: skb"];
"1000107" -> "1000408"  [label="DDG: skb"];
"1000107" -> "1000447"  [label="DDG: skb"];
"1000107" -> "1000473"  [label="DDG: skb"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000488"  [label="DDG: family"];
"1000201" -> "1000194"  [label="AST: "];
"1000202" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="CFG: "];
"1000201" -> "1000488"  [label="DDG: tcpmss_reverse_mtu(net, skb, family)"];
"1000111" -> "1000106"  [label="AST: "];
"1000111" -> "1000488"  [label="DDG: minlen"];
"1000290" -> "1000289"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000297" -> "1000290"  [label="CFG: "];
"1000290" -> "1000488"  [label="DDG: oldmss"];
"1000290" -> "1000488"  [label="DDG: newmss"];
"1000290" -> "1000488"  [label="DDG: oldmss <= newmss"];
"1000274" -> "1000290"  [label="DDG: oldmss"];
"1000232" -> "1000290"  [label="DDG: newmss"];
"1000290" -> "1000302"  [label="DDG: newmss"];
"1000290" -> "1000321"  [label="DDG: oldmss"];
"1000302" -> "1000301"  [label="AST: "];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000305" -> "1000302"  [label="CFG: "];
"1000302" -> "1000301"  [label="DDG: newmss"];
"1000302" -> "1000301"  [label="DDG: 0xff00"];
"1000302" -> "1000312"  [label="DDG: newmss"];
"1000301" -> "1000295"  [label="AST: "];
"1000301" -> "1000305"  [label="CFG: "];
"1000305" -> "1000301"  [label="AST: "];
"1000295" -> "1000301"  [label="CFG: "];
"1000301" -> "1000488"  [label="DDG: newmss & 0xff00"];
"1000301" -> "1000295"  [label="DDG: newmss & 0xff00"];
"1000301" -> "1000295"  [label="DDG: 8"];
"1000295" -> "1000272"  [label="AST: "];
"1000296" -> "1000295"  [label="AST: "];
"1000308" -> "1000295"  [label="CFG: "];
"1000295" -> "1000488"  [label="DDG: opt[i+2]"];
"1000295" -> "1000488"  [label="DDG: (newmss & 0xff00) >> 8"];
"1000312" -> "1000306"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000306" -> "1000312"  [label="CFG: "];
"1000312" -> "1000306"  [label="DDG: newmss"];
"1000312" -> "1000306"  [label="DDG: 0x00ff"];
"1000312" -> "1000323"  [label="DDG: newmss"];
"1000306" -> "1000272"  [label="AST: "];
"1000307" -> "1000306"  [label="AST: "];
"1000318" -> "1000306"  [label="CFG: "];
"1000306" -> "1000488"  [label="DDG: newmss & 0x00ff"];
"1000306" -> "1000488"  [label="DDG: opt[i+3]"];
"1000323" -> "1000315"  [label="AST: "];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="CFG: "];
"1000323" -> "1000488"  [label="DDG: newmss"];
"1000323" -> "1000315"  [label="DDG: newmss"];
"1000315" -> "1000272"  [label="AST: "];
"1000315" -> "1000325"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000320" -> "1000315"  [label="AST: "];
"1000321" -> "1000315"  [label="AST: "];
"1000325" -> "1000315"  [label="AST: "];
"1000327" -> "1000315"  [label="CFG: "];
"1000315" -> "1000488"  [label="DDG: inet_proto_csum_replace2(&tcph->check, skb,\n\t\t\t\t\t\t htons(oldmss), htons(newmss),\n\t\t\t\t\t\t false)"];
"1000315" -> "1000488"  [label="DDG: &tcph->check"];
"1000315" -> "1000488"  [label="DDG: false"];
"1000315" -> "1000488"  [label="DDG: htons(newmss)"];
"1000315" -> "1000488"  [label="DDG: htons(oldmss)"];
"1000315" -> "1000488"  [label="DDG: skb"];
"1000321" -> "1000315"  [label="DDG: oldmss"];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000324" -> "1000321"  [label="CFG: "];
"1000321" -> "1000488"  [label="DDG: oldmss"];
"1000378" -> "1000376"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000378" -> "1000488"  [label="DDG: (u16)536"];
"1000378" -> "1000376"  [label="DDG: newmss"];
"1000378" -> "1000376"  [label="DDG: (u16)536"];
"1000232" -> "1000378"  [label="DDG: newmss"];
"1000380" -> "1000378"  [label="DDG: 536"];
"1000376" -> "1000371"  [label="AST: "];
"1000377" -> "1000376"  [label="AST: "];
"1000392" -> "1000376"  [label="CFG: "];
"1000376" -> "1000488"  [label="DDG: min(newmss, (u16)536)"];
"1000376" -> "1000436"  [label="DDG: newmss"];
"1000436" -> "1000435"  [label="AST: "];
"1000436" -> "1000438"  [label="CFG: "];
"1000437" -> "1000436"  [label="AST: "];
"1000438" -> "1000436"  [label="AST: "];
"1000439" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="DDG: newmss"];
"1000436" -> "1000435"  [label="DDG: 0xff00"];
"1000384" -> "1000436"  [label="DDG: newmss"];
"1000436" -> "1000444"  [label="DDG: newmss"];
"1000435" -> "1000431"  [label="AST: "];
"1000435" -> "1000439"  [label="CFG: "];
"1000439" -> "1000435"  [label="AST: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000435" -> "1000488"  [label="DDG: newmss & 0xff00"];
"1000435" -> "1000431"  [label="DDG: newmss & 0xff00"];
"1000435" -> "1000431"  [label="DDG: 8"];
"1000431" -> "1000112"  [label="AST: "];
"1000432" -> "1000431"  [label="AST: "];
"1000442" -> "1000431"  [label="CFG: "];
"1000431" -> "1000488"  [label="DDG: opt[2]"];
"1000431" -> "1000488"  [label="DDG: (newmss & 0xff00) >> 8"];
"1000431" -> "1000455"  [label="DDG: opt[2]"];
"1000455" -> "1000454"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000488"  [label="DDG: opt"];
"1000426" -> "1000455"  [label="DDG: opt[1]"];
"1000399" -> "1000455"  [label="DDG: opt"];
"1000421" -> "1000455"  [label="DDG: opt[0]"];
"1000440" -> "1000455"  [label="DDG: opt[3]"];
"1000260" -> "1000455"  [label="DDG: opt[i]"];
"1000265" -> "1000455"  [label="DDG: opt[i+1]"];
"1000444" -> "1000440"  [label="AST: "];
"1000444" -> "1000446"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000446" -> "1000444"  [label="AST: "];
"1000440" -> "1000444"  [label="CFG: "];
"1000444" -> "1000488"  [label="DDG: newmss"];
"1000444" -> "1000440"  [label="DDG: newmss"];
"1000444" -> "1000440"  [label="DDG: 0x00ff"];
"1000440" -> "1000112"  [label="AST: "];
"1000441" -> "1000440"  [label="AST: "];
"1000450" -> "1000440"  [label="CFG: "];
"1000440" -> "1000488"  [label="DDG: opt[3]"];
"1000440" -> "1000488"  [label="DDG: newmss & 0x00ff"];
"1000386" -> "1000384"  [label="AST: "];
"1000386" -> "1000388"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000384" -> "1000386"  [label="CFG: "];
"1000386" -> "1000488"  [label="DDG: (u16)1220"];
"1000386" -> "1000384"  [label="DDG: newmss"];
"1000386" -> "1000384"  [label="DDG: (u16)1220"];
"1000232" -> "1000386"  [label="DDG: newmss"];
"1000388" -> "1000386"  [label="DDG: 1220"];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000384"  [label="AST: "];
"1000392" -> "1000384"  [label="CFG: "];
"1000384" -> "1000488"  [label="DDG: min(newmss, (u16)1220)"];
}
