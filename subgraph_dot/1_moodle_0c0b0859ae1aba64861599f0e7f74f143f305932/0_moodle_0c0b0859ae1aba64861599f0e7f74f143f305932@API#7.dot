digraph "0_moodle_0c0b0859ae1aba64861599f0e7f74f143f305932@API" {
"1000240" [label="(Call,mmem->used += size + sizeof(gs_malloc_block_t))"];
"1000107" [label="(MethodParameterIn,uint size)"];
"1000133" [label="(Call,size > mmem->limit - sizeof(gs_malloc_block_t))"];
"1000135" [label="(Call,mmem->limit - sizeof(gs_malloc_block_t))"];
"1000154" [label="(Call,mmem->limit - added < mmem->used)"];
"1000155" [label="(Call,mmem->limit - added)"];
"1000147" [label="(Call,added = size + sizeof(gs_malloc_block_t))"];
"1000249" [label="(Call,mmem->used > mmem->max_used)"];
"1000256" [label="(Call,mmem->max_used = mmem->used)"];
"1000284" [label="(Call,dmlprintf6(mem, \"[a+]gs_malloc(%s)(%u) = 0x%lx: %s, used=%ld, max=%ld\n\",\n                   client_name_string(cname), size, (ulong) ptr, msg, mmem->used, mmem->max_used))"];
"1000132" [label="(ControlStructure,if (size > mmem->limit - sizeof(gs_malloc_block_t)))"];
"1000107" [label="(MethodParameterIn,uint size)"];
"1000302" [label="(MethodReturn,RET)"];
"1000249" [label="(Call,mmem->used > mmem->max_used)"];
"1000244" [label="(Call,size + sizeof(gs_malloc_block_t))"];
"1000153" [label="(ControlStructure,if (mmem->limit - added < mmem->used))"];
"1000161" [label="(Identifier,mmem)"];
"1000180" [label="(Block,)"];
"1000113" [label="(Call,(gs_malloc_memory_t *) mem)"];
"1000145" [label="(Block,)"];
"1000281" [label="(Call,msg != ok_msg)"];
"1000133" [label="(Call,size > mmem->limit - sizeof(gs_malloc_block_t))"];
"1000143" [label="(Literal,\"exceeded limit\")"];
"1000290" [label="(Call,(ulong) ptr)"];
"1000135" [label="(Call,mmem->limit - sizeof(gs_malloc_block_t))"];
"1000154" [label="(Call,mmem->limit - added < mmem->used)"];
"1000277" [label="(ControlStructure,if (gs_debug_c('a') || msg != ok_msg))"];
"1000293" [label="(Identifier,msg)"];
"1000136" [label="(Call,mmem->limit)"];
"1000155" [label="(Call,mmem->limit - added)"];
"1000260" [label="(Call,mmem->used)"];
"1000159" [label="(Identifier,added)"];
"1000248" [label="(ControlStructure,if (mmem->used > mmem->max_used))"];
"1000251" [label="(Identifier,mmem)"];
"1000258" [label="(Identifier,mmem)"];
"1000256" [label="(Call,mmem->max_used = mmem->used)"];
"1000147" [label="(Call,added = size + sizeof(gs_malloc_block_t))"];
"1000273" [label="(Call,gs_alloc_fill(ptr, gs_alloc_fill_alloc, size))"];
"1000240" [label="(Call,mmem->used += size + sizeof(gs_malloc_block_t))"];
"1000241" [label="(Call,mmem->used)"];
"1000106" [label="(MethodParameterIn,gs_memory_t * mem)"];
"1000294" [label="(Call,mmem->used)"];
"1000212" [label="(Call,bp->size = size)"];
"1000250" [label="(Call,mmem->used)"];
"1000297" [label="(Call,mmem->max_used)"];
"1000169" [label="(Identifier,ptr)"];
"1000173" [label="(Call,malloc(added))"];
"1000284" [label="(Call,dmlprintf6(mem, \"[a+]gs_malloc(%s)(%u) = 0x%lx: %s, used=%ld, max=%ld\n\",\n                   client_name_string(cname), size, (ulong) ptr, msg, mmem->used, mmem->max_used))"];
"1000139" [label="(Call,sizeof(gs_malloc_block_t))"];
"1000253" [label="(Call,mmem->max_used)"];
"1000286" [label="(Literal,\"[a+]gs_malloc(%s)(%u) = 0x%lx: %s, used=%ld, max=%ld\n\")"];
"1000148" [label="(Identifier,added)"];
"1000301" [label="(Identifier,ptr)"];
"1000257" [label="(Call,mmem->max_used)"];
"1000287" [label="(Call,client_name_string(cname))"];
"1000157" [label="(Identifier,mmem)"];
"1000285" [label="(Identifier,mem)"];
"1000149" [label="(Call,size + sizeof(gs_malloc_block_t))"];
"1000265" [label="(Identifier,mmem)"];
"1000156" [label="(Call,mmem->limit)"];
"1000289" [label="(Identifier,size)"];
"1000164" [label="(Literal,\"exceeded limit\")"];
"1000160" [label="(Call,mmem->used)"];
"1000134" [label="(Identifier,size)"];
"1000240" -> "1000180"  [label="AST: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000251" -> "1000240"  [label="CFG: "];
"1000240" -> "1000302"  [label="DDG: "];
"1000107" -> "1000240"  [label="DDG: "];
"1000133" -> "1000240"  [label="DDG: "];
"1000154" -> "1000240"  [label="DDG: "];
"1000240" -> "1000249"  [label="DDG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000302"  [label="DDG: "];
"1000107" -> "1000133"  [label="DDG: "];
"1000107" -> "1000147"  [label="DDG: "];
"1000107" -> "1000149"  [label="DDG: "];
"1000107" -> "1000212"  [label="DDG: "];
"1000107" -> "1000244"  [label="DDG: "];
"1000107" -> "1000273"  [label="DDG: "];
"1000107" -> "1000284"  [label="DDG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000143" -> "1000133"  [label="CFG: "];
"1000148" -> "1000133"  [label="CFG: "];
"1000133" -> "1000302"  [label="DDG: "];
"1000133" -> "1000302"  [label="DDG: "];
"1000133" -> "1000302"  [label="DDG: "];
"1000135" -> "1000133"  [label="DDG: "];
"1000133" -> "1000147"  [label="DDG: "];
"1000133" -> "1000149"  [label="DDG: "];
"1000133" -> "1000212"  [label="DDG: "];
"1000133" -> "1000244"  [label="DDG: "];
"1000133" -> "1000273"  [label="DDG: "];
"1000133" -> "1000284"  [label="DDG: "];
"1000135" -> "1000139"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="AST: "];
"1000135" -> "1000302"  [label="DDG: "];
"1000135" -> "1000155"  [label="DDG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000160"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000160" -> "1000154"  [label="AST: "];
"1000164" -> "1000154"  [label="CFG: "];
"1000169" -> "1000154"  [label="CFG: "];
"1000154" -> "1000302"  [label="DDG: "];
"1000154" -> "1000302"  [label="DDG: "];
"1000154" -> "1000302"  [label="DDG: "];
"1000155" -> "1000154"  [label="DDG: "];
"1000155" -> "1000154"  [label="DDG: "];
"1000154" -> "1000284"  [label="DDG: "];
"1000155" -> "1000159"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000159" -> "1000155"  [label="AST: "];
"1000161" -> "1000155"  [label="CFG: "];
"1000155" -> "1000302"  [label="DDG: "];
"1000155" -> "1000302"  [label="DDG: "];
"1000147" -> "1000155"  [label="DDG: "];
"1000155" -> "1000173"  [label="DDG: "];
"1000147" -> "1000145"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000157" -> "1000147"  [label="CFG: "];
"1000147" -> "1000302"  [label="DDG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000249" -> "1000253"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="AST: "];
"1000258" -> "1000249"  [label="CFG: "];
"1000265" -> "1000249"  [label="CFG: "];
"1000249" -> "1000302"  [label="DDG: "];
"1000249" -> "1000302"  [label="DDG: "];
"1000249" -> "1000302"  [label="DDG: "];
"1000249" -> "1000256"  [label="DDG: "];
"1000249" -> "1000284"  [label="DDG: "];
"1000249" -> "1000284"  [label="DDG: "];
"1000256" -> "1000248"  [label="AST: "];
"1000256" -> "1000260"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000260" -> "1000256"  [label="AST: "];
"1000265" -> "1000256"  [label="CFG: "];
"1000256" -> "1000302"  [label="DDG: "];
"1000256" -> "1000302"  [label="DDG: "];
"1000256" -> "1000284"  [label="DDG: "];
"1000284" -> "1000277"  [label="AST: "];
"1000284" -> "1000297"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000287" -> "1000284"  [label="AST: "];
"1000289" -> "1000284"  [label="AST: "];
"1000290" -> "1000284"  [label="AST: "];
"1000293" -> "1000284"  [label="AST: "];
"1000294" -> "1000284"  [label="AST: "];
"1000297" -> "1000284"  [label="AST: "];
"1000301" -> "1000284"  [label="CFG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000284" -> "1000302"  [label="DDG: "];
"1000113" -> "1000284"  [label="DDG: "];
"1000106" -> "1000284"  [label="DDG: "];
"1000287" -> "1000284"  [label="DDG: "];
"1000273" -> "1000284"  [label="DDG: "];
"1000290" -> "1000284"  [label="DDG: "];
"1000281" -> "1000284"  [label="DDG: "];
}
