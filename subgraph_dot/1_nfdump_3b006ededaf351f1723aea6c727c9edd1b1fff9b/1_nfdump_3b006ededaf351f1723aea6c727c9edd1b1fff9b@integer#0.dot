digraph "1_nfdump_3b006ededaf351f1723aea6c727c9edd1b1fff9b@integer" {
"1000620" [label="(Call,DataPtr = DataPtr + size_required+4)"];
"1000148" [label="(Call,(ipfix_template_record_t *)DataPtr)"];
"1000106" [label="(MethodParameterIn,void *DataPtr)"];
"1000455" [label="(Call,dbg_printf(\"Processed: %u\n\", size_required))"];
"1000283" [label="(Call,size_left < size_required)"];
"1000174" [label="(Call,dbg_printf(\"FieldCount: %u buffersize: %u\n\", count, size_left))"];
"1000160" [label="(Call,count\t = ntohs(ipfix_template_record->FieldCount))"];
"1000162" [label="(Call,ntohs(ipfix_template_record->FieldCount))"];
"1000151" [label="(Call,size_left \t\t-= 4)"];
"1000125" [label="(Call,size_left && size_left < 4)"];
"1000127" [label="(Call,size_left < 4)"];
"1000107" [label="(MethodParameterIn,uint32_t size_left)"];
"1000277" [label="(Call,size_required   = 4*count)"];
"1000279" [label="(Call,4*count)"];
"1000252" [label="(Call,calloc(count, sizeof(struct order_s)))"];
"1000393" [label="(Call,size_left < size_required)"];
"1000389" [label="(Call,size_required += 4)"];
"1000282" [label="(ControlStructure,if ( size_left < size_required ))"];
"1000393" [label="(Call,size_left < size_required)"];
"1000457" [label="(Identifier,size_required)"];
"1000125" [label="(Call,size_left && size_left < 4)"];
"1000177" [label="(Identifier,size_left)"];
"1000129" [label="(Literal,4)"];
"1000148" [label="(Call,(ipfix_template_record_t *)DataPtr)"];
"1000397" [label="(Call,LogError(\"Process_ipfix: [%u] Not enough data for template elements! required: %i, left: %u\", \n\t\t\t\t\t\t\texporter->info.id, size_required, size_left))"];
"1000116" [label="(Block,)"];
"1000459" [label="(Call,compact_input_order())"];
"1000285" [label="(Identifier,size_required)"];
"1000632" [label="(Call,dbg_printf(\"Skip %u bytes padding\n\", size_left))"];
"1000155" [label="(Identifier,table_id)"];
"1000167" [label="(Literal,\"\n[%u] Template ID: %u\n\")"];
"1000128" [label="(Identifier,size_left)"];
"1000252" [label="(Call,calloc(count, sizeof(struct order_s)))"];
"1000392" [label="(ControlStructure,if ( size_left < size_required ))"];
"1000617" [label="(Call,size_left -= size_required)"];
"1000415" [label="(Identifier,e)"];
"1000147" [label="(Identifier,ipfix_template_record)"];
"1000390" [label="(Identifier,size_required)"];
"1000142" [label="(Call,size_left = 0)"];
"1000647" [label="(MethodReturn,static void)"];
"1000382" [label="(Block,)"];
"1000312" [label="(Call,i<count)"];
"1000389" [label="(Call,size_required += 4)"];
"1000278" [label="(Identifier,size_required)"];
"1000279" [label="(Call,4*count)"];
"1000394" [label="(Identifier,size_left)"];
"1000127" [label="(Call,size_left < 4)"];
"1000302" [label="(Identifier,NextElement)"];
"1000288" [label="(Literal,\"Process_ipfix: [%u] Not enough data for template elements! required: %i, left: %u\")"];
"1000174" [label="(Call,dbg_printf(\"FieldCount: %u buffersize: %u\n\", count, size_left))"];
"1000635" [label="(Call,size_left = 0)"];
"1000283" [label="(Call,size_left < size_required)"];
"1000151" [label="(Call,size_left \t\t-= 4)"];
"1000296" [label="(Call,dbg_printf(\"ERROR: Not enough data for template elements! required: %i, left: %u\", size_required, size_left))"];
"1000152" [label="(Identifier,size_left)"];
"1000146" [label="(Call,ipfix_template_record = (ipfix_template_record_t *)DataPtr)"];
"1000153" [label="(Literal,4)"];
"1000268" [label="(Call,size_left = 0)"];
"1000132" [label="(Literal,\"Process_ipfix [%u] Template size error at %s line %u\")"];
"1000124" [label="(ControlStructure,if ( size_left && size_left < 4 ))"];
"1000176" [label="(Identifier,count)"];
"1000406" [label="(Call,dbg_printf(\"ERROR: Not enough data for template elements! required: %i, left: %u\", size_required, size_left))"];
"1000163" [label="(Call,ipfix_template_record->FieldCount)"];
"1000272" [label="(Call,cache.input_count = count)"];
"1000175" [label="(Literal,\"FieldCount: %u buffersize: %u\n\")"];
"1000620" [label="(Call,DataPtr = DataPtr + size_required+4)"];
"1000456" [label="(Literal,\"Processed: %u\n\")"];
"1000160" [label="(Call,count\t = ntohs(ipfix_template_record->FieldCount))"];
"1000624" [label="(Call,size_required+4)"];
"1000280" [label="(Literal,4)"];
"1000254" [label="(Call,sizeof(struct order_s))"];
"1000455" [label="(Call,dbg_printf(\"Processed: %u\n\", size_required))"];
"1000398" [label="(Literal,\"Process_ipfix: [%u] Not enough data for template elements! required: %i, left: %u\")"];
"1000277" [label="(Call,size_required   = 4*count)"];
"1000253" [label="(Identifier,count)"];
"1000162" [label="(Call,ntohs(ipfix_template_record->FieldCount))"];
"1000621" [label="(Identifier,DataPtr)"];
"1000281" [label="(Identifier,count)"];
"1000628" [label="(Call,size_left < 4)"];
"1000395" [label="(Identifier,size_required)"];
"1000391" [label="(Literal,4)"];
"1000629" [label="(Identifier,size_left)"];
"1000107" [label="(MethodParameterIn,uint32_t size_left)"];
"1000622" [label="(Call,DataPtr + size_required+4)"];
"1000150" [label="(Identifier,DataPtr)"];
"1000287" [label="(Call,LogError(\"Process_ipfix: [%u] Not enough data for template elements! required: %i, left: %u\", \n\t\t\t\t\texporter->info.id, size_required, size_left))"];
"1000161" [label="(Identifier,count)"];
"1000248" [label="(Call,cache.input_order = calloc(count, sizeof(struct order_s)))"];
"1000106" [label="(MethodParameterIn,void *DataPtr)"];
"1000126" [label="(Identifier,size_left)"];
"1000284" [label="(Identifier,size_left)"];
"1000620" -> "1000116"  [label="AST: "];
"1000620" -> "1000622"  [label="CFG: "];
"1000621" -> "1000620"  [label="AST: "];
"1000622" -> "1000620"  [label="AST: "];
"1000629" -> "1000620"  [label="CFG: "];
"1000148" -> "1000620"  [label="DDG: "];
"1000106" -> "1000620"  [label="DDG: "];
"1000455" -> "1000620"  [label="DDG: "];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000148" -> "1000647"  [label="DDG: "];
"1000148" -> "1000146"  [label="DDG: "];
"1000106" -> "1000148"  [label="DDG: "];
"1000148" -> "1000622"  [label="DDG: "];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000647"  [label="DDG: "];
"1000106" -> "1000622"  [label="DDG: "];
"1000455" -> "1000116"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000459" -> "1000455"  [label="CFG: "];
"1000283" -> "1000455"  [label="DDG: "];
"1000393" -> "1000455"  [label="DDG: "];
"1000455" -> "1000617"  [label="DDG: "];
"1000455" -> "1000622"  [label="DDG: "];
"1000455" -> "1000624"  [label="DDG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="CFG: "];
"1000302" -> "1000283"  [label="CFG: "];
"1000283" -> "1000647"  [label="DDG: "];
"1000174" -> "1000283"  [label="DDG: "];
"1000107" -> "1000283"  [label="DDG: "];
"1000277" -> "1000283"  [label="DDG: "];
"1000283" -> "1000287"  [label="DDG: "];
"1000283" -> "1000287"  [label="DDG: "];
"1000283" -> "1000389"  [label="DDG: "];
"1000283" -> "1000393"  [label="DDG: "];
"1000283" -> "1000617"  [label="DDG: "];
"1000174" -> "1000116"  [label="AST: "];
"1000174" -> "1000177"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000177" -> "1000174"  [label="AST: "];
"1000180" -> "1000174"  [label="CFG: "];
"1000174" -> "1000647"  [label="DDG: "];
"1000160" -> "1000174"  [label="DDG: "];
"1000151" -> "1000174"  [label="DDG: "];
"1000107" -> "1000174"  [label="DDG: "];
"1000174" -> "1000252"  [label="DDG: "];
"1000160" -> "1000116"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000167" -> "1000160"  [label="CFG: "];
"1000160" -> "1000647"  [label="DDG: "];
"1000162" -> "1000160"  [label="DDG: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000162" -> "1000647"  [label="DDG: "];
"1000151" -> "1000116"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="CFG: "];
"1000125" -> "1000151"  [label="DDG: "];
"1000107" -> "1000151"  [label="DDG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000132" -> "1000125"  [label="CFG: "];
"1000147" -> "1000125"  [label="CFG: "];
"1000125" -> "1000647"  [label="DDG: "];
"1000125" -> "1000647"  [label="DDG: "];
"1000127" -> "1000125"  [label="DDG: "];
"1000127" -> "1000125"  [label="DDG: "];
"1000107" -> "1000125"  [label="DDG: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000107" -> "1000127"  [label="DDG: "];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000647"  [label="DDG: "];
"1000107" -> "1000142"  [label="DDG: "];
"1000107" -> "1000268"  [label="DDG: "];
"1000107" -> "1000287"  [label="DDG: "];
"1000107" -> "1000296"  [label="DDG: "];
"1000107" -> "1000393"  [label="DDG: "];
"1000107" -> "1000397"  [label="DDG: "];
"1000107" -> "1000406"  [label="DDG: "];
"1000107" -> "1000617"  [label="DDG: "];
"1000107" -> "1000628"  [label="DDG: "];
"1000107" -> "1000632"  [label="DDG: "];
"1000107" -> "1000635"  [label="DDG: "];
"1000277" -> "1000116"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000284" -> "1000277"  [label="CFG: "];
"1000277" -> "1000647"  [label="DDG: "];
"1000279" -> "1000277"  [label="DDG: "];
"1000279" -> "1000277"  [label="DDG: "];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000279" -> "1000647"  [label="DDG: "];
"1000252" -> "1000279"  [label="DDG: "];
"1000279" -> "1000312"  [label="DDG: "];
"1000252" -> "1000248"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000248" -> "1000252"  [label="CFG: "];
"1000252" -> "1000248"  [label="DDG: "];
"1000252" -> "1000272"  [label="DDG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000398" -> "1000393"  [label="CFG: "];
"1000415" -> "1000393"  [label="CFG: "];
"1000393" -> "1000647"  [label="DDG: "];
"1000393" -> "1000389"  [label="DDG: "];
"1000389" -> "1000393"  [label="DDG: "];
"1000393" -> "1000397"  [label="DDG: "];
"1000393" -> "1000397"  [label="DDG: "];
"1000393" -> "1000617"  [label="DDG: "];
"1000389" -> "1000382"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000394" -> "1000389"  [label="CFG: "];
}
