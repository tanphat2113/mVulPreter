digraph "0_Android_d48f0f145f8f0f4472bc0af668ac9a8bce44ba9b_0@API" {
"1000512" [label="(Call,mDataSource->readAt(offset, mSrcBuffer, size))"];
"1000510" [label="(Call,num_bytes_read = mDataSource->readAt(offset, mSrcBuffer, size))"];
"1000517" [label="(Call,num_bytes_read < (ssize_t)size)"];
"1000519" [label="(Call,(ssize_t)size)"];
"1000536" [label="(Call,mBuffer->set_range(0, size))"];
"1000556" [label="(Call,srcOffset < size)"];
"1000563" [label="(Call,srcOffset + mNALLengthSize > size)"];
"1000561" [label="(Call,isMalFormed = (srcOffset + mNALLengthSize > size))"];
"1000573" [label="(Call,!isMalFormed)"];
"1000588" [label="(Call,srcOffset + nalLength > size)"];
"1000586" [label="(Call,isMalFormed = srcOffset + nalLength > size)"];
"1000564" [label="(Call,srcOffset + mNALLengthSize)"];
"1000583" [label="(Call,srcOffset += mNALLengthSize)"];
"1000589" [label="(Call,srcOffset + nalLength)"];
"1000650" [label="(Call,srcOffset += nalLength)"];
"1000656" [label="(Call,CHECK_EQ(srcOffset, size))"];
"1000570" [label="(Identifier,nalLength)"];
"1000656" [label="(Call,CHECK_EQ(srcOffset, size))"];
"1000592" [label="(Identifier,size)"];
"1000591" [label="(Identifier,nalLength)"];
"1000588" [label="(Call,srcOffset + nalLength > size)"];
"1000516" [label="(ControlStructure,if (num_bytes_read < (ssize_t)size))"];
"1000536" [label="(Call,mBuffer->set_range(0, size))"];
"1000577" [label="(Identifier,nalLength)"];
"1000500" [label="(Call,num_bytes_read =\n                mDataSource->readAt(offset, (uint8_t*)mBuffer->data(), size))"];
"1000572" [label="(ControlStructure,if (!isMalFormed))"];
"1000589" [label="(Call,srcOffset + nalLength)"];
"1000652" [label="(Identifier,nalLength)"];
"1000574" [label="(Identifier,isMalFormed)"];
"1000519" [label="(Call,(ssize_t)size)"];
"1000567" [label="(Identifier,size)"];
"1000518" [label="(Identifier,num_bytes_read)"];
"1000666" [label="(Call,mBuffer->meta_data()->clear())"];
"1000559" [label="(Block,)"];
"1000710" [label="(MethodReturn,status_t)"];
"1000509" [label="(Block,)"];
"1000555" [label="(ControlStructure,while (srcOffset < size))"];
"1000651" [label="(Identifier,srcOffset)"];
"1000640" [label="(Call,memcpy(&dstData[dstOffset], &mSrcBuffer[srcOffset], nalLength))"];
"1000513" [label="(Identifier,offset)"];
"1000563" [label="(Call,srcOffset + mNALLengthSize > size)"];
"1000657" [label="(Identifier,srcOffset)"];
"1000564" [label="(Call,srcOffset + mNALLengthSize)"];
"1000537" [label="(Literal,0)"];
"1000576" [label="(Call,nalLength = parseNALSize(&mSrcBuffer[srcOffset]))"];
"1000548" [label="(Call,srcOffset = 0)"];
"1000510" [label="(Call,num_bytes_read = mDataSource->readAt(offset, mSrcBuffer, size))"];
"1000512" [label="(Call,mDataSource->readAt(offset, mSrcBuffer, size))"];
"1000566" [label="(Identifier,mNALLengthSize)"];
"1000557" [label="(Identifier,srcOffset)"];
"1000531" [label="(Block,)"];
"1000575" [label="(Block,)"];
"1000523" [label="(Call,mBuffer->release())"];
"1000521" [label="(Identifier,size)"];
"1000561" [label="(Call,isMalFormed = (srcOffset + mNALLengthSize > size))"];
"1000650" [label="(Call,srcOffset += nalLength)"];
"1000565" [label="(Identifier,srcOffset)"];
"1000590" [label="(Identifier,srcOffset)"];
"1000583" [label="(Call,srcOffset += mNALLengthSize)"];
"1000654" [label="(Identifier,dstOffset)"];
"1000658" [label="(Identifier,size)"];
"1000661" [label="(Identifier,mBuffer)"];
"1000562" [label="(Identifier,isMalFormed)"];
"1000586" [label="(Call,isMalFormed = srcOffset + nalLength > size)"];
"1000540" [label="(Block,)"];
"1000511" [label="(Identifier,num_bytes_read)"];
"1000517" [label="(Call,num_bytes_read < (ssize_t)size)"];
"1000585" [label="(Identifier,mNALLengthSize)"];
"1000538" [label="(Identifier,size)"];
"1000584" [label="(Identifier,srcOffset)"];
"1000530" [label="(Identifier,usesDRM)"];
"1000556" [label="(Call,srcOffset < size)"];
"1000515" [label="(Identifier,size)"];
"1000558" [label="(Identifier,size)"];
"1000573" [label="(Call,!isMalFormed)"];
"1000502" [label="(Call,mDataSource->readAt(offset, (uint8_t*)mBuffer->data(), size))"];
"1000514" [label="(Identifier,mSrcBuffer)"];
"1000587" [label="(Identifier,isMalFormed)"];
"1000594" [label="(Identifier,isMalFormed)"];
"1000512" -> "1000510"  [label="AST: "];
"1000512" -> "1000515"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="AST: "];
"1000515" -> "1000512"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000512" -> "1000710"  [label="DDG: offset"];
"1000512" -> "1000710"  [label="DDG: mSrcBuffer"];
"1000512" -> "1000510"  [label="DDG: offset"];
"1000512" -> "1000510"  [label="DDG: mSrcBuffer"];
"1000512" -> "1000510"  [label="DDG: size"];
"1000512" -> "1000519"  [label="DDG: size"];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000510"  [label="AST: "];
"1000518" -> "1000510"  [label="CFG: "];
"1000510" -> "1000710"  [label="DDG: mDataSource->readAt(offset, mSrcBuffer, size)"];
"1000510" -> "1000517"  [label="DDG: num_bytes_read"];
"1000517" -> "1000516"  [label="AST: "];
"1000517" -> "1000519"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000523" -> "1000517"  [label="CFG: "];
"1000530" -> "1000517"  [label="CFG: "];
"1000517" -> "1000710"  [label="DDG: (ssize_t)size"];
"1000517" -> "1000710"  [label="DDG: num_bytes_read"];
"1000517" -> "1000710"  [label="DDG: num_bytes_read < (ssize_t)size"];
"1000500" -> "1000517"  [label="DDG: num_bytes_read"];
"1000519" -> "1000517"  [label="DDG: size"];
"1000519" -> "1000521"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000519"  [label="AST: "];
"1000519" -> "1000710"  [label="DDG: size"];
"1000502" -> "1000519"  [label="DDG: size"];
"1000519" -> "1000536"  [label="DDG: size"];
"1000519" -> "1000556"  [label="DDG: size"];
"1000536" -> "1000531"  [label="AST: "];
"1000536" -> "1000538"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000666" -> "1000536"  [label="CFG: "];
"1000536" -> "1000710"  [label="DDG: mBuffer->set_range(0, size)"];
"1000536" -> "1000710"  [label="DDG: size"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000558"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000558" -> "1000556"  [label="AST: "];
"1000562" -> "1000556"  [label="CFG: "];
"1000657" -> "1000556"  [label="CFG: "];
"1000556" -> "1000710"  [label="DDG: srcOffset < size"];
"1000650" -> "1000556"  [label="DDG: srcOffset"];
"1000548" -> "1000556"  [label="DDG: srcOffset"];
"1000583" -> "1000556"  [label="DDG: srcOffset"];
"1000588" -> "1000556"  [label="DDG: size"];
"1000563" -> "1000556"  [label="DDG: size"];
"1000556" -> "1000563"  [label="DDG: srcOffset"];
"1000556" -> "1000563"  [label="DDG: size"];
"1000556" -> "1000564"  [label="DDG: srcOffset"];
"1000556" -> "1000583"  [label="DDG: srcOffset"];
"1000556" -> "1000650"  [label="DDG: srcOffset"];
"1000556" -> "1000656"  [label="DDG: srcOffset"];
"1000556" -> "1000656"  [label="DDG: size"];
"1000563" -> "1000561"  [label="AST: "];
"1000563" -> "1000567"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000567" -> "1000563"  [label="AST: "];
"1000561" -> "1000563"  [label="CFG: "];
"1000563" -> "1000710"  [label="DDG: size"];
"1000563" -> "1000710"  [label="DDG: srcOffset + mNALLengthSize"];
"1000563" -> "1000561"  [label="DDG: srcOffset + mNALLengthSize"];
"1000563" -> "1000561"  [label="DDG: size"];
"1000563" -> "1000588"  [label="DDG: size"];
"1000561" -> "1000559"  [label="AST: "];
"1000562" -> "1000561"  [label="AST: "];
"1000570" -> "1000561"  [label="CFG: "];
"1000561" -> "1000710"  [label="DDG: srcOffset + mNALLengthSize > size"];
"1000561" -> "1000573"  [label="DDG: isMalFormed"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000577" -> "1000573"  [label="CFG: "];
"1000594" -> "1000573"  [label="CFG: "];
"1000573" -> "1000710"  [label="DDG: isMalFormed"];
"1000573" -> "1000710"  [label="DDG: !isMalFormed"];
"1000588" -> "1000586"  [label="AST: "];
"1000588" -> "1000592"  [label="CFG: "];
"1000589" -> "1000588"  [label="AST: "];
"1000592" -> "1000588"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000588" -> "1000710"  [label="DDG: srcOffset + nalLength"];
"1000588" -> "1000710"  [label="DDG: size"];
"1000588" -> "1000586"  [label="DDG: srcOffset + nalLength"];
"1000588" -> "1000586"  [label="DDG: size"];
"1000583" -> "1000588"  [label="DDG: srcOffset"];
"1000576" -> "1000588"  [label="DDG: nalLength"];
"1000586" -> "1000575"  [label="AST: "];
"1000587" -> "1000586"  [label="AST: "];
"1000594" -> "1000586"  [label="CFG: "];
"1000586" -> "1000710"  [label="DDG: srcOffset + nalLength > size"];
"1000586" -> "1000710"  [label="DDG: isMalFormed"];
"1000564" -> "1000566"  [label="CFG: "];
"1000565" -> "1000564"  [label="AST: "];
"1000566" -> "1000564"  [label="AST: "];
"1000567" -> "1000564"  [label="CFG: "];
"1000564" -> "1000710"  [label="DDG: mNALLengthSize"];
"1000564" -> "1000710"  [label="DDG: srcOffset"];
"1000583" -> "1000575"  [label="AST: "];
"1000583" -> "1000585"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000585" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="CFG: "];
"1000583" -> "1000710"  [label="DDG: mNALLengthSize"];
"1000583" -> "1000589"  [label="DDG: srcOffset"];
"1000583" -> "1000650"  [label="DDG: srcOffset"];
"1000589" -> "1000591"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000591" -> "1000589"  [label="AST: "];
"1000592" -> "1000589"  [label="CFG: "];
"1000589" -> "1000710"  [label="DDG: srcOffset"];
"1000589" -> "1000710"  [label="DDG: nalLength"];
"1000576" -> "1000589"  [label="DDG: nalLength"];
"1000650" -> "1000559"  [label="AST: "];
"1000650" -> "1000652"  [label="CFG: "];
"1000651" -> "1000650"  [label="AST: "];
"1000652" -> "1000650"  [label="AST: "];
"1000654" -> "1000650"  [label="CFG: "];
"1000640" -> "1000650"  [label="DDG: nalLength"];
"1000656" -> "1000540"  [label="AST: "];
"1000656" -> "1000658"  [label="CFG: "];
"1000657" -> "1000656"  [label="AST: "];
"1000658" -> "1000656"  [label="AST: "];
"1000661" -> "1000656"  [label="CFG: "];
"1000656" -> "1000710"  [label="DDG: CHECK_EQ(srcOffset, size)"];
"1000656" -> "1000710"  [label="DDG: size"];
"1000656" -> "1000710"  [label="DDG: srcOffset"];
}
