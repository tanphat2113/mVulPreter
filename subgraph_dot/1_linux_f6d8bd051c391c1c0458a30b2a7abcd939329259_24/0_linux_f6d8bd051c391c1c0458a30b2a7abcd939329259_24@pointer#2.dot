digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_24@pointer" {
"1000134" [label="(Call,kmalloc(sizeof(struct ip_options) + 40,\n\t\t\t\t\t    sk->sk_allocation))"];
"1000130" [label="(Call,cork->opt = kmalloc(sizeof(struct ip_options) + 40,\n\t\t\t\t\t    sk->sk_allocation))"];
"1000144" [label="(Call,cork->opt == NULL)"];
"1000143" [label="(Call,unlikely(cork->opt == NULL))"];
"1000152" [label="(Call,memcpy(cork->opt, opt, sizeof(struct ip_options) + opt->optlen))"];
"1000186" [label="(Call,*rtp = NULL)"];
"1000233" [label="(Call,cork->page = NULL)"];
"1000146" [label="(Identifier,cork)"];
"1000154" [label="(Identifier,cork)"];
"1000139" [label="(Call,sk->sk_allocation)"];
"1000115" [label="(Call,opt = ipc->opt)"];
"1000186" [label="(Call,*rtp = NULL)"];
"1000245" [label="(MethodReturn,static int)"];
"1000233" [label="(Call,cork->page = NULL)"];
"1000156" [label="(Identifier,opt)"];
"1000145" [label="(Call,cork->opt)"];
"1000237" [label="(Identifier,NULL)"];
"1000135" [label="(Call,sizeof(struct ip_options) + 40)"];
"1000187" [label="(Call,*rtp)"];
"1000122" [label="(Block,)"];
"1000234" [label="(Call,cork->page)"];
"1000157" [label="(Call,sizeof(struct ip_options) + opt->optlen)"];
"1000131" [label="(Call,cork->opt)"];
"1000148" [label="(Identifier,NULL)"];
"1000129" [label="(Block,)"];
"1000152" [label="(Call,memcpy(cork->opt, opt, sizeof(struct ip_options) + opt->optlen))"];
"1000153" [label="(Call,cork->opt)"];
"1000130" [label="(Call,cork->opt = kmalloc(sizeof(struct ip_options) + 40,\n\t\t\t\t\t    sk->sk_allocation))"];
"1000240" [label="(Identifier,cork)"];
"1000189" [label="(Identifier,NULL)"];
"1000151" [label="(Identifier,ENOBUFS)"];
"1000142" [label="(ControlStructure,if (unlikely(cork->opt == NULL)))"];
"1000143" [label="(Call,unlikely(cork->opt == NULL))"];
"1000107" [label="(Block,)"];
"1000192" [label="(Identifier,cork)"];
"1000124" [label="(Call,cork->opt == NULL)"];
"1000165" [label="(Identifier,cork)"];
"1000134" [label="(Call,kmalloc(sizeof(struct ip_options) + 40,\n\t\t\t\t\t    sk->sk_allocation))"];
"1000144" [label="(Call,cork->opt == NULL)"];
"1000134" -> "1000130"  [label="AST: "];
"1000134" -> "1000139"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000134" -> "1000245"  [label="DDG: sk->sk_allocation"];
"1000134" -> "1000245"  [label="DDG: sizeof(struct ip_options) + 40"];
"1000134" -> "1000130"  [label="DDG: sizeof(struct ip_options) + 40"];
"1000134" -> "1000130"  [label="DDG: sk->sk_allocation"];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000130"  [label="AST: "];
"1000146" -> "1000130"  [label="CFG: "];
"1000130" -> "1000245"  [label="DDG: kmalloc(sizeof(struct ip_options) + 40,\n\t\t\t\t\t    sk->sk_allocation)"];
"1000130" -> "1000144"  [label="DDG: cork->opt"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000148" -> "1000144"  [label="AST: "];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000245"  [label="DDG: NULL"];
"1000144" -> "1000245"  [label="DDG: cork->opt"];
"1000144" -> "1000143"  [label="DDG: cork->opt"];
"1000144" -> "1000143"  [label="DDG: NULL"];
"1000124" -> "1000144"  [label="DDG: NULL"];
"1000144" -> "1000152"  [label="DDG: cork->opt"];
"1000144" -> "1000186"  [label="DDG: NULL"];
"1000144" -> "1000233"  [label="DDG: NULL"];
"1000143" -> "1000142"  [label="AST: "];
"1000151" -> "1000143"  [label="CFG: "];
"1000154" -> "1000143"  [label="CFG: "];
"1000143" -> "1000245"  [label="DDG: cork->opt == NULL"];
"1000143" -> "1000245"  [label="DDG: unlikely(cork->opt == NULL)"];
"1000152" -> "1000122"  [label="AST: "];
"1000152" -> "1000157"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="AST: "];
"1000165" -> "1000152"  [label="CFG: "];
"1000152" -> "1000245"  [label="DDG: sizeof(struct ip_options) + opt->optlen"];
"1000152" -> "1000245"  [label="DDG: memcpy(cork->opt, opt, sizeof(struct ip_options) + opt->optlen)"];
"1000152" -> "1000245"  [label="DDG: cork->opt"];
"1000152" -> "1000245"  [label="DDG: opt"];
"1000124" -> "1000152"  [label="DDG: cork->opt"];
"1000115" -> "1000152"  [label="DDG: opt"];
"1000186" -> "1000107"  [label="AST: "];
"1000186" -> "1000189"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000189" -> "1000186"  [label="AST: "];
"1000192" -> "1000186"  [label="CFG: "];
"1000186" -> "1000245"  [label="DDG: *rtp"];
"1000124" -> "1000186"  [label="DDG: NULL"];
"1000233" -> "1000107"  [label="AST: "];
"1000233" -> "1000237"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1000245"  [label="DDG: NULL"];
"1000233" -> "1000245"  [label="DDG: cork->page"];
"1000124" -> "1000233"  [label="DDG: NULL"];
}
