digraph "0_linux_008ba2a13f2d04c947adc536d19debb8fe66f110@API" {
"1000496" [label="(Call,kfree(match))"];
"1000283" [label="(Call,!match)"];
"1000274" [label="(Call,match && match->flags != flags)"];
"1000245" [label="(Call,match = NULL)"];
"1000276" [label="(Call,match->flags != flags)"];
"1000124" [label="(Call,flags = type_flags >> 8)"];
"1000126" [label="(Call,type_flags >> 8)"];
"1000120" [label="(Call,type_flags & 0xff)"];
"1000104" [label="(MethodParameterIn,u16 type_flags)"];
"1000239" [label="(Call,flags &= ~(PACKET_FANOUT_FLAG_UNIQUEID >> 8))"];
"1000241" [label="(Call,~(PACKET_FANOUT_FLAG_UNIQUEID >> 8))"];
"1000242" [label="(Call,PACKET_FANOUT_FLAG_UNIQUEID >> 8)"];
"1000213" [label="(Call,type_flags & PACKET_FANOUT_FLAG_UNIQUEID)"];
"1000135" [label="(Call,type_flags & PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000170" [label="(Call,type_flags & PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000339" [label="(Call,fanout_init_data(match))"];
"1000298" [label="(Call,!match)"];
"1000290" [label="(Call,match = kzalloc(sizeof(*match), GFP_KERNEL))"];
"1000292" [label="(Call,kzalloc(sizeof(*match), GFP_KERNEL))"];
"1000180" [label="(Call,kzalloc(sizeof(*rollover), GFP_KERNEL))"];
"1000275" [label="(Identifier,match)"];
"1000131" [label="(Identifier,type)"];
"1000284" [label="(Identifier,match)"];
"1000242" [label="(Call,PACKET_FANOUT_FLAG_UNIQUEID >> 8)"];
"1000243" [label="(Identifier,PACKET_FANOUT_FLAG_UNIQUEID)"];
"1000213" [label="(Call,type_flags & PACKET_FANOUT_FLAG_UNIQUEID)"];
"1000276" [label="(Call,match->flags != flags)"];
"1000137" [label="(Identifier,PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000104" [label="(MethodParameterIn,u16 type_flags)"];
"1000141" [label="(JumpTarget,case PACKET_FANOUT_HASH:)"];
"1000219" [label="(Identifier,id)"];
"1000283" [label="(Call,!match)"];
"1000118" [label="(Call,type = type_flags & 0xff)"];
"1000172" [label="(Identifier,PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000285" [label="(Block,)"];
"1000298" [label="(Call,!match)"];
"1000120" [label="(Call,type_flags & 0xff)"];
"1000296" [label="(Identifier,GFP_KERNEL)"];
"1000453" [label="(Call,po->fanout = match)"];
"1000496" [label="(Call,kfree(match))"];
"1000497" [label="(Identifier,match)"];
"1000214" [label="(Identifier,type_flags)"];
"1000340" [label="(Identifier,match)"];
"1000140" [label="(Identifier,EINVAL)"];
"1000125" [label="(Identifier,flags)"];
"1000171" [label="(Identifier,type_flags)"];
"1000136" [label="(Identifier,type_flags)"];
"1000318" [label="(Call,match->flags = flags)"];
"1000121" [label="(Identifier,type_flags)"];
"1000239" [label="(Call,flags &= ~(PACKET_FANOUT_FLAG_UNIQUEID >> 8))"];
"1000181" [label="(Call,sizeof(*rollover))"];
"1000127" [label="(Identifier,type_flags)"];
"1000166" [label="(Call,type == PACKET_FANOUT_ROLLOVER ||\n\t    (type_flags & PACKET_FANOUT_FLAG_ROLLOVER))"];
"1000134" [label="(ControlStructure,if (type_flags & PACKET_FANOUT_FLAG_ROLLOVER))"];
"1000247" [label="(Identifier,NULL)"];
"1000128" [label="(Literal,8)"];
"1000370" [label="(Call,match->prot_hook.af_packet_priv = match)"];
"1000126" [label="(Call,type_flags >> 8)"];
"1000135" [label="(Call,type_flags & PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000392" [label="(Identifier,err)"];
"1000490" [label="(Block,)"];
"1000339" [label="(Call,fanout_init_data(match))"];
"1000240" [label="(Identifier,flags)"];
"1000244" [label="(Literal,8)"];
"1000498" [label="(JumpTarget,out:)"];
"1000212" [label="(ControlStructure,if (type_flags & PACKET_FANOUT_FLAG_UNIQUEID))"];
"1000299" [label="(Identifier,match)"];
"1000304" [label="(Identifier,match)"];
"1000122" [label="(Literal,0xff)"];
"1000105" [label="(Block,)"];
"1000246" [label="(Identifier,match)"];
"1000282" [label="(ControlStructure,if (!match))"];
"1000253" [label="(Identifier,f)"];
"1000290" [label="(Call,match = kzalloc(sizeof(*match), GFP_KERNEL))"];
"1000277" [label="(Call,match->flags)"];
"1000287" [label="(Identifier,err)"];
"1000170" [label="(Call,type_flags & PACKET_FANOUT_FLAG_ROLLOVER)"];
"1000516" [label="(MethodReturn,static int)"];
"1000292" [label="(Call,kzalloc(sizeof(*match), GFP_KERNEL))"];
"1000180" [label="(Call,kzalloc(sizeof(*rollover), GFP_KERNEL))"];
"1000215" [label="(Identifier,PACKET_FANOUT_FLAG_UNIQUEID)"];
"1000297" [label="(ControlStructure,if (!match))"];
"1000178" [label="(Call,rollover = kzalloc(sizeof(*rollover), GFP_KERNEL))"];
"1000291" [label="(Identifier,match)"];
"1000241" [label="(Call,~(PACKET_FANOUT_FLAG_UNIQUEID >> 8))"];
"1000293" [label="(Call,sizeof(*match))"];
"1000245" [label="(Call,match = NULL)"];
"1000273" [label="(ControlStructure,if (match && match->flags != flags))"];
"1000300" [label="(ControlStructure,goto out;)"];
"1000344" [label="(Identifier,match)"];
"1000274" [label="(Call,match && match->flags != flags)"];
"1000281" [label="(ControlStructure,goto out;)"];
"1000280" [label="(Identifier,flags)"];
"1000216" [label="(Block,)"];
"1000124" [label="(Call,flags = type_flags >> 8)"];
"1000184" [label="(Identifier,GFP_KERNEL)"];
"1000496" -> "1000490"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="CFG: "];
"1000496" -> "1000516"  [label="DDG: kfree(match)"];
"1000496" -> "1000516"  [label="DDG: match"];
"1000283" -> "1000496"  [label="DDG: match"];
"1000339" -> "1000496"  [label="DDG: match"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000392" -> "1000283"  [label="CFG: "];
"1000283" -> "1000516"  [label="DDG: match"];
"1000283" -> "1000516"  [label="DDG: !match"];
"1000274" -> "1000283"  [label="DDG: match"];
"1000283" -> "1000453"  [label="DDG: match"];
"1000274" -> "1000273"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000281" -> "1000274"  [label="CFG: "];
"1000284" -> "1000274"  [label="CFG: "];
"1000274" -> "1000516"  [label="DDG: match"];
"1000274" -> "1000516"  [label="DDG: match && match->flags != flags"];
"1000274" -> "1000516"  [label="DDG: match->flags != flags"];
"1000245" -> "1000274"  [label="DDG: match"];
"1000276" -> "1000274"  [label="DDG: match->flags"];
"1000276" -> "1000274"  [label="DDG: flags"];
"1000245" -> "1000105"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000247" -> "1000245"  [label="AST: "];
"1000253" -> "1000245"  [label="CFG: "];
"1000245" -> "1000516"  [label="DDG: NULL"];
"1000276" -> "1000280"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="AST: "];
"1000276" -> "1000516"  [label="DDG: flags"];
"1000276" -> "1000516"  [label="DDG: match->flags"];
"1000124" -> "1000276"  [label="DDG: flags"];
"1000239" -> "1000276"  [label="DDG: flags"];
"1000276" -> "1000318"  [label="DDG: flags"];
"1000124" -> "1000105"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000131" -> "1000124"  [label="CFG: "];
"1000124" -> "1000516"  [label="DDG: type_flags >> 8"];
"1000124" -> "1000516"  [label="DDG: flags"];
"1000126" -> "1000124"  [label="DDG: type_flags"];
"1000126" -> "1000124"  [label="DDG: 8"];
"1000124" -> "1000239"  [label="DDG: flags"];
"1000124" -> "1000318"  [label="DDG: flags"];
"1000126" -> "1000128"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000128" -> "1000126"  [label="AST: "];
"1000126" -> "1000516"  [label="DDG: type_flags"];
"1000120" -> "1000126"  [label="DDG: type_flags"];
"1000104" -> "1000126"  [label="DDG: type_flags"];
"1000126" -> "1000135"  [label="DDG: type_flags"];
"1000126" -> "1000170"  [label="DDG: type_flags"];
"1000126" -> "1000213"  [label="DDG: type_flags"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000118"  [label="DDG: type_flags"];
"1000120" -> "1000118"  [label="DDG: 0xff"];
"1000104" -> "1000120"  [label="DDG: type_flags"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000516"  [label="DDG: type_flags"];
"1000104" -> "1000135"  [label="DDG: type_flags"];
"1000104" -> "1000170"  [label="DDG: type_flags"];
"1000104" -> "1000213"  [label="DDG: type_flags"];
"1000239" -> "1000216"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000239" -> "1000516"  [label="DDG: flags &= ~(PACKET_FANOUT_FLAG_UNIQUEID >> 8)"];
"1000239" -> "1000516"  [label="DDG: flags"];
"1000239" -> "1000516"  [label="DDG: ~(PACKET_FANOUT_FLAG_UNIQUEID >> 8)"];
"1000241" -> "1000239"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID >> 8"];
"1000239" -> "1000318"  [label="DDG: flags"];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000241" -> "1000516"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID >> 8"];
"1000242" -> "1000241"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID"];
"1000242" -> "1000241"  [label="DDG: 8"];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000242" -> "1000516"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID"];
"1000213" -> "1000242"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="CFG: "];
"1000246" -> "1000213"  [label="CFG: "];
"1000213" -> "1000516"  [label="DDG: type_flags"];
"1000213" -> "1000516"  [label="DDG: type_flags & PACKET_FANOUT_FLAG_UNIQUEID"];
"1000213" -> "1000516"  [label="DDG: PACKET_FANOUT_FLAG_UNIQUEID"];
"1000135" -> "1000213"  [label="DDG: type_flags"];
"1000170" -> "1000213"  [label="DDG: type_flags"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000140" -> "1000135"  [label="CFG: "];
"1000141" -> "1000135"  [label="CFG: "];
"1000135" -> "1000516"  [label="DDG: type_flags & PACKET_FANOUT_FLAG_ROLLOVER"];
"1000135" -> "1000516"  [label="DDG: type_flags"];
"1000135" -> "1000516"  [label="DDG: PACKET_FANOUT_FLAG_ROLLOVER"];
"1000135" -> "1000166"  [label="DDG: type_flags & PACKET_FANOUT_FLAG_ROLLOVER"];
"1000135" -> "1000170"  [label="DDG: type_flags"];
"1000135" -> "1000170"  [label="DDG: PACKET_FANOUT_FLAG_ROLLOVER"];
"1000170" -> "1000166"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000166" -> "1000170"  [label="CFG: "];
"1000170" -> "1000516"  [label="DDG: PACKET_FANOUT_FLAG_ROLLOVER"];
"1000170" -> "1000516"  [label="DDG: type_flags"];
"1000170" -> "1000166"  [label="DDG: type_flags"];
"1000170" -> "1000166"  [label="DDG: PACKET_FANOUT_FLAG_ROLLOVER"];
"1000339" -> "1000285"  [label="AST: "];
"1000339" -> "1000340"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000344" -> "1000339"  [label="CFG: "];
"1000339" -> "1000516"  [label="DDG: fanout_init_data(match)"];
"1000298" -> "1000339"  [label="DDG: match"];
"1000339" -> "1000370"  [label="DDG: match"];
"1000339" -> "1000453"  [label="DDG: match"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="CFG: "];
"1000304" -> "1000298"  [label="CFG: "];
"1000298" -> "1000516"  [label="DDG: !match"];
"1000298" -> "1000516"  [label="DDG: match"];
"1000290" -> "1000298"  [label="DDG: match"];
"1000290" -> "1000285"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000299" -> "1000290"  [label="CFG: "];
"1000290" -> "1000516"  [label="DDG: kzalloc(sizeof(*match), GFP_KERNEL)"];
"1000292" -> "1000290"  [label="DDG: GFP_KERNEL"];
"1000292" -> "1000296"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="AST: "];
"1000292" -> "1000516"  [label="DDG: GFP_KERNEL"];
"1000180" -> "1000292"  [label="DDG: GFP_KERNEL"];
"1000180" -> "1000178"  [label="AST: "];
"1000180" -> "1000184"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000184" -> "1000180"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000180" -> "1000516"  [label="DDG: GFP_KERNEL"];
"1000180" -> "1000178"  [label="DDG: GFP_KERNEL"];
}
