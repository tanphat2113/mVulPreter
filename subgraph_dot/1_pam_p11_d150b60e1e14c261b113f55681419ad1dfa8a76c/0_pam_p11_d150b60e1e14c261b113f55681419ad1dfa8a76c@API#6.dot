digraph "0_pam_p11_d150b60e1e14c261b113f55681419ad1dfa8a76c@API" {
"1000113" [label="(Call,siglen = sizeof signature)"];
"1000200" [label="(Call,EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000198" [label="(Call,1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000191" [label="(Call,!EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000186" [label="(Call,!EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000182" [label="(Call,!EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000174" [label="(Call,!EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000167" [label="(Call,!EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000162" [label="(Call,!EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000158" [label="(Call,NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000154" [label="(Call,NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000150" [label="(Call,NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000146" [label="(Call,NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000225" [label="(Call,NULL != pubkey)"];
"1000228" [label="(Call,EVP_PKEY_free(pubkey))"];
"1000231" [label="(Call,NULL != privkey)"];
"1000234" [label="(Call,EVP_PKEY_free(privkey))"];
"1000237" [label="(Call,NULL != md_ctx)"];
"1000241" [label="(Call,EVP_MD_CTX_free(md_ctx))"];
"1000233" [label="(Identifier,privkey)"];
"1000114" [label="(Identifier,siglen)"];
"1000237" [label="(Call,NULL != md_ctx)"];
"1000200" [label="(Call,EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000174" [label="(Call,!EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000212" [label="(Call,prompt(flags, pamh, PAM_ERROR_MSG, NULL, _(\"Error verifying key\")))"];
"1000175" [label="(Call,!EVP_SignFinal(md_ctx, signature, &siglen, privkey))"];
"1000245" [label="(MethodReturn,static int)"];
"1000146" [label="(Call,NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000126" [label="(Call,*privkey = PKCS11_get_private_key(authkey))"];
"1000188" [label="(Call,EVP_VerifyInit(md_ctx, md))"];
"1000234" [label="(Call,EVP_PKEY_free(privkey))"];
"1000191" [label="(Call,!EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000186" [label="(Call,!EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000221" [label="(Identifier,ok)"];
"1000164" [label="(Call,EVP_SignInit(md_ctx, md))"];
"1000158" [label="(Call,NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000131" [label="(Call,*pubkey = PKCS11_get_public_key(authkey))"];
"1000231" [label="(Call,NULL != privkey)"];
"1000238" [label="(Identifier,NULL)"];
"1000199" [label="(Literal,1)"];
"1000183" [label="(Call,!EVP_MD_CTX_reset(md_ctx))"];
"1000198" [label="(Call,1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000241" [label="(Call,EVP_MD_CTX_free(md_ctx))"];
"1000113" [label="(Call,siglen = sizeof signature)"];
"1000162" [label="(Call,!EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000115" [label="(Call,sizeof signature)"];
"1000225" [label="(Call,NULL != pubkey)"];
"1000145" [label="(ControlStructure,if (NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)))"];
"1000224" [label="(ControlStructure,if (NULL != pubkey))"];
"1000169" [label="(Call,EVP_SignUpdate(md_ctx, challenge, sizeof challenge))"];
"1000119" [label="(Identifier,md)"];
"1000159" [label="(Call,NULL == md)"];
"1000202" [label="(Identifier,signature)"];
"1000163" [label="(Call,!EVP_SignInit(md_ctx, md))"];
"1000240" [label="(Block,)"];
"1000187" [label="(Call,!EVP_VerifyInit(md_ctx, md))"];
"1000150" [label="(Call,NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000105" [label="(Block,)"];
"1000122" [label="(Call,*md_ctx = EVP_MD_CTX_new())"];
"1000167" [label="(Call,!EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000235" [label="(Identifier,privkey)"];
"1000192" [label="(Call,!EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge))"];
"1000193" [label="(Call,EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge))"];
"1000182" [label="(Call,!EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000168" [label="(Call,!EVP_SignUpdate(md_ctx, challenge, sizeof challenge))"];
"1000151" [label="(Call,NULL == privkey)"];
"1000232" [label="(Identifier,NULL)"];
"1000204" [label="(Identifier,pubkey)"];
"1000155" [label="(Call,NULL == md_ctx)"];
"1000230" [label="(ControlStructure,if (NULL != privkey))"];
"1000207" [label="(Identifier,pamh)"];
"1000226" [label="(Identifier,NULL)"];
"1000242" [label="(Identifier,md_ctx)"];
"1000154" [label="(Call,NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey))"];
"1000201" [label="(Identifier,md_ctx)"];
"1000228" [label="(Call,EVP_PKEY_free(pubkey))"];
"1000147" [label="(Call,NULL == pubkey)"];
"1000203" [label="(Identifier,siglen)"];
"1000244" [label="(Identifier,ok)"];
"1000236" [label="(ControlStructure,if (NULL != md_ctx))"];
"1000176" [label="(Call,EVP_SignFinal(md_ctx, signature, &siglen, privkey))"];
"1000227" [label="(Identifier,pubkey)"];
"1000239" [label="(Identifier,md_ctx)"];
"1000184" [label="(Call,EVP_MD_CTX_reset(md_ctx))"];
"1000229" [label="(Identifier,pubkey)"];
"1000113" -> "1000105"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000119" -> "1000113"  [label="CFG: "];
"1000113" -> "1000245"  [label="DDG: siglen"];
"1000113" -> "1000200"  [label="DDG: siglen"];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000204"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000203" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000200" -> "1000245"  [label="DDG: siglen"];
"1000200" -> "1000245"  [label="DDG: signature"];
"1000200" -> "1000198"  [label="DDG: md_ctx"];
"1000200" -> "1000198"  [label="DDG: signature"];
"1000200" -> "1000198"  [label="DDG: siglen"];
"1000200" -> "1000198"  [label="DDG: pubkey"];
"1000193" -> "1000200"  [label="DDG: md_ctx"];
"1000176" -> "1000200"  [label="DDG: signature"];
"1000147" -> "1000200"  [label="DDG: pubkey"];
"1000200" -> "1000225"  [label="DDG: pubkey"];
"1000200" -> "1000237"  [label="DDG: md_ctx"];
"1000198" -> "1000191"  [label="AST: "];
"1000199" -> "1000198"  [label="AST: "];
"1000191" -> "1000198"  [label="CFG: "];
"1000198" -> "1000245"  [label="DDG: EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000198" -> "1000191"  [label="DDG: 1"];
"1000198" -> "1000191"  [label="DDG: EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000191" -> "1000186"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000186" -> "1000191"  [label="CFG: "];
"1000191" -> "1000245"  [label="DDG: !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)"];
"1000191" -> "1000245"  [label="DDG: 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000191" -> "1000186"  [label="DDG: !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)"];
"1000191" -> "1000186"  [label="DDG: 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000192" -> "1000191"  [label="DDG: EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)"];
"1000186" -> "1000182"  [label="AST: "];
"1000186" -> "1000187"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000182" -> "1000186"  [label="CFG: "];
"1000186" -> "1000245"  [label="DDG: !EVP_VerifyInit(md_ctx, md)"];
"1000186" -> "1000245"  [label="DDG: !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000186" -> "1000182"  [label="DDG: !EVP_VerifyInit(md_ctx, md)"];
"1000186" -> "1000182"  [label="DDG: !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000187" -> "1000186"  [label="DDG: EVP_VerifyInit(md_ctx, md)"];
"1000182" -> "1000174"  [label="AST: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000174" -> "1000182"  [label="CFG: "];
"1000182" -> "1000245"  [label="DDG: !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000182" -> "1000245"  [label="DDG: !EVP_MD_CTX_reset(md_ctx)"];
"1000182" -> "1000174"  [label="DDG: !EVP_MD_CTX_reset(md_ctx)"];
"1000182" -> "1000174"  [label="DDG: !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000183" -> "1000182"  [label="DDG: EVP_MD_CTX_reset(md_ctx)"];
"1000174" -> "1000167"  [label="AST: "];
"1000174" -> "1000175"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000167" -> "1000174"  [label="CFG: "];
"1000174" -> "1000245"  [label="DDG: !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000174" -> "1000245"  [label="DDG: !EVP_SignFinal(md_ctx, signature, &siglen, privkey)"];
"1000174" -> "1000167"  [label="DDG: !EVP_SignFinal(md_ctx, signature, &siglen, privkey)"];
"1000174" -> "1000167"  [label="DDG: !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000175" -> "1000174"  [label="DDG: EVP_SignFinal(md_ctx, signature, &siglen, privkey)"];
"1000167" -> "1000162"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000162" -> "1000167"  [label="CFG: "];
"1000167" -> "1000245"  [label="DDG: !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)"];
"1000167" -> "1000245"  [label="DDG: !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000167" -> "1000162"  [label="DDG: !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)"];
"1000167" -> "1000162"  [label="DDG: !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000168" -> "1000167"  [label="DDG: EVP_SignUpdate(md_ctx, challenge, sizeof challenge)"];
"1000162" -> "1000158"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000162" -> "1000245"  [label="DDG: !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000162" -> "1000245"  [label="DDG: !EVP_SignInit(md_ctx, md)"];
"1000162" -> "1000158"  [label="DDG: !EVP_SignInit(md_ctx, md)"];
"1000162" -> "1000158"  [label="DDG: !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000163" -> "1000162"  [label="DDG: EVP_SignInit(md_ctx, md)"];
"1000158" -> "1000154"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000154" -> "1000158"  [label="CFG: "];
"1000158" -> "1000245"  [label="DDG: NULL == md"];
"1000158" -> "1000245"  [label="DDG: !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000158" -> "1000154"  [label="DDG: NULL == md"];
"1000158" -> "1000154"  [label="DDG: !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000159" -> "1000158"  [label="DDG: NULL"];
"1000159" -> "1000158"  [label="DDG: md"];
"1000154" -> "1000150"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000154" -> "1000245"  [label="DDG: NULL == md_ctx"];
"1000154" -> "1000245"  [label="DDG: NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000154" -> "1000150"  [label="DDG: NULL == md_ctx"];
"1000154" -> "1000150"  [label="DDG: NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000155" -> "1000154"  [label="DDG: NULL"];
"1000155" -> "1000154"  [label="DDG: md_ctx"];
"1000150" -> "1000146"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000146" -> "1000150"  [label="CFG: "];
"1000150" -> "1000245"  [label="DDG: NULL == privkey"];
"1000150" -> "1000245"  [label="DDG: NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000150" -> "1000146"  [label="DDG: NULL == privkey"];
"1000150" -> "1000146"  [label="DDG: NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000151" -> "1000150"  [label="DDG: NULL"];
"1000151" -> "1000150"  [label="DDG: privkey"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000207" -> "1000146"  [label="CFG: "];
"1000221" -> "1000146"  [label="CFG: "];
"1000146" -> "1000245"  [label="DDG: NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000146" -> "1000245"  [label="DDG: NULL == pubkey || NULL == privkey || NULL == md_ctx || NULL == md\n\t\t\t|| !EVP_SignInit(md_ctx, md)\n\t\t\t|| !EVP_SignUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| !EVP_SignFinal(md_ctx, signature, &siglen, privkey)\n\t\t\t|| !EVP_MD_CTX_reset(md_ctx)\n\t\t\t|| !EVP_VerifyInit(md_ctx, md)\n\t\t\t|| !EVP_VerifyUpdate(md_ctx, challenge, sizeof challenge)\n\t\t\t|| 1 != EVP_VerifyFinal(md_ctx, signature, siglen, pubkey)"];
"1000146" -> "1000245"  [label="DDG: NULL == pubkey"];
"1000147" -> "1000146"  [label="DDG: NULL"];
"1000147" -> "1000146"  [label="DDG: pubkey"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="CFG: "];
"1000232" -> "1000225"  [label="CFG: "];
"1000225" -> "1000245"  [label="DDG: NULL != pubkey"];
"1000225" -> "1000245"  [label="DDG: pubkey"];
"1000212" -> "1000225"  [label="DDG: NULL"];
"1000159" -> "1000225"  [label="DDG: NULL"];
"1000151" -> "1000225"  [label="DDG: NULL"];
"1000147" -> "1000225"  [label="DDG: NULL"];
"1000147" -> "1000225"  [label="DDG: pubkey"];
"1000155" -> "1000225"  [label="DDG: NULL"];
"1000131" -> "1000225"  [label="DDG: pubkey"];
"1000225" -> "1000228"  [label="DDG: pubkey"];
"1000225" -> "1000231"  [label="DDG: NULL"];
"1000228" -> "1000224"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="CFG: "];
"1000228" -> "1000245"  [label="DDG: EVP_PKEY_free(pubkey)"];
"1000228" -> "1000245"  [label="DDG: pubkey"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="CFG: "];
"1000238" -> "1000231"  [label="CFG: "];
"1000231" -> "1000245"  [label="DDG: privkey"];
"1000231" -> "1000245"  [label="DDG: NULL != privkey"];
"1000176" -> "1000231"  [label="DDG: privkey"];
"1000126" -> "1000231"  [label="DDG: privkey"];
"1000151" -> "1000231"  [label="DDG: privkey"];
"1000231" -> "1000234"  [label="DDG: privkey"];
"1000231" -> "1000237"  [label="DDG: NULL"];
"1000234" -> "1000230"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000234"  [label="AST: "];
"1000238" -> "1000234"  [label="CFG: "];
"1000234" -> "1000245"  [label="DDG: privkey"];
"1000234" -> "1000245"  [label="DDG: EVP_PKEY_free(privkey)"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000242" -> "1000237"  [label="CFG: "];
"1000244" -> "1000237"  [label="CFG: "];
"1000237" -> "1000245"  [label="DDG: NULL != md_ctx"];
"1000237" -> "1000245"  [label="DDG: md_ctx"];
"1000237" -> "1000245"  [label="DDG: NULL"];
"1000184" -> "1000237"  [label="DDG: md_ctx"];
"1000155" -> "1000237"  [label="DDG: md_ctx"];
"1000188" -> "1000237"  [label="DDG: md_ctx"];
"1000122" -> "1000237"  [label="DDG: md_ctx"];
"1000164" -> "1000237"  [label="DDG: md_ctx"];
"1000193" -> "1000237"  [label="DDG: md_ctx"];
"1000176" -> "1000237"  [label="DDG: md_ctx"];
"1000169" -> "1000237"  [label="DDG: md_ctx"];
"1000237" -> "1000241"  [label="DDG: md_ctx"];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="CFG: "];
"1000241" -> "1000245"  [label="DDG: md_ctx"];
"1000241" -> "1000245"  [label="DDG: EVP_MD_CTX_free(md_ctx)"];
}
