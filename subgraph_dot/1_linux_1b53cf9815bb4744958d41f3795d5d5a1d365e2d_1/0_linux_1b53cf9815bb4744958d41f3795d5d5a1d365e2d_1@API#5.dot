digraph "0_linux_1b53cf9815bb4744958d41f3795d5d5a1d365e2d_1@API" {
"1000315" [label="(Call,raw_key = kmalloc(FS_MAX_KEY_SIZE, GFP_NOFS))"];
"1000317" [label="(Call,kmalloc(FS_MAX_KEY_SIZE, GFP_NOFS))"];
"1000248" [label="(Call,kmem_cache_alloc(fscrypt_info_cachep, GFP_NOFS))"];
"1000321" [label="(Call,!raw_key)"];
"1000326" [label="(Call,validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX))"];
"1000171" [label="(Call,inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000169" [label="(Call,res = inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000178" [label="(Call,res < 0)"];
"1000189" [label="(Return,return res;)"];
"1000220" [label="(Call,res != sizeof(ctx))"];
"1000185" [label="(Call,fscrypt_dummy_context_enabled(inode))"];
"1000184" [label="(Call,!fscrypt_dummy_context_enabled(inode))"];
"1000183" [label="(Call,!fscrypt_dummy_context_enabled(inode) ||\n\t\t    inode->i_sb->s_cop->is_encrypted(inode))"];
"1000187" [label="(Call,inode->i_sb->s_cop->is_encrypted(inode))"];
"1000301" [label="(Call,determine_cipher_type(crypt_info, inode, &cipher_str, &keysize))"];
"1000165" [label="(Call,fscrypt_put_encryption_info(inode, crypt_info))"];
"1000299" [label="(Call,res = determine_cipher_type(crypt_info, inode, &cipher_str, &keysize))"];
"1000441" [label="(Call,res == -ENOKEY)"];
"1000452" [label="(Return,return res;)"];
"1000448" [label="(Call,put_crypt_info(crypt_info))"];
"1000191" [label="(Call,memset(&ctx, 0, sizeof(ctx)))"];
"1000324" [label="(Call,res = validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX))"];
"1000333" [label="(Call,res && inode->i_sb->s_cop->key_prefix)"];
"1000346" [label="(Call,validate_user_key(crypt_info, &ctx, raw_key,\n\t\t\t\t\t     inode->i_sb->s_cop->key_prefix))"];
"1000344" [label="(Call,res2 = validate_user_key(crypt_info, &ctx, raw_key,\n\t\t\t\t\t     inode->i_sb->s_cop->key_prefix))"];
"1000362" [label="(Call,res2 == -ENOKEY)"];
"1000411" [label="(Call,crypto_skcipher_setkey(ctfm, raw_key, keysize))"];
"1000409" [label="(Call,res = crypto_skcipher_setkey(ctfm, raw_key, keysize))"];
"1000418" [label="(Call,kzfree(raw_key))"];
"1000450" [label="(Call,kzfree(raw_key))"];
"1000425" [label="(Call,cmpxchg(&inode->i_crypt_info, NULL, crypt_info))"];
"1000144" [label="(Call,ACCESS_ONCE(inode->i_crypt_info))"];
"1000142" [label="(Call,crypt_info = ACCESS_ONCE(inode->i_crypt_info))"];
"1000424" [label="(Call,cmpxchg(&inode->i_crypt_info, NULL, crypt_info) != NULL)"];
"1000278" [label="(Call,crypt_info->ci_ctfm = NULL)"];
"1000283" [label="(Call,crypt_info->ci_keyring_key = NULL)"];
"1000153" [label="(Call,!crypt_info->ci_keyring_key)"];
"1000152" [label="(Call,!crypt_info->ci_keyring_key ||\n\t\t\t\tkey_validate(crypt_info->ci_keyring_key) == 0)"];
"1000158" [label="(Call,key_validate(crypt_info->ci_keyring_key))"];
"1000157" [label="(Call,key_validate(crypt_info->ci_keyring_key) == 0)"];
"1000420" [label="(Call,raw_key = NULL)"];
"1000434" [label="(Call,put_crypt_info(crypt_info))"];
"1000227" [label="(Identifier,EINVAL)"];
"1000283" [label="(Call,crypt_info->ci_keyring_key = NULL)"];
"1000177" [label="(ControlStructure,if (res < 0))"];
"1000438" [label="(Literal,0)"];
"1000359" [label="(Identifier,res2)"];
"1000443" [label="(Call,-ENOKEY)"];
"1000279" [label="(Call,crypt_info->ci_ctfm)"];
"1000420" [label="(Call,raw_key = NULL)"];
"1000252" [label="(Call,!crypt_info)"];
"1000367" [label="(Identifier,res)"];
"1000416" [label="(Identifier,res)"];
"1000406" [label="(Call,crypto_skcipher_set_flags(ctfm, CRYPTO_TFM_REQ_WEAK_KEY))"];
"1000166" [label="(Identifier,inode)"];
"1000335" [label="(Call,inode->i_sb->s_cop->key_prefix)"];
"1000187" [label="(Call,inode->i_sb->s_cop->is_encrypted(inode))"];
"1000250" [label="(Identifier,GFP_NOFS)"];
"1000442" [label="(Identifier,res)"];
"1000183" [label="(Call,!fscrypt_dummy_context_enabled(inode) ||\n\t\t    inode->i_sb->s_cop->is_encrypted(inode))"];
"1000364" [label="(Call,-ENOKEY)"];
"1000302" [label="(Identifier,crypt_info)"];
"1000428" [label="(Identifier,inode)"];
"1000301" [label="(Call,determine_cipher_type(crypt_info, inode, &cipher_str, &keysize))"];
"1000432" [label="(Identifier,NULL)"];
"1000332" [label="(ControlStructure,if (res && inode->i_sb->s_cop->key_prefix))"];
"1000175" [label="(Call,sizeof(ctx))"];
"1000362" [label="(Call,res2 == -ENOKEY)"];
"1000180" [label="(Literal,0)"];
"1000450" [label="(Call,kzfree(raw_key))"];
"1000325" [label="(Identifier,res)"];
"1000434" [label="(Call,put_crypt_info(crypt_info))"];
"1000188" [label="(Identifier,inode)"];
"1000172" [label="(Identifier,inode)"];
"1000426" [label="(Call,&inode->i_crypt_info)"];
"1000246" [label="(Call,crypt_info = kmem_cache_alloc(fscrypt_info_cachep, GFP_NOFS))"];
"1000179" [label="(Identifier,res)"];
"1000322" [label="(Identifier,raw_key)"];
"1000181" [label="(Block,)"];
"1000316" [label="(Identifier,raw_key)"];
"1000222" [label="(Call,sizeof(ctx))"];
"1000185" [label="(Call,fscrypt_dummy_context_enabled(inode))"];
"1000199" [label="(Identifier,ctx)"];
"1000423" [label="(ControlStructure,if (cmpxchg(&inode->i_crypt_info, NULL, crypt_info) != NULL))"];
"1000165" [label="(Call,fscrypt_put_encryption_info(inode, crypt_info))"];
"1000173" [label="(Call,&ctx)"];
"1000361" [label="(ControlStructure,if (res2 == -ENOKEY))"];
"1000330" [label="(Identifier,raw_key)"];
"1000299" [label="(Call,res = determine_cipher_type(crypt_info, inode, &cipher_str, &keysize))"];
"1000194" [label="(Literal,0)"];
"1000366" [label="(Call,res = -ENOKEY)"];
"1000168" [label="(ControlStructure,goto retry;)"];
"1000324" [label="(Call,res = validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX))"];
"1000152" [label="(Call,!crypt_info->ci_keyring_key ||\n\t\t\t\tkey_validate(crypt_info->ci_keyring_key) == 0)"];
"1000424" [label="(Call,cmpxchg(&inode->i_crypt_info, NULL, crypt_info) != NULL)"];
"1000333" [label="(Call,res && inode->i_sb->s_cop->key_prefix)"];
"1000433" [label="(Block,)"];
"1000159" [label="(Call,crypt_info->ci_keyring_key)"];
"1000191" [label="(Call,memset(&ctx, 0, sizeof(ctx)))"];
"1000162" [label="(Literal,0)"];
"1000327" [label="(Identifier,crypt_info)"];
"1000418" [label="(Call,kzfree(raw_key))"];
"1000157" [label="(Call,key_validate(crypt_info->ci_keyring_key) == 0)"];
"1000419" [label="(Identifier,raw_key)"];
"1000410" [label="(Identifier,res)"];
"1000144" [label="(Call,ACCESS_ONCE(inode->i_crypt_info))"];
"1000345" [label="(Identifier,res2)"];
"1000189" [label="(Return,return res;)"];
"1000323" [label="(ControlStructure,goto out;)"];
"1000326" [label="(Call,validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX))"];
"1000306" [label="(Call,&keysize)"];
"1000446" [label="(Identifier,res)"];
"1000282" [label="(Identifier,NULL)"];
"1000284" [label="(Call,crypt_info->ci_keyring_key)"];
"1000153" [label="(Call,!crypt_info->ci_keyring_key)"];
"1000300" [label="(Identifier,res)"];
"1000303" [label="(Identifier,inode)"];
"1000350" [label="(Identifier,raw_key)"];
"1000412" [label="(Identifier,ctfm)"];
"1000287" [label="(Identifier,NULL)"];
"1000154" [label="(Call,crypt_info->ci_keyring_key)"];
"1000448" [label="(Call,put_crypt_info(crypt_info))"];
"1000334" [label="(Identifier,res)"];
"1000451" [label="(Identifier,raw_key)"];
"1000104" [label="(Block,)"];
"1000151" [label="(ControlStructure,if (!crypt_info->ci_keyring_key ||\n\t\t\t\tkey_validate(crypt_info->ci_keyring_key) == 0))"];
"1000169" [label="(Call,res = inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000143" [label="(Identifier,crypt_info)"];
"1000190" [label="(Identifier,res)"];
"1000452" [label="(Return,return res;)"];
"1000440" [label="(ControlStructure,if (res == -ENOKEY))"];
"1000409" [label="(Call,res = crypto_skcipher_setkey(ctfm, raw_key, keysize))"];
"1000285" [label="(Identifier,crypt_info)"];
"1000186" [label="(Identifier,inode)"];
"1000184" [label="(Call,!fscrypt_dummy_context_enabled(inode))"];
"1000411" [label="(Call,crypto_skcipher_setkey(ctfm, raw_key, keysize))"];
"1000309" [label="(Identifier,res)"];
"1000435" [label="(Identifier,crypt_info)"];
"1000195" [label="(Call,sizeof(ctx))"];
"1000342" [label="(Block,)"];
"1000142" [label="(Call,crypt_info = ACCESS_ONCE(inode->i_crypt_info))"];
"1000315" [label="(Call,raw_key = kmalloc(FS_MAX_KEY_SIZE, GFP_NOFS))"];
"1000441" [label="(Call,res == -ENOKEY)"];
"1000344" [label="(Call,res2 = validate_user_key(crypt_info, &ctx, raw_key,\n\t\t\t\t\t     inode->i_sb->s_cop->key_prefix))"];
"1000248" [label="(Call,kmem_cache_alloc(fscrypt_info_cachep, GFP_NOFS))"];
"1000318" [label="(Identifier,FS_MAX_KEY_SIZE)"];
"1000363" [label="(Identifier,res2)"];
"1000431" [label="(Identifier,crypt_info)"];
"1000170" [label="(Identifier,res)"];
"1000351" [label="(Call,inode->i_sb->s_cop->key_prefix)"];
"1000290" [label="(Identifier,crypt_info)"];
"1000346" [label="(Call,validate_user_key(crypt_info, &ctx, raw_key,\n\t\t\t\t\t     inode->i_sb->s_cop->key_prefix))"];
"1000158" [label="(Call,key_validate(crypt_info->ci_keyring_key))"];
"1000149" [label="(Identifier,crypt_info)"];
"1000445" [label="(Call,res = 0)"];
"1000304" [label="(Call,&cipher_str)"];
"1000193" [label="(Identifier,ctx)"];
"1000449" [label="(Identifier,crypt_info)"];
"1000320" [label="(ControlStructure,if (!raw_key))"];
"1000347" [label="(Identifier,crypt_info)"];
"1000414" [label="(Identifier,keysize)"];
"1000192" [label="(Call,&ctx)"];
"1000348" [label="(Call,&ctx)"];
"1000321" [label="(Call,!raw_key)"];
"1000220" [label="(Call,res != sizeof(ctx))"];
"1000150" [label="(Block,)"];
"1000454" [label="(MethodReturn,int)"];
"1000436" [label="(ControlStructure,goto retry;)"];
"1000389" [label="(Call,res = ctfm ? PTR_ERR(ctfm) : -ENOMEM)"];
"1000182" [label="(ControlStructure,if (!fscrypt_dummy_context_enabled(inode) ||\n\t\t    inode->i_sb->s_cop->is_encrypted(inode)))"];
"1000164" [label="(Literal,0)"];
"1000453" [label="(Identifier,res)"];
"1000219" [label="(ControlStructure,if (res != sizeof(ctx)))"];
"1000145" [label="(Call,inode->i_crypt_info)"];
"1000171" [label="(Call,inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx)))"];
"1000311" [label="(Call,res = -ENOMEM)"];
"1000178" [label="(Call,res < 0)"];
"1000328" [label="(Call,&ctx)"];
"1000249" [label="(Identifier,fscrypt_info_cachep)"];
"1000370" [label="(ControlStructure,goto out;)"];
"1000413" [label="(Identifier,raw_key)"];
"1000103" [label="(MethodParameterIn,struct inode *inode)"];
"1000111" [label="(Call,*raw_key = NULL)"];
"1000425" [label="(Call,cmpxchg(&inode->i_crypt_info, NULL, crypt_info))"];
"1000221" [label="(Identifier,res)"];
"1000231" [label="(Identifier,ctx)"];
"1000373" [label="(Identifier,res)"];
"1000331" [label="(Identifier,FS_KEY_DESC_PREFIX)"];
"1000319" [label="(Identifier,GFP_NOFS)"];
"1000430" [label="(Identifier,NULL)"];
"1000421" [label="(Identifier,raw_key)"];
"1000317" [label="(Call,kmalloc(FS_MAX_KEY_SIZE, GFP_NOFS))"];
"1000422" [label="(Identifier,NULL)"];
"1000278" [label="(Call,crypt_info->ci_ctfm = NULL)"];
"1000160" [label="(Identifier,crypt_info)"];
"1000167" [label="(Identifier,crypt_info)"];
"1000315" -> "1000104"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000322" -> "1000315"  [label="CFG: "];
"1000315" -> "1000454"  [label="DDG: kmalloc(FS_MAX_KEY_SIZE, GFP_NOFS)"];
"1000317" -> "1000315"  [label="DDG: FS_MAX_KEY_SIZE"];
"1000317" -> "1000315"  [label="DDG: GFP_NOFS"];
"1000315" -> "1000321"  [label="DDG: raw_key"];
"1000317" -> "1000319"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000319" -> "1000317"  [label="AST: "];
"1000317" -> "1000454"  [label="DDG: FS_MAX_KEY_SIZE"];
"1000317" -> "1000454"  [label="DDG: GFP_NOFS"];
"1000317" -> "1000248"  [label="DDG: GFP_NOFS"];
"1000248" -> "1000317"  [label="DDG: GFP_NOFS"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000454"  [label="DDG: GFP_NOFS"];
"1000248" -> "1000454"  [label="DDG: fscrypt_info_cachep"];
"1000248" -> "1000246"  [label="DDG: fscrypt_info_cachep"];
"1000248" -> "1000246"  [label="DDG: GFP_NOFS"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="CFG: "];
"1000325" -> "1000321"  [label="CFG: "];
"1000321" -> "1000454"  [label="DDG: !raw_key"];
"1000321" -> "1000326"  [label="DDG: raw_key"];
"1000321" -> "1000450"  [label="DDG: raw_key"];
"1000326" -> "1000324"  [label="AST: "];
"1000326" -> "1000331"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="AST: "];
"1000331" -> "1000326"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000326" -> "1000454"  [label="DDG: FS_KEY_DESC_PREFIX"];
"1000326" -> "1000454"  [label="DDG: &ctx"];
"1000326" -> "1000171"  [label="DDG: &ctx"];
"1000326" -> "1000324"  [label="DDG: crypt_info"];
"1000326" -> "1000324"  [label="DDG: &ctx"];
"1000326" -> "1000324"  [label="DDG: raw_key"];
"1000326" -> "1000324"  [label="DDG: FS_KEY_DESC_PREFIX"];
"1000301" -> "1000326"  [label="DDG: crypt_info"];
"1000171" -> "1000326"  [label="DDG: &ctx"];
"1000191" -> "1000326"  [label="DDG: &ctx"];
"1000326" -> "1000346"  [label="DDG: crypt_info"];
"1000326" -> "1000346"  [label="DDG: &ctx"];
"1000326" -> "1000346"  [label="DDG: raw_key"];
"1000326" -> "1000411"  [label="DDG: raw_key"];
"1000326" -> "1000425"  [label="DDG: crypt_info"];
"1000326" -> "1000448"  [label="DDG: crypt_info"];
"1000326" -> "1000450"  [label="DDG: raw_key"];
"1000171" -> "1000169"  [label="AST: "];
"1000171" -> "1000175"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000171" -> "1000454"  [label="DDG: inode"];
"1000171" -> "1000454"  [label="DDG: &ctx"];
"1000171" -> "1000169"  [label="DDG: inode"];
"1000171" -> "1000169"  [label="DDG: &ctx"];
"1000301" -> "1000171"  [label="DDG: inode"];
"1000165" -> "1000171"  [label="DDG: inode"];
"1000103" -> "1000171"  [label="DDG: inode"];
"1000346" -> "1000171"  [label="DDG: &ctx"];
"1000171" -> "1000185"  [label="DDG: inode"];
"1000171" -> "1000191"  [label="DDG: &ctx"];
"1000171" -> "1000301"  [label="DDG: inode"];
"1000169" -> "1000104"  [label="AST: "];
"1000170" -> "1000169"  [label="AST: "];
"1000179" -> "1000169"  [label="CFG: "];
"1000169" -> "1000454"  [label="DDG: inode->i_sb->s_cop->get_context(inode, &ctx, sizeof(ctx))"];
"1000169" -> "1000178"  [label="DDG: res"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000186" -> "1000178"  [label="CFG: "];
"1000221" -> "1000178"  [label="CFG: "];
"1000178" -> "1000454"  [label="DDG: res < 0"];
"1000178" -> "1000454"  [label="DDG: res"];
"1000178" -> "1000189"  [label="DDG: res"];
"1000178" -> "1000220"  [label="DDG: res"];
"1000189" -> "1000182"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000454" -> "1000189"  [label="CFG: "];
"1000189" -> "1000454"  [label="DDG: <RET>"];
"1000190" -> "1000189"  [label="DDG: res"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000227" -> "1000220"  [label="CFG: "];
"1000231" -> "1000220"  [label="CFG: "];
"1000220" -> "1000454"  [label="DDG: res"];
"1000220" -> "1000454"  [label="DDG: res != sizeof(ctx)"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1000454"  [label="DDG: inode"];
"1000185" -> "1000184"  [label="DDG: inode"];
"1000103" -> "1000185"  [label="DDG: inode"];
"1000185" -> "1000187"  [label="DDG: inode"];
"1000185" -> "1000301"  [label="DDG: inode"];
"1000184" -> "1000183"  [label="AST: "];
"1000188" -> "1000184"  [label="CFG: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000454"  [label="DDG: fscrypt_dummy_context_enabled(inode)"];
"1000184" -> "1000183"  [label="DDG: fscrypt_dummy_context_enabled(inode)"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000187"  [label="CFG: "];
"1000187" -> "1000183"  [label="AST: "];
"1000190" -> "1000183"  [label="CFG: "];
"1000193" -> "1000183"  [label="CFG: "];
"1000183" -> "1000454"  [label="DDG: inode->i_sb->s_cop->is_encrypted(inode)"];
"1000183" -> "1000454"  [label="DDG: !fscrypt_dummy_context_enabled(inode)"];
"1000183" -> "1000454"  [label="DDG: !fscrypt_dummy_context_enabled(inode) ||\n\t\t    inode->i_sb->s_cop->is_encrypted(inode)"];
"1000187" -> "1000183"  [label="DDG: inode"];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000187" -> "1000454"  [label="DDG: inode"];
"1000103" -> "1000187"  [label="DDG: inode"];
"1000187" -> "1000301"  [label="DDG: inode"];
"1000301" -> "1000299"  [label="AST: "];
"1000301" -> "1000306"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000306" -> "1000301"  [label="AST: "];
"1000299" -> "1000301"  [label="CFG: "];
"1000301" -> "1000454"  [label="DDG: &cipher_str"];
"1000301" -> "1000454"  [label="DDG: inode"];
"1000301" -> "1000454"  [label="DDG: &keysize"];
"1000301" -> "1000165"  [label="DDG: inode"];
"1000301" -> "1000299"  [label="DDG: crypt_info"];
"1000301" -> "1000299"  [label="DDG: inode"];
"1000301" -> "1000299"  [label="DDG: &cipher_str"];
"1000301" -> "1000299"  [label="DDG: &keysize"];
"1000252" -> "1000301"  [label="DDG: crypt_info"];
"1000103" -> "1000301"  [label="DDG: inode"];
"1000301" -> "1000448"  [label="DDG: crypt_info"];
"1000165" -> "1000150"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="CFG: "];
"1000165" -> "1000454"  [label="DDG: inode"];
"1000165" -> "1000454"  [label="DDG: fscrypt_put_encryption_info(inode, crypt_info)"];
"1000103" -> "1000165"  [label="DDG: inode"];
"1000142" -> "1000165"  [label="DDG: crypt_info"];
"1000299" -> "1000104"  [label="AST: "];
"1000300" -> "1000299"  [label="AST: "];
"1000309" -> "1000299"  [label="CFG: "];
"1000299" -> "1000454"  [label="DDG: determine_cipher_type(crypt_info, inode, &cipher_str, &keysize)"];
"1000299" -> "1000441"  [label="DDG: res"];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000446" -> "1000441"  [label="CFG: "];
"1000449" -> "1000441"  [label="CFG: "];
"1000441" -> "1000454"  [label="DDG: res"];
"1000441" -> "1000454"  [label="DDG: -ENOKEY"];
"1000441" -> "1000454"  [label="DDG: res == -ENOKEY"];
"1000333" -> "1000441"  [label="DDG: res"];
"1000311" -> "1000441"  [label="DDG: res"];
"1000366" -> "1000441"  [label="DDG: res"];
"1000389" -> "1000441"  [label="DDG: res"];
"1000409" -> "1000441"  [label="DDG: res"];
"1000443" -> "1000441"  [label="DDG: ENOKEY"];
"1000441" -> "1000452"  [label="DDG: res"];
"1000452" -> "1000104"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="CFG: "];
"1000452" -> "1000454"  [label="DDG: <RET>"];
"1000453" -> "1000452"  [label="DDG: res"];
"1000445" -> "1000452"  [label="DDG: res"];
"1000448" -> "1000104"  [label="AST: "];
"1000448" -> "1000449"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000451" -> "1000448"  [label="CFG: "];
"1000448" -> "1000454"  [label="DDG: crypt_info"];
"1000448" -> "1000454"  [label="DDG: put_crypt_info(crypt_info)"];
"1000346" -> "1000448"  [label="DDG: crypt_info"];
"1000191" -> "1000181"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000194" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000199" -> "1000191"  [label="CFG: "];
"1000191" -> "1000454"  [label="DDG: memset(&ctx, 0, sizeof(ctx))"];
"1000191" -> "1000454"  [label="DDG: &ctx"];
"1000324" -> "1000104"  [label="AST: "];
"1000325" -> "1000324"  [label="AST: "];
"1000334" -> "1000324"  [label="CFG: "];
"1000324" -> "1000454"  [label="DDG: validate_user_key(crypt_info, &ctx, raw_key, FS_KEY_DESC_PREFIX)"];
"1000324" -> "1000333"  [label="DDG: res"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="AST: "];
"1000345" -> "1000333"  [label="CFG: "];
"1000373" -> "1000333"  [label="CFG: "];
"1000333" -> "1000454"  [label="DDG: res && inode->i_sb->s_cop->key_prefix"];
"1000333" -> "1000454"  [label="DDG: inode->i_sb->s_cop->key_prefix"];
"1000346" -> "1000333"  [label="DDG: inode->i_sb->s_cop->key_prefix"];
"1000333" -> "1000346"  [label="DDG: inode->i_sb->s_cop->key_prefix"];
"1000346" -> "1000344"  [label="AST: "];
"1000346" -> "1000351"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000350" -> "1000346"  [label="AST: "];
"1000351" -> "1000346"  [label="AST: "];
"1000344" -> "1000346"  [label="CFG: "];
"1000346" -> "1000454"  [label="DDG: inode->i_sb->s_cop->key_prefix"];
"1000346" -> "1000454"  [label="DDG: &ctx"];
"1000346" -> "1000344"  [label="DDG: crypt_info"];
"1000346" -> "1000344"  [label="DDG: &ctx"];
"1000346" -> "1000344"  [label="DDG: raw_key"];
"1000346" -> "1000344"  [label="DDG: inode->i_sb->s_cop->key_prefix"];
"1000346" -> "1000411"  [label="DDG: raw_key"];
"1000346" -> "1000425"  [label="DDG: crypt_info"];
"1000346" -> "1000450"  [label="DDG: raw_key"];
"1000344" -> "1000342"  [label="AST: "];
"1000345" -> "1000344"  [label="AST: "];
"1000359" -> "1000344"  [label="CFG: "];
"1000344" -> "1000454"  [label="DDG: validate_user_key(crypt_info, &ctx, raw_key,\n\t\t\t\t\t     inode->i_sb->s_cop->key_prefix)"];
"1000344" -> "1000454"  [label="DDG: res2"];
"1000344" -> "1000362"  [label="DDG: res2"];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000367" -> "1000362"  [label="CFG: "];
"1000370" -> "1000362"  [label="CFG: "];
"1000362" -> "1000454"  [label="DDG: res2 == -ENOKEY"];
"1000362" -> "1000454"  [label="DDG: res2"];
"1000364" -> "1000362"  [label="DDG: ENOKEY"];
"1000411" -> "1000409"  [label="AST: "];
"1000411" -> "1000414"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000413" -> "1000411"  [label="AST: "];
"1000414" -> "1000411"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000411" -> "1000454"  [label="DDG: ctfm"];
"1000411" -> "1000454"  [label="DDG: keysize"];
"1000411" -> "1000409"  [label="DDG: ctfm"];
"1000411" -> "1000409"  [label="DDG: raw_key"];
"1000411" -> "1000409"  [label="DDG: keysize"];
"1000406" -> "1000411"  [label="DDG: ctfm"];
"1000411" -> "1000418"  [label="DDG: raw_key"];
"1000411" -> "1000450"  [label="DDG: raw_key"];
"1000409" -> "1000104"  [label="AST: "];
"1000410" -> "1000409"  [label="AST: "];
"1000416" -> "1000409"  [label="CFG: "];
"1000409" -> "1000454"  [label="DDG: crypto_skcipher_setkey(ctfm, raw_key, keysize)"];
"1000409" -> "1000454"  [label="DDG: res"];
"1000418" -> "1000104"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000421" -> "1000418"  [label="CFG: "];
"1000418" -> "1000454"  [label="DDG: kzfree(raw_key)"];
"1000450" -> "1000104"  [label="AST: "];
"1000450" -> "1000451"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000453" -> "1000450"  [label="CFG: "];
"1000450" -> "1000454"  [label="DDG: kzfree(raw_key)"];
"1000450" -> "1000454"  [label="DDG: raw_key"];
"1000420" -> "1000450"  [label="DDG: raw_key"];
"1000111" -> "1000450"  [label="DDG: raw_key"];
"1000425" -> "1000424"  [label="AST: "];
"1000425" -> "1000431"  [label="CFG: "];
"1000426" -> "1000425"  [label="AST: "];
"1000430" -> "1000425"  [label="AST: "];
"1000431" -> "1000425"  [label="AST: "];
"1000432" -> "1000425"  [label="CFG: "];
"1000425" -> "1000454"  [label="DDG: &inode->i_crypt_info"];
"1000425" -> "1000454"  [label="DDG: crypt_info"];
"1000425" -> "1000144"  [label="DDG: &inode->i_crypt_info"];
"1000425" -> "1000424"  [label="DDG: &inode->i_crypt_info"];
"1000425" -> "1000424"  [label="DDG: NULL"];
"1000425" -> "1000424"  [label="DDG: crypt_info"];
"1000144" -> "1000425"  [label="DDG: inode->i_crypt_info"];
"1000424" -> "1000425"  [label="DDG: NULL"];
"1000425" -> "1000434"  [label="DDG: crypt_info"];
"1000144" -> "1000142"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000144" -> "1000454"  [label="DDG: inode->i_crypt_info"];
"1000144" -> "1000142"  [label="DDG: inode->i_crypt_info"];
"1000142" -> "1000104"  [label="AST: "];
"1000143" -> "1000142"  [label="AST: "];
"1000149" -> "1000142"  [label="CFG: "];
"1000142" -> "1000454"  [label="DDG: ACCESS_ONCE(inode->i_crypt_info)"];
"1000142" -> "1000454"  [label="DDG: crypt_info"];
"1000424" -> "1000423"  [label="AST: "];
"1000424" -> "1000432"  [label="CFG: "];
"1000432" -> "1000424"  [label="AST: "];
"1000435" -> "1000424"  [label="CFG: "];
"1000438" -> "1000424"  [label="CFG: "];
"1000424" -> "1000454"  [label="DDG: cmpxchg(&inode->i_crypt_info, NULL, crypt_info)"];
"1000424" -> "1000454"  [label="DDG: cmpxchg(&inode->i_crypt_info, NULL, crypt_info) != NULL"];
"1000424" -> "1000454"  [label="DDG: NULL"];
"1000424" -> "1000278"  [label="DDG: NULL"];
"1000424" -> "1000283"  [label="DDG: NULL"];
"1000424" -> "1000420"  [label="DDG: NULL"];
"1000278" -> "1000104"  [label="AST: "];
"1000278" -> "1000282"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000285" -> "1000278"  [label="CFG: "];
"1000278" -> "1000454"  [label="DDG: crypt_info->ci_ctfm"];
"1000283" -> "1000104"  [label="AST: "];
"1000283" -> "1000287"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="AST: "];
"1000290" -> "1000283"  [label="CFG: "];
"1000283" -> "1000454"  [label="DDG: crypt_info->ci_keyring_key"];
"1000283" -> "1000454"  [label="DDG: NULL"];
"1000283" -> "1000153"  [label="DDG: crypt_info->ci_keyring_key"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000160" -> "1000153"  [label="CFG: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000454"  [label="DDG: crypt_info->ci_keyring_key"];
"1000153" -> "1000152"  [label="DDG: crypt_info->ci_keyring_key"];
"1000158" -> "1000153"  [label="DDG: crypt_info->ci_keyring_key"];
"1000153" -> "1000158"  [label="DDG: crypt_info->ci_keyring_key"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000157"  [label="CFG: "];
"1000157" -> "1000152"  [label="AST: "];
"1000164" -> "1000152"  [label="CFG: "];
"1000166" -> "1000152"  [label="CFG: "];
"1000152" -> "1000454"  [label="DDG: key_validate(crypt_info->ci_keyring_key) == 0"];
"1000152" -> "1000454"  [label="DDG: !crypt_info->ci_keyring_key ||\n\t\t\t\tkey_validate(crypt_info->ci_keyring_key) == 0"];
"1000152" -> "1000454"  [label="DDG: !crypt_info->ci_keyring_key"];
"1000157" -> "1000152"  [label="DDG: key_validate(crypt_info->ci_keyring_key)"];
"1000157" -> "1000152"  [label="DDG: 0"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="CFG: "];
"1000158" -> "1000454"  [label="DDG: crypt_info->ci_keyring_key"];
"1000158" -> "1000157"  [label="DDG: crypt_info->ci_keyring_key"];
"1000157" -> "1000162"  [label="CFG: "];
"1000162" -> "1000157"  [label="AST: "];
"1000157" -> "1000454"  [label="DDG: key_validate(crypt_info->ci_keyring_key)"];
"1000420" -> "1000104"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000428" -> "1000420"  [label="CFG: "];
"1000420" -> "1000454"  [label="DDG: raw_key"];
"1000434" -> "1000433"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000436" -> "1000434"  [label="CFG: "];
"1000434" -> "1000454"  [label="DDG: put_crypt_info(crypt_info)"];
}
