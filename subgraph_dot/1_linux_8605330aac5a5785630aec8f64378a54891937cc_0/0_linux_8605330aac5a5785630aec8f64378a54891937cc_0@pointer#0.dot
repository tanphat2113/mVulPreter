digraph "0_linux_8605330aac5a5785630aec8f64378a54891937cc_0@pointer" {
"1000195" [label="(Call,shhwtstamps &&\n\t    (sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000118" [label="(Call,*shhwtstamps =\n\t\tskb_hwtstamps(skb))"];
"1000120" [label="(Call,skb_hwtstamps(skb))"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000197" [label="(Call,(sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000198" [label="(Call,sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE)"];
"1000177" [label="(Call,sk->sk_tsflags & SOF_TIMESTAMPING_SOFTWARE)"];
"1000203" [label="(Call,ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000232" [label="(Call,sk->sk_tsflags & SOF_TIMESTAMPING_OPT_STATS)"];
"1000178" [label="(Call,sk->sk_tsflags)"];
"1000217" [label="(Identifier,empty)"];
"1000177" [label="(Call,sk->sk_tsflags & SOF_TIMESTAMPING_SOFTWARE)"];
"1000181" [label="(Identifier,SOF_TIMESTAMPING_SOFTWARE)"];
"1000196" [label="(Identifier,shhwtstamps)"];
"1000213" [label="(Identifier,empty)"];
"1000118" [label="(Call,*shhwtstamps =\n\t\tskb_hwtstamps(skb))"];
"1000104" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000203" [label="(Call,ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000121" [label="(Identifier,skb)"];
"1000202" [label="(Identifier,SOF_TIMESTAMPING_RAW_HARDWARE)"];
"1000119" [label="(Identifier,shhwtstamps)"];
"1000198" [label="(Call,sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE)"];
"1000184" [label="(Identifier,skb)"];
"1000120" [label="(Call,skb_hwtstamps(skb))"];
"1000157" [label="(Call,skb_get_timestampns(skb, &ts))"];
"1000176" [label="(Call,(sk->sk_tsflags & SOF_TIMESTAMPING_SOFTWARE) &&\n\t    ktime_to_timespec_cond(skb->tstamp, tss.ts + 0))"];
"1000197" [label="(Call,(sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000105" [label="(Block,)"];
"1000130" [label="(Call,__net_timestamp(skb))"];
"1000195" [label="(Call,shhwtstamps &&\n\t    (sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2))"];
"1000142" [label="(Call,skb_get_timestamp(skb, &tv))"];
"1000205" [label="(Identifier,shhwtstamps)"];
"1000199" [label="(Call,sk->sk_tsflags)"];
"1000247" [label="(MethodReturn,void)"];
"1000124" [label="(Identifier,need_software_tstamp)"];
"1000204" [label="(Call,shhwtstamps->hwtstamp)"];
"1000194" [label="(ControlStructure,if (shhwtstamps &&\n\t    (sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2)))"];
"1000207" [label="(Call,tss.ts + 2)"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000195" -> "1000197"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000197" -> "1000195"  [label="AST: "];
"1000213" -> "1000195"  [label="CFG: "];
"1000217" -> "1000195"  [label="CFG: "];
"1000195" -> "1000247"  [label="DDG: shhwtstamps &&\n\t    (sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2)"];
"1000195" -> "1000247"  [label="DDG: (sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE) &&\n\t    ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2)"];
"1000195" -> "1000247"  [label="DDG: shhwtstamps"];
"1000118" -> "1000195"  [label="DDG: shhwtstamps"];
"1000197" -> "1000195"  [label="DDG: sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000197" -> "1000195"  [label="DDG: ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2)"];
"1000118" -> "1000105"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000118" -> "1000247"  [label="DDG: skb_hwtstamps(skb)"];
"1000120" -> "1000118"  [label="DDG: skb"];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000120" -> "1000247"  [label="DDG: skb"];
"1000104" -> "1000120"  [label="DDG: skb"];
"1000120" -> "1000130"  [label="DDG: skb"];
"1000120" -> "1000142"  [label="DDG: skb"];
"1000120" -> "1000157"  [label="DDG: skb"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000247"  [label="DDG: skb"];
"1000104" -> "1000130"  [label="DDG: skb"];
"1000104" -> "1000142"  [label="DDG: skb"];
"1000104" -> "1000157"  [label="DDG: skb"];
"1000197" -> "1000198"  [label="CFG: "];
"1000197" -> "1000203"  [label="CFG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000203" -> "1000197"  [label="AST: "];
"1000197" -> "1000247"  [label="DDG: ktime_to_timespec_cond(shhwtstamps->hwtstamp, tss.ts + 2)"];
"1000197" -> "1000247"  [label="DDG: sk->sk_tsflags & SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000198" -> "1000197"  [label="DDG: sk->sk_tsflags"];
"1000198" -> "1000197"  [label="DDG: SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000203" -> "1000197"  [label="DDG: shhwtstamps->hwtstamp"];
"1000203" -> "1000197"  [label="DDG: tss.ts + 2"];
"1000198" -> "1000202"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000205" -> "1000198"  [label="CFG: "];
"1000198" -> "1000247"  [label="DDG: sk->sk_tsflags"];
"1000198" -> "1000247"  [label="DDG: SOF_TIMESTAMPING_RAW_HARDWARE"];
"1000177" -> "1000198"  [label="DDG: sk->sk_tsflags"];
"1000198" -> "1000232"  [label="DDG: sk->sk_tsflags"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000181"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000181" -> "1000177"  [label="AST: "];
"1000184" -> "1000177"  [label="CFG: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000247"  [label="DDG: SOF_TIMESTAMPING_SOFTWARE"];
"1000177" -> "1000247"  [label="DDG: sk->sk_tsflags"];
"1000177" -> "1000176"  [label="DDG: sk->sk_tsflags"];
"1000177" -> "1000176"  [label="DDG: SOF_TIMESTAMPING_SOFTWARE"];
"1000177" -> "1000232"  [label="DDG: sk->sk_tsflags"];
"1000203" -> "1000207"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="AST: "];
"1000203" -> "1000247"  [label="DDG: tss.ts + 2"];
"1000203" -> "1000247"  [label="DDG: shhwtstamps->hwtstamp"];
}
