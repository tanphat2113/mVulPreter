digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_7@API" {
"1000252" [label="(Call,PACKET_remaining(pkt))"];
"1000207" [label="(Call,ssl_check_for_safari(s, pkt))"];
"1000121" [label="(MethodParameterIn,SSL *s)"];
"1000122" [label="(MethodParameterIn,PACKET *pkt)"];
"1000251" [label="(Call,PACKET_remaining(pkt) == 0)"];
"1000258" [label="(Call,PACKET_as_length_prefixed_2(pkt, &extensions))"];
"1000257" [label="(Call,!PACKET_as_length_prefixed_2(pkt, &extensions))"];
"1000266" [label="(Call,tls1_check_duplicate_extensions(&extensions))"];
"1000265" [label="(Call,!tls1_check_duplicate_extensions(&extensions))"];
"1000272" [label="(Call,PACKET_get_net_2(&extensions, &type))"];
"1000281" [label="(Call,PACKET_get_length_prefixed_2(&extensions, &extension))"];
"1000280" [label="(Call,!PACKET_get_length_prefixed_2(&extensions, &extension))"];
"1000296" [label="(Call,PACKET_data(&extension))"];
"1000292" [label="(Call,s->tlsext_debug_cb(s, 0, type, PACKET_data(&extension),\n                               PACKET_remaining(&extension),\n                               s->tlsext_debug_arg))"];
"1000306" [label="(Call,type == TLSEXT_TYPE_renegotiate)"];
"1000332" [label="(Call,type == TLSEXT_TYPE_server_name)"];
"1000457" [label="(Call,type == TLSEXT_TYPE_srp)"];
"1000497" [label="(Call,type == TLSEXT_TYPE_ec_point_formats)"];
"1000550" [label="(Call,type == TLSEXT_TYPE_elliptic_curves)"];
"1000611" [label="(Call,type == TLSEXT_TYPE_session_ticket)"];
"1000641" [label="(Call,type == TLSEXT_TYPE_signature_algorithms)"];
"1000691" [label="(Call,type == TLSEXT_TYPE_status_request)"];
"1000903" [label="(Call,type == TLSEXT_TYPE_heartbeat)"];
"1000900" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat)"];
"1000958" [label="(Call,type == TLSEXT_TYPE_next_proto_neg)"];
"1000957" [label="(Call,type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000980" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000981" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1001011" [label="(Call,type == TLSEXT_TYPE_use_srtp)"];
"1001008" [label="(Call,SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp)"];
"1001005" [label="(Call,SSL_IS_DTLS(s) && SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp)"];
"1001025" [label="(Call,type == TLSEXT_TYPE_encrypt_then_mac)"];
"1001042" [label="(Call,custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al))"];
"1000312" [label="(Call,ssl_parse_clienthello_renegotiate_ext(s, &extension, al))"];
"1000311" [label="(Call,!ssl_parse_clienthello_renegotiate_ext(s, &extension, al))"];
"1000621" [label="(Call,s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000620" [label="(Call,!s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000616" [label="(Call,s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000678" [label="(Call,tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs)))"];
"1000677" [label="(Call,!tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs)))"];
"1000901" [label="(Call,SSL_IS_DTLS(s))"];
"1000996" [label="(Call,tls1_alpn_handle_client_hello(s, &extension, al))"];
"1000995" [label="(Call,!tls1_alpn_handle_client_hello(s, &extension, al))"];
"1001016" [label="(Call,ssl_parse_clienthello_use_srtp_ext(s, &extension, al))"];
"1001006" [label="(Call,SSL_IS_DTLS(s))"];
"1001009" [label="(Call,SSL_get_srtp_profiles(s))"];
"1000909" [label="(Call,!PACKET_get_1(&extension, &hbtype)\n                || PACKET_remaining(&extension))"];
"1001041" [label="(Call,custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al) <= 0)"];
"1000299" [label="(Call,PACKET_remaining(&extension))"];
"1000342" [label="(Call,PACKET_as_length_prefixed_2(&extension, &sni))"];
"1000341" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &sni))"];
"1000340" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &sni)\n                /* ServerNameList must be at least 1 byte long. */\n                || PACKET_remaining(&sni) == 0)"];
"1000348" [label="(Call,PACKET_remaining(&sni))"];
"1000347" [label="(Call,PACKET_remaining(&sni) == 0)"];
"1000358" [label="(Call,PACKET_get_1(&sni, &servname_type))"];
"1000357" [label="(Call,!PACKET_get_1(&sni, &servname_type))"];
"1000356" [label="(Call,!PACKET_get_1(&sni, &servname_type)\n                || servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000368" [label="(Call,PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000367" [label="(Call,!PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000363" [label="(Call,servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000384" [label="(Call,PACKET_remaining(&hostname))"];
"1000383" [label="(Call,PACKET_remaining(&hostname) > TLSEXT_MAXLEN_host_name)"];
"1000396" [label="(Call,PACKET_contains_zero_byte(&hostname))"];
"1000408" [label="(Call,PACKET_strndup(&hostname, &s->session->tlsext_hostname))"];
"1000407" [label="(Call,!PACKET_strndup(&hostname, &s->session->tlsext_hostname))"];
"1000435" [label="(Call,s->session->tlsext_hostname\n                    && PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000431" [label="(Call,s->servername_done = s->session->tlsext_hostname\n                    && PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000449" [label="(Call,strlen(s->session->tlsext_hostname))"];
"1000441" [label="(Call,PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000464" [label="(Call,PACKET_as_length_prefixed_1(&extension, &srp_I))"];
"1000463" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &srp_I))"];
"1000472" [label="(Call,PACKET_contains_zero_byte(&srp_I))"];
"1000479" [label="(Call,PACKET_strndup(&srp_I, &s->srp_ctx.login))"];
"1000478" [label="(Call,!PACKET_strndup(&srp_I, &s->srp_ctx.login))"];
"1000505" [label="(Call,PACKET_as_length_prefixed_1(&extension, &ec_point_format_list))"];
"1000504" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &ec_point_format_list))"];
"1000503" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)\n                || PACKET_remaining(&ec_point_format_list) == 0)"];
"1000511" [label="(Call,PACKET_remaining(&ec_point_format_list))"];
"1000510" [label="(Call,PACKET_remaining(&ec_point_format_list) == 0)"];
"1000526" [label="(Call,PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length))"];
"1000525" [label="(Call,!PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length))"];
"1000558" [label="(Call,PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list))"];
"1000557" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list))"];
"1000556" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)\n                || PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000565" [label="(Call,PACKET_remaining(&elliptic_curve_list))"];
"1000564" [label="(Call,PACKET_remaining(&elliptic_curve_list) == 0)"];
"1000563" [label="(Call,PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000571" [label="(Call,PACKET_remaining(&elliptic_curve_list))"];
"1000570" [label="(Call,PACKET_remaining(&elliptic_curve_list) % 2)"];
"1000569" [label="(Call,(PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000587" [label="(Call,PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length))"];
"1000586" [label="(Call,!PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length))"];
"1000623" [label="(Call,PACKET_data(&extension))"];
"1000626" [label="(Call,PACKET_remaining(&extension))"];
"1000649" [label="(Call,PACKET_as_length_prefixed_2(&extension, &supported_sig_algs))"];
"1000648" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &supported_sig_algs))"];
"1000647" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)\n                || (PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0)"];
"1000657" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000656" [label="(Call,PACKET_remaining(&supported_sig_algs) % 2)"];
"1000655" [label="(Call,(PACKET_remaining(&supported_sig_algs) % 2) != 0)"];
"1000654" [label="(Call,(PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0)"];
"1000663" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000662" [label="(Call,PACKET_remaining(&supported_sig_algs) == 0)"];
"1000680" [label="(Call,PACKET_data(&supported_sig_algs))"];
"1000683" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000697" [label="(Call,PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type))"];
"1000696" [label="(Call,!PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type))"];
"1000721" [label="(Call,PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list))"];
"1000720" [label="(Call,!PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list))"];
"1000735" [label="(Call,PACKET_remaining(&responder_id_list))"];
"1000734" [label="(Call,PACKET_remaining(&responder_id_list) > 0)"];
"1000767" [label="(Call,PACKET_remaining(&responder_id_list))"];
"1000766" [label="(Call,PACKET_remaining(&responder_id_list) > 0)"];
"1000778" [label="(Call,PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id))"];
"1000777" [label="(Call,!PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id))"];
"1000776" [label="(Call,!PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)\n                        || PACKET_remaining(&responder_id) == 0)"];
"1000784" [label="(Call,PACKET_remaining(&responder_id))"];
"1000783" [label="(Call,PACKET_remaining(&responder_id) == 0)"];
"1000793" [label="(Call,PACKET_data(&responder_id))"];
"1000791" [label="(Call,id_data = PACKET_data(&responder_id))"];
"1000812" [label="(Call,id_data != PACKET_end(&responder_id))"];
"1000802" [label="(Call,PACKET_remaining(&responder_id))"];
"1000798" [label="(Call,d2i_OCSP_RESPID(NULL, &id_data,\n                                         PACKET_remaining(&responder_id)))"];
"1000796" [label="(Call,id = d2i_OCSP_RESPID(NULL, &id_data,\n                                         PACKET_remaining(&responder_id)))"];
"1000806" [label="(Call,id == NULL)"];
"1000746" [label="(Call,s->tlsext_ocsp_ids == NULL)"];
"1000728" [label="(Call,sk_OCSP_RESPID_pop_free(s->tlsext_ocsp_ids,\n                                        OCSP_RESPID_free))"];
"1000760" [label="(Call,s->tlsext_ocsp_ids = NULL)"];
"1000824" [label="(Call,sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id))"];
"1000823" [label="(Call,!sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id))"];
"1000830" [label="(Call,OCSP_RESPID_free(id))"];
"1000868" [label="(Call,d2i_X509_EXTENSIONS(NULL, &ext_data,\n                                            PACKET_remaining(&exts)))"];
"1000864" [label="(Call,s->tlsext_ocsp_exts =\n                        d2i_X509_EXTENSIONS(NULL, &ext_data,\n                                            PACKET_remaining(&exts)))"];
"1000877" [label="(Call,s->tlsext_ocsp_exts == NULL)"];
"1000859" [label="(Call,sk_X509_EXTENSION_pop_free(s->tlsext_ocsp_exts,\n                                               X509_EXTENSION_free))"];
"1000876" [label="(Call,s->tlsext_ocsp_exts == NULL\n                        || ext_data != PACKET_end(&exts))"];
"1000818" [label="(Call,OCSP_RESPID_free(id))"];
"1000814" [label="(Call,PACKET_end(&responder_id))"];
"1000840" [label="(Call,PACKET_as_length_prefixed_2(&extension, &exts))"];
"1000839" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &exts))"];
"1000849" [label="(Call,PACKET_remaining(&exts))"];
"1000848" [label="(Call,PACKET_remaining(&exts) > 0)"];
"1000856" [label="(Call,PACKET_data(&exts))"];
"1000854" [label="(Call,ext_data = PACKET_data(&exts))"];
"1000882" [label="(Call,ext_data != PACKET_end(&exts))"];
"1000872" [label="(Call,PACKET_remaining(&exts))"];
"1000884" [label="(Call,PACKET_end(&exts))"];
"1000911" [label="(Call,PACKET_get_1(&extension, &hbtype))"];
"1000910" [label="(Call,!PACKET_get_1(&extension, &hbtype))"];
"1000916" [label="(Call,PACKET_remaining(&extension))"];
"1001046" [label="(Call,PACKET_data(&extension))"];
"1001049" [label="(Call,PACKET_remaining(&extension))"];
"1001058" [label="(Call,PACKET_remaining(pkt))"];
"1001057" [label="(Call,PACKET_remaining(pkt) != 0)"];
"1000761" [label="(Call,s->tlsext_ocsp_ids)"];
"1000365" [label="(Identifier,servname_type)"];
"1000391" [label="(Identifier,al)"];
"1001020" [label="(Identifier,al)"];
"1000864" [label="(Call,s->tlsext_ocsp_exts =\n                        d2i_X509_EXTENSIONS(NULL, &ext_data,\n                                            PACKET_remaining(&exts)))"];
"1000834" [label="(Identifier,al)"];
"1000794" [label="(Call,&responder_id)"];
"1000402" [label="(Identifier,al)"];
"1000917" [label="(Call,&extension)"];
"1000848" [label="(Call,PACKET_remaining(&exts) > 0)"];
"1000449" [label="(Call,strlen(s->session->tlsext_hostname))"];
"1000293" [label="(Identifier,s)"];
"1000207" [label="(Call,ssl_check_for_safari(s, pkt))"];
"1000363" [label="(Call,servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000800" [label="(Call,&id_data)"];
"1000582" [label="(Identifier,s)"];
"1000254" [label="(Literal,0)"];
"1000838" [label="(ControlStructure,if (!PACKET_as_length_prefixed_2(&extension, &exts)))"];
"1000819" [label="(Identifier,id)"];
"1000635" [label="(Identifier,al)"];
"1000505" [label="(Call,PACKET_as_length_prefixed_1(&extension, &ec_point_format_list))"];
"1000852" [label="(Literal,0)"];
"1001046" [label="(Call,PACKET_data(&extension))"];
"1000912" [label="(Call,&extension)"];
"1001027" [label="(Identifier,TLSEXT_TYPE_encrypt_then_mac)"];
"1001002" [label="(Literal,0)"];
"1000791" [label="(Call,id_data = PACKET_data(&responder_id))"];
"1000271" [label="(ControlStructure,while (PACKET_get_net_2(&extensions, &type)))"];
"1000712" [label="(Identifier,s)"];
"1000846" [label="(Literal,0)"];
"1000806" [label="(Call,id == NULL)"];
"1001047" [label="(Call,&extension)"];
"1000290" [label="(Identifier,s)"];
"1000615" [label="(ControlStructure,if (s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg)))"];
"1000785" [label="(Call,&responder_id)"];
"1000900" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat)"];
"1000776" [label="(Call,!PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)\n                        || PACKET_remaining(&responder_id) == 0)"];
"1000479" [label="(Call,PACKET_strndup(&srp_I, &s->srp_ctx.login))"];
"1000504" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &ec_point_format_list))"];
"1000359" [label="(Call,&sni)"];
"1000435" [label="(Call,s->session->tlsext_hostname\n                    && PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000587" [label="(Call,PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length))"];
"1000297" [label="(Call,&extension)"];
"1000356" [label="(Call,!PACKET_get_1(&sni, &servname_type)\n                || servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000266" [label="(Call,tls1_check_duplicate_extensions(&extensions))"];
"1000883" [label="(Identifier,ext_data)"];
"1000256" [label="(ControlStructure,if (!PACKET_as_length_prefixed_2(pkt, &extensions)))"];
"1000825" [label="(Call,s->tlsext_ocsp_ids)"];
"1000998" [label="(Call,&extension)"];
"1000238" [label="(Call,s->srp_ctx.login = NULL)"];
"1001011" [label="(Call,type == TLSEXT_TYPE_use_srtp)"];
"1000201" [label="(ControlStructure,if (s->options & SSL_OP_SAFARI_ECDHE_ECDSA_BUG))"];
"1001044" [label="(Literal,1)"];
"1000351" [label="(Literal,0)"];
"1000881" [label="(Identifier,NULL)"];
"1000733" [label="(ControlStructure,if (PACKET_remaining(&responder_id_list) > 0))"];
"1001068" [label="(JumpTarget,ri_check:)"];
"1000613" [label="(Identifier,TLSEXT_TYPE_session_ticket)"];
"1000521" [label="(Identifier,s)"];
"1000430" [label="(Block,)"];
"1000750" [label="(Identifier,NULL)"];
"1000765" [label="(ControlStructure,while (PACKET_remaining(&responder_id_list) > 0))"];
"1000808" [label="(Identifier,NULL)"];
"1000268" [label="(Identifier,extensions)"];
"1000529" [label="(Call,&s->session->tlsext_ecpointformatlist)"];
"1000767" [label="(Call,PACKET_remaining(&responder_id_list))"];
"1000778" [label="(Call,PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id))"];
"1000332" [label="(Call,type == TLSEXT_TYPE_server_name)"];
"1000823" [label="(Call,!sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id))"];
"1000264" [label="(ControlStructure,if (!tls1_check_duplicate_extensions(&extensions)))"];
"1000396" [label="(Call,PACKET_contains_zero_byte(&hostname))"];
"1000511" [label="(Call,PACKET_remaining(&ec_point_format_list))"];
"1000431" [label="(Call,s->servername_done = s->session->tlsext_hostname\n                    && PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000847" [label="(ControlStructure,if (PACKET_remaining(&exts) > 0))"];
"1000916" [label="(Call,PACKET_remaining(&extension))"];
"1000408" [label="(Call,PACKET_strndup(&hostname, &s->session->tlsext_hostname))"];
"1000257" [label="(Call,!PACKET_as_length_prefixed_2(pkt, &extensions))"];
"1000779" [label="(Call,&responder_id_list)"];
"1000922" [label="(Identifier,al)"];
"1000656" [label="(Call,PACKET_remaining(&supported_sig_algs) % 2)"];
"1000348" [label="(Call,PACKET_remaining(&sni))"];
"1000905" [label="(Identifier,TLSEXT_TYPE_heartbeat)"];
"1000442" [label="(Call,&hostname)"];
"1000885" [label="(Call,&exts)"];
"1000783" [label="(Call,PACKET_remaining(&responder_id) == 0)"];
"1001064" [label="(Identifier,al)"];
"1000826" [label="(Identifier,s)"];
"1000641" [label="(Call,type == TLSEXT_TYPE_signature_algorithms)"];
"1000648" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &supported_sig_algs))"];
"1000558" [label="(Call,PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list))"];
"1000410" [label="(Identifier,hostname)"];
"1001059" [label="(Identifier,pkt)"];
"1000849" [label="(Call,PACKET_remaining(&exts))"];
"1000347" [label="(Call,PACKET_remaining(&sni) == 0)"];
"1000525" [label="(Call,!PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length))"];
"1000560" [label="(Identifier,extension)"];
"1000649" [label="(Call,PACKET_as_length_prefixed_2(&extension, &supported_sig_algs))"];
"1000657" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000843" [label="(Call,&exts)"];
"1000512" [label="(Call,&ec_point_format_list)"];
"1000754" [label="(Identifier,al)"];
"1000552" [label="(Identifier,TLSEXT_TYPE_elliptic_curves)"];
"1000728" [label="(Call,sk_OCSP_RESPID_pop_free(s->tlsext_ocsp_ids,\n                                        OCSP_RESPID_free))"];
"1000281" [label="(Call,PACKET_get_length_prefixed_2(&extensions, &extension))"];
"1000857" [label="(Call,&exts)"];
"1000282" [label="(Call,&extensions)"];
"1000812" [label="(Call,id_data != PACKET_end(&responder_id))"];
"1000889" [label="(Literal,0)"];
"1000472" [label="(Call,PACKET_contains_zero_byte(&srp_I))"];
"1000458" [label="(Identifier,type)"];
"1000473" [label="(Call,&srp_I)"];
"1001045" [label="(Identifier,type)"];
"1000561" [label="(Call,&elliptic_curve_list)"];
"1000382" [label="(ControlStructure,if (PACKET_remaining(&hostname) > TLSEXT_MAXLEN_host_name))"];
"1000482" [label="(Call,&s->srp_ctx.login)"];
"1000913" [label="(Identifier,extension)"];
"1000699" [label="(Identifier,extension)"];
"1000715" [label="(Block,)"];
"1000308" [label="(Identifier,TLSEXT_TYPE_renegotiate)"];
"1000477" [label="(ControlStructure,if (!PACKET_strndup(&srp_I, &s->srp_ctx.login)))"];
"1000822" [label="(ControlStructure,if (!sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id)))"];
"1001095" [label="(MethodReturn,static int)"];
"1000464" [label="(Call,PACKET_as_length_prefixed_1(&extension, &srp_I))"];
"1000340" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &sni)\n                /* ServerNameList must be at least 1 byte long. */\n                || PACKET_remaining(&sni) == 0)"];
"1000295" [label="(Identifier,type)"];
"1000590" [label="(Call,&s->session->tlsext_ellipticcurvelist)"];
"1000551" [label="(Identifier,type)"];
"1000661" [label="(Literal,0)"];
"1001022" [label="(Literal,0)"];
"1000573" [label="(Identifier,elliptic_curve_list)"];
"1000803" [label="(Call,&responder_id)"];
"1000957" [label="(Call,type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000568" [label="(Literal,0)"];
"1000383" [label="(Call,PACKET_remaining(&hostname) > TLSEXT_MAXLEN_host_name)"];
"1001051" [label="(Identifier,extension)"];
"1000815" [label="(Call,&responder_id)"];
"1000734" [label="(Call,PACKET_remaining(&responder_id_list) > 0)"];
"1000313" [label="(Identifier,s)"];
"1000771" [label="(Block,)"];
"1000122" [label="(MethodParameterIn,PACKET *pkt)"];
"1000436" [label="(Call,s->session->tlsext_hostname)"];
"1000658" [label="(Call,&supported_sig_algs)"];
"1000314" [label="(Call,&extension)"];
"1000361" [label="(Call,&servname_type)"];
"1000466" [label="(Identifier,extension)"];
"1000502" [label="(ControlStructure,if (!PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)\n                || PACKET_remaining(&ec_point_format_list) == 0))"];
"1000666" [label="(Literal,0)"];
"1000513" [label="(Identifier,ec_point_format_list)"];
"1000302" [label="(Call,s->tlsext_debug_arg)"];
"1000478" [label="(Call,!PACKET_strndup(&srp_I, &s->srp_ctx.login))"];
"1000354" [label="(Literal,0)"];
"1000640" [label="(ControlStructure,if (type == TLSEXT_TYPE_signature_algorithms))"];
"1000766" [label="(Call,PACKET_remaining(&responder_id_list) > 0)"];
"1000255" [label="(ControlStructure,goto ri_check;)"];
"1000961" [label="(Call,s->s3->tmp.finish_md_len == 0)"];
"1000677" [label="(Call,!tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs)))"];
"1000432" [label="(Call,s->servername_done)"];
"1001040" [label="(ControlStructure,if (custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al) <= 0))"];
"1000746" [label="(Call,s->tlsext_ocsp_ids == NULL)"];
"1000760" [label="(Call,s->tlsext_ocsp_ids = NULL)"];
"1000575" [label="(Literal,0)"];
"1001018" [label="(Call,&extension)"];
"1001017" [label="(Identifier,s)"];
"1001008" [label="(Call,SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp)"];
"1000209" [label="(Identifier,pkt)"];
"1000357" [label="(Call,!PACKET_get_1(&sni, &servname_type))"];
"1000719" [label="(ControlStructure,if (!PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list)))"];
"1000559" [label="(Call,&extension)"];
"1000571" [label="(Call,PACKET_remaining(&elliptic_curve_list))"];
"1000385" [label="(Call,&hostname)"];
"1000463" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &srp_I))"];
"1000856" [label="(Call,PACKET_data(&exts))"];
"1000368" [label="(Call,PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1001041" [label="(Call,custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al) <= 0)"];
"1000299" [label="(Call,PACKET_remaining(&extension))"];
"1000814" [label="(Call,PACKET_end(&responder_id))"];
"1000616" [label="(Call,s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1001025" [label="(Call,type == TLSEXT_TYPE_encrypt_then_mac)"];
"1000722" [label="(Call,&extension)"];
"1000877" [label="(Call,s->tlsext_ocsp_exts == NULL)"];
"1000578" [label="(Literal,0)"];
"1000300" [label="(Call,&extension)"];
"1000342" [label="(Call,PACKET_as_length_prefixed_2(&extension, &sni))"];
"1000830" [label="(Call,OCSP_RESPID_free(id))"];
"1000406" [label="(ControlStructure,if (!PACKET_strndup(&hostname, &s->session->tlsext_hostname)))"];
"1000510" [label="(Call,PACKET_remaining(&ec_point_format_list) == 0)"];
"1001050" [label="(Call,&extension)"];
"1000334" [label="(Identifier,TLSEXT_TYPE_server_name)"];
"1000673" [label="(Identifier,s)"];
"1000214" [label="(Identifier,s)"];
"1000979" [label="(ControlStructure,if (type == TLSEXT_TYPE_application_layer_protocol_negotiation &&\n                 s->s3->tmp.finish_md_len == 0))"];
"1000364" [label="(Call,servname_type != TLSEXT_NAMETYPE_host_name)"];
"1000866" [label="(Identifier,s)"];
"1000296" [label="(Call,PACKET_data(&extension))"];
"1000720" [label="(Call,!PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list))"];
"1001037" [label="(Identifier,s)"];
"1000305" [label="(ControlStructure,if (type == TLSEXT_TYPE_renegotiate))"];
"1000471" [label="(ControlStructure,if (PACKET_contains_zero_byte(&srp_I)))"];
"1000283" [label="(Identifier,extensions)"];
"1000742" [label="(Identifier,s)"];
"1000655" [label="(Call,(PACKET_remaining(&supported_sig_algs) % 2) != 0)"];
"1000267" [label="(Call,&extensions)"];
"1000654" [label="(Call,(PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0)"];
"1000557" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list))"];
"1000333" [label="(Identifier,type)"];
"1001042" [label="(Call,custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al))"];
"1000647" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)\n                || (PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0)"];
"1000784" [label="(Call,PACKET_remaining(&responder_id))"];
"1000527" [label="(Call,&ec_point_format_list)"];
"1000662" [label="(Call,PACKET_remaining(&supported_sig_algs) == 0)"];
"1000260" [label="(Call,&extensions)"];
"1000738" [label="(Literal,0)"];
"1000398" [label="(Identifier,hostname)"];
"1001055" [label="(Literal,0)"];
"1000441" [label="(Call,PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname)))"];
"1000679" [label="(Identifier,s)"];
"1000903" [label="(Call,type == TLSEXT_TYPE_heartbeat)"];
"1000367" [label="(Call,!PACKET_as_length_prefixed_2(&sni, &hostname))"];
"1000524" [label="(ControlStructure,if (!PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length)))"];
"1000805" [label="(ControlStructure,if (id == NULL))"];
"1000358" [label="(Call,PACKET_get_1(&sni, &servname_type))"];
"1001053" [label="(Literal,0)"];
"1000596" [label="(Call,&s->\n                                   session->tlsext_ellipticcurvelist_length)"];
"1000612" [label="(Identifier,type)"];
"1000747" [label="(Call,s->tlsext_ocsp_ids)"];
"1000981" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1000572" [label="(Call,&elliptic_curve_list)"];
"1000567" [label="(Identifier,elliptic_curve_list)"];
"1000879" [label="(Identifier,s)"];
"1000870" [label="(Call,&ext_data)"];
"1000740" [label="(Call,s->tlsext_ocsp_ids = sk_OCSP_RESPID_new_null())"];
"1000960" [label="(Identifier,TLSEXT_TYPE_next_proto_neg)"];
"1000265" [label="(Call,!tls1_check_duplicate_extensions(&extensions))"];
"1000326" [label="(Identifier,s)"];
"1000681" [label="(Call,&supported_sig_algs)"];
"1000798" [label="(Call,d2i_OCSP_RESPID(NULL, &id_data,\n                                         PACKET_remaining(&responder_id)))"];
"1000375" [label="(Literal,0)"];
"1000371" [label="(Call,&hostname)"];
"1000873" [label="(Call,&exts)"];
"1000764" [label="(Identifier,NULL)"];
"1000884" [label="(Call,PACKET_end(&exts))"];
"1000680" [label="(Call,PACKET_data(&supported_sig_algs))"];
"1000514" [label="(Literal,0)"];
"1000829" [label="(Block,)"];
"1000908" [label="(ControlStructure,if (!PACKET_get_1(&extension, &hbtype)\n                || PACKET_remaining(&extension)))"];
"1000994" [label="(ControlStructure,if (!tls1_alpn_handle_client_hello(s, &extension, al)))"];
"1000555" [label="(ControlStructure,if (!PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)\n                || PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0))"];
"1000684" [label="(Call,&supported_sig_algs)"];
"1000691" [label="(Call,type == TLSEXT_TYPE_status_request)"];
"1000470" [label="(Literal,0)"];
"1000586" [label="(Call,!PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length))"];
"1000813" [label="(Identifier,id_data)"];
"1000792" [label="(Identifier,id_data)"];
"1000959" [label="(Identifier,type)"];
"1000360" [label="(Identifier,sni)"];
"1000688" [label="(Literal,0)"];
"1001056" [label="(ControlStructure,if (PACKET_remaining(pkt) != 0))"];
"1000517" [label="(Literal,0)"];
"1000855" [label="(Identifier,ext_data)"];
"1000307" [label="(Identifier,type)"];
"1000605" [label="(Identifier,al)"];
"1000650" [label="(Call,&extension)"];
"1000620" [label="(Call,!s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000611" [label="(Call,type == TLSEXT_TYPE_session_ticket)"];
"1000787" [label="(Literal,0)"];
"1000498" [label="(Identifier,type)"];
"1000995" [label="(Call,!tls1_alpn_handle_client_hello(s, &extension, al))"];
"1000780" [label="(Identifier,responder_id_list)"];
"1000275" [label="(Call,&type)"];
"1000569" [label="(Call,(PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000253" [label="(Identifier,pkt)"];
"1000708" [label="(Literal,0)"];
"1001009" [label="(Call,SSL_get_srtp_profiles(s))"];
"1000623" [label="(Call,PACKET_data(&extension))"];
"1001026" [label="(Identifier,type)"];
"1000450" [label="(Call,s->session->tlsext_hostname)"];
"1000499" [label="(Identifier,TLSEXT_TYPE_ec_point_formats)"];
"1000697" [label="(Call,PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type))"];
"1000617" [label="(Call,s->tls_session_ticket_ext_cb)"];
"1000642" [label="(Identifier,type)"];
"1000535" [label="(Call,&s->\n                                   session->tlsext_ecpointformatlist_length)"];
"1000730" [label="(Identifier,s)"];
"1000669" [label="(Literal,0)"];
"1000901" [label="(Call,SSL_IS_DTLS(s))"];
"1000659" [label="(Identifier,supported_sig_algs)"];
"1000695" [label="(ControlStructure,if (!PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type)))"];
"1000664" [label="(Call,&supported_sig_algs)"];
"1000807" [label="(Identifier,id)"];
"1001005" [label="(Call,SSL_IS_DTLS(s) && SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp)"];
"1000859" [label="(Call,sk_X509_EXTENSION_pop_free(s->tlsext_ocsp_exts,\n                                               X509_EXTENSION_free))"];
"1001024" [label="(ControlStructure,if (type == TLSEXT_TYPE_encrypt_then_mac))"];
"1000507" [label="(Identifier,extension)"];
"1000279" [label="(ControlStructure,if (!PACKET_get_length_prefixed_2(&extensions, &extension)))"];
"1000690" [label="(ControlStructure,if (type == TLSEXT_TYPE_status_request))"];
"1000355" [label="(ControlStructure,if (!PACKET_get_1(&sni, &servname_type)\n                || servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname)))"];
"1000692" [label="(Identifier,type)"];
"1000270" [label="(Literal,0)"];
"1001012" [label="(Identifier,type)"];
"1001015" [label="(ControlStructure,if (ssl_parse_clienthello_use_srtp_ext(s, &extension, al)))"];
"1000588" [label="(Call,&elliptic_curve_list)"];
"1000426" [label="(Identifier,s)"];
"1000564" [label="(Call,PACKET_remaining(&elliptic_curve_list) == 0)"];
"1000842" [label="(Identifier,extension)"];
"1000629" [label="(Call,s->tls_session_ticket_ext_cb_arg)"];
"1000387" [label="(Identifier,TLSEXT_MAXLEN_host_name)"];
"1000818" [label="(Call,OCSP_RESPID_free(id))"];
"1000457" [label="(Call,type == TLSEXT_TYPE_srp)"];
"1000627" [label="(Call,&extension)"];
"1000272" [label="(Call,PACKET_get_net_2(&extensions, &type))"];
"1000626" [label="(Call,PACKET_remaining(&extension))"];
"1000294" [label="(Literal,0)"];
"1001060" [label="(Literal,0)"];
"1000310" [label="(ControlStructure,if (!ssl_parse_clienthello_renegotiate_ext(s, &extension, al)))"];
"1000252" [label="(Call,PACKET_remaining(pkt))"];
"1000397" [label="(Call,&hostname)"];
"1000462" [label="(ControlStructure,if (!PACKET_as_length_prefixed_1(&extension, &srp_I)))"];
"1000624" [label="(Call,&extension)"];
"1000549" [label="(ControlStructure,if (type == TLSEXT_TYPE_elliptic_curves))"];
"1000643" [label="(Identifier,TLSEXT_TYPE_signature_algorithms)"];
"1000762" [label="(Identifier,s)"];
"1000860" [label="(Call,s->tlsext_ocsp_exts)"];
"1000729" [label="(Call,s->tlsext_ocsp_ids)"];
"1000556" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)\n                || PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000343" [label="(Call,&extension)"];
"1000476" [label="(Literal,0)"];
"1000918" [label="(Identifier,extension)"];
"1001052" [label="(Identifier,al)"];
"1000465" [label="(Call,&extension)"];
"1000303" [label="(Identifier,s)"];
"1000693" [label="(Identifier,TLSEXT_TYPE_status_request)"];
"1000369" [label="(Call,&sni)"];
"1000284" [label="(Call,&extension)"];
"1000258" [label="(Call,PACKET_as_length_prefixed_2(pkt, &extensions))"];
"1000480" [label="(Call,&srp_I)"];
"1000123" [label="(MethodParameterIn,int *al)"];
"1000865" [label="(Call,s->tlsext_ocsp_exts)"];
"1000318" [label="(Literal,0)"];
"1000621" [label="(Call,s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000735" [label="(Call,PACKET_remaining(&responder_id_list))"];
"1000306" [label="(Call,type == TLSEXT_TYPE_renegotiate)"];
"1000610" [label="(ControlStructure,if (type == TLSEXT_TYPE_session_ticket))"];
"1000566" [label="(Call,&elliptic_curve_list)"];
"1000339" [label="(ControlStructure,if (!PACKET_as_length_prefixed_2(&extension, &sni)\n                /* ServerNameList must be at least 1 byte long. */\n                || PACKET_remaining(&sni) == 0))"];
"1000467" [label="(Call,&srp_I)"];
"1000817" [label="(Block,)"];
"1000544" [label="(Identifier,al)"];
"1000273" [label="(Call,&extensions)"];
"1000745" [label="(ControlStructure,if (s->tlsext_ocsp_ids == NULL))"];
"1000341" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &sni))"];
"1001058" [label="(Call,PACKET_remaining(pkt))"];
"1000384" [label="(Call,PACKET_remaining(&hostname))"];
"1000811" [label="(ControlStructure,if (id_data != PACKET_end(&responder_id)))"];
"1000250" [label="(ControlStructure,if (PACKET_remaining(pkt) == 0))"];
"1000678" [label="(Call,tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs)))"];
"1000508" [label="(Call,&ec_point_format_list)"];
"1000875" [label="(ControlStructure,if (s->tlsext_ocsp_exts == NULL\n                        || ext_data != PACKET_end(&exts)))"];
"1000331" [label="(ControlStructure,if (type == TLSEXT_TYPE_server_name))"];
"1000409" [label="(Call,&hostname)"];
"1000737" [label="(Identifier,responder_id_list)"];
"1000984" [label="(Call,s->s3->tmp.finish_md_len == 0)"];
"1000868" [label="(Call,d2i_X509_EXTENSIONS(NULL, &ext_data,\n                                            PACKET_remaining(&exts)))"];
"1000797" [label="(Identifier,id)"];
"1000274" [label="(Identifier,extensions)"];
"1001007" [label="(Identifier,s)"];
"1000909" [label="(Call,!PACKET_get_1(&extension, &hbtype)\n                || PACKET_remaining(&extension))"];
"1001057" [label="(Call,PACKET_remaining(pkt) != 0)"];
"1000288" [label="(ControlStructure,if (s->tlsext_debug_cb))"];
"1000526" [label="(Call,PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length))"];
"1000622" [label="(Identifier,s)"];
"1000506" [label="(Call,&extension)"];
"1000628" [label="(Identifier,extension)"];
"1000956" [label="(ControlStructure,if (type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0))"];
"1000958" [label="(Call,type == TLSEXT_TYPE_next_proto_neg)"];
"1000345" [label="(Call,&sni)"];
"1000899" [label="(ControlStructure,if (SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat))"];
"1000839" [label="(Call,!PACKET_as_length_prefixed_2(&extension, &exts))"];
"1000988" [label="(Identifier,s)"];
"1000444" [label="(Call,s->session->tlsext_hostname)"];
"1001043" [label="(Identifier,s)"];
"1000491" [label="(Identifier,al)"];
"1000793" [label="(Call,PACKET_data(&responder_id))"];
"1000927" [label="(Identifier,hbtype)"];
"1000882" [label="(Call,ext_data != PACKET_end(&exts))"];
"1000736" [label="(Call,&responder_id_list)"];
"1000683" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000911" [label="(Call,PACKET_get_1(&extension, &hbtype))"];
"1000965" [label="(Identifier,s)"];
"1000902" [label="(Identifier,s)"];
"1000630" [label="(Identifier,s)"];
"1000770" [label="(Literal,0)"];
"1000565" [label="(Call,PACKET_remaining(&elliptic_curve_list))"];
"1000769" [label="(Identifier,responder_id_list)"];
"1000996" [label="(Call,tls1_alpn_handle_client_hello(s, &extension, al))"];
"1000311" [label="(Call,!ssl_parse_clienthello_renegotiate_ext(s, &extension, al))"];
"1000980" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000914" [label="(Call,&hbtype)"];
"1000983" [label="(Identifier,TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1001010" [label="(Identifier,s)"];
"1000831" [label="(Identifier,id)"];
"1000459" [label="(Identifier,TLSEXT_TYPE_srp)"];
"1001000" [label="(Identifier,al)"];
"1000878" [label="(Call,s->tlsext_ocsp_exts)"];
"1000904" [label="(Identifier,type)"];
"1000349" [label="(Call,&sni)"];
"1000550" [label="(Call,type == TLSEXT_TYPE_elliptic_curves)"];
"1000259" [label="(Identifier,pkt)"];
"1000481" [label="(Identifier,srp_I)"];
"1000344" [label="(Identifier,extension)"];
"1000618" [label="(Identifier,s)"];
"1000863" [label="(Identifier,X509_EXTENSION_free)"];
"1000280" [label="(Call,!PACKET_get_length_prefixed_2(&extensions, &extension))"];
"1000869" [label="(Identifier,NULL)"];
"1000799" [label="(Identifier,NULL)"];
"1000474" [label="(Identifier,srp_I)"];
"1000292" [label="(Call,s->tlsext_debug_cb(s, 0, type, PACKET_data(&extension),\n                               PACKET_remaining(&extension),\n                               s->tlsext_debug_arg))"];
"1001030" [label="(Identifier,s)"];
"1000497" [label="(Call,type == TLSEXT_TYPE_ec_point_formats)"];
"1000312" [label="(Call,ssl_parse_clienthello_renegotiate_ext(s, &extension, al))"];
"1000395" [label="(ControlStructure,if (PACKET_contains_zero_byte(&hostname)))"];
"1000685" [label="(Identifier,supported_sig_algs)"];
"1000663" [label="(Call,PACKET_remaining(&supported_sig_algs))"];
"1000777" [label="(Call,!PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id))"];
"1000854" [label="(Call,ext_data = PACKET_data(&exts))"];
"1000696" [label="(Call,!PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type))"];
"1001004" [label="(ControlStructure,if (SSL_IS_DTLS(s) && SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp))"];
"1000585" [label="(ControlStructure,if (!PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length)))"];
"1000982" [label="(Identifier,type)"];
"1000974" [label="(Identifier,s)"];
"1000570" [label="(Call,PACKET_remaining(&elliptic_curve_list) % 2)"];
"1000840" [label="(Call,PACKET_as_length_prefixed_2(&extension, &exts))"];
"1000379" [label="(Identifier,s)"];
"1000407" [label="(Call,!PACKET_strndup(&hostname, &s->session->tlsext_hostname))"];
"1000411" [label="(Call,&s->session->tlsext_hostname)"];
"1000208" [label="(Identifier,s)"];
"1000320" [label="(Identifier,renegotiate_seen)"];
"1000724" [label="(Call,&responder_id_list)"];
"1001049" [label="(Call,PACKET_remaining(&extension))"];
"1000876" [label="(Call,s->tlsext_ocsp_exts == NULL\n                        || ext_data != PACKET_end(&exts))"];
"1000263" [label="(Literal,0)"];
"1000997" [label="(Identifier,s)"];
"1000824" [label="(Call,sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id))"];
"1000721" [label="(Call,PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list))"];
"1000872" [label="(Call,PACKET_remaining(&exts))"];
"1000660" [label="(Literal,2)"];
"1000574" [label="(Literal,2)"];
"1000646" [label="(ControlStructure,if (!PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)\n                || (PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0))"];
"1000316" [label="(Identifier,al)"];
"1000768" [label="(Call,&responder_id_list)"];
"1000700" [label="(Call,(unsigned int *)&s->tlsext_status_type)"];
"1000420" [label="(Identifier,al)"];
"1000503" [label="(Call,!PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)\n                || PACKET_remaining(&ec_point_format_list) == 0)"];
"1001013" [label="(Identifier,TLSEXT_TYPE_use_srtp)"];
"1000496" [label="(ControlStructure,if (type == TLSEXT_TYPE_ec_point_formats))"];
"1000853" [label="(Block,)"];
"1000456" [label="(ControlStructure,if (type == TLSEXT_TYPE_srp))"];
"1000781" [label="(Call,&responder_id)"];
"1000828" [label="(Identifier,id)"];
"1000786" [label="(Identifier,responder_id)"];
"1000563" [label="(Call,PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0)"];
"1000727" [label="(Literal,0)"];
"1000796" [label="(Call,id = d2i_OCSP_RESPID(NULL, &id_data,\n                                         PACKET_remaining(&responder_id)))"];
"1000652" [label="(Call,&supported_sig_algs)"];
"1000850" [label="(Call,&exts)"];
"1000775" [label="(ControlStructure,if (!PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)\n                        || PACKET_remaining(&responder_id) == 0))"];
"1000251" [label="(Call,PACKET_remaining(pkt) == 0)"];
"1001016" [label="(Call,ssl_parse_clienthello_use_srtp_ext(s, &extension, al))"];
"1000810" [label="(Literal,0)"];
"1000651" [label="(Identifier,extension)"];
"1000759" [label="(Block,)"];
"1001006" [label="(Call,SSL_IS_DTLS(s))"];
"1000790" [label="(Literal,0)"];
"1000821" [label="(Literal,0)"];
"1000802" [label="(Call,PACKET_remaining(&responder_id))"];
"1000910" [label="(Call,!PACKET_get_1(&extension, &hbtype))"];
"1000301" [label="(Identifier,extension)"];
"1000287" [label="(Literal,0)"];
"1000350" [label="(Identifier,sni)"];
"1000698" [label="(Call,&extension)"];
"1000676" [label="(ControlStructure,if (!tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs))))"];
"1000665" [label="(Identifier,supported_sig_algs)"];
"1000732" [label="(Identifier,OCSP_RESPID_free)"];
"1000861" [label="(Identifier,s)"];
"1000841" [label="(Call,&extension)"];
"1000121" [label="(MethodParameterIn,SSL *s)"];
"1000851" [label="(Identifier,exts)"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000253"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="CFG: "];
"1000252" -> "1001095"  [label="DDG: pkt"];
"1000252" -> "1000251"  [label="DDG: pkt"];
"1000207" -> "1000252"  [label="DDG: pkt"];
"1000122" -> "1000252"  [label="DDG: pkt"];
"1000252" -> "1000258"  [label="DDG: pkt"];
"1000207" -> "1000201"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000214" -> "1000207"  [label="CFG: "];
"1000207" -> "1001095"  [label="DDG: s"];
"1000207" -> "1001095"  [label="DDG: ssl_check_for_safari(s, pkt)"];
"1000121" -> "1000207"  [label="DDG: s"];
"1000122" -> "1000207"  [label="DDG: pkt"];
"1000207" -> "1000292"  [label="DDG: s"];
"1000207" -> "1000312"  [label="DDG: s"];
"1000207" -> "1000621"  [label="DDG: s"];
"1000207" -> "1000678"  [label="DDG: s"];
"1000207" -> "1000901"  [label="DDG: s"];
"1000121" -> "1000120"  [label="AST: "];
"1000121" -> "1001095"  [label="DDG: s"];
"1000121" -> "1000292"  [label="DDG: s"];
"1000121" -> "1000312"  [label="DDG: s"];
"1000121" -> "1000621"  [label="DDG: s"];
"1000121" -> "1000678"  [label="DDG: s"];
"1000121" -> "1000901"  [label="DDG: s"];
"1000121" -> "1000996"  [label="DDG: s"];
"1000121" -> "1001006"  [label="DDG: s"];
"1000121" -> "1001009"  [label="DDG: s"];
"1000121" -> "1001016"  [label="DDG: s"];
"1000121" -> "1001042"  [label="DDG: s"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1001095"  [label="DDG: pkt"];
"1000122" -> "1000258"  [label="DDG: pkt"];
"1000122" -> "1001058"  [label="DDG: pkt"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000254"  [label="CFG: "];
"1000254" -> "1000251"  [label="AST: "];
"1000255" -> "1000251"  [label="CFG: "];
"1000259" -> "1000251"  [label="CFG: "];
"1000251" -> "1001095"  [label="DDG: PACKET_remaining(pkt) == 0"];
"1000251" -> "1001095"  [label="DDG: PACKET_remaining(pkt)"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1001095"  [label="DDG: pkt"];
"1000258" -> "1001095"  [label="DDG: &extensions"];
"1000258" -> "1000257"  [label="DDG: pkt"];
"1000258" -> "1000257"  [label="DDG: &extensions"];
"1000258" -> "1000266"  [label="DDG: &extensions"];
"1000258" -> "1001058"  [label="DDG: pkt"];
"1000257" -> "1000256"  [label="AST: "];
"1000263" -> "1000257"  [label="CFG: "];
"1000268" -> "1000257"  [label="CFG: "];
"1000257" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(pkt, &extensions)"];
"1000257" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(pkt, &extensions)"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000267"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1001095"  [label="DDG: &extensions"];
"1000266" -> "1000265"  [label="DDG: &extensions"];
"1000266" -> "1000272"  [label="DDG: &extensions"];
"1000265" -> "1000264"  [label="AST: "];
"1000270" -> "1000265"  [label="CFG: "];
"1000274" -> "1000265"  [label="CFG: "];
"1000265" -> "1001095"  [label="DDG: !tls1_check_duplicate_extensions(&extensions)"];
"1000265" -> "1001095"  [label="DDG: tls1_check_duplicate_extensions(&extensions)"];
"1000272" -> "1000271"  [label="AST: "];
"1000272" -> "1000275"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000283" -> "1000272"  [label="CFG: "];
"1001059" -> "1000272"  [label="CFG: "];
"1000272" -> "1001095"  [label="DDG: &type"];
"1000272" -> "1001095"  [label="DDG: &extensions"];
"1000272" -> "1001095"  [label="DDG: PACKET_get_net_2(&extensions, &type)"];
"1000281" -> "1000272"  [label="DDG: &extensions"];
"1000272" -> "1000281"  [label="DDG: &extensions"];
"1000281" -> "1000280"  [label="AST: "];
"1000281" -> "1000284"  [label="CFG: "];
"1000282" -> "1000281"  [label="AST: "];
"1000284" -> "1000281"  [label="AST: "];
"1000280" -> "1000281"  [label="CFG: "];
"1000281" -> "1001095"  [label="DDG: &extensions"];
"1000281" -> "1001095"  [label="DDG: &extension"];
"1000281" -> "1000280"  [label="DDG: &extensions"];
"1000281" -> "1000280"  [label="DDG: &extension"];
"1000649" -> "1000281"  [label="DDG: &extension"];
"1001049" -> "1000281"  [label="DDG: &extension"];
"1000626" -> "1000281"  [label="DDG: &extension"];
"1001016" -> "1000281"  [label="DDG: &extension"];
"1000558" -> "1000281"  [label="DDG: &extension"];
"1000299" -> "1000281"  [label="DDG: &extension"];
"1000911" -> "1000281"  [label="DDG: &extension"];
"1000697" -> "1000281"  [label="DDG: &extension"];
"1000312" -> "1000281"  [label="DDG: &extension"];
"1000916" -> "1000281"  [label="DDG: &extension"];
"1000840" -> "1000281"  [label="DDG: &extension"];
"1000505" -> "1000281"  [label="DDG: &extension"];
"1000464" -> "1000281"  [label="DDG: &extension"];
"1000342" -> "1000281"  [label="DDG: &extension"];
"1000996" -> "1000281"  [label="DDG: &extension"];
"1000281" -> "1000296"  [label="DDG: &extension"];
"1000281" -> "1000312"  [label="DDG: &extension"];
"1000281" -> "1000342"  [label="DDG: &extension"];
"1000281" -> "1000464"  [label="DDG: &extension"];
"1000281" -> "1000505"  [label="DDG: &extension"];
"1000281" -> "1000558"  [label="DDG: &extension"];
"1000281" -> "1000623"  [label="DDG: &extension"];
"1000281" -> "1000649"  [label="DDG: &extension"];
"1000281" -> "1000697"  [label="DDG: &extension"];
"1000281" -> "1000911"  [label="DDG: &extension"];
"1000281" -> "1000996"  [label="DDG: &extension"];
"1000281" -> "1001016"  [label="DDG: &extension"];
"1000281" -> "1001046"  [label="DDG: &extension"];
"1000280" -> "1000279"  [label="AST: "];
"1000287" -> "1000280"  [label="CFG: "];
"1000290" -> "1000280"  [label="CFG: "];
"1000280" -> "1001095"  [label="DDG: !PACKET_get_length_prefixed_2(&extensions, &extension)"];
"1000280" -> "1001095"  [label="DDG: PACKET_get_length_prefixed_2(&extensions, &extension)"];
"1000296" -> "1000292"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000301" -> "1000296"  [label="CFG: "];
"1000296" -> "1000292"  [label="DDG: &extension"];
"1000296" -> "1000299"  [label="DDG: &extension"];
"1000292" -> "1000288"  [label="AST: "];
"1000292" -> "1000302"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000295" -> "1000292"  [label="AST: "];
"1000299" -> "1000292"  [label="AST: "];
"1000302" -> "1000292"  [label="AST: "];
"1000307" -> "1000292"  [label="CFG: "];
"1000292" -> "1001095"  [label="DDG: s->tlsext_debug_cb(s, 0, type, PACKET_data(&extension),\n                               PACKET_remaining(&extension),\n                               s->tlsext_debug_arg)"];
"1000292" -> "1001095"  [label="DDG: s"];
"1000292" -> "1001095"  [label="DDG: PACKET_data(&extension)"];
"1000292" -> "1001095"  [label="DDG: PACKET_remaining(&extension)"];
"1000292" -> "1001095"  [label="DDG: s->tlsext_debug_arg"];
"1000621" -> "1000292"  [label="DDG: s"];
"1000678" -> "1000292"  [label="DDG: s"];
"1001006" -> "1000292"  [label="DDG: s"];
"1000312" -> "1000292"  [label="DDG: s"];
"1000996" -> "1000292"  [label="DDG: s"];
"1001042" -> "1000292"  [label="DDG: s"];
"1001042" -> "1000292"  [label="DDG: type"];
"1001009" -> "1000292"  [label="DDG: s"];
"1000901" -> "1000292"  [label="DDG: s"];
"1001016" -> "1000292"  [label="DDG: s"];
"1001011" -> "1000292"  [label="DDG: type"];
"1000497" -> "1000292"  [label="DDG: type"];
"1000981" -> "1000292"  [label="DDG: type"];
"1000306" -> "1000292"  [label="DDG: type"];
"1000550" -> "1000292"  [label="DDG: type"];
"1000457" -> "1000292"  [label="DDG: type"];
"1000641" -> "1000292"  [label="DDG: type"];
"1000611" -> "1000292"  [label="DDG: type"];
"1000332" -> "1000292"  [label="DDG: type"];
"1000903" -> "1000292"  [label="DDG: type"];
"1001025" -> "1000292"  [label="DDG: type"];
"1000691" -> "1000292"  [label="DDG: type"];
"1000958" -> "1000292"  [label="DDG: type"];
"1000299" -> "1000292"  [label="DDG: &extension"];
"1000292" -> "1000306"  [label="DDG: type"];
"1000292" -> "1000312"  [label="DDG: s"];
"1000292" -> "1000621"  [label="DDG: s"];
"1000292" -> "1000678"  [label="DDG: s"];
"1000292" -> "1000901"  [label="DDG: s"];
"1000292" -> "1000909"  [label="DDG: PACKET_remaining(&extension)"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000313" -> "1000306"  [label="CFG: "];
"1000326" -> "1000306"  [label="CFG: "];
"1000306" -> "1001095"  [label="DDG: type"];
"1000306" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_renegotiate"];
"1000306" -> "1001095"  [label="DDG: TLSEXT_TYPE_renegotiate"];
"1001011" -> "1000306"  [label="DDG: type"];
"1000497" -> "1000306"  [label="DDG: type"];
"1000981" -> "1000306"  [label="DDG: type"];
"1000550" -> "1000306"  [label="DDG: type"];
"1000457" -> "1000306"  [label="DDG: type"];
"1000641" -> "1000306"  [label="DDG: type"];
"1000611" -> "1000306"  [label="DDG: type"];
"1000332" -> "1000306"  [label="DDG: type"];
"1000903" -> "1000306"  [label="DDG: type"];
"1001025" -> "1000306"  [label="DDG: type"];
"1001042" -> "1000306"  [label="DDG: type"];
"1000691" -> "1000306"  [label="DDG: type"];
"1000958" -> "1000306"  [label="DDG: type"];
"1000306" -> "1000332"  [label="DDG: type"];
"1000332" -> "1000331"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000344" -> "1000332"  [label="CFG: "];
"1000458" -> "1000332"  [label="CFG: "];
"1000332" -> "1001095"  [label="DDG: TLSEXT_TYPE_server_name"];
"1000332" -> "1001095"  [label="DDG: type"];
"1000332" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_server_name"];
"1000332" -> "1000457"  [label="DDG: type"];
"1000457" -> "1000456"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000466" -> "1000457"  [label="CFG: "];
"1000498" -> "1000457"  [label="CFG: "];
"1000457" -> "1001095"  [label="DDG: TLSEXT_TYPE_srp"];
"1000457" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_srp"];
"1000457" -> "1001095"  [label="DDG: type"];
"1000457" -> "1000497"  [label="DDG: type"];
"1000497" -> "1000496"  [label="AST: "];
"1000497" -> "1000499"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000507" -> "1000497"  [label="CFG: "];
"1000551" -> "1000497"  [label="CFG: "];
"1000497" -> "1001095"  [label="DDG: type"];
"1000497" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_ec_point_formats"];
"1000497" -> "1001095"  [label="DDG: TLSEXT_TYPE_ec_point_formats"];
"1000497" -> "1000550"  [label="DDG: type"];
"1000550" -> "1000549"  [label="AST: "];
"1000550" -> "1000552"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="AST: "];
"1000560" -> "1000550"  [label="CFG: "];
"1000612" -> "1000550"  [label="CFG: "];
"1000550" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_elliptic_curves"];
"1000550" -> "1001095"  [label="DDG: type"];
"1000550" -> "1001095"  [label="DDG: TLSEXT_TYPE_elliptic_curves"];
"1000550" -> "1000611"  [label="DDG: type"];
"1000611" -> "1000610"  [label="AST: "];
"1000611" -> "1000613"  [label="CFG: "];
"1000612" -> "1000611"  [label="AST: "];
"1000613" -> "1000611"  [label="AST: "];
"1000618" -> "1000611"  [label="CFG: "];
"1000642" -> "1000611"  [label="CFG: "];
"1000611" -> "1001095"  [label="DDG: TLSEXT_TYPE_session_ticket"];
"1000611" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_session_ticket"];
"1000611" -> "1001095"  [label="DDG: type"];
"1000611" -> "1000641"  [label="DDG: type"];
"1000641" -> "1000640"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000642" -> "1000641"  [label="AST: "];
"1000643" -> "1000641"  [label="AST: "];
"1000651" -> "1000641"  [label="CFG: "];
"1000692" -> "1000641"  [label="CFG: "];
"1000641" -> "1001095"  [label="DDG: TLSEXT_TYPE_signature_algorithms"];
"1000641" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_signature_algorithms"];
"1000641" -> "1001095"  [label="DDG: type"];
"1000641" -> "1000691"  [label="DDG: type"];
"1000691" -> "1000690"  [label="AST: "];
"1000691" -> "1000693"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000693" -> "1000691"  [label="AST: "];
"1000699" -> "1000691"  [label="CFG: "];
"1000902" -> "1000691"  [label="CFG: "];
"1000691" -> "1001095"  [label="DDG: TLSEXT_TYPE_status_request"];
"1000691" -> "1001095"  [label="DDG: type"];
"1000691" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_status_request"];
"1000691" -> "1000903"  [label="DDG: type"];
"1000691" -> "1000958"  [label="DDG: type"];
"1000903" -> "1000900"  [label="AST: "];
"1000903" -> "1000905"  [label="CFG: "];
"1000904" -> "1000903"  [label="AST: "];
"1000905" -> "1000903"  [label="AST: "];
"1000900" -> "1000903"  [label="CFG: "];
"1000903" -> "1001095"  [label="DDG: type"];
"1000903" -> "1001095"  [label="DDG: TLSEXT_TYPE_heartbeat"];
"1000903" -> "1000900"  [label="DDG: type"];
"1000903" -> "1000900"  [label="DDG: TLSEXT_TYPE_heartbeat"];
"1000903" -> "1000958"  [label="DDG: type"];
"1000900" -> "1000899"  [label="AST: "];
"1000900" -> "1000901"  [label="CFG: "];
"1000901" -> "1000900"  [label="AST: "];
"1000913" -> "1000900"  [label="CFG: "];
"1000959" -> "1000900"  [label="CFG: "];
"1000900" -> "1001095"  [label="DDG: SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat"];
"1000900" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_heartbeat"];
"1000900" -> "1001095"  [label="DDG: SSL_IS_DTLS(s)"];
"1000901" -> "1000900"  [label="DDG: s"];
"1000958" -> "1000957"  [label="AST: "];
"1000958" -> "1000960"  [label="CFG: "];
"1000959" -> "1000958"  [label="AST: "];
"1000960" -> "1000958"  [label="AST: "];
"1000965" -> "1000958"  [label="CFG: "];
"1000957" -> "1000958"  [label="CFG: "];
"1000958" -> "1001095"  [label="DDG: TLSEXT_TYPE_next_proto_neg"];
"1000958" -> "1001095"  [label="DDG: type"];
"1000958" -> "1000957"  [label="DDG: type"];
"1000958" -> "1000957"  [label="DDG: TLSEXT_TYPE_next_proto_neg"];
"1000958" -> "1000981"  [label="DDG: type"];
"1000957" -> "1000956"  [label="AST: "];
"1000957" -> "1000961"  [label="CFG: "];
"1000961" -> "1000957"  [label="AST: "];
"1000974" -> "1000957"  [label="CFG: "];
"1000982" -> "1000957"  [label="CFG: "];
"1000957" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0"];
"1000957" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_next_proto_neg"];
"1000957" -> "1001095"  [label="DDG: s->s3->tmp.finish_md_len == 0"];
"1000980" -> "1000957"  [label="DDG: s->s3->tmp.finish_md_len == 0"];
"1000961" -> "1000957"  [label="DDG: s->s3->tmp.finish_md_len"];
"1000961" -> "1000957"  [label="DDG: 0"];
"1000957" -> "1000980"  [label="DDG: s->s3->tmp.finish_md_len == 0"];
"1000980" -> "1000979"  [label="AST: "];
"1000980" -> "1000981"  [label="CFG: "];
"1000980" -> "1000984"  [label="CFG: "];
"1000981" -> "1000980"  [label="AST: "];
"1000984" -> "1000980"  [label="AST: "];
"1000997" -> "1000980"  [label="CFG: "];
"1001007" -> "1000980"  [label="CFG: "];
"1000980" -> "1001095"  [label="DDG: s->s3->tmp.finish_md_len == 0"];
"1000980" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_application_layer_protocol_negotiation"];
"1000980" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_application_layer_protocol_negotiation &&\n                 s->s3->tmp.finish_md_len == 0"];
"1000981" -> "1000980"  [label="DDG: type"];
"1000981" -> "1000980"  [label="DDG: TLSEXT_TYPE_application_layer_protocol_negotiation"];
"1000984" -> "1000980"  [label="DDG: s->s3->tmp.finish_md_len"];
"1000984" -> "1000980"  [label="DDG: 0"];
"1000981" -> "1000983"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000983" -> "1000981"  [label="AST: "];
"1000988" -> "1000981"  [label="CFG: "];
"1000981" -> "1001095"  [label="DDG: type"];
"1000981" -> "1001095"  [label="DDG: TLSEXT_TYPE_application_layer_protocol_negotiation"];
"1000981" -> "1001011"  [label="DDG: type"];
"1000981" -> "1001025"  [label="DDG: type"];
"1001011" -> "1001008"  [label="AST: "];
"1001011" -> "1001013"  [label="CFG: "];
"1001012" -> "1001011"  [label="AST: "];
"1001013" -> "1001011"  [label="AST: "];
"1001008" -> "1001011"  [label="CFG: "];
"1001011" -> "1001095"  [label="DDG: type"];
"1001011" -> "1001095"  [label="DDG: TLSEXT_TYPE_use_srtp"];
"1001011" -> "1001008"  [label="DDG: type"];
"1001011" -> "1001008"  [label="DDG: TLSEXT_TYPE_use_srtp"];
"1001011" -> "1001025"  [label="DDG: type"];
"1001008" -> "1001005"  [label="AST: "];
"1001008" -> "1001009"  [label="CFG: "];
"1001009" -> "1001008"  [label="AST: "];
"1001005" -> "1001008"  [label="CFG: "];
"1001008" -> "1001095"  [label="DDG: SSL_get_srtp_profiles(s)"];
"1001008" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_use_srtp"];
"1001008" -> "1001005"  [label="DDG: SSL_get_srtp_profiles(s)"];
"1001008" -> "1001005"  [label="DDG: type == TLSEXT_TYPE_use_srtp"];
"1001009" -> "1001008"  [label="DDG: s"];
"1001005" -> "1001004"  [label="AST: "];
"1001005" -> "1001006"  [label="CFG: "];
"1001006" -> "1001005"  [label="AST: "];
"1001017" -> "1001005"  [label="CFG: "];
"1001026" -> "1001005"  [label="CFG: "];
"1001005" -> "1001095"  [label="DDG: SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp"];
"1001005" -> "1001095"  [label="DDG: SSL_IS_DTLS(s) && SSL_get_srtp_profiles(s)\n                 && type == TLSEXT_TYPE_use_srtp"];
"1001005" -> "1001095"  [label="DDG: SSL_IS_DTLS(s)"];
"1001006" -> "1001005"  [label="DDG: s"];
"1001025" -> "1001024"  [label="AST: "];
"1001025" -> "1001027"  [label="CFG: "];
"1001026" -> "1001025"  [label="AST: "];
"1001027" -> "1001025"  [label="AST: "];
"1001030" -> "1001025"  [label="CFG: "];
"1001037" -> "1001025"  [label="CFG: "];
"1001025" -> "1001095"  [label="DDG: type"];
"1001025" -> "1001095"  [label="DDG: TLSEXT_TYPE_encrypt_then_mac"];
"1001025" -> "1001095"  [label="DDG: type == TLSEXT_TYPE_encrypt_then_mac"];
"1001025" -> "1001042"  [label="DDG: type"];
"1001042" -> "1001041"  [label="AST: "];
"1001042" -> "1001052"  [label="CFG: "];
"1001043" -> "1001042"  [label="AST: "];
"1001044" -> "1001042"  [label="AST: "];
"1001045" -> "1001042"  [label="AST: "];
"1001046" -> "1001042"  [label="AST: "];
"1001049" -> "1001042"  [label="AST: "];
"1001052" -> "1001042"  [label="AST: "];
"1001053" -> "1001042"  [label="CFG: "];
"1001042" -> "1001095"  [label="DDG: PACKET_remaining(&extension)"];
"1001042" -> "1001095"  [label="DDG: type"];
"1001042" -> "1001095"  [label="DDG: s"];
"1001042" -> "1001095"  [label="DDG: PACKET_data(&extension)"];
"1001042" -> "1001095"  [label="DDG: al"];
"1001042" -> "1000312"  [label="DDG: s"];
"1001042" -> "1000312"  [label="DDG: al"];
"1001042" -> "1000621"  [label="DDG: s"];
"1001042" -> "1000678"  [label="DDG: s"];
"1001042" -> "1000901"  [label="DDG: s"];
"1001042" -> "1000909"  [label="DDG: PACKET_remaining(&extension)"];
"1001042" -> "1000996"  [label="DDG: al"];
"1001042" -> "1001016"  [label="DDG: al"];
"1001042" -> "1001041"  [label="DDG: PACKET_remaining(&extension)"];
"1001042" -> "1001041"  [label="DDG: type"];
"1001042" -> "1001041"  [label="DDG: PACKET_data(&extension)"];
"1001042" -> "1001041"  [label="DDG: al"];
"1001042" -> "1001041"  [label="DDG: s"];
"1001042" -> "1001041"  [label="DDG: 1"];
"1001006" -> "1001042"  [label="DDG: s"];
"1001009" -> "1001042"  [label="DDG: s"];
"1001046" -> "1001042"  [label="DDG: &extension"];
"1001049" -> "1001042"  [label="DDG: &extension"];
"1000312" -> "1001042"  [label="DDG: al"];
"1001016" -> "1001042"  [label="DDG: al"];
"1000996" -> "1001042"  [label="DDG: al"];
"1000123" -> "1001042"  [label="DDG: al"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000316"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1001095"  [label="DDG: al"];
"1000312" -> "1001095"  [label="DDG: s"];
"1000312" -> "1001095"  [label="DDG: &extension"];
"1000312" -> "1000311"  [label="DDG: s"];
"1000312" -> "1000311"  [label="DDG: &extension"];
"1000312" -> "1000311"  [label="DDG: al"];
"1000621" -> "1000312"  [label="DDG: s"];
"1000678" -> "1000312"  [label="DDG: s"];
"1001006" -> "1000312"  [label="DDG: s"];
"1000996" -> "1000312"  [label="DDG: s"];
"1000996" -> "1000312"  [label="DDG: al"];
"1001009" -> "1000312"  [label="DDG: s"];
"1000901" -> "1000312"  [label="DDG: s"];
"1001016" -> "1000312"  [label="DDG: s"];
"1001016" -> "1000312"  [label="DDG: al"];
"1000299" -> "1000312"  [label="DDG: &extension"];
"1000123" -> "1000312"  [label="DDG: al"];
"1000312" -> "1000621"  [label="DDG: s"];
"1000312" -> "1000678"  [label="DDG: s"];
"1000312" -> "1000901"  [label="DDG: s"];
"1000312" -> "1000996"  [label="DDG: al"];
"1000312" -> "1001016"  [label="DDG: al"];
"1000311" -> "1000310"  [label="AST: "];
"1000318" -> "1000311"  [label="CFG: "];
"1000320" -> "1000311"  [label="CFG: "];
"1000311" -> "1001095"  [label="DDG: ssl_parse_clienthello_renegotiate_ext(s, &extension, al)"];
"1000311" -> "1001095"  [label="DDG: !ssl_parse_clienthello_renegotiate_ext(s, &extension, al)"];
"1000621" -> "1000620"  [label="AST: "];
"1000621" -> "1000629"  [label="CFG: "];
"1000622" -> "1000621"  [label="AST: "];
"1000623" -> "1000621"  [label="AST: "];
"1000626" -> "1000621"  [label="AST: "];
"1000629" -> "1000621"  [label="AST: "];
"1000620" -> "1000621"  [label="CFG: "];
"1000621" -> "1001095"  [label="DDG: s"];
"1000621" -> "1001095"  [label="DDG: PACKET_data(&extension)"];
"1000621" -> "1001095"  [label="DDG: s->tls_session_ticket_ext_cb_arg"];
"1000621" -> "1001095"  [label="DDG: PACKET_remaining(&extension)"];
"1000621" -> "1000620"  [label="DDG: s"];
"1000621" -> "1000620"  [label="DDG: PACKET_data(&extension)"];
"1000621" -> "1000620"  [label="DDG: PACKET_remaining(&extension)"];
"1000621" -> "1000620"  [label="DDG: s->tls_session_ticket_ext_cb_arg"];
"1000678" -> "1000621"  [label="DDG: s"];
"1001006" -> "1000621"  [label="DDG: s"];
"1000996" -> "1000621"  [label="DDG: s"];
"1001009" -> "1000621"  [label="DDG: s"];
"1000901" -> "1000621"  [label="DDG: s"];
"1001016" -> "1000621"  [label="DDG: s"];
"1000623" -> "1000621"  [label="DDG: &extension"];
"1000626" -> "1000621"  [label="DDG: &extension"];
"1000621" -> "1000678"  [label="DDG: s"];
"1000621" -> "1000901"  [label="DDG: s"];
"1000621" -> "1000909"  [label="DDG: PACKET_remaining(&extension)"];
"1000620" -> "1000616"  [label="AST: "];
"1000616" -> "1000620"  [label="CFG: "];
"1000620" -> "1001095"  [label="DDG: s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000620" -> "1000616"  [label="DDG: s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000616" -> "1000615"  [label="AST: "];
"1000616" -> "1000617"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000274" -> "1000616"  [label="CFG: "];
"1000635" -> "1000616"  [label="CFG: "];
"1000616" -> "1001095"  [label="DDG: s->tls_session_ticket_ext_cb"];
"1000616" -> "1001095"  [label="DDG: s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000616" -> "1001095"  [label="DDG: !s->tls_session_ticket_ext_cb(s, PACKET_data(&extension),\n                                              PACKET_remaining(&extension),\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000678" -> "1000677"  [label="AST: "];
"1000678" -> "1000683"  [label="CFG: "];
"1000679" -> "1000678"  [label="AST: "];
"1000680" -> "1000678"  [label="AST: "];
"1000683" -> "1000678"  [label="AST: "];
"1000677" -> "1000678"  [label="CFG: "];
"1000678" -> "1001095"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1000678" -> "1001095"  [label="DDG: PACKET_data(&supported_sig_algs)"];
"1000678" -> "1001095"  [label="DDG: s"];
"1000678" -> "1000677"  [label="DDG: s"];
"1000678" -> "1000677"  [label="DDG: PACKET_data(&supported_sig_algs)"];
"1000678" -> "1000677"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1001006" -> "1000678"  [label="DDG: s"];
"1000996" -> "1000678"  [label="DDG: s"];
"1001009" -> "1000678"  [label="DDG: s"];
"1000901" -> "1000678"  [label="DDG: s"];
"1001016" -> "1000678"  [label="DDG: s"];
"1000680" -> "1000678"  [label="DDG: &supported_sig_algs"];
"1000683" -> "1000678"  [label="DDG: &supported_sig_algs"];
"1000678" -> "1000901"  [label="DDG: s"];
"1000677" -> "1000676"  [label="AST: "];
"1000274" -> "1000677"  [label="CFG: "];
"1000688" -> "1000677"  [label="CFG: "];
"1000677" -> "1001095"  [label="DDG: tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs))"];
"1000677" -> "1001095"  [label="DDG: !tls1_save_sigalgs(s, PACKET_data(&supported_sig_algs),\n                                       PACKET_remaining(&supported_sig_algs))"];
"1000901" -> "1000902"  [label="CFG: "];
"1000902" -> "1000901"  [label="AST: "];
"1000904" -> "1000901"  [label="CFG: "];
"1000901" -> "1001095"  [label="DDG: s"];
"1001006" -> "1000901"  [label="DDG: s"];
"1000996" -> "1000901"  [label="DDG: s"];
"1001009" -> "1000901"  [label="DDG: s"];
"1001016" -> "1000901"  [label="DDG: s"];
"1000901" -> "1000996"  [label="DDG: s"];
"1000901" -> "1001006"  [label="DDG: s"];
"1000996" -> "1000995"  [label="AST: "];
"1000996" -> "1001000"  [label="CFG: "];
"1000997" -> "1000996"  [label="AST: "];
"1000998" -> "1000996"  [label="AST: "];
"1001000" -> "1000996"  [label="AST: "];
"1000995" -> "1000996"  [label="CFG: "];
"1000996" -> "1001095"  [label="DDG: &extension"];
"1000996" -> "1001095"  [label="DDG: s"];
"1000996" -> "1001095"  [label="DDG: al"];
"1000996" -> "1000995"  [label="DDG: s"];
"1000996" -> "1000995"  [label="DDG: &extension"];
"1000996" -> "1000995"  [label="DDG: al"];
"1000299" -> "1000996"  [label="DDG: &extension"];
"1001016" -> "1000996"  [label="DDG: al"];
"1000123" -> "1000996"  [label="DDG: al"];
"1000996" -> "1001016"  [label="DDG: al"];
"1000995" -> "1000994"  [label="AST: "];
"1000274" -> "1000995"  [label="CFG: "];
"1001002" -> "1000995"  [label="CFG: "];
"1000995" -> "1001095"  [label="DDG: tls1_alpn_handle_client_hello(s, &extension, al)"];
"1000995" -> "1001095"  [label="DDG: !tls1_alpn_handle_client_hello(s, &extension, al)"];
"1001016" -> "1001015"  [label="AST: "];
"1001016" -> "1001020"  [label="CFG: "];
"1001017" -> "1001016"  [label="AST: "];
"1001018" -> "1001016"  [label="AST: "];
"1001020" -> "1001016"  [label="AST: "];
"1000274" -> "1001016"  [label="CFG: "];
"1001022" -> "1001016"  [label="CFG: "];
"1001016" -> "1001095"  [label="DDG: ssl_parse_clienthello_use_srtp_ext(s, &extension, al)"];
"1001016" -> "1001095"  [label="DDG: &extension"];
"1001016" -> "1001095"  [label="DDG: al"];
"1001016" -> "1001095"  [label="DDG: s"];
"1001006" -> "1001016"  [label="DDG: s"];
"1001009" -> "1001016"  [label="DDG: s"];
"1000299" -> "1001016"  [label="DDG: &extension"];
"1000123" -> "1001016"  [label="DDG: al"];
"1001006" -> "1001007"  [label="CFG: "];
"1001007" -> "1001006"  [label="AST: "];
"1001010" -> "1001006"  [label="CFG: "];
"1001006" -> "1001095"  [label="DDG: s"];
"1001006" -> "1001009"  [label="DDG: s"];
"1001009" -> "1001010"  [label="CFG: "];
"1001010" -> "1001009"  [label="AST: "];
"1001012" -> "1001009"  [label="CFG: "];
"1001009" -> "1001095"  [label="DDG: s"];
"1000909" -> "1000908"  [label="AST: "];
"1000909" -> "1000910"  [label="CFG: "];
"1000909" -> "1000916"  [label="CFG: "];
"1000910" -> "1000909"  [label="AST: "];
"1000916" -> "1000909"  [label="AST: "];
"1000922" -> "1000909"  [label="CFG: "];
"1000927" -> "1000909"  [label="CFG: "];
"1000909" -> "1001095"  [label="DDG: PACKET_remaining(&extension)"];
"1000909" -> "1001095"  [label="DDG: !PACKET_get_1(&extension, &hbtype)"];
"1000909" -> "1001095"  [label="DDG: !PACKET_get_1(&extension, &hbtype)\n                || PACKET_remaining(&extension)"];
"1000910" -> "1000909"  [label="DDG: PACKET_get_1(&extension, &hbtype)"];
"1000916" -> "1000909"  [label="DDG: &extension"];
"1001041" -> "1001040"  [label="AST: "];
"1001041" -> "1001053"  [label="CFG: "];
"1001053" -> "1001041"  [label="AST: "];
"1000274" -> "1001041"  [label="CFG: "];
"1001055" -> "1001041"  [label="CFG: "];
"1001041" -> "1001095"  [label="DDG: custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al) <= 0"];
"1001041" -> "1001095"  [label="DDG: custom_ext_parse(s, 1, type, PACKET_data(&extension),\n                                 PACKET_remaining(&extension), al)"];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="CFG: "];
"1000299" -> "1001095"  [label="DDG: &extension"];
"1000299" -> "1000342"  [label="DDG: &extension"];
"1000299" -> "1000464"  [label="DDG: &extension"];
"1000299" -> "1000505"  [label="DDG: &extension"];
"1000299" -> "1000558"  [label="DDG: &extension"];
"1000299" -> "1000623"  [label="DDG: &extension"];
"1000299" -> "1000649"  [label="DDG: &extension"];
"1000299" -> "1000697"  [label="DDG: &extension"];
"1000299" -> "1000911"  [label="DDG: &extension"];
"1000299" -> "1001046"  [label="DDG: &extension"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000345"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1001095"  [label="DDG: &extension"];
"1000342" -> "1001095"  [label="DDG: &sni"];
"1000342" -> "1000341"  [label="DDG: &extension"];
"1000342" -> "1000341"  [label="DDG: &sni"];
"1000368" -> "1000342"  [label="DDG: &sni"];
"1000358" -> "1000342"  [label="DDG: &sni"];
"1000342" -> "1000348"  [label="DDG: &sni"];
"1000342" -> "1000358"  [label="DDG: &sni"];
"1000341" -> "1000340"  [label="AST: "];
"1000350" -> "1000341"  [label="CFG: "];
"1000340" -> "1000341"  [label="CFG: "];
"1000341" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &sni)"];
"1000341" -> "1000340"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &sni)"];
"1000340" -> "1000339"  [label="AST: "];
"1000340" -> "1000347"  [label="CFG: "];
"1000347" -> "1000340"  [label="AST: "];
"1000354" -> "1000340"  [label="CFG: "];
"1000360" -> "1000340"  [label="CFG: "];
"1000340" -> "1001095"  [label="DDG: PACKET_remaining(&sni) == 0"];
"1000340" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &sni)\n                /* ServerNameList must be at least 1 byte long. */\n                || PACKET_remaining(&sni) == 0"];
"1000340" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &sni)"];
"1000347" -> "1000340"  [label="DDG: PACKET_remaining(&sni)"];
"1000347" -> "1000340"  [label="DDG: 0"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000351" -> "1000348"  [label="CFG: "];
"1000348" -> "1001095"  [label="DDG: &sni"];
"1000348" -> "1000347"  [label="DDG: &sni"];
"1000348" -> "1000358"  [label="DDG: &sni"];
"1000347" -> "1000351"  [label="CFG: "];
"1000351" -> "1000347"  [label="AST: "];
"1000347" -> "1001095"  [label="DDG: PACKET_remaining(&sni)"];
"1000358" -> "1000357"  [label="AST: "];
"1000358" -> "1000361"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000361" -> "1000358"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1001095"  [label="DDG: &servname_type"];
"1000358" -> "1001095"  [label="DDG: &sni"];
"1000358" -> "1000357"  [label="DDG: &sni"];
"1000358" -> "1000357"  [label="DDG: &servname_type"];
"1000358" -> "1000368"  [label="DDG: &sni"];
"1000357" -> "1000356"  [label="AST: "];
"1000365" -> "1000357"  [label="CFG: "];
"1000356" -> "1000357"  [label="CFG: "];
"1000357" -> "1001095"  [label="DDG: PACKET_get_1(&sni, &servname_type)"];
"1000357" -> "1000356"  [label="DDG: PACKET_get_1(&sni, &servname_type)"];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000363"  [label="CFG: "];
"1000363" -> "1000356"  [label="AST: "];
"1000375" -> "1000356"  [label="CFG: "];
"1000379" -> "1000356"  [label="CFG: "];
"1000356" -> "1001095"  [label="DDG: !PACKET_get_1(&sni, &servname_type)\n                || servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000356" -> "1001095"  [label="DDG: !PACKET_get_1(&sni, &servname_type)"];
"1000356" -> "1001095"  [label="DDG: servname_type != TLSEXT_NAMETYPE_host_name\n                || !PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000363" -> "1000356"  [label="DDG: servname_type != TLSEXT_NAMETYPE_host_name"];
"1000363" -> "1000356"  [label="DDG: !PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000368" -> "1000367"  [label="AST: "];
"1000368" -> "1000371"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000371" -> "1000368"  [label="AST: "];
"1000367" -> "1000368"  [label="CFG: "];
"1000368" -> "1001095"  [label="DDG: &sni"];
"1000368" -> "1001095"  [label="DDG: &hostname"];
"1000368" -> "1000367"  [label="DDG: &sni"];
"1000368" -> "1000367"  [label="DDG: &hostname"];
"1000441" -> "1000368"  [label="DDG: &hostname"];
"1000408" -> "1000368"  [label="DDG: &hostname"];
"1000368" -> "1000384"  [label="DDG: &hostname"];
"1000368" -> "1000441"  [label="DDG: &hostname"];
"1000367" -> "1000363"  [label="AST: "];
"1000363" -> "1000367"  [label="CFG: "];
"1000367" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000367" -> "1000363"  [label="DDG: PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000363" -> "1000364"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000363" -> "1001095"  [label="DDG: servname_type != TLSEXT_NAMETYPE_host_name"];
"1000363" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&sni, &hostname)"];
"1000364" -> "1000363"  [label="DDG: servname_type"];
"1000364" -> "1000363"  [label="DDG: TLSEXT_NAMETYPE_host_name"];
"1000384" -> "1000383"  [label="AST: "];
"1000384" -> "1000385"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000387" -> "1000384"  [label="CFG: "];
"1000384" -> "1001095"  [label="DDG: &hostname"];
"1000384" -> "1000383"  [label="DDG: &hostname"];
"1000441" -> "1000384"  [label="DDG: &hostname"];
"1000408" -> "1000384"  [label="DDG: &hostname"];
"1000384" -> "1000396"  [label="DDG: &hostname"];
"1000383" -> "1000382"  [label="AST: "];
"1000383" -> "1000387"  [label="CFG: "];
"1000387" -> "1000383"  [label="AST: "];
"1000391" -> "1000383"  [label="CFG: "];
"1000398" -> "1000383"  [label="CFG: "];
"1000383" -> "1001095"  [label="DDG: PACKET_remaining(&hostname) > TLSEXT_MAXLEN_host_name"];
"1000383" -> "1001095"  [label="DDG: PACKET_remaining(&hostname)"];
"1000383" -> "1001095"  [label="DDG: TLSEXT_MAXLEN_host_name"];
"1000396" -> "1000395"  [label="AST: "];
"1000396" -> "1000397"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000402" -> "1000396"  [label="CFG: "];
"1000410" -> "1000396"  [label="CFG: "];
"1000396" -> "1001095"  [label="DDG: PACKET_contains_zero_byte(&hostname)"];
"1000396" -> "1001095"  [label="DDG: &hostname"];
"1000396" -> "1000408"  [label="DDG: &hostname"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000411"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000411" -> "1000408"  [label="AST: "];
"1000407" -> "1000408"  [label="CFG: "];
"1000408" -> "1001095"  [label="DDG: &s->session->tlsext_hostname"];
"1000408" -> "1001095"  [label="DDG: &hostname"];
"1000408" -> "1000407"  [label="DDG: &hostname"];
"1000408" -> "1000407"  [label="DDG: &s->session->tlsext_hostname"];
"1000435" -> "1000408"  [label="DDG: s->session->tlsext_hostname"];
"1000408" -> "1000435"  [label="DDG: &s->session->tlsext_hostname"];
"1000408" -> "1000441"  [label="DDG: &hostname"];
"1000408" -> "1000441"  [label="DDG: &s->session->tlsext_hostname"];
"1000408" -> "1000449"  [label="DDG: &s->session->tlsext_hostname"];
"1000407" -> "1000406"  [label="AST: "];
"1000420" -> "1000407"  [label="CFG: "];
"1000426" -> "1000407"  [label="CFG: "];
"1000407" -> "1001095"  [label="DDG: !PACKET_strndup(&hostname, &s->session->tlsext_hostname)"];
"1000407" -> "1001095"  [label="DDG: PACKET_strndup(&hostname, &s->session->tlsext_hostname)"];
"1000435" -> "1000431"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000435" -> "1000441"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000441" -> "1000435"  [label="AST: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000435" -> "1001095"  [label="DDG: s->session->tlsext_hostname"];
"1000435" -> "1001095"  [label="DDG: PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname))"];
"1000435" -> "1000431"  [label="DDG: s->session->tlsext_hostname"];
"1000435" -> "1000431"  [label="DDG: PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname))"];
"1000441" -> "1000435"  [label="DDG: s->session->tlsext_hostname"];
"1000441" -> "1000435"  [label="DDG: &hostname"];
"1000441" -> "1000435"  [label="DDG: strlen(s->session->tlsext_hostname)"];
"1000435" -> "1000449"  [label="DDG: s->session->tlsext_hostname"];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000431"  [label="AST: "];
"1000274" -> "1000431"  [label="CFG: "];
"1000431" -> "1001095"  [label="DDG: s->servername_done"];
"1000431" -> "1001095"  [label="DDG: s->session->tlsext_hostname\n                    && PACKET_equal(&hostname, s->session->tlsext_hostname,\n                                    strlen(s->session->tlsext_hostname))"];
"1000449" -> "1000441"  [label="AST: "];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000441" -> "1000449"  [label="CFG: "];
"1000449" -> "1000441"  [label="DDG: s->session->tlsext_hostname"];
"1000442" -> "1000441"  [label="AST: "];
"1000444" -> "1000441"  [label="AST: "];
"1000441" -> "1001095"  [label="DDG: &hostname"];
"1000441" -> "1001095"  [label="DDG: strlen(s->session->tlsext_hostname)"];
"1000464" -> "1000463"  [label="AST: "];
"1000464" -> "1000467"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000467" -> "1000464"  [label="AST: "];
"1000463" -> "1000464"  [label="CFG: "];
"1000464" -> "1001095"  [label="DDG: &extension"];
"1000464" -> "1001095"  [label="DDG: &srp_I"];
"1000464" -> "1000463"  [label="DDG: &extension"];
"1000464" -> "1000463"  [label="DDG: &srp_I"];
"1000479" -> "1000464"  [label="DDG: &srp_I"];
"1000464" -> "1000472"  [label="DDG: &srp_I"];
"1000463" -> "1000462"  [label="AST: "];
"1000470" -> "1000463"  [label="CFG: "];
"1000474" -> "1000463"  [label="CFG: "];
"1000463" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_1(&extension, &srp_I)"];
"1000463" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_1(&extension, &srp_I)"];
"1000472" -> "1000471"  [label="AST: "];
"1000472" -> "1000473"  [label="CFG: "];
"1000473" -> "1000472"  [label="AST: "];
"1000476" -> "1000472"  [label="CFG: "];
"1000481" -> "1000472"  [label="CFG: "];
"1000472" -> "1001095"  [label="DDG: PACKET_contains_zero_byte(&srp_I)"];
"1000472" -> "1001095"  [label="DDG: &srp_I"];
"1000472" -> "1000479"  [label="DDG: &srp_I"];
"1000479" -> "1000478"  [label="AST: "];
"1000479" -> "1000482"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000482" -> "1000479"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1001095"  [label="DDG: &srp_I"];
"1000479" -> "1001095"  [label="DDG: &s->srp_ctx.login"];
"1000479" -> "1000478"  [label="DDG: &srp_I"];
"1000479" -> "1000478"  [label="DDG: &s->srp_ctx.login"];
"1000238" -> "1000479"  [label="DDG: s->srp_ctx.login"];
"1000478" -> "1000477"  [label="AST: "];
"1000274" -> "1000478"  [label="CFG: "];
"1000491" -> "1000478"  [label="CFG: "];
"1000478" -> "1001095"  [label="DDG: PACKET_strndup(&srp_I, &s->srp_ctx.login)"];
"1000478" -> "1001095"  [label="DDG: !PACKET_strndup(&srp_I, &s->srp_ctx.login)"];
"1000505" -> "1000504"  [label="AST: "];
"1000505" -> "1000508"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000508" -> "1000505"  [label="AST: "];
"1000504" -> "1000505"  [label="CFG: "];
"1000505" -> "1001095"  [label="DDG: &extension"];
"1000505" -> "1001095"  [label="DDG: &ec_point_format_list"];
"1000505" -> "1000504"  [label="DDG: &extension"];
"1000505" -> "1000504"  [label="DDG: &ec_point_format_list"];
"1000526" -> "1000505"  [label="DDG: &ec_point_format_list"];
"1000511" -> "1000505"  [label="DDG: &ec_point_format_list"];
"1000505" -> "1000511"  [label="DDG: &ec_point_format_list"];
"1000505" -> "1000526"  [label="DDG: &ec_point_format_list"];
"1000504" -> "1000503"  [label="AST: "];
"1000513" -> "1000504"  [label="CFG: "];
"1000503" -> "1000504"  [label="CFG: "];
"1000504" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)"];
"1000504" -> "1000503"  [label="DDG: PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)"];
"1000503" -> "1000502"  [label="AST: "];
"1000503" -> "1000510"  [label="CFG: "];
"1000510" -> "1000503"  [label="AST: "];
"1000517" -> "1000503"  [label="CFG: "];
"1000521" -> "1000503"  [label="CFG: "];
"1000503" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)\n                || PACKET_remaining(&ec_point_format_list) == 0"];
"1000503" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_1(&extension, &ec_point_format_list)"];
"1000503" -> "1001095"  [label="DDG: PACKET_remaining(&ec_point_format_list) == 0"];
"1000510" -> "1000503"  [label="DDG: PACKET_remaining(&ec_point_format_list)"];
"1000510" -> "1000503"  [label="DDG: 0"];
"1000511" -> "1000510"  [label="AST: "];
"1000511" -> "1000512"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000514" -> "1000511"  [label="CFG: "];
"1000511" -> "1001095"  [label="DDG: &ec_point_format_list"];
"1000511" -> "1000510"  [label="DDG: &ec_point_format_list"];
"1000511" -> "1000526"  [label="DDG: &ec_point_format_list"];
"1000510" -> "1000514"  [label="CFG: "];
"1000514" -> "1000510"  [label="AST: "];
"1000510" -> "1001095"  [label="DDG: PACKET_remaining(&ec_point_format_list)"];
"1000526" -> "1000525"  [label="AST: "];
"1000526" -> "1000535"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000529" -> "1000526"  [label="AST: "];
"1000535" -> "1000526"  [label="AST: "];
"1000525" -> "1000526"  [label="CFG: "];
"1000526" -> "1001095"  [label="DDG: &s->session->tlsext_ecpointformatlist"];
"1000526" -> "1001095"  [label="DDG: &ec_point_format_list"];
"1000526" -> "1001095"  [label="DDG: &s->\n                                   session->tlsext_ecpointformatlist_length"];
"1000526" -> "1000525"  [label="DDG: &ec_point_format_list"];
"1000526" -> "1000525"  [label="DDG: &s->session->tlsext_ecpointformatlist"];
"1000526" -> "1000525"  [label="DDG: &s->\n                                   session->tlsext_ecpointformatlist_length"];
"1000525" -> "1000524"  [label="AST: "];
"1000274" -> "1000525"  [label="CFG: "];
"1000544" -> "1000525"  [label="CFG: "];
"1000525" -> "1001095"  [label="DDG: !PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length)"];
"1000525" -> "1001095"  [label="DDG: PACKET_memdup(&ec_point_format_list,\n                                   &s->session->tlsext_ecpointformatlist,\n                                   &s->\n                                   session->tlsext_ecpointformatlist_length)"];
"1000558" -> "1000557"  [label="AST: "];
"1000558" -> "1000561"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000561" -> "1000558"  [label="AST: "];
"1000557" -> "1000558"  [label="CFG: "];
"1000558" -> "1001095"  [label="DDG: &extension"];
"1000558" -> "1001095"  [label="DDG: &elliptic_curve_list"];
"1000558" -> "1000557"  [label="DDG: &extension"];
"1000558" -> "1000557"  [label="DDG: &elliptic_curve_list"];
"1000565" -> "1000558"  [label="DDG: &elliptic_curve_list"];
"1000587" -> "1000558"  [label="DDG: &elliptic_curve_list"];
"1000571" -> "1000558"  [label="DDG: &elliptic_curve_list"];
"1000558" -> "1000565"  [label="DDG: &elliptic_curve_list"];
"1000558" -> "1000587"  [label="DDG: &elliptic_curve_list"];
"1000557" -> "1000556"  [label="AST: "];
"1000567" -> "1000557"  [label="CFG: "];
"1000556" -> "1000557"  [label="CFG: "];
"1000557" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)"];
"1000557" -> "1000556"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000563"  [label="CFG: "];
"1000563" -> "1000556"  [label="AST: "];
"1000578" -> "1000556"  [label="CFG: "];
"1000582" -> "1000556"  [label="CFG: "];
"1000556" -> "1001095"  [label="DDG: PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0"];
"1000556" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)"];
"1000556" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &elliptic_curve_list)\n                || PACKET_remaining(&elliptic_curve_list) == 0\n                || (PACKET_remaining(&elliptic_curve_list) % 2) != 0"];
"1000563" -> "1000556"  [label="DDG: PACKET_remaining(&elliptic_curve_list) == 0"];
"1000563" -> "1000556"  [label="DDG: (PACKET_remaining(&elliptic_curve_list) % 2) != 0"];
"1000565" -> "1000564"  [label="AST: "];
"1000565" -> "1000566"  [label="CFG: "];
"1000566" -> "1000565"  [label="AST: "];
"1000568" -> "1000565"  [label="CFG: "];
"1000565" -> "1001095"  [label="DDG: &elliptic_curve_list"];
"1000565" -> "1000564"  [label="DDG: &elliptic_curve_list"];
"1000565" -> "1000571"  [label="DDG: &elliptic_curve_list"];
"1000565" -> "1000587"  [label="DDG: &elliptic_curve_list"];
"1000564" -> "1000563"  [label="AST: "];
"1000564" -> "1000568"  [label="CFG: "];
"1000568" -> "1000564"  [label="AST: "];
"1000573" -> "1000564"  [label="CFG: "];
"1000563" -> "1000564"  [label="CFG: "];
"1000564" -> "1001095"  [label="DDG: PACKET_remaining(&elliptic_curve_list)"];
"1000564" -> "1000563"  [label="DDG: PACKET_remaining(&elliptic_curve_list)"];
"1000564" -> "1000563"  [label="DDG: 0"];
"1000563" -> "1000569"  [label="CFG: "];
"1000569" -> "1000563"  [label="AST: "];
"1000563" -> "1001095"  [label="DDG: (PACKET_remaining(&elliptic_curve_list) % 2) != 0"];
"1000563" -> "1001095"  [label="DDG: PACKET_remaining(&elliptic_curve_list) == 0"];
"1000569" -> "1000563"  [label="DDG: PACKET_remaining(&elliptic_curve_list) % 2"];
"1000569" -> "1000563"  [label="DDG: 0"];
"1000571" -> "1000570"  [label="AST: "];
"1000571" -> "1000572"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000574" -> "1000571"  [label="CFG: "];
"1000571" -> "1001095"  [label="DDG: &elliptic_curve_list"];
"1000571" -> "1000570"  [label="DDG: &elliptic_curve_list"];
"1000571" -> "1000587"  [label="DDG: &elliptic_curve_list"];
"1000570" -> "1000569"  [label="AST: "];
"1000570" -> "1000574"  [label="CFG: "];
"1000574" -> "1000570"  [label="AST: "];
"1000575" -> "1000570"  [label="CFG: "];
"1000570" -> "1001095"  [label="DDG: PACKET_remaining(&elliptic_curve_list)"];
"1000570" -> "1000569"  [label="DDG: PACKET_remaining(&elliptic_curve_list)"];
"1000570" -> "1000569"  [label="DDG: 2"];
"1000569" -> "1000575"  [label="CFG: "];
"1000575" -> "1000569"  [label="AST: "];
"1000569" -> "1001095"  [label="DDG: PACKET_remaining(&elliptic_curve_list) % 2"];
"1000587" -> "1000586"  [label="AST: "];
"1000587" -> "1000596"  [label="CFG: "];
"1000588" -> "1000587"  [label="AST: "];
"1000590" -> "1000587"  [label="AST: "];
"1000596" -> "1000587"  [label="AST: "];
"1000586" -> "1000587"  [label="CFG: "];
"1000587" -> "1001095"  [label="DDG: &s->session->tlsext_ellipticcurvelist"];
"1000587" -> "1001095"  [label="DDG: &elliptic_curve_list"];
"1000587" -> "1001095"  [label="DDG: &s->\n                                   session->tlsext_ellipticcurvelist_length"];
"1000587" -> "1000586"  [label="DDG: &elliptic_curve_list"];
"1000587" -> "1000586"  [label="DDG: &s->session->tlsext_ellipticcurvelist"];
"1000587" -> "1000586"  [label="DDG: &s->\n                                   session->tlsext_ellipticcurvelist_length"];
"1000586" -> "1000585"  [label="AST: "];
"1000274" -> "1000586"  [label="CFG: "];
"1000605" -> "1000586"  [label="CFG: "];
"1000586" -> "1001095"  [label="DDG: !PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length)"];
"1000586" -> "1001095"  [label="DDG: PACKET_memdup(&elliptic_curve_list,\n                                   &s->session->tlsext_ellipticcurvelist,\n                                   &s->\n                                   session->tlsext_ellipticcurvelist_length)"];
"1000623" -> "1000624"  [label="CFG: "];
"1000624" -> "1000623"  [label="AST: "];
"1000628" -> "1000623"  [label="CFG: "];
"1000623" -> "1000626"  [label="DDG: &extension"];
"1000626" -> "1000627"  [label="CFG: "];
"1000627" -> "1000626"  [label="AST: "];
"1000630" -> "1000626"  [label="CFG: "];
"1000626" -> "1001095"  [label="DDG: &extension"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000652"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000652" -> "1000649"  [label="AST: "];
"1000648" -> "1000649"  [label="CFG: "];
"1000649" -> "1001095"  [label="DDG: &extension"];
"1000649" -> "1001095"  [label="DDG: &supported_sig_algs"];
"1000649" -> "1000648"  [label="DDG: &extension"];
"1000649" -> "1000648"  [label="DDG: &supported_sig_algs"];
"1000683" -> "1000649"  [label="DDG: &supported_sig_algs"];
"1000663" -> "1000649"  [label="DDG: &supported_sig_algs"];
"1000657" -> "1000649"  [label="DDG: &supported_sig_algs"];
"1000649" -> "1000657"  [label="DDG: &supported_sig_algs"];
"1000649" -> "1000680"  [label="DDG: &supported_sig_algs"];
"1000648" -> "1000647"  [label="AST: "];
"1000659" -> "1000648"  [label="CFG: "];
"1000647" -> "1000648"  [label="CFG: "];
"1000648" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)"];
"1000648" -> "1000647"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)"];
"1000647" -> "1000646"  [label="AST: "];
"1000647" -> "1000654"  [label="CFG: "];
"1000654" -> "1000647"  [label="AST: "];
"1000669" -> "1000647"  [label="CFG: "];
"1000673" -> "1000647"  [label="CFG: "];
"1000647" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)\n                || (PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0"];
"1000647" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &supported_sig_algs)"];
"1000647" -> "1001095"  [label="DDG: (PACKET_remaining(&supported_sig_algs) % 2) != 0\n                || PACKET_remaining(&supported_sig_algs) == 0"];
"1000654" -> "1000647"  [label="DDG: (PACKET_remaining(&supported_sig_algs) % 2) != 0"];
"1000654" -> "1000647"  [label="DDG: PACKET_remaining(&supported_sig_algs) == 0"];
"1000657" -> "1000656"  [label="AST: "];
"1000657" -> "1000658"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000660" -> "1000657"  [label="CFG: "];
"1000657" -> "1001095"  [label="DDG: &supported_sig_algs"];
"1000657" -> "1000656"  [label="DDG: &supported_sig_algs"];
"1000657" -> "1000663"  [label="DDG: &supported_sig_algs"];
"1000657" -> "1000680"  [label="DDG: &supported_sig_algs"];
"1000656" -> "1000655"  [label="AST: "];
"1000656" -> "1000660"  [label="CFG: "];
"1000660" -> "1000656"  [label="AST: "];
"1000661" -> "1000656"  [label="CFG: "];
"1000656" -> "1001095"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1000656" -> "1000655"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1000656" -> "1000655"  [label="DDG: 2"];
"1000655" -> "1000654"  [label="AST: "];
"1000655" -> "1000661"  [label="CFG: "];
"1000661" -> "1000655"  [label="AST: "];
"1000665" -> "1000655"  [label="CFG: "];
"1000654" -> "1000655"  [label="CFG: "];
"1000655" -> "1001095"  [label="DDG: PACKET_remaining(&supported_sig_algs) % 2"];
"1000655" -> "1000654"  [label="DDG: PACKET_remaining(&supported_sig_algs) % 2"];
"1000655" -> "1000654"  [label="DDG: 0"];
"1000654" -> "1000662"  [label="CFG: "];
"1000662" -> "1000654"  [label="AST: "];
"1000654" -> "1001095"  [label="DDG: (PACKET_remaining(&supported_sig_algs) % 2) != 0"];
"1000654" -> "1001095"  [label="DDG: PACKET_remaining(&supported_sig_algs) == 0"];
"1000662" -> "1000654"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1000662" -> "1000654"  [label="DDG: 0"];
"1000663" -> "1000662"  [label="AST: "];
"1000663" -> "1000664"  [label="CFG: "];
"1000664" -> "1000663"  [label="AST: "];
"1000666" -> "1000663"  [label="CFG: "];
"1000663" -> "1001095"  [label="DDG: &supported_sig_algs"];
"1000663" -> "1000662"  [label="DDG: &supported_sig_algs"];
"1000663" -> "1000680"  [label="DDG: &supported_sig_algs"];
"1000662" -> "1000666"  [label="CFG: "];
"1000666" -> "1000662"  [label="AST: "];
"1000662" -> "1001095"  [label="DDG: PACKET_remaining(&supported_sig_algs)"];
"1000680" -> "1000681"  [label="CFG: "];
"1000681" -> "1000680"  [label="AST: "];
"1000685" -> "1000680"  [label="CFG: "];
"1000680" -> "1000683"  [label="DDG: &supported_sig_algs"];
"1000683" -> "1000684"  [label="CFG: "];
"1000684" -> "1000683"  [label="AST: "];
"1000683" -> "1001095"  [label="DDG: &supported_sig_algs"];
"1000697" -> "1000696"  [label="AST: "];
"1000697" -> "1000700"  [label="CFG: "];
"1000698" -> "1000697"  [label="AST: "];
"1000700" -> "1000697"  [label="AST: "];
"1000696" -> "1000697"  [label="CFG: "];
"1000697" -> "1001095"  [label="DDG: (unsigned int *)&s->tlsext_status_type"];
"1000697" -> "1001095"  [label="DDG: &extension"];
"1000697" -> "1000696"  [label="DDG: &extension"];
"1000697" -> "1000696"  [label="DDG: (unsigned int *)&s->tlsext_status_type"];
"1000700" -> "1000697"  [label="DDG: &s->tlsext_status_type"];
"1000697" -> "1000721"  [label="DDG: &extension"];
"1000696" -> "1000695"  [label="AST: "];
"1000708" -> "1000696"  [label="CFG: "];
"1000712" -> "1000696"  [label="CFG: "];
"1000696" -> "1001095"  [label="DDG: !PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type)"];
"1000696" -> "1001095"  [label="DDG: PACKET_get_1(&extension,\n                              (unsigned int *)&s->tlsext_status_type)"];
"1000721" -> "1000720"  [label="AST: "];
"1000721" -> "1000724"  [label="CFG: "];
"1000722" -> "1000721"  [label="AST: "];
"1000724" -> "1000721"  [label="AST: "];
"1000720" -> "1000721"  [label="CFG: "];
"1000721" -> "1001095"  [label="DDG: &responder_id_list"];
"1000721" -> "1001095"  [label="DDG: &extension"];
"1000721" -> "1000720"  [label="DDG: &extension"];
"1000721" -> "1000720"  [label="DDG: &responder_id_list"];
"1000767" -> "1000721"  [label="DDG: &responder_id_list"];
"1000721" -> "1000735"  [label="DDG: &responder_id_list"];
"1000721" -> "1000840"  [label="DDG: &extension"];
"1000720" -> "1000719"  [label="AST: "];
"1000727" -> "1000720"  [label="CFG: "];
"1000730" -> "1000720"  [label="CFG: "];
"1000720" -> "1001095"  [label="DDG: PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list)"];
"1000720" -> "1001095"  [label="DDG: !PACKET_get_length_prefixed_2\n                    (&extension, &responder_id_list)"];
"1000735" -> "1000734"  [label="AST: "];
"1000735" -> "1000736"  [label="CFG: "];
"1000736" -> "1000735"  [label="AST: "];
"1000738" -> "1000735"  [label="CFG: "];
"1000735" -> "1001095"  [label="DDG: &responder_id_list"];
"1000735" -> "1000734"  [label="DDG: &responder_id_list"];
"1000735" -> "1000767"  [label="DDG: &responder_id_list"];
"1000734" -> "1000733"  [label="AST: "];
"1000734" -> "1000738"  [label="CFG: "];
"1000738" -> "1000734"  [label="AST: "];
"1000742" -> "1000734"  [label="CFG: "];
"1000762" -> "1000734"  [label="CFG: "];
"1000734" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id_list)"];
"1000734" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id_list) > 0"];
"1000767" -> "1000766"  [label="AST: "];
"1000767" -> "1000768"  [label="CFG: "];
"1000768" -> "1000767"  [label="AST: "];
"1000770" -> "1000767"  [label="CFG: "];
"1000767" -> "1001095"  [label="DDG: &responder_id_list"];
"1000767" -> "1000766"  [label="DDG: &responder_id_list"];
"1000778" -> "1000767"  [label="DDG: &responder_id_list"];
"1000767" -> "1000778"  [label="DDG: &responder_id_list"];
"1000766" -> "1000765"  [label="AST: "];
"1000766" -> "1000770"  [label="CFG: "];
"1000770" -> "1000766"  [label="AST: "];
"1000780" -> "1000766"  [label="CFG: "];
"1000842" -> "1000766"  [label="CFG: "];
"1000766" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id_list)"];
"1000766" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id_list) > 0"];
"1000778" -> "1000777"  [label="AST: "];
"1000778" -> "1000781"  [label="CFG: "];
"1000779" -> "1000778"  [label="AST: "];
"1000781" -> "1000778"  [label="AST: "];
"1000777" -> "1000778"  [label="CFG: "];
"1000778" -> "1001095"  [label="DDG: &responder_id"];
"1000778" -> "1001095"  [label="DDG: &responder_id_list"];
"1000778" -> "1000777"  [label="DDG: &responder_id_list"];
"1000778" -> "1000777"  [label="DDG: &responder_id"];
"1000814" -> "1000778"  [label="DDG: &responder_id"];
"1000778" -> "1000784"  [label="DDG: &responder_id"];
"1000778" -> "1000793"  [label="DDG: &responder_id"];
"1000777" -> "1000776"  [label="AST: "];
"1000786" -> "1000777"  [label="CFG: "];
"1000776" -> "1000777"  [label="CFG: "];
"1000777" -> "1001095"  [label="DDG: PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)"];
"1000777" -> "1000776"  [label="DDG: PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)"];
"1000776" -> "1000775"  [label="AST: "];
"1000776" -> "1000783"  [label="CFG: "];
"1000783" -> "1000776"  [label="AST: "];
"1000790" -> "1000776"  [label="CFG: "];
"1000792" -> "1000776"  [label="CFG: "];
"1000776" -> "1001095"  [label="DDG: !PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)\n                        || PACKET_remaining(&responder_id) == 0"];
"1000776" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id) == 0"];
"1000776" -> "1001095"  [label="DDG: !PACKET_get_length_prefixed_2(&responder_id_list,\n                                                      &responder_id)"];
"1000783" -> "1000776"  [label="DDG: PACKET_remaining(&responder_id)"];
"1000783" -> "1000776"  [label="DDG: 0"];
"1000784" -> "1000783"  [label="AST: "];
"1000784" -> "1000785"  [label="CFG: "];
"1000785" -> "1000784"  [label="AST: "];
"1000787" -> "1000784"  [label="CFG: "];
"1000784" -> "1001095"  [label="DDG: &responder_id"];
"1000784" -> "1000783"  [label="DDG: &responder_id"];
"1000784" -> "1000793"  [label="DDG: &responder_id"];
"1000783" -> "1000787"  [label="CFG: "];
"1000787" -> "1000783"  [label="AST: "];
"1000783" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id)"];
"1000793" -> "1000791"  [label="AST: "];
"1000793" -> "1000794"  [label="CFG: "];
"1000794" -> "1000793"  [label="AST: "];
"1000791" -> "1000793"  [label="CFG: "];
"1000793" -> "1000791"  [label="DDG: &responder_id"];
"1000793" -> "1000802"  [label="DDG: &responder_id"];
"1000791" -> "1000771"  [label="AST: "];
"1000792" -> "1000791"  [label="AST: "];
"1000797" -> "1000791"  [label="CFG: "];
"1000791" -> "1001095"  [label="DDG: id_data"];
"1000791" -> "1001095"  [label="DDG: PACKET_data(&responder_id)"];
"1000791" -> "1000812"  [label="DDG: id_data"];
"1000812" -> "1000811"  [label="AST: "];
"1000812" -> "1000814"  [label="CFG: "];
"1000813" -> "1000812"  [label="AST: "];
"1000814" -> "1000812"  [label="AST: "];
"1000819" -> "1000812"  [label="CFG: "];
"1000826" -> "1000812"  [label="CFG: "];
"1000812" -> "1001095"  [label="DDG: PACKET_end(&responder_id)"];
"1000812" -> "1001095"  [label="DDG: id_data"];
"1000812" -> "1001095"  [label="DDG: id_data != PACKET_end(&responder_id)"];
"1000814" -> "1000812"  [label="DDG: &responder_id"];
"1000802" -> "1000798"  [label="AST: "];
"1000802" -> "1000803"  [label="CFG: "];
"1000803" -> "1000802"  [label="AST: "];
"1000798" -> "1000802"  [label="CFG: "];
"1000802" -> "1001095"  [label="DDG: &responder_id"];
"1000802" -> "1000798"  [label="DDG: &responder_id"];
"1000802" -> "1000814"  [label="DDG: &responder_id"];
"1000798" -> "1000796"  [label="AST: "];
"1000799" -> "1000798"  [label="AST: "];
"1000800" -> "1000798"  [label="AST: "];
"1000796" -> "1000798"  [label="CFG: "];
"1000798" -> "1001095"  [label="DDG: PACKET_remaining(&responder_id)"];
"1000798" -> "1001095"  [label="DDG: &id_data"];
"1000798" -> "1000796"  [label="DDG: NULL"];
"1000798" -> "1000796"  [label="DDG: &id_data"];
"1000798" -> "1000796"  [label="DDG: PACKET_remaining(&responder_id)"];
"1000806" -> "1000798"  [label="DDG: NULL"];
"1000746" -> "1000798"  [label="DDG: NULL"];
"1000877" -> "1000798"  [label="DDG: NULL"];
"1000798" -> "1000806"  [label="DDG: NULL"];
"1000796" -> "1000771"  [label="AST: "];
"1000797" -> "1000796"  [label="AST: "];
"1000807" -> "1000796"  [label="CFG: "];
"1000796" -> "1001095"  [label="DDG: d2i_OCSP_RESPID(NULL, &id_data,\n                                         PACKET_remaining(&responder_id))"];
"1000796" -> "1000806"  [label="DDG: id"];
"1000806" -> "1000805"  [label="AST: "];
"1000806" -> "1000808"  [label="CFG: "];
"1000807" -> "1000806"  [label="AST: "];
"1000808" -> "1000806"  [label="AST: "];
"1000810" -> "1000806"  [label="CFG: "];
"1000813" -> "1000806"  [label="CFG: "];
"1000806" -> "1001095"  [label="DDG: id"];
"1000806" -> "1001095"  [label="DDG: NULL"];
"1000806" -> "1001095"  [label="DDG: id == NULL"];
"1000806" -> "1000746"  [label="DDG: NULL"];
"1000806" -> "1000760"  [label="DDG: NULL"];
"1000806" -> "1000818"  [label="DDG: id"];
"1000806" -> "1000824"  [label="DDG: id"];
"1000806" -> "1000868"  [label="DDG: NULL"];
"1000746" -> "1000745"  [label="AST: "];
"1000746" -> "1000750"  [label="CFG: "];
"1000747" -> "1000746"  [label="AST: "];
"1000750" -> "1000746"  [label="AST: "];
"1000754" -> "1000746"  [label="CFG: "];
"1000769" -> "1000746"  [label="CFG: "];
"1000746" -> "1001095"  [label="DDG: s->tlsext_ocsp_ids"];
"1000746" -> "1001095"  [label="DDG: NULL"];
"1000746" -> "1001095"  [label="DDG: s->tlsext_ocsp_ids == NULL"];
"1000746" -> "1000728"  [label="DDG: s->tlsext_ocsp_ids"];
"1000740" -> "1000746"  [label="DDG: s->tlsext_ocsp_ids"];
"1000877" -> "1000746"  [label="DDG: NULL"];
"1000746" -> "1000760"  [label="DDG: NULL"];
"1000746" -> "1000824"  [label="DDG: s->tlsext_ocsp_ids"];
"1000746" -> "1000868"  [label="DDG: NULL"];
"1000728" -> "1000715"  [label="AST: "];
"1000728" -> "1000732"  [label="CFG: "];
"1000729" -> "1000728"  [label="AST: "];
"1000732" -> "1000728"  [label="AST: "];
"1000737" -> "1000728"  [label="CFG: "];
"1000728" -> "1001095"  [label="DDG: sk_OCSP_RESPID_pop_free(s->tlsext_ocsp_ids,\n                                        OCSP_RESPID_free)"];
"1000728" -> "1001095"  [label="DDG: OCSP_RESPID_free"];
"1000824" -> "1000728"  [label="DDG: s->tlsext_ocsp_ids"];
"1000760" -> "1000728"  [label="DDG: s->tlsext_ocsp_ids"];
"1000760" -> "1000759"  [label="AST: "];
"1000760" -> "1000764"  [label="CFG: "];
"1000761" -> "1000760"  [label="AST: "];
"1000764" -> "1000760"  [label="AST: "];
"1000769" -> "1000760"  [label="CFG: "];
"1000760" -> "1001095"  [label="DDG: NULL"];
"1000760" -> "1001095"  [label="DDG: s->tlsext_ocsp_ids"];
"1000877" -> "1000760"  [label="DDG: NULL"];
"1000760" -> "1000824"  [label="DDG: s->tlsext_ocsp_ids"];
"1000824" -> "1000823"  [label="AST: "];
"1000824" -> "1000828"  [label="CFG: "];
"1000825" -> "1000824"  [label="AST: "];
"1000828" -> "1000824"  [label="AST: "];
"1000823" -> "1000824"  [label="CFG: "];
"1000824" -> "1001095"  [label="DDG: id"];
"1000824" -> "1001095"  [label="DDG: s->tlsext_ocsp_ids"];
"1000824" -> "1000823"  [label="DDG: s->tlsext_ocsp_ids"];
"1000824" -> "1000823"  [label="DDG: id"];
"1000824" -> "1000830"  [label="DDG: id"];
"1000823" -> "1000822"  [label="AST: "];
"1000769" -> "1000823"  [label="CFG: "];
"1000831" -> "1000823"  [label="CFG: "];
"1000823" -> "1001095"  [label="DDG: sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id)"];
"1000823" -> "1001095"  [label="DDG: !sk_OCSP_RESPID_push(s->tlsext_ocsp_ids, id)"];
"1000830" -> "1000829"  [label="AST: "];
"1000830" -> "1000831"  [label="CFG: "];
"1000831" -> "1000830"  [label="AST: "];
"1000834" -> "1000830"  [label="CFG: "];
"1000830" -> "1001095"  [label="DDG: OCSP_RESPID_free(id)"];
"1000830" -> "1001095"  [label="DDG: id"];
"1000868" -> "1000864"  [label="AST: "];
"1000868" -> "1000872"  [label="CFG: "];
"1000869" -> "1000868"  [label="AST: "];
"1000870" -> "1000868"  [label="AST: "];
"1000872" -> "1000868"  [label="AST: "];
"1000864" -> "1000868"  [label="CFG: "];
"1000868" -> "1001095"  [label="DDG: PACKET_remaining(&exts)"];
"1000868" -> "1001095"  [label="DDG: &ext_data"];
"1000868" -> "1000864"  [label="DDG: NULL"];
"1000868" -> "1000864"  [label="DDG: &ext_data"];
"1000868" -> "1000864"  [label="DDG: PACKET_remaining(&exts)"];
"1000877" -> "1000868"  [label="DDG: NULL"];
"1000872" -> "1000868"  [label="DDG: &exts"];
"1000868" -> "1000877"  [label="DDG: NULL"];
"1000864" -> "1000853"  [label="AST: "];
"1000865" -> "1000864"  [label="AST: "];
"1000879" -> "1000864"  [label="CFG: "];
"1000864" -> "1001095"  [label="DDG: d2i_X509_EXTENSIONS(NULL, &ext_data,\n                                            PACKET_remaining(&exts))"];
"1000864" -> "1000877"  [label="DDG: s->tlsext_ocsp_exts"];
"1000877" -> "1000876"  [label="AST: "];
"1000877" -> "1000881"  [label="CFG: "];
"1000878" -> "1000877"  [label="AST: "];
"1000881" -> "1000877"  [label="AST: "];
"1000883" -> "1000877"  [label="CFG: "];
"1000876" -> "1000877"  [label="CFG: "];
"1000877" -> "1001095"  [label="DDG: NULL"];
"1000877" -> "1001095"  [label="DDG: s->tlsext_ocsp_exts"];
"1000877" -> "1000859"  [label="DDG: s->tlsext_ocsp_exts"];
"1000877" -> "1000876"  [label="DDG: s->tlsext_ocsp_exts"];
"1000877" -> "1000876"  [label="DDG: NULL"];
"1000859" -> "1000853"  [label="AST: "];
"1000859" -> "1000863"  [label="CFG: "];
"1000860" -> "1000859"  [label="AST: "];
"1000863" -> "1000859"  [label="AST: "];
"1000866" -> "1000859"  [label="CFG: "];
"1000859" -> "1001095"  [label="DDG: sk_X509_EXTENSION_pop_free(s->tlsext_ocsp_exts,\n                                               X509_EXTENSION_free)"];
"1000859" -> "1001095"  [label="DDG: X509_EXTENSION_free"];
"1000876" -> "1000875"  [label="AST: "];
"1000876" -> "1000882"  [label="CFG: "];
"1000882" -> "1000876"  [label="AST: "];
"1000274" -> "1000876"  [label="CFG: "];
"1000889" -> "1000876"  [label="CFG: "];
"1000876" -> "1001095"  [label="DDG: ext_data != PACKET_end(&exts)"];
"1000876" -> "1001095"  [label="DDG: s->tlsext_ocsp_exts == NULL\n                        || ext_data != PACKET_end(&exts)"];
"1000876" -> "1001095"  [label="DDG: s->tlsext_ocsp_exts == NULL"];
"1000882" -> "1000876"  [label="DDG: ext_data"];
"1000882" -> "1000876"  [label="DDG: PACKET_end(&exts)"];
"1000818" -> "1000817"  [label="AST: "];
"1000818" -> "1000819"  [label="CFG: "];
"1000819" -> "1000818"  [label="AST: "];
"1000821" -> "1000818"  [label="CFG: "];
"1000818" -> "1001095"  [label="DDG: OCSP_RESPID_free(id)"];
"1000818" -> "1001095"  [label="DDG: id"];
"1000814" -> "1000815"  [label="CFG: "];
"1000815" -> "1000814"  [label="AST: "];
"1000814" -> "1001095"  [label="DDG: &responder_id"];
"1000840" -> "1000839"  [label="AST: "];
"1000840" -> "1000843"  [label="CFG: "];
"1000841" -> "1000840"  [label="AST: "];
"1000843" -> "1000840"  [label="AST: "];
"1000839" -> "1000840"  [label="CFG: "];
"1000840" -> "1001095"  [label="DDG: &exts"];
"1000840" -> "1001095"  [label="DDG: &extension"];
"1000840" -> "1000839"  [label="DDG: &extension"];
"1000840" -> "1000839"  [label="DDG: &exts"];
"1000849" -> "1000840"  [label="DDG: &exts"];
"1000884" -> "1000840"  [label="DDG: &exts"];
"1000872" -> "1000840"  [label="DDG: &exts"];
"1000840" -> "1000849"  [label="DDG: &exts"];
"1000839" -> "1000838"  [label="AST: "];
"1000846" -> "1000839"  [label="CFG: "];
"1000851" -> "1000839"  [label="CFG: "];
"1000839" -> "1001095"  [label="DDG: !PACKET_as_length_prefixed_2(&extension, &exts)"];
"1000839" -> "1001095"  [label="DDG: PACKET_as_length_prefixed_2(&extension, &exts)"];
"1000849" -> "1000848"  [label="AST: "];
"1000849" -> "1000850"  [label="CFG: "];
"1000850" -> "1000849"  [label="AST: "];
"1000852" -> "1000849"  [label="CFG: "];
"1000849" -> "1001095"  [label="DDG: &exts"];
"1000849" -> "1000848"  [label="DDG: &exts"];
"1000849" -> "1000856"  [label="DDG: &exts"];
"1000848" -> "1000847"  [label="AST: "];
"1000848" -> "1000852"  [label="CFG: "];
"1000852" -> "1000848"  [label="AST: "];
"1000274" -> "1000848"  [label="CFG: "];
"1000855" -> "1000848"  [label="CFG: "];
"1000848" -> "1001095"  [label="DDG: PACKET_remaining(&exts)"];
"1000848" -> "1001095"  [label="DDG: PACKET_remaining(&exts) > 0"];
"1000856" -> "1000854"  [label="AST: "];
"1000856" -> "1000857"  [label="CFG: "];
"1000857" -> "1000856"  [label="AST: "];
"1000854" -> "1000856"  [label="CFG: "];
"1000856" -> "1000854"  [label="DDG: &exts"];
"1000856" -> "1000872"  [label="DDG: &exts"];
"1000854" -> "1000853"  [label="AST: "];
"1000855" -> "1000854"  [label="AST: "];
"1000861" -> "1000854"  [label="CFG: "];
"1000854" -> "1001095"  [label="DDG: ext_data"];
"1000854" -> "1001095"  [label="DDG: PACKET_data(&exts)"];
"1000854" -> "1000882"  [label="DDG: ext_data"];
"1000882" -> "1000884"  [label="CFG: "];
"1000883" -> "1000882"  [label="AST: "];
"1000884" -> "1000882"  [label="AST: "];
"1000882" -> "1001095"  [label="DDG: ext_data"];
"1000882" -> "1001095"  [label="DDG: PACKET_end(&exts)"];
"1000884" -> "1000882"  [label="DDG: &exts"];
"1000872" -> "1000873"  [label="CFG: "];
"1000873" -> "1000872"  [label="AST: "];
"1000872" -> "1001095"  [label="DDG: &exts"];
"1000872" -> "1000884"  [label="DDG: &exts"];
"1000884" -> "1000885"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000884" -> "1001095"  [label="DDG: &exts"];
"1000911" -> "1000910"  [label="AST: "];
"1000911" -> "1000914"  [label="CFG: "];
"1000912" -> "1000911"  [label="AST: "];
"1000914" -> "1000911"  [label="AST: "];
"1000910" -> "1000911"  [label="CFG: "];
"1000911" -> "1001095"  [label="DDG: &extension"];
"1000911" -> "1001095"  [label="DDG: &hbtype"];
"1000911" -> "1000910"  [label="DDG: &extension"];
"1000911" -> "1000910"  [label="DDG: &hbtype"];
"1000911" -> "1000916"  [label="DDG: &extension"];
"1000918" -> "1000910"  [label="CFG: "];
"1000910" -> "1001095"  [label="DDG: PACKET_get_1(&extension, &hbtype)"];
"1000916" -> "1000917"  [label="CFG: "];
"1000917" -> "1000916"  [label="AST: "];
"1000916" -> "1001095"  [label="DDG: &extension"];
"1001046" -> "1001047"  [label="CFG: "];
"1001047" -> "1001046"  [label="AST: "];
"1001051" -> "1001046"  [label="CFG: "];
"1001046" -> "1001049"  [label="DDG: &extension"];
"1001049" -> "1001050"  [label="CFG: "];
"1001050" -> "1001049"  [label="AST: "];
"1001052" -> "1001049"  [label="CFG: "];
"1001049" -> "1001095"  [label="DDG: &extension"];
"1001058" -> "1001057"  [label="AST: "];
"1001058" -> "1001059"  [label="CFG: "];
"1001059" -> "1001058"  [label="AST: "];
"1001060" -> "1001058"  [label="CFG: "];
"1001058" -> "1001095"  [label="DDG: pkt"];
"1001058" -> "1001057"  [label="DDG: pkt"];
"1001057" -> "1001056"  [label="AST: "];
"1001057" -> "1001060"  [label="CFG: "];
"1001060" -> "1001057"  [label="AST: "];
"1001064" -> "1001057"  [label="CFG: "];
"1001068" -> "1001057"  [label="CFG: "];
"1001057" -> "1001095"  [label="DDG: PACKET_remaining(pkt) != 0"];
"1001057" -> "1001095"  [label="DDG: PACKET_remaining(pkt)"];
}
