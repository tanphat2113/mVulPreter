digraph "0_linux_07d86ca93db7e5cdf4743564d98292042ec21af7@array" {
"1000295" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000541" [label="(Call,snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000539" [label="(Call,err = snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000554" [label="(Call,err < 0)"];
"1000558" [label="(Return,return err;)"];
"1000295" [label="(Call,memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info)))"];
"1000558" [label="(Return,return err;)"];
"1000548" [label="(Call,err = snd_usbmidi_create_endpoints(umidi, endpoints))"];
"1000541" [label="(Call,snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000543" [label="(Call,&endpoints[0])"];
"1000554" [label="(Call,err < 0)"];
"1000553" [label="(ControlStructure,if (err < 0))"];
"1000296" [label="(Call,&endpoints[0])"];
"1000539" [label="(Call,err = snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0]))"];
"1000562" [label="(Identifier,umidi)"];
"1000281" [label="(Call,snd_usbmidi_detect_roland(umidi, &endpoints[0]))"];
"1000540" [label="(Identifier,err)"];
"1000531" [label="(ControlStructure,if (quirk && quirk->type == QUIRK_MIDI_MIDIMAN))"];
"1000518" [label="(Call,snd_usbmidi_create_rawmidi(umidi, out_ports, in_ports))"];
"1000542" [label="(Identifier,umidi)"];
"1000557" [label="(Block,)"];
"1000556" [label="(Literal,0)"];
"1000572" [label="(MethodReturn,int)"];
"1000303" [label="(Call,sizeof(struct snd_usb_midi_endpoint_info))"];
"1000300" [label="(Call,quirk->data)"];
"1000306" [label="(Identifier,err)"];
"1000260" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000368" [label="(Call,snd_usbmidi_detect_endpoints(umidi, &endpoints[0], 1))"];
"1000555" [label="(Identifier,err)"];
"1000559" [label="(Identifier,err)"];
"1000271" [label="(Call,snd_usbmidi_detect_yamaha(umidi, &endpoints[0]))"];
"1000218" [label="(Block,)"];
"1000295" -> "1000218"  [label="AST: "];
"1000295" -> "1000303"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="AST: "];
"1000306" -> "1000295"  [label="CFG: "];
"1000295" -> "1000572"  [label="DDG: &endpoints[0]"];
"1000295" -> "1000572"  [label="DDG: quirk->data"];
"1000295" -> "1000572"  [label="DDG: memcpy(&endpoints[0], quirk->data,\n\t\t       sizeof(struct snd_usb_midi_endpoint_info))"];
"1000295" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000541" -> "1000539"  [label="AST: "];
"1000541" -> "1000543"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000543" -> "1000541"  [label="AST: "];
"1000539" -> "1000541"  [label="CFG: "];
"1000541" -> "1000572"  [label="DDG: &endpoints[0]"];
"1000541" -> "1000572"  [label="DDG: umidi"];
"1000541" -> "1000539"  [label="DDG: umidi"];
"1000541" -> "1000539"  [label="DDG: &endpoints[0]"];
"1000518" -> "1000541"  [label="DDG: umidi"];
"1000368" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000260" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000271" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000281" -> "1000541"  [label="DDG: &endpoints[0]"];
"1000539" -> "1000531"  [label="AST: "];
"1000540" -> "1000539"  [label="AST: "];
"1000555" -> "1000539"  [label="CFG: "];
"1000539" -> "1000572"  [label="DDG: snd_usbmidi_create_endpoints_midiman(umidi, &endpoints[0])"];
"1000539" -> "1000554"  [label="DDG: err"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000556"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000556" -> "1000554"  [label="AST: "];
"1000559" -> "1000554"  [label="CFG: "];
"1000562" -> "1000554"  [label="CFG: "];
"1000554" -> "1000572"  [label="DDG: err < 0"];
"1000554" -> "1000572"  [label="DDG: err"];
"1000548" -> "1000554"  [label="DDG: err"];
"1000554" -> "1000558"  [label="DDG: err"];
"1000558" -> "1000557"  [label="AST: "];
"1000558" -> "1000559"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000572" -> "1000558"  [label="CFG: "];
"1000558" -> "1000572"  [label="DDG: <RET>"];
"1000559" -> "1000558"  [label="DDG: err"];
}
