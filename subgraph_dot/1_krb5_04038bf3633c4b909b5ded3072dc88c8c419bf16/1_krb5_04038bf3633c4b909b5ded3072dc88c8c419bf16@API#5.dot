digraph "1_krb5_04038bf3633c4b909b5ded3072dc88c8c419bf16@API" {
"1000132" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000134" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000127" [label="(Call,n_key_data <= 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000146" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000315" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000313" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000383" [label="(Call,err != 0)"];
"1000316" [label="(Call,key_data + last)"];
"1000380" [label="(Call,free(key_data))"];
"1000273" [label="(Call,i < n_key_data)"];
"1000127" [label="(Call,n_key_data <= 0)"];
"1000301" [label="(Call,k5alloc(sizeof(struct berval), &err))"];
"1000136" [label="(Call,sizeof(*key_data))"];
"1000107" [label="(MethodParameterIn,krb5_kvno mkvno)"];
"1000326" [label="(Identifier,mkvno)"];
"1000354" [label="(Call,last = i + 1)"];
"1000158" [label="(Call,i < n_key_data)"];
"1000385" [label="(Literal,0)"];
"1000148" [label="(Identifier,key_data_in)"];
"1000129" [label="(Literal,0)"];
"1000381" [label="(Identifier,key_data)"];
"1000126" [label="(ControlStructure,if (n_key_data <= 0))"];
"1000314" [label="(Identifier,err)"];
"1000389" [label="(Identifier,ret)"];
"1000382" [label="(ControlStructure,if (err != 0))"];
"1000142" [label="(Call,key_data_in == NULL)"];
"1000105" [label="(MethodParameterIn,krb5_key_data *key_data_in)"];
"1000318" [label="(Identifier,last)"];
"1000380" [label="(Call,free(key_data))"];
"1000316" [label="(Call,key_data + last)"];
"1000384" [label="(Identifier,err)"];
"1000315" [label="(Call,asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000327" [label="(Call,&code)"];
"1000249" [label="(Call,err = ENOMEM)"];
"1000133" [label="(Identifier,key_data)"];
"1000134" [label="(Call,k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000418" [label="(MethodReturn,RET)"];
"1000330" [label="(Identifier,err)"];
"1000128" [label="(Identifier,n_key_data)"];
"1000135" [label="(Identifier,n_key_data)"];
"1000108" [label="(Block,)"];
"1000146" [label="(Call,memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data)))"];
"1000259" [label="(Call,last = 0)"];
"1000143" [label="(Identifier,key_data_in)"];
"1000362" [label="(Call,n_key_data - 1)"];
"1000139" [label="(Call,&err)"];
"1000122" [label="(Call,err = 0)"];
"1000106" [label="(MethodParameterIn,int n_key_data)"];
"1000417" [label="(Identifier,ret)"];
"1000156" [label="(Identifier,i)"];
"1000319" [label="(Call,(krb5_int16)i - last + 1)"];
"1000296" [label="(Block,)"];
"1000147" [label="(Identifier,key_data)"];
"1000317" [label="(Identifier,key_data)"];
"1000132" [label="(Call,key_data = k5calloc(n_key_data, sizeof(*key_data), &err))"];
"1000284" [label="(Call,n_key_data - 1)"];
"1000149" [label="(Call,n_key_data * sizeof(*key_data))"];
"1000313" [label="(Call,err = asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code))"];
"1000213" [label="(Call,n_key_data - 1)"];
"1000383" [label="(Call,err != 0)"];
"1000131" [label="(Identifier,NULL)"];
"1000132" -> "1000108"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000143" -> "1000132"  [label="CFG: "];
"1000132" -> "1000418"  [label="DDG: k5calloc(n_key_data, sizeof(*key_data), &err)"];
"1000134" -> "1000132"  [label="DDG: n_key_data"];
"1000134" -> "1000132"  [label="DDG: &err"];
"1000132" -> "1000146"  [label="DDG: key_data"];
"1000132" -> "1000380"  [label="DDG: key_data"];
"1000134" -> "1000139"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000139" -> "1000134"  [label="AST: "];
"1000134" -> "1000418"  [label="DDG: &err"];
"1000134" -> "1000418"  [label="DDG: n_key_data"];
"1000127" -> "1000134"  [label="DDG: n_key_data"];
"1000106" -> "1000134"  [label="DDG: n_key_data"];
"1000134" -> "1000149"  [label="DDG: n_key_data"];
"1000134" -> "1000301"  [label="DDG: &err"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000133" -> "1000127"  [label="CFG: "];
"1000127" -> "1000418"  [label="DDG: n_key_data <= 0"];
"1000127" -> "1000418"  [label="DDG: n_key_data"];
"1000106" -> "1000127"  [label="DDG: n_key_data"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000418"  [label="DDG: n_key_data"];
"1000106" -> "1000149"  [label="DDG: n_key_data"];
"1000106" -> "1000158"  [label="DDG: n_key_data"];
"1000106" -> "1000213"  [label="DDG: n_key_data"];
"1000106" -> "1000273"  [label="DDG: n_key_data"];
"1000106" -> "1000284"  [label="DDG: n_key_data"];
"1000106" -> "1000362"  [label="DDG: n_key_data"];
"1000146" -> "1000108"  [label="AST: "];
"1000146" -> "1000149"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000149" -> "1000146"  [label="AST: "];
"1000156" -> "1000146"  [label="CFG: "];
"1000146" -> "1000418"  [label="DDG: n_key_data * sizeof(*key_data)"];
"1000146" -> "1000418"  [label="DDG: key_data_in"];
"1000146" -> "1000418"  [label="DDG: memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data))"];
"1000142" -> "1000146"  [label="DDG: key_data_in"];
"1000105" -> "1000146"  [label="DDG: key_data_in"];
"1000149" -> "1000146"  [label="DDG: n_key_data"];
"1000146" -> "1000315"  [label="DDG: key_data"];
"1000146" -> "1000316"  [label="DDG: key_data"];
"1000146" -> "1000380"  [label="DDG: key_data"];
"1000315" -> "1000313"  [label="AST: "];
"1000315" -> "1000327"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000326" -> "1000315"  [label="AST: "];
"1000327" -> "1000315"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000315" -> "1000418"  [label="DDG: mkvno"];
"1000315" -> "1000418"  [label="DDG: key_data + last"];
"1000315" -> "1000418"  [label="DDG: (krb5_int16)i - last + 1"];
"1000315" -> "1000418"  [label="DDG: &code"];
"1000315" -> "1000313"  [label="DDG: key_data + last"];
"1000315" -> "1000313"  [label="DDG: (krb5_int16)i - last + 1"];
"1000315" -> "1000313"  [label="DDG: mkvno"];
"1000315" -> "1000313"  [label="DDG: &code"];
"1000259" -> "1000315"  [label="DDG: last"];
"1000354" -> "1000315"  [label="DDG: last"];
"1000319" -> "1000315"  [label="DDG: (krb5_int16)i"];
"1000319" -> "1000315"  [label="DDG: last + 1"];
"1000107" -> "1000315"  [label="DDG: mkvno"];
"1000313" -> "1000296"  [label="AST: "];
"1000314" -> "1000313"  [label="AST: "];
"1000330" -> "1000313"  [label="CFG: "];
"1000313" -> "1000418"  [label="DDG: asn1_encode_sequence_of_keys(key_data + last,\n                                               (krb5_int16)i - last + 1,\n                                               mkvno, &code)"];
"1000313" -> "1000383"  [label="DDG: err"];
"1000383" -> "1000382"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000389" -> "1000383"  [label="CFG: "];
"1000417" -> "1000383"  [label="CFG: "];
"1000383" -> "1000418"  [label="DDG: err != 0"];
"1000383" -> "1000418"  [label="DDG: err"];
"1000122" -> "1000383"  [label="DDG: err"];
"1000249" -> "1000383"  [label="DDG: err"];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000321" -> "1000316"  [label="CFG: "];
"1000259" -> "1000316"  [label="DDG: last"];
"1000354" -> "1000316"  [label="DDG: last"];
"1000380" -> "1000108"  [label="AST: "];
"1000380" -> "1000381"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="CFG: "];
"1000380" -> "1000418"  [label="DDG: key_data"];
}
