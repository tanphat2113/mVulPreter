digraph "0_linux_dab6cf55f81a6e16b8147aed9a843e1691dcd318@pointer" {
"1000260" [label="(Call,(addr_t) &dummy->regs.orig_gpr2)"];
"1000193" [label="(Call,(addr_t) (&dummy->regs.orig_gpr2))"];
"1000258" [label="(Call,addr == (addr_t) &dummy->regs.orig_gpr2)"];
"1000277" [label="(Call,addr < (addr_t) &dummy->regs.fp_regs)"];
"1000292" [label="(Call,addr < (addr_t) (&dummy->regs.fp_regs + 1))"];
"1000306" [label="(Call,addr == (addr_t) &dummy->regs.fp_regs.fpc)"];
"1000336" [label="(Call,addr - (addr_t) &dummy->regs.fp_regs)"];
"1000334" [label="(Call,offset = addr - (addr_t) &dummy->regs.fp_regs)"];
"1000348" [label="(Call,(addr_t *)((addr_t) &child->thread.fp_regs + offset))"];
"1000350" [label="(Call,(addr_t) &child->thread.fp_regs + offset)"];
"1000363" [label="(Call,addr < (addr_t) (&dummy->regs.per_info + 1))"];
"1000376" [label="(Call,addr -= (addr_t) &dummy->regs.per_info)"];
"1000386" [label="(Call,__poke_user_per(child, addr, data))"];
"1000278" [label="(Identifier,addr)"];
"1000292" [label="(Call,addr < (addr_t) (&dummy->regs.fp_regs + 1))"];
"1000279" [label="(Call,(addr_t) &dummy->regs.fp_regs)"];
"1000348" [label="(Call,(addr_t *)((addr_t) &child->thread.fp_regs + offset))"];
"1000387" [label="(Identifier,child)"];
"1000388" [label="(Identifier,addr)"];
"1000307" [label="(Identifier,addr)"];
"1000258" [label="(Call,addr == (addr_t) &dummy->regs.orig_gpr2)"];
"1000362" [label="(ControlStructure,if (addr < (addr_t) (&dummy->regs.per_info + 1)))"];
"1000191" [label="(Call,addr < (addr_t) (&dummy->regs.orig_gpr2))"];
"1000257" [label="(ControlStructure,if (addr == (addr_t) &dummy->regs.orig_gpr2))"];
"1000335" [label="(Identifier,offset)"];
"1000334" [label="(Call,offset = addr - (addr_t) &dummy->regs.fp_regs)"];
"1000294" [label="(Call,(addr_t) (&dummy->regs.fp_regs + 1))"];
"1000291" [label="(ControlStructure,if (addr < (addr_t) (&dummy->regs.fp_regs + 1)))"];
"1000386" [label="(Call,__poke_user_per(child, addr, data))"];
"1000277" [label="(Call,addr < (addr_t) &dummy->regs.fp_regs)"];
"1000109" [label="(MethodParameterIn,addr_t addr)"];
"1000110" [label="(MethodParameterIn,addr_t data)"];
"1000305" [label="(ControlStructure,if (addr == (addr_t) &dummy->regs.fp_regs.fpc))"];
"1000359" [label="(Identifier,offset)"];
"1000337" [label="(Identifier,addr)"];
"1000108" [label="(MethodParameterIn,struct task_struct *child)"];
"1000308" [label="(Call,(addr_t) &dummy->regs.fp_regs.fpc)"];
"1000289" [label="(Literal,0)"];
"1000391" [label="(Literal,0)"];
"1000376" [label="(Call,addr -= (addr_t) &dummy->regs.per_info)"];
"1000375" [label="(Block,)"];
"1000293" [label="(Identifier,addr)"];
"1000377" [label="(Identifier,addr)"];
"1000304" [label="(Block,)"];
"1000389" [label="(Identifier,data)"];
"1000347" [label="(Call,*(addr_t *)((addr_t) &child->thread.fp_regs + offset))"];
"1000350" [label="(Call,(addr_t) &child->thread.fp_regs + offset)"];
"1000195" [label="(Call,&dummy->regs.orig_gpr2)"];
"1000338" [label="(Call,(addr_t) &dummy->regs.fp_regs)"];
"1000272" [label="(Identifier,child)"];
"1000365" [label="(Call,(addr_t) (&dummy->regs.per_info + 1))"];
"1000306" [label="(Call,addr == (addr_t) &dummy->regs.fp_regs.fpc)"];
"1000260" [label="(Call,(addr_t) &dummy->regs.orig_gpr2)"];
"1000276" [label="(ControlStructure,if (addr < (addr_t) &dummy->regs.fp_regs))"];
"1000336" [label="(Call,addr - (addr_t) &dummy->regs.fp_regs)"];
"1000259" [label="(Identifier,addr)"];
"1000262" [label="(Call,&dummy->regs.orig_gpr2)"];
"1000193" [label="(Call,(addr_t) (&dummy->regs.orig_gpr2))"];
"1000363" [label="(Call,addr < (addr_t) (&dummy->regs.per_info + 1))"];
"1000351" [label="(Call,(addr_t) &child->thread.fp_regs)"];
"1000378" [label="(Call,(addr_t) &dummy->regs.per_info)"];
"1000392" [label="(MethodReturn,static int)"];
"1000364" [label="(Identifier,addr)"];
"1000260" -> "1000258"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000262" -> "1000260"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000260" -> "1000392"  [label="DDG: &dummy->regs.orig_gpr2"];
"1000260" -> "1000258"  [label="DDG: &dummy->regs.orig_gpr2"];
"1000193" -> "1000260"  [label="DDG: &dummy->regs.orig_gpr2"];
"1000193" -> "1000191"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000193" -> "1000392"  [label="DDG: &dummy->regs.orig_gpr2"];
"1000193" -> "1000191"  [label="DDG: &dummy->regs.orig_gpr2"];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000258"  [label="AST: "];
"1000272" -> "1000258"  [label="CFG: "];
"1000278" -> "1000258"  [label="CFG: "];
"1000258" -> "1000392"  [label="DDG: addr"];
"1000258" -> "1000392"  [label="DDG: (addr_t) &dummy->regs.orig_gpr2"];
"1000258" -> "1000392"  [label="DDG: addr == (addr_t) &dummy->regs.orig_gpr2"];
"1000191" -> "1000258"  [label="DDG: addr"];
"1000109" -> "1000258"  [label="DDG: addr"];
"1000258" -> "1000277"  [label="DDG: addr"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000289" -> "1000277"  [label="CFG: "];
"1000293" -> "1000277"  [label="CFG: "];
"1000277" -> "1000392"  [label="DDG: addr"];
"1000277" -> "1000392"  [label="DDG: addr < (addr_t) &dummy->regs.fp_regs"];
"1000277" -> "1000392"  [label="DDG: (addr_t) &dummy->regs.fp_regs"];
"1000109" -> "1000277"  [label="DDG: addr"];
"1000279" -> "1000277"  [label="DDG: &dummy->regs.fp_regs"];
"1000277" -> "1000292"  [label="DDG: addr"];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000307" -> "1000292"  [label="CFG: "];
"1000364" -> "1000292"  [label="CFG: "];
"1000292" -> "1000392"  [label="DDG: addr < (addr_t) (&dummy->regs.fp_regs + 1)"];
"1000292" -> "1000392"  [label="DDG: (addr_t) (&dummy->regs.fp_regs + 1)"];
"1000109" -> "1000292"  [label="DDG: addr"];
"1000294" -> "1000292"  [label="DDG: &dummy->regs.fp_regs + 1"];
"1000292" -> "1000306"  [label="DDG: addr"];
"1000292" -> "1000363"  [label="DDG: addr"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000322" -> "1000306"  [label="CFG: "];
"1000335" -> "1000306"  [label="CFG: "];
"1000306" -> "1000392"  [label="DDG: addr"];
"1000306" -> "1000392"  [label="DDG: addr == (addr_t) &dummy->regs.fp_regs.fpc"];
"1000306" -> "1000392"  [label="DDG: (addr_t) &dummy->regs.fp_regs.fpc"];
"1000109" -> "1000306"  [label="DDG: addr"];
"1000308" -> "1000306"  [label="DDG: &dummy->regs.fp_regs.fpc"];
"1000306" -> "1000336"  [label="DDG: addr"];
"1000336" -> "1000334"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000336" -> "1000392"  [label="DDG: (addr_t) &dummy->regs.fp_regs"];
"1000336" -> "1000392"  [label="DDG: addr"];
"1000336" -> "1000334"  [label="DDG: addr"];
"1000336" -> "1000334"  [label="DDG: (addr_t) &dummy->regs.fp_regs"];
"1000109" -> "1000336"  [label="DDG: addr"];
"1000338" -> "1000336"  [label="DDG: &dummy->regs.fp_regs"];
"1000334" -> "1000304"  [label="AST: "];
"1000335" -> "1000334"  [label="AST: "];
"1000349" -> "1000334"  [label="CFG: "];
"1000334" -> "1000392"  [label="DDG: addr - (addr_t) &dummy->regs.fp_regs"];
"1000334" -> "1000348"  [label="DDG: offset"];
"1000334" -> "1000350"  [label="DDG: offset"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000347" -> "1000348"  [label="CFG: "];
"1000348" -> "1000392"  [label="DDG: (addr_t) &child->thread.fp_regs + offset"];
"1000351" -> "1000348"  [label="DDG: &child->thread.fp_regs"];
"1000350" -> "1000359"  [label="CFG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000359" -> "1000350"  [label="AST: "];
"1000350" -> "1000392"  [label="DDG: (addr_t) &child->thread.fp_regs"];
"1000350" -> "1000392"  [label="DDG: offset"];
"1000351" -> "1000350"  [label="DDG: &child->thread.fp_regs"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000377" -> "1000363"  [label="CFG: "];
"1000391" -> "1000363"  [label="CFG: "];
"1000363" -> "1000392"  [label="DDG: (addr_t) (&dummy->regs.per_info + 1)"];
"1000363" -> "1000392"  [label="DDG: addr"];
"1000363" -> "1000392"  [label="DDG: addr < (addr_t) (&dummy->regs.per_info + 1)"];
"1000109" -> "1000363"  [label="DDG: addr"];
"1000365" -> "1000363"  [label="DDG: &dummy->regs.per_info + 1"];
"1000363" -> "1000376"  [label="DDG: addr"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000387" -> "1000376"  [label="CFG: "];
"1000376" -> "1000392"  [label="DDG: (addr_t) &dummy->regs.per_info"];
"1000378" -> "1000376"  [label="DDG: &dummy->regs.per_info"];
"1000109" -> "1000376"  [label="DDG: addr"];
"1000376" -> "1000386"  [label="DDG: addr"];
"1000386" -> "1000375"  [label="AST: "];
"1000386" -> "1000389"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000386"  [label="AST: "];
"1000389" -> "1000386"  [label="AST: "];
"1000391" -> "1000386"  [label="CFG: "];
"1000386" -> "1000392"  [label="DDG: data"];
"1000386" -> "1000392"  [label="DDG: addr"];
"1000386" -> "1000392"  [label="DDG: child"];
"1000386" -> "1000392"  [label="DDG: __poke_user_per(child, addr, data)"];
"1000108" -> "1000386"  [label="DDG: child"];
"1000109" -> "1000386"  [label="DDG: addr"];
"1000110" -> "1000386"  [label="DDG: data"];
}
