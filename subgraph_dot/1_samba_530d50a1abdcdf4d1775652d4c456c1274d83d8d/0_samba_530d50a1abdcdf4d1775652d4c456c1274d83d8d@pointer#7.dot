digraph "0_samba_530d50a1abdcdf4d1775652d4c456c1274d83d8d@pointer" {
"1000546" [label="(Call,ASN1_APPLICATION(msg->type))"];
"1000544" [label="(Call,asn1_push_tag(data, ASN1_APPLICATION(msg->type)))"];
"1000550" [label="(Call,asn1_write_OctetString(data, r->dn, strlen(r->dn)))"];
"1000559" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000586" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000590" [label="(Call,asn1_write_enumerated(data, r->mods[i].type))"];
"1000599" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000603" [label="(Call,asn1_write_OctetString(data, attrib->name,\n                                              strlen(attrib->name)))"];
"1000608" [label="(Call,strlen(attrib->name))"];
"1000612" [label="(Call,asn1_push_tag(data, ASN1_SET))"];
"1000627" [label="(Call,asn1_write_OctetString(data,\n                                                       attrib->values[j].data,\n                                                      attrib->values[j].length))"];
"1000643" [label="(Call,asn1_pop_tag(data))"];
"1000645" [label="(Call,asn1_pop_tag(data))"];
"1000647" [label="(Call,asn1_pop_tag(data))"];
"1000649" [label="(Call,asn1_pop_tag(data))"];
"1000651" [label="(Call,asn1_pop_tag(data))"];
"1001216" [label="(Call,asn1_push_tag(data, ASN1_CONTEXT(0)))"];
"1001236" [label="(Call,ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001224" [label="(Call,msg->controls[i] != NULL)"];
"1001235" [label="(Call,!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001259" [label="(Call,asn1_pop_tag(data))"];
"1001261" [label="(Call,asn1_pop_tag(data))"];
"1001268" [label="(Call,asn1_free(data))"];
"1001283" [label="(Call,asn1_free(data))"];
"1001275" [label="(Call,data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001272" [label="(Call,*result = data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001232" [label="(Identifier,i)"];
"1000648" [label="(Identifier,data)"];
"1000625" [label="(Identifier,j)"];
"1000587" [label="(Identifier,data)"];
"1000507" [label="(Call,asn1_pop_tag(data))"];
"1001280" [label="(Call,data->length)"];
"1000603" [label="(Call,asn1_write_OctetString(data, attrib->name,\n                                              strlen(attrib->name)))"];
"1000613" [label="(Identifier,data)"];
"1001234" [label="(ControlStructure,if (!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])))"];
"1001283" [label="(Call,asn1_free(data))"];
"1000552" [label="(Call,r->dn)"];
"1001260" [label="(Identifier,data)"];
"1001267" [label="(Block,)"];
"1001236" [label="(Call,ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001247" [label="(Literal,0)"];
"1000612" [label="(Call,asn1_push_tag(data, ASN1_SET))"];
"1000636" [label="(Call,attrib->values[j].length)"];
"1001222" [label="(Identifier,i)"];
"1001239" [label="(Call,msg->controls[i])"];
"1001233" [label="(Block,)"];
"1000402" [label="(Call,asn1_pop_tag(data))"];
"1000604" [label="(Identifier,data)"];
"1000857" [label="(Call,asn1_pop_tag(data))"];
"1000782" [label="(Call,asn1_pop_tag(data))"];
"1000296" [label="(Call,asn1_pop_tag(data))"];
"1000545" [label="(Identifier,data)"];
"1000617" [label="(Identifier,j)"];
"1000646" [label="(Identifier,data)"];
"1000586" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000559" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000534" [label="(Block,)"];
"1000614" [label="(Identifier,ASN1_SET)"];
"1000999" [label="(Call,asn1_pop_tag(data))"];
"1001237" [label="(Identifier,mem_ctx)"];
"1000555" [label="(Call,strlen(r->dn))"];
"1000653" [label="(ControlStructure,break;)"];
"1000920" [label="(Call,asn1_pop_tag(data))"];
"1000111" [label="(Call,asn1_init(mem_ctx))"];
"1001134" [label="(Call,asn1_pop_tag(data))"];
"1000560" [label="(Identifier,data)"];
"1001273" [label="(Call,*result)"];
"1000649" [label="(Call,asn1_pop_tag(data))"];
"1001235" [label="(Call,!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001215" [label="(Block,)"];
"1001320" [label="(MethodReturn,_PUBLIC_ bool)"];
"1000609" [label="(Call,attrib->name)"];
"1000647" [label="(Call,asn1_pop_tag(data))"];
"1000550" [label="(Call,asn1_write_OctetString(data, r->dn, strlen(r->dn)))"];
"1001217" [label="(Identifier,data)"];
"1000546" [label="(Call,ASN1_APPLICATION(msg->type))"];
"1000588" [label="(Call,ASN1_SEQUENCE(0))"];
"1000106" [label="(MethodParameterIn,TALLOC_CTX *mem_ctx)"];
"1000590" [label="(Call,asn1_write_enumerated(data, r->mods[i].type))"];
"1001218" [label="(Call,ASN1_CONTEXT(0))"];
"1001225" [label="(Call,msg->controls[i])"];
"1000547" [label="(Call,msg->type)"];
"1000674" [label="(Call,asn1_pop_tag(data))"];
"1000574" [label="(Block,)"];
"1000307" [label="(Call,asn1_pop_tag(data))"];
"1000599" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1001210" [label="(Call,msg->controls != NULL)"];
"1000530" [label="(Call,asn1_pop_tag(data))"];
"1000551" [label="(Identifier,data)"];
"1000943" [label="(Call,asn1_pop_tag(data))"];
"1001277" [label="(Call,data->data)"];
"1001271" [label="(Identifier,false)"];
"1000805" [label="(Call,asn1_pop_tag(data))"];
"1000643" [label="(Call,asn1_pop_tag(data))"];
"1001047" [label="(Call,asn1_pop_tag(data))"];
"1000645" [label="(Call,asn1_pop_tag(data))"];
"1000195" [label="(Call,asn1_pop_tag(data))"];
"1001022" [label="(Call,asn1_pop_tag(data))"];
"1000834" [label="(Call,asn1_pop_tag(data))"];
"1000600" [label="(Identifier,data)"];
"1000573" [label="(Identifier,i)"];
"1001275" [label="(Call,data_blob_talloc(mem_ctx, data->data, data->length))"];
"1000629" [label="(Call,attrib->values[j].data)"];
"1001261" [label="(Call,asn1_pop_tag(data))"];
"1000544" [label="(Call,asn1_push_tag(data, ASN1_APPLICATION(msg->type)))"];
"1001224" [label="(Call,msg->controls[i] != NULL)"];
"1000644" [label="(Identifier,data)"];
"1000605" [label="(Call,attrib->name)"];
"1000565" [label="(Identifier,i)"];
"1000591" [label="(Identifier,data)"];
"1001284" [label="(Identifier,data)"];
"1000601" [label="(Call,ASN1_SEQUENCE(0))"];
"1000249" [label="(Call,asn1_pop_tag(data))"];
"1001268" [label="(Call,asn1_free(data))"];
"1001286" [label="(Identifier,true)"];
"1000627" [label="(Call,asn1_write_OctetString(data,\n                                                       attrib->values[j].data,\n                                                      attrib->values[j].length))"];
"1000652" [label="(Identifier,data)"];
"1001076" [label="(Call,asn1_pop_tag(data))"];
"1000651" [label="(Call,asn1_pop_tag(data))"];
"1000608" [label="(Call,strlen(attrib->name))"];
"1001238" [label="(Identifier,data)"];
"1001276" [label="(Identifier,mem_ctx)"];
"1001220" [label="(ControlStructure,for (i = 0; msg->controls[i] != NULL; i++))"];
"1001216" [label="(Call,asn1_push_tag(data, ASN1_CONTEXT(0)))"];
"1000592" [label="(Call,r->mods[i].type)"];
"1000628" [label="(Identifier,data)"];
"1001265" [label="(Identifier,data)"];
"1000561" [label="(Call,ASN1_SEQUENCE(0))"];
"1001203" [label="(Call,asn1_pop_tag(data))"];
"1001272" [label="(Call,*result = data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001230" [label="(Identifier,NULL)"];
"1000124" [label="(Call,asn1_write_Integer(data, msg->messageid))"];
"1000650" [label="(Identifier,data)"];
"1001269" [label="(Identifier,data)"];
"1001259" [label="(Call,asn1_pop_tag(data))"];
"1001262" [label="(Identifier,data)"];
"1000626" [label="(Block,)"];
"1000255" [label="(Call,asn1_pop_tag(data))"];
"1000546" -> "1000544"  [label="AST: "];
"1000546" -> "1000547"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000544" -> "1000546"  [label="CFG: "];
"1000546" -> "1001320"  [label="DDG: msg->type"];
"1000546" -> "1000544"  [label="DDG: msg->type"];
"1000544" -> "1000534"  [label="AST: "];
"1000545" -> "1000544"  [label="AST: "];
"1000551" -> "1000544"  [label="CFG: "];
"1000544" -> "1001320"  [label="DDG: ASN1_APPLICATION(msg->type)"];
"1000544" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_APPLICATION(msg->type))"];
"1000124" -> "1000544"  [label="DDG: data"];
"1000544" -> "1000550"  [label="DDG: data"];
"1000550" -> "1000534"  [label="AST: "];
"1000550" -> "1000555"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="AST: "];
"1000555" -> "1000550"  [label="AST: "];
"1000560" -> "1000550"  [label="CFG: "];
"1000550" -> "1001320"  [label="DDG: asn1_write_OctetString(data, r->dn, strlen(r->dn))"];
"1000550" -> "1001320"  [label="DDG: strlen(r->dn)"];
"1000550" -> "1001320"  [label="DDG: r->dn"];
"1000555" -> "1000550"  [label="DDG: r->dn"];
"1000550" -> "1000559"  [label="DDG: data"];
"1000559" -> "1000534"  [label="AST: "];
"1000559" -> "1000561"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000561" -> "1000559"  [label="AST: "];
"1000565" -> "1000559"  [label="CFG: "];
"1000559" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_SEQUENCE(0))"];
"1000559" -> "1001320"  [label="DDG: ASN1_SEQUENCE(0)"];
"1000561" -> "1000559"  [label="DDG: 0"];
"1000559" -> "1000586"  [label="DDG: data"];
"1000559" -> "1000649"  [label="DDG: data"];
"1000586" -> "1000574"  [label="AST: "];
"1000586" -> "1000588"  [label="CFG: "];
"1000587" -> "1000586"  [label="AST: "];
"1000588" -> "1000586"  [label="AST: "];
"1000591" -> "1000586"  [label="CFG: "];
"1000647" -> "1000586"  [label="DDG: data"];
"1000588" -> "1000586"  [label="DDG: 0"];
"1000586" -> "1000590"  [label="DDG: data"];
"1000590" -> "1000574"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000600" -> "1000590"  [label="CFG: "];
"1000590" -> "1001320"  [label="DDG: asn1_write_enumerated(data, r->mods[i].type)"];
"1000590" -> "1001320"  [label="DDG: r->mods[i].type"];
"1000590" -> "1000599"  [label="DDG: data"];
"1000599" -> "1000574"  [label="AST: "];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000604" -> "1000599"  [label="CFG: "];
"1000599" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_SEQUENCE(0))"];
"1000599" -> "1001320"  [label="DDG: ASN1_SEQUENCE(0)"];
"1000601" -> "1000599"  [label="DDG: 0"];
"1000599" -> "1000603"  [label="DDG: data"];
"1000603" -> "1000574"  [label="AST: "];
"1000603" -> "1000608"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000608" -> "1000603"  [label="AST: "];
"1000613" -> "1000603"  [label="CFG: "];
"1000603" -> "1001320"  [label="DDG: strlen(attrib->name)"];
"1000603" -> "1001320"  [label="DDG: attrib->name"];
"1000603" -> "1001320"  [label="DDG: asn1_write_OctetString(data, attrib->name,\n                                              strlen(attrib->name))"];
"1000608" -> "1000603"  [label="DDG: attrib->name"];
"1000603" -> "1000608"  [label="DDG: attrib->name"];
"1000603" -> "1000612"  [label="DDG: data"];
"1000608" -> "1000609"  [label="CFG: "];
"1000609" -> "1000608"  [label="AST: "];
"1000612" -> "1000574"  [label="AST: "];
"1000612" -> "1000614"  [label="CFG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000614" -> "1000612"  [label="AST: "];
"1000617" -> "1000612"  [label="CFG: "];
"1000612" -> "1001320"  [label="DDG: ASN1_SET"];
"1000612" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_SET)"];
"1000612" -> "1000627"  [label="DDG: data"];
"1000612" -> "1000643"  [label="DDG: data"];
"1000627" -> "1000626"  [label="AST: "];
"1000627" -> "1000636"  [label="CFG: "];
"1000628" -> "1000627"  [label="AST: "];
"1000629" -> "1000627"  [label="AST: "];
"1000636" -> "1000627"  [label="AST: "];
"1000625" -> "1000627"  [label="CFG: "];
"1000627" -> "1001320"  [label="DDG: attrib->values[j].data"];
"1000627" -> "1001320"  [label="DDG: asn1_write_OctetString(data,\n                                                       attrib->values[j].data,\n                                                      attrib->values[j].length)"];
"1000627" -> "1001320"  [label="DDG: attrib->values[j].length"];
"1000627" -> "1000643"  [label="DDG: data"];
"1000643" -> "1000574"  [label="AST: "];
"1000643" -> "1000644"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000646" -> "1000643"  [label="CFG: "];
"1000643" -> "1000645"  [label="DDG: data"];
"1000645" -> "1000574"  [label="AST: "];
"1000645" -> "1000646"  [label="CFG: "];
"1000646" -> "1000645"  [label="AST: "];
"1000648" -> "1000645"  [label="CFG: "];
"1000645" -> "1000647"  [label="DDG: data"];
"1000647" -> "1000574"  [label="AST: "];
"1000647" -> "1000648"  [label="CFG: "];
"1000648" -> "1000647"  [label="AST: "];
"1000573" -> "1000647"  [label="CFG: "];
"1000647" -> "1000649"  [label="DDG: data"];
"1000649" -> "1000534"  [label="AST: "];
"1000649" -> "1000650"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000652" -> "1000649"  [label="CFG: "];
"1000649" -> "1000651"  [label="DDG: data"];
"1000651" -> "1000534"  [label="AST: "];
"1000651" -> "1000652"  [label="CFG: "];
"1000652" -> "1000651"  [label="AST: "];
"1000653" -> "1000651"  [label="CFG: "];
"1000651" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1000651" -> "1001320"  [label="DDG: data"];
"1000651" -> "1001216"  [label="DDG: data"];
"1001216" -> "1001215"  [label="AST: "];
"1001216" -> "1001218"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001218" -> "1001216"  [label="AST: "];
"1001222" -> "1001216"  [label="CFG: "];
"1001216" -> "1001320"  [label="DDG: ASN1_CONTEXT(0)"];
"1001216" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_CONTEXT(0))"];
"1000857" -> "1001216"  [label="DDG: data"];
"1001134" -> "1001216"  [label="DDG: data"];
"1000805" -> "1001216"  [label="DDG: data"];
"1001047" -> "1001216"  [label="DDG: data"];
"1000530" -> "1001216"  [label="DDG: data"];
"1000674" -> "1001216"  [label="DDG: data"];
"1001203" -> "1001216"  [label="DDG: data"];
"1000296" -> "1001216"  [label="DDG: data"];
"1000255" -> "1001216"  [label="DDG: data"];
"1000782" -> "1001216"  [label="DDG: data"];
"1000920" -> "1001216"  [label="DDG: data"];
"1000834" -> "1001216"  [label="DDG: data"];
"1000402" -> "1001216"  [label="DDG: data"];
"1001076" -> "1001216"  [label="DDG: data"];
"1000943" -> "1001216"  [label="DDG: data"];
"1001022" -> "1001216"  [label="DDG: data"];
"1000249" -> "1001216"  [label="DDG: data"];
"1000307" -> "1001216"  [label="DDG: data"];
"1000195" -> "1001216"  [label="DDG: data"];
"1000507" -> "1001216"  [label="DDG: data"];
"1000999" -> "1001216"  [label="DDG: data"];
"1001218" -> "1001216"  [label="DDG: 0"];
"1001216" -> "1001236"  [label="DDG: data"];
"1001216" -> "1001261"  [label="DDG: data"];
"1001236" -> "1001235"  [label="AST: "];
"1001236" -> "1001239"  [label="CFG: "];
"1001237" -> "1001236"  [label="AST: "];
"1001238" -> "1001236"  [label="AST: "];
"1001239" -> "1001236"  [label="AST: "];
"1001235" -> "1001236"  [label="CFG: "];
"1001236" -> "1001320"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001320"  [label="DDG: data"];
"1001236" -> "1001320"  [label="DDG: mem_ctx"];
"1001236" -> "1001224"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001235"  [label="DDG: mem_ctx"];
"1001236" -> "1001235"  [label="DDG: data"];
"1001236" -> "1001235"  [label="DDG: msg->controls[i]"];
"1000111" -> "1001236"  [label="DDG: mem_ctx"];
"1000106" -> "1001236"  [label="DDG: mem_ctx"];
"1001259" -> "1001236"  [label="DDG: data"];
"1001224" -> "1001236"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001259"  [label="DDG: data"];
"1001236" -> "1001275"  [label="DDG: mem_ctx"];
"1001224" -> "1001220"  [label="AST: "];
"1001224" -> "1001230"  [label="CFG: "];
"1001225" -> "1001224"  [label="AST: "];
"1001230" -> "1001224"  [label="AST: "];
"1001237" -> "1001224"  [label="CFG: "];
"1001262" -> "1001224"  [label="CFG: "];
"1001224" -> "1001320"  [label="DDG: NULL"];
"1001224" -> "1001320"  [label="DDG: msg->controls[i]"];
"1001224" -> "1001320"  [label="DDG: msg->controls[i] != NULL"];
"1001210" -> "1001224"  [label="DDG: NULL"];
"1001235" -> "1001234"  [label="AST: "];
"1001247" -> "1001235"  [label="CFG: "];
"1001260" -> "1001235"  [label="CFG: "];
"1001235" -> "1001320"  [label="DDG: !ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])"];
"1001235" -> "1001320"  [label="DDG: ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])"];
"1001259" -> "1001233"  [label="AST: "];
"1001259" -> "1001260"  [label="CFG: "];
"1001260" -> "1001259"  [label="AST: "];
"1001232" -> "1001259"  [label="CFG: "];
"1001259" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1001259" -> "1001261"  [label="DDG: data"];
"1001261" -> "1001215"  [label="AST: "];
"1001261" -> "1001262"  [label="CFG: "];
"1001262" -> "1001261"  [label="AST: "];
"1001265" -> "1001261"  [label="CFG: "];
"1001261" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1001261" -> "1001268"  [label="DDG: data"];
"1001261" -> "1001283"  [label="DDG: data"];
"1001268" -> "1001267"  [label="AST: "];
"1001268" -> "1001269"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001271" -> "1001268"  [label="CFG: "];
"1001268" -> "1001320"  [label="DDG: asn1_free(data)"];
"1001268" -> "1001320"  [label="DDG: data"];
"1001283" -> "1001215"  [label="AST: "];
"1001283" -> "1001284"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001286" -> "1001283"  [label="CFG: "];
"1001283" -> "1001320"  [label="DDG: asn1_free(data)"];
"1001283" -> "1001320"  [label="DDG: data"];
"1001275" -> "1001272"  [label="AST: "];
"1001275" -> "1001280"  [label="CFG: "];
"1001276" -> "1001275"  [label="AST: "];
"1001277" -> "1001275"  [label="AST: "];
"1001280" -> "1001275"  [label="AST: "];
"1001272" -> "1001275"  [label="CFG: "];
"1001275" -> "1001320"  [label="DDG: data->length"];
"1001275" -> "1001320"  [label="DDG: data->data"];
"1001275" -> "1001320"  [label="DDG: mem_ctx"];
"1001275" -> "1001272"  [label="DDG: mem_ctx"];
"1001275" -> "1001272"  [label="DDG: data->data"];
"1001275" -> "1001272"  [label="DDG: data->length"];
"1000111" -> "1001275"  [label="DDG: mem_ctx"];
"1000106" -> "1001275"  [label="DDG: mem_ctx"];
"1001272" -> "1001215"  [label="AST: "];
"1001273" -> "1001272"  [label="AST: "];
"1001284" -> "1001272"  [label="CFG: "];
"1001272" -> "1001320"  [label="DDG: data_blob_talloc(mem_ctx, data->data, data->length)"];
"1001272" -> "1001320"  [label="DDG: *result"];
}
