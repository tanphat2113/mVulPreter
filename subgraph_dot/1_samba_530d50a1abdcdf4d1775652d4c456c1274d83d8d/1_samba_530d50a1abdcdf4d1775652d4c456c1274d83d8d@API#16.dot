digraph "1_samba_530d50a1abdcdf4d1775652d4c456c1274d83d8d@API" {
"1000332" [label="(Call,strlen(r->basedn))"];
"1000327" [label="(Call,asn1_write_OctetString(data, r->basedn, strlen(r->basedn)))"];
"1000336" [label="(Call,asn1_write_enumerated(data, r->scope))"];
"1000341" [label="(Call,asn1_write_enumerated(data, r->deref))"];
"1000346" [label="(Call,asn1_write_Integer(data, r->sizelimit))"];
"1000351" [label="(Call,asn1_write_Integer(data, r->timelimit))"];
"1000356" [label="(Call,asn1_write_BOOLEAN(data, r->attributesonly))"];
"1000363" [label="(Call,ldap_push_filter(data, r->tree))"];
"1000362" [label="(Call,!ldap_push_filter(data, r->tree))"];
"1000371" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000387" [label="(Call,asn1_write_OctetString(data, r->attributes[i],\n                                              strlen(r->attributes[i])))"];
"1000394" [label="(Call,strlen(r->attributes[i]))"];
"1000400" [label="(Call,asn1_pop_tag(data))"];
"1000402" [label="(Call,asn1_pop_tag(data))"];
"1001216" [label="(Call,asn1_push_tag(data, ASN1_CONTEXT(0)))"];
"1001236" [label="(Call,ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001224" [label="(Call,msg->controls[i] != NULL)"];
"1001235" [label="(Call,!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001259" [label="(Call,asn1_pop_tag(data))"];
"1001261" [label="(Call,asn1_pop_tag(data))"];
"1001268" [label="(Call,asn1_free(data))"];
"1001283" [label="(Call,asn1_free(data))"];
"1001275" [label="(Call,data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001272" [label="(Call,*result = data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001232" [label="(Identifier,i)"];
"1000507" [label="(Call,asn1_pop_tag(data))"];
"1001280" [label="(Call,data->length)"];
"1000362" [label="(Call,!ldap_push_filter(data, r->tree))"];
"1001234" [label="(ControlStructure,if (!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])))"];
"1001283" [label="(Call,asn1_free(data))"];
"1001260" [label="(Identifier,data)"];
"1001267" [label="(Block,)"];
"1001236" [label="(Call,ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001247" [label="(Literal,0)"];
"1000372" [label="(Identifier,data)"];
"1000370" [label="(Identifier,false)"];
"1000347" [label="(Identifier,data)"];
"1000361" [label="(ControlStructure,if (!ldap_push_filter(data, r->tree)))"];
"1001222" [label="(Identifier,i)"];
"1000357" [label="(Identifier,data)"];
"1000403" [label="(Identifier,data)"];
"1001239" [label="(Call,msg->controls[i])"];
"1000336" [label="(Call,asn1_write_enumerated(data, r->scope))"];
"1000387" [label="(Call,asn1_write_OctetString(data, r->attributes[i],\n                                              strlen(r->attributes[i])))"];
"1001233" [label="(Block,)"];
"1000402" [label="(Call,asn1_pop_tag(data))"];
"1000343" [label="(Call,r->deref)"];
"1000351" [label="(Call,asn1_write_Integer(data, r->timelimit))"];
"1000857" [label="(Call,asn1_pop_tag(data))"];
"1000782" [label="(Call,asn1_pop_tag(data))"];
"1000296" [label="(Call,asn1_pop_tag(data))"];
"1000333" [label="(Call,r->basedn)"];
"1000364" [label="(Identifier,data)"];
"1000999" [label="(Call,asn1_pop_tag(data))"];
"1001237" [label="(Identifier,mem_ctx)"];
"1000920" [label="(Call,asn1_pop_tag(data))"];
"1000111" [label="(Call,asn1_init(mem_ctx))"];
"1000352" [label="(Identifier,data)"];
"1001134" [label="(Call,asn1_pop_tag(data))"];
"1001273" [label="(Call,*result)"];
"1000385" [label="(Identifier,i)"];
"1001235" [label="(Call,!ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i]))"];
"1001215" [label="(Block,)"];
"1001320" [label="(MethodReturn,_PUBLIC_ bool)"];
"1000373" [label="(Call,ASN1_SEQUENCE(0))"];
"1000337" [label="(Identifier,data)"];
"1000332" [label="(Call,strlen(r->basedn))"];
"1001217" [label="(Identifier,data)"];
"1000106" [label="(MethodParameterIn,TALLOC_CTX *mem_ctx)"];
"1001218" [label="(Call,ASN1_CONTEXT(0))"];
"1000386" [label="(Block,)"];
"1000389" [label="(Call,r->attributes[i])"];
"1001225" [label="(Call,msg->controls[i])"];
"1000674" [label="(Call,asn1_pop_tag(data))"];
"1000365" [label="(Call,r->tree)"];
"1000404" [label="(ControlStructure,break;)"];
"1000307" [label="(Call,asn1_pop_tag(data))"];
"1000371" [label="(Call,asn1_push_tag(data, ASN1_SEQUENCE(0)))"];
"1000342" [label="(Identifier,data)"];
"1000401" [label="(Identifier,data)"];
"1001210" [label="(Call,msg->controls != NULL)"];
"1000530" [label="(Call,asn1_pop_tag(data))"];
"1000377" [label="(Identifier,i)"];
"1000346" [label="(Call,asn1_write_Integer(data, r->sizelimit))"];
"1000943" [label="(Call,asn1_pop_tag(data))"];
"1001277" [label="(Call,data->data)"];
"1001271" [label="(Identifier,false)"];
"1000805" [label="(Call,asn1_pop_tag(data))"];
"1001047" [label="(Call,asn1_pop_tag(data))"];
"1000195" [label="(Call,asn1_pop_tag(data))"];
"1000328" [label="(Identifier,data)"];
"1000400" [label="(Call,asn1_pop_tag(data))"];
"1001022" [label="(Call,asn1_pop_tag(data))"];
"1000834" [label="(Call,asn1_pop_tag(data))"];
"1000394" [label="(Call,strlen(r->attributes[i]))"];
"1001275" [label="(Call,data_blob_talloc(mem_ctx, data->data, data->length))"];
"1000327" [label="(Call,asn1_write_OctetString(data, r->basedn, strlen(r->basedn)))"];
"1001261" [label="(Call,asn1_pop_tag(data))"];
"1000338" [label="(Call,r->scope)"];
"1000341" [label="(Call,asn1_write_enumerated(data, r->deref))"];
"1001224" [label="(Call,msg->controls[i] != NULL)"];
"1000395" [label="(Call,r->attributes[i])"];
"1000356" [label="(Call,asn1_write_BOOLEAN(data, r->attributesonly))"];
"1001284" [label="(Identifier,data)"];
"1000321" [label="(Call,asn1_push_tag(data, ASN1_APPLICATION(msg->type)))"];
"1000249" [label="(Call,asn1_pop_tag(data))"];
"1001268" [label="(Call,asn1_free(data))"];
"1001286" [label="(Identifier,true)"];
"1000353" [label="(Call,r->timelimit)"];
"1001076" [label="(Call,asn1_pop_tag(data))"];
"1000651" [label="(Call,asn1_pop_tag(data))"];
"1000311" [label="(Block,)"];
"1000363" [label="(Call,ldap_push_filter(data, r->tree))"];
"1001238" [label="(Identifier,data)"];
"1001276" [label="(Identifier,mem_ctx)"];
"1001220" [label="(ControlStructure,for (i = 0; msg->controls[i] != NULL; i++))"];
"1001216" [label="(Call,asn1_push_tag(data, ASN1_CONTEXT(0)))"];
"1001265" [label="(Identifier,data)"];
"1001203" [label="(Call,asn1_pop_tag(data))"];
"1000388" [label="(Identifier,data)"];
"1001272" [label="(Call,*result = data_blob_talloc(mem_ctx, data->data, data->length))"];
"1001230" [label="(Identifier,NULL)"];
"1000348" [label="(Call,r->sizelimit)"];
"1001269" [label="(Identifier,data)"];
"1000329" [label="(Call,r->basedn)"];
"1001259" [label="(Call,asn1_pop_tag(data))"];
"1001262" [label="(Identifier,data)"];
"1000358" [label="(Call,r->attributesonly)"];
"1000255" [label="(Call,asn1_pop_tag(data))"];
"1000332" -> "1000327"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000327" -> "1000332"  [label="CFG: "];
"1000332" -> "1000327"  [label="DDG: r->basedn"];
"1000327" -> "1000311"  [label="AST: "];
"1000328" -> "1000327"  [label="AST: "];
"1000329" -> "1000327"  [label="AST: "];
"1000337" -> "1000327"  [label="CFG: "];
"1000327" -> "1001320"  [label="DDG: strlen(r->basedn)"];
"1000327" -> "1001320"  [label="DDG: r->basedn"];
"1000327" -> "1001320"  [label="DDG: asn1_write_OctetString(data, r->basedn, strlen(r->basedn))"];
"1000321" -> "1000327"  [label="DDG: data"];
"1000327" -> "1000336"  [label="DDG: data"];
"1000336" -> "1000311"  [label="AST: "];
"1000336" -> "1000338"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000338" -> "1000336"  [label="AST: "];
"1000342" -> "1000336"  [label="CFG: "];
"1000336" -> "1001320"  [label="DDG: asn1_write_enumerated(data, r->scope)"];
"1000336" -> "1001320"  [label="DDG: r->scope"];
"1000336" -> "1000341"  [label="DDG: data"];
"1000341" -> "1000311"  [label="AST: "];
"1000341" -> "1000343"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000347" -> "1000341"  [label="CFG: "];
"1000341" -> "1001320"  [label="DDG: r->deref"];
"1000341" -> "1001320"  [label="DDG: asn1_write_enumerated(data, r->deref)"];
"1000341" -> "1000346"  [label="DDG: data"];
"1000346" -> "1000311"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000352" -> "1000346"  [label="CFG: "];
"1000346" -> "1001320"  [label="DDG: r->sizelimit"];
"1000346" -> "1001320"  [label="DDG: asn1_write_Integer(data, r->sizelimit)"];
"1000346" -> "1000351"  [label="DDG: data"];
"1000351" -> "1000311"  [label="AST: "];
"1000351" -> "1000353"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000353" -> "1000351"  [label="AST: "];
"1000357" -> "1000351"  [label="CFG: "];
"1000351" -> "1001320"  [label="DDG: asn1_write_Integer(data, r->timelimit)"];
"1000351" -> "1001320"  [label="DDG: r->timelimit"];
"1000351" -> "1000356"  [label="DDG: data"];
"1000356" -> "1000311"  [label="AST: "];
"1000356" -> "1000358"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000358" -> "1000356"  [label="AST: "];
"1000364" -> "1000356"  [label="CFG: "];
"1000356" -> "1001320"  [label="DDG: asn1_write_BOOLEAN(data, r->attributesonly)"];
"1000356" -> "1001320"  [label="DDG: r->attributesonly"];
"1000356" -> "1000363"  [label="DDG: data"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000365"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000362" -> "1000363"  [label="CFG: "];
"1000363" -> "1001320"  [label="DDG: r->tree"];
"1000363" -> "1001320"  [label="DDG: data"];
"1000363" -> "1000362"  [label="DDG: data"];
"1000363" -> "1000362"  [label="DDG: r->tree"];
"1000363" -> "1000371"  [label="DDG: data"];
"1000362" -> "1000361"  [label="AST: "];
"1000370" -> "1000362"  [label="CFG: "];
"1000372" -> "1000362"  [label="CFG: "];
"1000362" -> "1001320"  [label="DDG: !ldap_push_filter(data, r->tree)"];
"1000362" -> "1001320"  [label="DDG: ldap_push_filter(data, r->tree)"];
"1000371" -> "1000311"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000377" -> "1000371"  [label="CFG: "];
"1000371" -> "1001320"  [label="DDG: ASN1_SEQUENCE(0)"];
"1000371" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_SEQUENCE(0))"];
"1000373" -> "1000371"  [label="DDG: 0"];
"1000371" -> "1000387"  [label="DDG: data"];
"1000371" -> "1000400"  [label="DDG: data"];
"1000387" -> "1000386"  [label="AST: "];
"1000387" -> "1000394"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000389" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="AST: "];
"1000385" -> "1000387"  [label="CFG: "];
"1000387" -> "1001320"  [label="DDG: strlen(r->attributes[i])"];
"1000387" -> "1001320"  [label="DDG: r->attributes[i]"];
"1000387" -> "1001320"  [label="DDG: asn1_write_OctetString(data, r->attributes[i],\n                                              strlen(r->attributes[i]))"];
"1000394" -> "1000387"  [label="DDG: r->attributes[i]"];
"1000387" -> "1000394"  [label="DDG: r->attributes[i]"];
"1000387" -> "1000400"  [label="DDG: data"];
"1000394" -> "1000395"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000400" -> "1000311"  [label="AST: "];
"1000400" -> "1000401"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000403" -> "1000400"  [label="CFG: "];
"1000400" -> "1000402"  [label="DDG: data"];
"1000402" -> "1000311"  [label="AST: "];
"1000402" -> "1000403"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="CFG: "];
"1000402" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1000402" -> "1001320"  [label="DDG: data"];
"1000402" -> "1001216"  [label="DDG: data"];
"1001216" -> "1001215"  [label="AST: "];
"1001216" -> "1001218"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001218" -> "1001216"  [label="AST: "];
"1001222" -> "1001216"  [label="CFG: "];
"1001216" -> "1001320"  [label="DDG: ASN1_CONTEXT(0)"];
"1001216" -> "1001320"  [label="DDG: asn1_push_tag(data, ASN1_CONTEXT(0))"];
"1000857" -> "1001216"  [label="DDG: data"];
"1001134" -> "1001216"  [label="DDG: data"];
"1000805" -> "1001216"  [label="DDG: data"];
"1001047" -> "1001216"  [label="DDG: data"];
"1000530" -> "1001216"  [label="DDG: data"];
"1000651" -> "1001216"  [label="DDG: data"];
"1000674" -> "1001216"  [label="DDG: data"];
"1001203" -> "1001216"  [label="DDG: data"];
"1000296" -> "1001216"  [label="DDG: data"];
"1000255" -> "1001216"  [label="DDG: data"];
"1000782" -> "1001216"  [label="DDG: data"];
"1000920" -> "1001216"  [label="DDG: data"];
"1000834" -> "1001216"  [label="DDG: data"];
"1001076" -> "1001216"  [label="DDG: data"];
"1000943" -> "1001216"  [label="DDG: data"];
"1001022" -> "1001216"  [label="DDG: data"];
"1000249" -> "1001216"  [label="DDG: data"];
"1000307" -> "1001216"  [label="DDG: data"];
"1000195" -> "1001216"  [label="DDG: data"];
"1000507" -> "1001216"  [label="DDG: data"];
"1000999" -> "1001216"  [label="DDG: data"];
"1001218" -> "1001216"  [label="DDG: 0"];
"1001216" -> "1001236"  [label="DDG: data"];
"1001216" -> "1001261"  [label="DDG: data"];
"1001236" -> "1001235"  [label="AST: "];
"1001236" -> "1001239"  [label="CFG: "];
"1001237" -> "1001236"  [label="AST: "];
"1001238" -> "1001236"  [label="AST: "];
"1001239" -> "1001236"  [label="AST: "];
"1001235" -> "1001236"  [label="CFG: "];
"1001236" -> "1001320"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001320"  [label="DDG: data"];
"1001236" -> "1001320"  [label="DDG: mem_ctx"];
"1001236" -> "1001224"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001235"  [label="DDG: mem_ctx"];
"1001236" -> "1001235"  [label="DDG: data"];
"1001236" -> "1001235"  [label="DDG: msg->controls[i]"];
"1000111" -> "1001236"  [label="DDG: mem_ctx"];
"1000106" -> "1001236"  [label="DDG: mem_ctx"];
"1001259" -> "1001236"  [label="DDG: data"];
"1001224" -> "1001236"  [label="DDG: msg->controls[i]"];
"1001236" -> "1001259"  [label="DDG: data"];
"1001236" -> "1001275"  [label="DDG: mem_ctx"];
"1001224" -> "1001220"  [label="AST: "];
"1001224" -> "1001230"  [label="CFG: "];
"1001225" -> "1001224"  [label="AST: "];
"1001230" -> "1001224"  [label="AST: "];
"1001237" -> "1001224"  [label="CFG: "];
"1001262" -> "1001224"  [label="CFG: "];
"1001224" -> "1001320"  [label="DDG: NULL"];
"1001224" -> "1001320"  [label="DDG: msg->controls[i]"];
"1001224" -> "1001320"  [label="DDG: msg->controls[i] != NULL"];
"1001210" -> "1001224"  [label="DDG: NULL"];
"1001235" -> "1001234"  [label="AST: "];
"1001247" -> "1001235"  [label="CFG: "];
"1001260" -> "1001235"  [label="CFG: "];
"1001235" -> "1001320"  [label="DDG: !ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])"];
"1001235" -> "1001320"  [label="DDG: ldap_encode_control(mem_ctx, data,\n\t\t\t\t\t\t msg->controls[i])"];
"1001259" -> "1001233"  [label="AST: "];
"1001259" -> "1001260"  [label="CFG: "];
"1001260" -> "1001259"  [label="AST: "];
"1001232" -> "1001259"  [label="CFG: "];
"1001259" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1001259" -> "1001261"  [label="DDG: data"];
"1001261" -> "1001215"  [label="AST: "];
"1001261" -> "1001262"  [label="CFG: "];
"1001262" -> "1001261"  [label="AST: "];
"1001265" -> "1001261"  [label="CFG: "];
"1001261" -> "1001320"  [label="DDG: asn1_pop_tag(data)"];
"1001261" -> "1001268"  [label="DDG: data"];
"1001261" -> "1001283"  [label="DDG: data"];
"1001268" -> "1001267"  [label="AST: "];
"1001268" -> "1001269"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001271" -> "1001268"  [label="CFG: "];
"1001268" -> "1001320"  [label="DDG: asn1_free(data)"];
"1001268" -> "1001320"  [label="DDG: data"];
"1001283" -> "1001215"  [label="AST: "];
"1001283" -> "1001284"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001286" -> "1001283"  [label="CFG: "];
"1001283" -> "1001320"  [label="DDG: asn1_free(data)"];
"1001283" -> "1001320"  [label="DDG: data"];
"1001275" -> "1001272"  [label="AST: "];
"1001275" -> "1001280"  [label="CFG: "];
"1001276" -> "1001275"  [label="AST: "];
"1001277" -> "1001275"  [label="AST: "];
"1001280" -> "1001275"  [label="AST: "];
"1001272" -> "1001275"  [label="CFG: "];
"1001275" -> "1001320"  [label="DDG: data->length"];
"1001275" -> "1001320"  [label="DDG: data->data"];
"1001275" -> "1001320"  [label="DDG: mem_ctx"];
"1001275" -> "1001272"  [label="DDG: mem_ctx"];
"1001275" -> "1001272"  [label="DDG: data->data"];
"1001275" -> "1001272"  [label="DDG: data->length"];
"1000111" -> "1001275"  [label="DDG: mem_ctx"];
"1000106" -> "1001275"  [label="DDG: mem_ctx"];
"1001272" -> "1001215"  [label="AST: "];
"1001273" -> "1001272"  [label="AST: "];
"1001284" -> "1001272"  [label="CFG: "];
"1001272" -> "1001320"  [label="DDG: data_blob_talloc(mem_ctx, data->data, data->length)"];
"1001272" -> "1001320"  [label="DDG: *result"];
}
