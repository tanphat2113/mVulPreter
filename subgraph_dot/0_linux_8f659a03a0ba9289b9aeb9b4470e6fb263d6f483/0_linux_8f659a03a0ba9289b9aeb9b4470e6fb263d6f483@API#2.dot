digraph "0_linux_8f659a03a0ba9289b9aeb9b4470e6fb263d6f483@API" {
"1000278" [label="(Call,err = ip_cmsg_send(sk, msg, &ipc, false))"];
"1000280" [label="(Call,ip_cmsg_send(sk, msg, &ipc, false))"];
"1000120" [label="(Call,sock_net(sk))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000287" [label="(Call,unlikely(err))"];
"1000649" [label="(Call,err < 0)"];
"1000652" [label="(Return,return err;)"];
"1000285" [label="(Identifier,false)"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000561" [label="(Call,sock_tx_timestamp(sk, ipc.sockc.tsflags, &ipc.tx_flags))"];
"1000116" [label="(Identifier,sk)"];
"1000542" [label="(Call,err = raw_send_hdrinc(sk, &fl4, msg, len,\n \t\t\t\t      &rt, msg->msg_flags, &ipc.sockc))"];
"1000648" [label="(ControlStructure,if (err < 0))"];
"1000625" [label="(Call,err == -ENOBUFS)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000482" [label="(Call,err = raw_probe_proto_opt(&rfv, &fl4))"];
"1000277" [label="(Block,)"];
"1000283" [label="(Call,&ipc)"];
"1000650" [label="(Identifier,err)"];
"1000279" [label="(Identifier,err)"];
"1000455" [label="(Call,inet_sk_flowi_flags(sk))"];
"1000652" [label="(Return,return err;)"];
"1000655" [label="(Identifier,len)"];
"1000278" [label="(Call,err = ip_cmsg_send(sk, msg, &ipc, false))"];
"1000288" [label="(Identifier,err)"];
"1000120" [label="(Call,sock_net(sk))"];
"1000297" [label="(Identifier,ipc)"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000286" [label="(ControlStructure,if (unlikely(err)))"];
"1000356" [label="(Call,err = -EINVAL)"];
"1000649" [label="(Call,err < 0)"];
"1000588" [label="(Call,ip_append_data(sk, &fl4, raw_getfrag,\n\t\t\t\t     &rfv, len, 0,\n\t\t\t\t     &ipc, &rt, msg->msg_flags))"];
"1000686" [label="(MethodReturn,static int)"];
"1000118" [label="(Call,*net = sock_net(sk))"];
"1000113" [label="(Call,*inet = inet_sk(sk))"];
"1000651" [label="(Literal,0)"];
"1000213" [label="(Call,err = -EDESTADDRREQ)"];
"1000387" [label="(Call,get_rtconn_flags(&ipc, sk))"];
"1000528" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000516" [label="(Call,err = -EACCES)"];
"1000281" [label="(Identifier,sk)"];
"1000636" [label="(Call,release_sock(sk))"];
"1000282" [label="(Identifier,msg)"];
"1000492" [label="(Call,security_sk_classify_flow(sk, flowi4_to_flowi(&fl4)))"];
"1000287" [label="(Call,unlikely(err))"];
"1000499" [label="(Call,ip_route_output_flow(net, &fl4, sk))"];
"1000586" [label="(Call,err = ip_append_data(sk, &fl4, raw_getfrag,\n\t\t\t\t     &rfv, len, 0,\n\t\t\t\t     &ipc, &rt, msg->msg_flags))"];
"1000195" [label="(Call,err = -EAFNOSUPPORT)"];
"1000544" [label="(Call,raw_send_hdrinc(sk, &fl4, msg, len,\n \t\t\t\t      &rt, msg->msg_flags, &ipc.sockc))"];
"1000606" [label="(Call,ip_flush_pending_frames(sk))"];
"1000633" [label="(Call,err = 0)"];
"1000280" [label="(Call,ip_cmsg_send(sk, msg, &ipc, false))"];
"1000472" [label="(Call,rfv.msg = msg)"];
"1000682" [label="(Call,err = 0)"];
"1000584" [label="(Call,lock_sock(sk))"];
"1000508" [label="(Call,err = PTR_ERR(rt))"];
"1000139" [label="(Call,err = -EMSGSIZE)"];
"1000169" [label="(Call,err = -EINVAL)"];
"1000653" [label="(Identifier,err)"];
"1000619" [label="(Call,ip_push_pending_frames(sk, &fl4))"];
"1000153" [label="(Call,err = -EOPNOTSUPP)"];
"1000121" [label="(Identifier,sk)"];
"1000292" [label="(Identifier,ipc)"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000288" -> "1000278"  [label="CFG: "];
"1000278" -> "1000686"  [label="DDG: ip_cmsg_send(sk, msg, &ipc, false)"];
"1000280" -> "1000278"  [label="DDG: sk"];
"1000280" -> "1000278"  [label="DDG: msg"];
"1000280" -> "1000278"  [label="DDG: &ipc"];
"1000280" -> "1000278"  [label="DDG: false"];
"1000278" -> "1000287"  [label="DDG: err"];
"1000280" -> "1000285"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000283" -> "1000280"  [label="AST: "];
"1000285" -> "1000280"  [label="AST: "];
"1000280" -> "1000686"  [label="DDG: false"];
"1000280" -> "1000686"  [label="DDG: msg"];
"1000280" -> "1000686"  [label="DDG: sk"];
"1000280" -> "1000686"  [label="DDG: &ipc"];
"1000120" -> "1000280"  [label="DDG: sk"];
"1000108" -> "1000280"  [label="DDG: sk"];
"1000109" -> "1000280"  [label="DDG: msg"];
"1000280" -> "1000387"  [label="DDG: &ipc"];
"1000280" -> "1000387"  [label="DDG: sk"];
"1000280" -> "1000472"  [label="DDG: msg"];
"1000280" -> "1000544"  [label="DDG: msg"];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000686"  [label="DDG: sk"];
"1000120" -> "1000118"  [label="DDG: sk"];
"1000115" -> "1000120"  [label="DDG: sk"];
"1000108" -> "1000120"  [label="DDG: sk"];
"1000120" -> "1000387"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000113"  [label="DDG: sk"];
"1000108" -> "1000115"  [label="DDG: sk"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000686"  [label="DDG: sk"];
"1000108" -> "1000387"  [label="DDG: sk"];
"1000108" -> "1000455"  [label="DDG: sk"];
"1000108" -> "1000492"  [label="DDG: sk"];
"1000108" -> "1000499"  [label="DDG: sk"];
"1000108" -> "1000528"  [label="DDG: sk"];
"1000108" -> "1000544"  [label="DDG: sk"];
"1000108" -> "1000561"  [label="DDG: sk"];
"1000108" -> "1000584"  [label="DDG: sk"];
"1000108" -> "1000588"  [label="DDG: sk"];
"1000108" -> "1000606"  [label="DDG: sk"];
"1000108" -> "1000619"  [label="DDG: sk"];
"1000108" -> "1000636"  [label="DDG: sk"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000686"  [label="DDG: msg"];
"1000109" -> "1000472"  [label="DDG: msg"];
"1000109" -> "1000544"  [label="DDG: msg"];
"1000287" -> "1000286"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000292" -> "1000287"  [label="CFG: "];
"1000297" -> "1000287"  [label="CFG: "];
"1000287" -> "1000686"  [label="DDG: unlikely(err)"];
"1000287" -> "1000649"  [label="DDG: err"];
"1000649" -> "1000648"  [label="AST: "];
"1000649" -> "1000651"  [label="CFG: "];
"1000650" -> "1000649"  [label="AST: "];
"1000651" -> "1000649"  [label="AST: "];
"1000653" -> "1000649"  [label="CFG: "];
"1000655" -> "1000649"  [label="CFG: "];
"1000649" -> "1000686"  [label="DDG: err < 0"];
"1000649" -> "1000686"  [label="DDG: err"];
"1000508" -> "1000649"  [label="DDG: err"];
"1000625" -> "1000649"  [label="DDG: err"];
"1000139" -> "1000649"  [label="DDG: err"];
"1000586" -> "1000649"  [label="DDG: err"];
"1000542" -> "1000649"  [label="DDG: err"];
"1000153" -> "1000649"  [label="DDG: err"];
"1000169" -> "1000649"  [label="DDG: err"];
"1000516" -> "1000649"  [label="DDG: err"];
"1000682" -> "1000649"  [label="DDG: err"];
"1000356" -> "1000649"  [label="DDG: err"];
"1000482" -> "1000649"  [label="DDG: err"];
"1000213" -> "1000649"  [label="DDG: err"];
"1000195" -> "1000649"  [label="DDG: err"];
"1000633" -> "1000649"  [label="DDG: err"];
"1000649" -> "1000652"  [label="DDG: err"];
"1000652" -> "1000648"  [label="AST: "];
"1000652" -> "1000653"  [label="CFG: "];
"1000653" -> "1000652"  [label="AST: "];
"1000686" -> "1000652"  [label="CFG: "];
"1000652" -> "1000686"  [label="DDG: <RET>"];
"1000653" -> "1000652"  [label="DDG: err"];
}
