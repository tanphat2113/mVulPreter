digraph "0_openssl_e9bbefbf0f24c57645e7ad6a5a71ae649d18ac8e@pointer" {
"1001608" [label="(Call,s->state & SSL_ST_MASK)"];
"1000297" [label="(Call,s->state == SSL_ST_OK)"];
"1000247" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000242" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1001623" [label="(Call,s->state = SSL_ST_BEFORE | (s->server)\n                ? SSL_ST_ACCEPT : SSL_ST_CONNECT)"];
"1001608" [label="(Call,s->state & SSL_ST_MASK)"];
"1001607" [label="(Call,(s->state & SSL_ST_MASK) == SSL_ST_OK)"];
"1000296" [label="(Call,s->state == SSL_ST_OK && rr->length == 0)"];
"1000601" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000600" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000594" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000590" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n            rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1000606" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001606" [label="(Call,((s->state & SSL_ST_MASK) == SSL_ST_OK) &&\n            !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS))"];
"1001757" [label="(Call,s->state & SSL_ST_CONNECT)"];
"1001756" [label="(Call,(s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A))"];
"1001755" [label="(Call,((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             ))"];
"1001747" [label="(Call,(s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            ))"];
"1001741" [label="(Call,s->s3->in_read_app_data &&\n            (s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            ))"];
"1001763" [label="(Call,s->state >= SSL3_ST_CW_CLNT_HELLO_A)"];
"1001762" [label="(Call,(s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A))"];
"1001768" [label="(Call,s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001774" [label="(Call,s->state & SSL_ST_ACCEPT)"];
"1001773" [label="(Call,(s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A))"];
"1001780" [label="(Call,s->state <= SSL3_ST_SW_HELLO_REQ_A)"];
"1001779" [label="(Call,(s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A))"];
"1001785" [label="(Call,s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1000249" [label="(Identifier,s)"];
"1001782" [label="(Identifier,s)"];
"1000243" [label="(Call,s->state)"];
"1001757" [label="(Call,s->state & SSL_ST_CONNECT)"];
"1000298" [label="(Call,s->state)"];
"1000295" [label="(ControlStructure,if (s->state == SSL_ST_OK && rr->length == 0))"];
"1000595" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA)"];
"1001747" [label="(Call,(s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            ))"];
"1000590" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n            rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1001786" [label="(Call,s->state)"];
"1000363" [label="(Call,(rr->length == 0) || (s->rstate == SSL_ST_READ_BODY))"];
"1000304" [label="(Identifier,rr)"];
"1000958" [label="(Call,!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS) &&\n            !s->s3->renegotiate)"];
"1001785" [label="(Call,s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1001772" [label="(Identifier,SSL3_ST_CR_SRVR_HELLO_A)"];
"1001623" [label="(Call,s->state = SSL_ST_BEFORE | (s->server)\n                ? SSL_ST_ACCEPT : SSL_ST_CONNECT)"];
"1001625" [label="(Identifier,s)"];
"1000594" [label="(Call,rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK))"];
"1001780" [label="(Call,s->state <= SSL3_ST_SW_HELLO_REQ_A)"];
"1001769" [label="(Call,s->state)"];
"1000601" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000608" [label="(Identifier,s)"];
"1001784" [label="(Identifier,SSL3_ST_SW_HELLO_REQ_A)"];
"1000614" [label="(Identifier,s)"];
"1000591" [label="(Call,BIO_dgram_is_sctp(SSL_get_rbio(s)))"];
"1001778" [label="(Identifier,SSL_ST_ACCEPT)"];
"1000605" [label="(Identifier,DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000302" [label="(Call,rr->length == 0)"];
"1000359" [label="(Identifier,s)"];
"1001781" [label="(Call,s->state)"];
"1000297" [label="(Call,s->state == SSL_ST_OK)"];
"1001606" [label="(Call,((s->state & SSL_ST_MASK) == SSL_ST_OK) &&\n            !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS))"];
"1001608" [label="(Call,s->state & SSL_ST_MASK)"];
"1001775" [label="(Call,s->state)"];
"1001613" [label="(Identifier,SSL_ST_OK)"];
"1001776" [label="(Identifier,s)"];
"1001756" [label="(Call,(s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A))"];
"1001609" [label="(Call,s->state)"];
"1000246" [label="(Identifier,DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000607" [label="(Call,s->state)"];
"1001614" [label="(Call,!(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS))"];
"1000589" [label="(ControlStructure,if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n            rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)))"];
"1001755" [label="(Call,((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             ))"];
"1001758" [label="(Call,s->state)"];
"1001622" [label="(Block,)"];
"1001742" [label="(Call,s->s3->in_read_app_data)"];
"1001804" [label="(Identifier,al)"];
"1001794" [label="(Identifier,s)"];
"1001819" [label="(MethodReturn,int)"];
"1001768" [label="(Call,s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001637" [label="(Identifier,s)"];
"1001767" [label="(Identifier,SSL3_ST_CW_CLNT_HELLO_A)"];
"1000627" [label="(Identifier,s)"];
"1001624" [label="(Call,s->state)"];
"1000241" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n          || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000310" [label="(Identifier,item)"];
"1001605" [label="(ControlStructure,if (((s->state & SSL_ST_MASK) == SSL_ST_OK) &&\n            !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)))"];
"1001770" [label="(Identifier,s)"];
"1000252" [label="(Call,s->s3->in_read_app_data != 2)"];
"1001618" [label="(Identifier,s)"];
"1000296" [label="(Call,s->state == SSL_ST_OK && rr->length == 0)"];
"1000248" [label="(Call,s->state)"];
"1001627" [label="(Call,SSL_ST_BEFORE | (s->server)\n                ? SSL_ST_ACCEPT : SSL_ST_CONNECT)"];
"1001607" [label="(Call,(s->state & SSL_ST_MASK) == SSL_ST_OK)"];
"1001787" [label="(Identifier,s)"];
"1000247" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001773" [label="(Call,(s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A))"];
"1000600" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001764" [label="(Call,s->state)"];
"1001774" [label="(Call,s->state & SSL_ST_ACCEPT)"];
"1001761" [label="(Identifier,SSL_ST_CONNECT)"];
"1000242" [label="(Call,s->state == DTLS1_SCTP_ST_SR_READ_SOCK)"];
"1000602" [label="(Call,s->state)"];
"1001748" [label="(Call,s->s3->total_renegotiations != 0)"];
"1000251" [label="(Identifier,DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001740" [label="(ControlStructure,if (s->s3->in_read_app_data &&\n            (s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            )))"];
"1001765" [label="(Identifier,s)"];
"1001763" [label="(Call,s->state >= SSL3_ST_CW_CLNT_HELLO_A)"];
"1000301" [label="(Identifier,SSL_ST_OK)"];
"1001779" [label="(Call,(s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A))"];
"1000610" [label="(Identifier,DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001762" [label="(Call,(s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A))"];
"1001789" [label="(Identifier,SSL3_ST_SR_CLNT_HELLO_A)"];
"1001612" [label="(Identifier,SSL_ST_MASK)"];
"1001741" [label="(Call,s->s3->in_read_app_data &&\n            (s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            ))"];
"1000606" [label="(Call,s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1001646" [label="(Identifier,i)"];
"1001608" -> "1001607"  [label="AST: "];
"1001608" -> "1001612"  [label="CFG: "];
"1001609" -> "1001608"  [label="AST: "];
"1001612" -> "1001608"  [label="AST: "];
"1001613" -> "1001608"  [label="CFG: "];
"1001608" -> "1001819"  [label="DDG: SSL_ST_MASK"];
"1001608" -> "1001819"  [label="DDG: s->state"];
"1001608" -> "1000297"  [label="DDG: s->state"];
"1001608" -> "1001607"  [label="DDG: s->state"];
"1001608" -> "1001607"  [label="DDG: SSL_ST_MASK"];
"1000297" -> "1001608"  [label="DDG: s->state"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000301"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="AST: "];
"1000304" -> "1000297"  [label="CFG: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1001819"  [label="DDG: s->state"];
"1000297" -> "1001819"  [label="DDG: SSL_ST_OK"];
"1000297" -> "1000296"  [label="DDG: s->state"];
"1000297" -> "1000296"  [label="DDG: SSL_ST_OK"];
"1000247" -> "1000297"  [label="DDG: s->state"];
"1000242" -> "1000297"  [label="DDG: s->state"];
"1001623" -> "1000297"  [label="DDG: s->state"];
"1001607" -> "1000297"  [label="DDG: SSL_ST_OK"];
"1000297" -> "1000601"  [label="DDG: s->state"];
"1000297" -> "1001607"  [label="DDG: SSL_ST_OK"];
"1000297" -> "1001757"  [label="DDG: s->state"];
"1000247" -> "1000241"  [label="AST: "];
"1000247" -> "1000251"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000251" -> "1000247"  [label="AST: "];
"1000241" -> "1000247"  [label="CFG: "];
"1000247" -> "1001819"  [label="DDG: s->state"];
"1000247" -> "1001819"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000247" -> "1000241"  [label="DDG: s->state"];
"1000247" -> "1000241"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000242" -> "1000247"  [label="DDG: s->state"];
"1000247" -> "1000606"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000242" -> "1000241"  [label="AST: "];
"1000242" -> "1000246"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="CFG: "];
"1000241" -> "1000242"  [label="CFG: "];
"1000242" -> "1001819"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000242" -> "1001819"  [label="DDG: s->state"];
"1000242" -> "1000241"  [label="DDG: s->state"];
"1000242" -> "1000241"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000242" -> "1000601"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1001623" -> "1001622"  [label="AST: "];
"1001623" -> "1001627"  [label="CFG: "];
"1001624" -> "1001623"  [label="AST: "];
"1001627" -> "1001623"  [label="AST: "];
"1001637" -> "1001623"  [label="CFG: "];
"1001623" -> "1001819"  [label="DDG: s->state"];
"1001623" -> "1001819"  [label="DDG: SSL_ST_BEFORE | (s->server)\n                ? SSL_ST_ACCEPT : SSL_ST_CONNECT"];
"1001607" -> "1001606"  [label="AST: "];
"1001607" -> "1001613"  [label="CFG: "];
"1001613" -> "1001607"  [label="AST: "];
"1001618" -> "1001607"  [label="CFG: "];
"1001606" -> "1001607"  [label="CFG: "];
"1001607" -> "1001819"  [label="DDG: s->state & SSL_ST_MASK"];
"1001607" -> "1001819"  [label="DDG: SSL_ST_OK"];
"1001607" -> "1001606"  [label="DDG: s->state & SSL_ST_MASK"];
"1001607" -> "1001606"  [label="DDG: SSL_ST_OK"];
"1000296" -> "1000295"  [label="AST: "];
"1000296" -> "1000302"  [label="CFG: "];
"1000302" -> "1000296"  [label="AST: "];
"1000310" -> "1000296"  [label="CFG: "];
"1000359" -> "1000296"  [label="CFG: "];
"1000296" -> "1001819"  [label="DDG: s->state == SSL_ST_OK && rr->length == 0"];
"1000296" -> "1001819"  [label="DDG: s->state == SSL_ST_OK"];
"1000363" -> "1000296"  [label="DDG: rr->length == 0"];
"1000302" -> "1000296"  [label="DDG: rr->length"];
"1000302" -> "1000296"  [label="DDG: 0"];
"1000601" -> "1000600"  [label="AST: "];
"1000601" -> "1000605"  [label="CFG: "];
"1000602" -> "1000601"  [label="AST: "];
"1000605" -> "1000601"  [label="AST: "];
"1000608" -> "1000601"  [label="CFG: "];
"1000600" -> "1000601"  [label="CFG: "];
"1000601" -> "1001819"  [label="DDG: s->state"];
"1000601" -> "1001819"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000601" -> "1000600"  [label="DDG: s->state"];
"1000601" -> "1000600"  [label="DDG: DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000601" -> "1000606"  [label="DDG: s->state"];
"1000600" -> "1000594"  [label="AST: "];
"1000600" -> "1000606"  [label="CFG: "];
"1000606" -> "1000600"  [label="AST: "];
"1000594" -> "1000600"  [label="CFG: "];
"1000600" -> "1001819"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000600" -> "1001819"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000600" -> "1000594"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK"];
"1000600" -> "1000594"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000606" -> "1000600"  [label="DDG: s->state"];
"1000606" -> "1000600"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000241" -> "1000600"  [label="DDG: s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000594" -> "1000590"  [label="AST: "];
"1000594" -> "1000595"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000590" -> "1000594"  [label="CFG: "];
"1000594" -> "1001819"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000594" -> "1001819"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000594" -> "1000590"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA"];
"1000594" -> "1000590"  [label="DDG: s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK"];
"1000595" -> "1000594"  [label="DDG: rr->type"];
"1000595" -> "1000594"  [label="DDG: SSL3_RT_APPLICATION_DATA"];
"1000590" -> "1000589"  [label="AST: "];
"1000590" -> "1000591"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000614" -> "1000590"  [label="CFG: "];
"1000627" -> "1000590"  [label="CFG: "];
"1000590" -> "1001819"  [label="DDG: BIO_dgram_is_sctp(SSL_get_rbio(s)) &&\n            rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000590" -> "1001819"  [label="DDG: rr->type == SSL3_RT_APPLICATION_DATA &&\n            (s->state == DTLS1_SCTP_ST_SR_READ_SOCK\n             || s->state == DTLS1_SCTP_ST_CR_READ_SOCK)"];
"1000591" -> "1000590"  [label="DDG: SSL_get_rbio(s)"];
"1000606" -> "1000610"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000610" -> "1000606"  [label="AST: "];
"1000606" -> "1001819"  [label="DDG: s->state"];
"1000606" -> "1001819"  [label="DDG: DTLS1_SCTP_ST_CR_READ_SOCK"];
"1001606" -> "1001605"  [label="AST: "];
"1001606" -> "1001614"  [label="CFG: "];
"1001614" -> "1001606"  [label="AST: "];
"1001625" -> "1001606"  [label="CFG: "];
"1001646" -> "1001606"  [label="CFG: "];
"1001606" -> "1001819"  [label="DDG: (s->state & SSL_ST_MASK) == SSL_ST_OK"];
"1001606" -> "1001819"  [label="DDG: ((s->state & SSL_ST_MASK) == SSL_ST_OK) &&\n            !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)"];
"1001606" -> "1001819"  [label="DDG: !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)"];
"1001614" -> "1001606"  [label="DDG: s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS"];
"1000958" -> "1001606"  [label="DDG: !(s->s3->flags & SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS)"];
"1001757" -> "1001756"  [label="AST: "];
"1001757" -> "1001761"  [label="CFG: "];
"1001758" -> "1001757"  [label="AST: "];
"1001761" -> "1001757"  [label="AST: "];
"1001765" -> "1001757"  [label="CFG: "];
"1001756" -> "1001757"  [label="CFG: "];
"1001757" -> "1001819"  [label="DDG: s->state"];
"1001757" -> "1001819"  [label="DDG: SSL_ST_CONNECT"];
"1001757" -> "1001756"  [label="DDG: s->state"];
"1001757" -> "1001756"  [label="DDG: SSL_ST_CONNECT"];
"1001757" -> "1001763"  [label="DDG: s->state"];
"1001757" -> "1001774"  [label="DDG: s->state"];
"1001756" -> "1001755"  [label="AST: "];
"1001756" -> "1001762"  [label="CFG: "];
"1001762" -> "1001756"  [label="AST: "];
"1001776" -> "1001756"  [label="CFG: "];
"1001755" -> "1001756"  [label="CFG: "];
"1001756" -> "1001819"  [label="DDG: (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001756" -> "1001819"  [label="DDG: s->state & SSL_ST_CONNECT"];
"1001756" -> "1001755"  [label="DDG: s->state & SSL_ST_CONNECT"];
"1001756" -> "1001755"  [label="DDG: (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001762" -> "1001756"  [label="DDG: s->state >= SSL3_ST_CW_CLNT_HELLO_A"];
"1001762" -> "1001756"  [label="DDG: s->state <= SSL3_ST_CR_SRVR_HELLO_A"];
"1001755" -> "1001747"  [label="AST: "];
"1001755" -> "1001773"  [label="CFG: "];
"1001773" -> "1001755"  [label="AST: "];
"1001747" -> "1001755"  [label="CFG: "];
"1001755" -> "1001819"  [label="DDG: (s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001755" -> "1001819"  [label="DDG: (s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1001755" -> "1001747"  [label="DDG: (s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)"];
"1001755" -> "1001747"  [label="DDG: (s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1001773" -> "1001755"  [label="DDG: s->state & SSL_ST_ACCEPT"];
"1001773" -> "1001755"  [label="DDG: (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1001747" -> "1001741"  [label="AST: "];
"1001747" -> "1001748"  [label="CFG: "];
"1001748" -> "1001747"  [label="AST: "];
"1001741" -> "1001747"  [label="CFG: "];
"1001747" -> "1001819"  [label="DDG: ((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )"];
"1001747" -> "1001819"  [label="DDG: s->s3->total_renegotiations != 0"];
"1001747" -> "1001741"  [label="DDG: s->s3->total_renegotiations != 0"];
"1001747" -> "1001741"  [label="DDG: ((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )"];
"1001748" -> "1001747"  [label="DDG: s->s3->total_renegotiations"];
"1001748" -> "1001747"  [label="DDG: 0"];
"1001741" -> "1001740"  [label="AST: "];
"1001741" -> "1001742"  [label="CFG: "];
"1001742" -> "1001741"  [label="AST: "];
"1001794" -> "1001741"  [label="CFG: "];
"1001804" -> "1001741"  [label="CFG: "];
"1001741" -> "1001819"  [label="DDG: (s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            )"];
"1001741" -> "1001819"  [label="DDG: s->s3->in_read_app_data"];
"1001741" -> "1001819"  [label="DDG: s->s3->in_read_app_data &&\n            (s->s3->total_renegotiations != 0) &&\n            (((s->state & SSL_ST_CONNECT) &&\n              (s->state >= SSL3_ST_CW_CLNT_HELLO_A) &&\n              (s->state <= SSL3_ST_CR_SRVR_HELLO_A)\n             ) || ((s->state & SSL_ST_ACCEPT) &&\n                   (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)\n             )\n            )"];
"1000252" -> "1001741"  [label="DDG: s->s3->in_read_app_data"];
"1001763" -> "1001762"  [label="AST: "];
"1001763" -> "1001767"  [label="CFG: "];
"1001764" -> "1001763"  [label="AST: "];
"1001767" -> "1001763"  [label="AST: "];
"1001770" -> "1001763"  [label="CFG: "];
"1001762" -> "1001763"  [label="CFG: "];
"1001763" -> "1001819"  [label="DDG: s->state"];
"1001763" -> "1001819"  [label="DDG: SSL3_ST_CW_CLNT_HELLO_A"];
"1001763" -> "1001762"  [label="DDG: s->state"];
"1001763" -> "1001762"  [label="DDG: SSL3_ST_CW_CLNT_HELLO_A"];
"1001763" -> "1001768"  [label="DDG: s->state"];
"1001763" -> "1001774"  [label="DDG: s->state"];
"1001762" -> "1001768"  [label="CFG: "];
"1001768" -> "1001762"  [label="AST: "];
"1001762" -> "1001819"  [label="DDG: s->state >= SSL3_ST_CW_CLNT_HELLO_A"];
"1001762" -> "1001819"  [label="DDG: s->state <= SSL3_ST_CR_SRVR_HELLO_A"];
"1001768" -> "1001762"  [label="DDG: s->state"];
"1001768" -> "1001762"  [label="DDG: SSL3_ST_CR_SRVR_HELLO_A"];
"1001768" -> "1001772"  [label="CFG: "];
"1001769" -> "1001768"  [label="AST: "];
"1001772" -> "1001768"  [label="AST: "];
"1001768" -> "1001819"  [label="DDG: s->state"];
"1001768" -> "1001819"  [label="DDG: SSL3_ST_CR_SRVR_HELLO_A"];
"1001768" -> "1001774"  [label="DDG: s->state"];
"1001774" -> "1001773"  [label="AST: "];
"1001774" -> "1001778"  [label="CFG: "];
"1001775" -> "1001774"  [label="AST: "];
"1001778" -> "1001774"  [label="AST: "];
"1001782" -> "1001774"  [label="CFG: "];
"1001773" -> "1001774"  [label="CFG: "];
"1001774" -> "1001819"  [label="DDG: SSL_ST_ACCEPT"];
"1001774" -> "1001819"  [label="DDG: s->state"];
"1001774" -> "1001773"  [label="DDG: s->state"];
"1001774" -> "1001773"  [label="DDG: SSL_ST_ACCEPT"];
"1001774" -> "1001780"  [label="DDG: s->state"];
"1001773" -> "1001779"  [label="CFG: "];
"1001779" -> "1001773"  [label="AST: "];
"1001773" -> "1001819"  [label="DDG: (s->state <= SSL3_ST_SW_HELLO_REQ_A) &&\n                   (s->state >= SSL3_ST_SR_CLNT_HELLO_A)"];
"1001773" -> "1001819"  [label="DDG: s->state & SSL_ST_ACCEPT"];
"1001779" -> "1001773"  [label="DDG: s->state <= SSL3_ST_SW_HELLO_REQ_A"];
"1001779" -> "1001773"  [label="DDG: s->state >= SSL3_ST_SR_CLNT_HELLO_A"];
"1001780" -> "1001779"  [label="AST: "];
"1001780" -> "1001784"  [label="CFG: "];
"1001781" -> "1001780"  [label="AST: "];
"1001784" -> "1001780"  [label="AST: "];
"1001787" -> "1001780"  [label="CFG: "];
"1001779" -> "1001780"  [label="CFG: "];
"1001780" -> "1001819"  [label="DDG: s->state"];
"1001780" -> "1001819"  [label="DDG: SSL3_ST_SW_HELLO_REQ_A"];
"1001780" -> "1001779"  [label="DDG: s->state"];
"1001780" -> "1001779"  [label="DDG: SSL3_ST_SW_HELLO_REQ_A"];
"1001780" -> "1001785"  [label="DDG: s->state"];
"1001779" -> "1001785"  [label="CFG: "];
"1001785" -> "1001779"  [label="AST: "];
"1001779" -> "1001819"  [label="DDG: s->state <= SSL3_ST_SW_HELLO_REQ_A"];
"1001779" -> "1001819"  [label="DDG: s->state >= SSL3_ST_SR_CLNT_HELLO_A"];
"1001785" -> "1001779"  [label="DDG: s->state"];
"1001785" -> "1001779"  [label="DDG: SSL3_ST_SR_CLNT_HELLO_A"];
"1001785" -> "1001789"  [label="CFG: "];
"1001786" -> "1001785"  [label="AST: "];
"1001789" -> "1001785"  [label="AST: "];
"1001785" -> "1001819"  [label="DDG: s->state"];
"1001785" -> "1001819"  [label="DDG: SSL3_ST_SR_CLNT_HELLO_A"];
}
