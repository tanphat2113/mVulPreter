digraph "0_wireshark_9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4@API" {
"1000718" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0)"];
"1000719" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN))"];
"1000578" [label="(Call,data[offset] == 56)"];
"1000567" [label="(Call,data[offset] == 55)"];
"1000556" [label="(Call,data[offset] == 48)"];
"1000589" [label="(Call,data[offset] == 101)"];
"1000148" [label="(MethodParameterIn,const guint8 *data)"];
"1000628" [label="(Call,offset_fte == 0)"];
"1000488" [label="(Call,offset_fte = 0)"];
"1000573" [label="(Call,offset_fte = offset)"];
"1000549" [label="(Call,offset < (tot_len - 2))"];
"1000613" [label="(Call,offset += data[offset + 1] + 2)"];
"1000545" [label="(Call,offset+=5)"];
"1000526" [label="(Call,offset++)"];
"1000503" [label="(Call,offset+=10)"];
"1000174" [label="(Call,offset = mac_header_len)"];
"1000149" [label="(MethodParameterIn,const guint mac_header_len)"];
"1000551" [label="(Call,tot_len - 2)"];
"1000599" [label="(Call,tot_len < offset + data[offset + 1] + 2)"];
"1000150" [label="(MethodParameterIn,const guint tot_len)"];
"1000574" [label="(Identifier,offset_fte)"];
"1000527" [label="(Identifier,offset)"];
"1000182" [label="(Identifier,data)"];
"1000575" [label="(Identifier,offset)"];
"1000734" [label="(Identifier,AIRPDCAP_RET_SUCCESS_HANDSHAKE)"];
"1000221" [label="(Call,data+offset+2)"];
"1000568" [label="(Call,data[offset])"];
"1000556" [label="(Call,data[offset] == 48)"];
"1000598" [label="(ControlStructure,if (tot_len < offset + data[offset + 1] + 2))"];
"1000478" [label="(Block,)"];
"1000204" [label="(Call,data[offset+1]!=3)"];
"1000599" [label="(Call,tot_len < offset + data[offset + 1] + 2)"];
"1000463" [label="(Call,tot_len-offset+1)"];
"1000555" [label="(ControlStructure,if (data[offset] == 48))"];
"1000545" [label="(Call,offset+=5)"];
"1000175" [label="(Identifier,offset)"];
"1000571" [label="(Literal,55)"];
"1000488" [label="(Call,offset_fte = 0)"];
"1000588" [label="(ControlStructure,if (data[offset] == 101))"];
"1000612" [label="(Identifier,AIRPDCAP_RET_NO_VALID_HANDSHAKE)"];
"1000585" [label="(Identifier,offset_timeout)"];
"1000504" [label="(Identifier,offset)"];
"1000596" [label="(Identifier,offset_link)"];
"1000584" [label="(Call,offset_timeout = offset)"];
"1000784" [label="(MethodReturn,static INT)"];
"1000613" [label="(Call,offset += data[offset + 1] + 2)"];
"1000625" [label="(Identifier,offset_rsne)"];
"1000507" [label="(Identifier,action)"];
"1000382" [label="(Call,(const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))"];
"1000148" [label="(MethodParameterIn,const guint8 *data)"];
"1000554" [label="(Block,)"];
"1000739" [label="(Identifier,tmp_sa)"];
"1000577" [label="(ControlStructure,if (data[offset] == 56))"];
"1000549" [label="(Call,offset < (tot_len - 2))"];
"1000606" [label="(Call,offset + 1)"];
"1000629" [label="(Identifier,offset_fte)"];
"1000569" [label="(Identifier,data)"];
"1000200" [label="(Call,offset+=8)"];
"1000505" [label="(Literal,10)"];
"1000150" [label="(MethodParameterIn,const guint tot_len)"];
"1000189" [label="(Call,data+offset)"];
"1000229" [label="(Call,tot_len-offset-4)"];
"1000591" [label="(Identifier,data)"];
"1000546" [label="(Identifier,offset)"];
"1000725" [label="(Call,data + offset_fte + 52)"];
"1000628" [label="(Call,offset_fte == 0)"];
"1000727" [label="(Call,offset_fte + 52)"];
"1000253" [label="(Call,data+offset)"];
"1000600" [label="(Identifier,tot_len)"];
"1000718" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0)"];
"1000582" [label="(Literal,56)"];
"1000552" [label="(Identifier,tot_len)"];
"1000730" [label="(Identifier,AIRPDCAP_WPA_NONCE_LEN)"];
"1000615" [label="(Call,data[offset + 1] + 2)"];
"1000627" [label="(Call,offset_fte == 0 ||\n            offset_timeout == 0 || offset_link == 0)"];
"1000493" [label="(Identifier,offset_link)"];
"1000506" [label="(Call,action = data[offset])"];
"1000551" [label="(Call,tot_len - 2)"];
"1000580" [label="(Identifier,data)"];
"1000562" [label="(Call,offset_rsne = offset)"];
"1000603" [label="(Call,data[offset + 1] + 2)"];
"1000220" [label="(Call,pntoh16(data+offset+2))"];
"1000566" [label="(ControlStructure,if (data[offset] == 55))"];
"1000578" [label="(Call,data[offset] == 56)"];
"1000589" [label="(Call,data[offset] == 101)"];
"1000188" [label="(Call,memcmp(data+offset, bt_dot1x_header, 8))"];
"1000176" [label="(Identifier,mac_header_len)"];
"1000547" [label="(Literal,5)"];
"1000180" [label="(Call,memcmp(data+offset, dot1x_header, 8))"];
"1000601" [label="(Call,offset + data[offset + 1] + 2)"];
"1000630" [label="(Literal,0)"];
"1000331" [label="(Call,AIRPDCAP_EAP_ACK(data[offset+1]))"];
"1000346" [label="(Call,AIRPDCAP_EAP_SEC(data[offset]))"];
"1000548" [label="(ControlStructure,while(offset < (tot_len - 2)))"];
"1000526" [label="(Call,offset++)"];
"1000558" [label="(Identifier,data)"];
"1000618" [label="(Call,offset + 1)"];
"1000503" [label="(Call,offset+=10)"];
"1000550" [label="(Identifier,offset)"];
"1000471" [label="(Call,memcmp(data+offset, tdls_header, 10))"];
"1000595" [label="(Call,offset_link = offset)"];
"1000633" [label="(Identifier,offset_timeout)"];
"1000731" [label="(Literal,0)"];
"1000181" [label="(Call,data+offset)"];
"1000251" [label="(Call,(const EAPOL_RSN_KEY *) (data+offset))"];
"1000573" [label="(Call,offset_fte = offset)"];
"1000490" [label="(Literal,0)"];
"1000567" [label="(Call,data[offset] == 55)"];
"1000553" [label="(Literal,2)"];
"1000530" [label="(Call,pntoh16(data+offset))"];
"1000307" [label="(Call,mac_header_len + GROUP_KEY_PAYLOAD_LEN_MIN > tot_len)"];
"1000760" [label="(Call,AirPDcapTDLSDeriveKey(sa, data, offset_rsne, offset_fte, offset_timeout, offset_link, action))"];
"1000560" [label="(Literal,48)"];
"1000529" [label="(Identifier,status)"];
"1000149" [label="(MethodParameterIn,const guint mac_header_len)"];
"1000579" [label="(Call,data[offset])"];
"1000717" [label="(ControlStructure,if (memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0))"];
"1000322" [label="(Call,AIRPDCAP_EAP_KEY(data[offset+1]))"];
"1000152" [label="(Block,)"];
"1000174" [label="(Call,offset = mac_header_len)"];
"1000614" [label="(Identifier,offset)"];
"1000308" [label="(Call,mac_header_len + GROUP_KEY_PAYLOAD_LEN_MIN)"];
"1000472" [label="(Call,data+offset)"];
"1000720" [label="(Call,sa->wpa.nonce)"];
"1000557" [label="(Call,data[offset])"];
"1000340" [label="(Call,AIRPDCAP_EAP_MIC(data[offset]))"];
"1000531" [label="(Call,data+offset)"];
"1000593" [label="(Literal,101)"];
"1000590" [label="(Call,data[offset])"];
"1000563" [label="(Identifier,offset_rsne)"];
"1000719" [label="(Call,memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN))"];
"1000297" [label="(Call,AirPDcapRsna4WHandshake(ctx, data, sa, offset, tot_len))"];
"1000489" [label="(Identifier,offset_fte)"];
"1000572" [label="(Block,)"];
"1000718" -> "1000717"  [label="AST: "];
"1000718" -> "1000731"  [label="CFG: "];
"1000719" -> "1000718"  [label="AST: "];
"1000731" -> "1000718"  [label="AST: "];
"1000734" -> "1000718"  [label="CFG: "];
"1000739" -> "1000718"  [label="CFG: "];
"1000718" -> "1000784"  [label="DDG: memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN)"];
"1000718" -> "1000784"  [label="DDG: memcmp(sa->wpa.nonce, data + offset_fte + 52, AIRPDCAP_WPA_NONCE_LEN) == 0"];
"1000719" -> "1000718"  [label="DDG: sa->wpa.nonce"];
"1000719" -> "1000718"  [label="DDG: data + offset_fte + 52"];
"1000719" -> "1000718"  [label="DDG: AIRPDCAP_WPA_NONCE_LEN"];
"1000719" -> "1000730"  [label="CFG: "];
"1000720" -> "1000719"  [label="AST: "];
"1000725" -> "1000719"  [label="AST: "];
"1000730" -> "1000719"  [label="AST: "];
"1000731" -> "1000719"  [label="CFG: "];
"1000719" -> "1000784"  [label="DDG: AIRPDCAP_WPA_NONCE_LEN"];
"1000719" -> "1000784"  [label="DDG: sa->wpa.nonce"];
"1000719" -> "1000784"  [label="DDG: data + offset_fte + 52"];
"1000578" -> "1000719"  [label="DDG: data[offset]"];
"1000567" -> "1000719"  [label="DDG: data[offset]"];
"1000589" -> "1000719"  [label="DDG: data[offset]"];
"1000556" -> "1000719"  [label="DDG: data[offset]"];
"1000148" -> "1000719"  [label="DDG: data"];
"1000628" -> "1000719"  [label="DDG: offset_fte"];
"1000488" -> "1000719"  [label="DDG: offset_fte"];
"1000573" -> "1000719"  [label="DDG: offset_fte"];
"1000578" -> "1000577"  [label="AST: "];
"1000578" -> "1000582"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000582" -> "1000578"  [label="AST: "];
"1000585" -> "1000578"  [label="CFG: "];
"1000591" -> "1000578"  [label="CFG: "];
"1000578" -> "1000784"  [label="DDG: data[offset]"];
"1000578" -> "1000784"  [label="DDG: data[offset] == 56"];
"1000578" -> "1000556"  [label="DDG: data[offset]"];
"1000567" -> "1000578"  [label="DDG: data[offset]"];
"1000148" -> "1000578"  [label="DDG: data"];
"1000578" -> "1000589"  [label="DDG: data[offset]"];
"1000578" -> "1000725"  [label="DDG: data[offset]"];
"1000578" -> "1000760"  [label="DDG: data[offset]"];
"1000567" -> "1000566"  [label="AST: "];
"1000567" -> "1000571"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000571" -> "1000567"  [label="AST: "];
"1000574" -> "1000567"  [label="CFG: "];
"1000580" -> "1000567"  [label="CFG: "];
"1000567" -> "1000784"  [label="DDG: data[offset]"];
"1000567" -> "1000784"  [label="DDG: data[offset] == 55"];
"1000567" -> "1000556"  [label="DDG: data[offset]"];
"1000556" -> "1000567"  [label="DDG: data[offset]"];
"1000148" -> "1000567"  [label="DDG: data"];
"1000567" -> "1000725"  [label="DDG: data[offset]"];
"1000567" -> "1000760"  [label="DDG: data[offset]"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000560"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000560" -> "1000556"  [label="AST: "];
"1000563" -> "1000556"  [label="CFG: "];
"1000569" -> "1000556"  [label="CFG: "];
"1000556" -> "1000784"  [label="DDG: data[offset]"];
"1000556" -> "1000784"  [label="DDG: data[offset] == 48"];
"1000589" -> "1000556"  [label="DDG: data[offset]"];
"1000148" -> "1000556"  [label="DDG: data"];
"1000556" -> "1000725"  [label="DDG: data[offset]"];
"1000556" -> "1000760"  [label="DDG: data[offset]"];
"1000589" -> "1000588"  [label="AST: "];
"1000589" -> "1000593"  [label="CFG: "];
"1000590" -> "1000589"  [label="AST: "];
"1000593" -> "1000589"  [label="AST: "];
"1000596" -> "1000589"  [label="CFG: "];
"1000600" -> "1000589"  [label="CFG: "];
"1000589" -> "1000784"  [label="DDG: data[offset] == 101"];
"1000589" -> "1000784"  [label="DDG: data[offset]"];
"1000148" -> "1000589"  [label="DDG: data"];
"1000589" -> "1000725"  [label="DDG: data[offset]"];
"1000589" -> "1000760"  [label="DDG: data[offset]"];
"1000148" -> "1000146"  [label="AST: "];
"1000148" -> "1000784"  [label="DDG: data"];
"1000148" -> "1000180"  [label="DDG: data"];
"1000148" -> "1000181"  [label="DDG: data"];
"1000148" -> "1000188"  [label="DDG: data"];
"1000148" -> "1000189"  [label="DDG: data"];
"1000148" -> "1000204"  [label="DDG: data"];
"1000148" -> "1000220"  [label="DDG: data"];
"1000148" -> "1000221"  [label="DDG: data"];
"1000148" -> "1000251"  [label="DDG: data"];
"1000148" -> "1000253"  [label="DDG: data"];
"1000148" -> "1000297"  [label="DDG: data"];
"1000148" -> "1000322"  [label="DDG: data"];
"1000148" -> "1000331"  [label="DDG: data"];
"1000148" -> "1000340"  [label="DDG: data"];
"1000148" -> "1000346"  [label="DDG: data"];
"1000148" -> "1000382"  [label="DDG: data"];
"1000148" -> "1000471"  [label="DDG: data"];
"1000148" -> "1000472"  [label="DDG: data"];
"1000148" -> "1000506"  [label="DDG: data"];
"1000148" -> "1000530"  [label="DDG: data"];
"1000148" -> "1000531"  [label="DDG: data"];
"1000148" -> "1000599"  [label="DDG: data"];
"1000148" -> "1000601"  [label="DDG: data"];
"1000148" -> "1000603"  [label="DDG: data"];
"1000148" -> "1000613"  [label="DDG: data"];
"1000148" -> "1000615"  [label="DDG: data"];
"1000148" -> "1000725"  [label="DDG: data"];
"1000148" -> "1000760"  [label="DDG: data"];
"1000628" -> "1000627"  [label="AST: "];
"1000628" -> "1000630"  [label="CFG: "];
"1000629" -> "1000628"  [label="AST: "];
"1000630" -> "1000628"  [label="AST: "];
"1000633" -> "1000628"  [label="CFG: "];
"1000627" -> "1000628"  [label="CFG: "];
"1000628" -> "1000784"  [label="DDG: offset_fte"];
"1000628" -> "1000627"  [label="DDG: offset_fte"];
"1000628" -> "1000627"  [label="DDG: 0"];
"1000488" -> "1000628"  [label="DDG: offset_fte"];
"1000573" -> "1000628"  [label="DDG: offset_fte"];
"1000628" -> "1000725"  [label="DDG: offset_fte"];
"1000628" -> "1000727"  [label="DDG: offset_fte"];
"1000628" -> "1000760"  [label="DDG: offset_fte"];
"1000488" -> "1000478"  [label="AST: "];
"1000488" -> "1000490"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000490" -> "1000488"  [label="AST: "];
"1000493" -> "1000488"  [label="CFG: "];
"1000488" -> "1000784"  [label="DDG: offset_fte"];
"1000488" -> "1000725"  [label="DDG: offset_fte"];
"1000488" -> "1000727"  [label="DDG: offset_fte"];
"1000488" -> "1000760"  [label="DDG: offset_fte"];
"1000573" -> "1000572"  [label="AST: "];
"1000573" -> "1000575"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000575" -> "1000573"  [label="AST: "];
"1000600" -> "1000573"  [label="CFG: "];
"1000573" -> "1000784"  [label="DDG: offset_fte"];
"1000549" -> "1000573"  [label="DDG: offset"];
"1000573" -> "1000725"  [label="DDG: offset_fte"];
"1000573" -> "1000727"  [label="DDG: offset_fte"];
"1000573" -> "1000760"  [label="DDG: offset_fte"];
"1000549" -> "1000548"  [label="AST: "];
"1000549" -> "1000551"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000551" -> "1000549"  [label="AST: "];
"1000558" -> "1000549"  [label="CFG: "];
"1000625" -> "1000549"  [label="CFG: "];
"1000549" -> "1000784"  [label="DDG: offset"];
"1000549" -> "1000784"  [label="DDG: tot_len - 2"];
"1000549" -> "1000784"  [label="DDG: offset < (tot_len - 2)"];
"1000613" -> "1000549"  [label="DDG: offset"];
"1000545" -> "1000549"  [label="DDG: offset"];
"1000551" -> "1000549"  [label="DDG: tot_len"];
"1000551" -> "1000549"  [label="DDG: 2"];
"1000549" -> "1000562"  [label="DDG: offset"];
"1000549" -> "1000584"  [label="DDG: offset"];
"1000549" -> "1000595"  [label="DDG: offset"];
"1000549" -> "1000599"  [label="DDG: offset"];
"1000549" -> "1000601"  [label="DDG: offset"];
"1000549" -> "1000606"  [label="DDG: offset"];
"1000549" -> "1000613"  [label="DDG: offset"];
"1000549" -> "1000618"  [label="DDG: offset"];
"1000613" -> "1000554"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000615" -> "1000613"  [label="AST: "];
"1000550" -> "1000613"  [label="CFG: "];
"1000613" -> "1000784"  [label="DDG: data[offset + 1] + 2"];
"1000545" -> "1000478"  [label="AST: "];
"1000545" -> "1000547"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000547" -> "1000545"  [label="AST: "];
"1000550" -> "1000545"  [label="CFG: "];
"1000526" -> "1000545"  [label="DDG: offset"];
"1000526" -> "1000478"  [label="AST: "];
"1000526" -> "1000527"  [label="CFG: "];
"1000527" -> "1000526"  [label="AST: "];
"1000529" -> "1000526"  [label="CFG: "];
"1000503" -> "1000526"  [label="DDG: offset"];
"1000526" -> "1000530"  [label="DDG: offset"];
"1000526" -> "1000531"  [label="DDG: offset"];
"1000503" -> "1000478"  [label="AST: "];
"1000503" -> "1000505"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000505" -> "1000503"  [label="AST: "];
"1000507" -> "1000503"  [label="CFG: "];
"1000503" -> "1000784"  [label="DDG: offset"];
"1000174" -> "1000503"  [label="DDG: offset"];
"1000174" -> "1000152"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000182" -> "1000174"  [label="CFG: "];
"1000174" -> "1000784"  [label="DDG: mac_header_len"];
"1000149" -> "1000174"  [label="DDG: mac_header_len"];
"1000174" -> "1000180"  [label="DDG: offset"];
"1000174" -> "1000181"  [label="DDG: offset"];
"1000174" -> "1000188"  [label="DDG: offset"];
"1000174" -> "1000189"  [label="DDG: offset"];
"1000174" -> "1000200"  [label="DDG: offset"];
"1000174" -> "1000471"  [label="DDG: offset"];
"1000174" -> "1000472"  [label="DDG: offset"];
"1000149" -> "1000146"  [label="AST: "];
"1000149" -> "1000784"  [label="DDG: mac_header_len"];
"1000149" -> "1000307"  [label="DDG: mac_header_len"];
"1000149" -> "1000308"  [label="DDG: mac_header_len"];
"1000551" -> "1000553"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000553" -> "1000551"  [label="AST: "];
"1000551" -> "1000784"  [label="DDG: tot_len"];
"1000599" -> "1000551"  [label="DDG: tot_len"];
"1000150" -> "1000551"  [label="DDG: tot_len"];
"1000551" -> "1000599"  [label="DDG: tot_len"];
"1000599" -> "1000598"  [label="AST: "];
"1000599" -> "1000601"  [label="CFG: "];
"1000600" -> "1000599"  [label="AST: "];
"1000601" -> "1000599"  [label="AST: "];
"1000612" -> "1000599"  [label="CFG: "];
"1000614" -> "1000599"  [label="CFG: "];
"1000599" -> "1000784"  [label="DDG: tot_len < offset + data[offset + 1] + 2"];
"1000599" -> "1000784"  [label="DDG: tot_len"];
"1000599" -> "1000784"  [label="DDG: offset + data[offset + 1] + 2"];
"1000150" -> "1000599"  [label="DDG: tot_len"];
"1000150" -> "1000146"  [label="AST: "];
"1000150" -> "1000784"  [label="DDG: tot_len"];
"1000150" -> "1000229"  [label="DDG: tot_len"];
"1000150" -> "1000297"  [label="DDG: tot_len"];
"1000150" -> "1000307"  [label="DDG: tot_len"];
"1000150" -> "1000463"  [label="DDG: tot_len"];
}
