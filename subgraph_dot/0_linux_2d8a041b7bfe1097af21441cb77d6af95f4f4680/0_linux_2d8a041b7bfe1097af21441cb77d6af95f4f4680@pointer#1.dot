digraph "0_linux_2d8a041b7bfe1097af21441cb77d6af95f4f4680@pointer" {
"1000446" [label="(Call,svc = __ip_vs_svc_fwm_find(net, AF_INET, entry->fwmark))"];
"1000448" [label="(Call,__ip_vs_svc_fwm_find(net, AF_INET, entry->fwmark))"];
"1000124" [label="(Call,!net)"];
"1000121" [label="(Call,net_ipvs(net))"];
"1000114" [label="(Call,*net = sock_net(sk))"];
"1000116" [label="(Call,sock_net(sk))"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000471" [label="(Call,ip_vs_copy_service(entry, svc))"];
"1000476" [label="(Call,copy_to_user(user, entry, sizeof(*entry)))"];
"1000475" [label="(Call,copy_to_user(user, entry, sizeof(*entry)) != 0)"];
"1000121" [label="(Call,net_ipvs(net))"];
"1000479" [label="(Call,sizeof(*entry))"];
"1000477" [label="(Identifier,user)"];
"1000449" [label="(Identifier,net)"];
"1000104" [label="(MethodParameterIn,void __user *user)"];
"1000492" [label="(ControlStructure,break;)"];
"1000451" [label="(Call,entry->fwmark)"];
"1000476" [label="(Call,copy_to_user(user, entry, sizeof(*entry)))"];
"1000478" [label="(Identifier,entry)"];
"1000124" [label="(Call,!net)"];
"1000179" [label="(Call,copy_from_user(arg, user, copylen))"];
"1000430" [label="(Call,entry = (struct ip_vs_service_entry *)arg)"];
"1000450" [label="(Identifier,AF_INET)"];
"1000473" [label="(Identifier,svc)"];
"1000442" [label="(ControlStructure,if (entry->fwmark))"];
"1000114" [label="(Call,*net = sock_net(sk))"];
"1000106" [label="(Block,)"];
"1000115" [label="(Identifier,net)"];
"1000122" [label="(Identifier,net)"];
"1000532" [label="(Call,__ip_vs_get_dest_entries(net, get, user))"];
"1000116" [label="(Call,sock_net(sk))"];
"1000474" [label="(ControlStructure,if (copy_to_user(user, entry, sizeof(*entry)) != 0))"];
"1000469" [label="(Identifier,svc)"];
"1000575" [label="(MethodReturn,RET)"];
"1000546" [label="(Call,__ip_vs_get_timeouts(net, &t))"];
"1000420" [label="(Call,__ip_vs_get_service_entries(net, get, user))"];
"1000455" [label="(Call,svc = __ip_vs_service_find(net, AF_INET,\n\t\t\t\t\t\t   entry->protocol, &addr,\n\t\t\t\t\t\t   entry->port))"];
"1000482" [label="(Literal,0)"];
"1000457" [label="(Call,__ip_vs_service_find(net, AF_INET,\n\t\t\t\t\t\t   entry->protocol, &addr,\n\t\t\t\t\t\t   entry->port))"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000472" [label="(Identifier,entry)"];
"1000448" [label="(Call,__ip_vs_svc_fwm_find(net, AF_INET, entry->fwmark))"];
"1000470" [label="(Block,)"];
"1000119" [label="(Call,*ipvs = net_ipvs(net))"];
"1000471" [label="(Call,ip_vs_copy_service(entry, svc))"];
"1000120" [label="(Identifier,ipvs)"];
"1000117" [label="(Identifier,sk)"];
"1000123" [label="(Call,BUG_ON(!net))"];
"1000447" [label="(Identifier,svc)"];
"1000484" [label="(Identifier,ret)"];
"1000446" [label="(Call,svc = __ip_vs_svc_fwm_find(net, AF_INET, entry->fwmark))"];
"1000125" [label="(Identifier,net)"];
"1000475" [label="(Call,copy_to_user(user, entry, sizeof(*entry)) != 0)"];
"1000446" -> "1000442"  [label="AST: "];
"1000446" -> "1000448"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000448" -> "1000446"  [label="AST: "];
"1000469" -> "1000446"  [label="CFG: "];
"1000446" -> "1000575"  [label="DDG: svc"];
"1000446" -> "1000575"  [label="DDG: __ip_vs_svc_fwm_find(net, AF_INET, entry->fwmark)"];
"1000448" -> "1000446"  [label="DDG: net"];
"1000448" -> "1000446"  [label="DDG: AF_INET"];
"1000448" -> "1000446"  [label="DDG: entry->fwmark"];
"1000446" -> "1000471"  [label="DDG: svc"];
"1000448" -> "1000451"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000450" -> "1000448"  [label="AST: "];
"1000451" -> "1000448"  [label="AST: "];
"1000448" -> "1000575"  [label="DDG: AF_INET"];
"1000448" -> "1000575"  [label="DDG: net"];
"1000448" -> "1000575"  [label="DDG: entry->fwmark"];
"1000124" -> "1000448"  [label="DDG: net"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000575"  [label="DDG: net"];
"1000124" -> "1000123"  [label="DDG: net"];
"1000121" -> "1000124"  [label="DDG: net"];
"1000124" -> "1000420"  [label="DDG: net"];
"1000124" -> "1000457"  [label="DDG: net"];
"1000124" -> "1000532"  [label="DDG: net"];
"1000124" -> "1000546"  [label="DDG: net"];
"1000121" -> "1000119"  [label="AST: "];
"1000121" -> "1000122"  [label="CFG: "];
"1000122" -> "1000121"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000121" -> "1000119"  [label="DDG: net"];
"1000114" -> "1000121"  [label="DDG: net"];
"1000114" -> "1000106"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000114" -> "1000575"  [label="DDG: sock_net(sk)"];
"1000116" -> "1000114"  [label="DDG: sk"];
"1000116" -> "1000117"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000116" -> "1000575"  [label="DDG: sk"];
"1000102" -> "1000116"  [label="DDG: sk"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000575"  [label="DDG: sk"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000473"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000473" -> "1000471"  [label="AST: "];
"1000477" -> "1000471"  [label="CFG: "];
"1000471" -> "1000575"  [label="DDG: svc"];
"1000471" -> "1000575"  [label="DDG: ip_vs_copy_service(entry, svc)"];
"1000430" -> "1000471"  [label="DDG: entry"];
"1000455" -> "1000471"  [label="DDG: svc"];
"1000471" -> "1000476"  [label="DDG: entry"];
"1000476" -> "1000475"  [label="AST: "];
"1000476" -> "1000479"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000478" -> "1000476"  [label="AST: "];
"1000479" -> "1000476"  [label="AST: "];
"1000482" -> "1000476"  [label="CFG: "];
"1000476" -> "1000575"  [label="DDG: user"];
"1000476" -> "1000575"  [label="DDG: entry"];
"1000476" -> "1000475"  [label="DDG: user"];
"1000476" -> "1000475"  [label="DDG: entry"];
"1000179" -> "1000476"  [label="DDG: user"];
"1000104" -> "1000476"  [label="DDG: user"];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000482"  [label="CFG: "];
"1000482" -> "1000475"  [label="AST: "];
"1000484" -> "1000475"  [label="CFG: "];
"1000492" -> "1000475"  [label="CFG: "];
"1000475" -> "1000575"  [label="DDG: copy_to_user(user, entry, sizeof(*entry))"];
"1000475" -> "1000575"  [label="DDG: copy_to_user(user, entry, sizeof(*entry)) != 0"];
}
