digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_3@pointer" {
"1000151" [label="(Call,ip_route_connect(&fl4, daddr, 0, RT_CONN_FLAGS(sk),\n\t\t\t      sk->sk_bound_dev_if, sk->sk_protocol,\n\t\t\t      inet->inet_sport, inet->inet_dport, sk, false))"];
"1000117" [label="(Call,daddr = inet->inet_daddr)"];
"1000142" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000156" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000132" [label="(Call,sock_owned_by_user(sk))"];
"1000108" [label="(Call,inet_sk(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000149" [label="(Call,rt = ip_route_connect(&fl4, daddr, 0, RT_CONN_FLAGS(sk),\n\t\t\t      sk->sk_bound_dev_if, sk->sk_protocol,\n\t\t\t      inet->inet_sport, inet->inet_dport, sk, false))"];
"1000173" [label="(Call,IS_ERR(rt))"];
"1000176" [label="(Call,PTR_ERR(rt))"];
"1000175" [label="(Return,return PTR_ERR(rt);)"];
"1000178" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000209" [label="(Call,__sk_prot_rehash(sk))"];
"1000151" [label="(Call,ip_route_connect(&fl4, daddr, 0, RT_CONN_FLAGS(sk),\n\t\t\t      sk->sk_bound_dev_if, sk->sk_protocol,\n\t\t\t      inet->inet_sport, inet->inet_dport, sk, false))"];
"1000109" [label="(Identifier,sk)"];
"1000150" [label="(Identifier,rt)"];
"1000117" [label="(Call,daddr = inet->inet_daddr)"];
"1000155" [label="(Literal,0)"];
"1000154" [label="(Identifier,daddr)"];
"1000143" [label="(Identifier,daddr)"];
"1000175" [label="(Return,return PTR_ERR(rt);)"];
"1000180" [label="(Call,&rt->dst)"];
"1000142" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000161" [label="(Call,sk->sk_protocol)"];
"1000118" [label="(Identifier,daddr)"];
"1000176" [label="(Call,PTR_ERR(rt))"];
"1000119" [label="(Call,inet->inet_daddr)"];
"1000128" [label="(Call,rcu_dereference_protected(inet->inet_opt,\n\t\t\t\t\t     sock_owned_by_user(sk)))"];
"1000159" [label="(Identifier,sk)"];
"1000133" [label="(Identifier,sk)"];
"1000210" [label="(Identifier,sk)"];
"1000177" [label="(Identifier,rt)"];
"1000144" [label="(Call,inet_opt->opt.faddr)"];
"1000134" [label="(ControlStructure,if (inet_opt && inet_opt->opt.srr))"];
"1000213" [label="(MethodReturn,static int)"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000174" [label="(Identifier,rt)"];
"1000171" [label="(Identifier,false)"];
"1000185" [label="(Identifier,new_saddr)"];
"1000156" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000157" [label="(Identifier,sk)"];
"1000212" [label="(Literal,0)"];
"1000209" [label="(Call,__sk_prot_rehash(sk))"];
"1000173" [label="(Call,IS_ERR(rt))"];
"1000167" [label="(Call,inet->inet_dport)"];
"1000104" [label="(Block,)"];
"1000179" [label="(Identifier,sk)"];
"1000152" [label="(Call,&fl4)"];
"1000170" [label="(Identifier,sk)"];
"1000178" [label="(Call,sk_setup_caps(sk, &rt->dst))"];
"1000149" [label="(Call,rt = ip_route_connect(&fl4, daddr, 0, RT_CONN_FLAGS(sk),\n\t\t\t      sk->sk_bound_dev_if, sk->sk_protocol,\n\t\t\t      inet->inet_sport, inet->inet_dport, sk, false))"];
"1000108" [label="(Call,inet_sk(sk))"];
"1000106" [label="(Call,*inet = inet_sk(sk))"];
"1000158" [label="(Call,sk->sk_bound_dev_if)"];
"1000127" [label="(Identifier,inet_opt)"];
"1000132" [label="(Call,sock_owned_by_user(sk))"];
"1000164" [label="(Call,inet->inet_sport)"];
"1000172" [label="(ControlStructure,if (IS_ERR(rt)))"];
"1000151" -> "1000149"  [label="AST: "];
"1000151" -> "1000171"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000156" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="AST: "];
"1000161" -> "1000151"  [label="AST: "];
"1000164" -> "1000151"  [label="AST: "];
"1000167" -> "1000151"  [label="AST: "];
"1000170" -> "1000151"  [label="AST: "];
"1000171" -> "1000151"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000151" -> "1000213"  [label="DDG: daddr"];
"1000151" -> "1000213"  [label="DDG: inet->inet_sport"];
"1000151" -> "1000213"  [label="DDG: &fl4"];
"1000151" -> "1000213"  [label="DDG: inet->inet_dport"];
"1000151" -> "1000213"  [label="DDG: sk->sk_bound_dev_if"];
"1000151" -> "1000213"  [label="DDG: false"];
"1000151" -> "1000213"  [label="DDG: sk"];
"1000151" -> "1000213"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000151" -> "1000213"  [label="DDG: sk->sk_protocol"];
"1000151" -> "1000149"  [label="DDG: &fl4"];
"1000151" -> "1000149"  [label="DDG: sk"];
"1000151" -> "1000149"  [label="DDG: sk->sk_protocol"];
"1000151" -> "1000149"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000151" -> "1000149"  [label="DDG: inet->inet_sport"];
"1000151" -> "1000149"  [label="DDG: daddr"];
"1000151" -> "1000149"  [label="DDG: sk->sk_bound_dev_if"];
"1000151" -> "1000149"  [label="DDG: 0"];
"1000151" -> "1000149"  [label="DDG: false"];
"1000151" -> "1000149"  [label="DDG: inet->inet_dport"];
"1000117" -> "1000151"  [label="DDG: daddr"];
"1000142" -> "1000151"  [label="DDG: daddr"];
"1000156" -> "1000151"  [label="DDG: sk"];
"1000103" -> "1000151"  [label="DDG: sk"];
"1000151" -> "1000178"  [label="DDG: sk"];
"1000117" -> "1000104"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000127" -> "1000117"  [label="CFG: "];
"1000117" -> "1000213"  [label="DDG: inet->inet_daddr"];
"1000142" -> "1000134"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000213"  [label="DDG: inet_opt->opt.faddr"];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000159" -> "1000156"  [label="CFG: "];
"1000132" -> "1000156"  [label="DDG: sk"];
"1000103" -> "1000156"  [label="DDG: sk"];
"1000132" -> "1000128"  [label="AST: "];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000128" -> "1000132"  [label="CFG: "];
"1000132" -> "1000128"  [label="DDG: sk"];
"1000108" -> "1000132"  [label="DDG: sk"];
"1000103" -> "1000132"  [label="DDG: sk"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000106"  [label="DDG: sk"];
"1000103" -> "1000108"  [label="DDG: sk"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000213"  [label="DDG: sk"];
"1000103" -> "1000178"  [label="DDG: sk"];
"1000103" -> "1000209"  [label="DDG: sk"];
"1000149" -> "1000104"  [label="AST: "];
"1000150" -> "1000149"  [label="AST: "];
"1000174" -> "1000149"  [label="CFG: "];
"1000149" -> "1000213"  [label="DDG: ip_route_connect(&fl4, daddr, 0, RT_CONN_FLAGS(sk),\n\t\t\t      sk->sk_bound_dev_if, sk->sk_protocol,\n\t\t\t      inet->inet_sport, inet->inet_dport, sk, false)"];
"1000149" -> "1000173"  [label="DDG: rt"];
"1000173" -> "1000172"  [label="AST: "];
"1000173" -> "1000174"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000177" -> "1000173"  [label="CFG: "];
"1000179" -> "1000173"  [label="CFG: "];
"1000173" -> "1000213"  [label="DDG: IS_ERR(rt)"];
"1000173" -> "1000213"  [label="DDG: rt"];
"1000173" -> "1000176"  [label="DDG: rt"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000213"  [label="DDG: PTR_ERR(rt)"];
"1000176" -> "1000213"  [label="DDG: rt"];
"1000176" -> "1000175"  [label="DDG: PTR_ERR(rt)"];
"1000175" -> "1000172"  [label="AST: "];
"1000213" -> "1000175"  [label="CFG: "];
"1000175" -> "1000213"  [label="DDG: <RET>"];
"1000178" -> "1000104"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000185" -> "1000178"  [label="CFG: "];
"1000178" -> "1000213"  [label="DDG: sk"];
"1000178" -> "1000213"  [label="DDG: sk_setup_caps(sk, &rt->dst)"];
"1000178" -> "1000213"  [label="DDG: &rt->dst"];
"1000178" -> "1000209"  [label="DDG: sk"];
"1000209" -> "1000104"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000212" -> "1000209"  [label="CFG: "];
"1000209" -> "1000213"  [label="DDG: __sk_prot_rehash(sk)"];
"1000209" -> "1000213"  [label="DDG: sk"];
}
