digraph "0_Android_1171e7c047bf79e7c93342bb6a812c9edd86aa84@API" {
"1000836" [label="(Call,size = data.readInt64())"];
"1000844" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000842" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000852" [label="(Call,reply->writeInt32(err))"];
"1000855" [label="(Call,err == OK)"];
"1000825" [label="(Call,port_index != 0)"];
"1000855" [label="(Call,err == OK)"];
"1000847" [label="(Identifier,size)"];
"1000854" [label="(ControlStructure,if (err == OK))"];
"1000838" [label="(Call,data.readInt64())"];
"1000846" [label="(Identifier,port_index)"];
"1000843" [label="(Identifier,err)"];
"1001056" [label="(MethodReturn,status_t)"];
"1000842" [label="(Call,err = allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000836" [label="(Call,size = data.readInt64())"];
"1000848" [label="(Call,&buffer)"];
"1000868" [label="(Identifier,NO_ERROR)"];
"1000857" [label="(Identifier,OK)"];
"1000805" [label="(Block,)"];
"1000817" [label="(Call,port_index = data.readInt32())"];
"1000837" [label="(Identifier,size)"];
"1000856" [label="(Identifier,err)"];
"1000850" [label="(Call,&buffer_data)"];
"1000845" [label="(Identifier,node)"];
"1000853" [label="(Identifier,err)"];
"1000852" [label="(Call,reply->writeInt32(err))"];
"1000844" [label="(Call,allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data))"];
"1000823" [label="(Call,isSecure(node))"];
"1000836" -> "1000805"  [label="AST: "];
"1000836" -> "1000838"  [label="CFG: "];
"1000837" -> "1000836"  [label="AST: "];
"1000838" -> "1000836"  [label="AST: "];
"1000843" -> "1000836"  [label="CFG: "];
"1000836" -> "1001056"  [label="DDG: data.readInt64()"];
"1000836" -> "1000844"  [label="DDG: size"];
"1000844" -> "1000842"  [label="AST: "];
"1000844" -> "1000850"  [label="CFG: "];
"1000845" -> "1000844"  [label="AST: "];
"1000846" -> "1000844"  [label="AST: "];
"1000847" -> "1000844"  [label="AST: "];
"1000848" -> "1000844"  [label="AST: "];
"1000850" -> "1000844"  [label="AST: "];
"1000842" -> "1000844"  [label="CFG: "];
"1000844" -> "1001056"  [label="DDG: &buffer_data"];
"1000844" -> "1001056"  [label="DDG: port_index"];
"1000844" -> "1001056"  [label="DDG: &buffer"];
"1000844" -> "1001056"  [label="DDG: node"];
"1000844" -> "1001056"  [label="DDG: size"];
"1000844" -> "1000842"  [label="DDG: size"];
"1000844" -> "1000842"  [label="DDG: port_index"];
"1000844" -> "1000842"  [label="DDG: &buffer_data"];
"1000844" -> "1000842"  [label="DDG: &buffer"];
"1000844" -> "1000842"  [label="DDG: node"];
"1000823" -> "1000844"  [label="DDG: node"];
"1000817" -> "1000844"  [label="DDG: port_index"];
"1000825" -> "1000844"  [label="DDG: port_index"];
"1000842" -> "1000805"  [label="AST: "];
"1000843" -> "1000842"  [label="AST: "];
"1000853" -> "1000842"  [label="CFG: "];
"1000842" -> "1001056"  [label="DDG: allocateBuffer(\n                    node, port_index, size, &buffer, &buffer_data)"];
"1000842" -> "1000852"  [label="DDG: err"];
"1000852" -> "1000805"  [label="AST: "];
"1000852" -> "1000853"  [label="CFG: "];
"1000853" -> "1000852"  [label="AST: "];
"1000856" -> "1000852"  [label="CFG: "];
"1000852" -> "1001056"  [label="DDG: reply->writeInt32(err)"];
"1000852" -> "1000855"  [label="DDG: err"];
"1000855" -> "1000854"  [label="AST: "];
"1000855" -> "1000857"  [label="CFG: "];
"1000856" -> "1000855"  [label="AST: "];
"1000857" -> "1000855"  [label="AST: "];
"1000861" -> "1000855"  [label="CFG: "];
"1000868" -> "1000855"  [label="CFG: "];
"1000855" -> "1001056"  [label="DDG: OK"];
"1000855" -> "1001056"  [label="DDG: err == OK"];
"1000855" -> "1001056"  [label="DDG: err"];
}
