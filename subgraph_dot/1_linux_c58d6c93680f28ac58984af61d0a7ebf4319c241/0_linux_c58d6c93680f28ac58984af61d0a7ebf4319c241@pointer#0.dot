digraph "0_linux_c58d6c93680f28ac58984af61d0a7ebf4319c241@pointer" {
"1000412" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK)"];
"1000252" [label="(Call,nlh->nlmsg_flags & NLM_F_REQUEST)"];
"1000412" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK)"];
"1000251" [label="(Call,!(nlh->nlmsg_flags & NLM_F_REQUEST))"];
"1000411" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK || err)"];
"1000421" [label="(Call,nfnl_err_add(&err_list, nlh, err))"];
"1000152" [label="(Call,netlink_ack(oskb, nlh, -ENOMEM))"];
"1000151" [label="(Return,return netlink_ack(oskb, nlh, -ENOMEM);)"];
"1000184" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000205" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000273" [label="(Call,nfnl_err_reset(&err_list))"];
"1000476" [label="(Call,nfnl_err_reset(&err_list))"];
"1000498" [label="(Call,nfnl_err_deliver(&err_list, oskb))"];
"1000420" [label="(Call,nfnl_err_add(&err_list, nlh, err) < 0)"];
"1000428" [label="(Call,nfnl_err_reset(&err_list))"];
"1000258" [label="(Call,err = -EINVAL)"];
"1000400" [label="(Call,err == -EAGAIN)"];
"1000378" [label="(Call,err < 0)"];
"1000477" [label="(Call,&err_list)"];
"1000321" [label="(Call,err = -EINVAL)"];
"1000476" [label="(Call,nfnl_err_reset(&err_list))"];
"1000499" [label="(Call,&err_list)"];
"1000277" [label="(Identifier,status)"];
"1000420" [label="(Call,nfnl_err_add(&err_list, nlh, err) < 0)"];
"1000389" [label="(Call,nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda))"];
"1000252" [label="(Call,nlh->nlmsg_flags & NLM_F_REQUEST)"];
"1000411" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK || err)"];
"1000184" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000416" [label="(Identifier,NLM_F_ACK)"];
"1000186" [label="(Identifier,nlh)"];
"1000480" [label="(Identifier,subsys_id)"];
"1000264" [label="(Identifier,type)"];
"1000296" [label="(Call,err = -EINVAL)"];
"1000152" [label="(Call,netlink_ack(oskb, nlh, -ENOMEM))"];
"1000253" [label="(Call,nlh->nlmsg_flags)"];
"1000424" [label="(Identifier,nlh)"];
"1000155" [label="(Call,-ENOMEM)"];
"1000212" [label="(Identifier,skb)"];
"1000429" [label="(Call,&err_list)"];
"1000191" [label="(Identifier,skb)"];
"1000503" [label="(Identifier,subsys_id)"];
"1000251" [label="(Call,!(nlh->nlmsg_flags & NLM_F_REQUEST))"];
"1000256" [label="(Identifier,NLM_F_REQUEST)"];
"1000187" [label="(Call,-EOPNOTSUPP)"];
"1000250" [label="(ControlStructure,if (!(nlh->nlmsg_flags & NLM_F_REQUEST)))"];
"1000417" [label="(Identifier,err)"];
"1000145" [label="(Call,netlink_skb_clone(oskb, GFP_KERNEL))"];
"1000272" [label="(Block,)"];
"1000442" [label="(Identifier,err)"];
"1000419" [label="(ControlStructure,if (nfnl_err_add(&err_list, nlh, err) < 0))"];
"1000410" [label="(ControlStructure,if (nlh->nlmsg_flags & NLM_F_ACK || err))"];
"1000205" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000345" [label="(Call,(void *)nlh)"];
"1000259" [label="(Identifier,err)"];
"1000472" [label="(Block,)"];
"1000498" [label="(Call,nfnl_err_deliver(&err_list, oskb))"];
"1000428" [label="(Call,nfnl_err_reset(&err_list))"];
"1000501" [label="(Identifier,oskb)"];
"1000233" [label="(Call,nlmsg_len(nlh))"];
"1000413" [label="(Call,nlh->nlmsg_flags)"];
"1000273" [label="(Call,nfnl_err_reset(&err_list))"];
"1000432" [label="(Identifier,oskb)"];
"1000111" [label="(Block,)"];
"1000425" [label="(Identifier,err)"];
"1000490" [label="(Call,ss->commit(net, oskb))"];
"1000446" [label="(JumpTarget,next:)"];
"1000245" [label="(Call,err = -EINVAL)"];
"1000206" [label="(Identifier,oskb)"];
"1000148" [label="(ControlStructure,if (!skb))"];
"1000153" [label="(Identifier,oskb)"];
"1000109" [label="(MethodParameterIn,struct nlmsghdr *nlh)"];
"1000412" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK)"];
"1000430" [label="(Identifier,err_list)"];
"1000421" [label="(Call,nfnl_err_add(&err_list, nlh, err))"];
"1000154" [label="(Identifier,nlh)"];
"1000422" [label="(Call,&err_list)"];
"1000208" [label="(Call,-EOPNOTSUPP)"];
"1000495" [label="(Call,ss->abort(net, oskb))"];
"1000426" [label="(Literal,0)"];
"1000506" [label="(MethodReturn,static void)"];
"1000307" [label="(Call,err = -EINVAL)"];
"1000427" [label="(Block,)"];
"1000181" [label="(Block,)"];
"1000202" [label="(Block,)"];
"1000185" [label="(Identifier,oskb)"];
"1000151" [label="(Return,return netlink_ack(oskb, nlh, -ENOMEM);)"];
"1000207" [label="(Identifier,nlh)"];
"1000423" [label="(Identifier,err_list)"];
"1000274" [label="(Call,&err_list)"];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000416"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="AST: "];
"1000417" -> "1000412"  [label="CFG: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000412" -> "1000506"  [label="DDG: nlh->nlmsg_flags"];
"1000412" -> "1000506"  [label="DDG: NLM_F_ACK"];
"1000412" -> "1000252"  [label="DDG: nlh->nlmsg_flags"];
"1000412" -> "1000411"  [label="DDG: nlh->nlmsg_flags"];
"1000412" -> "1000411"  [label="DDG: NLM_F_ACK"];
"1000252" -> "1000412"  [label="DDG: nlh->nlmsg_flags"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000256"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000256" -> "1000252"  [label="AST: "];
"1000251" -> "1000252"  [label="CFG: "];
"1000252" -> "1000506"  [label="DDG: nlh->nlmsg_flags"];
"1000252" -> "1000506"  [label="DDG: NLM_F_REQUEST"];
"1000252" -> "1000251"  [label="DDG: nlh->nlmsg_flags"];
"1000252" -> "1000251"  [label="DDG: NLM_F_REQUEST"];
"1000251" -> "1000250"  [label="AST: "];
"1000259" -> "1000251"  [label="CFG: "];
"1000264" -> "1000251"  [label="CFG: "];
"1000251" -> "1000506"  [label="DDG: !(nlh->nlmsg_flags & NLM_F_REQUEST)"];
"1000251" -> "1000506"  [label="DDG: nlh->nlmsg_flags & NLM_F_REQUEST"];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000417"  [label="CFG: "];
"1000417" -> "1000411"  [label="AST: "];
"1000423" -> "1000411"  [label="CFG: "];
"1000446" -> "1000411"  [label="CFG: "];
"1000411" -> "1000506"  [label="DDG: nlh->nlmsg_flags & NLM_F_ACK || err"];
"1000411" -> "1000506"  [label="DDG: nlh->nlmsg_flags & NLM_F_ACK"];
"1000411" -> "1000506"  [label="DDG: err"];
"1000258" -> "1000411"  [label="DDG: err"];
"1000400" -> "1000411"  [label="DDG: err"];
"1000378" -> "1000411"  [label="DDG: err"];
"1000296" -> "1000411"  [label="DDG: err"];
"1000321" -> "1000411"  [label="DDG: err"];
"1000307" -> "1000411"  [label="DDG: err"];
"1000245" -> "1000411"  [label="DDG: err"];
"1000411" -> "1000421"  [label="DDG: err"];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000425"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000424" -> "1000421"  [label="AST: "];
"1000425" -> "1000421"  [label="AST: "];
"1000426" -> "1000421"  [label="CFG: "];
"1000421" -> "1000506"  [label="DDG: err"];
"1000421" -> "1000506"  [label="DDG: nlh"];
"1000421" -> "1000152"  [label="DDG: nlh"];
"1000421" -> "1000184"  [label="DDG: nlh"];
"1000421" -> "1000205"  [label="DDG: nlh"];
"1000421" -> "1000273"  [label="DDG: &err_list"];
"1000421" -> "1000420"  [label="DDG: &err_list"];
"1000421" -> "1000420"  [label="DDG: nlh"];
"1000421" -> "1000420"  [label="DDG: err"];
"1000476" -> "1000421"  [label="DDG: &err_list"];
"1000345" -> "1000421"  [label="DDG: nlh"];
"1000233" -> "1000421"  [label="DDG: nlh"];
"1000389" -> "1000421"  [label="DDG: nlh"];
"1000109" -> "1000421"  [label="DDG: nlh"];
"1000421" -> "1000428"  [label="DDG: &err_list"];
"1000421" -> "1000476"  [label="DDG: &err_list"];
"1000421" -> "1000498"  [label="DDG: &err_list"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -ENOMEM)"];
"1000152" -> "1000506"  [label="DDG: -ENOMEM"];
"1000152" -> "1000506"  [label="DDG: oskb"];
"1000152" -> "1000506"  [label="DDG: nlh"];
"1000152" -> "1000151"  [label="DDG: netlink_ack(oskb, nlh, -ENOMEM)"];
"1000145" -> "1000152"  [label="DDG: oskb"];
"1000345" -> "1000152"  [label="DDG: nlh"];
"1000233" -> "1000152"  [label="DDG: nlh"];
"1000389" -> "1000152"  [label="DDG: nlh"];
"1000109" -> "1000152"  [label="DDG: nlh"];
"1000155" -> "1000152"  [label="DDG: ENOMEM"];
"1000151" -> "1000148"  [label="AST: "];
"1000506" -> "1000151"  [label="CFG: "];
"1000151" -> "1000506"  [label="DDG: <RET>"];
"1000184" -> "1000181"  [label="AST: "];
"1000184" -> "1000187"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000191" -> "1000184"  [label="CFG: "];
"1000184" -> "1000506"  [label="DDG: nlh"];
"1000184" -> "1000506"  [label="DDG: -EOPNOTSUPP"];
"1000184" -> "1000506"  [label="DDG: oskb"];
"1000184" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -EOPNOTSUPP)"];
"1000145" -> "1000184"  [label="DDG: oskb"];
"1000345" -> "1000184"  [label="DDG: nlh"];
"1000233" -> "1000184"  [label="DDG: nlh"];
"1000389" -> "1000184"  [label="DDG: nlh"];
"1000109" -> "1000184"  [label="DDG: nlh"];
"1000187" -> "1000184"  [label="DDG: EOPNOTSUPP"];
"1000205" -> "1000202"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000205" -> "1000506"  [label="DDG: oskb"];
"1000205" -> "1000506"  [label="DDG: -EOPNOTSUPP"];
"1000205" -> "1000506"  [label="DDG: nlh"];
"1000205" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -EOPNOTSUPP)"];
"1000145" -> "1000205"  [label="DDG: oskb"];
"1000345" -> "1000205"  [label="DDG: nlh"];
"1000233" -> "1000205"  [label="DDG: nlh"];
"1000389" -> "1000205"  [label="DDG: nlh"];
"1000109" -> "1000205"  [label="DDG: nlh"];
"1000208" -> "1000205"  [label="DDG: EOPNOTSUPP"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
"1000476" -> "1000273"  [label="DDG: &err_list"];
"1000273" -> "1000476"  [label="DDG: &err_list"];
"1000273" -> "1000498"  [label="DDG: &err_list"];
"1000476" -> "1000472"  [label="AST: "];
"1000476" -> "1000477"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="CFG: "];
"1000476" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
"1000476" -> "1000506"  [label="DDG: &err_list"];
"1000428" -> "1000476"  [label="DDG: &err_list"];
"1000476" -> "1000498"  [label="DDG: &err_list"];
"1000498" -> "1000111"  [label="AST: "];
"1000498" -> "1000501"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000501" -> "1000498"  [label="AST: "];
"1000503" -> "1000498"  [label="CFG: "];
"1000498" -> "1000506"  [label="DDG: nfnl_err_deliver(&err_list, oskb)"];
"1000498" -> "1000506"  [label="DDG: &err_list"];
"1000498" -> "1000506"  [label="DDG: oskb"];
"1000428" -> "1000498"  [label="DDG: &err_list"];
"1000495" -> "1000498"  [label="DDG: oskb"];
"1000490" -> "1000498"  [label="DDG: oskb"];
"1000420" -> "1000419"  [label="AST: "];
"1000420" -> "1000426"  [label="CFG: "];
"1000426" -> "1000420"  [label="AST: "];
"1000430" -> "1000420"  [label="CFG: "];
"1000442" -> "1000420"  [label="CFG: "];
"1000420" -> "1000506"  [label="DDG: nfnl_err_add(&err_list, nlh, err) < 0"];
"1000420" -> "1000506"  [label="DDG: nfnl_err_add(&err_list, nlh, err)"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000429"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000432" -> "1000428"  [label="CFG: "];
"1000428" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
}
