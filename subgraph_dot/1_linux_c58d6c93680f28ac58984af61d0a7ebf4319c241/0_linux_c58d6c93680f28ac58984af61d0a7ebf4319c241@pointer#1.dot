digraph "0_linux_c58d6c93680f28ac58984af61d0a7ebf4319c241@pointer" {
"1000473" [label="(Call,ss->abort(net, oskb))"];
"1000117" [label="(Call,*net = sock_net(skb->sk))"];
"1000119" [label="(Call,sock_net(skb->sk))"];
"1000389" [label="(Call,nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda))"];
"1000473" [label="(Call,ss->abort(net, oskb))"];
"1000431" [label="(Call,netlink_ack(oskb, nlmsg_hdr(oskb), -ENOMEM))"];
"1000433" [label="(Call,nlmsg_hdr(oskb))"];
"1000145" [label="(Call,netlink_skb_clone(oskb, GFP_KERNEL))"];
"1000113" [label="(Call,*oskb = skb)"];
"1000108" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000435" [label="(Call,-ENOMEM)"];
"1000225" [label="(Call,nlmsg_hdr(skb))"];
"1000464" [label="(Call,skb_pull(skb, msglen))"];
"1000454" [label="(Call,msglen > skb->len)"];
"1000447" [label="(Call,msglen = NLMSG_ALIGN(nlh->nlmsg_len))"];
"1000449" [label="(Call,NLMSG_ALIGN(nlh->nlmsg_len))"];
"1000352" [label="(Call,nlh->nlmsg_len - min_len)"];
"1000237" [label="(Call,skb->len < nlh->nlmsg_len)"];
"1000214" [label="(Call,skb->len >= nlmsg_total_size(0))"];
"1000218" [label="(Call,nlmsg_total_size(0))"];
"1000328" [label="(Call,min_len = nlmsg_total_size(sizeof(struct nfgenmsg)))"];
"1000459" [label="(Call,msglen = skb->len)"];
"1000149" [label="(Call,!skb)"];
"1000143" [label="(Call,skb = netlink_skb_clone(oskb, GFP_KERNEL))"];
"1000345" [label="(Call,(void *)nlh)"];
"1000233" [label="(Call,nlmsg_len(nlh))"];
"1000223" [label="(Call,nlh = nlmsg_hdr(skb))"];
"1000109" [label="(MethodParameterIn,struct nlmsghdr *nlh)"];
"1000396" [label="(Call,(const struct nlattr **)cda)"];
"1000359" [label="(Call,nla_parse(cda, ss->cb[cb_id].attr_count,\n\t\t\t\t\tattr, attrlen, ss->cb[cb_id].policy))"];
"1000342" [label="(Call,*attr = (void *)nlh + min_len)"];
"1000350" [label="(Call,attrlen = nlh->nlmsg_len - min_len)"];
"1000190" [label="(Call,kfree_skb(skb))"];
"1000189" [label="(Return,return kfree_skb(skb);)"];
"1000211" [label="(Call,kfree_skb(skb))"];
"1000210" [label="(Return,return kfree_skb(skb);)"];
"1000152" [label="(Call,netlink_ack(oskb, nlh, -ENOMEM))"];
"1000151" [label="(Return,return netlink_ack(oskb, nlh, -ENOMEM);)"];
"1000184" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000205" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000232" [label="(Call,nlmsg_len(nlh) < sizeof(struct nfgenmsg))"];
"1000231" [label="(Call,nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||\n\t\t    skb->len < nlh->nlmsg_len)"];
"1000357" [label="(Call,err = nla_parse(cda, ss->cb[cb_id].attr_count,\n\t\t\t\t\tattr, attrlen, ss->cb[cb_id].policy))"];
"1000378" [label="(Call,err < 0)"];
"1000400" [label="(Call,err == -EAGAIN)"];
"1000411" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK || err)"];
"1000421" [label="(Call,nfnl_err_add(&err_list, nlh, err))"];
"1000273" [label="(Call,nfnl_err_reset(&err_list))"];
"1000476" [label="(Call,nfnl_err_reset(&err_list))"];
"1000498" [label="(Call,nfnl_err_deliver(&err_list, oskb))"];
"1000420" [label="(Call,nfnl_err_add(&err_list, nlh, err) < 0)"];
"1000428" [label="(Call,nfnl_err_reset(&err_list))"];
"1000387" [label="(Call,err = nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda))"];
"1000481" [label="(Call,kfree_skb(skb))"];
"1000504" [label="(Call,kfree_skb(skb))"];
"1000490" [label="(Call,ss->commit(net, oskb))"];
"1000495" [label="(Call,ss->abort(net, oskb))"];
"1000344" [label="(Call,(void *)nlh + min_len)"];
"1000224" [label="(Identifier,nlh)"];
"1000465" [label="(Identifier,skb)"];
"1000400" [label="(Call,err == -EAGAIN)"];
"1000241" [label="(Call,nlh->nlmsg_len)"];
"1000438" [label="(Identifier,status)"];
"1000388" [label="(Identifier,err)"];
"1000226" [label="(Identifier,skb)"];
"1000359" [label="(Call,nla_parse(cda, ss->cb[cb_id].attr_count,\n\t\t\t\t\tattr, attrlen, ss->cb[cb_id].policy))"];
"1000491" [label="(Identifier,net)"];
"1000277" [label="(Identifier,status)"];
"1000420" [label="(Call,nfnl_err_add(&err_list, nlh, err) < 0)"];
"1000134" [label="(Call,netlink_ack(skb, nlh, -EINVAL))"];
"1000118" [label="(Identifier,net)"];
"1000492" [label="(Identifier,oskb)"];
"1000406" [label="(Identifier,status)"];
"1000399" [label="(ControlStructure,if (err == -EAGAIN))"];
"1000386" [label="(Block,)"];
"1000503" [label="(Identifier,subsys_id)"];
"1000335" [label="(Identifier,cb_id)"];
"1000357" [label="(Call,err = nla_parse(cda, ss->cb[cb_id].attr_count,\n\t\t\t\t\tattr, attrlen, ss->cb[cb_id].policy))"];
"1000187" [label="(Call,-EOPNOTSUPP)"];
"1000417" [label="(Identifier,err)"];
"1000272" [label="(Block,)"];
"1000369" [label="(Identifier,attrlen)"];
"1000442" [label="(Identifier,err)"];
"1000472" [label="(Block,)"];
"1000498" [label="(Call,nfnl_err_deliver(&err_list, oskb))"];
"1000428" [label="(Call,nfnl_err_reset(&err_list))"];
"1000213" [label="(ControlStructure,while (skb->len >= nlmsg_total_size(0)))"];
"1000233" [label="(Call,nlmsg_len(nlh))"];
"1000432" [label="(Identifier,oskb)"];
"1000473" [label="(Call,ss->abort(net, oskb))"];
"1000497" [label="(Identifier,oskb)"];
"1000456" [label="(Call,skb->len)"];
"1000450" [label="(Call,nlh->nlmsg_len)"];
"1000109" [label="(MethodParameterIn,struct nlmsghdr *nlh)"];
"1000434" [label="(Identifier,oskb)"];
"1000225" [label="(Call,nlmsg_hdr(skb))"];
"1000426" [label="(Literal,0)"];
"1000506" [label="(MethodReturn,static void)"];
"1000246" [label="(Identifier,err)"];
"1000181" [label="(Block,)"];
"1000185" [label="(Identifier,oskb)"];
"1000423" [label="(Identifier,err_list)"];
"1000460" [label="(Identifier,msglen)"];
"1000361" [label="(Call,ss->cb[cb_id].attr_count)"];
"1000258" [label="(Call,err = -EINVAL)"];
"1000330" [label="(Call,nlmsg_total_size(sizeof(struct nfgenmsg)))"];
"1000496" [label="(Identifier,net)"];
"1000329" [label="(Identifier,min_len)"];
"1000480" [label="(Identifier,subsys_id)"];
"1000152" [label="(Call,netlink_ack(oskb, nlh, -ENOMEM))"];
"1000115" [label="(Identifier,skb)"];
"1000424" [label="(Identifier,nlh)"];
"1000212" [label="(Identifier,skb)"];
"1000433" [label="(Call,nlmsg_hdr(oskb))"];
"1000119" [label="(Call,sock_net(skb->sk))"];
"1000230" [label="(ControlStructure,if (nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||\n\t\t    skb->len < nlh->nlmsg_len))"];
"1000381" [label="(ControlStructure,goto ack;)"];
"1000429" [label="(Call,&err_list)"];
"1000191" [label="(Identifier,skb)"];
"1000120" [label="(Call,skb->sk)"];
"1000505" [label="(Identifier,skb)"];
"1000419" [label="(ControlStructure,if (nfnl_err_add(&err_list, nlh, err) < 0))"];
"1000144" [label="(Identifier,skb)"];
"1000410" [label="(ControlStructure,if (nlh->nlmsg_flags & NLM_F_ACK || err))"];
"1000500" [label="(Identifier,err_list)"];
"1000345" [label="(Call,(void *)nlh)"];
"1000117" [label="(Call,*net = sock_net(skb->sk))"];
"1000189" [label="(Return,return kfree_skb(skb);)"];
"1000384" [label="(Identifier,nc)"];
"1000387" [label="(Call,err = nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda))"];
"1000235" [label="(Call,sizeof(struct nfgenmsg))"];
"1000352" [label="(Call,nlh->nlmsg_len - min_len)"];
"1000326" [label="(Block,)"];
"1000446" [label="(JumpTarget,next:)"];
"1000245" [label="(Call,err = -EINVAL)"];
"1000148" [label="(ControlStructure,if (!skb))"];
"1000228" [label="(Identifier,err)"];
"1000153" [label="(Identifier,oskb)"];
"1000350" [label="(Call,attrlen = nlh->nlmsg_len - min_len)"];
"1000232" [label="(Call,nlmsg_len(nlh) < sizeof(struct nfgenmsg))"];
"1000412" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK)"];
"1000154" [label="(Identifier,nlh)"];
"1000396" [label="(Call,(const struct nlattr **)cda)"];
"1000448" [label="(Identifier,msglen)"];
"1000216" [label="(Identifier,skb)"];
"1000427" [label="(Block,)"];
"1000474" [label="(Identifier,net)"];
"1000151" [label="(Return,return netlink_ack(oskb, nlh, -ENOMEM);)"];
"1000459" [label="(Call,msglen = skb->len)"];
"1000379" [label="(Identifier,err)"];
"1000143" [label="(Call,skb = netlink_skb_clone(oskb, GFP_KERNEL))"];
"1000190" [label="(Call,kfree_skb(skb))"];
"1000409" [label="(JumpTarget,ack:)"];
"1000455" [label="(Identifier,msglen)"];
"1000114" [label="(Identifier,oskb)"];
"1000254" [label="(Identifier,nlh)"];
"1000461" [label="(Call,skb->len)"];
"1000476" [label="(Call,nfnl_err_reset(&err_list))"];
"1000499" [label="(Call,&err_list)"];
"1000186" [label="(Identifier,nlh)"];
"1000184" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000411" [label="(Call,nlh->nlmsg_flags & NLM_F_ACK || err)"];
"1000435" [label="(Call,-ENOMEM)"];
"1000343" [label="(Identifier,attr)"];
"1000342" [label="(Call,*attr = (void *)nlh + min_len)"];
"1000155" [label="(Call,-ENOMEM)"];
"1000380" [label="(Literal,0)"];
"1000447" [label="(Call,msglen = NLMSG_ALIGN(nlh->nlmsg_len))"];
"1000377" [label="(ControlStructure,if (err < 0))"];
"1000489" [label="(Block,)"];
"1000211" [label="(Call,kfree_skb(skb))"];
"1000344" [label="(Call,(void *)nlh + min_len)"];
"1000234" [label="(Identifier,nlh)"];
"1000108" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000475" [label="(Identifier,oskb)"];
"1000126" [label="(Identifier,err_list)"];
"1000478" [label="(Identifier,err_list)"];
"1000431" [label="(Call,netlink_ack(oskb, nlmsg_hdr(oskb), -ENOMEM))"];
"1000146" [label="(Identifier,oskb)"];
"1000351" [label="(Identifier,attrlen)"];
"1000490" [label="(Call,ss->commit(net, oskb))"];
"1000494" [label="(Block,)"];
"1000483" [label="(ControlStructure,goto replay;)"];
"1000158" [label="(Identifier,subsys_id)"];
"1000149" [label="(Call,!skb)"];
"1000238" [label="(Call,skb->len)"];
"1000223" [label="(Call,nlh = nlmsg_hdr(skb))"];
"1000467" [label="(JumpTarget,done:)"];
"1000495" [label="(Call,ss->abort(net, oskb))"];
"1000401" [label="(Identifier,err)"];
"1000394" [label="(Identifier,skb)"];
"1000147" [label="(Identifier,GFP_KERNEL)"];
"1000449" [label="(Call,NLMSG_ALIGN(nlh->nlmsg_len))"];
"1000207" [label="(Identifier,nlh)"];
"1000391" [label="(Call,net->nfnl)"];
"1000347" [label="(Identifier,nlh)"];
"1000464" [label="(Call,skb_pull(skb, msglen))"];
"1000378" [label="(Call,err < 0)"];
"1000239" [label="(Identifier,skb)"];
"1000477" [label="(Call,&err_list)"];
"1000348" [label="(Identifier,min_len)"];
"1000321" [label="(Call,err = -EINVAL)"];
"1000220" [label="(Block,)"];
"1000150" [label="(Identifier,skb)"];
"1000436" [label="(Identifier,ENOMEM)"];
"1000454" [label="(Call,msglen > skb->len)"];
"1000218" [label="(Call,nlmsg_total_size(0))"];
"1000389" [label="(Call,nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda))"];
"1000210" [label="(Return,return kfree_skb(skb);)"];
"1000368" [label="(Identifier,attr)"];
"1000390" [label="(Identifier,net)"];
"1000296" [label="(Call,err = -EINVAL)"];
"1000453" [label="(ControlStructure,if (msglen > skb->len))"];
"1000219" [label="(Literal,0)"];
"1000145" [label="(Call,netlink_skb_clone(oskb, GFP_KERNEL))"];
"1000214" [label="(Call,skb->len >= nlmsg_total_size(0))"];
"1000395" [label="(Identifier,nlh)"];
"1000205" [label="(Call,netlink_ack(oskb, nlh, -EOPNOTSUPP))"];
"1000402" [label="(Call,-EAGAIN)"];
"1000501" [label="(Identifier,oskb)"];
"1000328" [label="(Call,min_len = nlmsg_total_size(sizeof(struct nfgenmsg)))"];
"1000466" [label="(Identifier,msglen)"];
"1000370" [label="(Call,ss->cb[cb_id].policy)"];
"1000273" [label="(Call,nfnl_err_reset(&err_list))"];
"1000356" [label="(Identifier,min_len)"];
"1000111" [label="(Block,)"];
"1000358" [label="(Identifier,err)"];
"1000231" [label="(Call,nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||\n\t\t    skb->len < nlh->nlmsg_len)"];
"1000425" [label="(Identifier,err)"];
"1000215" [label="(Call,skb->len)"];
"1000237" [label="(Call,skb->len < nlh->nlmsg_len)"];
"1000206" [label="(Identifier,oskb)"];
"1000482" [label="(Identifier,skb)"];
"1000113" [label="(Call,*oskb = skb)"];
"1000430" [label="(Identifier,err_list)"];
"1000504" [label="(Call,kfree_skb(skb))"];
"1000421" [label="(Call,nfnl_err_add(&err_list, nlh, err))"];
"1000398" [label="(Identifier,cda)"];
"1000360" [label="(Identifier,cda)"];
"1000422" [label="(Call,&err_list)"];
"1000208" [label="(Call,-EOPNOTSUPP)"];
"1000353" [label="(Call,nlh->nlmsg_len)"];
"1000307" [label="(Call,err = -EINVAL)"];
"1000202" [label="(Block,)"];
"1000481" [label="(Call,kfree_skb(skb))"];
"1000274" [label="(Call,&err_list)"];
"1000473" -> "1000472"  [label="AST: "];
"1000473" -> "1000475"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000473"  [label="AST: "];
"1000478" -> "1000473"  [label="CFG: "];
"1000473" -> "1000506"  [label="DDG: net"];
"1000473" -> "1000506"  [label="DDG: ss->abort(net, oskb)"];
"1000473" -> "1000145"  [label="DDG: oskb"];
"1000473" -> "1000389"  [label="DDG: net"];
"1000117" -> "1000473"  [label="DDG: net"];
"1000389" -> "1000473"  [label="DDG: net"];
"1000431" -> "1000473"  [label="DDG: oskb"];
"1000145" -> "1000473"  [label="DDG: oskb"];
"1000473" -> "1000490"  [label="DDG: net"];
"1000473" -> "1000495"  [label="DDG: net"];
"1000117" -> "1000111"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000126" -> "1000117"  [label="CFG: "];
"1000117" -> "1000506"  [label="DDG: net"];
"1000117" -> "1000506"  [label="DDG: sock_net(skb->sk)"];
"1000119" -> "1000117"  [label="DDG: skb->sk"];
"1000117" -> "1000389"  [label="DDG: net"];
"1000117" -> "1000490"  [label="DDG: net"];
"1000117" -> "1000495"  [label="DDG: net"];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000119" -> "1000506"  [label="DDG: skb->sk"];
"1000389" -> "1000387"  [label="AST: "];
"1000389" -> "1000396"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000394" -> "1000389"  [label="AST: "];
"1000395" -> "1000389"  [label="AST: "];
"1000396" -> "1000389"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000389" -> "1000506"  [label="DDG: (const struct nlattr **)cda"];
"1000389" -> "1000506"  [label="DDG: net->nfnl"];
"1000389" -> "1000506"  [label="DDG: nlh"];
"1000389" -> "1000152"  [label="DDG: nlh"];
"1000389" -> "1000184"  [label="DDG: nlh"];
"1000389" -> "1000205"  [label="DDG: nlh"];
"1000389" -> "1000387"  [label="DDG: (const struct nlattr **)cda"];
"1000389" -> "1000387"  [label="DDG: net->nfnl"];
"1000389" -> "1000387"  [label="DDG: nlh"];
"1000389" -> "1000387"  [label="DDG: net"];
"1000389" -> "1000387"  [label="DDG: skb"];
"1000225" -> "1000389"  [label="DDG: skb"];
"1000108" -> "1000389"  [label="DDG: skb"];
"1000345" -> "1000389"  [label="DDG: nlh"];
"1000109" -> "1000389"  [label="DDG: nlh"];
"1000396" -> "1000389"  [label="DDG: cda"];
"1000389" -> "1000421"  [label="DDG: nlh"];
"1000389" -> "1000464"  [label="DDG: skb"];
"1000389" -> "1000481"  [label="DDG: skb"];
"1000389" -> "1000490"  [label="DDG: net"];
"1000389" -> "1000495"  [label="DDG: net"];
"1000389" -> "1000504"  [label="DDG: skb"];
"1000431" -> "1000427"  [label="AST: "];
"1000431" -> "1000435"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000435" -> "1000431"  [label="AST: "];
"1000438" -> "1000431"  [label="CFG: "];
"1000431" -> "1000506"  [label="DDG: netlink_ack(oskb, nlmsg_hdr(oskb), -ENOMEM)"];
"1000431" -> "1000506"  [label="DDG: nlmsg_hdr(oskb)"];
"1000431" -> "1000506"  [label="DDG: -ENOMEM"];
"1000433" -> "1000431"  [label="DDG: oskb"];
"1000435" -> "1000431"  [label="DDG: ENOMEM"];
"1000431" -> "1000490"  [label="DDG: oskb"];
"1000431" -> "1000495"  [label="DDG: oskb"];
"1000433" -> "1000434"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000436" -> "1000433"  [label="CFG: "];
"1000145" -> "1000433"  [label="DDG: oskb"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000506"  [label="DDG: GFP_KERNEL"];
"1000145" -> "1000143"  [label="DDG: oskb"];
"1000145" -> "1000143"  [label="DDG: GFP_KERNEL"];
"1000113" -> "1000145"  [label="DDG: oskb"];
"1000145" -> "1000152"  [label="DDG: oskb"];
"1000145" -> "1000184"  [label="DDG: oskb"];
"1000145" -> "1000205"  [label="DDG: oskb"];
"1000145" -> "1000490"  [label="DDG: oskb"];
"1000145" -> "1000495"  [label="DDG: oskb"];
"1000113" -> "1000111"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000118" -> "1000113"  [label="CFG: "];
"1000113" -> "1000506"  [label="DDG: oskb"];
"1000108" -> "1000113"  [label="DDG: skb"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000506"  [label="DDG: skb"];
"1000108" -> "1000134"  [label="DDG: skb"];
"1000108" -> "1000143"  [label="DDG: skb"];
"1000108" -> "1000149"  [label="DDG: skb"];
"1000108" -> "1000190"  [label="DDG: skb"];
"1000108" -> "1000211"  [label="DDG: skb"];
"1000108" -> "1000225"  [label="DDG: skb"];
"1000108" -> "1000464"  [label="DDG: skb"];
"1000108" -> "1000481"  [label="DDG: skb"];
"1000108" -> "1000504"  [label="DDG: skb"];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000435" -> "1000506"  [label="DDG: ENOMEM"];
"1000435" -> "1000155"  [label="DDG: ENOMEM"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000225" -> "1000223"  [label="DDG: skb"];
"1000464" -> "1000225"  [label="DDG: skb"];
"1000149" -> "1000225"  [label="DDG: skb"];
"1000225" -> "1000464"  [label="DDG: skb"];
"1000225" -> "1000481"  [label="DDG: skb"];
"1000225" -> "1000504"  [label="DDG: skb"];
"1000464" -> "1000220"  [label="AST: "];
"1000464" -> "1000466"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000466" -> "1000464"  [label="AST: "];
"1000216" -> "1000464"  [label="CFG: "];
"1000464" -> "1000506"  [label="DDG: skb_pull(skb, msglen)"];
"1000464" -> "1000506"  [label="DDG: msglen"];
"1000454" -> "1000464"  [label="DDG: msglen"];
"1000459" -> "1000464"  [label="DDG: msglen"];
"1000464" -> "1000481"  [label="DDG: skb"];
"1000464" -> "1000504"  [label="DDG: skb"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000460" -> "1000454"  [label="CFG: "];
"1000465" -> "1000454"  [label="CFG: "];
"1000454" -> "1000506"  [label="DDG: msglen > skb->len"];
"1000454" -> "1000214"  [label="DDG: skb->len"];
"1000447" -> "1000454"  [label="DDG: msglen"];
"1000237" -> "1000454"  [label="DDG: skb->len"];
"1000214" -> "1000454"  [label="DDG: skb->len"];
"1000454" -> "1000459"  [label="DDG: skb->len"];
"1000447" -> "1000220"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000455" -> "1000447"  [label="CFG: "];
"1000447" -> "1000506"  [label="DDG: NLMSG_ALIGN(nlh->nlmsg_len)"];
"1000449" -> "1000447"  [label="DDG: nlh->nlmsg_len"];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000449" -> "1000506"  [label="DDG: nlh->nlmsg_len"];
"1000449" -> "1000237"  [label="DDG: nlh->nlmsg_len"];
"1000449" -> "1000352"  [label="DDG: nlh->nlmsg_len"];
"1000352" -> "1000449"  [label="DDG: nlh->nlmsg_len"];
"1000237" -> "1000449"  [label="DDG: nlh->nlmsg_len"];
"1000352" -> "1000350"  [label="AST: "];
"1000352" -> "1000356"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000356" -> "1000352"  [label="AST: "];
"1000350" -> "1000352"  [label="CFG: "];
"1000352" -> "1000506"  [label="DDG: min_len"];
"1000352" -> "1000506"  [label="DDG: nlh->nlmsg_len"];
"1000352" -> "1000237"  [label="DDG: nlh->nlmsg_len"];
"1000352" -> "1000350"  [label="DDG: nlh->nlmsg_len"];
"1000352" -> "1000350"  [label="DDG: min_len"];
"1000237" -> "1000352"  [label="DDG: nlh->nlmsg_len"];
"1000328" -> "1000352"  [label="DDG: min_len"];
"1000237" -> "1000231"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="AST: "];
"1000231" -> "1000237"  [label="CFG: "];
"1000237" -> "1000506"  [label="DDG: skb->len"];
"1000237" -> "1000506"  [label="DDG: nlh->nlmsg_len"];
"1000237" -> "1000214"  [label="DDG: skb->len"];
"1000237" -> "1000231"  [label="DDG: skb->len"];
"1000237" -> "1000231"  [label="DDG: nlh->nlmsg_len"];
"1000214" -> "1000237"  [label="DDG: skb->len"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000224" -> "1000214"  [label="CFG: "];
"1000467" -> "1000214"  [label="CFG: "];
"1000214" -> "1000506"  [label="DDG: skb->len >= nlmsg_total_size(0)"];
"1000214" -> "1000506"  [label="DDG: nlmsg_total_size(0)"];
"1000214" -> "1000506"  [label="DDG: skb->len"];
"1000218" -> "1000214"  [label="DDG: 0"];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000330" -> "1000328"  [label="AST: "];
"1000335" -> "1000328"  [label="CFG: "];
"1000328" -> "1000506"  [label="DDG: nlmsg_total_size(sizeof(struct nfgenmsg))"];
"1000328" -> "1000342"  [label="DDG: min_len"];
"1000328" -> "1000344"  [label="DDG: min_len"];
"1000459" -> "1000453"  [label="AST: "];
"1000459" -> "1000461"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000461" -> "1000459"  [label="AST: "];
"1000465" -> "1000459"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000153" -> "1000149"  [label="CFG: "];
"1000158" -> "1000149"  [label="CFG: "];
"1000149" -> "1000506"  [label="DDG: !skb"];
"1000149" -> "1000506"  [label="DDG: skb"];
"1000143" -> "1000149"  [label="DDG: skb"];
"1000149" -> "1000190"  [label="DDG: skb"];
"1000149" -> "1000211"  [label="DDG: skb"];
"1000149" -> "1000481"  [label="DDG: skb"];
"1000149" -> "1000504"  [label="DDG: skb"];
"1000143" -> "1000111"  [label="AST: "];
"1000144" -> "1000143"  [label="AST: "];
"1000150" -> "1000143"  [label="CFG: "];
"1000143" -> "1000506"  [label="DDG: netlink_skb_clone(oskb, GFP_KERNEL)"];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000347"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000348" -> "1000345"  [label="CFG: "];
"1000345" -> "1000506"  [label="DDG: nlh"];
"1000345" -> "1000152"  [label="DDG: nlh"];
"1000345" -> "1000184"  [label="DDG: nlh"];
"1000345" -> "1000205"  [label="DDG: nlh"];
"1000345" -> "1000342"  [label="DDG: nlh"];
"1000345" -> "1000344"  [label="DDG: nlh"];
"1000233" -> "1000345"  [label="DDG: nlh"];
"1000109" -> "1000345"  [label="DDG: nlh"];
"1000345" -> "1000421"  [label="DDG: nlh"];
"1000233" -> "1000232"  [label="AST: "];
"1000233" -> "1000234"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000236" -> "1000233"  [label="CFG: "];
"1000233" -> "1000506"  [label="DDG: nlh"];
"1000233" -> "1000152"  [label="DDG: nlh"];
"1000233" -> "1000184"  [label="DDG: nlh"];
"1000233" -> "1000205"  [label="DDG: nlh"];
"1000233" -> "1000232"  [label="DDG: nlh"];
"1000223" -> "1000233"  [label="DDG: nlh"];
"1000109" -> "1000233"  [label="DDG: nlh"];
"1000233" -> "1000421"  [label="DDG: nlh"];
"1000223" -> "1000220"  [label="AST: "];
"1000224" -> "1000223"  [label="AST: "];
"1000228" -> "1000223"  [label="CFG: "];
"1000223" -> "1000506"  [label="DDG: nlmsg_hdr(skb)"];
"1000109" -> "1000223"  [label="DDG: nlh"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000506"  [label="DDG: nlh"];
"1000109" -> "1000134"  [label="DDG: nlh"];
"1000109" -> "1000152"  [label="DDG: nlh"];
"1000109" -> "1000184"  [label="DDG: nlh"];
"1000109" -> "1000205"  [label="DDG: nlh"];
"1000109" -> "1000421"  [label="DDG: nlh"];
"1000396" -> "1000398"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000396" -> "1000506"  [label="DDG: cda"];
"1000396" -> "1000359"  [label="DDG: cda"];
"1000359" -> "1000396"  [label="DDG: cda"];
"1000359" -> "1000357"  [label="AST: "];
"1000359" -> "1000370"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000368" -> "1000359"  [label="AST: "];
"1000369" -> "1000359"  [label="AST: "];
"1000370" -> "1000359"  [label="AST: "];
"1000357" -> "1000359"  [label="CFG: "];
"1000359" -> "1000506"  [label="DDG: attrlen"];
"1000359" -> "1000506"  [label="DDG: ss->cb[cb_id].attr_count"];
"1000359" -> "1000506"  [label="DDG: ss->cb[cb_id].policy"];
"1000359" -> "1000506"  [label="DDG: attr"];
"1000359" -> "1000506"  [label="DDG: cda"];
"1000359" -> "1000357"  [label="DDG: ss->cb[cb_id].attr_count"];
"1000359" -> "1000357"  [label="DDG: attrlen"];
"1000359" -> "1000357"  [label="DDG: cda"];
"1000359" -> "1000357"  [label="DDG: ss->cb[cb_id].policy"];
"1000359" -> "1000357"  [label="DDG: attr"];
"1000342" -> "1000359"  [label="DDG: attr"];
"1000350" -> "1000359"  [label="DDG: attrlen"];
"1000342" -> "1000326"  [label="AST: "];
"1000342" -> "1000344"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000351" -> "1000342"  [label="CFG: "];
"1000342" -> "1000506"  [label="DDG: (void *)nlh + min_len"];
"1000350" -> "1000326"  [label="AST: "];
"1000351" -> "1000350"  [label="AST: "];
"1000358" -> "1000350"  [label="CFG: "];
"1000350" -> "1000506"  [label="DDG: nlh->nlmsg_len - min_len"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000506"  [label="DDG: kfree_skb(skb)"];
"1000190" -> "1000506"  [label="DDG: skb"];
"1000190" -> "1000189"  [label="DDG: kfree_skb(skb)"];
"1000189" -> "1000181"  [label="AST: "];
"1000506" -> "1000189"  [label="CFG: "];
"1000189" -> "1000506"  [label="DDG: <RET>"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000506"  [label="DDG: skb"];
"1000211" -> "1000506"  [label="DDG: kfree_skb(skb)"];
"1000211" -> "1000210"  [label="DDG: kfree_skb(skb)"];
"1000210" -> "1000202"  [label="AST: "];
"1000506" -> "1000210"  [label="CFG: "];
"1000210" -> "1000506"  [label="DDG: <RET>"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000155"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -ENOMEM)"];
"1000152" -> "1000506"  [label="DDG: -ENOMEM"];
"1000152" -> "1000506"  [label="DDG: oskb"];
"1000152" -> "1000506"  [label="DDG: nlh"];
"1000152" -> "1000151"  [label="DDG: netlink_ack(oskb, nlh, -ENOMEM)"];
"1000421" -> "1000152"  [label="DDG: nlh"];
"1000155" -> "1000152"  [label="DDG: ENOMEM"];
"1000151" -> "1000148"  [label="AST: "];
"1000506" -> "1000151"  [label="CFG: "];
"1000151" -> "1000506"  [label="DDG: <RET>"];
"1000184" -> "1000181"  [label="AST: "];
"1000184" -> "1000187"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000191" -> "1000184"  [label="CFG: "];
"1000184" -> "1000506"  [label="DDG: nlh"];
"1000184" -> "1000506"  [label="DDG: -EOPNOTSUPP"];
"1000184" -> "1000506"  [label="DDG: oskb"];
"1000184" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -EOPNOTSUPP)"];
"1000421" -> "1000184"  [label="DDG: nlh"];
"1000187" -> "1000184"  [label="DDG: EOPNOTSUPP"];
"1000205" -> "1000202"  [label="AST: "];
"1000205" -> "1000208"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000208" -> "1000205"  [label="AST: "];
"1000212" -> "1000205"  [label="CFG: "];
"1000205" -> "1000506"  [label="DDG: oskb"];
"1000205" -> "1000506"  [label="DDG: -EOPNOTSUPP"];
"1000205" -> "1000506"  [label="DDG: nlh"];
"1000205" -> "1000506"  [label="DDG: netlink_ack(oskb, nlh, -EOPNOTSUPP)"];
"1000421" -> "1000205"  [label="DDG: nlh"];
"1000208" -> "1000205"  [label="DDG: EOPNOTSUPP"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000235"  [label="CFG: "];
"1000235" -> "1000232"  [label="AST: "];
"1000239" -> "1000232"  [label="CFG: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000506"  [label="DDG: nlmsg_len(nlh)"];
"1000232" -> "1000231"  [label="DDG: nlmsg_len(nlh)"];
"1000231" -> "1000230"  [label="AST: "];
"1000246" -> "1000231"  [label="CFG: "];
"1000254" -> "1000231"  [label="CFG: "];
"1000231" -> "1000506"  [label="DDG: skb->len < nlh->nlmsg_len"];
"1000231" -> "1000506"  [label="DDG: nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||\n\t\t    skb->len < nlh->nlmsg_len"];
"1000231" -> "1000506"  [label="DDG: nlmsg_len(nlh) < sizeof(struct nfgenmsg)"];
"1000357" -> "1000326"  [label="AST: "];
"1000358" -> "1000357"  [label="AST: "];
"1000379" -> "1000357"  [label="CFG: "];
"1000357" -> "1000506"  [label="DDG: nla_parse(cda, ss->cb[cb_id].attr_count,\n\t\t\t\t\tattr, attrlen, ss->cb[cb_id].policy)"];
"1000357" -> "1000378"  [label="DDG: err"];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000380"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="CFG: "];
"1000384" -> "1000378"  [label="CFG: "];
"1000378" -> "1000506"  [label="DDG: err < 0"];
"1000378" -> "1000400"  [label="DDG: err"];
"1000378" -> "1000411"  [label="DDG: err"];
"1000400" -> "1000399"  [label="AST: "];
"1000400" -> "1000402"  [label="CFG: "];
"1000401" -> "1000400"  [label="AST: "];
"1000402" -> "1000400"  [label="AST: "];
"1000406" -> "1000400"  [label="CFG: "];
"1000409" -> "1000400"  [label="CFG: "];
"1000400" -> "1000506"  [label="DDG: err"];
"1000400" -> "1000506"  [label="DDG: -EAGAIN"];
"1000400" -> "1000506"  [label="DDG: err == -EAGAIN"];
"1000387" -> "1000400"  [label="DDG: err"];
"1000402" -> "1000400"  [label="DDG: EAGAIN"];
"1000400" -> "1000411"  [label="DDG: err"];
"1000411" -> "1000410"  [label="AST: "];
"1000411" -> "1000412"  [label="CFG: "];
"1000411" -> "1000417"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000417" -> "1000411"  [label="AST: "];
"1000423" -> "1000411"  [label="CFG: "];
"1000446" -> "1000411"  [label="CFG: "];
"1000411" -> "1000506"  [label="DDG: nlh->nlmsg_flags & NLM_F_ACK || err"];
"1000411" -> "1000506"  [label="DDG: nlh->nlmsg_flags & NLM_F_ACK"];
"1000411" -> "1000506"  [label="DDG: err"];
"1000412" -> "1000411"  [label="DDG: nlh->nlmsg_flags"];
"1000412" -> "1000411"  [label="DDG: NLM_F_ACK"];
"1000258" -> "1000411"  [label="DDG: err"];
"1000296" -> "1000411"  [label="DDG: err"];
"1000321" -> "1000411"  [label="DDG: err"];
"1000307" -> "1000411"  [label="DDG: err"];
"1000245" -> "1000411"  [label="DDG: err"];
"1000411" -> "1000421"  [label="DDG: err"];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000425"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000424" -> "1000421"  [label="AST: "];
"1000425" -> "1000421"  [label="AST: "];
"1000426" -> "1000421"  [label="CFG: "];
"1000421" -> "1000506"  [label="DDG: err"];
"1000421" -> "1000506"  [label="DDG: nlh"];
"1000421" -> "1000273"  [label="DDG: &err_list"];
"1000421" -> "1000420"  [label="DDG: &err_list"];
"1000421" -> "1000420"  [label="DDG: nlh"];
"1000421" -> "1000420"  [label="DDG: err"];
"1000476" -> "1000421"  [label="DDG: &err_list"];
"1000421" -> "1000428"  [label="DDG: &err_list"];
"1000421" -> "1000476"  [label="DDG: &err_list"];
"1000421" -> "1000498"  [label="DDG: &err_list"];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
"1000476" -> "1000273"  [label="DDG: &err_list"];
"1000273" -> "1000476"  [label="DDG: &err_list"];
"1000273" -> "1000498"  [label="DDG: &err_list"];
"1000476" -> "1000472"  [label="AST: "];
"1000476" -> "1000477"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="CFG: "];
"1000476" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
"1000476" -> "1000506"  [label="DDG: &err_list"];
"1000428" -> "1000476"  [label="DDG: &err_list"];
"1000476" -> "1000498"  [label="DDG: &err_list"];
"1000498" -> "1000111"  [label="AST: "];
"1000498" -> "1000501"  [label="CFG: "];
"1000499" -> "1000498"  [label="AST: "];
"1000501" -> "1000498"  [label="AST: "];
"1000503" -> "1000498"  [label="CFG: "];
"1000498" -> "1000506"  [label="DDG: nfnl_err_deliver(&err_list, oskb)"];
"1000498" -> "1000506"  [label="DDG: &err_list"];
"1000498" -> "1000506"  [label="DDG: oskb"];
"1000428" -> "1000498"  [label="DDG: &err_list"];
"1000495" -> "1000498"  [label="DDG: oskb"];
"1000490" -> "1000498"  [label="DDG: oskb"];
"1000420" -> "1000419"  [label="AST: "];
"1000420" -> "1000426"  [label="CFG: "];
"1000426" -> "1000420"  [label="AST: "];
"1000430" -> "1000420"  [label="CFG: "];
"1000442" -> "1000420"  [label="CFG: "];
"1000420" -> "1000506"  [label="DDG: nfnl_err_add(&err_list, nlh, err) < 0"];
"1000420" -> "1000506"  [label="DDG: nfnl_err_add(&err_list, nlh, err)"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000429"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000432" -> "1000428"  [label="CFG: "];
"1000428" -> "1000506"  [label="DDG: nfnl_err_reset(&err_list)"];
"1000387" -> "1000386"  [label="AST: "];
"1000388" -> "1000387"  [label="AST: "];
"1000401" -> "1000387"  [label="CFG: "];
"1000387" -> "1000506"  [label="DDG: nc->call_batch(net, net->nfnl, skb, nlh,\n\t\t\t\t\t\t     (const struct nlattr **)cda)"];
"1000481" -> "1000472"  [label="AST: "];
"1000481" -> "1000482"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="CFG: "];
"1000481" -> "1000506"  [label="DDG: kfree_skb(skb)"];
"1000504" -> "1000111"  [label="AST: "];
"1000504" -> "1000505"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="CFG: "];
"1000504" -> "1000506"  [label="DDG: skb"];
"1000504" -> "1000506"  [label="DDG: kfree_skb(skb)"];
"1000490" -> "1000489"  [label="AST: "];
"1000490" -> "1000492"  [label="CFG: "];
"1000491" -> "1000490"  [label="AST: "];
"1000492" -> "1000490"  [label="AST: "];
"1000500" -> "1000490"  [label="CFG: "];
"1000490" -> "1000506"  [label="DDG: net"];
"1000490" -> "1000506"  [label="DDG: ss->commit(net, oskb)"];
"1000495" -> "1000494"  [label="AST: "];
"1000495" -> "1000497"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000497" -> "1000495"  [label="AST: "];
"1000500" -> "1000495"  [label="CFG: "];
"1000495" -> "1000506"  [label="DDG: net"];
"1000495" -> "1000506"  [label="DDG: ss->abort(net, oskb)"];
"1000344" -> "1000348"  [label="CFG: "];
"1000348" -> "1000344"  [label="AST: "];
"1000344" -> "1000506"  [label="DDG: (void *)nlh"];
}
