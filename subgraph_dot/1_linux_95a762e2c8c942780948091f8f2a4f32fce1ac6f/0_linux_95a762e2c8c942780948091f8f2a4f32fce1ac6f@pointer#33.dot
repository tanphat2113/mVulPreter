digraph "0_linux_95a762e2c8c942780948091f8f2a4f32fce1ac6f@pointer" {
"1000449" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000445" [label="(Call,opcode > BPF_END)"];
"1000263" [label="(Call,opcode == BPF_MOV)"];
"1000131" [label="(Call,opcode == BPF_END)"];
"1000122" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000134" [label="(Call,opcode == BPF_NEG)"];
"1000552" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000603" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000625" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000117" [label="(Call,*regs = cur_regs(env))"];
"1000146" [label="(Call,BPF_SRC(insn->code))"];
"1000321" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000251" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000125" [label="(Call,insn->code)"];
"1000446" [label="(Identifier,opcode)"];
"1000329" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000130" [label="(Call,opcode == BPF_END || opcode == BPF_NEG)"];
"1000122" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000448" [label="(Block,)"];
"1000263" [label="(Call,opcode == BPF_MOV)"];
"1000450" [label="(Identifier,env)"];
"1000240" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000444" [label="(ControlStructure,if (opcode > BPF_END))"];
"1000262" [label="(ControlStructure,if (opcode == BPF_MOV))"];
"1000451" [label="(Literal,\"invalid BPF_ALU opcode %x\n\")"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000271" [label="(Identifier,insn)"];
"1000449" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000455" [label="(Identifier,EINVAL)"];
"1000288" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000115" [label="(Block,)"];
"1000462" [label="(Identifier,insn)"];
"1000135" [label="(Identifier,opcode)"];
"1000264" [label="(Identifier,opcode)"];
"1000169" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000139" [label="(Call,opcode == BPF_NEG)"];
"1000119" [label="(Call,cur_regs(env))"];
"1000452" [label="(Identifier,opcode)"];
"1000209" [label="(Call,BPF_CLASS(insn->code))"];
"1000136" [label="(Identifier,BPF_NEG)"];
"1000120" [label="(Identifier,env)"];
"1000447" [label="(Identifier,BPF_END)"];
"1000479" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000131" [label="(Call,opcode == BPF_END)"];
"1000296" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000269" [label="(Call,BPF_SRC(insn->code))"];
"1000487" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000223" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000215" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000378" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000133" [label="(Identifier,BPF_END)"];
"1000132" [label="(Identifier,opcode)"];
"1000630" [label="(MethodReturn,static int)"];
"1000393" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000512" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000520" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000533" [label="(Call,opcode == BPF_MOD)"];
"1000134" [label="(Call,opcode == BPF_NEG)"];
"1000234" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000460" [label="(Call,BPF_SRC(insn->code))"];
"1000265" [label="(Identifier,BPF_MOV)"];
"1000384" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000123" [label="(Identifier,opcode)"];
"1000445" [label="(Call,opcode > BPF_END)"];
"1000614" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000449" -> "1000448"  [label="AST: "];
"1000449" -> "1000452"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="AST: "];
"1000452" -> "1000449"  [label="AST: "];
"1000455" -> "1000449"  [label="CFG: "];
"1000449" -> "1000630"  [label="DDG: "];
"1000449" -> "1000630"  [label="DDG: "];
"1000449" -> "1000630"  [label="DDG: "];
"1000119" -> "1000449"  [label="DDG: "];
"1000113" -> "1000449"  [label="DDG: "];
"1000445" -> "1000449"  [label="DDG: "];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: "];
"1000113" -> "1000119"  [label="DDG: "];
"1000119" -> "1000169"  [label="DDG: "];
"1000119" -> "1000215"  [label="DDG: "];
"1000119" -> "1000223"  [label="DDG: "];
"1000119" -> "1000288"  [label="DDG: "];
"1000119" -> "1000296"  [label="DDG: "];
"1000119" -> "1000321"  [label="DDG: "];
"1000119" -> "1000329"  [label="DDG: "];
"1000119" -> "1000479"  [label="DDG: "];
"1000119" -> "1000487"  [label="DDG: "];
"1000119" -> "1000512"  [label="DDG: "];
"1000119" -> "1000520"  [label="DDG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000630"  [label="DDG: "];
"1000113" -> "1000169"  [label="DDG: "];
"1000113" -> "1000215"  [label="DDG: "];
"1000113" -> "1000223"  [label="DDG: "];
"1000113" -> "1000234"  [label="DDG: "];
"1000113" -> "1000240"  [label="DDG: "];
"1000113" -> "1000251"  [label="DDG: "];
"1000113" -> "1000288"  [label="DDG: "];
"1000113" -> "1000296"  [label="DDG: "];
"1000113" -> "1000321"  [label="DDG: "];
"1000113" -> "1000329"  [label="DDG: "];
"1000113" -> "1000378"  [label="DDG: "];
"1000113" -> "1000384"  [label="DDG: "];
"1000113" -> "1000393"  [label="DDG: "];
"1000113" -> "1000479"  [label="DDG: "];
"1000113" -> "1000487"  [label="DDG: "];
"1000113" -> "1000512"  [label="DDG: "];
"1000113" -> "1000520"  [label="DDG: "];
"1000113" -> "1000552"  [label="DDG: "];
"1000113" -> "1000603"  [label="DDG: "];
"1000113" -> "1000614"  [label="DDG: "];
"1000113" -> "1000625"  [label="DDG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000445" -> "1000447"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000450" -> "1000445"  [label="CFG: "];
"1000462" -> "1000445"  [label="CFG: "];
"1000445" -> "1000630"  [label="DDG: "];
"1000445" -> "1000630"  [label="DDG: "];
"1000445" -> "1000630"  [label="DDG: "];
"1000263" -> "1000445"  [label="DDG: "];
"1000131" -> "1000445"  [label="DDG: "];
"1000445" -> "1000533"  [label="DDG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000265"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000271" -> "1000263"  [label="CFG: "];
"1000446" -> "1000263"  [label="CFG: "];
"1000263" -> "1000630"  [label="DDG: "];
"1000263" -> "1000630"  [label="DDG: "];
"1000263" -> "1000630"  [label="DDG: "];
"1000131" -> "1000263"  [label="DDG: "];
"1000134" -> "1000263"  [label="DDG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000630"  [label="DDG: "];
"1000131" -> "1000130"  [label="DDG: "];
"1000131" -> "1000130"  [label="DDG: "];
"1000122" -> "1000131"  [label="DDG: "];
"1000131" -> "1000134"  [label="DDG: "];
"1000131" -> "1000139"  [label="DDG: "];
"1000122" -> "1000115"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000132" -> "1000122"  [label="CFG: "];
"1000122" -> "1000630"  [label="DDG: "];
"1000124" -> "1000122"  [label="DDG: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000124" -> "1000630"  [label="DDG: "];
"1000124" -> "1000146"  [label="DDG: "];
"1000124" -> "1000209"  [label="DDG: "];
"1000124" -> "1000269"  [label="DDG: "];
"1000124" -> "1000460"  [label="DDG: "];
"1000134" -> "1000130"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000130" -> "1000134"  [label="CFG: "];
"1000134" -> "1000630"  [label="DDG: "];
"1000134" -> "1000130"  [label="DDG: "];
"1000134" -> "1000130"  [label="DDG: "];
"1000134" -> "1000139"  [label="DDG: "];
"1000134" -> "1000139"  [label="DDG: "];
}
