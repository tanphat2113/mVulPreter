digraph "0_linux_95a762e2c8c942780948091f8f2a4f32fce1ac6f@pointer" {
"1000614" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000520" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000487" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000612" [label="(Call,err = check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000622" [label="(Return,return err;)"];
"1000625" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000624" [label="(Return,return adjust_reg_min_max_vals(env, insn);)"];
"1000552" [label="(Call,verbose(env, \"div by zero\n\"))"];
"1000603" [label="(Call,verbose(env, \"invalid shift %d\n\", insn->imm))"];
"1000625" [label="(Call,adjust_reg_min_max_vals(env, insn))"];
"1000489" [label="(Call,insn->src_reg)"];
"1000117" [label="(Call,*regs = cur_regs(env))"];
"1000616" [label="(Call,insn->dst_reg)"];
"1000321" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000251" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000626" [label="(Identifier,env)"];
"1000329" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP))"];
"1000623" [label="(Identifier,err)"];
"1000240" [label="(Call,verbose(env, \"R%d pointer arithmetic prohibited\n\",\n\t\t\t\tinsn->dst_reg))"];
"1000624" [label="(Return,return adjust_reg_min_max_vals(env, insn);)"];
"1000622" [label="(Return,return err;)"];
"1000518" [label="(Call,err = check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000113" [label="(MethodParameterIn,struct bpf_verifier_env *env)"];
"1000449" [label="(Call,verbose(env, \"invalid BPF_ALU opcode %x\n\", opcode))"];
"1000619" [label="(Identifier,DST_OP_NO_MARK)"];
"1000522" [label="(Call,insn->dst_reg)"];
"1000288" [label="(Call,verbose(env, \"BPF_MOV uses reserved fields\n\"))"];
"1000169" [label="(Call,verbose(env, \"BPF_NEG uses reserved fields\n\"))"];
"1000114" [label="(MethodParameterIn,struct bpf_insn *insn)"];
"1000485" [label="(Call,err = check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000119" [label="(Call,cur_regs(env))"];
"1000615" [label="(Identifier,env)"];
"1000492" [label="(Identifier,SRC_OP)"];
"1000120" [label="(Identifier,env)"];
"1000479" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000612" [label="(Call,err = check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000296" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000488" [label="(Identifier,env)"];
"1000487" [label="(Call,check_reg_arg(env, insn->src_reg, SRC_OP))"];
"1000215" [label="(Call,verbose(env, \"BPF_END uses reserved fields\n\"))"];
"1000223" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000378" [label="(Call,is_pointer_value(env, insn->src_reg))"];
"1000627" [label="(Identifier,insn)"];
"1000521" [label="(Identifier,env)"];
"1000630" [label="(MethodReturn,static int)"];
"1000393" [label="(Call,mark_reg_unknown(env, regs, insn->dst_reg))"];
"1000457" [label="(Block,)"];
"1000613" [label="(Identifier,err)"];
"1000620" [label="(ControlStructure,if (err))"];
"1000512" [label="(Call,verbose(env, \"BPF_ALU uses reserved fields\n\"))"];
"1000520" [label="(Call,check_reg_arg(env, insn->dst_reg, SRC_OP))"];
"1000234" [label="(Call,is_pointer_value(env, insn->dst_reg))"];
"1000621" [label="(Identifier,err)"];
"1000384" [label="(Call,verbose(env,\n\t\t\t\t\t\t\"R%d partial copy of pointer\n\",\n\t\t\t\t\t\tinsn->src_reg))"];
"1000614" [label="(Call,check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK))"];
"1000525" [label="(Identifier,SRC_OP)"];
"1000614" -> "1000612"  [label="AST: "];
"1000614" -> "1000619"  [label="CFG: "];
"1000615" -> "1000614"  [label="AST: "];
"1000616" -> "1000614"  [label="AST: "];
"1000619" -> "1000614"  [label="AST: "];
"1000612" -> "1000614"  [label="CFG: "];
"1000614" -> "1000630"  [label="DDG: insn->dst_reg"];
"1000614" -> "1000630"  [label="DDG: env"];
"1000614" -> "1000630"  [label="DDG: DST_OP_NO_MARK"];
"1000614" -> "1000612"  [label="DDG: env"];
"1000614" -> "1000612"  [label="DDG: insn->dst_reg"];
"1000614" -> "1000612"  [label="DDG: DST_OP_NO_MARK"];
"1000520" -> "1000614"  [label="DDG: env"];
"1000520" -> "1000614"  [label="DDG: insn->dst_reg"];
"1000113" -> "1000614"  [label="DDG: env"];
"1000614" -> "1000625"  [label="DDG: env"];
"1000520" -> "1000518"  [label="AST: "];
"1000520" -> "1000525"  [label="CFG: "];
"1000521" -> "1000520"  [label="AST: "];
"1000522" -> "1000520"  [label="AST: "];
"1000525" -> "1000520"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000520" -> "1000630"  [label="DDG: SRC_OP"];
"1000520" -> "1000630"  [label="DDG: insn->dst_reg"];
"1000520" -> "1000630"  [label="DDG: env"];
"1000520" -> "1000518"  [label="DDG: env"];
"1000520" -> "1000518"  [label="DDG: insn->dst_reg"];
"1000520" -> "1000518"  [label="DDG: SRC_OP"];
"1000487" -> "1000520"  [label="DDG: env"];
"1000487" -> "1000520"  [label="DDG: SRC_OP"];
"1000119" -> "1000520"  [label="DDG: env"];
"1000113" -> "1000520"  [label="DDG: env"];
"1000520" -> "1000552"  [label="DDG: env"];
"1000520" -> "1000603"  [label="DDG: env"];
"1000487" -> "1000485"  [label="AST: "];
"1000487" -> "1000492"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000489" -> "1000487"  [label="AST: "];
"1000492" -> "1000487"  [label="AST: "];
"1000485" -> "1000487"  [label="CFG: "];
"1000487" -> "1000630"  [label="DDG: insn->src_reg"];
"1000487" -> "1000630"  [label="DDG: env"];
"1000487" -> "1000630"  [label="DDG: SRC_OP"];
"1000487" -> "1000485"  [label="DDG: env"];
"1000487" -> "1000485"  [label="DDG: insn->src_reg"];
"1000487" -> "1000485"  [label="DDG: SRC_OP"];
"1000119" -> "1000487"  [label="DDG: env"];
"1000113" -> "1000487"  [label="DDG: env"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000117"  [label="DDG: env"];
"1000113" -> "1000119"  [label="DDG: env"];
"1000119" -> "1000169"  [label="DDG: env"];
"1000119" -> "1000215"  [label="DDG: env"];
"1000119" -> "1000223"  [label="DDG: env"];
"1000119" -> "1000288"  [label="DDG: env"];
"1000119" -> "1000296"  [label="DDG: env"];
"1000119" -> "1000321"  [label="DDG: env"];
"1000119" -> "1000329"  [label="DDG: env"];
"1000119" -> "1000449"  [label="DDG: env"];
"1000119" -> "1000479"  [label="DDG: env"];
"1000119" -> "1000512"  [label="DDG: env"];
"1000113" -> "1000112"  [label="AST: "];
"1000113" -> "1000630"  [label="DDG: env"];
"1000113" -> "1000169"  [label="DDG: env"];
"1000113" -> "1000215"  [label="DDG: env"];
"1000113" -> "1000223"  [label="DDG: env"];
"1000113" -> "1000234"  [label="DDG: env"];
"1000113" -> "1000240"  [label="DDG: env"];
"1000113" -> "1000251"  [label="DDG: env"];
"1000113" -> "1000288"  [label="DDG: env"];
"1000113" -> "1000296"  [label="DDG: env"];
"1000113" -> "1000321"  [label="DDG: env"];
"1000113" -> "1000329"  [label="DDG: env"];
"1000113" -> "1000378"  [label="DDG: env"];
"1000113" -> "1000384"  [label="DDG: env"];
"1000113" -> "1000393"  [label="DDG: env"];
"1000113" -> "1000449"  [label="DDG: env"];
"1000113" -> "1000479"  [label="DDG: env"];
"1000113" -> "1000512"  [label="DDG: env"];
"1000113" -> "1000552"  [label="DDG: env"];
"1000113" -> "1000603"  [label="DDG: env"];
"1000113" -> "1000625"  [label="DDG: env"];
"1000612" -> "1000457"  [label="AST: "];
"1000613" -> "1000612"  [label="AST: "];
"1000621" -> "1000612"  [label="CFG: "];
"1000612" -> "1000630"  [label="DDG: check_reg_arg(env, insn->dst_reg, DST_OP_NO_MARK)"];
"1000612" -> "1000630"  [label="DDG: err"];
"1000612" -> "1000622"  [label="DDG: err"];
"1000622" -> "1000620"  [label="AST: "];
"1000622" -> "1000623"  [label="CFG: "];
"1000623" -> "1000622"  [label="AST: "];
"1000630" -> "1000622"  [label="CFG: "];
"1000622" -> "1000630"  [label="DDG: <RET>"];
"1000623" -> "1000622"  [label="DDG: err"];
"1000625" -> "1000624"  [label="AST: "];
"1000625" -> "1000627"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000625"  [label="AST: "];
"1000624" -> "1000625"  [label="CFG: "];
"1000625" -> "1000630"  [label="DDG: env"];
"1000625" -> "1000630"  [label="DDG: insn"];
"1000625" -> "1000630"  [label="DDG: adjust_reg_min_max_vals(env, insn)"];
"1000625" -> "1000624"  [label="DDG: adjust_reg_min_max_vals(env, insn)"];
"1000114" -> "1000625"  [label="DDG: insn"];
"1000624" -> "1000457"  [label="AST: "];
"1000630" -> "1000624"  [label="CFG: "];
"1000624" -> "1000630"  [label="DDG: <RET>"];
}
