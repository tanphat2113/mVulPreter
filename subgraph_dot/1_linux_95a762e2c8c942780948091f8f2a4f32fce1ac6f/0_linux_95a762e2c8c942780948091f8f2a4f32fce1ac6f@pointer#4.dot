digraph "0_linux_95a762e2c8c942780948091f8f2a4f32fce1ac6f@pointer" {
"1000541" [label="(Call,BPF_SRC(insn->code))"];
"1000460" [label="(Call,BPF_SRC(insn->code))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000540" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000539" [label="(Call,BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000531" [label="(Call,(opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000559" [label="(Call,(opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K)"];
"1000571" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000572" [label="(Call,BPF_SRC(insn->code))"];
"1000583" [label="(Call,BPF_CLASS(insn->code))"];
"1000582" [label="(Call,BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000589" [label="(Literal,32)"];
"1000146" [label="(Call,BPF_SRC(insn->code))"];
"1000560" [label="(Call,opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH)"];
"1000532" [label="(Call,opcode == BPF_MOD || opcode == BPF_DIV)"];
"1000464" [label="(Identifier,BPF_X)"];
"1000576" [label="(Identifier,BPF_K)"];
"1000581" [label="(Call,BPF_CLASS(insn->code) == BPF_ALU64 ? 64 : 32)"];
"1000542" [label="(Call,insn->code)"];
"1000572" [label="(Call,BPF_SRC(insn->code))"];
"1000124" [label="(Call,BPF_OP(insn->code))"];
"1000125" [label="(Call,insn->code)"];
"1000559" [label="(Call,(opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K)"];
"1000122" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000571" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000541" [label="(Call,BPF_SRC(insn->code))"];
"1000562" [label="(Identifier,opcode)"];
"1000545" [label="(Identifier,BPF_K)"];
"1000553" [label="(Identifier,env)"];
"1000546" [label="(Call,insn->imm == 0)"];
"1000531" [label="(Call,(opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000461" [label="(Call,insn->code)"];
"1000530" [label="(ControlStructure,if ((opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0))"];
"1000209" [label="(Call,BPF_CLASS(insn->code))"];
"1000548" [label="(Identifier,insn)"];
"1000459" [label="(Call,BPF_SRC(insn->code) == BPF_X)"];
"1000582" [label="(Call,BPF_CLASS(insn->code) == BPF_ALU64)"];
"1000587" [label="(Identifier,BPF_ALU64)"];
"1000269" [label="(Call,BPF_SRC(insn->code))"];
"1000588" [label="(Literal,64)"];
"1000539" [label="(Call,BPF_SRC(insn->code) == BPF_K && insn->imm == 0)"];
"1000583" [label="(Call,BPF_CLASS(insn->code))"];
"1000584" [label="(Call,insn->code)"];
"1000630" [label="(MethodReturn,static int)"];
"1000613" [label="(Identifier,err)"];
"1000558" [label="(ControlStructure,if ((opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K))"];
"1000460" [label="(Call,BPF_SRC(insn->code))"];
"1000573" [label="(Call,insn->code)"];
"1000540" [label="(Call,BPF_SRC(insn->code) == BPF_K)"];
"1000580" [label="(Identifier,size)"];
"1000541" -> "1000540"  [label="AST: "];
"1000541" -> "1000542"  [label="CFG: "];
"1000542" -> "1000541"  [label="AST: "];
"1000545" -> "1000541"  [label="CFG: "];
"1000541" -> "1000630"  [label="DDG: insn->code"];
"1000541" -> "1000540"  [label="DDG: insn->code"];
"1000460" -> "1000541"  [label="DDG: insn->code"];
"1000541" -> "1000572"  [label="DDG: insn->code"];
"1000541" -> "1000583"  [label="DDG: insn->code"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000464" -> "1000460"  [label="CFG: "];
"1000460" -> "1000630"  [label="DDG: insn->code"];
"1000460" -> "1000459"  [label="DDG: insn->code"];
"1000124" -> "1000460"  [label="DDG: insn->code"];
"1000460" -> "1000572"  [label="DDG: insn->code"];
"1000460" -> "1000583"  [label="DDG: insn->code"];
"1000124" -> "1000122"  [label="AST: "];
"1000124" -> "1000125"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000124" -> "1000630"  [label="DDG: insn->code"];
"1000124" -> "1000122"  [label="DDG: insn->code"];
"1000124" -> "1000146"  [label="DDG: insn->code"];
"1000124" -> "1000209"  [label="DDG: insn->code"];
"1000124" -> "1000269"  [label="DDG: insn->code"];
"1000540" -> "1000539"  [label="AST: "];
"1000540" -> "1000545"  [label="CFG: "];
"1000545" -> "1000540"  [label="AST: "];
"1000548" -> "1000540"  [label="CFG: "];
"1000539" -> "1000540"  [label="CFG: "];
"1000540" -> "1000630"  [label="DDG: BPF_K"];
"1000540" -> "1000630"  [label="DDG: BPF_SRC(insn->code)"];
"1000540" -> "1000539"  [label="DDG: BPF_SRC(insn->code)"];
"1000540" -> "1000539"  [label="DDG: BPF_K"];
"1000540" -> "1000571"  [label="DDG: BPF_K"];
"1000539" -> "1000531"  [label="AST: "];
"1000539" -> "1000546"  [label="CFG: "];
"1000546" -> "1000539"  [label="AST: "];
"1000531" -> "1000539"  [label="CFG: "];
"1000539" -> "1000630"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000539" -> "1000630"  [label="DDG: insn->imm == 0"];
"1000539" -> "1000531"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000539" -> "1000531"  [label="DDG: insn->imm == 0"];
"1000546" -> "1000539"  [label="DDG: insn->imm"];
"1000546" -> "1000539"  [label="DDG: 0"];
"1000539" -> "1000559"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000531" -> "1000530"  [label="AST: "];
"1000531" -> "1000532"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000553" -> "1000531"  [label="CFG: "];
"1000562" -> "1000531"  [label="CFG: "];
"1000531" -> "1000630"  [label="DDG: (opcode == BPF_MOD || opcode == BPF_DIV) &&\n\t\t    BPF_SRC(insn->code) == BPF_K && insn->imm == 0"];
"1000531" -> "1000630"  [label="DDG: BPF_SRC(insn->code) == BPF_K && insn->imm == 0"];
"1000531" -> "1000630"  [label="DDG: opcode == BPF_MOD || opcode == BPF_DIV"];
"1000532" -> "1000531"  [label="DDG: opcode == BPF_MOD"];
"1000532" -> "1000531"  [label="DDG: opcode == BPF_DIV"];
"1000559" -> "1000558"  [label="AST: "];
"1000559" -> "1000560"  [label="CFG: "];
"1000559" -> "1000571"  [label="CFG: "];
"1000560" -> "1000559"  [label="AST: "];
"1000571" -> "1000559"  [label="AST: "];
"1000580" -> "1000559"  [label="CFG: "];
"1000613" -> "1000559"  [label="CFG: "];
"1000559" -> "1000630"  [label="DDG: opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH"];
"1000559" -> "1000630"  [label="DDG: BPF_SRC(insn->code) == BPF_K"];
"1000559" -> "1000630"  [label="DDG: (opcode == BPF_LSH || opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH) && BPF_SRC(insn->code) == BPF_K"];
"1000560" -> "1000559"  [label="DDG: opcode == BPF_LSH"];
"1000560" -> "1000559"  [label="DDG: opcode == BPF_RSH ||\n\t\t     opcode == BPF_ARSH"];
"1000571" -> "1000559"  [label="DDG: BPF_SRC(insn->code)"];
"1000571" -> "1000559"  [label="DDG: BPF_K"];
"1000571" -> "1000576"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000576" -> "1000571"  [label="AST: "];
"1000571" -> "1000630"  [label="DDG: BPF_SRC(insn->code)"];
"1000571" -> "1000630"  [label="DDG: BPF_K"];
"1000572" -> "1000571"  [label="DDG: insn->code"];
"1000572" -> "1000573"  [label="CFG: "];
"1000573" -> "1000572"  [label="AST: "];
"1000576" -> "1000572"  [label="CFG: "];
"1000572" -> "1000630"  [label="DDG: insn->code"];
"1000572" -> "1000583"  [label="DDG: insn->code"];
"1000583" -> "1000582"  [label="AST: "];
"1000583" -> "1000584"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000587" -> "1000583"  [label="CFG: "];
"1000583" -> "1000630"  [label="DDG: insn->code"];
"1000583" -> "1000582"  [label="DDG: insn->code"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000587"  [label="CFG: "];
"1000587" -> "1000582"  [label="AST: "];
"1000588" -> "1000582"  [label="CFG: "];
"1000589" -> "1000582"  [label="CFG: "];
"1000582" -> "1000630"  [label="DDG: BPF_CLASS(insn->code)"];
"1000582" -> "1000630"  [label="DDG: BPF_ALU64"];
}
