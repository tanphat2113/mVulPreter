digraph "0_Android_472271b153c5dc53c28beac55480a8d8434b2d5c_24@API" {
"1000165" [label="(Call,sizeof(BT_HDR) - buffer->offset)"];
"1000153" [label="(Call,buffer->offset = PAN_MINIMUM_OFFSET)"];
"1000162" [label="(Call,GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000158" [label="(Call,buffer->len = GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000246" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000241" [label="(Call,memcpy(packet, btpan_cb.congest_packet, MIN(btpan_cb.congest_packet_size, buffer->len)))"];
"1000273" [label="(Call,(tETH_HDR *)packet)"];
"1000272" [label="(Call,should_forward((tETH_HDR *)packet))"];
"1000265" [label="(Call,buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet))"];
"1000278" [label="(Call,memcpy(&hdr, packet, sizeof(tETH_HDR)))"];
"1000298" [label="(Call,forward_bnep(&hdr, buffer))"];
"1000297" [label="(Call,forward_bnep(&hdr, buffer) != FORWARD_CONGEST)"];
"1000257" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000185" [label="(Call,!btpan_cb.congest_packet_size)"];
"1000253" [label="(Call,buffer->len = MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000266" [label="(Call,buffer->len > sizeof(tETH_HDR))"];
"1000284" [label="(Call,buffer->len -= sizeof(tETH_HDR))"];
"1000310" [label="(Call,BTIF_TRACE_WARNING(\"%s dropping packet of length %d\", __func__, buffer->len))"];
"1000149" [label="(Call,BTIF_TRACE_WARNING(\"%s unable to allocate buffer for packet.\", __func__))"];
"1000222" [label="(Call,BTIF_TRACE_WARNING(\"%s end of file reached.\", __func__))"];
"1000172" [label="(Call,*packet = (UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000174" [label="(Call,(UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000178" [label="(Call,sizeof(BT_HDR) + buffer->offset)"];
"1000290" [label="(Call,buffer->offset += sizeof(tETH_HDR))"];
"1000246" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000281" [label="(Identifier,packet)"];
"1000175" [label="(Call,(UINT8 *)buffer)"];
"1000296" [label="(ControlStructure,if (forward_bnep(&hdr, buffer) != FORWARD_CONGEST))"];
"1000272" [label="(Call,should_forward((tETH_HDR *)packet))"];
"1000282" [label="(Call,sizeof(tETH_HDR))"];
"1000153" [label="(Call,buffer->offset = PAN_MINIMUM_OFFSET)"];
"1000235" [label="(Call,btpan_cb.congest_packet_size = ret)"];
"1000267" [label="(Call,buffer->len)"];
"1000300" [label="(Identifier,hdr)"];
"1000266" [label="(Call,buffer->len > sizeof(tETH_HDR))"];
"1000258" [label="(Call,btpan_cb.congest_packet_size)"];
"1000150" [label="(Literal,\"%s unable to allocate buffer for packet.\")"];
"1000192" [label="(Identifier,ret)"];
"1000257" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000280" [label="(Identifier,hdr)"];
"1000297" [label="(Call,forward_bnep(&hdr, buffer) != FORWARD_CONGEST)"];
"1000276" [label="(Block,)"];
"1000241" [label="(Call,memcpy(packet, btpan_cb.congest_packet, MIN(btpan_cb.congest_packet_size, buffer->len)))"];
"1000318" [label="(Identifier,btpan_cb)"];
"1000166" [label="(Call,sizeof(BT_HDR))"];
"1000181" [label="(Call,buffer->offset)"];
"1000302" [label="(Identifier,FORWARD_CONGEST)"];
"1000194" [label="(Call,read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet)))"];
"1000226" [label="(Identifier,buffer)"];
"1000162" [label="(Call,GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000242" [label="(Identifier,packet)"];
"1000163" [label="(Call,GKI_get_buf_size(buffer))"];
"1000265" [label="(Call,buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet))"];
"1000261" [label="(Call,buffer->len)"];
"1000325" [label="(Identifier,ufd)"];
"1000312" [label="(Identifier,__func__)"];
"1000284" [label="(Call,buffer->len -= sizeof(tETH_HDR))"];
"1000275" [label="(Identifier,packet)"];
"1000185" [label="(Call,!btpan_cb.congest_packet_size)"];
"1000222" [label="(Call,BTIF_TRACE_WARNING(\"%s end of file reached.\", __func__))"];
"1000298" [label="(Call,forward_bnep(&hdr, buffer))"];
"1000305" [label="(Identifier,btpan_cb)"];
"1000152" [label="(ControlStructure,break;)"];
"1000303" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000158" [label="(Call,buffer->len = GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000137" [label="(Block,)"];
"1000285" [label="(Call,buffer->len)"];
"1000255" [label="(Identifier,buffer)"];
"1000279" [label="(Call,&hdr)"];
"1000250" [label="(Call,buffer->len)"];
"1000154" [label="(Call,buffer->offset)"];
"1000268" [label="(Identifier,buffer)"];
"1000173" [label="(Identifier,packet)"];
"1000253" [label="(Call,buffer->len = MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000270" [label="(Call,sizeof(tETH_HDR))"];
"1000223" [label="(Literal,\"%s end of file reached.\")"];
"1000151" [label="(Identifier,__func__)"];
"1000254" [label="(Call,buffer->len)"];
"1000311" [label="(Literal,\"%s dropping packet of length %d\")"];
"1000310" [label="(Call,BTIF_TRACE_WARNING(\"%s dropping packet of length %d\", __func__, buffer->len))"];
"1000165" [label="(Call,sizeof(BT_HDR) - buffer->offset)"];
"1000309" [label="(Block,)"];
"1000149" [label="(Call,BTIF_TRACE_WARNING(\"%s unable to allocate buffer for packet.\", __func__))"];
"1000187" [label="(Identifier,btpan_cb)"];
"1000148" [label="(Block,)"];
"1000286" [label="(Identifier,buffer)"];
"1000243" [label="(Call,btpan_cb.congest_packet)"];
"1000299" [label="(Call,&hdr)"];
"1000291" [label="(Call,buffer->offset)"];
"1000157" [label="(Identifier,PAN_MINIMUM_OFFSET)"];
"1000294" [label="(Call,sizeof(tETH_HDR))"];
"1000168" [label="(Call,buffer->offset)"];
"1000316" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000273" [label="(Call,(tETH_HDR *)packet)"];
"1000186" [label="(Call,btpan_cb.congest_packet_size)"];
"1000359" [label="(MethodReturn,static void)"];
"1000301" [label="(Identifier,buffer)"];
"1000160" [label="(Identifier,buffer)"];
"1000174" [label="(Call,(UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000290" [label="(Call,buffer->offset += sizeof(tETH_HDR))"];
"1000313" [label="(Call,buffer->len)"];
"1000184" [label="(ControlStructure,if (!btpan_cb.congest_packet_size))"];
"1000292" [label="(Identifier,buffer)"];
"1000178" [label="(Call,sizeof(BT_HDR) + buffer->offset)"];
"1000247" [label="(Call,btpan_cb.congest_packet_size)"];
"1000288" [label="(Call,sizeof(tETH_HDR))"];
"1000224" [label="(Identifier,__func__)"];
"1000264" [label="(ControlStructure,if (buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet)))"];
"1000278" [label="(Call,memcpy(&hdr, packet, sizeof(tETH_HDR)))"];
"1000159" [label="(Call,buffer->len)"];
"1000179" [label="(Call,sizeof(BT_HDR))"];
"1000205" [label="(Block,)"];
"1000172" [label="(Call,*packet = (UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000165" -> "1000162"  [label="AST: "];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000162" -> "1000165"  [label="CFG: "];
"1000165" -> "1000162"  [label="DDG: "];
"1000153" -> "1000165"  [label="DDG: "];
"1000165" -> "1000172"  [label="DDG: "];
"1000165" -> "1000174"  [label="DDG: "];
"1000165" -> "1000178"  [label="DDG: "];
"1000165" -> "1000290"  [label="DDG: "];
"1000153" -> "1000137"  [label="AST: "];
"1000153" -> "1000157"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="AST: "];
"1000160" -> "1000153"  [label="CFG: "];
"1000153" -> "1000359"  [label="DDG: "];
"1000162" -> "1000158"  [label="AST: "];
"1000163" -> "1000162"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000162" -> "1000359"  [label="DDG: "];
"1000162" -> "1000359"  [label="DDG: "];
"1000162" -> "1000158"  [label="DDG: "];
"1000162" -> "1000158"  [label="DDG: "];
"1000163" -> "1000162"  [label="DDG: "];
"1000158" -> "1000137"  [label="AST: "];
"1000159" -> "1000158"  [label="AST: "];
"1000173" -> "1000158"  [label="CFG: "];
"1000158" -> "1000359"  [label="DDG: "];
"1000158" -> "1000359"  [label="DDG: "];
"1000158" -> "1000246"  [label="DDG: "];
"1000246" -> "1000241"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000246" -> "1000241"  [label="DDG: "];
"1000246" -> "1000241"  [label="DDG: "];
"1000185" -> "1000246"  [label="DDG: "];
"1000235" -> "1000246"  [label="DDG: "];
"1000246" -> "1000257"  [label="DDG: "];
"1000246" -> "1000257"  [label="DDG: "];
"1000241" -> "1000137"  [label="AST: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000255" -> "1000241"  [label="CFG: "];
"1000241" -> "1000359"  [label="DDG: "];
"1000241" -> "1000359"  [label="DDG: "];
"1000241" -> "1000359"  [label="DDG: "];
"1000172" -> "1000241"  [label="DDG: "];
"1000194" -> "1000241"  [label="DDG: "];
"1000241" -> "1000273"  [label="DDG: "];
"1000241" -> "1000278"  [label="DDG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000359"  [label="DDG: "];
"1000273" -> "1000272"  [label="DDG: "];
"1000273" -> "1000278"  [label="DDG: "];
"1000272" -> "1000265"  [label="AST: "];
"1000265" -> "1000272"  [label="CFG: "];
"1000272" -> "1000359"  [label="DDG: "];
"1000272" -> "1000265"  [label="DDG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000280" -> "1000265"  [label="CFG: "];
"1000311" -> "1000265"  [label="CFG: "];
"1000265" -> "1000359"  [label="DDG: "];
"1000265" -> "1000359"  [label="DDG: "];
"1000265" -> "1000359"  [label="DDG: "];
"1000266" -> "1000265"  [label="DDG: "];
"1000278" -> "1000276"  [label="AST: "];
"1000278" -> "1000282"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="AST: "];
"1000282" -> "1000278"  [label="AST: "];
"1000286" -> "1000278"  [label="CFG: "];
"1000278" -> "1000359"  [label="DDG: "];
"1000278" -> "1000359"  [label="DDG: "];
"1000298" -> "1000278"  [label="DDG: "];
"1000278" -> "1000298"  [label="DDG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000301"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000301" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="CFG: "];
"1000298" -> "1000359"  [label="DDG: "];
"1000298" -> "1000359"  [label="DDG: "];
"1000298" -> "1000297"  [label="DDG: "];
"1000298" -> "1000297"  [label="DDG: "];
"1000175" -> "1000298"  [label="DDG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000302"  [label="CFG: "];
"1000302" -> "1000297"  [label="AST: "];
"1000305" -> "1000297"  [label="CFG: "];
"1000325" -> "1000297"  [label="CFG: "];
"1000297" -> "1000359"  [label="DDG: "];
"1000297" -> "1000359"  [label="DDG: "];
"1000297" -> "1000359"  [label="DDG: "];
"1000257" -> "1000253"  [label="AST: "];
"1000257" -> "1000261"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000253" -> "1000257"  [label="CFG: "];
"1000257" -> "1000359"  [label="DDG: "];
"1000257" -> "1000185"  [label="DDG: "];
"1000257" -> "1000253"  [label="DDG: "];
"1000257" -> "1000253"  [label="DDG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000192" -> "1000185"  [label="CFG: "];
"1000242" -> "1000185"  [label="CFG: "];
"1000185" -> "1000359"  [label="DDG: "];
"1000185" -> "1000359"  [label="DDG: "];
"1000303" -> "1000185"  [label="DDG: "];
"1000316" -> "1000185"  [label="DDG: "];
"1000253" -> "1000137"  [label="AST: "];
"1000254" -> "1000253"  [label="AST: "];
"1000268" -> "1000253"  [label="CFG: "];
"1000253" -> "1000359"  [label="DDG: "];
"1000253" -> "1000266"  [label="DDG: "];
"1000266" -> "1000270"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1000284"  [label="DDG: "];
"1000266" -> "1000310"  [label="DDG: "];
"1000284" -> "1000276"  [label="AST: "];
"1000284" -> "1000288"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000288" -> "1000284"  [label="AST: "];
"1000292" -> "1000284"  [label="CFG: "];
"1000284" -> "1000359"  [label="DDG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000313"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000313" -> "1000310"  [label="AST: "];
"1000318" -> "1000310"  [label="CFG: "];
"1000310" -> "1000359"  [label="DDG: "];
"1000310" -> "1000359"  [label="DDG: "];
"1000310" -> "1000359"  [label="DDG: "];
"1000310" -> "1000149"  [label="DDG: "];
"1000310" -> "1000222"  [label="DDG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000149"  [label="CFG: "];
"1000149" -> "1000359"  [label="DDG: "];
"1000149" -> "1000359"  [label="DDG: "];
"1000222" -> "1000205"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="CFG: "];
"1000222" -> "1000359"  [label="DDG: "];
"1000222" -> "1000359"  [label="DDG: "];
"1000172" -> "1000137"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000187" -> "1000172"  [label="CFG: "];
"1000172" -> "1000359"  [label="DDG: "];
"1000172" -> "1000359"  [label="DDG: "];
"1000175" -> "1000172"  [label="DDG: "];
"1000174" -> "1000178"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000178" -> "1000174"  [label="AST: "];
"1000174" -> "1000359"  [label="DDG: "];
"1000174" -> "1000359"  [label="DDG: "];
"1000175" -> "1000174"  [label="DDG: "];
"1000178" -> "1000181"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000181" -> "1000178"  [label="AST: "];
"1000178" -> "1000359"  [label="DDG: "];
"1000290" -> "1000276"  [label="AST: "];
"1000290" -> "1000294"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="AST: "];
"1000300" -> "1000290"  [label="CFG: "];
"1000290" -> "1000359"  [label="DDG: "];
}
