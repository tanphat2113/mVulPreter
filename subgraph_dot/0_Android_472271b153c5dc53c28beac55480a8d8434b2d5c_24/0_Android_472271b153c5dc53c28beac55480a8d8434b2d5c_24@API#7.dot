digraph "0_Android_472271b153c5dc53c28beac55480a8d8434b2d5c_24@API" {
"1000265" [label="(Call,buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet))"];
"1000266" [label="(Call,buffer->len > sizeof(tETH_HDR))"];
"1000253" [label="(Call,buffer->len = MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000257" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000246" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000185" [label="(Call,!btpan_cb.congest_packet_size)"];
"1000303" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000316" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000235" [label="(Call,btpan_cb.congest_packet_size = ret)"];
"1000191" [label="(Call,ret = TEMP_FAILURE_RETRY(read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))))"];
"1000193" [label="(Call,TEMP_FAILURE_RETRY(read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))))"];
"1000194" [label="(Call,read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet)))"];
"1000112" [label="(Call,fd == INVALID_FD)"];
"1000105" [label="(Call,fd = (int)p_param)"];
"1000107" [label="(Call,(int)p_param)"];
"1000101" [label="(MethodParameterIn,void *p_param)"];
"1000115" [label="(Call,fd != btpan_cb.tap_fd)"];
"1000158" [label="(Call,buffer->len = GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000162" [label="(Call,GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000163" [label="(Call,GKI_get_buf_size(buffer))"];
"1000146" [label="(Call,!buffer)"];
"1000139" [label="(Call,*buffer = (BT_HDR *)GKI_getpoolbuf(PAN_POOL_ID))"];
"1000141" [label="(Call,(BT_HDR *)GKI_getpoolbuf(PAN_POOL_ID))"];
"1000143" [label="(Call,GKI_getpoolbuf(PAN_POOL_ID))"];
"1000165" [label="(Call,sizeof(BT_HDR) - buffer->offset)"];
"1000153" [label="(Call,buffer->offset = PAN_MINIMUM_OFFSET)"];
"1000272" [label="(Call,should_forward((tETH_HDR *)packet))"];
"1000273" [label="(Call,(tETH_HDR *)packet)"];
"1000241" [label="(Call,memcpy(packet, btpan_cb.congest_packet, MIN(btpan_cb.congest_packet_size, buffer->len)))"];
"1000172" [label="(Call,*packet = (UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000175" [label="(Call,(UINT8 *)buffer)"];
"1000246" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000175" [label="(Call,(UINT8 *)buffer)"];
"1000296" [label="(ControlStructure,if (forward_bnep(&hdr, buffer) != FORWARD_CONGEST))"];
"1000195" [label="(Identifier,fd)"];
"1000180" [label="(Identifier,BT_HDR)"];
"1000272" [label="(Call,should_forward((tETH_HDR *)packet))"];
"1000105" [label="(Call,fd = (int)p_param)"];
"1000140" [label="(Identifier,buffer)"];
"1000153" [label="(Call,buffer->offset = PAN_MINIMUM_OFFSET)"];
"1000235" [label="(Call,btpan_cb.congest_packet_size = ret)"];
"1000155" [label="(Identifier,buffer)"];
"1000267" [label="(Call,buffer->len)"];
"1000266" [label="(Call,buffer->len > sizeof(tETH_HDR))"];
"1000177" [label="(Identifier,buffer)"];
"1000258" [label="(Call,btpan_cb.congest_packet_size)"];
"1000150" [label="(Literal,\"%s unable to allocate buffer for packet.\")"];
"1000317" [label="(Call,btpan_cb.congest_packet_size)"];
"1000192" [label="(Identifier,ret)"];
"1000257" [label="(Call,MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000239" [label="(Identifier,ret)"];
"1000111" [label="(Call,fd == INVALID_FD || fd != btpan_cb.tap_fd)"];
"1000106" [label="(Identifier,fd)"];
"1000280" [label="(Identifier,hdr)"];
"1000112" [label="(Call,fd == INVALID_FD)"];
"1000145" [label="(ControlStructure,if (!buffer))"];
"1000193" [label="(Call,TEMP_FAILURE_RETRY(read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))))"];
"1000189" [label="(Block,)"];
"1000241" [label="(Call,memcpy(packet, btpan_cb.congest_packet, MIN(btpan_cb.congest_packet_size, buffer->len)))"];
"1000236" [label="(Call,btpan_cb.congest_packet_size)"];
"1000114" [label="(Identifier,INVALID_FD)"];
"1000166" [label="(Call,sizeof(BT_HDR))"];
"1000194" [label="(Call,read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet)))"];
"1000320" [label="(Literal,0)"];
"1000101" [label="(MethodParameterIn,void *p_param)"];
"1000141" [label="(Call,(BT_HDR *)GKI_getpoolbuf(PAN_POOL_ID))"];
"1000162" [label="(Call,GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000242" [label="(Identifier,packet)"];
"1000163" [label="(Call,GKI_get_buf_size(buffer))"];
"1000265" [label="(Call,buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet))"];
"1000261" [label="(Call,buffer->len)"];
"1000325" [label="(Identifier,ufd)"];
"1000284" [label="(Call,buffer->len -= sizeof(tETH_HDR))"];
"1000147" [label="(Identifier,buffer)"];
"1000275" [label="(Identifier,packet)"];
"1000240" [label="(ControlStructure,break;)"];
"1000185" [label="(Call,!btpan_cb.congest_packet_size)"];
"1000298" [label="(Call,forward_bnep(&hdr, buffer))"];
"1000199" [label="(Call,sizeof(btpan_cb.congest_packet))"];
"1000303" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000158" [label="(Call,buffer->len = GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset)"];
"1000116" [label="(Identifier,fd)"];
"1000137" [label="(Block,)"];
"1000204" [label="(Identifier,ret)"];
"1000191" [label="(Call,ret = TEMP_FAILURE_RETRY(read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))))"];
"1000255" [label="(Identifier,buffer)"];
"1000250" [label="(Call,buffer->len)"];
"1000143" [label="(Call,GKI_getpoolbuf(PAN_POOL_ID))"];
"1000154" [label="(Call,buffer->offset)"];
"1000117" [label="(Call,btpan_cb.tap_fd)"];
"1000268" [label="(Identifier,buffer)"];
"1000323" [label="(Call,ufd.fd = fd)"];
"1000353" [label="(Call,btsock_thread_add_fd(pan_pth, fd, 0, SOCK_THREAD_FD_RD, 0))"];
"1000173" [label="(Identifier,packet)"];
"1000253" [label="(Call,buffer->len = MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000270" [label="(Call,sizeof(tETH_HDR))"];
"1000113" [label="(Identifier,fd)"];
"1000254" [label="(Call,buffer->len)"];
"1000164" [label="(Identifier,buffer)"];
"1000311" [label="(Literal,\"%s dropping packet of length %d\")"];
"1000310" [label="(Call,BTIF_TRACE_WARNING(\"%s dropping packet of length %d\", __func__, buffer->len))"];
"1000165" [label="(Call,sizeof(BT_HDR) - buffer->offset)"];
"1000107" [label="(Call,(int)p_param)"];
"1000309" [label="(Block,)"];
"1000187" [label="(Identifier,btpan_cb)"];
"1000196" [label="(Call,btpan_cb.congest_packet)"];
"1000102" [label="(Block,)"];
"1000304" [label="(Call,btpan_cb.congest_packet_size)"];
"1000225" [label="(Call,GKI_freebuf(buffer))"];
"1000167" [label="(Identifier,BT_HDR)"];
"1000307" [label="(Literal,0)"];
"1000146" [label="(Call,!buffer)"];
"1000243" [label="(Call,btpan_cb.congest_packet)"];
"1000109" [label="(Identifier,p_param)"];
"1000144" [label="(Identifier,PAN_POOL_ID)"];
"1000157" [label="(Identifier,PAN_MINIMUM_OFFSET)"];
"1000321" [label="(Call,GKI_freebuf(buffer))"];
"1000168" [label="(Call,buffer->offset)"];
"1000316" [label="(Call,btpan_cb.congest_packet_size = 0)"];
"1000115" [label="(Call,fd != btpan_cb.tap_fd)"];
"1000273" [label="(Call,(tETH_HDR *)packet)"];
"1000227" [label="(Call,btsock_thread_add_fd(pan_pth, fd, 0, SOCK_THREAD_FD_RD, 0))"];
"1000186" [label="(Call,btpan_cb.congest_packet_size)"];
"1000359" [label="(MethodReturn,static void)"];
"1000160" [label="(Identifier,buffer)"];
"1000174" [label="(Call,(UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000290" [label="(Call,buffer->offset += sizeof(tETH_HDR))"];
"1000184" [label="(ControlStructure,if (!btpan_cb.congest_packet_size))"];
"1000178" [label="(Call,sizeof(BT_HDR) + buffer->offset)"];
"1000139" [label="(Call,*buffer = (BT_HDR *)GKI_getpoolbuf(PAN_POOL_ID))"];
"1000247" [label="(Call,btpan_cb.congest_packet_size)"];
"1000322" [label="(Identifier,buffer)"];
"1000264" [label="(ControlStructure,if (buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet)))"];
"1000278" [label="(Call,memcpy(&hdr, packet, sizeof(tETH_HDR)))"];
"1000159" [label="(Call,buffer->len)"];
"1000205" [label="(Block,)"];
"1000172" [label="(Call,*packet = (UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset)"];
"1000265" -> "1000264"  [label="AST: "];
"1000265" -> "1000266"  [label="CFG: "];
"1000265" -> "1000272"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000272" -> "1000265"  [label="AST: "];
"1000280" -> "1000265"  [label="CFG: "];
"1000311" -> "1000265"  [label="CFG: "];
"1000265" -> "1000359"  [label="DDG: buffer->len > sizeof(tETH_HDR) && should_forward((tETH_HDR *)packet)"];
"1000265" -> "1000359"  [label="DDG: buffer->len > sizeof(tETH_HDR)"];
"1000265" -> "1000359"  [label="DDG: should_forward((tETH_HDR *)packet)"];
"1000266" -> "1000265"  [label="DDG: buffer->len"];
"1000272" -> "1000265"  [label="DDG: (tETH_HDR *)packet"];
"1000266" -> "1000270"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000253" -> "1000266"  [label="DDG: buffer->len"];
"1000266" -> "1000284"  [label="DDG: buffer->len"];
"1000266" -> "1000310"  [label="DDG: buffer->len"];
"1000253" -> "1000137"  [label="AST: "];
"1000253" -> "1000257"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000257" -> "1000253"  [label="AST: "];
"1000268" -> "1000253"  [label="CFG: "];
"1000253" -> "1000359"  [label="DDG: MIN(btpan_cb.congest_packet_size, buffer->len)"];
"1000257" -> "1000253"  [label="DDG: btpan_cb.congest_packet_size"];
"1000257" -> "1000253"  [label="DDG: buffer->len"];
"1000257" -> "1000261"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000257" -> "1000359"  [label="DDG: btpan_cb.congest_packet_size"];
"1000257" -> "1000185"  [label="DDG: btpan_cb.congest_packet_size"];
"1000246" -> "1000257"  [label="DDG: btpan_cb.congest_packet_size"];
"1000246" -> "1000257"  [label="DDG: buffer->len"];
"1000246" -> "1000241"  [label="AST: "];
"1000246" -> "1000250"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000250" -> "1000246"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000246" -> "1000241"  [label="DDG: btpan_cb.congest_packet_size"];
"1000246" -> "1000241"  [label="DDG: buffer->len"];
"1000185" -> "1000246"  [label="DDG: btpan_cb.congest_packet_size"];
"1000235" -> "1000246"  [label="DDG: btpan_cb.congest_packet_size"];
"1000158" -> "1000246"  [label="DDG: buffer->len"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000192" -> "1000185"  [label="CFG: "];
"1000242" -> "1000185"  [label="CFG: "];
"1000185" -> "1000359"  [label="DDG: !btpan_cb.congest_packet_size"];
"1000185" -> "1000359"  [label="DDG: btpan_cb.congest_packet_size"];
"1000303" -> "1000185"  [label="DDG: btpan_cb.congest_packet_size"];
"1000316" -> "1000185"  [label="DDG: btpan_cb.congest_packet_size"];
"1000303" -> "1000296"  [label="AST: "];
"1000303" -> "1000307"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000307" -> "1000303"  [label="AST: "];
"1000325" -> "1000303"  [label="CFG: "];
"1000303" -> "1000359"  [label="DDG: btpan_cb.congest_packet_size"];
"1000316" -> "1000309"  [label="AST: "];
"1000316" -> "1000320"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="AST: "];
"1000322" -> "1000316"  [label="CFG: "];
"1000316" -> "1000359"  [label="DDG: btpan_cb.congest_packet_size"];
"1000235" -> "1000205"  [label="AST: "];
"1000235" -> "1000239"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000235" -> "1000359"  [label="DDG: btpan_cb.congest_packet_size"];
"1000235" -> "1000359"  [label="DDG: ret"];
"1000191" -> "1000235"  [label="DDG: ret"];
"1000191" -> "1000189"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000204" -> "1000191"  [label="CFG: "];
"1000191" -> "1000359"  [label="DDG: TEMP_FAILURE_RETRY(read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet)))"];
"1000191" -> "1000359"  [label="DDG: ret"];
"1000193" -> "1000191"  [label="DDG: read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))"];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000193" -> "1000359"  [label="DDG: read(fd, btpan_cb.congest_packet, sizeof(btpan_cb.congest_packet))"];
"1000194" -> "1000193"  [label="DDG: fd"];
"1000194" -> "1000193"  [label="DDG: btpan_cb.congest_packet"];
"1000194" -> "1000199"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="AST: "];
"1000194" -> "1000359"  [label="DDG: btpan_cb.congest_packet"];
"1000112" -> "1000194"  [label="DDG: fd"];
"1000115" -> "1000194"  [label="DDG: fd"];
"1000194" -> "1000227"  [label="DDG: fd"];
"1000194" -> "1000241"  [label="DDG: btpan_cb.congest_packet"];
"1000194" -> "1000323"  [label="DDG: fd"];
"1000194" -> "1000353"  [label="DDG: fd"];
"1000112" -> "1000111"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000359"  [label="DDG: INVALID_FD"];
"1000112" -> "1000359"  [label="DDG: fd"];
"1000112" -> "1000111"  [label="DDG: fd"];
"1000112" -> "1000111"  [label="DDG: INVALID_FD"];
"1000105" -> "1000112"  [label="DDG: fd"];
"1000112" -> "1000115"  [label="DDG: fd"];
"1000112" -> "1000323"  [label="DDG: fd"];
"1000112" -> "1000353"  [label="DDG: fd"];
"1000105" -> "1000102"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000107" -> "1000105"  [label="AST: "];
"1000113" -> "1000105"  [label="CFG: "];
"1000105" -> "1000359"  [label="DDG: (int)p_param"];
"1000107" -> "1000105"  [label="DDG: p_param"];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000107" -> "1000359"  [label="DDG: p_param"];
"1000101" -> "1000107"  [label="DDG: p_param"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000359"  [label="DDG: p_param"];
"1000115" -> "1000111"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000115" -> "1000359"  [label="DDG: btpan_cb.tap_fd"];
"1000115" -> "1000359"  [label="DDG: fd"];
"1000115" -> "1000111"  [label="DDG: fd"];
"1000115" -> "1000111"  [label="DDG: btpan_cb.tap_fd"];
"1000115" -> "1000323"  [label="DDG: fd"];
"1000115" -> "1000353"  [label="DDG: fd"];
"1000158" -> "1000137"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000162" -> "1000158"  [label="AST: "];
"1000173" -> "1000158"  [label="CFG: "];
"1000158" -> "1000359"  [label="DDG: buffer->len"];
"1000158" -> "1000359"  [label="DDG: GKI_get_buf_size(buffer) - sizeof(BT_HDR) - buffer->offset"];
"1000162" -> "1000158"  [label="DDG: GKI_get_buf_size(buffer)"];
"1000162" -> "1000158"  [label="DDG: sizeof(BT_HDR) - buffer->offset"];
"1000162" -> "1000165"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000165" -> "1000162"  [label="AST: "];
"1000162" -> "1000359"  [label="DDG: GKI_get_buf_size(buffer)"];
"1000162" -> "1000359"  [label="DDG: sizeof(BT_HDR) - buffer->offset"];
"1000163" -> "1000162"  [label="DDG: buffer"];
"1000165" -> "1000162"  [label="DDG: buffer->offset"];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000167" -> "1000163"  [label="CFG: "];
"1000146" -> "1000163"  [label="DDG: buffer"];
"1000163" -> "1000175"  [label="DDG: buffer"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000147"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="CFG: "];
"1000155" -> "1000146"  [label="CFG: "];
"1000146" -> "1000359"  [label="DDG: !buffer"];
"1000146" -> "1000359"  [label="DDG: buffer"];
"1000139" -> "1000146"  [label="DDG: buffer"];
"1000139" -> "1000137"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000147" -> "1000139"  [label="CFG: "];
"1000139" -> "1000359"  [label="DDG: (BT_HDR *)GKI_getpoolbuf(PAN_POOL_ID)"];
"1000141" -> "1000139"  [label="DDG: GKI_getpoolbuf(PAN_POOL_ID)"];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000141" -> "1000359"  [label="DDG: GKI_getpoolbuf(PAN_POOL_ID)"];
"1000143" -> "1000141"  [label="DDG: PAN_POOL_ID"];
"1000143" -> "1000144"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000143" -> "1000359"  [label="DDG: PAN_POOL_ID"];
"1000165" -> "1000168"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="AST: "];
"1000153" -> "1000165"  [label="DDG: buffer->offset"];
"1000165" -> "1000172"  [label="DDG: buffer->offset"];
"1000165" -> "1000174"  [label="DDG: buffer->offset"];
"1000165" -> "1000178"  [label="DDG: buffer->offset"];
"1000165" -> "1000290"  [label="DDG: buffer->offset"];
"1000153" -> "1000137"  [label="AST: "];
"1000153" -> "1000157"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000157" -> "1000153"  [label="AST: "];
"1000160" -> "1000153"  [label="CFG: "];
"1000153" -> "1000359"  [label="DDG: PAN_MINIMUM_OFFSET"];
"1000272" -> "1000273"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000272" -> "1000359"  [label="DDG: (tETH_HDR *)packet"];
"1000273" -> "1000272"  [label="DDG: packet"];
"1000273" -> "1000275"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000275" -> "1000273"  [label="AST: "];
"1000273" -> "1000359"  [label="DDG: packet"];
"1000241" -> "1000273"  [label="DDG: packet"];
"1000273" -> "1000278"  [label="DDG: packet"];
"1000241" -> "1000137"  [label="AST: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000255" -> "1000241"  [label="CFG: "];
"1000241" -> "1000359"  [label="DDG: packet"];
"1000241" -> "1000359"  [label="DDG: memcpy(packet, btpan_cb.congest_packet, MIN(btpan_cb.congest_packet_size, buffer->len))"];
"1000241" -> "1000359"  [label="DDG: btpan_cb.congest_packet"];
"1000172" -> "1000241"  [label="DDG: packet"];
"1000241" -> "1000278"  [label="DDG: packet"];
"1000172" -> "1000137"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000187" -> "1000172"  [label="CFG: "];
"1000172" -> "1000359"  [label="DDG: packet"];
"1000172" -> "1000359"  [label="DDG: (UINT8 *)buffer + sizeof(BT_HDR) + buffer->offset"];
"1000175" -> "1000172"  [label="DDG: buffer"];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000177"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000180" -> "1000175"  [label="CFG: "];
"1000175" -> "1000359"  [label="DDG: buffer"];
"1000175" -> "1000174"  [label="DDG: buffer"];
"1000175" -> "1000225"  [label="DDG: buffer"];
"1000175" -> "1000298"  [label="DDG: buffer"];
"1000175" -> "1000321"  [label="DDG: buffer"];
}
