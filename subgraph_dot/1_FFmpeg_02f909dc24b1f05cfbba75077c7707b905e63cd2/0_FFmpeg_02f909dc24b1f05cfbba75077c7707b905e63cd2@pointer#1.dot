digraph "0_FFmpeg_02f909dc24b1f05cfbba75077c7707b905e63cd2@pointer" {
"1000238" [label="(Call,s->vector_width = s->avctx->extradata[10])"];
"1000277" [label="(Call,s->vector_width != 4)"];
"1000276" [label="(Call,(s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4)))"];
"1000298" [label="(Call,s->width % s->vector_width)"];
"1000297" [label="(Call,s->width % s->vector_width || s->height % s->vector_height)"];
"1000357" [label="(Call,s->width / s->vector_width)"];
"1000356" [label="(Call,(s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000352" [label="(Call,s->decode_buffer_size = (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000377" [label="(Call,av_mallocz(s->decode_buffer_size))"];
"1000373" [label="(Call,s->decode_buffer = av_mallocz(s->decode_buffer_size))"];
"1000382" [label="(Call,!s->decode_buffer)"];
"1000476" [label="(Call,av_freep(&s->decode_buffer))"];
"1000297" [label="(Call,s->width % s->vector_width || s->height % s->vector_height)"];
"1000375" [label="(Identifier,s)"];
"1000109" [label="(Block,)"];
"1000373" [label="(Call,s->decode_buffer = av_mallocz(s->decode_buffer_size))"];
"1000276" [label="(Call,(s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4)))"];
"1000357" [label="(Call,s->width / s->vector_width)"];
"1000285" [label="(Identifier,s)"];
"1000314" [label="(Identifier,avctx)"];
"1000374" [label="(Call,s->decode_buffer)"];
"1000216" [label="(Call,av_image_check_size(s->width, s->height, 0, avctx))"];
"1000386" [label="(ControlStructure,goto fail;)"];
"1000356" [label="(Call,(s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000296" [label="(ControlStructure,if (s->width % s->vector_width || s->height % s->vector_height))"];
"1000358" [label="(Call,s->width)"];
"1000484" [label="(MethodReturn,static av_cold int)"];
"1000282" [label="(Call,(s->vector_height != 2) && (s->vector_height != 4))"];
"1000382" [label="(Call,!s->decode_buffer)"];
"1000367" [label="(Identifier,s)"];
"1000476" [label="(Call,av_freep(&s->decode_buffer))"];
"1000321" [label="(Identifier,s)"];
"1000305" [label="(Call,s->height % s->vector_height)"];
"1000281" [label="(Literal,4)"];
"1000238" [label="(Call,s->vector_width = s->avctx->extradata[10])"];
"1000278" [label="(Call,s->vector_width)"];
"1000361" [label="(Call,s->vector_width)"];
"1000378" [label="(Call,s->decode_buffer_size)"];
"1000477" [label="(Call,&s->decode_buffer)"];
"1000352" [label="(Call,s->decode_buffer_size = (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2)"];
"1000299" [label="(Call,s->width)"];
"1000302" [label="(Call,s->vector_width)"];
"1000295" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000383" [label="(Call,s->decode_buffer)"];
"1000377" [label="(Call,av_mallocz(s->decode_buffer_size))"];
"1000277" [label="(Call,s->vector_width != 4)"];
"1000300" [label="(Identifier,s)"];
"1000242" [label="(Call,s->avctx->extradata[10])"];
"1000239" [label="(Call,s->vector_width)"];
"1000353" [label="(Call,s->decode_buffer_size)"];
"1000251" [label="(Identifier,s)"];
"1000298" [label="(Call,s->width % s->vector_width)"];
"1000307" [label="(Identifier,s)"];
"1000381" [label="(ControlStructure,if (!s->decode_buffer))"];
"1000275" [label="(ControlStructure,if ((s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4))))"];
"1000483" [label="(Identifier,ENOMEM)"];
"1000384" [label="(Identifier,s)"];
"1000390" [label="(Identifier,s)"];
"1000364" [label="(Call,(s->height / s->vector_height) * 2)"];
"1000238" -> "1000109"  [label="AST: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000251" -> "1000238"  [label="CFG: "];
"1000238" -> "1000484"  [label="DDG: s->avctx->extradata[10]"];
"1000238" -> "1000277"  [label="DDG: s->vector_width"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000281"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="AST: "];
"1000285" -> "1000277"  [label="CFG: "];
"1000276" -> "1000277"  [label="CFG: "];
"1000277" -> "1000484"  [label="DDG: s->vector_width"];
"1000277" -> "1000276"  [label="DDG: s->vector_width"];
"1000277" -> "1000276"  [label="DDG: 4"];
"1000277" -> "1000298"  [label="DDG: s->vector_width"];
"1000276" -> "1000275"  [label="AST: "];
"1000276" -> "1000282"  [label="CFG: "];
"1000282" -> "1000276"  [label="AST: "];
"1000295" -> "1000276"  [label="CFG: "];
"1000300" -> "1000276"  [label="CFG: "];
"1000276" -> "1000484"  [label="DDG: (s->vector_height != 2) && (s->vector_height != 4)"];
"1000276" -> "1000484"  [label="DDG: (s->vector_width != 4) ||\n        ((s->vector_height != 2) && (s->vector_height != 4))"];
"1000276" -> "1000484"  [label="DDG: s->vector_width != 4"];
"1000282" -> "1000276"  [label="DDG: s->vector_height != 2"];
"1000282" -> "1000276"  [label="DDG: s->vector_height != 4"];
"1000298" -> "1000297"  [label="AST: "];
"1000298" -> "1000302"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000302" -> "1000298"  [label="AST: "];
"1000307" -> "1000298"  [label="CFG: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000484"  [label="DDG: s->width"];
"1000298" -> "1000484"  [label="DDG: s->vector_width"];
"1000298" -> "1000297"  [label="DDG: s->width"];
"1000298" -> "1000297"  [label="DDG: s->vector_width"];
"1000216" -> "1000298"  [label="DDG: s->width"];
"1000298" -> "1000357"  [label="DDG: s->width"];
"1000298" -> "1000357"  [label="DDG: s->vector_width"];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000305"  [label="CFG: "];
"1000305" -> "1000297"  [label="AST: "];
"1000314" -> "1000297"  [label="CFG: "];
"1000321" -> "1000297"  [label="CFG: "];
"1000297" -> "1000484"  [label="DDG: s->width % s->vector_width || s->height % s->vector_height"];
"1000297" -> "1000484"  [label="DDG: s->width % s->vector_width"];
"1000297" -> "1000484"  [label="DDG: s->height % s->vector_height"];
"1000305" -> "1000297"  [label="DDG: s->height"];
"1000305" -> "1000297"  [label="DDG: s->vector_height"];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000361"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="AST: "];
"1000367" -> "1000357"  [label="CFG: "];
"1000357" -> "1000484"  [label="DDG: s->vector_width"];
"1000357" -> "1000484"  [label="DDG: s->width"];
"1000357" -> "1000356"  [label="DDG: s->width"];
"1000357" -> "1000356"  [label="DDG: s->vector_width"];
"1000356" -> "1000352"  [label="AST: "];
"1000356" -> "1000364"  [label="CFG: "];
"1000364" -> "1000356"  [label="AST: "];
"1000352" -> "1000356"  [label="CFG: "];
"1000356" -> "1000484"  [label="DDG: (s->height / s->vector_height) * 2"];
"1000356" -> "1000484"  [label="DDG: s->width / s->vector_width"];
"1000356" -> "1000352"  [label="DDG: s->width / s->vector_width"];
"1000356" -> "1000352"  [label="DDG: (s->height / s->vector_height) * 2"];
"1000364" -> "1000356"  [label="DDG: s->height / s->vector_height"];
"1000364" -> "1000356"  [label="DDG: 2"];
"1000352" -> "1000109"  [label="AST: "];
"1000353" -> "1000352"  [label="AST: "];
"1000375" -> "1000352"  [label="CFG: "];
"1000352" -> "1000484"  [label="DDG: (s->width / s->vector_width) *\n        (s->height / s->vector_height) * 2"];
"1000352" -> "1000377"  [label="DDG: s->decode_buffer_size"];
"1000377" -> "1000373"  [label="AST: "];
"1000377" -> "1000378"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000373" -> "1000377"  [label="CFG: "];
"1000377" -> "1000484"  [label="DDG: s->decode_buffer_size"];
"1000377" -> "1000373"  [label="DDG: s->decode_buffer_size"];
"1000373" -> "1000109"  [label="AST: "];
"1000374" -> "1000373"  [label="AST: "];
"1000384" -> "1000373"  [label="CFG: "];
"1000373" -> "1000484"  [label="DDG: av_mallocz(s->decode_buffer_size)"];
"1000373" -> "1000382"  [label="DDG: s->decode_buffer"];
"1000382" -> "1000381"  [label="AST: "];
"1000382" -> "1000383"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000386" -> "1000382"  [label="CFG: "];
"1000390" -> "1000382"  [label="CFG: "];
"1000382" -> "1000484"  [label="DDG: s->decode_buffer"];
"1000382" -> "1000484"  [label="DDG: !s->decode_buffer"];
"1000382" -> "1000476"  [label="DDG: s->decode_buffer"];
"1000476" -> "1000109"  [label="AST: "];
"1000476" -> "1000477"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000483" -> "1000476"  [label="CFG: "];
"1000476" -> "1000484"  [label="DDG: av_freep(&s->decode_buffer)"];
"1000476" -> "1000484"  [label="DDG: &s->decode_buffer"];
}
