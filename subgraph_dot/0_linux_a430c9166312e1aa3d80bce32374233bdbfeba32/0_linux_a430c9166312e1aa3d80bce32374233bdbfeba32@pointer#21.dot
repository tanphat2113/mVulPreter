digraph "0_linux_a430c9166312e1aa3d80bce32374233bdbfeba32@pointer" {
"1000905" [label="(Call,decode_abs(ctxt, &ctxt->memop))"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000903" [label="(Call,rc = decode_abs(ctxt, &ctxt->memop))"];
"1000912" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000953" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000973" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001012" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000939" [label="(Call,decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000937" [label="(Call,rc = decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000959" [label="(Call,decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000957" [label="(Call,rc = decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000979" [label="(Call,decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000977" [label="(Call,rc = decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000939" [label="(Call,decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000914" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000912" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000952" [label="(ControlStructure,if (rc != X86EMUL_CONTINUE))"];
"1000449" [label="(Identifier,ctxt)"];
"1000981" [label="(Call,&ctxt->dst)"];
"1000904" [label="(Identifier,rc)"];
"1000955" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000417" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000443" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000972" [label="(ControlStructure,if (rc != X86EMUL_CONTINUE))"];
"1000957" [label="(Call,rc = decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000273" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000980" [label="(Identifier,ctxt)"];
"1000954" [label="(Identifier,rc)"];
"1001011" [label="(Call,(rc != X86EMUL_CONTINUE) ? EMULATION_FAILED : EMULATION_OK)"];
"1000135" [label="(Call,rc = X86EMUL_CONTINUE)"];
"1000977" [label="(Call,rc = decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000422" [label="(Identifier,u8)"];
"1000223" [label="(Literal,1)"];
"1000903" [label="(Call,rc = decode_abs(ctxt, &ctxt->memop))"];
"1001014" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000874" [label="(Call,rc = decode_modrm(ctxt, &ctxt->memop))"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000973" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1001015" [label="(Identifier,EMULATION_FAILED)"];
"1000945" [label="(Call,(ctxt->d >> SrcShift) & OpMask)"];
"1000960" [label="(Identifier,ctxt)"];
"1000219" [label="(Call,rc = __do_insn_fetch_bytes(ctxt, 1))"];
"1000959" [label="(Call,decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000958" [label="(Identifier,rc)"];
"1000906" [label="(Identifier,ctxt)"];
"1001012" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000222" [label="(Identifier,ctxt)"];
"1000475" [label="(Identifier,u8)"];
"1001017" [label="(MethodReturn,int)"];
"1000913" [label="(Identifier,rc)"];
"1000133" [label="(Block,)"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000937" [label="(Call,rc = decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000956" [label="(ControlStructure,goto done;)"];
"1000953" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000911" [label="(ControlStructure,if (rc != X86EMUL_CONTINUE))"];
"1000907" [label="(Call,&ctxt->memop)"];
"1000940" [label="(Identifier,ctxt)"];
"1000470" [label="(Call,ctxt->modrm = insn_fetch(u8, ctxt))"];
"1000448" [label="(Identifier,u8)"];
"1000905" [label="(Call,decode_abs(ctxt, &ctxt->memop))"];
"1000423" [label="(Identifier,ctxt)"];
"1000978" [label="(Identifier,rc)"];
"1000897" [label="(ControlStructure,if (ctxt->d & MemAbs))"];
"1001016" [label="(Identifier,EMULATION_OK)"];
"1000225" [label="(Call,rc != X86EMUL_CONTINUE)"];
"1000974" [label="(Identifier,rc)"];
"1000961" [label="(Call,&ctxt->src2)"];
"1000976" [label="(ControlStructure,goto done;)"];
"1000941" [label="(Call,&ctxt->src)"];
"1001013" [label="(Identifier,rc)"];
"1000915" [label="(ControlStructure,goto done;)"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000278" [label="(Identifier,u8)"];
"1000985" [label="(Call,(ctxt->d >> DstShift) & OpMask)"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000876" [label="(Call,decode_modrm(ctxt, &ctxt->memop))"];
"1000279" [label="(Identifier,ctxt)"];
"1000476" [label="(Identifier,ctxt)"];
"1000979" [label="(Call,decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000938" [label="(Identifier,rc)"];
"1000965" [label="(Call,(ctxt->d >> Src2Shift) & OpMask)"];
"1000918" [label="(Identifier,has_seg_override)"];
"1000975" [label="(Identifier,X86EMUL_CONTINUE)"];
"1000994" [label="(Identifier,ctxt)"];
"1000905" -> "1000903"  [label="AST: "];
"1000905" -> "1000907"  [label="CFG: "];
"1000906" -> "1000905"  [label="AST: "];
"1000907" -> "1000905"  [label="AST: "];
"1000903" -> "1000905"  [label="CFG: "];
"1000905" -> "1001017"  [label="DDG: ctxt"];
"1000905" -> "1001017"  [label="DDG: &ctxt->memop"];
"1000905" -> "1000903"  [label="DDG: ctxt"];
"1000905" -> "1000903"  [label="DDG: &ctxt->memop"];
"1000474" -> "1000905"  [label="DDG: ctxt"];
"1000421" -> "1000905"  [label="DDG: ctxt"];
"1000447" -> "1000905"  [label="DDG: ctxt"];
"1000277" -> "1000905"  [label="DDG: ctxt"];
"1000130" -> "1000905"  [label="DDG: ctxt"];
"1000905" -> "1000939"  [label="DDG: ctxt"];
"1000474" -> "1000470"  [label="AST: "];
"1000474" -> "1000476"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000474" -> "1001017"  [label="DDG: ctxt"];
"1000474" -> "1001017"  [label="DDG: u8"];
"1000474" -> "1000470"  [label="DDG: u8"];
"1000474" -> "1000470"  [label="DDG: ctxt"];
"1000421" -> "1000474"  [label="DDG: u8"];
"1000421" -> "1000474"  [label="DDG: ctxt"];
"1000277" -> "1000474"  [label="DDG: u8"];
"1000277" -> "1000474"  [label="DDG: ctxt"];
"1000447" -> "1000474"  [label="DDG: u8"];
"1000447" -> "1000474"  [label="DDG: ctxt"];
"1000130" -> "1000474"  [label="DDG: ctxt"];
"1000474" -> "1000876"  [label="DDG: ctxt"];
"1000474" -> "1000939"  [label="DDG: ctxt"];
"1000421" -> "1000417"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000417" -> "1000421"  [label="CFG: "];
"1000421" -> "1001017"  [label="DDG: ctxt"];
"1000421" -> "1001017"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: ctxt"];
"1000277" -> "1000421"  [label="DDG: u8"];
"1000277" -> "1000421"  [label="DDG: ctxt"];
"1000130" -> "1000421"  [label="DDG: ctxt"];
"1000421" -> "1000447"  [label="DDG: u8"];
"1000421" -> "1000447"  [label="DDG: ctxt"];
"1000421" -> "1000876"  [label="DDG: ctxt"];
"1000421" -> "1000939"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000277" -> "1001017"  [label="DDG: u8"];
"1000277" -> "1001017"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="DDG: u8"];
"1000277" -> "1000273"  [label="DDG: ctxt"];
"1000221" -> "1000277"  [label="DDG: ctxt"];
"1000130" -> "1000277"  [label="DDG: ctxt"];
"1000277" -> "1000876"  [label="DDG: ctxt"];
"1000277" -> "1000939"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1001017"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: 1"];
"1000130" -> "1000221"  [label="DDG: ctxt"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1001017"  [label="DDG: ctxt"];
"1000130" -> "1000447"  [label="DDG: ctxt"];
"1000130" -> "1000876"  [label="DDG: ctxt"];
"1000130" -> "1000939"  [label="DDG: ctxt"];
"1000130" -> "1000959"  [label="DDG: ctxt"];
"1000130" -> "1000979"  [label="DDG: ctxt"];
"1000447" -> "1000443"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000443" -> "1000447"  [label="CFG: "];
"1000447" -> "1001017"  [label="DDG: ctxt"];
"1000447" -> "1001017"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: ctxt"];
"1000447" -> "1000876"  [label="DDG: ctxt"];
"1000447" -> "1000939"  [label="DDG: ctxt"];
"1000903" -> "1000897"  [label="AST: "];
"1000904" -> "1000903"  [label="AST: "];
"1000913" -> "1000903"  [label="CFG: "];
"1000903" -> "1001017"  [label="DDG: decode_abs(ctxt, &ctxt->memop)"];
"1000903" -> "1000912"  [label="DDG: rc"];
"1000912" -> "1000911"  [label="AST: "];
"1000912" -> "1000914"  [label="CFG: "];
"1000913" -> "1000912"  [label="AST: "];
"1000914" -> "1000912"  [label="AST: "];
"1000915" -> "1000912"  [label="CFG: "];
"1000918" -> "1000912"  [label="CFG: "];
"1000225" -> "1000912"  [label="DDG: rc"];
"1000225" -> "1000912"  [label="DDG: X86EMUL_CONTINUE"];
"1000135" -> "1000912"  [label="DDG: rc"];
"1000874" -> "1000912"  [label="DDG: rc"];
"1000912" -> "1000953"  [label="DDG: X86EMUL_CONTINUE"];
"1000912" -> "1001012"  [label="DDG: rc"];
"1000912" -> "1001012"  [label="DDG: X86EMUL_CONTINUE"];
"1000953" -> "1000952"  [label="AST: "];
"1000953" -> "1000955"  [label="CFG: "];
"1000954" -> "1000953"  [label="AST: "];
"1000955" -> "1000953"  [label="AST: "];
"1000956" -> "1000953"  [label="CFG: "];
"1000958" -> "1000953"  [label="CFG: "];
"1000937" -> "1000953"  [label="DDG: rc"];
"1000953" -> "1000973"  [label="DDG: X86EMUL_CONTINUE"];
"1000953" -> "1001012"  [label="DDG: rc"];
"1000953" -> "1001012"  [label="DDG: X86EMUL_CONTINUE"];
"1000973" -> "1000972"  [label="AST: "];
"1000973" -> "1000975"  [label="CFG: "];
"1000974" -> "1000973"  [label="AST: "];
"1000975" -> "1000973"  [label="AST: "];
"1000976" -> "1000973"  [label="CFG: "];
"1000978" -> "1000973"  [label="CFG: "];
"1000957" -> "1000973"  [label="DDG: rc"];
"1000973" -> "1001012"  [label="DDG: rc"];
"1000973" -> "1001012"  [label="DDG: X86EMUL_CONTINUE"];
"1001012" -> "1001011"  [label="AST: "];
"1001012" -> "1001014"  [label="CFG: "];
"1001013" -> "1001012"  [label="AST: "];
"1001014" -> "1001012"  [label="AST: "];
"1001015" -> "1001012"  [label="CFG: "];
"1001016" -> "1001012"  [label="CFG: "];
"1001012" -> "1001017"  [label="DDG: rc"];
"1001012" -> "1001017"  [label="DDG: X86EMUL_CONTINUE"];
"1000977" -> "1001012"  [label="DDG: rc"];
"1000939" -> "1000937"  [label="AST: "];
"1000939" -> "1000945"  [label="CFG: "];
"1000940" -> "1000939"  [label="AST: "];
"1000941" -> "1000939"  [label="AST: "];
"1000945" -> "1000939"  [label="AST: "];
"1000937" -> "1000939"  [label="CFG: "];
"1000939" -> "1001017"  [label="DDG: &ctxt->src"];
"1000939" -> "1001017"  [label="DDG: ctxt"];
"1000939" -> "1001017"  [label="DDG: (ctxt->d >> SrcShift) & OpMask"];
"1000939" -> "1000937"  [label="DDG: ctxt"];
"1000939" -> "1000937"  [label="DDG: &ctxt->src"];
"1000939" -> "1000937"  [label="DDG: (ctxt->d >> SrcShift) & OpMask"];
"1000876" -> "1000939"  [label="DDG: ctxt"];
"1000945" -> "1000939"  [label="DDG: ctxt->d >> SrcShift"];
"1000945" -> "1000939"  [label="DDG: OpMask"];
"1000939" -> "1000959"  [label="DDG: ctxt"];
"1000937" -> "1000133"  [label="AST: "];
"1000938" -> "1000937"  [label="AST: "];
"1000954" -> "1000937"  [label="CFG: "];
"1000937" -> "1001017"  [label="DDG: decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask)"];
"1000959" -> "1000957"  [label="AST: "];
"1000959" -> "1000965"  [label="CFG: "];
"1000960" -> "1000959"  [label="AST: "];
"1000961" -> "1000959"  [label="AST: "];
"1000965" -> "1000959"  [label="AST: "];
"1000957" -> "1000959"  [label="CFG: "];
"1000959" -> "1001017"  [label="DDG: (ctxt->d >> Src2Shift) & OpMask"];
"1000959" -> "1001017"  [label="DDG: &ctxt->src2"];
"1000959" -> "1001017"  [label="DDG: ctxt"];
"1000959" -> "1000957"  [label="DDG: ctxt"];
"1000959" -> "1000957"  [label="DDG: &ctxt->src2"];
"1000959" -> "1000957"  [label="DDG: (ctxt->d >> Src2Shift) & OpMask"];
"1000965" -> "1000959"  [label="DDG: ctxt->d >> Src2Shift"];
"1000965" -> "1000959"  [label="DDG: OpMask"];
"1000959" -> "1000979"  [label="DDG: ctxt"];
"1000957" -> "1000133"  [label="AST: "];
"1000958" -> "1000957"  [label="AST: "];
"1000974" -> "1000957"  [label="CFG: "];
"1000957" -> "1001017"  [label="DDG: decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask)"];
"1000979" -> "1000977"  [label="AST: "];
"1000979" -> "1000985"  [label="CFG: "];
"1000980" -> "1000979"  [label="AST: "];
"1000981" -> "1000979"  [label="AST: "];
"1000985" -> "1000979"  [label="AST: "];
"1000977" -> "1000979"  [label="CFG: "];
"1000979" -> "1001017"  [label="DDG: &ctxt->dst"];
"1000979" -> "1001017"  [label="DDG: ctxt"];
"1000979" -> "1001017"  [label="DDG: (ctxt->d >> DstShift) & OpMask"];
"1000979" -> "1000977"  [label="DDG: ctxt"];
"1000979" -> "1000977"  [label="DDG: &ctxt->dst"];
"1000979" -> "1000977"  [label="DDG: (ctxt->d >> DstShift) & OpMask"];
"1000985" -> "1000979"  [label="DDG: ctxt->d >> DstShift"];
"1000985" -> "1000979"  [label="DDG: OpMask"];
"1000977" -> "1000133"  [label="AST: "];
"1000978" -> "1000977"  [label="AST: "];
"1000994" -> "1000977"  [label="CFG: "];
"1000977" -> "1001017"  [label="DDG: decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask)"];
}
