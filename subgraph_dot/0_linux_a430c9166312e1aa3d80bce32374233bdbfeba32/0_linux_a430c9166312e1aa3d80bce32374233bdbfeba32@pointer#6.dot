digraph "0_linux_a430c9166312e1aa3d80bce32374233bdbfeba32@pointer" {
"1000470" [label="(Call,ctxt->modrm = insn_fetch(u8, ctxt))"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000504" [label="(Call,ctxt->modrm & 0x80)"];
"1000500" [label="(Call,mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))"];
"1000496" [label="(Call,mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))"];
"1000484" [label="(Call,(ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))))"];
"1000478" [label="(Call,ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))))"];
"1000533" [label="(Call,ctxt->modrm >> 3)"];
"1000532" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000530" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000553" [label="(Call,ctxt->modrm >> 3)"];
"1000552" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000550" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000561" [label="(Call,ctxt->modrm >> 6)"];
"1000560" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000594" [label="(Call,ctxt->modrm & 7)"];
"1000592" [label="(Call,goffset = ctxt->modrm & 7)"];
"1000676" [label="(Call,ctxt->modrm > 0xbf)"];
"1000691" [label="(Call,ctxt->modrm - 0xc0)"];
"1000708" [label="(Call,ctxt->modrm >> 3)"];
"1000707" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000500" [label="(Call,mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))"];
"1000939" [label="(Call,decode_operand(ctxt, &ctxt->src, (ctxt->d >> SrcShift) & OpMask))"];
"1000484" [label="(Call,(ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))))"];
"1000449" [label="(Identifier,ctxt)"];
"1000566" [label="(Literal,3)"];
"1000708" [label="(Call,ctxt->modrm >> 3)"];
"1000692" [label="(Call,ctxt->modrm)"];
"1000447" [label="(Call,insn_fetch(u8, ctxt))"];
"1000497" [label="(Call,mode == X86EMUL_MODE_PROT64)"];
"1000422" [label="(Identifier,u8)"];
"1000478" [label="(Call,ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))))"];
"1000959" [label="(Call,decode_operand(ctxt, &ctxt->src2, (ctxt->d >> Src2Shift) & OpMask))"];
"1000471" [label="(Call,ctxt->modrm)"];
"1001017" [label="(MethodReturn,int)"];
"1000905" [label="(Call,decode_abs(ctxt, &ctxt->memop))"];
"1000560" [label="(Call,(ctxt->modrm >> 6) == 3)"];
"1000551" [label="(Identifier,goffset)"];
"1000277" [label="(Call,insn_fetch(u8, ctxt))"];
"1000477" [label="(ControlStructure,if (ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))))"];
"1000699" [label="(Call,opcode.u.esc->op[(ctxt->modrm >> 3) & 7])"];
"1000417" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000712" [label="(Literal,3)"];
"1000538" [label="(Literal,7)"];
"1000558" [label="(Literal,7)"];
"1000219" [label="(Call,rc = __do_insn_fetch_bytes(ctxt, 1))"];
"1000512" [label="(Identifier,ctxt)"];
"1000222" [label="(Identifier,ctxt)"];
"1000475" [label="(Identifier,u8)"];
"1000557" [label="(Literal,3)"];
"1000683" [label="(Call,opcode.u.esc->high[ctxt->modrm - 0xc0])"];
"1000470" [label="(Call,ctxt->modrm = insn_fetch(u8, ctxt))"];
"1000532" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000593" [label="(Identifier,goffset)"];
"1000474" [label="(Call,insn_fetch(u8, ctxt))"];
"1000695" [label="(Literal,0xc0)"];
"1000279" [label="(Identifier,ctxt)"];
"1000501" [label="(Call,mode >= X86EMUL_MODE_PROT16)"];
"1000682" [label="(Identifier,opcode)"];
"1000600" [label="(Identifier,opcode)"];
"1000550" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000563" [label="(Identifier,ctxt)"];
"1000565" [label="(Literal,6)"];
"1000554" [label="(Call,ctxt->modrm)"];
"1000553" [label="(Call,ctxt->modrm >> 3)"];
"1000537" [label="(Literal,3)"];
"1000443" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000504" [label="(Call,ctxt->modrm & 0x80)"];
"1000698" [label="(Identifier,opcode)"];
"1000559" [label="(ControlStructure,if ((ctxt->modrm >> 6) == 3))"];
"1000552" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000598" [label="(Literal,7)"];
"1000223" [label="(Literal,1)"];
"1000464" [label="(ControlStructure,if (ctxt->d & ModRM))"];
"1000421" [label="(Call,insn_fetch(u8, ctxt))"];
"1000691" [label="(Call,ctxt->modrm - 0xc0)"];
"1000496" [label="(Call,mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))"];
"1000530" [label="(Call,goffset = (ctxt->modrm >> 3) & 7)"];
"1000580" [label="(Identifier,opcode)"];
"1000479" [label="(Call,ctxt->opcode_len == 1)"];
"1000562" [label="(Call,ctxt->modrm)"];
"1000876" [label="(Call,decode_modrm(ctxt, &ctxt->memop))"];
"1000476" [label="(Identifier,ctxt)"];
"1000979" [label="(Call,decode_operand(ctxt, &ctxt->dst, (ctxt->d >> DstShift) & OpMask))"];
"1000594" [label="(Call,ctxt->modrm & 7)"];
"1000533" [label="(Call,ctxt->modrm >> 3)"];
"1000595" [label="(Call,ctxt->modrm)"];
"1000531" [label="(Identifier,goffset)"];
"1000680" [label="(Literal,0xbf)"];
"1000534" [label="(Call,ctxt->modrm)"];
"1000528" [label="(Block,)"];
"1000273" [label="(Call,ctxt->b = insn_fetch(u8, ctxt))"];
"1000713" [label="(Literal,7)"];
"1000508" [label="(Literal,0x80)"];
"1000675" [label="(ControlStructure,if (ctxt->modrm > 0xbf))"];
"1000221" [label="(Call,__do_insn_fetch_bytes(ctxt, 1))"];
"1000485" [label="(Call,ctxt->b == 0xc5 || ctxt->b == 0xc4)"];
"1000448" [label="(Identifier,u8)"];
"1000423" [label="(Identifier,ctxt)"];
"1000561" [label="(Call,ctxt->modrm >> 6)"];
"1000540" [label="(Identifier,opcode)"];
"1000677" [label="(Call,ctxt->modrm)"];
"1000707" [label="(Call,(ctxt->modrm >> 3) & 7)"];
"1000592" [label="(Call,goffset = ctxt->modrm & 7)"];
"1000505" [label="(Call,ctxt->modrm)"];
"1000278" [label="(Identifier,u8)"];
"1000130" [label="(MethodParameterIn,struct x86_emulate_ctxt *ctxt)"];
"1000676" [label="(Call,ctxt->modrm > 0xbf)"];
"1000709" [label="(Call,ctxt->modrm)"];
"1000568" [label="(Identifier,opcode)"];
"1000481" [label="(Identifier,ctxt)"];
"1000518" [label="(Identifier,ctxt)"];
"1000470" -> "1000464"  [label="AST: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000474" -> "1000470"  [label="AST: "];
"1000481" -> "1000470"  [label="CFG: "];
"1000470" -> "1001017"  [label="DDG: insn_fetch(u8, ctxt)"];
"1000470" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000474" -> "1000470"  [label="DDG: u8"];
"1000474" -> "1000470"  [label="DDG: ctxt"];
"1000470" -> "1000504"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000470" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000474" -> "1000476"  [label="CFG: "];
"1000475" -> "1000474"  [label="AST: "];
"1000476" -> "1000474"  [label="AST: "];
"1000474" -> "1001017"  [label="DDG: ctxt"];
"1000474" -> "1001017"  [label="DDG: u8"];
"1000421" -> "1000474"  [label="DDG: u8"];
"1000421" -> "1000474"  [label="DDG: ctxt"];
"1000277" -> "1000474"  [label="DDG: u8"];
"1000277" -> "1000474"  [label="DDG: ctxt"];
"1000447" -> "1000474"  [label="DDG: u8"];
"1000447" -> "1000474"  [label="DDG: ctxt"];
"1000130" -> "1000474"  [label="DDG: ctxt"];
"1000474" -> "1000876"  [label="DDG: ctxt"];
"1000474" -> "1000905"  [label="DDG: ctxt"];
"1000474" -> "1000939"  [label="DDG: ctxt"];
"1000421" -> "1000417"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000417" -> "1000421"  [label="CFG: "];
"1000421" -> "1001017"  [label="DDG: ctxt"];
"1000421" -> "1001017"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: u8"];
"1000421" -> "1000417"  [label="DDG: ctxt"];
"1000277" -> "1000421"  [label="DDG: u8"];
"1000277" -> "1000421"  [label="DDG: ctxt"];
"1000130" -> "1000421"  [label="DDG: ctxt"];
"1000421" -> "1000447"  [label="DDG: u8"];
"1000421" -> "1000447"  [label="DDG: ctxt"];
"1000421" -> "1000876"  [label="DDG: ctxt"];
"1000421" -> "1000905"  [label="DDG: ctxt"];
"1000421" -> "1000939"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000273" -> "1000277"  [label="CFG: "];
"1000277" -> "1001017"  [label="DDG: u8"];
"1000277" -> "1001017"  [label="DDG: ctxt"];
"1000277" -> "1000273"  [label="DDG: u8"];
"1000277" -> "1000273"  [label="DDG: ctxt"];
"1000221" -> "1000277"  [label="DDG: ctxt"];
"1000130" -> "1000277"  [label="DDG: ctxt"];
"1000277" -> "1000876"  [label="DDG: ctxt"];
"1000277" -> "1000905"  [label="DDG: ctxt"];
"1000277" -> "1000939"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1001017"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: ctxt"];
"1000221" -> "1000219"  [label="DDG: 1"];
"1000130" -> "1000221"  [label="DDG: ctxt"];
"1000130" -> "1000129"  [label="AST: "];
"1000130" -> "1001017"  [label="DDG: ctxt"];
"1000130" -> "1000447"  [label="DDG: ctxt"];
"1000130" -> "1000876"  [label="DDG: ctxt"];
"1000130" -> "1000905"  [label="DDG: ctxt"];
"1000130" -> "1000939"  [label="DDG: ctxt"];
"1000130" -> "1000959"  [label="DDG: ctxt"];
"1000130" -> "1000979"  [label="DDG: ctxt"];
"1000447" -> "1000443"  [label="AST: "];
"1000447" -> "1000449"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000449" -> "1000447"  [label="AST: "];
"1000443" -> "1000447"  [label="CFG: "];
"1000447" -> "1001017"  [label="DDG: ctxt"];
"1000447" -> "1001017"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: u8"];
"1000447" -> "1000443"  [label="DDG: ctxt"];
"1000447" -> "1000876"  [label="DDG: ctxt"];
"1000447" -> "1000905"  [label="DDG: ctxt"];
"1000447" -> "1000939"  [label="DDG: ctxt"];
"1000504" -> "1000500"  [label="AST: "];
"1000504" -> "1000508"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000508" -> "1000504"  [label="AST: "];
"1000500" -> "1000504"  [label="CFG: "];
"1000504" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000504" -> "1000500"  [label="DDG: ctxt->modrm"];
"1000504" -> "1000500"  [label="DDG: 0x80"];
"1000504" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000504" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000504" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000504" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000500" -> "1000496"  [label="AST: "];
"1000500" -> "1000501"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000496" -> "1000500"  [label="CFG: "];
"1000500" -> "1001017"  [label="DDG: mode >= X86EMUL_MODE_PROT16"];
"1000500" -> "1001017"  [label="DDG: ctxt->modrm & 0x80"];
"1000500" -> "1000496"  [label="DDG: mode >= X86EMUL_MODE_PROT16"];
"1000500" -> "1000496"  [label="DDG: ctxt->modrm & 0x80"];
"1000501" -> "1000500"  [label="DDG: mode"];
"1000501" -> "1000500"  [label="DDG: X86EMUL_MODE_PROT16"];
"1000496" -> "1000484"  [label="AST: "];
"1000496" -> "1000497"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000484" -> "1000496"  [label="CFG: "];
"1000496" -> "1001017"  [label="DDG: mode == X86EMUL_MODE_PROT64"];
"1000496" -> "1001017"  [label="DDG: mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)"];
"1000496" -> "1000484"  [label="DDG: mode == X86EMUL_MODE_PROT64"];
"1000496" -> "1000484"  [label="DDG: mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)"];
"1000497" -> "1000496"  [label="DDG: mode"];
"1000497" -> "1000496"  [label="DDG: X86EMUL_MODE_PROT64"];
"1000484" -> "1000478"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000478" -> "1000484"  [label="CFG: "];
"1000484" -> "1001017"  [label="DDG: mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))"];
"1000484" -> "1001017"  [label="DDG: ctxt->b == 0xc5 || ctxt->b == 0xc4"];
"1000484" -> "1000478"  [label="DDG: ctxt->b == 0xc5 || ctxt->b == 0xc4"];
"1000484" -> "1000478"  [label="DDG: mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80))"];
"1000485" -> "1000484"  [label="DDG: ctxt->b == 0xc5"];
"1000485" -> "1000484"  [label="DDG: ctxt->b == 0xc4"];
"1000478" -> "1000477"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000512" -> "1000478"  [label="CFG: "];
"1000518" -> "1000478"  [label="CFG: "];
"1000478" -> "1001017"  [label="DDG: ctxt->opcode_len == 1"];
"1000478" -> "1001017"  [label="DDG: ctxt->opcode_len == 1 && (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))"];
"1000478" -> "1001017"  [label="DDG: (ctxt->b == 0xc5 || ctxt->b == 0xc4) &&\n\t    (mode == X86EMUL_MODE_PROT64 ||\n\t    (mode >= X86EMUL_MODE_PROT16 && (ctxt->modrm & 0x80)))"];
"1000479" -> "1000478"  [label="DDG: ctxt->opcode_len"];
"1000479" -> "1000478"  [label="DDG: 1"];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000537"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000537" -> "1000533"  [label="AST: "];
"1000538" -> "1000533"  [label="CFG: "];
"1000533" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000533" -> "1000532"  [label="DDG: ctxt->modrm"];
"1000533" -> "1000532"  [label="DDG: 3"];
"1000708" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000561" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000594" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000691" -> "1000533"  [label="DDG: ctxt->modrm"];
"1000533" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000533" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000533" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000532" -> "1000530"  [label="AST: "];
"1000532" -> "1000538"  [label="CFG: "];
"1000538" -> "1000532"  [label="AST: "];
"1000530" -> "1000532"  [label="CFG: "];
"1000532" -> "1001017"  [label="DDG: ctxt->modrm >> 3"];
"1000532" -> "1000530"  [label="DDG: ctxt->modrm >> 3"];
"1000532" -> "1000530"  [label="DDG: 7"];
"1000530" -> "1000528"  [label="AST: "];
"1000531" -> "1000530"  [label="AST: "];
"1000540" -> "1000530"  [label="CFG: "];
"1000530" -> "1001017"  [label="DDG: goffset"];
"1000530" -> "1001017"  [label="DDG: (ctxt->modrm >> 3) & 7"];
"1000553" -> "1000552"  [label="AST: "];
"1000553" -> "1000557"  [label="CFG: "];
"1000554" -> "1000553"  [label="AST: "];
"1000557" -> "1000553"  [label="AST: "];
"1000558" -> "1000553"  [label="CFG: "];
"1000553" -> "1000552"  [label="DDG: ctxt->modrm"];
"1000553" -> "1000552"  [label="DDG: 3"];
"1000708" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000561" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000594" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000691" -> "1000553"  [label="DDG: ctxt->modrm"];
"1000553" -> "1000561"  [label="DDG: ctxt->modrm"];
"1000552" -> "1000550"  [label="AST: "];
"1000552" -> "1000558"  [label="CFG: "];
"1000558" -> "1000552"  [label="AST: "];
"1000550" -> "1000552"  [label="CFG: "];
"1000552" -> "1001017"  [label="DDG: ctxt->modrm >> 3"];
"1000552" -> "1000550"  [label="DDG: ctxt->modrm >> 3"];
"1000552" -> "1000550"  [label="DDG: 7"];
"1000550" -> "1000528"  [label="AST: "];
"1000551" -> "1000550"  [label="AST: "];
"1000563" -> "1000550"  [label="CFG: "];
"1000550" -> "1001017"  [label="DDG: goffset"];
"1000550" -> "1001017"  [label="DDG: (ctxt->modrm >> 3) & 7"];
"1000561" -> "1000560"  [label="AST: "];
"1000561" -> "1000565"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000565" -> "1000561"  [label="AST: "];
"1000566" -> "1000561"  [label="CFG: "];
"1000561" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000561" -> "1000560"  [label="DDG: ctxt->modrm"];
"1000561" -> "1000560"  [label="DDG: 6"];
"1000561" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000561" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000560" -> "1000559"  [label="AST: "];
"1000560" -> "1000566"  [label="CFG: "];
"1000566" -> "1000560"  [label="AST: "];
"1000568" -> "1000560"  [label="CFG: "];
"1000580" -> "1000560"  [label="CFG: "];
"1000560" -> "1001017"  [label="DDG: (ctxt->modrm >> 6) == 3"];
"1000560" -> "1001017"  [label="DDG: ctxt->modrm >> 6"];
"1000594" -> "1000592"  [label="AST: "];
"1000594" -> "1000598"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="AST: "];
"1000592" -> "1000594"  [label="CFG: "];
"1000594" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000594" -> "1000592"  [label="DDG: ctxt->modrm"];
"1000594" -> "1000592"  [label="DDG: 7"];
"1000708" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000691" -> "1000594"  [label="DDG: ctxt->modrm"];
"1000594" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000592" -> "1000528"  [label="AST: "];
"1000593" -> "1000592"  [label="AST: "];
"1000600" -> "1000592"  [label="CFG: "];
"1000592" -> "1001017"  [label="DDG: ctxt->modrm & 7"];
"1000592" -> "1001017"  [label="DDG: goffset"];
"1000676" -> "1000675"  [label="AST: "];
"1000676" -> "1000680"  [label="CFG: "];
"1000677" -> "1000676"  [label="AST: "];
"1000680" -> "1000676"  [label="AST: "];
"1000682" -> "1000676"  [label="CFG: "];
"1000698" -> "1000676"  [label="CFG: "];
"1000676" -> "1001017"  [label="DDG: ctxt->modrm > 0xbf"];
"1000708" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000691" -> "1000676"  [label="DDG: ctxt->modrm"];
"1000676" -> "1000691"  [label="DDG: ctxt->modrm"];
"1000676" -> "1000708"  [label="DDG: ctxt->modrm"];
"1000691" -> "1000683"  [label="AST: "];
"1000691" -> "1000695"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000695" -> "1000691"  [label="AST: "];
"1000683" -> "1000691"  [label="CFG: "];
"1000691" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000708" -> "1000707"  [label="AST: "];
"1000708" -> "1000712"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000712" -> "1000708"  [label="AST: "];
"1000713" -> "1000708"  [label="CFG: "];
"1000708" -> "1001017"  [label="DDG: ctxt->modrm"];
"1000708" -> "1000707"  [label="DDG: ctxt->modrm"];
"1000708" -> "1000707"  [label="DDG: 3"];
"1000707" -> "1000699"  [label="AST: "];
"1000707" -> "1000713"  [label="CFG: "];
"1000713" -> "1000707"  [label="AST: "];
"1000699" -> "1000707"  [label="CFG: "];
"1000707" -> "1001017"  [label="DDG: ctxt->modrm >> 3"];
}
