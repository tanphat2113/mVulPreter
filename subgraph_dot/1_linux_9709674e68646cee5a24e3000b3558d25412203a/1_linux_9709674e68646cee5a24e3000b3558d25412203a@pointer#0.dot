digraph "1_linux_9709674e68646cee5a24e3000b3558d25412203a@pointer" {
"1000148" [label="(Call,rt = ip_route_output_ports(sock_net(sk), &fl4, sk, daddr,\n \t\t\t\t   inet->inet_saddr, inet->inet_dport,\n \t\t\t\t   inet->inet_sport, sk->sk_protocol,\n \t\t\t\t   RT_CONN_FLAGS(sk), sk->sk_bound_dev_if))"];
"1000150" [label="(Call,ip_route_output_ports(sock_net(sk), &fl4, sk, daddr,\n \t\t\t\t   inet->inet_saddr, inet->inet_dport,\n \t\t\t\t   inet->inet_sport, sk->sk_protocol,\n \t\t\t\t   RT_CONN_FLAGS(sk), sk->sk_bound_dev_if))"];
"1000151" [label="(Call,sock_net(sk))"];
"1000122" [label="(Call,__sk_dst_check(sk, 0))"];
"1000120" [label="(Call,__sk_dst_get(sk))"];
"1000106" [label="(Call,inet_sk(sk))"];
"1000101" [label="(MethodParameterIn,struct sock *sk)"];
"1000169" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000141" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000110" [label="(Call,daddr = inet->inet_daddr)"];
"1000176" [label="(Call,IS_ERR(rt))"];
"1000175" [label="(Call,!IS_ERR(rt))"];
"1000123" [label="(Identifier,sk)"];
"1000172" [label="(Identifier,sk)"];
"1000185" [label="(MethodReturn,void)"];
"1000142" [label="(Identifier,daddr)"];
"1000119" [label="(Call,! __sk_dst_get(sk))"];
"1000170" [label="(Identifier,sk)"];
"1000150" [label="(Call,ip_route_output_ports(sock_net(sk), &fl4, sk, daddr,\n \t\t\t\t   inet->inet_saddr, inet->inet_dport,\n \t\t\t\t   inet->inet_sport, sk->sk_protocol,\n \t\t\t\t   RT_CONN_FLAGS(sk), sk->sk_bound_dev_if))"];
"1000155" [label="(Identifier,sk)"];
"1000122" [label="(Call,__sk_dst_check(sk, 0))"];
"1000175" [label="(Call,!IS_ERR(rt))"];
"1000163" [label="(Call,inet->inet_sport)"];
"1000176" [label="(Call,IS_ERR(rt))"];
"1000124" [label="(Literal,0)"];
"1000177" [label="(Identifier,rt)"];
"1000166" [label="(Call,sk->sk_protocol)"];
"1000152" [label="(Identifier,sk)"];
"1000143" [label="(Call,inet_opt->opt.faddr)"];
"1000118" [label="(Call,! __sk_dst_get(sk) || __sk_dst_check(sk, 0))"];
"1000148" [label="(Call,rt = ip_route_output_ports(sock_net(sk), &fl4, sk, daddr,\n \t\t\t\t   inet->inet_saddr, inet->inet_dport,\n \t\t\t\t   inet->inet_sport, sk->sk_protocol,\n \t\t\t\t   RT_CONN_FLAGS(sk), sk->sk_bound_dev_if))"];
"1000184" [label="(Call,rcu_read_unlock())"];
"1000111" [label="(Identifier,daddr)"];
"1000178" [label="(Call,__sk_dst_set(sk, &rt->dst))"];
"1000174" [label="(ControlStructure,if (!IS_ERR(rt)))"];
"1000157" [label="(Call,inet->inet_saddr)"];
"1000112" [label="(Call,inet->inet_daddr)"];
"1000106" [label="(Call,inet_sk(sk))"];
"1000169" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000153" [label="(Call,&fl4)"];
"1000171" [label="(Call,sk->sk_bound_dev_if)"];
"1000101" [label="(MethodParameterIn,struct sock *sk)"];
"1000120" [label="(Call,__sk_dst_get(sk))"];
"1000156" [label="(Identifier,daddr)"];
"1000149" [label="(Identifier,rt)"];
"1000151" [label="(Call,sock_net(sk))"];
"1000110" [label="(Call,daddr = inet->inet_daddr)"];
"1000179" [label="(Identifier,sk)"];
"1000141" [label="(Call,daddr = inet_opt->opt.faddr)"];
"1000107" [label="(Identifier,sk)"];
"1000154" [label="(Identifier,fl4)"];
"1000104" [label="(Call,*inet = inet_sk(sk))"];
"1000160" [label="(Call,inet->inet_dport)"];
"1000121" [label="(Identifier,sk)"];
"1000133" [label="(ControlStructure,if (inet_opt && inet_opt->opt.srr))"];
"1000102" [label="(Block,)"];
"1000148" -> "1000102"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000177" -> "1000148"  [label="CFG: "];
"1000148" -> "1000185"  [label="DDG: ip_route_output_ports(sock_net(sk), &fl4, sk, daddr,\n \t\t\t\t   inet->inet_saddr, inet->inet_dport,\n \t\t\t\t   inet->inet_sport, sk->sk_protocol,\n \t\t\t\t   RT_CONN_FLAGS(sk), sk->sk_bound_dev_if)"];
"1000150" -> "1000148"  [label="DDG: &fl4"];
"1000150" -> "1000148"  [label="DDG: sk"];
"1000150" -> "1000148"  [label="DDG: sk->sk_protocol"];
"1000150" -> "1000148"  [label="DDG: daddr"];
"1000150" -> "1000148"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000150" -> "1000148"  [label="DDG: inet->inet_saddr"];
"1000150" -> "1000148"  [label="DDG: sk->sk_bound_dev_if"];
"1000150" -> "1000148"  [label="DDG: sock_net(sk)"];
"1000150" -> "1000148"  [label="DDG: inet->inet_dport"];
"1000150" -> "1000148"  [label="DDG: inet->inet_sport"];
"1000148" -> "1000176"  [label="DDG: rt"];
"1000150" -> "1000171"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000153" -> "1000150"  [label="AST: "];
"1000155" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="AST: "];
"1000160" -> "1000150"  [label="AST: "];
"1000163" -> "1000150"  [label="AST: "];
"1000166" -> "1000150"  [label="AST: "];
"1000169" -> "1000150"  [label="AST: "];
"1000171" -> "1000150"  [label="AST: "];
"1000150" -> "1000185"  [label="DDG: sock_net(sk)"];
"1000150" -> "1000185"  [label="DDG: RT_CONN_FLAGS(sk)"];
"1000150" -> "1000185"  [label="DDG: inet->inet_saddr"];
"1000150" -> "1000185"  [label="DDG: inet->inet_dport"];
"1000150" -> "1000185"  [label="DDG: daddr"];
"1000150" -> "1000185"  [label="DDG: inet->inet_sport"];
"1000150" -> "1000185"  [label="DDG: sk->sk_protocol"];
"1000150" -> "1000185"  [label="DDG: sk"];
"1000150" -> "1000185"  [label="DDG: &fl4"];
"1000150" -> "1000185"  [label="DDG: sk->sk_bound_dev_if"];
"1000151" -> "1000150"  [label="DDG: sk"];
"1000169" -> "1000150"  [label="DDG: sk"];
"1000101" -> "1000150"  [label="DDG: sk"];
"1000141" -> "1000150"  [label="DDG: daddr"];
"1000110" -> "1000150"  [label="DDG: daddr"];
"1000150" -> "1000178"  [label="DDG: sk"];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="CFG: "];
"1000122" -> "1000151"  [label="DDG: sk"];
"1000120" -> "1000151"  [label="DDG: sk"];
"1000101" -> "1000151"  [label="DDG: sk"];
"1000151" -> "1000169"  [label="DDG: sk"];
"1000122" -> "1000118"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000122" -> "1000185"  [label="DDG: sk"];
"1000122" -> "1000118"  [label="DDG: sk"];
"1000122" -> "1000118"  [label="DDG: 0"];
"1000120" -> "1000122"  [label="DDG: sk"];
"1000101" -> "1000122"  [label="DDG: sk"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000185"  [label="DDG: sk"];
"1000120" -> "1000119"  [label="DDG: sk"];
"1000106" -> "1000120"  [label="DDG: sk"];
"1000101" -> "1000120"  [label="DDG: sk"];
"1000106" -> "1000104"  [label="AST: "];
"1000106" -> "1000107"  [label="CFG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000104" -> "1000106"  [label="CFG: "];
"1000106" -> "1000104"  [label="DDG: sk"];
"1000101" -> "1000106"  [label="DDG: sk"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000185"  [label="DDG: sk"];
"1000101" -> "1000169"  [label="DDG: sk"];
"1000101" -> "1000178"  [label="DDG: sk"];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000172" -> "1000169"  [label="CFG: "];
"1000141" -> "1000133"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="CFG: "];
"1000141" -> "1000185"  [label="DDG: inet_opt->opt.faddr"];
"1000110" -> "1000102"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000121" -> "1000110"  [label="CFG: "];
"1000110" -> "1000185"  [label="DDG: inet->inet_daddr"];
"1000110" -> "1000185"  [label="DDG: daddr"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000177"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000175" -> "1000176"  [label="CFG: "];
"1000176" -> "1000185"  [label="DDG: rt"];
"1000176" -> "1000175"  [label="DDG: rt"];
"1000175" -> "1000174"  [label="AST: "];
"1000179" -> "1000175"  [label="CFG: "];
"1000184" -> "1000175"  [label="CFG: "];
"1000175" -> "1000185"  [label="DDG: IS_ERR(rt)"];
"1000175" -> "1000185"  [label="DDG: !IS_ERR(rt)"];
}
