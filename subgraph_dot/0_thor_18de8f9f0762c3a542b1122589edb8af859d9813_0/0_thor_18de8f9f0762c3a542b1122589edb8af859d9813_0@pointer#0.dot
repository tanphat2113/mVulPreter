digraph "0_thor_18de8f9f0762c3a542b1122589edb8af859d9813_0@pointer" {
"1000254" [label="(Call,decoder_info->subsample & 3)"];
"1000245" [label="(Call,decoder_info->subsample & 2)"];
"1000237" [label="(Call,decoder_info->subsample & 1)"];
"1000224" [label="(Call,decoder_info->subsample = get_flc(2, stream))"];
"1000228" [label="(Call,get_flc(2, stream))"];
"1000207" [label="(Call,get_flc(1, stream))"];
"1000200" [label="(Call,get_flc(2, stream))"];
"1000193" [label="(Call,get_flc(1, stream))"];
"1000186" [label="(Call,get_flc(1, stream))"];
"1000179" [label="(Call,get_flc(1, stream))"];
"1000172" [label="(Call,get_flc(1, stream))"];
"1000165" [label="(Call,get_flc(2, stream))"];
"1000157" [label="(Call,get_flc(2, stream))"];
"1000149" [label="(Call,get_flc(1, stream))"];
"1000142" [label="(Call,get_flc(1, stream))"];
"1000123" [label="(Call,get_flc(3, stream))"];
"1000116" [label="(Call,get_flc(16, stream))"];
"1000109" [label="(Call,get_flc(16, stream))"];
"1000103" [label="(MethodParameterIn,stream_t *stream)"];
"1000220" [label="(Call,get_flc(6, stream))"];
"1000253" [label="(Call,(decoder_info->subsample & 3) == 3)"];
"1000252" [label="(Call,((decoder_info->subsample & 3) == 3) * 2)"];
"1000231" [label="(Call,decoder_info->subsample = // 0: 400  1: 420  2: 422  3: 444\n    (decoder_info->subsample & 1) * 20 + (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000270" [label="(Call,decoder_info->subsample != 400)"];
"1000235" [label="(Call,(decoder_info->subsample & 1) * 20 + (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000243" [label="(Call,(decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000251" [label="(Call,((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000202" [label="(Identifier,stream)"];
"1000208" [label="(Literal,1)"];
"1000182" [label="(Call,decoder_info->clpf = get_flc(1, stream))"];
"1000250" [label="(Literal,22)"];
"1000112" [label="(Call,decoder_info->height = get_flc(16, stream))"];
"1000194" [label="(Literal,1)"];
"1000278" [label="(Identifier,decoder_info)"];
"1000222" [label="(Identifier,stream)"];
"1000236" [label="(Call,(decoder_info->subsample & 1) * 20)"];
"1000161" [label="(Call,decoder_info->interp_ref = get_flc(2, stream))"];
"1000152" [label="(Call,decoder_info->max_num_ref = get_flc(2, stream) + 1)"];
"1000111" [label="(Identifier,stream)"];
"1000260" [label="(Literal,2)"];
"1000193" [label="(Call,get_flc(1, stream))"];
"1000253" [label="(Call,(decoder_info->subsample & 3) == 3)"];
"1000188" [label="(Identifier,stream)"];
"1000165" [label="(Call,get_flc(2, stream))"];
"1000249" [label="(Literal,2)"];
"1000105" [label="(Call,decoder_info->width = get_flc(16, stream))"];
"1000117" [label="(Literal,16)"];
"1000143" [label="(Literal,1)"];
"1000167" [label="(Identifier,stream)"];
"1000195" [label="(Identifier,stream)"];
"1000337" [label="(Call,get_flc(1, stream))"];
"1000173" [label="(Literal,1)"];
"1000159" [label="(Identifier,stream)"];
"1000238" [label="(Call,decoder_info->subsample)"];
"1000166" [label="(Literal,2)"];
"1000158" [label="(Literal,2)"];
"1000251" [label="(Call,((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000241" [label="(Literal,1)"];
"1000340" [label="(MethodReturn,void)"];
"1000174" [label="(Identifier,stream)"];
"1000232" [label="(Call,decoder_info->subsample)"];
"1000269" [label="(ControlStructure,if (decoder_info->subsample != 400))"];
"1000151" [label="(Identifier,stream)"];
"1000119" [label="(Call,decoder_info->log2_sb_size = get_flc(3, stream))"];
"1000189" [label="(Call,decoder_info->use_block_contexts = get_flc(1, stream))"];
"1000172" [label="(Call,get_flc(1, stream))"];
"1000261" [label="(Literal,400)"];
"1000233" [label="(Identifier,decoder_info)"];
"1000123" [label="(Call,get_flc(3, stream))"];
"1000266" [label="(Call,get_flc(4, stream))"];
"1000160" [label="(Literal,1)"];
"1000271" [label="(Call,decoder_info->subsample)"];
"1000280" [label="(Call,get_flc(1, stream))"];
"1000231" [label="(Call,decoder_info->subsample = // 0: 400  1: 420  2: 422  3: 444\n    (decoder_info->subsample & 1) * 20 + (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000196" [label="(Call,decoder_info->bipred = get_flc(2, stream))"];
"1000149" [label="(Call,get_flc(1, stream))"];
"1000156" [label="(Call,get_flc(2, stream) + 1)"];
"1000221" [label="(Literal,6)"];
"1000144" [label="(Identifier,stream)"];
"1000201" [label="(Literal,2)"];
"1000150" [label="(Literal,1)"];
"1000125" [label="(Identifier,stream)"];
"1000258" [label="(Literal,3)"];
"1000138" [label="(Call,decoder_info->pb_split = get_flc(1, stream))"];
"1000179" [label="(Call,get_flc(1, stream))"];
"1000246" [label="(Call,decoder_info->subsample)"];
"1000220" [label="(Call,get_flc(6, stream))"];
"1000142" [label="(Call,get_flc(1, stream))"];
"1000223" [label="(Literal,32)"];
"1000320" [label="(Call,get_flc(1, stream))"];
"1000207" [label="(Call,get_flc(1, stream))"];
"1000252" [label="(Call,((decoder_info->subsample & 3) == 3) * 2)"];
"1000116" [label="(Call,get_flc(16, stream))"];
"1000124" [label="(Literal,3)"];
"1000225" [label="(Call,decoder_info->subsample)"];
"1000118" [label="(Identifier,stream)"];
"1000292" [label="(Identifier,decoder_info)"];
"1000219" [label="(Call,get_flc(6, stream) - 32)"];
"1000203" [label="(Call,decoder_info->qmtx = get_flc(1, stream))"];
"1000157" [label="(Call,get_flc(2, stream))"];
"1000287" [label="(Call,get_flc(1, stream))"];
"1000244" [label="(Call,(decoder_info->subsample & 2) * 22)"];
"1000230" [label="(Identifier,stream)"];
"1000264" [label="(Identifier,decoder_info)"];
"1000104" [label="(Block,)"];
"1000295" [label="(Call,get_flc(1, stream))"];
"1000200" [label="(Call,get_flc(2, stream))"];
"1000242" [label="(Literal,20)"];
"1000312" [label="(Call,get_flc(1, stream))"];
"1000259" [label="(Literal,3)"];
"1000274" [label="(Literal,400)"];
"1000209" [label="(Identifier,stream)"];
"1000110" [label="(Literal,16)"];
"1000270" [label="(Call,decoder_info->subsample != 400)"];
"1000224" [label="(Call,decoder_info->subsample = get_flc(2, stream))"];
"1000255" [label="(Call,decoder_info->subsample)"];
"1000175" [label="(Call,decoder_info->deblocking = get_flc(1, stream))"];
"1000235" [label="(Call,(decoder_info->subsample & 1) * 20 + (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000228" [label="(Call,get_flc(2, stream))"];
"1000187" [label="(Literal,1)"];
"1000109" [label="(Call,get_flc(16, stream))"];
"1000254" [label="(Call,decoder_info->subsample & 3)"];
"1000237" [label="(Call,decoder_info->subsample & 1)"];
"1000145" [label="(Call,decoder_info->tb_split_enable = get_flc(1, stream))"];
"1000245" [label="(Call,decoder_info->subsample & 2)"];
"1000103" [label="(MethodParameterIn,stream_t *stream)"];
"1000180" [label="(Literal,1)"];
"1000243" [label="(Call,(decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400)"];
"1000229" [label="(Literal,2)"];
"1000168" [label="(Call,decoder_info->max_delta_qp = get_flc(1, stream))"];
"1000181" [label="(Identifier,stream)"];
"1000186" [label="(Call,get_flc(1, stream))"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000259" -> "1000254"  [label="CFG: "];
"1000254" -> "1000253"  [label="DDG: decoder_info->subsample"];
"1000254" -> "1000253"  [label="DDG: 3"];
"1000245" -> "1000254"  [label="DDG: decoder_info->subsample"];
"1000245" -> "1000244"  [label="AST: "];
"1000245" -> "1000249"  [label="CFG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000249" -> "1000245"  [label="AST: "];
"1000250" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="DDG: decoder_info->subsample"];
"1000245" -> "1000244"  [label="DDG: 2"];
"1000237" -> "1000245"  [label="DDG: decoder_info->subsample"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000241"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="AST: "];
"1000242" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="DDG: decoder_info->subsample"];
"1000237" -> "1000236"  [label="DDG: 1"];
"1000224" -> "1000237"  [label="DDG: decoder_info->subsample"];
"1000224" -> "1000104"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000233" -> "1000224"  [label="CFG: "];
"1000224" -> "1000340"  [label="DDG: get_flc(2, stream)"];
"1000228" -> "1000224"  [label="DDG: 2"];
"1000228" -> "1000224"  [label="DDG: stream"];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000207" -> "1000228"  [label="DDG: stream"];
"1000220" -> "1000228"  [label="DDG: stream"];
"1000103" -> "1000228"  [label="DDG: stream"];
"1000228" -> "1000266"  [label="DDG: stream"];
"1000207" -> "1000203"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000203" -> "1000207"  [label="CFG: "];
"1000207" -> "1000203"  [label="DDG: 1"];
"1000207" -> "1000203"  [label="DDG: stream"];
"1000200" -> "1000207"  [label="DDG: stream"];
"1000103" -> "1000207"  [label="DDG: stream"];
"1000207" -> "1000220"  [label="DDG: stream"];
"1000200" -> "1000196"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000196" -> "1000200"  [label="CFG: "];
"1000200" -> "1000196"  [label="DDG: 2"];
"1000200" -> "1000196"  [label="DDG: stream"];
"1000193" -> "1000200"  [label="DDG: stream"];
"1000103" -> "1000200"  [label="DDG: stream"];
"1000193" -> "1000189"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000189" -> "1000193"  [label="CFG: "];
"1000193" -> "1000189"  [label="DDG: 1"];
"1000193" -> "1000189"  [label="DDG: stream"];
"1000186" -> "1000193"  [label="DDG: stream"];
"1000103" -> "1000193"  [label="DDG: stream"];
"1000186" -> "1000182"  [label="AST: "];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000182" -> "1000186"  [label="CFG: "];
"1000186" -> "1000182"  [label="DDG: 1"];
"1000186" -> "1000182"  [label="DDG: stream"];
"1000179" -> "1000186"  [label="DDG: stream"];
"1000103" -> "1000186"  [label="DDG: stream"];
"1000179" -> "1000175"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000179" -> "1000175"  [label="DDG: 1"];
"1000179" -> "1000175"  [label="DDG: stream"];
"1000172" -> "1000179"  [label="DDG: stream"];
"1000103" -> "1000179"  [label="DDG: stream"];
"1000172" -> "1000168"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000168" -> "1000172"  [label="CFG: "];
"1000172" -> "1000168"  [label="DDG: 1"];
"1000172" -> "1000168"  [label="DDG: stream"];
"1000165" -> "1000172"  [label="DDG: stream"];
"1000103" -> "1000172"  [label="DDG: stream"];
"1000165" -> "1000161"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000165" -> "1000161"  [label="DDG: 2"];
"1000165" -> "1000161"  [label="DDG: stream"];
"1000157" -> "1000165"  [label="DDG: stream"];
"1000103" -> "1000165"  [label="DDG: stream"];
"1000157" -> "1000156"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000160" -> "1000157"  [label="CFG: "];
"1000157" -> "1000152"  [label="DDG: 2"];
"1000157" -> "1000152"  [label="DDG: stream"];
"1000157" -> "1000156"  [label="DDG: 2"];
"1000157" -> "1000156"  [label="DDG: stream"];
"1000149" -> "1000157"  [label="DDG: stream"];
"1000103" -> "1000157"  [label="DDG: stream"];
"1000149" -> "1000145"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000145" -> "1000149"  [label="CFG: "];
"1000149" -> "1000145"  [label="DDG: 1"];
"1000149" -> "1000145"  [label="DDG: stream"];
"1000142" -> "1000149"  [label="DDG: stream"];
"1000103" -> "1000149"  [label="DDG: stream"];
"1000142" -> "1000138"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000138" -> "1000142"  [label="CFG: "];
"1000142" -> "1000138"  [label="DDG: 1"];
"1000142" -> "1000138"  [label="DDG: stream"];
"1000123" -> "1000142"  [label="DDG: stream"];
"1000103" -> "1000142"  [label="DDG: stream"];
"1000123" -> "1000119"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000119" -> "1000123"  [label="CFG: "];
"1000123" -> "1000119"  [label="DDG: 3"];
"1000123" -> "1000119"  [label="DDG: stream"];
"1000116" -> "1000123"  [label="DDG: stream"];
"1000103" -> "1000123"  [label="DDG: stream"];
"1000116" -> "1000112"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000112" -> "1000116"  [label="CFG: "];
"1000116" -> "1000112"  [label="DDG: 16"];
"1000116" -> "1000112"  [label="DDG: stream"];
"1000109" -> "1000116"  [label="DDG: stream"];
"1000103" -> "1000116"  [label="DDG: stream"];
"1000109" -> "1000105"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000105" -> "1000109"  [label="CFG: "];
"1000109" -> "1000105"  [label="DDG: 16"];
"1000109" -> "1000105"  [label="DDG: stream"];
"1000103" -> "1000109"  [label="DDG: stream"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000340"  [label="DDG: stream"];
"1000103" -> "1000220"  [label="DDG: stream"];
"1000103" -> "1000266"  [label="DDG: stream"];
"1000103" -> "1000280"  [label="DDG: stream"];
"1000103" -> "1000287"  [label="DDG: stream"];
"1000103" -> "1000295"  [label="DDG: stream"];
"1000103" -> "1000312"  [label="DDG: stream"];
"1000103" -> "1000320"  [label="DDG: stream"];
"1000103" -> "1000337"  [label="DDG: stream"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000223" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="DDG: 6"];
"1000220" -> "1000219"  [label="DDG: stream"];
"1000253" -> "1000252"  [label="AST: "];
"1000253" -> "1000259"  [label="CFG: "];
"1000259" -> "1000253"  [label="AST: "];
"1000260" -> "1000253"  [label="CFG: "];
"1000253" -> "1000340"  [label="DDG: decoder_info->subsample & 3"];
"1000253" -> "1000252"  [label="DDG: decoder_info->subsample & 3"];
"1000253" -> "1000252"  [label="DDG: 3"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000260"  [label="CFG: "];
"1000260" -> "1000252"  [label="AST: "];
"1000261" -> "1000252"  [label="CFG: "];
"1000252" -> "1000340"  [label="DDG: (decoder_info->subsample & 3) == 3"];
"1000252" -> "1000231"  [label="DDG: (decoder_info->subsample & 3) == 3"];
"1000252" -> "1000231"  [label="DDG: 2"];
"1000252" -> "1000235"  [label="DDG: (decoder_info->subsample & 3) == 3"];
"1000252" -> "1000235"  [label="DDG: 2"];
"1000252" -> "1000243"  [label="DDG: (decoder_info->subsample & 3) == 3"];
"1000252" -> "1000243"  [label="DDG: 2"];
"1000252" -> "1000251"  [label="DDG: (decoder_info->subsample & 3) == 3"];
"1000252" -> "1000251"  [label="DDG: 2"];
"1000231" -> "1000104"  [label="AST: "];
"1000231" -> "1000235"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000235" -> "1000231"  [label="AST: "];
"1000264" -> "1000231"  [label="CFG: "];
"1000231" -> "1000340"  [label="DDG: (decoder_info->subsample & 1) * 20 + (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400"];
"1000236" -> "1000231"  [label="DDG: decoder_info->subsample & 1"];
"1000236" -> "1000231"  [label="DDG: 20"];
"1000244" -> "1000231"  [label="DDG: decoder_info->subsample & 2"];
"1000244" -> "1000231"  [label="DDG: 22"];
"1000231" -> "1000270"  [label="DDG: decoder_info->subsample"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000274"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="AST: "];
"1000278" -> "1000270"  [label="CFG: "];
"1000292" -> "1000270"  [label="CFG: "];
"1000270" -> "1000340"  [label="DDG: decoder_info->subsample != 400"];
"1000270" -> "1000340"  [label="DDG: decoder_info->subsample"];
"1000235" -> "1000243"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000243" -> "1000235"  [label="AST: "];
"1000235" -> "1000340"  [label="DDG: (decoder_info->subsample & 1) * 20"];
"1000235" -> "1000340"  [label="DDG: (decoder_info->subsample & 2) * 22 +\n    ((decoder_info->subsample & 3) == 3) * 2 + 400"];
"1000236" -> "1000235"  [label="DDG: decoder_info->subsample & 1"];
"1000236" -> "1000235"  [label="DDG: 20"];
"1000244" -> "1000235"  [label="DDG: decoder_info->subsample & 2"];
"1000244" -> "1000235"  [label="DDG: 22"];
"1000243" -> "1000251"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000251" -> "1000243"  [label="AST: "];
"1000243" -> "1000340"  [label="DDG: ((decoder_info->subsample & 3) == 3) * 2 + 400"];
"1000243" -> "1000340"  [label="DDG: (decoder_info->subsample & 2) * 22"];
"1000244" -> "1000243"  [label="DDG: decoder_info->subsample & 2"];
"1000244" -> "1000243"  [label="DDG: 22"];
"1000251" -> "1000261"  [label="CFG: "];
"1000261" -> "1000251"  [label="AST: "];
"1000251" -> "1000340"  [label="DDG: ((decoder_info->subsample & 3) == 3) * 2"];
}
