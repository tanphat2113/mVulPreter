digraph "0_ImageMagick_0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734_3@API" {
"1000154" [label="(Call,assert(exception != (ExceptionInfo *) NULL))"];
"1000155" [label="(Call,exception != (ExceptionInfo *) NULL)"];
"1000115" [label="(MethodParameterIn,ExceptionInfo *exception)"];
"1000157" [label="(Call,(ExceptionInfo *) NULL)"];
"1000136" [label="(Call,(const ImageInfo *) NULL)"];
"1000116" [label="(Block,)"];
"1001632" [label="(Call,QueueAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1001355" [label="(Call,QueueAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1000591" [label="(Call,BlobToImage(read_info,png,length+16,exception))"];
"1002173" [label="(MethodReturn,static Image *)"];
"1001528" [label="(Call,(Quantum *) NULL)"];
"1000138" [label="(Identifier,NULL)"];
"1000163" [label="(Identifier,exception)"];
"1000934" [label="(Call,AcquireImageColormap(image,image->colors,exception))"];
"1000157" [label="(Call,(ExceptionInfo *) NULL)"];
"1001757" [label="(Call,QueueAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1002128" [label="(Call,AcquireNextImage(image_info,image,exception))"];
"1000136" [label="(Call,(const ImageInfo *) NULL)"];
"1000115" [label="(MethodParameterIn,ExceptionInfo *exception)"];
"1002088" [label="(Call,ThrowFileException(exception,CorruptImageError,\n              \"UnexpectedEndOfFile\",image->filename))"];
"1000188" [label="(Call,(Image *) NULL)"];
"1000962" [label="(Call,(unsigned char *) NULL)"];
"1001300" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1001461" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1000173" [label="(Call,OpenBlob(image_info,image,ReadBinaryBlobMode,exception))"];
"1001944" [label="(Call,(Quantum *) NULL)"];
"1000156" [label="(Identifier,exception)"];
"1000168" [label="(Call,AcquireImage(image_info,exception))"];
"1001089" [label="(Call,SetImageExtent(image,image->columns,image->rows,exception))"];
"1001644" [label="(Call,(Quantum *) NULL)"];
"1000159" [label="(Identifier,NULL)"];
"1000505" [label="(Call,(unsigned char *) NULL)"];
"1001899" [label="(Call,SyncImage(image,exception))"];
"1000352" [label="(Call,ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",\n          image->filename))"];
"1001171" [label="(Call,QueueAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1001516" [label="(Call,QueueAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1001932" [label="(Call,GetAuthenticPixels(image,0,y,image->columns,1,exception))"];
"1001183" [label="(Call,(Quantum *) NULL)"];
"1002136" [label="(Call,(Image *) NULL)"];
"1001852" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1000134" [label="(Call,image_info != (const ImageInfo *) NULL)"];
"1001769" [label="(Call,(Quantum *) NULL)"];
"1000444" [label="(Call,ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",\n          image->filename))"];
"1000155" [label="(Call,exception != (ExceptionInfo *) NULL)"];
"1000154" [label="(Call,assert(exception != (ExceptionInfo *) NULL))"];
"1002077" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1001367" [label="(Call,(Quantum *) NULL)"];
"1001701" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1001577" [label="(Call,SyncAuthenticPixels(image,exception))"];
"1000154" -> "1000116"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000163" -> "1000154"  [label="CFG: "];
"1000154" -> "1002173"  [label="DDG: exception != (ExceptionInfo *) NULL"];
"1000154" -> "1002173"  [label="DDG: assert(exception != (ExceptionInfo *) NULL)"];
"1000155" -> "1000154"  [label="DDG: exception"];
"1000155" -> "1000154"  [label="DDG: (ExceptionInfo *) NULL"];
"1000155" -> "1000157"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000157" -> "1000155"  [label="AST: "];
"1000155" -> "1002173"  [label="DDG: (ExceptionInfo *) NULL"];
"1000115" -> "1000155"  [label="DDG: exception"];
"1000157" -> "1000155"  [label="DDG: NULL"];
"1000155" -> "1000168"  [label="DDG: exception"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1002173"  [label="DDG: exception"];
"1000115" -> "1000168"  [label="DDG: exception"];
"1000115" -> "1000173"  [label="DDG: exception"];
"1000115" -> "1000352"  [label="DDG: exception"];
"1000115" -> "1000444"  [label="DDG: exception"];
"1000115" -> "1000591"  [label="DDG: exception"];
"1000115" -> "1000934"  [label="DDG: exception"];
"1000115" -> "1001089"  [label="DDG: exception"];
"1000115" -> "1001171"  [label="DDG: exception"];
"1000115" -> "1001300"  [label="DDG: exception"];
"1000115" -> "1001355"  [label="DDG: exception"];
"1000115" -> "1001461"  [label="DDG: exception"];
"1000115" -> "1001516"  [label="DDG: exception"];
"1000115" -> "1001577"  [label="DDG: exception"];
"1000115" -> "1001632"  [label="DDG: exception"];
"1000115" -> "1001701"  [label="DDG: exception"];
"1000115" -> "1001757"  [label="DDG: exception"];
"1000115" -> "1001852"  [label="DDG: exception"];
"1000115" -> "1001899"  [label="DDG: exception"];
"1000115" -> "1001932"  [label="DDG: exception"];
"1000115" -> "1002077"  [label="DDG: exception"];
"1000115" -> "1002088"  [label="DDG: exception"];
"1000115" -> "1002128"  [label="DDG: exception"];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000157" -> "1002173"  [label="DDG: NULL"];
"1000136" -> "1000157"  [label="DDG: NULL"];
"1000157" -> "1000188"  [label="DDG: NULL"];
"1000157" -> "1000505"  [label="DDG: NULL"];
"1000157" -> "1000962"  [label="DDG: NULL"];
"1000157" -> "1001183"  [label="DDG: NULL"];
"1000157" -> "1001367"  [label="DDG: NULL"];
"1000157" -> "1001528"  [label="DDG: NULL"];
"1000157" -> "1001644"  [label="DDG: NULL"];
"1000157" -> "1001769"  [label="DDG: NULL"];
"1000157" -> "1001944"  [label="DDG: NULL"];
"1000157" -> "1002136"  [label="DDG: NULL"];
"1000136" -> "1000134"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000136" -> "1000134"  [label="DDG: NULL"];
}
