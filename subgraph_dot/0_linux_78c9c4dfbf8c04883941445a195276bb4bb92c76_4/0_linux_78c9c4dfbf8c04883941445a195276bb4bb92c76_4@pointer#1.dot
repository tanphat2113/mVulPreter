digraph "0_linux_78c9c4dfbf8c04883941445a195276bb4bb92c76_4@pointer" {
"1000153" [label="(Call,hrtimer_cb_get_time(timer))"];
"1000103" [label="(MethodParameterIn,struct hrtimer *timer)"];
"1000151" [label="(Call,now = hrtimer_cb_get_time(timer))"];
"1000170" [label="(Call,ktime_add(now, kj))"];
"1000168" [label="(Call,now = ktime_add(now, kj))"];
"1000177" [label="(Call,hrtimer_forward(timer, now,\n\t\t\t\t\t\t\t    timr->it_interval))"];
"1000173" [label="(Call,timr->it_overrun += hrtimer_forward(timer, now,\n\t\t\t\t\t\t\t    timr->it_interval))"];
"1000149" [label="(Block,)"];
"1000170" [label="(Call,ktime_add(now, kj))"];
"1000175" [label="(Identifier,timr)"];
"1000200" [label="(MethodReturn,static enum hrtimer_restart)"];
"1000158" [label="(Identifier,kj)"];
"1000163" [label="(Call,timr->it_interval < kj)"];
"1000169" [label="(Identifier,now)"];
"1000172" [label="(Identifier,kj)"];
"1000162" [label="(ControlStructure,if (timr->it_interval < kj))"];
"1000103" [label="(MethodParameterIn,struct hrtimer *timer)"];
"1000180" [label="(Call,timr->it_interval)"];
"1000171" [label="(Identifier,now)"];
"1000173" [label="(Call,timr->it_overrun += hrtimer_forward(timer, now,\n\t\t\t\t\t\t\t    timr->it_interval))"];
"1000153" [label="(Call,hrtimer_cb_get_time(timer))"];
"1000174" [label="(Call,timr->it_overrun)"];
"1000168" [label="(Call,now = ktime_add(now, kj))"];
"1000184" [label="(Identifier,ret)"];
"1000152" [label="(Identifier,now)"];
"1000177" [label="(Call,hrtimer_forward(timer, now,\n\t\t\t\t\t\t\t    timr->it_interval))"];
"1000178" [label="(Identifier,timer)"];
"1000179" [label="(Identifier,now)"];
"1000154" [label="(Identifier,timer)"];
"1000151" [label="(Call,now = hrtimer_cb_get_time(timer))"];
"1000153" -> "1000151"  [label="AST: "];
"1000153" -> "1000154"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000153" -> "1000151"  [label="DDG: timer"];
"1000103" -> "1000153"  [label="DDG: timer"];
"1000153" -> "1000177"  [label="DDG: timer"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000200"  [label="DDG: timer"];
"1000103" -> "1000177"  [label="DDG: timer"];
"1000151" -> "1000149"  [label="AST: "];
"1000152" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000151" -> "1000200"  [label="DDG: hrtimer_cb_get_time(timer)"];
"1000151" -> "1000170"  [label="DDG: now"];
"1000151" -> "1000177"  [label="DDG: now"];
"1000170" -> "1000168"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000170" -> "1000200"  [label="DDG: kj"];
"1000170" -> "1000168"  [label="DDG: now"];
"1000170" -> "1000168"  [label="DDG: kj"];
"1000163" -> "1000170"  [label="DDG: kj"];
"1000168" -> "1000162"  [label="AST: "];
"1000169" -> "1000168"  [label="AST: "];
"1000175" -> "1000168"  [label="CFG: "];
"1000168" -> "1000200"  [label="DDG: ktime_add(now, kj)"];
"1000168" -> "1000177"  [label="DDG: now"];
"1000177" -> "1000173"  [label="AST: "];
"1000177" -> "1000180"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000180" -> "1000177"  [label="AST: "];
"1000173" -> "1000177"  [label="CFG: "];
"1000177" -> "1000200"  [label="DDG: now"];
"1000177" -> "1000200"  [label="DDG: timer"];
"1000177" -> "1000200"  [label="DDG: timr->it_interval"];
"1000177" -> "1000173"  [label="DDG: timer"];
"1000177" -> "1000173"  [label="DDG: now"];
"1000177" -> "1000173"  [label="DDG: timr->it_interval"];
"1000163" -> "1000177"  [label="DDG: timr->it_interval"];
"1000173" -> "1000149"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000184" -> "1000173"  [label="CFG: "];
"1000173" -> "1000200"  [label="DDG: timr->it_overrun"];
"1000173" -> "1000200"  [label="DDG: hrtimer_forward(timer, now,\n\t\t\t\t\t\t\t    timr->it_interval)"];
}
