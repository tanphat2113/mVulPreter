digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_1@integer" {
"1000171" [label="(Call,top = itr + itr_size)"];
"1000154" [label="(Call,itr = usb_dev->rawdescriptors[index])"];
"1000161" [label="(Call,itr_size = le16_to_cpu(usb_dev->actconfig->desc.wTotalLength))"];
"1000163" [label="(Call,le16_to_cpu(usb_dev->actconfig->desc.wTotalLength))"];
"1000215" [label="(Call,top - (void *)secd)"];
"1000214" [label="(Call,top - (void *)secd < needed)"];
"1000222" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000225" [label="(Call,top - (void *) secd)"];
"1000241" [label="(Call,top - (void *)secd)"];
"1000240" [label="(Call,top - (void *)secd < needed)"];
"1000248" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000251" [label="(Call,top - (void *) secd)"];
"1000154" [label="(Call,itr = usb_dev->rawdescriptors[index])"];
"1000220" [label="(Identifier,needed)"];
"1000260" [label="(Identifier,itr)"];
"1000246" [label="(Identifier,needed)"];
"1000227" [label="(Call,(void *) secd)"];
"1000217" [label="(Call,(void *)secd)"];
"1000234" [label="(Identifier,needed)"];
"1000208" [label="(Call,needed = sizeof(*secd))"];
"1000163" [label="(Call,le16_to_cpu(usb_dev->actconfig->desc.wTotalLength))"];
"1000249" [label="(Identifier,dev)"];
"1000256" [label="(Identifier,needed)"];
"1000253" [label="(Call,(void *) secd)"];
"1000155" [label="(Identifier,itr)"];
"1000216" [label="(Identifier,top)"];
"1000224" [label="(Literal,\"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\")"];
"1000226" [label="(Identifier,top)"];
"1000171" [label="(Call,top = itr + itr_size)"];
"1000233" [label="(Call,needed = le16_to_cpu(secd->wTotalLength))"];
"1000225" [label="(Call,top - (void *) secd)"];
"1000241" [label="(Call,top - (void *)secd)"];
"1000239" [label="(ControlStructure,if (top - (void *)secd < needed))"];
"1000162" [label="(Identifier,itr_size)"];
"1000252" [label="(Identifier,top)"];
"1000378" [label="(MethodReturn,static int)"];
"1000213" [label="(ControlStructure,if (top - (void *)secd < needed))"];
"1000161" [label="(Call,itr_size = le16_to_cpu(usb_dev->actconfig->desc.wTotalLength))"];
"1000240" [label="(Call,top - (void *)secd < needed)"];
"1000177" [label="(Identifier,result)"];
"1000243" [label="(Call,(void *)secd)"];
"1000242" [label="(Identifier,top)"];
"1000250" [label="(Literal,\"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\")"];
"1000248" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000164" [label="(Call,usb_dev->actconfig->desc.wTotalLength)"];
"1000173" [label="(Call,itr + itr_size)"];
"1000232" [label="(Literal,0)"];
"1000258" [label="(Literal,0)"];
"1000222" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000221" [label="(Block,)"];
"1000215" [label="(Call,top - (void *)secd)"];
"1000156" [label="(Call,usb_dev->rawdescriptors[index])"];
"1000105" [label="(Block,)"];
"1000230" [label="(Identifier,needed)"];
"1000247" [label="(Block,)"];
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000184" [label="(Call,le16_to_cpu(usb_dev->actconfig->desc.wTotalLength))"];
"1000223" [label="(Identifier,dev)"];
"1000214" [label="(Call,top - (void *)secd < needed)"];
"1000251" [label="(Call,top - (void *) secd)"];
"1000172" [label="(Identifier,top)"];
"1000171" -> "1000105"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000177" -> "1000171"  [label="CFG: "];
"1000171" -> "1000378"  [label="DDG: "];
"1000171" -> "1000378"  [label="DDG: "];
"1000154" -> "1000171"  [label="DDG: "];
"1000161" -> "1000171"  [label="DDG: "];
"1000171" -> "1000215"  [label="DDG: "];
"1000154" -> "1000105"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000162" -> "1000154"  [label="CFG: "];
"1000154" -> "1000173"  [label="DDG: "];
"1000161" -> "1000105"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000172" -> "1000161"  [label="CFG: "];
"1000163" -> "1000161"  [label="DDG: "];
"1000161" -> "1000173"  [label="DDG: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000163" -> "1000184"  [label="DDG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000220" -> "1000215"  [label="CFG: "];
"1000215" -> "1000378"  [label="DDG: "];
"1000215" -> "1000214"  [label="DDG: "];
"1000215" -> "1000214"  [label="DDG: "];
"1000217" -> "1000215"  [label="DDG: "];
"1000215" -> "1000225"  [label="DDG: "];
"1000215" -> "1000241"  [label="DDG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000220"  [label="CFG: "];
"1000220" -> "1000214"  [label="AST: "];
"1000223" -> "1000214"  [label="CFG: "];
"1000234" -> "1000214"  [label="CFG: "];
"1000214" -> "1000378"  [label="DDG: "];
"1000214" -> "1000378"  [label="DDG: "];
"1000208" -> "1000214"  [label="DDG: "];
"1000214" -> "1000222"  [label="DDG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000230"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000225" -> "1000222"  [label="AST: "];
"1000230" -> "1000222"  [label="AST: "];
"1000232" -> "1000222"  [label="CFG: "];
"1000222" -> "1000378"  [label="DDG: "];
"1000222" -> "1000378"  [label="DDG: "];
"1000222" -> "1000378"  [label="DDG: "];
"1000222" -> "1000378"  [label="DDG: "];
"1000123" -> "1000222"  [label="DDG: "];
"1000225" -> "1000222"  [label="DDG: "];
"1000225" -> "1000222"  [label="DDG: "];
"1000225" -> "1000227"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000230" -> "1000225"  [label="CFG: "];
"1000225" -> "1000378"  [label="DDG: "];
"1000225" -> "1000378"  [label="DDG: "];
"1000227" -> "1000225"  [label="DDG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000241" -> "1000243"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="CFG: "];
"1000241" -> "1000378"  [label="DDG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000241" -> "1000240"  [label="DDG: "];
"1000243" -> "1000241"  [label="DDG: "];
"1000241" -> "1000251"  [label="DDG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000240" -> "1000246"  [label="CFG: "];
"1000246" -> "1000240"  [label="AST: "];
"1000249" -> "1000240"  [label="CFG: "];
"1000260" -> "1000240"  [label="CFG: "];
"1000240" -> "1000378"  [label="DDG: "];
"1000240" -> "1000378"  [label="DDG: "];
"1000240" -> "1000378"  [label="DDG: "];
"1000233" -> "1000240"  [label="DDG: "];
"1000240" -> "1000248"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000256"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000251" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000258" -> "1000248"  [label="CFG: "];
"1000248" -> "1000378"  [label="DDG: "];
"1000248" -> "1000378"  [label="DDG: "];
"1000248" -> "1000378"  [label="DDG: "];
"1000248" -> "1000378"  [label="DDG: "];
"1000123" -> "1000248"  [label="DDG: "];
"1000251" -> "1000248"  [label="DDG: "];
"1000251" -> "1000248"  [label="DDG: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000256" -> "1000251"  [label="CFG: "];
"1000251" -> "1000378"  [label="DDG: "];
"1000251" -> "1000378"  [label="DDG: "];
"1000253" -> "1000251"  [label="DDG: "];
}
