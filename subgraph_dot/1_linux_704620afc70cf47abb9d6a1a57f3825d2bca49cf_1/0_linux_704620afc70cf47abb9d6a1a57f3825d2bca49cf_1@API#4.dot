digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_1@API" {
"1000312" [label="(Call,etd->bLength < sizeof(*etd))"];
"1000323" [label="(Call,(size_t)etd->bLength)"];
"1000320" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000360" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000371" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000332" [label="(Call,itr += etd->bLength)"];
"1000285" [label="(Call,itr < top)"];
"1000289" [label="(Call,etd = itr)"];
"1000355" [label="(Call,wusbhc->ccm1_etd = etd)"];
"1000365" [label="(Call,wusbhc->ccm1_etd == NULL)"];
"1000294" [label="(Call,top - itr)"];
"1000293" [label="(Call,top - itr < sizeof(*etd))"];
"1000304" [label="(Call,top - itr)"];
"1000301" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000268" [label="(Call,top = (void *) secd + le16_to_cpu(secd->wTotalLength))"];
"1000371" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000287" [label="(Identifier,top)"];
"1000306" [label="(Identifier,itr)"];
"1000333" [label="(Identifier,itr)"];
"1000372" [label="(Identifier,dev)"];
"1000316" [label="(Call,sizeof(*etd))"];
"1000309" [label="(Identifier,etd)"];
"1000369" [label="(Identifier,NULL)"];
"1000321" [label="(Identifier,dev)"];
"1000362" [label="(Literal,\"supported encryption types: %s\n\")"];
"1000365" [label="(Call,wusbhc->ccm1_etd == NULL)"];
"1000330" [label="(Identifier,etd)"];
"1000325" [label="(Call,etd->bLength)"];
"1000361" [label="(Identifier,dev)"];
"1000373" [label="(Literal,\"E: host doesn't support CCM-1 crypto\n\")"];
"1000320" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000294" [label="(Call,top - itr)"];
"1000296" [label="(Identifier,itr)"];
"1000328" [label="(Call,sizeof(*etd))"];
"1000367" [label="(Identifier,wusbhc)"];
"1000301" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000322" [label="(Literal,\"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\")"];
"1000364" [label="(ControlStructure,if (wusbhc->ccm1_etd == NULL))"];
"1000293" [label="(Call,top - itr < sizeof(*etd))"];
"1000302" [label="(Identifier,dev)"];
"1000360" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000307" [label="(Call,sizeof(*etd))"];
"1000311" [label="(ControlStructure,if (etd->bLength < sizeof(*etd)))"];
"1000323" [label="(Call,(size_t)etd->bLength)"];
"1000366" [label="(Call,wusbhc->ccm1_etd)"];
"1000259" [label="(Call,itr = (void *) secd + sizeof(*secd))"];
"1000355" [label="(Call,wusbhc->ccm1_etd = etd)"];
"1000377" [label="(Literal,0)"];
"1000284" [label="(ControlStructure,while (itr < top))"];
"1000378" [label="(MethodReturn,static int)"];
"1000313" [label="(Call,etd->bLength)"];
"1000299" [label="(Identifier,etd)"];
"1000334" [label="(Call,etd->bLength)"];
"1000285" [label="(Call,itr < top)"];
"1000288" [label="(Block,)"];
"1000305" [label="(Identifier,top)"];
"1000295" [label="(Identifier,top)"];
"1000290" [label="(Identifier,etd)"];
"1000363" [label="(Identifier,buf)"];
"1000289" [label="(Call,etd = itr)"];
"1000356" [label="(Call,wusbhc->ccm1_etd)"];
"1000292" [label="(ControlStructure,if (top - itr < sizeof(*etd)))"];
"1000291" [label="(Identifier,itr)"];
"1000319" [label="(Block,)"];
"1000370" [label="(Block,)"];
"1000332" [label="(Call,itr += etd->bLength)"];
"1000359" [label="(Identifier,etd)"];
"1000310" [label="(ControlStructure,break;)"];
"1000286" [label="(Identifier,itr)"];
"1000105" [label="(Block,)"];
"1000304" [label="(Call,top - itr)"];
"1000303" [label="(Literal,\"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\")"];
"1000375" [label="(Literal,0)"];
"1000312" [label="(Call,etd->bLength < sizeof(*etd))"];
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000338" [label="(Identifier,bytes)"];
"1000297" [label="(Call,sizeof(*etd))"];
"1000314" [label="(Identifier,etd)"];
"1000331" [label="(ControlStructure,break;)"];
"1000300" [label="(Block,)"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000316"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="AST: "];
"1000321" -> "1000312"  [label="CFG: "];
"1000333" -> "1000312"  [label="CFG: "];
"1000312" -> "1000378"  [label="DDG: "];
"1000312" -> "1000323"  [label="DDG: "];
"1000312" -> "1000332"  [label="DDG: "];
"1000323" -> "1000320"  [label="AST: "];
"1000323" -> "1000325"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000330" -> "1000323"  [label="CFG: "];
"1000323" -> "1000378"  [label="DDG: "];
"1000323" -> "1000320"  [label="DDG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000328"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000328" -> "1000320"  [label="AST: "];
"1000331" -> "1000320"  [label="CFG: "];
"1000320" -> "1000378"  [label="DDG: "];
"1000320" -> "1000378"  [label="DDG: "];
"1000123" -> "1000320"  [label="DDG: "];
"1000320" -> "1000360"  [label="DDG: "];
"1000360" -> "1000105"  [label="AST: "];
"1000360" -> "1000363"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000362" -> "1000360"  [label="AST: "];
"1000363" -> "1000360"  [label="AST: "];
"1000367" -> "1000360"  [label="CFG: "];
"1000360" -> "1000378"  [label="DDG: "];
"1000360" -> "1000378"  [label="DDG: "];
"1000360" -> "1000378"  [label="DDG: "];
"1000301" -> "1000360"  [label="DDG: "];
"1000123" -> "1000360"  [label="DDG: "];
"1000360" -> "1000371"  [label="DDG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000375" -> "1000371"  [label="CFG: "];
"1000371" -> "1000378"  [label="DDG: "];
"1000371" -> "1000378"  [label="DDG: "];
"1000332" -> "1000288"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000338" -> "1000332"  [label="CFG: "];
"1000332" -> "1000378"  [label="DDG: "];
"1000332" -> "1000285"  [label="DDG: "];
"1000294" -> "1000332"  [label="DDG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000290" -> "1000285"  [label="CFG: "];
"1000361" -> "1000285"  [label="CFG: "];
"1000285" -> "1000378"  [label="DDG: "];
"1000285" -> "1000378"  [label="DDG: "];
"1000285" -> "1000378"  [label="DDG: "];
"1000259" -> "1000285"  [label="DDG: "];
"1000268" -> "1000285"  [label="DDG: "];
"1000294" -> "1000285"  [label="DDG: "];
"1000285" -> "1000289"  [label="DDG: "];
"1000285" -> "1000294"  [label="DDG: "];
"1000285" -> "1000294"  [label="DDG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000291"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="AST: "];
"1000295" -> "1000289"  [label="CFG: "];
"1000289" -> "1000378"  [label="DDG: "];
"1000289" -> "1000355"  [label="DDG: "];
"1000355" -> "1000288"  [label="AST: "];
"1000355" -> "1000359"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000359" -> "1000355"  [label="AST: "];
"1000286" -> "1000355"  [label="CFG: "];
"1000355" -> "1000378"  [label="DDG: "];
"1000355" -> "1000365"  [label="DDG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000365" -> "1000369"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000369" -> "1000365"  [label="AST: "];
"1000372" -> "1000365"  [label="CFG: "];
"1000377" -> "1000365"  [label="CFG: "];
"1000365" -> "1000378"  [label="DDG: "];
"1000365" -> "1000378"  [label="DDG: "];
"1000365" -> "1000378"  [label="DDG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000294" -> "1000296"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000299" -> "1000294"  [label="CFG: "];
"1000294" -> "1000378"  [label="DDG: "];
"1000294" -> "1000378"  [label="DDG: "];
"1000294" -> "1000293"  [label="DDG: "];
"1000294" -> "1000293"  [label="DDG: "];
"1000294" -> "1000304"  [label="DDG: "];
"1000294" -> "1000304"  [label="DDG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000297"  [label="CFG: "];
"1000297" -> "1000293"  [label="AST: "];
"1000302" -> "1000293"  [label="CFG: "];
"1000314" -> "1000293"  [label="CFG: "];
"1000293" -> "1000378"  [label="DDG: "];
"1000293" -> "1000378"  [label="DDG: "];
"1000304" -> "1000301"  [label="AST: "];
"1000304" -> "1000306"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000309" -> "1000304"  [label="CFG: "];
"1000304" -> "1000378"  [label="DDG: "];
"1000304" -> "1000378"  [label="DDG: "];
"1000304" -> "1000301"  [label="DDG: "];
"1000304" -> "1000301"  [label="DDG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000307"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000307" -> "1000301"  [label="AST: "];
"1000310" -> "1000301"  [label="CFG: "];
"1000301" -> "1000378"  [label="DDG: "];
"1000301" -> "1000378"  [label="DDG: "];
"1000123" -> "1000301"  [label="DDG: "];
}
