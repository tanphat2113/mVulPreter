digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_32@API" {
"1000401" [label="(Call,ipc.opt = &opt_copy.opt)"];
"1000423" [label="(Call,ipc.opt && ipc.opt->opt.srr)"];
"1000470" [label="(Call,ipc.opt && ipc.opt->opt.is_strictroute)"];
"1000464" [label="(Call,(msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute))"];
"1000460" [label="(Call,sock_flag(sk, SOCK_LOCALROUTE) ||\n \t    (msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute))"];
"1000799" [label="(Call,kfree(ipc.opt))"];
"1000387" [label="(Block,)"];
"1000437" [label="(Identifier,daddr)"];
"1000464" [label="(Call,(msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute))"];
"1000427" [label="(Call,ipc.opt->opt.srr)"];
"1000490" [label="(Identifier,daddr)"];
"1000401" [label="(Call,ipc.opt = &opt_copy.opt)"];
"1000186" [label="(Call,ipc.opt = NULL)"];
"1000799" [label="(Call,kfree(ipc.opt))"];
"1000424" [label="(Call,ipc.opt)"];
"1000422" [label="(ControlStructure,if (ipc.opt && ipc.opt->opt.srr))"];
"1000372" [label="(Call,!ipc.opt)"];
"1000483" [label="(Identifier,tos)"];
"1000471" [label="(Call,ipc.opt)"];
"1000474" [label="(Call,ipc.opt->opt.is_strictroute)"];
"1000465" [label="(Call,msg->msg_flags & MSG_DONTROUTE)"];
"1000409" [label="(Call,rcu_read_unlock())"];
"1000460" [label="(Call,sock_flag(sk, SOCK_LOCALROUTE) ||\n \t    (msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute))"];
"1000402" [label="(Call,ipc.opt)"];
"1000461" [label="(Call,sock_flag(sk, SOCK_LOCALROUTE))"];
"1000805" [label="(Identifier,err)"];
"1000470" [label="(Call,ipc.opt && ipc.opt->opt.is_strictroute)"];
"1000423" [label="(Call,ipc.opt && ipc.opt->opt.srr)"];
"1000850" [label="(MethodReturn,int)"];
"1000454" [label="(Identifier,tos)"];
"1000800" [label="(Call,ipc.opt)"];
"1000459" [label="(ControlStructure,if (sock_flag(sk, SOCK_LOCALROUTE) ||\n \t    (msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute)))"];
"1000405" [label="(Call,&opt_copy.opt)"];
"1000797" [label="(ControlStructure,if (free))"];
"1000401" -> "1000387"  [label="AST: "];
"1000401" -> "1000405"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="AST: "];
"1000409" -> "1000401"  [label="CFG: "];
"1000401" -> "1000850"  [label="DDG: &opt_copy.opt"];
"1000401" -> "1000423"  [label="DDG: ipc.opt"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000423" -> "1000427"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000427" -> "1000423"  [label="AST: "];
"1000437" -> "1000423"  [label="CFG: "];
"1000454" -> "1000423"  [label="CFG: "];
"1000423" -> "1000850"  [label="DDG: ipc.opt->opt.srr"];
"1000423" -> "1000850"  [label="DDG: ipc.opt && ipc.opt->opt.srr"];
"1000423" -> "1000850"  [label="DDG: ipc.opt"];
"1000372" -> "1000423"  [label="DDG: ipc.opt"];
"1000423" -> "1000470"  [label="DDG: ipc.opt"];
"1000423" -> "1000799"  [label="DDG: ipc.opt"];
"1000470" -> "1000464"  [label="AST: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000470" -> "1000474"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000474" -> "1000470"  [label="AST: "];
"1000464" -> "1000470"  [label="CFG: "];
"1000470" -> "1000850"  [label="DDG: ipc.opt->opt.is_strictroute"];
"1000470" -> "1000850"  [label="DDG: ipc.opt"];
"1000470" -> "1000464"  [label="DDG: ipc.opt"];
"1000470" -> "1000464"  [label="DDG: ipc.opt->opt.is_strictroute"];
"1000470" -> "1000799"  [label="DDG: ipc.opt"];
"1000464" -> "1000460"  [label="AST: "];
"1000464" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="AST: "];
"1000460" -> "1000464"  [label="CFG: "];
"1000464" -> "1000850"  [label="DDG: msg->msg_flags & MSG_DONTROUTE"];
"1000464" -> "1000850"  [label="DDG: ipc.opt && ipc.opt->opt.is_strictroute"];
"1000464" -> "1000460"  [label="DDG: msg->msg_flags & MSG_DONTROUTE"];
"1000464" -> "1000460"  [label="DDG: ipc.opt && ipc.opt->opt.is_strictroute"];
"1000465" -> "1000464"  [label="DDG: msg->msg_flags"];
"1000465" -> "1000464"  [label="DDG: MSG_DONTROUTE"];
"1000460" -> "1000459"  [label="AST: "];
"1000460" -> "1000461"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000483" -> "1000460"  [label="CFG: "];
"1000490" -> "1000460"  [label="CFG: "];
"1000460" -> "1000850"  [label="DDG: sock_flag(sk, SOCK_LOCALROUTE) ||\n \t    (msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute)"];
"1000460" -> "1000850"  [label="DDG: sock_flag(sk, SOCK_LOCALROUTE)"];
"1000460" -> "1000850"  [label="DDG: (msg->msg_flags & MSG_DONTROUTE) ||\n\t    (ipc.opt && ipc.opt->opt.is_strictroute)"];
"1000461" -> "1000460"  [label="DDG: sk"];
"1000461" -> "1000460"  [label="DDG: SOCK_LOCALROUTE"];
"1000799" -> "1000797"  [label="AST: "];
"1000799" -> "1000800"  [label="CFG: "];
"1000800" -> "1000799"  [label="AST: "];
"1000805" -> "1000799"  [label="CFG: "];
"1000799" -> "1000850"  [label="DDG: ipc.opt"];
"1000799" -> "1000850"  [label="DDG: kfree(ipc.opt)"];
"1000186" -> "1000799"  [label="DDG: ipc.opt"];
}
