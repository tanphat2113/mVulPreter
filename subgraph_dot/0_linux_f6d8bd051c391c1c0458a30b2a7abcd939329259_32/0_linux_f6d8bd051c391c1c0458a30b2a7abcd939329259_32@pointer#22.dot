digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_32@pointer" {
"1000636" [label="(Call,ipc.addr = rt->rt_dst)"];
"1000634" [label="(Call,daddr = ipc.addr = rt->rt_dst)"];
"1000677" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000675" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000804" [label="(Call,!err)"];
"1000810" [label="(Call,err == -ENOBUFS)"];
"1000809" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000828" [label="(Return,return err;)"];
"1000709" [label="(Call,fl4->daddr = daddr)"];
"1000677" [label="(Call,udp_send_skb(skb, daddr, dport))"];
"1000637" [label="(Call,ipc.addr)"];
"1000846" [label="(Call,err = 0)"];
"1000710" [label="(Call,fl4->daddr)"];
"1000828" [label="(Return,return err;)"];
"1000804" [label="(Call,!err)"];
"1000681" [label="(ControlStructure,goto out;)"];
"1000803" [label="(ControlStructure,if (!err))"];
"1000810" [label="(Call,err == -ENOBUFS)"];
"1000629" [label="(ControlStructure,if (!ipc.addr))"];
"1000775" [label="(Call,err = udp_push_pending_frames(sk))"];
"1000535" [label="(Call,flowi4_init_output(&fl4, ipc.oif, sk->sk_mark, tos,\n\t\t\t\t   RT_SCOPE_UNIVERSE, sk->sk_protocol,\n\t\t\t\t   inet_sk_flowi_flags(sk)|FLOWI_FLAG_CAN_SLEEP,\n\t\t\t\t   faddr, saddr, dport, inet->inet_sport))"];
"1000742" [label="(Call,err = ip_append_data(sk, getfrag, msg->msg_iov, ulen,\n\t\t\tsizeof(struct udphdr), &ipc, &rt,\n\t\t\tcorkreq ? msg->msg_flags|MSG_MORE : msg->msg_flags))"];
"1000636" [label="(Call,ipc.addr = rt->rt_dst)"];
"1000716" [label="(Identifier,fl4)"];
"1000829" [label="(Identifier,err)"];
"1000591" [label="(Call,err = -EACCES)"];
"1000678" [label="(Identifier,skb)"];
"1000635" [label="(Identifier,daddr)"];
"1000489" [label="(Call,ipv4_is_multicast(daddr))"];
"1000805" [label="(Identifier,err)"];
"1000814" [label="(Call,test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000676" [label="(Identifier,err)"];
"1000809" [label="(Call,err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags))"];
"1000850" [label="(MethodReturn,int)"];
"1000679" [label="(Identifier,daddr)"];
"1000692" [label="(Call,err = -EINVAL)"];
"1000665" [label="(Call,err = PTR_ERR(skb))"];
"1000713" [label="(Identifier,daddr)"];
"1000808" [label="(ControlStructure,if (err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)))"];
"1000634" [label="(Call,daddr = ipc.addr = rt->rt_dst)"];
"1000645" [label="(Identifier,corkreq)"];
"1000115" [label="(Block,)"];
"1000288" [label="(Call,dport == 0)"];
"1000807" [label="(Identifier,len)"];
"1000812" [label="(Call,-ENOBUFS)"];
"1000815" [label="(Identifier,SOCK_NOSPACE)"];
"1000669" [label="(ControlStructure,if (skb && !IS_ERR(skb)))"];
"1000640" [label="(Call,rt->rt_dst)"];
"1000583" [label="(Call,err == -ENETUNREACH)"];
"1000825" [label="(Identifier,sk)"];
"1000709" [label="(Call,fl4->daddr = daddr)"];
"1000675" [label="(Call,err = udp_send_skb(skb, daddr, dport))"];
"1000670" [label="(Call,skb && !IS_ERR(skb))"];
"1000310" [label="(Call,dport = inet->inet_dport)"];
"1000680" [label="(Identifier,dport)"];
"1000811" [label="(Identifier,err)"];
"1000636" -> "1000634"  [label="AST: "];
"1000636" -> "1000640"  [label="CFG: "];
"1000637" -> "1000636"  [label="AST: "];
"1000640" -> "1000636"  [label="AST: "];
"1000634" -> "1000636"  [label="CFG: "];
"1000636" -> "1000850"  [label="DDG: rt->rt_dst"];
"1000636" -> "1000850"  [label="DDG: ipc.addr"];
"1000636" -> "1000634"  [label="DDG: ipc.addr"];
"1000634" -> "1000629"  [label="AST: "];
"1000635" -> "1000634"  [label="AST: "];
"1000645" -> "1000634"  [label="CFG: "];
"1000634" -> "1000850"  [label="DDG: daddr"];
"1000634" -> "1000677"  [label="DDG: daddr"];
"1000634" -> "1000709"  [label="DDG: daddr"];
"1000677" -> "1000675"  [label="AST: "];
"1000677" -> "1000680"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000679" -> "1000677"  [label="AST: "];
"1000680" -> "1000677"  [label="AST: "];
"1000675" -> "1000677"  [label="CFG: "];
"1000677" -> "1000850"  [label="DDG: skb"];
"1000677" -> "1000850"  [label="DDG: dport"];
"1000677" -> "1000850"  [label="DDG: daddr"];
"1000677" -> "1000675"  [label="DDG: skb"];
"1000677" -> "1000675"  [label="DDG: daddr"];
"1000677" -> "1000675"  [label="DDG: dport"];
"1000670" -> "1000677"  [label="DDG: skb"];
"1000489" -> "1000677"  [label="DDG: daddr"];
"1000310" -> "1000677"  [label="DDG: dport"];
"1000535" -> "1000677"  [label="DDG: dport"];
"1000288" -> "1000677"  [label="DDG: dport"];
"1000675" -> "1000669"  [label="AST: "];
"1000676" -> "1000675"  [label="AST: "];
"1000681" -> "1000675"  [label="CFG: "];
"1000675" -> "1000850"  [label="DDG: udp_send_skb(skb, daddr, dport)"];
"1000675" -> "1000804"  [label="DDG: err"];
"1000804" -> "1000803"  [label="AST: "];
"1000804" -> "1000805"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000807" -> "1000804"  [label="CFG: "];
"1000811" -> "1000804"  [label="CFG: "];
"1000804" -> "1000850"  [label="DDG: err"];
"1000804" -> "1000850"  [label="DDG: !err"];
"1000692" -> "1000804"  [label="DDG: err"];
"1000775" -> "1000804"  [label="DDG: err"];
"1000583" -> "1000804"  [label="DDG: err"];
"1000591" -> "1000804"  [label="DDG: err"];
"1000742" -> "1000804"  [label="DDG: err"];
"1000665" -> "1000804"  [label="DDG: err"];
"1000846" -> "1000804"  [label="DDG: err"];
"1000804" -> "1000810"  [label="DDG: err"];
"1000810" -> "1000809"  [label="AST: "];
"1000810" -> "1000812"  [label="CFG: "];
"1000811" -> "1000810"  [label="AST: "];
"1000812" -> "1000810"  [label="AST: "];
"1000815" -> "1000810"  [label="CFG: "];
"1000809" -> "1000810"  [label="CFG: "];
"1000810" -> "1000850"  [label="DDG: err"];
"1000810" -> "1000850"  [label="DDG: -ENOBUFS"];
"1000810" -> "1000809"  [label="DDG: err"];
"1000810" -> "1000809"  [label="DDG: -ENOBUFS"];
"1000812" -> "1000810"  [label="DDG: ENOBUFS"];
"1000810" -> "1000828"  [label="DDG: err"];
"1000809" -> "1000808"  [label="AST: "];
"1000809" -> "1000814"  [label="CFG: "];
"1000814" -> "1000809"  [label="AST: "];
"1000825" -> "1000809"  [label="CFG: "];
"1000829" -> "1000809"  [label="CFG: "];
"1000809" -> "1000850"  [label="DDG: err == -ENOBUFS"];
"1000809" -> "1000850"  [label="DDG: test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000809" -> "1000850"  [label="DDG: err == -ENOBUFS || test_bit(SOCK_NOSPACE, &sk->sk_socket->flags)"];
"1000814" -> "1000809"  [label="DDG: SOCK_NOSPACE"];
"1000814" -> "1000809"  [label="DDG: &sk->sk_socket->flags"];
"1000828" -> "1000115"  [label="AST: "];
"1000828" -> "1000829"  [label="CFG: "];
"1000829" -> "1000828"  [label="AST: "];
"1000850" -> "1000828"  [label="CFG: "];
"1000828" -> "1000850"  [label="DDG: <RET>"];
"1000829" -> "1000828"  [label="DDG: err"];
"1000709" -> "1000115"  [label="AST: "];
"1000709" -> "1000713"  [label="CFG: "];
"1000710" -> "1000709"  [label="AST: "];
"1000713" -> "1000709"  [label="AST: "];
"1000716" -> "1000709"  [label="CFG: "];
"1000709" -> "1000850"  [label="DDG: fl4->daddr"];
"1000709" -> "1000850"  [label="DDG: daddr"];
"1000489" -> "1000709"  [label="DDG: daddr"];
}
