digraph "0_linux_a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc@API" {
"1000156" [label="(Call,memset(&ifr, 0, sizeof(ifr)))"];
"1000205" [label="(Call,tun_set_iff(tfile->net, file, &ifr))"];
"1000203" [label="(Call,ret = tun_set_iff(tfile->net, file, &ifr))"];
"1000642" [label="(Return,return ret;)"];
"1000216" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000248" [label="(Call,tun_get_iff(current->nsproxy->net_ns, tun, &ifr))"];
"1000246" [label="(Call,ret = tun_get_iff(current->nsproxy->net_ns, tun, &ifr))"];
"1000261" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000640" [label="(Call,tun_put(tun))"];
"1000442" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000182" [label="(Call,tun = __tun_get(tfile))"];
"1000220" [label="(Identifier,ifreq_len)"];
"1000462" [label="(Call,ret = dev_set_mac_address(tun->dev, &ifr.ifr_hwaddr))"];
"1000258" [label="(Identifier,ret)"];
"1000386" [label="(Call,ret = set_offload(tun, arg))"];
"1000270" [label="(ControlStructure,break;)"];
"1000117" [label="(Block,)"];
"1000213" [label="(Identifier,ret)"];
"1000210" [label="(Call,&ifr)"];
"1000156" [label="(Call,memset(&ifr, 0, sizeof(ifr)))"];
"1000346" [label="(Call,tun_debug(KERN_INFO, tun,\n\t\t\t\t  \"Linktype set failed because interface is up\n\"))"];
"1000441" [label="(ControlStructure,if (copy_to_user(argp, &ifr, ifreq_len)))"];
"1000217" [label="(Identifier,argp)"];
"1000608" [label="(Call,ret = -EINVAL)"];
"1000265" [label="(Identifier,ifreq_len)"];
"1000116" [label="(MethodParameterIn,int ifreq_len)"];
"1000571" [label="(Call,ret = -EINVAL)"];
"1000447" [label="(Call,ret = -EFAULT)"];
"1000209" [label="(Identifier,file)"];
"1000234" [label="(Call,tun_debug(KERN_INFO, tun, \"tun_chr_ioctl cmd %d\n\", cmd))"];
"1000328" [label="(Call,tun_debug(KERN_INFO, tun, \"group set to %d\n\", tun->group))"];
"1000126" [label="(Call,* argp = (void __user*)arg)"];
"1000247" [label="(Identifier,ret)"];
"1000446" [label="(Identifier,ifreq_len)"];
"1000215" [label="(ControlStructure,if (copy_to_user(argp, &ifr, ifreq_len)))"];
"1000205" [label="(Call,tun_set_iff(tfile->net, file, &ifr))"];
"1000206" [label="(Call,tfile->net)"];
"1000248" [label="(Call,tun_get_iff(current->nsproxy->net_ns, tun, &ifr))"];
"1000443" [label="(Identifier,argp)"];
"1000453" [label="(Call,tun_debug(KERN_DEBUG, tun, \"set hw address: %pM\n\",\n\t\t\t  ifr.ifr_hwaddr.sa_data))"];
"1000596" [label="(Call,ret = sk_attach_filter(&fprog, tun->socket.sk))"];
"1000546" [label="(Call,ret = -EFAULT)"];
"1000164" [label="(Identifier,cmd)"];
"1000406" [label="(Call,ret = update_filter(&tun->txflt, (void __user *)arg))"];
"1000216" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000160" [label="(Call,sizeof(ifr))"];
"1000631" [label="(Call,ret = -EINVAL)"];
"1000451" [label="(ControlStructure,break;)"];
"1000244" [label="(Block,)"];
"1000272" [label="(Call,tun_debug(KERN_INFO, tun, \"ignored: set checksum %s\n\",\n\t\t\t  arg ? \"disabled\" : \"enabled\"))"];
"1000226" [label="(Call,ret = -EBADFD)"];
"1000263" [label="(Call,&ifr)"];
"1000365" [label="(Call,tun_debug(KERN_INFO, tun, \"linktype set to %d\n\",\n\t\t\t\t  tun->dev->type))"];
"1000642" [label="(Return,return ret;)"];
"1000260" [label="(ControlStructure,if (copy_to_user(argp, &ifr, ifreq_len)))"];
"1000231" [label="(Call,!tun)"];
"1000644" [label="(MethodReturn,static long)"];
"1000444" [label="(Call,&ifr)"];
"1000490" [label="(Call,ret = -EFAULT)"];
"1000222" [label="(Identifier,ret)"];
"1000249" [label="(Call,current->nsproxy->net_ns)"];
"1000448" [label="(Identifier,ret)"];
"1000157" [label="(Call,&ifr)"];
"1000155" [label="(ControlStructure,else)"];
"1000204" [label="(Identifier,ret)"];
"1000147" [label="(Call,copy_from_user(&ifr, argp, ifreq_len))"];
"1000393" [label="(Call,ret = -EINVAL)"];
"1000621" [label="(Call,ret = sk_detach_filter(tun->socket.sk))"];
"1000532" [label="(Call,ret = -EFAULT)"];
"1000262" [label="(Identifier,argp)"];
"1000254" [label="(Identifier,tun)"];
"1000388" [label="(Call,set_offload(tun, arg))"];
"1000559" [label="(Call,ret = -EINVAL)"];
"1000374" [label="(Call,ret = 0)"];
"1000221" [label="(Call,ret = -EFAULT)"];
"1000246" [label="(Call,ret = tun_get_iff(current->nsproxy->net_ns, tun, &ifr))"];
"1000267" [label="(Identifier,ret)"];
"1000191" [label="(Call,!tun)"];
"1000643" [label="(Identifier,ret)"];
"1000584" [label="(Call,ret = -EFAULT)"];
"1000225" [label="(ControlStructure,goto unlock;)"];
"1000295" [label="(Call,tun_debug(KERN_INFO, tun, \"persist %s\n\",\n\t\t\t  arg ? \"enabled\" : \"disabled\"))"];
"1000113" [label="(MethodParameterIn,struct file *file)"];
"1000504" [label="(Call,ret = -EFAULT)"];
"1000203" [label="(Call,ret = tun_set_iff(tfile->net, file, &ifr))"];
"1000312" [label="(Call,tun_debug(KERN_INFO, tun, \"owner set to %d\n\", tun->owner))"];
"1000266" [label="(Call,ret = -EFAULT)"];
"1000638" [label="(ControlStructure,if (tun))"];
"1000159" [label="(Literal,0)"];
"1000255" [label="(Call,&ifr)"];
"1000350" [label="(Call,ret = -EBUSY)"];
"1000261" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000218" [label="(Call,&ifr)"];
"1000640" [label="(Call,tun_put(tun))"];
"1000442" [label="(Call,copy_to_user(argp, &ifr, ifreq_len))"];
"1000193" [label="(Block,)"];
"1000239" [label="(Call,ret = 0)"];
"1000641" [label="(Identifier,tun)"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000159" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000164" -> "1000156"  [label="CFG: "];
"1000156" -> "1000644"  [label="DDG: &ifr"];
"1000156" -> "1000644"  [label="DDG: memset(&ifr, 0, sizeof(ifr))"];
"1000156" -> "1000205"  [label="DDG: &ifr"];
"1000156" -> "1000248"  [label="DDG: &ifr"];
"1000156" -> "1000442"  [label="DDG: &ifr"];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000210"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1000644"  [label="DDG: file"];
"1000205" -> "1000644"  [label="DDG: &ifr"];
"1000205" -> "1000644"  [label="DDG: tfile->net"];
"1000205" -> "1000203"  [label="DDG: tfile->net"];
"1000205" -> "1000203"  [label="DDG: file"];
"1000205" -> "1000203"  [label="DDG: &ifr"];
"1000113" -> "1000205"  [label="DDG: file"];
"1000147" -> "1000205"  [label="DDG: &ifr"];
"1000205" -> "1000216"  [label="DDG: &ifr"];
"1000203" -> "1000193"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000213" -> "1000203"  [label="CFG: "];
"1000203" -> "1000644"  [label="DDG: tun_set_iff(tfile->net, file, &ifr)"];
"1000203" -> "1000644"  [label="DDG: ret"];
"1000203" -> "1000642"  [label="DDG: ret"];
"1000642" -> "1000117"  [label="AST: "];
"1000642" -> "1000643"  [label="CFG: "];
"1000643" -> "1000642"  [label="AST: "];
"1000644" -> "1000642"  [label="CFG: "];
"1000642" -> "1000644"  [label="DDG: <RET>"];
"1000643" -> "1000642"  [label="DDG: ret"];
"1000532" -> "1000642"  [label="DDG: ret"];
"1000350" -> "1000642"  [label="DDG: ret"];
"1000631" -> "1000642"  [label="DDG: ret"];
"1000596" -> "1000642"  [label="DDG: ret"];
"1000239" -> "1000642"  [label="DDG: ret"];
"1000266" -> "1000642"  [label="DDG: ret"];
"1000386" -> "1000642"  [label="DDG: ret"];
"1000571" -> "1000642"  [label="DDG: ret"];
"1000504" -> "1000642"  [label="DDG: ret"];
"1000546" -> "1000642"  [label="DDG: ret"];
"1000447" -> "1000642"  [label="DDG: ret"];
"1000608" -> "1000642"  [label="DDG: ret"];
"1000559" -> "1000642"  [label="DDG: ret"];
"1000621" -> "1000642"  [label="DDG: ret"];
"1000393" -> "1000642"  [label="DDG: ret"];
"1000374" -> "1000642"  [label="DDG: ret"];
"1000226" -> "1000642"  [label="DDG: ret"];
"1000406" -> "1000642"  [label="DDG: ret"];
"1000462" -> "1000642"  [label="DDG: ret"];
"1000221" -> "1000642"  [label="DDG: ret"];
"1000490" -> "1000642"  [label="DDG: ret"];
"1000584" -> "1000642"  [label="DDG: ret"];
"1000246" -> "1000642"  [label="DDG: ret"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000220"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000225" -> "1000216"  [label="CFG: "];
"1000216" -> "1000644"  [label="DDG: copy_to_user(argp, &ifr, ifreq_len)"];
"1000216" -> "1000644"  [label="DDG: argp"];
"1000216" -> "1000644"  [label="DDG: &ifr"];
"1000216" -> "1000644"  [label="DDG: ifreq_len"];
"1000126" -> "1000216"  [label="DDG: argp"];
"1000147" -> "1000216"  [label="DDG: argp"];
"1000147" -> "1000216"  [label="DDG: ifreq_len"];
"1000116" -> "1000216"  [label="DDG: ifreq_len"];
"1000248" -> "1000246"  [label="AST: "];
"1000248" -> "1000255"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000254" -> "1000248"  [label="AST: "];
"1000255" -> "1000248"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000248" -> "1000644"  [label="DDG: &ifr"];
"1000248" -> "1000644"  [label="DDG: tun"];
"1000248" -> "1000644"  [label="DDG: current->nsproxy->net_ns"];
"1000248" -> "1000246"  [label="DDG: current->nsproxy->net_ns"];
"1000248" -> "1000246"  [label="DDG: tun"];
"1000248" -> "1000246"  [label="DDG: &ifr"];
"1000234" -> "1000248"  [label="DDG: tun"];
"1000147" -> "1000248"  [label="DDG: &ifr"];
"1000248" -> "1000261"  [label="DDG: &ifr"];
"1000248" -> "1000640"  [label="DDG: tun"];
"1000246" -> "1000244"  [label="AST: "];
"1000247" -> "1000246"  [label="AST: "];
"1000258" -> "1000246"  [label="CFG: "];
"1000246" -> "1000644"  [label="DDG: tun_get_iff(current->nsproxy->net_ns, tun, &ifr)"];
"1000246" -> "1000644"  [label="DDG: ret"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000265"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000267" -> "1000261"  [label="CFG: "];
"1000270" -> "1000261"  [label="CFG: "];
"1000261" -> "1000644"  [label="DDG: ifreq_len"];
"1000261" -> "1000644"  [label="DDG: &ifr"];
"1000261" -> "1000644"  [label="DDG: argp"];
"1000261" -> "1000644"  [label="DDG: copy_to_user(argp, &ifr, ifreq_len)"];
"1000126" -> "1000261"  [label="DDG: argp"];
"1000147" -> "1000261"  [label="DDG: argp"];
"1000147" -> "1000261"  [label="DDG: ifreq_len"];
"1000116" -> "1000261"  [label="DDG: ifreq_len"];
"1000640" -> "1000638"  [label="AST: "];
"1000640" -> "1000641"  [label="CFG: "];
"1000641" -> "1000640"  [label="AST: "];
"1000643" -> "1000640"  [label="CFG: "];
"1000640" -> "1000644"  [label="DDG: tun"];
"1000640" -> "1000644"  [label="DDG: tun_put(tun)"];
"1000453" -> "1000640"  [label="DDG: tun"];
"1000388" -> "1000640"  [label="DDG: tun"];
"1000234" -> "1000640"  [label="DDG: tun"];
"1000346" -> "1000640"  [label="DDG: tun"];
"1000272" -> "1000640"  [label="DDG: tun"];
"1000295" -> "1000640"  [label="DDG: tun"];
"1000231" -> "1000640"  [label="DDG: tun"];
"1000312" -> "1000640"  [label="DDG: tun"];
"1000328" -> "1000640"  [label="DDG: tun"];
"1000365" -> "1000640"  [label="DDG: tun"];
"1000182" -> "1000640"  [label="DDG: tun"];
"1000191" -> "1000640"  [label="DDG: tun"];
"1000442" -> "1000441"  [label="AST: "];
"1000442" -> "1000446"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="AST: "];
"1000446" -> "1000442"  [label="AST: "];
"1000448" -> "1000442"  [label="CFG: "];
"1000451" -> "1000442"  [label="CFG: "];
"1000442" -> "1000644"  [label="DDG: copy_to_user(argp, &ifr, ifreq_len)"];
"1000442" -> "1000644"  [label="DDG: argp"];
"1000442" -> "1000644"  [label="DDG: ifreq_len"];
"1000442" -> "1000644"  [label="DDG: &ifr"];
"1000126" -> "1000442"  [label="DDG: argp"];
"1000147" -> "1000442"  [label="DDG: argp"];
"1000147" -> "1000442"  [label="DDG: &ifr"];
"1000147" -> "1000442"  [label="DDG: ifreq_len"];
"1000116" -> "1000442"  [label="DDG: ifreq_len"];
}
