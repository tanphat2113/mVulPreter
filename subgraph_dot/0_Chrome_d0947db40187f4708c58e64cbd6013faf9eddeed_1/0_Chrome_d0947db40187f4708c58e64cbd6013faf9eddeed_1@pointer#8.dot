digraph "0_Chrome_d0947db40187f4708c58e64cbd6013faf9eddeed_1@pointer" {
"1000517" [label="(Call,end = ctxt->input->end)"];
"1000431" [label="(Call,in < end)"];
"1000430" [label="(Call,(in < end) && (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD)))"];
"1000459" [label="(Call,in++)"];
"1000462" [label="(Call,in >= end)"];
"1000507" [label="(Call,in = in + delta)"];
"1000509" [label="(Call,in + delta)"];
"1000631" [label="(Call,in++)"];
"1000664" [label="(Call,CUR_PTR = in)"];
"1000464" [label="(Identifier,end)"];
"1000491" [label="(Block,)"];
"1000534" [label="(Call,in < end)"];
"1000687" [label="(MethodReturn,RET)"];
"1000668" [label="(Identifier,alloc)"];
"1000463" [label="(Identifier,in)"];
"1000510" [label="(Identifier,in)"];
"1000468" [label="(Identifier,oldbase)"];
"1000631" [label="(Call,in++)"];
"1000519" [label="(Call,ctxt->input->end)"];
"1000509" [label="(Call,in + delta)"];
"1000635" [label="(Identifier,len)"];
"1000432" [label="(Identifier,in)"];
"1000462" [label="(Call,in >= end)"];
"1000459" [label="(Call,in++)"];
"1000437" [label="(Identifier,in)"];
"1000518" [label="(Identifier,end)"];
"1000527" [label="(Identifier,in)"];
"1000511" [label="(Identifier,delta)"];
"1000431" [label="(Call,in < end)"];
"1000461" [label="(ControlStructure,if (in >= end))"];
"1000434" [label="(Call,(*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD)))"];
"1000433" [label="(Identifier,end)"];
"1000315" [label="(Call,in < end)"];
"1000517" [label="(Call,end = ctxt->input->end)"];
"1000429" [label="(ControlStructure,while ((in < end) && (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD))))"];
"1000632" [label="(Identifier,in)"];
"1000458" [label="(Block,)"];
"1000430" [label="(Call,(in < end) && (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD)))"];
"1000507" [label="(Call,in = in + delta)"];
"1000493" [label="(Call,delta = ctxt->input->base - oldbase)"];
"1000665" [label="(Identifier,CUR_PTR)"];
"1000513" [label="(Identifier,last)"];
"1000664" [label="(Call,CUR_PTR = in)"];
"1000465" [label="(Block,)"];
"1000666" [label="(Identifier,in)"];
"1000508" [label="(Identifier,in)"];
"1000108" [label="(Block,)"];
"1000221" [label="(Call,(in < end) && (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD)))"];
"1000347" [label="(Call,in++)"];
"1000460" [label="(Identifier,in)"];
"1000517" -> "1000465"  [label="AST: "];
"1000517" -> "1000519"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000432" -> "1000517"  [label="CFG: "];
"1000517" -> "1000687"  [label="DDG: ctxt->input->end"];
"1000517" -> "1000431"  [label="DDG: end"];
"1000431" -> "1000430"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000437" -> "1000431"  [label="CFG: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000687"  [label="DDG: in"];
"1000431" -> "1000687"  [label="DDG: end"];
"1000431" -> "1000430"  [label="DDG: in"];
"1000431" -> "1000430"  [label="DDG: end"];
"1000462" -> "1000431"  [label="DDG: in"];
"1000462" -> "1000431"  [label="DDG: end"];
"1000507" -> "1000431"  [label="DDG: in"];
"1000315" -> "1000431"  [label="DDG: in"];
"1000315" -> "1000431"  [label="DDG: end"];
"1000347" -> "1000431"  [label="DDG: in"];
"1000431" -> "1000459"  [label="DDG: in"];
"1000431" -> "1000462"  [label="DDG: end"];
"1000431" -> "1000631"  [label="DDG: in"];
"1000430" -> "1000429"  [label="AST: "];
"1000430" -> "1000434"  [label="CFG: "];
"1000434" -> "1000430"  [label="AST: "];
"1000460" -> "1000430"  [label="CFG: "];
"1000527" -> "1000430"  [label="CFG: "];
"1000430" -> "1000687"  [label="DDG: (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD))"];
"1000430" -> "1000687"  [label="DDG: in < end"];
"1000430" -> "1000687"  [label="DDG: (in < end) && (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD))"];
"1000434" -> "1000430"  [label="DDG: *in != limit"];
"1000434" -> "1000430"  [label="DDG: (*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD)"];
"1000221" -> "1000430"  [label="DDG: (*in != limit) && \n\t       ((*in == 0x20) || (*in == 0x9) ||\n\t        (*in == 0xA) || (*in == 0xD))"];
"1000459" -> "1000458"  [label="AST: "];
"1000459" -> "1000460"  [label="CFG: "];
"1000460" -> "1000459"  [label="AST: "];
"1000463" -> "1000459"  [label="CFG: "];
"1000459" -> "1000462"  [label="DDG: in"];
"1000462" -> "1000461"  [label="AST: "];
"1000462" -> "1000464"  [label="CFG: "];
"1000463" -> "1000462"  [label="AST: "];
"1000464" -> "1000462"  [label="AST: "];
"1000432" -> "1000462"  [label="CFG: "];
"1000468" -> "1000462"  [label="CFG: "];
"1000462" -> "1000687"  [label="DDG: in"];
"1000462" -> "1000687"  [label="DDG: end"];
"1000462" -> "1000687"  [label="DDG: in >= end"];
"1000462" -> "1000507"  [label="DDG: in"];
"1000462" -> "1000509"  [label="DDG: in"];
"1000507" -> "1000491"  [label="AST: "];
"1000507" -> "1000509"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000507"  [label="AST: "];
"1000513" -> "1000507"  [label="CFG: "];
"1000507" -> "1000687"  [label="DDG: in + delta"];
"1000493" -> "1000507"  [label="DDG: delta"];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000493" -> "1000509"  [label="DDG: delta"];
"1000631" -> "1000108"  [label="AST: "];
"1000631" -> "1000632"  [label="CFG: "];
"1000632" -> "1000631"  [label="AST: "];
"1000635" -> "1000631"  [label="CFG: "];
"1000534" -> "1000631"  [label="DDG: in"];
"1000631" -> "1000664"  [label="DDG: in"];
"1000664" -> "1000108"  [label="AST: "];
"1000664" -> "1000666"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000666" -> "1000664"  [label="AST: "];
"1000668" -> "1000664"  [label="CFG: "];
"1000664" -> "1000687"  [label="DDG: in"];
"1000664" -> "1000687"  [label="DDG: CUR_PTR"];
}
