digraph "0_linux_6062a8dc0517bce23e3c2f7d2fea5e22411269a3_0@API" {
"1000613" [label="(Call,unlink_queue(sma, &queue))"];
"1000582" [label="(Call,IS_ERR(sma))"];
"1000567" [label="(Call,sma = sem_obtain_lock(ns, semid, sops, nsops, &locknum))"];
"1000569" [label="(Call,sem_obtain_lock(ns, semid, sops, nsops, &locknum))"];
"1000363" [label="(Call,ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO))"];
"1000332" [label="(Call,sem_obtain_object_check(ns, semid))"];
"1000150" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000312" [label="(Call,find_alloc_undo(ns, semid))"];
"1000162" [label="(Call,semid < 0)"];
"1000410" [label="(Call,try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000394" [label="(Call,sem_lock(sma, sops, nsops))"];
"1000378" [label="(Call,security_sem_semop(sma, sops, nsops, alter))"];
"1000336" [label="(Call,IS_ERR(sma))"];
"1000330" [label="(Call,sma = sem_obtain_object_check(ns, semid))"];
"1000199" [label="(Call,copy_from_user (sops, tsops, nsops * sizeof(*tsops)))"];
"1000128" [label="(Call,* sops = fast_sops)"];
"1000192" [label="(Call,sops==NULL)"];
"1000182" [label="(Call,sops = kmalloc(sizeof(*sops)*nsops,GFP_KERNEL))"];
"1000184" [label="(Call,kmalloc(sizeof(*sops)*nsops,GFP_KERNEL))"];
"1000185" [label="(Call,sizeof(*sops)*nsops)"];
"1000178" [label="(Call,nsops > SEMOPM_FAST)"];
"1000169" [label="(Call,nsops > ns->sc_semopm)"];
"1000159" [label="(Call,nsops < 1)"];
"1000202" [label="(Call,nsops * sizeof(*tsops))"];
"1000399" [label="(Call,un && un->semid == -1)"];
"1000326" [label="(Call,un = NULL)"];
"1000316" [label="(Call,IS_ERR(un))"];
"1000310" [label="(Call,un = find_alloc_undo(ns, semid))"];
"1000401" [label="(Call,un->semid == -1)"];
"1000405" [label="(Call,-1)"];
"1000415" [label="(Call,task_tgid_vnr(current))"];
"1000463" [label="(Call,nsops == 1)"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000556" [label="(Call,get_queue_result(&queue))"];
"1000618" [label="(Call,sem_unlock(sma, locknum))"];
"1000204" [label="(Call,sizeof(*tsops))"];
"1000576" [label="(Call,error = get_queue_result(&queue))"];
"1000465" [label="(Literal,1)"];
"1000400" [label="(Identifier,un)"];
"1000177" [label="(ControlStructure,if(nsops > SEMOPM_FAST))"];
"1000573" [label="(Identifier,nsops)"];
"1000463" [label="(Call,nsops == 1)"];
"1000416" [label="(Identifier,current)"];
"1000203" [label="(Identifier,nsops)"];
"1000264" [label="(Call,sop = sops)"];
"1000406" [label="(Literal,1)"];
"1000399" [label="(Call,un && un->semid == -1)"];
"1000335" [label="(ControlStructure,if (IS_ERR(sma)))"];
"1000567" [label="(Call,sma = sem_obtain_lock(ns, semid, sops, nsops, &locknum))"];
"1000129" [label="(Identifier,sops)"];
"1000369" [label="(Call,alter ? S_IWUGO : S_IRUGO)"];
"1000183" [label="(Identifier,sops)"];
"1000615" [label="(Call,&queue)"];
"1000364" [label="(Identifier,ns)"];
"1000201" [label="(Identifier,tsops)"];
"1000428" [label="(Call,do_smart_update(sma, sops, nsops, 1, &tasks))"];
"1000135" [label="(Identifier,undos)"];
"1000405" [label="(Call,-1)"];
"1000332" [label="(Call,sem_obtain_object_check(ns, semid))"];
"1000362" [label="(ControlStructure,if (ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO)))"];
"1000180" [label="(Identifier,SEMOPM_FAST)"];
"1000312" [label="(Call,find_alloc_undo(ns, semid))"];
"1000325" [label="(Block,)"];
"1000179" [label="(Identifier,nsops)"];
"1000181" [label="(Block,)"];
"1000316" [label="(Call,IS_ERR(un))"];
"1000339" [label="(Call,rcu_read_unlock())"];
"1000185" [label="(Call,sizeof(*sops)*nsops)"];
"1000199" [label="(Call,copy_from_user (sops, tsops, nsops * sizeof(*tsops)))"];
"1000423" [label="(Call,alter && error == 0)"];
"1000570" [label="(Identifier,ns)"];
"1000209" [label="(Identifier,error)"];
"1000330" [label="(Call,sma = sem_obtain_object_check(ns, semid))"];
"1000194" [label="(Identifier,NULL)"];
"1000336" [label="(Call,IS_ERR(sma))"];
"1000329" [label="(Call,rcu_read_lock())"];
"1000168" [label="(ControlStructure,if (nsops > ns->sc_semopm))"];
"1000568" [label="(Identifier,sma)"];
"1000152" [label="(Call,current->nsproxy->ipc_ns)"];
"1000381" [label="(Identifier,nsops)"];
"1000333" [label="(Identifier,ns)"];
"1000119" [label="(Block,)"];
"1000159" [label="(Call,nsops < 1)"];
"1000198" [label="(ControlStructure,if (copy_from_user (sops, tsops, nsops * sizeof(*tsops))))"];
"1000191" [label="(ControlStructure,if(sops==NULL))"];
"1000162" [label="(Call,semid < 0)"];
"1000327" [label="(Identifier,un)"];
"1000415" [label="(Call,task_tgid_vnr(current))"];
"1000392" [label="(Call,locknum = sem_lock(sma, sops, nsops))"];
"1000554" [label="(Call,error = get_queue_result(&queue))"];
"1000410" [label="(Call,try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000588" [label="(Identifier,error)"];
"1000577" [label="(Identifier,error)"];
"1000571" [label="(Identifier,semid)"];
"1000189" [label="(Identifier,nsops)"];
"1000376" [label="(Call,error = security_sem_semop(sma, sops, nsops, alter))"];
"1000382" [label="(Identifier,alter)"];
"1000579" [label="(Call,&queue)"];
"1000446" [label="(Call,queue.undo = un)"];
"1000326" [label="(Call,un = NULL)"];
"1000412" [label="(Identifier,sops)"];
"1000543" [label="(Call,sem_unlock(sma, locknum))"];
"1000396" [label="(Identifier,sops)"];
"1000334" [label="(Identifier,semid)"];
"1000634" [label="(MethodReturn,RET)"];
"1000582" [label="(Call,IS_ERR(sma))"];
"1000151" [label="(Identifier,ns)"];
"1000379" [label="(Identifier,sma)"];
"1000169" [label="(Call,nsops > ns->sc_semopm)"];
"1000190" [label="(Identifier,GFP_KERNEL)"];
"1000161" [label="(Literal,1)"];
"1000267" [label="(Call,sop < sops + nsops)"];
"1000613" [label="(Call,unlink_queue(sma, &queue))"];
"1000409" [label="(Identifier,error)"];
"1000455" [label="(Call,task_tgid_vnr(current))"];
"1000585" [label="(ControlStructure,goto out_free;)"];
"1000200" [label="(Identifier,sops)"];
"1000627" [label="(Call,sops != fast_sops)"];
"1000184" [label="(Call,kmalloc(sizeof(*sops)*nsops,GFP_KERNEL))"];
"1000411" [label="(Identifier,sma)"];
"1000186" [label="(Call,sizeof(*sops))"];
"1000309" [label="(Block,)"];
"1000342" [label="(Call,PTR_ERR(sma))"];
"1000583" [label="(Identifier,sma)"];
"1000314" [label="(Identifier,semid)"];
"1000569" [label="(Call,sem_obtain_lock(ns, semid, sops, nsops, &locknum))"];
"1000380" [label="(Identifier,sops)"];
"1000557" [label="(Call,&queue)"];
"1000337" [label="(Identifier,sma)"];
"1000377" [label="(Identifier,error)"];
"1000269" [label="(Call,sops + nsops)"];
"1000441" [label="(Call,queue.nsops = nsops)"];
"1000315" [label="(ControlStructure,if (IS_ERR(un)))"];
"1000197" [label="(Identifier,ENOMEM)"];
"1000620" [label="(Identifier,locknum)"];
"1000374" [label="(Call,rcu_read_unlock())"];
"1000363" [label="(Call,ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO))"];
"1000176" [label="(Identifier,E2BIG)"];
"1000614" [label="(Identifier,sma)"];
"1000170" [label="(Identifier,nsops)"];
"1000407" [label="(ControlStructure,goto out_unlock_free;)"];
"1000619" [label="(Identifier,sma)"];
"1000158" [label="(Call,nsops < 1 || semid < 0)"];
"1000346" [label="(Identifier,error)"];
"1000502" [label="(Identifier,alter)"];
"1000163" [label="(Identifier,semid)"];
"1000365" [label="(Call,&sma->sem_perm)"];
"1000617" [label="(JumpTarget,out_unlock_free:)"];
"1000574" [label="(Call,&locknum)"];
"1000401" [label="(Call,un->semid == -1)"];
"1000572" [label="(Identifier,sops)"];
"1000394" [label="(Call,sem_lock(sma, sops, nsops))"];
"1000193" [label="(Identifier,sops)"];
"1000320" [label="(Identifier,error)"];
"1000414" [label="(Identifier,un)"];
"1000464" [label="(Identifier,nsops)"];
"1000192" [label="(Call,sops==NULL)"];
"1000378" [label="(Call,security_sem_semop(sma, sops, nsops, alter))"];
"1000128" [label="(Call,* sops = fast_sops)"];
"1000321" [label="(Call,PTR_ERR(un))"];
"1000150" [label="(Call,ns = current->nsproxy->ipc_ns)"];
"1000436" [label="(Call,queue.sops = sops)"];
"1000313" [label="(Identifier,ns)"];
"1000469" [label="(Identifier,curr)"];
"1000581" [label="(ControlStructure,if (IS_ERR(sma)))"];
"1000164" [label="(Literal,0)"];
"1000182" [label="(Call,sops = kmalloc(sizeof(*sops)*nsops,GFP_KERNEL))"];
"1000578" [label="(Call,get_queue_result(&queue))"];
"1000408" [label="(Call,error = try_atomic_semop (sma, sops, nsops, un, task_tgid_vnr(current)))"];
"1000171" [label="(Call,ns->sc_semopm)"];
"1000214" [label="(Identifier,timeout)"];
"1000395" [label="(Identifier,sma)"];
"1000618" [label="(Call,sem_unlock(sma, locknum))"];
"1000311" [label="(Identifier,un)"];
"1000397" [label="(Identifier,nsops)"];
"1000457" [label="(Call,queue.alter = alter)"];
"1000130" [label="(Identifier,fast_sops)"];
"1000178" [label="(Call,nsops > SEMOPM_FAST)"];
"1000402" [label="(Call,un->semid)"];
"1000328" [label="(Identifier,NULL)"];
"1000621" [label="(JumpTarget,out_wakeup:)"];
"1000413" [label="(Identifier,nsops)"];
"1000331" [label="(Identifier,sma)"];
"1000556" [label="(Call,get_queue_result(&queue))"];
"1000398" [label="(ControlStructure,if (un && un->semid == -1))"];
"1000317" [label="(Identifier,un)"];
"1000160" [label="(Identifier,nsops)"];
"1000462" [label="(ControlStructure,if (nsops == 1))"];
"1000202" [label="(Call,nsops * sizeof(*tsops))"];
"1000310" [label="(Call,un = find_alloc_undo(ns, semid))"];
"1000613" -> "1000119"  [label="AST: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000615" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="CFG: "];
"1000613" -> "1000634"  [label="DDG: unlink_queue(sma, &queue)"];
"1000613" -> "1000634"  [label="DDG: &queue"];
"1000582" -> "1000613"  [label="DDG: sma"];
"1000578" -> "1000613"  [label="DDG: &queue"];
"1000613" -> "1000618"  [label="DDG: sma"];
"1000582" -> "1000581"  [label="AST: "];
"1000582" -> "1000583"  [label="CFG: "];
"1000583" -> "1000582"  [label="AST: "];
"1000585" -> "1000582"  [label="CFG: "];
"1000588" -> "1000582"  [label="CFG: "];
"1000582" -> "1000634"  [label="DDG: sma"];
"1000582" -> "1000634"  [label="DDG: IS_ERR(sma)"];
"1000582" -> "1000543"  [label="DDG: sma"];
"1000567" -> "1000582"  [label="DDG: sma"];
"1000582" -> "1000618"  [label="DDG: sma"];
"1000567" -> "1000119"  [label="AST: "];
"1000567" -> "1000569"  [label="CFG: "];
"1000568" -> "1000567"  [label="AST: "];
"1000569" -> "1000567"  [label="AST: "];
"1000577" -> "1000567"  [label="CFG: "];
"1000567" -> "1000634"  [label="DDG: sem_obtain_lock(ns, semid, sops, nsops, &locknum)"];
"1000569" -> "1000567"  [label="DDG: &locknum"];
"1000569" -> "1000567"  [label="DDG: semid"];
"1000569" -> "1000567"  [label="DDG: sops"];
"1000569" -> "1000567"  [label="DDG: ns"];
"1000569" -> "1000567"  [label="DDG: nsops"];
"1000569" -> "1000574"  [label="CFG: "];
"1000570" -> "1000569"  [label="AST: "];
"1000571" -> "1000569"  [label="AST: "];
"1000572" -> "1000569"  [label="AST: "];
"1000573" -> "1000569"  [label="AST: "];
"1000574" -> "1000569"  [label="AST: "];
"1000569" -> "1000634"  [label="DDG: semid"];
"1000569" -> "1000634"  [label="DDG: &locknum"];
"1000569" -> "1000634"  [label="DDG: ns"];
"1000569" -> "1000634"  [label="DDG: nsops"];
"1000363" -> "1000569"  [label="DDG: ns"];
"1000332" -> "1000569"  [label="DDG: semid"];
"1000410" -> "1000569"  [label="DDG: sops"];
"1000463" -> "1000569"  [label="DDG: nsops"];
"1000569" -> "1000627"  [label="DDG: sops"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000369"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000369" -> "1000363"  [label="AST: "];
"1000374" -> "1000363"  [label="CFG: "];
"1000377" -> "1000363"  [label="CFG: "];
"1000363" -> "1000634"  [label="DDG: &sma->sem_perm"];
"1000363" -> "1000634"  [label="DDG: alter ? S_IWUGO : S_IRUGO"];
"1000363" -> "1000634"  [label="DDG: ns"];
"1000363" -> "1000634"  [label="DDG: ipcperms(ns, &sma->sem_perm, alter ? S_IWUGO : S_IRUGO)"];
"1000332" -> "1000363"  [label="DDG: ns"];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000332" -> "1000634"  [label="DDG: semid"];
"1000332" -> "1000634"  [label="DDG: ns"];
"1000332" -> "1000330"  [label="DDG: ns"];
"1000332" -> "1000330"  [label="DDG: semid"];
"1000150" -> "1000332"  [label="DDG: ns"];
"1000312" -> "1000332"  [label="DDG: ns"];
"1000312" -> "1000332"  [label="DDG: semid"];
"1000162" -> "1000332"  [label="DDG: semid"];
"1000150" -> "1000119"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000160" -> "1000150"  [label="CFG: "];
"1000150" -> "1000634"  [label="DDG: ns"];
"1000150" -> "1000634"  [label="DDG: current->nsproxy->ipc_ns"];
"1000150" -> "1000312"  [label="DDG: ns"];
"1000312" -> "1000310"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000312" -> "1000634"  [label="DDG: ns"];
"1000312" -> "1000634"  [label="DDG: semid"];
"1000312" -> "1000310"  [label="DDG: ns"];
"1000312" -> "1000310"  [label="DDG: semid"];
"1000162" -> "1000312"  [label="DDG: semid"];
"1000162" -> "1000158"  [label="AST: "];
"1000162" -> "1000164"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000164" -> "1000162"  [label="AST: "];
"1000158" -> "1000162"  [label="CFG: "];
"1000162" -> "1000634"  [label="DDG: semid"];
"1000162" -> "1000158"  [label="DDG: semid"];
"1000162" -> "1000158"  [label="DDG: 0"];
"1000410" -> "1000408"  [label="AST: "];
"1000410" -> "1000415"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000412" -> "1000410"  [label="AST: "];
"1000413" -> "1000410"  [label="AST: "];
"1000414" -> "1000410"  [label="AST: "];
"1000415" -> "1000410"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000410" -> "1000634"  [label="DDG: un"];
"1000410" -> "1000634"  [label="DDG: nsops"];
"1000410" -> "1000634"  [label="DDG: task_tgid_vnr(current)"];
"1000410" -> "1000408"  [label="DDG: un"];
"1000410" -> "1000408"  [label="DDG: task_tgid_vnr(current)"];
"1000410" -> "1000408"  [label="DDG: nsops"];
"1000410" -> "1000408"  [label="DDG: sops"];
"1000410" -> "1000408"  [label="DDG: sma"];
"1000394" -> "1000410"  [label="DDG: sma"];
"1000394" -> "1000410"  [label="DDG: sops"];
"1000394" -> "1000410"  [label="DDG: nsops"];
"1000399" -> "1000410"  [label="DDG: un"];
"1000415" -> "1000410"  [label="DDG: current"];
"1000410" -> "1000428"  [label="DDG: sma"];
"1000410" -> "1000428"  [label="DDG: sops"];
"1000410" -> "1000428"  [label="DDG: nsops"];
"1000410" -> "1000436"  [label="DDG: sops"];
"1000410" -> "1000441"  [label="DDG: nsops"];
"1000410" -> "1000446"  [label="DDG: un"];
"1000410" -> "1000463"  [label="DDG: nsops"];
"1000410" -> "1000543"  [label="DDG: sma"];
"1000410" -> "1000618"  [label="DDG: sma"];
"1000410" -> "1000627"  [label="DDG: sops"];
"1000394" -> "1000392"  [label="AST: "];
"1000394" -> "1000397"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000397" -> "1000394"  [label="AST: "];
"1000392" -> "1000394"  [label="CFG: "];
"1000394" -> "1000634"  [label="DDG: nsops"];
"1000394" -> "1000392"  [label="DDG: sma"];
"1000394" -> "1000392"  [label="DDG: sops"];
"1000394" -> "1000392"  [label="DDG: nsops"];
"1000378" -> "1000394"  [label="DDG: sma"];
"1000378" -> "1000394"  [label="DDG: sops"];
"1000378" -> "1000394"  [label="DDG: nsops"];
"1000394" -> "1000618"  [label="DDG: sma"];
"1000394" -> "1000627"  [label="DDG: sops"];
"1000378" -> "1000376"  [label="AST: "];
"1000378" -> "1000382"  [label="CFG: "];
"1000379" -> "1000378"  [label="AST: "];
"1000380" -> "1000378"  [label="AST: "];
"1000381" -> "1000378"  [label="AST: "];
"1000382" -> "1000378"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000378" -> "1000634"  [label="DDG: sma"];
"1000378" -> "1000634"  [label="DDG: alter"];
"1000378" -> "1000634"  [label="DDG: nsops"];
"1000378" -> "1000376"  [label="DDG: sma"];
"1000378" -> "1000376"  [label="DDG: sops"];
"1000378" -> "1000376"  [label="DDG: nsops"];
"1000378" -> "1000376"  [label="DDG: alter"];
"1000336" -> "1000378"  [label="DDG: sma"];
"1000199" -> "1000378"  [label="DDG: sops"];
"1000202" -> "1000378"  [label="DDG: nsops"];
"1000378" -> "1000423"  [label="DDG: alter"];
"1000378" -> "1000457"  [label="DDG: alter"];
"1000378" -> "1000627"  [label="DDG: sops"];
"1000336" -> "1000335"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000339" -> "1000336"  [label="CFG: "];
"1000346" -> "1000336"  [label="CFG: "];
"1000336" -> "1000634"  [label="DDG: IS_ERR(sma)"];
"1000336" -> "1000634"  [label="DDG: sma"];
"1000330" -> "1000336"  [label="DDG: sma"];
"1000336" -> "1000342"  [label="DDG: sma"];
"1000330" -> "1000119"  [label="AST: "];
"1000331" -> "1000330"  [label="AST: "];
"1000337" -> "1000330"  [label="CFG: "];
"1000330" -> "1000634"  [label="DDG: sem_obtain_object_check(ns, semid)"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000202"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000202" -> "1000199"  [label="AST: "];
"1000209" -> "1000199"  [label="CFG: "];
"1000214" -> "1000199"  [label="CFG: "];
"1000199" -> "1000634"  [label="DDG: tsops"];
"1000199" -> "1000634"  [label="DDG: copy_from_user (sops, tsops, nsops * sizeof(*tsops))"];
"1000199" -> "1000634"  [label="DDG: nsops * sizeof(*tsops)"];
"1000128" -> "1000199"  [label="DDG: sops"];
"1000192" -> "1000199"  [label="DDG: sops"];
"1000202" -> "1000199"  [label="DDG: nsops"];
"1000199" -> "1000264"  [label="DDG: sops"];
"1000199" -> "1000267"  [label="DDG: sops"];
"1000199" -> "1000269"  [label="DDG: sops"];
"1000199" -> "1000627"  [label="DDG: sops"];
"1000128" -> "1000119"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000135" -> "1000128"  [label="CFG: "];
"1000128" -> "1000634"  [label="DDG: fast_sops"];
"1000128" -> "1000634"  [label="DDG: sops"];
"1000192" -> "1000191"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000194" -> "1000192"  [label="AST: "];
"1000197" -> "1000192"  [label="CFG: "];
"1000200" -> "1000192"  [label="CFG: "];
"1000192" -> "1000634"  [label="DDG: NULL"];
"1000192" -> "1000634"  [label="DDG: sops"];
"1000192" -> "1000634"  [label="DDG: sops==NULL"];
"1000182" -> "1000192"  [label="DDG: sops"];
"1000192" -> "1000326"  [label="DDG: NULL"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000193" -> "1000182"  [label="CFG: "];
"1000182" -> "1000634"  [label="DDG: kmalloc(sizeof(*sops)*nsops,GFP_KERNEL)"];
"1000184" -> "1000182"  [label="DDG: sizeof(*sops)*nsops"];
"1000184" -> "1000182"  [label="DDG: GFP_KERNEL"];
"1000184" -> "1000190"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000190" -> "1000184"  [label="AST: "];
"1000184" -> "1000634"  [label="DDG: sizeof(*sops)*nsops"];
"1000184" -> "1000634"  [label="DDG: GFP_KERNEL"];
"1000185" -> "1000184"  [label="DDG: nsops"];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000185" -> "1000634"  [label="DDG: nsops"];
"1000178" -> "1000185"  [label="DDG: nsops"];
"1000185" -> "1000202"  [label="DDG: nsops"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000183" -> "1000178"  [label="CFG: "];
"1000200" -> "1000178"  [label="CFG: "];
"1000178" -> "1000634"  [label="DDG: nsops > SEMOPM_FAST"];
"1000178" -> "1000634"  [label="DDG: SEMOPM_FAST"];
"1000169" -> "1000178"  [label="DDG: nsops"];
"1000178" -> "1000202"  [label="DDG: nsops"];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000176" -> "1000169"  [label="CFG: "];
"1000179" -> "1000169"  [label="CFG: "];
"1000169" -> "1000634"  [label="DDG: nsops > ns->sc_semopm"];
"1000169" -> "1000634"  [label="DDG: ns->sc_semopm"];
"1000169" -> "1000634"  [label="DDG: nsops"];
"1000159" -> "1000169"  [label="DDG: nsops"];
"1000159" -> "1000158"  [label="AST: "];
"1000159" -> "1000161"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="AST: "];
"1000163" -> "1000159"  [label="CFG: "];
"1000158" -> "1000159"  [label="CFG: "];
"1000159" -> "1000634"  [label="DDG: nsops"];
"1000159" -> "1000158"  [label="DDG: nsops"];
"1000159" -> "1000158"  [label="DDG: 1"];
"1000202" -> "1000204"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000202"  [label="AST: "];
"1000202" -> "1000634"  [label="DDG: nsops"];
"1000202" -> "1000267"  [label="DDG: nsops"];
"1000202" -> "1000269"  [label="DDG: nsops"];
"1000399" -> "1000398"  [label="AST: "];
"1000399" -> "1000400"  [label="CFG: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000401" -> "1000399"  [label="AST: "];
"1000407" -> "1000399"  [label="CFG: "];
"1000409" -> "1000399"  [label="CFG: "];
"1000399" -> "1000634"  [label="DDG: un->semid == -1"];
"1000399" -> "1000634"  [label="DDG: un"];
"1000399" -> "1000634"  [label="DDG: un && un->semid == -1"];
"1000326" -> "1000399"  [label="DDG: un"];
"1000316" -> "1000399"  [label="DDG: un"];
"1000401" -> "1000399"  [label="DDG: un->semid"];
"1000401" -> "1000399"  [label="DDG: -1"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000326" -> "1000634"  [label="DDG: NULL"];
"1000326" -> "1000634"  [label="DDG: un"];
"1000316" -> "1000315"  [label="AST: "];
"1000316" -> "1000317"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000320" -> "1000316"  [label="CFG: "];
"1000331" -> "1000316"  [label="CFG: "];
"1000316" -> "1000634"  [label="DDG: IS_ERR(un)"];
"1000316" -> "1000634"  [label="DDG: un"];
"1000310" -> "1000316"  [label="DDG: un"];
"1000316" -> "1000321"  [label="DDG: un"];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000310"  [label="AST: "];
"1000317" -> "1000310"  [label="CFG: "];
"1000310" -> "1000634"  [label="DDG: find_alloc_undo(ns, semid)"];
"1000401" -> "1000405"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000405" -> "1000401"  [label="AST: "];
"1000401" -> "1000634"  [label="DDG: -1"];
"1000401" -> "1000634"  [label="DDG: un->semid"];
"1000405" -> "1000401"  [label="DDG: 1"];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000415" -> "1000634"  [label="DDG: current"];
"1000415" -> "1000455"  [label="DDG: current"];
"1000463" -> "1000462"  [label="AST: "];
"1000463" -> "1000465"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000469" -> "1000463"  [label="CFG: "];
"1000502" -> "1000463"  [label="CFG: "];
"1000463" -> "1000634"  [label="DDG: nsops == 1"];
"1000463" -> "1000634"  [label="DDG: nsops"];
"1000578" -> "1000576"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000576" -> "1000578"  [label="CFG: "];
"1000578" -> "1000634"  [label="DDG: &queue"];
"1000578" -> "1000556"  [label="DDG: &queue"];
"1000578" -> "1000576"  [label="DDG: &queue"];
"1000556" -> "1000578"  [label="DDG: &queue"];
"1000556" -> "1000554"  [label="AST: "];
"1000556" -> "1000557"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000554" -> "1000556"  [label="CFG: "];
"1000556" -> "1000634"  [label="DDG: &queue"];
"1000556" -> "1000554"  [label="DDG: &queue"];
"1000618" -> "1000119"  [label="AST: "];
"1000618" -> "1000620"  [label="CFG: "];
"1000619" -> "1000618"  [label="AST: "];
"1000620" -> "1000618"  [label="AST: "];
"1000621" -> "1000618"  [label="CFG: "];
"1000618" -> "1000634"  [label="DDG: sem_unlock(sma, locknum)"];
"1000618" -> "1000634"  [label="DDG: sma"];
"1000618" -> "1000634"  [label="DDG: locknum"];
"1000428" -> "1000618"  [label="DDG: sma"];
"1000392" -> "1000618"  [label="DDG: locknum"];
"1000543" -> "1000618"  [label="DDG: locknum"];
}
