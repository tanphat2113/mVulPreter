digraph "0_linux_eee5cc2702929fd41cce28058dc6d6717f723f87_9@API" {
"1000224" [label="(Call,error = security_file_open(f, cred))"];
"1000226" [label="(Call,security_file_open(f, cred))"];
"1000178" [label="(Call,file_take_write(f))"];
"1000102" [label="(MethodParameterIn,struct file *f)"];
"1000104" [label="(MethodParameterIn,const struct cred *cred)"];
"1000355" [label="(Return,return error;)"];
"1000219" [label="(Call,error = -ENODEV)"];
"1000357" [label="(MethodReturn,static int)"];
"1000232" [label="(Call,error = break_lease(inode, f->f_flags))"];
"1000230" [label="(Identifier,error)"];
"1000355" [label="(Return,return error;)"];
"1000179" [label="(Identifier,f)"];
"1000227" [label="(Identifier,f)"];
"1000322" [label="(Call,file_reset_write(f))"];
"1000160" [label="(Call,error = __get_file_write_access(inode, f->f_path.mnt))"];
"1000225" [label="(Identifier,error)"];
"1000224" [label="(Call,error = security_file_open(f, cred))"];
"1000226" [label="(Call,security_file_open(f, cred))"];
"1000178" [label="(Call,file_take_write(f))"];
"1000105" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,struct file *f)"];
"1000104" [label="(MethodParameterIn,const struct cred *cred)"];
"1000228" [label="(Identifier,cred)"];
"1000356" [label="(Identifier,error)"];
"1000255" [label="(Call,error = open(inode, f))"];
"1000182" [label="(Identifier,f)"];
"1000257" [label="(Call,open(inode, f))"];
"1000172" [label="(ControlStructure,if (!special_file(inode->i_mode)))"];
"1000224" -> "1000105"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000224" -> "1000357"  [label="DDG: error"];
"1000224" -> "1000357"  [label="DDG: security_file_open(f, cred)"];
"1000226" -> "1000224"  [label="DDG: f"];
"1000226" -> "1000224"  [label="DDG: cred"];
"1000224" -> "1000355"  [label="DDG: error"];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000226" -> "1000357"  [label="DDG: f"];
"1000226" -> "1000357"  [label="DDG: cred"];
"1000178" -> "1000226"  [label="DDG: f"];
"1000102" -> "1000226"  [label="DDG: f"];
"1000104" -> "1000226"  [label="DDG: cred"];
"1000226" -> "1000257"  [label="DDG: f"];
"1000226" -> "1000322"  [label="DDG: f"];
"1000178" -> "1000172"  [label="AST: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="CFG: "];
"1000178" -> "1000357"  [label="DDG: file_take_write(f)"];
"1000178" -> "1000357"  [label="DDG: f"];
"1000102" -> "1000178"  [label="DDG: f"];
"1000178" -> "1000322"  [label="DDG: f"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000357"  [label="DDG: f"];
"1000102" -> "1000257"  [label="DDG: f"];
"1000102" -> "1000322"  [label="DDG: f"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000357"  [label="DDG: cred"];
"1000355" -> "1000105"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="CFG: "];
"1000355" -> "1000357"  [label="DDG: <RET>"];
"1000356" -> "1000355"  [label="DDG: error"];
"1000232" -> "1000355"  [label="DDG: error"];
"1000219" -> "1000355"  [label="DDG: error"];
"1000255" -> "1000355"  [label="DDG: error"];
"1000160" -> "1000355"  [label="DDG: error"];
}
