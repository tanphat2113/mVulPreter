digraph "0_linux_eee5cc2702929fd41cce28058dc6d6717f723f87_9@API" {
"1000178" [label="(Call,file_take_write(f))"];
"1000102" [label="(MethodParameterIn,struct file *f)"];
"1000226" [label="(Call,security_file_open(f, cred))"];
"1000224" [label="(Call,error = security_file_open(f, cred))"];
"1000355" [label="(Return,return error;)"];
"1000257" [label="(Call,open(inode, f))"];
"1000255" [label="(Call,error = open(inode, f))"];
"1000273" [label="(Call,i_readcount_inc(inode))"];
"1000313" [label="(Call,put_write_access(inode))"];
"1000322" [label="(Call,file_reset_write(f))"];
"1000140" [label="(Call,inode = f->f_inode = f->f_path.dentry->d_inode)"];
"1000273" [label="(Call,i_readcount_inc(inode))"];
"1000219" [label="(Call,error = -ENODEV)"];
"1000254" [label="(Block,)"];
"1000357" [label="(MethodReturn,static int)"];
"1000232" [label="(Call,error = break_lease(inode, f->f_flags))"];
"1000323" [label="(Identifier,f)"];
"1000230" [label="(Identifier,error)"];
"1000355" [label="(Return,return error;)"];
"1000179" [label="(Identifier,f)"];
"1000227" [label="(Identifier,f)"];
"1000321" [label="(Block,)"];
"1000263" [label="(ControlStructure,if ((f->f_mode & (FMODE_READ | FMODE_WRITE)) == FMODE_READ))"];
"1000274" [label="(Identifier,inode)"];
"1000322" [label="(Call,file_reset_write(f))"];
"1000256" [label="(Identifier,error)"];
"1000314" [label="(Identifier,inode)"];
"1000327" [label="(Identifier,f)"];
"1000160" [label="(Call,error = __get_file_write_access(inode, f->f_path.mnt))"];
"1000225" [label="(Identifier,error)"];
"1000313" [label="(Call,put_write_access(inode))"];
"1000224" [label="(Call,error = security_file_open(f, cred))"];
"1000226" [label="(Call,security_file_open(f, cred))"];
"1000178" [label="(Call,file_take_write(f))"];
"1000261" [label="(Identifier,error)"];
"1000162" [label="(Call,__get_file_write_access(inode, f->f_path.mnt))"];
"1000312" [label="(Block,)"];
"1000102" [label="(MethodParameterIn,struct file *f)"];
"1000105" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,const struct cred *cred)"];
"1000228" [label="(Identifier,cred)"];
"1000259" [label="(Identifier,f)"];
"1000234" [label="(Call,break_lease(inode, f->f_flags))"];
"1000356" [label="(Identifier,error)"];
"1000255" [label="(Call,error = open(inode, f))"];
"1000277" [label="(Identifier,f)"];
"1000182" [label="(Identifier,f)"];
"1000319" [label="(Identifier,inode)"];
"1000257" [label="(Call,open(inode, f))"];
"1000258" [label="(Identifier,inode)"];
"1000172" [label="(ControlStructure,if (!special_file(inode->i_mode)))"];
"1000178" -> "1000172"  [label="AST: "];
"1000178" -> "1000179"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000182" -> "1000178"  [label="CFG: "];
"1000178" -> "1000357"  [label="DDG: file_take_write(f)"];
"1000178" -> "1000357"  [label="DDG: f"];
"1000102" -> "1000178"  [label="DDG: f"];
"1000178" -> "1000226"  [label="DDG: f"];
"1000178" -> "1000322"  [label="DDG: f"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000357"  [label="DDG: f"];
"1000102" -> "1000226"  [label="DDG: f"];
"1000102" -> "1000257"  [label="DDG: f"];
"1000102" -> "1000322"  [label="DDG: f"];
"1000226" -> "1000224"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000226" -> "1000357"  [label="DDG: f"];
"1000226" -> "1000357"  [label="DDG: cred"];
"1000226" -> "1000224"  [label="DDG: f"];
"1000226" -> "1000224"  [label="DDG: cred"];
"1000104" -> "1000226"  [label="DDG: cred"];
"1000226" -> "1000257"  [label="DDG: f"];
"1000226" -> "1000322"  [label="DDG: f"];
"1000224" -> "1000105"  [label="AST: "];
"1000225" -> "1000224"  [label="AST: "];
"1000230" -> "1000224"  [label="CFG: "];
"1000224" -> "1000357"  [label="DDG: error"];
"1000224" -> "1000357"  [label="DDG: security_file_open(f, cred)"];
"1000224" -> "1000355"  [label="DDG: error"];
"1000355" -> "1000105"  [label="AST: "];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000357" -> "1000355"  [label="CFG: "];
"1000355" -> "1000357"  [label="DDG: <RET>"];
"1000356" -> "1000355"  [label="DDG: error"];
"1000232" -> "1000355"  [label="DDG: error"];
"1000219" -> "1000355"  [label="DDG: error"];
"1000255" -> "1000355"  [label="DDG: error"];
"1000160" -> "1000355"  [label="DDG: error"];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1000357"  [label="DDG: f"];
"1000257" -> "1000357"  [label="DDG: inode"];
"1000257" -> "1000255"  [label="DDG: inode"];
"1000257" -> "1000255"  [label="DDG: f"];
"1000234" -> "1000257"  [label="DDG: inode"];
"1000257" -> "1000273"  [label="DDG: inode"];
"1000257" -> "1000313"  [label="DDG: inode"];
"1000257" -> "1000322"  [label="DDG: f"];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000255"  [label="AST: "];
"1000261" -> "1000255"  [label="CFG: "];
"1000255" -> "1000357"  [label="DDG: open(inode, f)"];
"1000255" -> "1000357"  [label="DDG: error"];
"1000273" -> "1000263"  [label="AST: "];
"1000273" -> "1000274"  [label="CFG: "];
"1000274" -> "1000273"  [label="AST: "];
"1000277" -> "1000273"  [label="CFG: "];
"1000273" -> "1000357"  [label="DDG: inode"];
"1000273" -> "1000357"  [label="DDG: i_readcount_inc(inode)"];
"1000234" -> "1000273"  [label="DDG: inode"];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000319" -> "1000313"  [label="CFG: "];
"1000313" -> "1000357"  [label="DDG: put_write_access(inode)"];
"1000313" -> "1000357"  [label="DDG: inode"];
"1000234" -> "1000313"  [label="DDG: inode"];
"1000140" -> "1000313"  [label="DDG: inode"];
"1000162" -> "1000313"  [label="DDG: inode"];
"1000322" -> "1000321"  [label="AST: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000327" -> "1000322"  [label="CFG: "];
"1000322" -> "1000357"  [label="DDG: file_reset_write(f)"];
"1000322" -> "1000357"  [label="DDG: f"];
}
