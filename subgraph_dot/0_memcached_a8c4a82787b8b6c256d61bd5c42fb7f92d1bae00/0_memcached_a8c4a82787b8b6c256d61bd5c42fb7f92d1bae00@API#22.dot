digraph "0_memcached_a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00@API" {
"1000126" [label="(Call,assert(c != NULL))"];
"1000127" [label="(Call,c != NULL)"];
"1000106" [label="(MethodParameterIn,conn *c)"];
"1000738" [label="(Call,build_udp_headers(c))"];
"1000110" [label="(Block,)"];
"1000126" [label="(Call,assert(c != NULL))"];
"1000185" [label="(Call,NULL != it)"];
"1000451" [label="(Call,add_iov(c, \"VALUE \", 6))"];
"1000509" [label="(Call,add_chunked_item_iovs(c, it, it->nbytes))"];
"1000411" [label="(Call,add_iov(c, ITEM_data(it), it->nbytes))"];
"1000382" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix - 2))"];
"1000393" [label="(Call,add_iov(c, suffix, suffix_len))"];
"1000720" [label="(Call,key_token->value != NULL)"];
"1000106" [label="(MethodParameterIn,conn *c)"];
"1000742" [label="(Call,out_of_memory(c, \"SERVER_ERROR out of memory writing get response\"))"];
"1000324" [label="(Call,out_of_memory(c, \"SERVER_ERROR out of memory making CAS suffix\"))"];
"1000314" [label="(Call,suffix == NULL)"];
"1000129" [label="(Identifier,NULL)"];
"1000135" [label="(Identifier,key_token)"];
"1000457" [label="(Call,add_iov(c, ITEM_key(it), it->nkey))"];
"1000755" [label="(MethodReturn,static inline void)"];
"1000652" [label="(Call,key_token->value != NULL)"];
"1000421" [label="(Call,add_chunked_item_iovs(c, it, it->nbytes))"];
"1000127" [label="(Call,c != NULL)"];
"1000154" [label="(Call,out_string(c, \"CLIENT_ERROR bad command line format\"))"];
"1000500" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix))"];
"1000361" [label="(Call,add_iov(c, \"VALUE \", 6))"];
"1000368" [label="(Call,add_iov(c, ITEM_key(it), it->nkey))"];
"1000480" [label="(Call,add_iov(c, ITEM_suffix(it), it->nsuffix + it->nbytes))"];
"1000173" [label="(Call,limited_get(key, nkey, c))"];
"1000128" [label="(Identifier,c)"];
"1000727" [label="(Call,add_iov(c, \"END\r\n\", 5))"];
"1000747" [label="(Call,conn_set_state(c, conn_mwrite))"];
"1000126" -> "1000110"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000135" -> "1000126"  [label="CFG: "];
"1000126" -> "1000755"  [label="DDG: assert(c != NULL)"];
"1000126" -> "1000755"  [label="DDG: c != NULL"];
"1000127" -> "1000126"  [label="DDG: c"];
"1000127" -> "1000126"  [label="DDG: NULL"];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000127" -> "1000755"  [label="DDG: NULL"];
"1000106" -> "1000127"  [label="DDG: c"];
"1000127" -> "1000154"  [label="DDG: c"];
"1000127" -> "1000173"  [label="DDG: c"];
"1000127" -> "1000185"  [label="DDG: NULL"];
"1000127" -> "1000314"  [label="DDG: NULL"];
"1000127" -> "1000652"  [label="DDG: NULL"];
"1000127" -> "1000720"  [label="DDG: NULL"];
"1000127" -> "1000727"  [label="DDG: c"];
"1000127" -> "1000742"  [label="DDG: c"];
"1000127" -> "1000747"  [label="DDG: c"];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000755"  [label="DDG: c"];
"1000106" -> "1000154"  [label="DDG: c"];
"1000106" -> "1000173"  [label="DDG: c"];
"1000106" -> "1000324"  [label="DDG: c"];
"1000106" -> "1000361"  [label="DDG: c"];
"1000106" -> "1000368"  [label="DDG: c"];
"1000106" -> "1000382"  [label="DDG: c"];
"1000106" -> "1000393"  [label="DDG: c"];
"1000106" -> "1000411"  [label="DDG: c"];
"1000106" -> "1000421"  [label="DDG: c"];
"1000106" -> "1000451"  [label="DDG: c"];
"1000106" -> "1000457"  [label="DDG: c"];
"1000106" -> "1000480"  [label="DDG: c"];
"1000106" -> "1000500"  [label="DDG: c"];
"1000106" -> "1000509"  [label="DDG: c"];
"1000106" -> "1000727"  [label="DDG: c"];
"1000106" -> "1000738"  [label="DDG: c"];
"1000106" -> "1000742"  [label="DDG: c"];
"1000106" -> "1000747"  [label="DDG: c"];
}
