digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_26@pointer" {
"1000188" [label="(Call,pkt_sk(sk))"];
"1000173" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000150" [label="(Call,pkt_sk(sk))"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000176" [label="(Call,flags & MSG_DONTWAIT)"];
"1000158" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000134" [label="(Call,flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000113" [label="(MethodParameterIn,int flags)"];
"1000136" [label="(Call,~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000137" [label="(Call,MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000139" [label="(Call,MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000141" [label="(Call,MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000143" [label="(Call,MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000401" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000415" [label="(Call,PACKET_SKB_CB(skb))"];
"1000449" [label="(Call,PACKET_SKB_CB(skb))"];
"1000468" [label="(Call,skb_network_offset(skb))"];
"1000464" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000471" [label="(Call,vlan_tx_tag_present(skb))"];
"1000478" [label="(Call,vlan_tx_tag_get(skb))"];
"1000474" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000518" [label="(Call,skb_free_datagram(sk, skb))"];
"1000423" [label="(Call,pkt_sk(sk))"];
"1000497" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000404" [label="(Identifier,skb)"];
"1000465" [label="(Call,aux.tp_net)"];
"1000175" [label="(Identifier,flags)"];
"1000500" [label="(Identifier,PACKET_AUXDATA)"];
"1000180" [label="(Identifier,err)"];
"1000449" [label="(Call,PACKET_SKB_CB(skb))"];
"1000142" [label="(Identifier,MSG_TRUNC)"];
"1000468" [label="(Call,skb_network_offset(skb))"];
"1000140" [label="(Identifier,MSG_DONTWAIT)"];
"1000472" [label="(Identifier,skb)"];
"1000177" [label="(Identifier,flags)"];
"1000497" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000150" [label="(Call,pkt_sk(sk))"];
"1000478" [label="(Call,vlan_tx_tag_get(skb))"];
"1000422" [label="(Call,pkt_sk(sk)->auxdata)"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000471" [label="(Call,vlan_tx_tag_present(skb))"];
"1000145" [label="(Identifier,MSG_ERRQUEUE)"];
"1000189" [label="(Identifier,sk)"];
"1000212" [label="(Call,skb_is_gso(skb))"];
"1000114" [label="(Block,)"];
"1000519" [label="(Identifier,sk)"];
"1000182" [label="(Call,skb == NULL)"];
"1000424" [label="(Identifier,sk)"];
"1000391" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000141" [label="(Call,MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000510" [label="(Call,flags&MSG_TRUNC)"];
"1000417" [label="(FieldIdentifier,sa)"];
"1000163" [label="(Identifier,err)"];
"1000118" [label="(Call,sock->sk)"];
"1000135" [label="(Identifier,flags)"];
"1000176" [label="(Call,flags & MSG_DONTWAIT)"];
"1000520" [label="(Identifier,skb)"];
"1000469" [label="(Identifier,skb)"];
"1000415" [label="(Call,PACKET_SKB_CB(skb))"];
"1000475" [label="(Call,aux.tp_vlan_tci)"];
"1000134" [label="(Call,flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000470" [label="(ControlStructure,if (vlan_tx_tag_present(skb)))"];
"1000450" [label="(Identifier,skb)"];
"1000473" [label="(Block,)"];
"1000152" [label="(FieldIdentifier,ifindex)"];
"1000489" [label="(Identifier,aux)"];
"1000158" [label="(Call,flags & MSG_ERRQUEUE)"];
"1000116" [label="(Call,*sk = sock->sk)"];
"1000137" [label="(Call,MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000474" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000171" [label="(Call,skb = skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000188" [label="(Call,pkt_sk(sk))"];
"1000143" [label="(Call,MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000501" [label="(Call,sizeof(aux))"];
"1000499" [label="(Identifier,SOL_PACKET)"];
"1000416" [label="(Identifier,skb)"];
"1000503" [label="(Call,&aux)"];
"1000426" [label="(Block,)"];
"1000117" [label="(Identifier,sk)"];
"1000138" [label="(Identifier,MSG_PEEK)"];
"1000173" [label="(Call,skb_recv_datagram(sk, flags, flags & MSG_DONTWAIT, &err))"];
"1000464" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000113" [label="(MethodParameterIn,int flags)"];
"1000151" [label="(Identifier,sk)"];
"1000164" [label="(Call,sock_recv_errqueue(sk, msg, len,\n\t\t\t\t\t SOL_PACKET, PACKET_TX_TIMESTAMP))"];
"1000311" [label="(Call,skb_checksum_start_offset(skb))"];
"1000498" [label="(Identifier,msg)"];
"1000425" [label="(FieldIdentifier,auxdata)"];
"1000149" [label="(Call,pkt_sk(sk)->ifindex)"];
"1000407" [label="(Identifier,msg)"];
"1000187" [label="(Call,pkt_sk(sk)->has_vnet_hdr)"];
"1000479" [label="(Identifier,skb)"];
"1000414" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000127" [label="(Identifier,vnet_hdr_len)"];
"1000403" [label="(Identifier,sk)"];
"1000146" [label="(ControlStructure,goto out;)"];
"1000451" [label="(FieldIdentifier,origlen)"];
"1000506" [label="(Identifier,err)"];
"1000476" [label="(Identifier,aux)"];
"1000190" [label="(FieldIdentifier,has_vnet_hdr)"];
"1000144" [label="(Identifier,MSG_CMSG_COMPAT)"];
"1000384" [label="(Call,msg->msg_flags |= MSG_TRUNC)"];
"1000157" [label="(ControlStructure,if (flags & MSG_ERRQUEUE))"];
"1000136" [label="(Call,~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE))"];
"1000160" [label="(Identifier,MSG_ERRQUEUE)"];
"1000174" [label="(Identifier,sk)"];
"1000133" [label="(ControlStructure,if (flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)))"];
"1000401" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000448" [label="(Call,PACKET_SKB_CB(skb)->origlen)"];
"1000423" [label="(Call,pkt_sk(sk))"];
"1000178" [label="(Identifier,MSG_DONTWAIT)"];
"1000139" [label="(Call,MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000524" [label="(MethodReturn,static int)"];
"1000521" [label="(JumpTarget,out:)"];
"1000482" [label="(Identifier,aux)"];
"1000224" [label="(Call,skb_headlen(skb))"];
"1000159" [label="(Identifier,flags)"];
"1000402" [label="(Identifier,msg)"];
"1000179" [label="(Call,&err)"];
"1000172" [label="(Identifier,skb)"];
"1000518" [label="(Call,skb_free_datagram(sk, skb))"];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000189"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="CFG: "];
"1000173" -> "1000188"  [label="DDG: sk"];
"1000188" -> "1000401"  [label="DDG: sk"];
"1000188" -> "1000518"  [label="DDG: sk"];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000179"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000176" -> "1000173"  [label="AST: "];
"1000179" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000524"  [label="DDG: &err"];
"1000173" -> "1000524"  [label="DDG: flags & MSG_DONTWAIT"];
"1000173" -> "1000524"  [label="DDG: sk"];
"1000173" -> "1000524"  [label="DDG: flags"];
"1000173" -> "1000171"  [label="DDG: sk"];
"1000173" -> "1000171"  [label="DDG: flags"];
"1000173" -> "1000171"  [label="DDG: flags & MSG_DONTWAIT"];
"1000173" -> "1000171"  [label="DDG: &err"];
"1000150" -> "1000173"  [label="DDG: sk"];
"1000176" -> "1000173"  [label="DDG: flags"];
"1000176" -> "1000173"  [label="DDG: MSG_DONTWAIT"];
"1000113" -> "1000173"  [label="DDG: flags"];
"1000173" -> "1000510"  [label="DDG: flags"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="CFG: "];
"1000150" -> "1000524"  [label="DDG: sk"];
"1000116" -> "1000150"  [label="DDG: sk"];
"1000150" -> "1000164"  [label="DDG: sk"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000127" -> "1000116"  [label="CFG: "];
"1000116" -> "1000524"  [label="DDG: sk"];
"1000116" -> "1000524"  [label="DDG: sock->sk"];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000176" -> "1000524"  [label="DDG: MSG_DONTWAIT"];
"1000158" -> "1000176"  [label="DDG: flags"];
"1000113" -> "1000176"  [label="DDG: flags"];
"1000139" -> "1000176"  [label="DDG: MSG_DONTWAIT"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000163" -> "1000158"  [label="CFG: "];
"1000172" -> "1000158"  [label="CFG: "];
"1000158" -> "1000524"  [label="DDG: flags"];
"1000158" -> "1000524"  [label="DDG: MSG_ERRQUEUE"];
"1000158" -> "1000524"  [label="DDG: flags & MSG_ERRQUEUE"];
"1000134" -> "1000158"  [label="DDG: flags"];
"1000113" -> "1000158"  [label="DDG: flags"];
"1000143" -> "1000158"  [label="DDG: MSG_ERRQUEUE"];
"1000134" -> "1000133"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000146" -> "1000134"  [label="CFG: "];
"1000151" -> "1000134"  [label="CFG: "];
"1000134" -> "1000524"  [label="DDG: flags & ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000134" -> "1000524"  [label="DDG: flags"];
"1000134" -> "1000524"  [label="DDG: ~(MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE)"];
"1000113" -> "1000134"  [label="DDG: flags"];
"1000136" -> "1000134"  [label="DDG: MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000113" -> "1000108"  [label="AST: "];
"1000113" -> "1000524"  [label="DDG: flags"];
"1000113" -> "1000510"  [label="DDG: flags"];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000136" -> "1000524"  [label="DDG: MSG_PEEK|MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000137" -> "1000136"  [label="DDG: MSG_PEEK"];
"1000137" -> "1000136"  [label="DDG: MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000137" -> "1000524"  [label="DDG: MSG_DONTWAIT|MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000137" -> "1000524"  [label="DDG: MSG_PEEK"];
"1000139" -> "1000137"  [label="DDG: MSG_DONTWAIT"];
"1000139" -> "1000137"  [label="DDG: MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000139" -> "1000524"  [label="DDG: MSG_TRUNC|MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000139" -> "1000524"  [label="DDG: MSG_DONTWAIT"];
"1000141" -> "1000139"  [label="DDG: MSG_TRUNC"];
"1000141" -> "1000139"  [label="DDG: MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000141" -> "1000524"  [label="DDG: MSG_TRUNC"];
"1000141" -> "1000524"  [label="DDG: MSG_CMSG_COMPAT|MSG_ERRQUEUE"];
"1000143" -> "1000141"  [label="DDG: MSG_CMSG_COMPAT"];
"1000143" -> "1000141"  [label="DDG: MSG_ERRQUEUE"];
"1000141" -> "1000384"  [label="DDG: MSG_TRUNC"];
"1000141" -> "1000510"  [label="DDG: MSG_TRUNC"];
"1000143" -> "1000145"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000143" -> "1000524"  [label="DDG: MSG_CMSG_COMPAT"];
"1000143" -> "1000524"  [label="DDG: MSG_ERRQUEUE"];
"1000401" -> "1000114"  [label="AST: "];
"1000401" -> "1000404"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000404" -> "1000401"  [label="AST: "];
"1000407" -> "1000401"  [label="CFG: "];
"1000401" -> "1000524"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000401" -> "1000524"  [label="DDG: msg"];
"1000111" -> "1000401"  [label="DDG: msg"];
"1000391" -> "1000401"  [label="DDG: skb"];
"1000401" -> "1000415"  [label="DDG: skb"];
"1000401" -> "1000423"  [label="DDG: sk"];
"1000401" -> "1000449"  [label="DDG: skb"];
"1000401" -> "1000497"  [label="DDG: msg"];
"1000401" -> "1000518"  [label="DDG: skb"];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="CFG: "];
"1000415" -> "1000449"  [label="DDG: skb"];
"1000415" -> "1000518"  [label="DDG: skb"];
"1000449" -> "1000448"  [label="AST: "];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="CFG: "];
"1000449" -> "1000468"  [label="DDG: skb"];
"1000468" -> "1000464"  [label="AST: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000464" -> "1000468"  [label="CFG: "];
"1000468" -> "1000464"  [label="DDG: skb"];
"1000468" -> "1000471"  [label="DDG: skb"];
"1000464" -> "1000426"  [label="AST: "];
"1000465" -> "1000464"  [label="AST: "];
"1000472" -> "1000464"  [label="CFG: "];
"1000464" -> "1000524"  [label="DDG: aux.tp_net"];
"1000464" -> "1000524"  [label="DDG: skb_network_offset(skb)"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000476" -> "1000471"  [label="CFG: "];
"1000489" -> "1000471"  [label="CFG: "];
"1000471" -> "1000524"  [label="DDG: vlan_tx_tag_present(skb)"];
"1000471" -> "1000478"  [label="DDG: skb"];
"1000471" -> "1000518"  [label="DDG: skb"];
"1000478" -> "1000474"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000474" -> "1000478"  [label="CFG: "];
"1000478" -> "1000474"  [label="DDG: skb"];
"1000478" -> "1000518"  [label="DDG: skb"];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000474"  [label="AST: "];
"1000482" -> "1000474"  [label="CFG: "];
"1000474" -> "1000524"  [label="DDG: aux.tp_vlan_tci"];
"1000474" -> "1000524"  [label="DDG: vlan_tx_tag_get(skb)"];
"1000518" -> "1000114"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000521" -> "1000518"  [label="CFG: "];
"1000518" -> "1000524"  [label="DDG: skb"];
"1000518" -> "1000524"  [label="DDG: sk"];
"1000518" -> "1000524"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000423" -> "1000518"  [label="DDG: sk"];
"1000391" -> "1000518"  [label="DDG: skb"];
"1000212" -> "1000518"  [label="DDG: skb"];
"1000182" -> "1000518"  [label="DDG: skb"];
"1000311" -> "1000518"  [label="DDG: skb"];
"1000224" -> "1000518"  [label="DDG: skb"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="CFG: "];
"1000497" -> "1000426"  [label="AST: "];
"1000497" -> "1000503"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000500" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000503" -> "1000497"  [label="AST: "];
"1000506" -> "1000497"  [label="CFG: "];
"1000497" -> "1000524"  [label="DDG: msg"];
"1000497" -> "1000524"  [label="DDG: &aux"];
"1000497" -> "1000524"  [label="DDG: put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux)"];
"1000497" -> "1000524"  [label="DDG: SOL_PACKET"];
"1000497" -> "1000524"  [label="DDG: PACKET_AUXDATA"];
"1000111" -> "1000497"  [label="DDG: msg"];
}
