digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_26@pointer" {
"1000371" [label="(Call,copied = skb->len)"];
"1000377" [label="(Call,copied > len)"];
"1000381" [label="(Call,copied = len)"];
"1000391" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000389" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000522" [label="(Return,return err;)"];
"1000401" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000415" [label="(Call,PACKET_SKB_CB(skb))"];
"1000449" [label="(Call,PACKET_SKB_CB(skb))"];
"1000468" [label="(Call,skb_network_offset(skb))"];
"1000464" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000471" [label="(Call,vlan_tx_tag_present(skb))"];
"1000478" [label="(Call,vlan_tx_tag_get(skb))"];
"1000474" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000518" [label="(Call,skb_free_datagram(sk, skb))"];
"1000423" [label="(Call,pkt_sk(sk))"];
"1000497" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000505" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000507" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000509" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000404" [label="(Identifier,skb)"];
"1000381" [label="(Call,copied = len)"];
"1000465" [label="(Call,aux.tp_net)"];
"1000500" [label="(Identifier,PACKET_AUXDATA)"];
"1000354" [label="(Call,PACKET_SKB_CB(skb))"];
"1000195" [label="(Call,err = -EINVAL)"];
"1000449" [label="(Call,PACKET_SKB_CB(skb))"];
"1000468" [label="(Call,skb_network_offset(skb))"];
"1000386" [label="(Identifier,msg)"];
"1000472" [label="(Identifier,skb)"];
"1000497" [label="(Call,put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux))"];
"1000422" [label="(Call,pkt_sk(sk)->auxdata)"];
"1000478" [label="(Call,vlan_tx_tag_get(skb))"];
"1000111" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000471" [label="(Call,vlan_tx_tag_present(skb))"];
"1000112" [label="(MethodParameterIn,size_t len)"];
"1000513" [label="(Call,skb->len)"];
"1000378" [label="(Identifier,copied)"];
"1000394" [label="(Call,msg->msg_iov)"];
"1000345" [label="(Call,err < 0)"];
"1000212" [label="(Call,skb_is_gso(skb))"];
"1000393" [label="(Literal,0)"];
"1000392" [label="(Identifier,skb)"];
"1000114" [label="(Block,)"];
"1000335" [label="(Call,memcpy_toiovec(msg->msg_iov, (void *)&vnet_hdr,\n\t\t\t\t     vnet_hdr_len))"];
"1000519" [label="(Identifier,sk)"];
"1000182" [label="(Call,skb == NULL)"];
"1000424" [label="(Identifier,sk)"];
"1000391" [label="(Call,skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000162" [label="(Call,err = sock_recv_errqueue(sk, msg, len,\n\t\t\t\t\t SOL_PACKET, PACKET_TX_TIMESTAMP))"];
"1000510" [label="(Call,flags&MSG_TRUNC)"];
"1000516" [label="(Identifier,copied)"];
"1000417" [label="(FieldIdentifier,sa)"];
"1000129" [label="(Call,err = -EINVAL)"];
"1000520" [label="(Identifier,skb)"];
"1000469" [label="(Identifier,skb)"];
"1000415" [label="(Call,PACKET_SKB_CB(skb))"];
"1000475" [label="(Call,aux.tp_vlan_tci)"];
"1000376" [label="(ControlStructure,if (copied > len))"];
"1000470" [label="(ControlStructure,if (vlan_tx_tag_present(skb)))"];
"1000450" [label="(Identifier,skb)"];
"1000473" [label="(Block,)"];
"1000489" [label="(Identifier,aux)"];
"1000126" [label="(Call,vnet_hdr_len = 0)"];
"1000474" [label="(Call,aux.tp_vlan_tci = vlan_tx_tag_get(skb))"];
"1000188" [label="(Call,pkt_sk(sk))"];
"1000507" [label="(Call,vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000501" [label="(Call,sizeof(aux))"];
"1000499" [label="(Identifier,SOL_PACKET)"];
"1000416" [label="(Identifier,skb)"];
"1000503" [label="(Call,&aux)"];
"1000426" [label="(Block,)"];
"1000373" [label="(Call,skb->len)"];
"1000464" [label="(Call,aux.tp_net = skb_network_offset(skb))"];
"1000311" [label="(Call,skb_checksum_start_offset(skb))"];
"1000397" [label="(Identifier,copied)"];
"1000383" [label="(Identifier,len)"];
"1000522" [label="(Return,return err;)"];
"1000382" [label="(Identifier,copied)"];
"1000498" [label="(Identifier,msg)"];
"1000425" [label="(FieldIdentifier,auxdata)"];
"1000407" [label="(Identifier,msg)"];
"1000371" [label="(Call,copied = skb->len)"];
"1000479" [label="(Identifier,skb)"];
"1000414" [label="(Call,PACKET_SKB_CB(skb)->sa)"];
"1000509" [label="(Call,(flags&MSG_TRUNC) ? skb->len : copied)"];
"1000390" [label="(Identifier,err)"];
"1000403" [label="(Identifier,sk)"];
"1000380" [label="(Block,)"];
"1000506" [label="(Identifier,err)"];
"1000451" [label="(FieldIdentifier,origlen)"];
"1000476" [label="(Identifier,aux)"];
"1000399" [label="(Identifier,err)"];
"1000372" [label="(Identifier,copied)"];
"1000508" [label="(Identifier,vnet_hdr_len)"];
"1000517" [label="(JumpTarget,out_free:)"];
"1000377" [label="(Call,copied > len)"];
"1000401" [label="(Call,sock_recv_ts_and_drops(msg, sk, skb))"];
"1000523" [label="(Identifier,err)"];
"1000448" [label="(Call,PACKET_SKB_CB(skb)->origlen)"];
"1000423" [label="(Call,pkt_sk(sk))"];
"1000524" [label="(MethodReturn,static int)"];
"1000521" [label="(JumpTarget,out:)"];
"1000482" [label="(Identifier,aux)"];
"1000224" [label="(Call,skb_headlen(skb))"];
"1000505" [label="(Call,err = vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied))"];
"1000389" [label="(Call,err = skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied))"];
"1000208" [label="(Call,len -= vnet_hdr_len)"];
"1000402" [label="(Identifier,msg)"];
"1000379" [label="(Identifier,len)"];
"1000518" [label="(Call,skb_free_datagram(sk, skb))"];
"1000371" -> "1000114"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000378" -> "1000371"  [label="CFG: "];
"1000371" -> "1000524"  [label="DDG: skb->len"];
"1000371" -> "1000377"  [label="DDG: copied"];
"1000377" -> "1000376"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000382" -> "1000377"  [label="CFG: "];
"1000390" -> "1000377"  [label="CFG: "];
"1000377" -> "1000524"  [label="DDG: copied > len"];
"1000377" -> "1000524"  [label="DDG: len"];
"1000208" -> "1000377"  [label="DDG: len"];
"1000112" -> "1000377"  [label="DDG: len"];
"1000377" -> "1000381"  [label="DDG: len"];
"1000377" -> "1000391"  [label="DDG: copied"];
"1000381" -> "1000380"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000386" -> "1000381"  [label="CFG: "];
"1000381" -> "1000524"  [label="DDG: len"];
"1000112" -> "1000381"  [label="DDG: len"];
"1000381" -> "1000391"  [label="DDG: copied"];
"1000391" -> "1000389"  [label="AST: "];
"1000391" -> "1000397"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000394" -> "1000391"  [label="AST: "];
"1000397" -> "1000391"  [label="AST: "];
"1000389" -> "1000391"  [label="CFG: "];
"1000391" -> "1000524"  [label="DDG: copied"];
"1000391" -> "1000524"  [label="DDG: msg->msg_iov"];
"1000391" -> "1000389"  [label="DDG: skb"];
"1000391" -> "1000389"  [label="DDG: 0"];
"1000391" -> "1000389"  [label="DDG: msg->msg_iov"];
"1000391" -> "1000389"  [label="DDG: copied"];
"1000354" -> "1000391"  [label="DDG: skb"];
"1000335" -> "1000391"  [label="DDG: msg->msg_iov"];
"1000391" -> "1000401"  [label="DDG: skb"];
"1000391" -> "1000505"  [label="DDG: copied"];
"1000391" -> "1000507"  [label="DDG: copied"];
"1000391" -> "1000509"  [label="DDG: copied"];
"1000391" -> "1000518"  [label="DDG: skb"];
"1000389" -> "1000114"  [label="AST: "];
"1000390" -> "1000389"  [label="AST: "];
"1000399" -> "1000389"  [label="CFG: "];
"1000389" -> "1000524"  [label="DDG: err"];
"1000389" -> "1000524"  [label="DDG: skb_copy_datagram_iovec(skb, 0, msg->msg_iov, copied)"];
"1000389" -> "1000522"  [label="DDG: err"];
"1000522" -> "1000114"  [label="AST: "];
"1000522" -> "1000523"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="CFG: "];
"1000522" -> "1000524"  [label="DDG: <RET>"];
"1000523" -> "1000522"  [label="DDG: err"];
"1000129" -> "1000522"  [label="DDG: err"];
"1000505" -> "1000522"  [label="DDG: err"];
"1000345" -> "1000522"  [label="DDG: err"];
"1000162" -> "1000522"  [label="DDG: err"];
"1000195" -> "1000522"  [label="DDG: err"];
"1000401" -> "1000114"  [label="AST: "];
"1000401" -> "1000404"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000403" -> "1000401"  [label="AST: "];
"1000404" -> "1000401"  [label="AST: "];
"1000407" -> "1000401"  [label="CFG: "];
"1000401" -> "1000524"  [label="DDG: sock_recv_ts_and_drops(msg, sk, skb)"];
"1000401" -> "1000524"  [label="DDG: msg"];
"1000111" -> "1000401"  [label="DDG: msg"];
"1000188" -> "1000401"  [label="DDG: sk"];
"1000401" -> "1000415"  [label="DDG: skb"];
"1000401" -> "1000423"  [label="DDG: sk"];
"1000401" -> "1000449"  [label="DDG: skb"];
"1000401" -> "1000497"  [label="DDG: msg"];
"1000401" -> "1000518"  [label="DDG: skb"];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000416"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="CFG: "];
"1000415" -> "1000449"  [label="DDG: skb"];
"1000415" -> "1000518"  [label="DDG: skb"];
"1000449" -> "1000448"  [label="AST: "];
"1000449" -> "1000450"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000449"  [label="CFG: "];
"1000449" -> "1000468"  [label="DDG: skb"];
"1000468" -> "1000464"  [label="AST: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000464" -> "1000468"  [label="CFG: "];
"1000468" -> "1000464"  [label="DDG: skb"];
"1000468" -> "1000471"  [label="DDG: skb"];
"1000464" -> "1000426"  [label="AST: "];
"1000465" -> "1000464"  [label="AST: "];
"1000472" -> "1000464"  [label="CFG: "];
"1000464" -> "1000524"  [label="DDG: aux.tp_net"];
"1000464" -> "1000524"  [label="DDG: skb_network_offset(skb)"];
"1000471" -> "1000470"  [label="AST: "];
"1000471" -> "1000472"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000476" -> "1000471"  [label="CFG: "];
"1000489" -> "1000471"  [label="CFG: "];
"1000471" -> "1000524"  [label="DDG: vlan_tx_tag_present(skb)"];
"1000471" -> "1000478"  [label="DDG: skb"];
"1000471" -> "1000518"  [label="DDG: skb"];
"1000478" -> "1000474"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000474" -> "1000478"  [label="CFG: "];
"1000478" -> "1000474"  [label="DDG: skb"];
"1000478" -> "1000518"  [label="DDG: skb"];
"1000474" -> "1000473"  [label="AST: "];
"1000475" -> "1000474"  [label="AST: "];
"1000482" -> "1000474"  [label="CFG: "];
"1000474" -> "1000524"  [label="DDG: aux.tp_vlan_tci"];
"1000474" -> "1000524"  [label="DDG: vlan_tx_tag_get(skb)"];
"1000518" -> "1000114"  [label="AST: "];
"1000518" -> "1000520"  [label="CFG: "];
"1000519" -> "1000518"  [label="AST: "];
"1000520" -> "1000518"  [label="AST: "];
"1000521" -> "1000518"  [label="CFG: "];
"1000518" -> "1000524"  [label="DDG: skb"];
"1000518" -> "1000524"  [label="DDG: sk"];
"1000518" -> "1000524"  [label="DDG: skb_free_datagram(sk, skb)"];
"1000188" -> "1000518"  [label="DDG: sk"];
"1000423" -> "1000518"  [label="DDG: sk"];
"1000212" -> "1000518"  [label="DDG: skb"];
"1000182" -> "1000518"  [label="DDG: skb"];
"1000311" -> "1000518"  [label="DDG: skb"];
"1000224" -> "1000518"  [label="DDG: skb"];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000423"  [label="CFG: "];
"1000497" -> "1000426"  [label="AST: "];
"1000497" -> "1000503"  [label="CFG: "];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000497"  [label="AST: "];
"1000500" -> "1000497"  [label="AST: "];
"1000501" -> "1000497"  [label="AST: "];
"1000503" -> "1000497"  [label="AST: "];
"1000506" -> "1000497"  [label="CFG: "];
"1000497" -> "1000524"  [label="DDG: msg"];
"1000497" -> "1000524"  [label="DDG: &aux"];
"1000497" -> "1000524"  [label="DDG: put_cmsg(msg, SOL_PACKET, PACKET_AUXDATA, sizeof(aux), &aux)"];
"1000497" -> "1000524"  [label="DDG: SOL_PACKET"];
"1000497" -> "1000524"  [label="DDG: PACKET_AUXDATA"];
"1000111" -> "1000497"  [label="DDG: msg"];
"1000505" -> "1000114"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="AST: "];
"1000517" -> "1000505"  [label="CFG: "];
"1000505" -> "1000524"  [label="DDG: err"];
"1000505" -> "1000524"  [label="DDG: vnet_hdr_len + ((flags&MSG_TRUNC) ? skb->len : copied)"];
"1000335" -> "1000505"  [label="DDG: vnet_hdr_len"];
"1000126" -> "1000505"  [label="DDG: vnet_hdr_len"];
"1000507" -> "1000509"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000507"  [label="AST: "];
"1000507" -> "1000524"  [label="DDG: (flags&MSG_TRUNC) ? skb->len : copied"];
"1000507" -> "1000524"  [label="DDG: vnet_hdr_len"];
"1000335" -> "1000507"  [label="DDG: vnet_hdr_len"];
"1000126" -> "1000507"  [label="DDG: vnet_hdr_len"];
"1000509" -> "1000513"  [label="CFG: "];
"1000509" -> "1000516"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000513" -> "1000509"  [label="AST: "];
"1000516" -> "1000509"  [label="AST: "];
"1000509" -> "1000524"  [label="DDG: skb->len"];
"1000509" -> "1000524"  [label="DDG: copied"];
"1000509" -> "1000524"  [label="DDG: flags&MSG_TRUNC"];
}
