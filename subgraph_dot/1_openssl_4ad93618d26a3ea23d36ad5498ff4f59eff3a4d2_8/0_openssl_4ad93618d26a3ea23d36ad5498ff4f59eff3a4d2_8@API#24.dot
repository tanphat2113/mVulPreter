digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_8@API" {
"1000679" [label="(Call,PACKET_remaining(&spkt) != len)"];
"1000680" [label="(Call,PACKET_remaining(&spkt))"];
"1000674" [label="(Call,PACKET_get_1(&spkt, &len))"];
"1000668" [label="(Call,PACKET_remaining(&spkt))"];
"1000661" [label="(Call,PACKET_get_net_2(&spkt, &len))"];
"1000224" [label="(Call,PACKET_get_sub_packet(pkt, &spkt, size))"];
"1000210" [label="(Call,PACKET_get_net_2(pkt, &type))"];
"1000199" [label="(Call,tls1_check_duplicate_extensions(pkt))"];
"1000187" [label="(Call,PACKET_remaining(pkt))"];
"1000180" [label="(Call,PACKET_get_net_2(pkt, &length))"];
"1000117" [label="(MethodParameterIn,PACKET *pkt)"];
"1000214" [label="(Call,PACKET_get_net_2(pkt, &size))"];
"1000311" [label="(Call,PACKET_get_1(&spkt, &ecpointformatlist_length))"];
"1000230" [label="(Call,PACKET_peek_bytes(&spkt, &data, size))"];
"1000374" [label="(Call,PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length))"];
"1000349" [label="(Call,s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length))"];
"1000355" [label="(Call,OPENSSL_malloc(ecpointformatlist_length))"];
"1000316" [label="(Call,ecpointformatlist_length != size - 1)"];
"1000318" [label="(Call,size - 1)"];
"1000241" [label="(Call,s->tlsext_debug_cb(s, 1, type, data, size, s->tlsext_debug_arg))"];
"1000880" [label="(Call,custom_ext_parse(s, 0, type, data, size, al))"];
"1000801" [label="(Call,SSL_IS_DTLS(s))"];
"1000748" [label="(Call,SSL_IS_DTLS(s))"];
"1000419" [label="(Call,tls_use_ticket(s))"];
"1000402" [label="(Call,s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000808" [label="(Call,ssl_parse_serverhello_use_srtp_ext(s, &spkt, al))"];
"1000116" [label="(MethodParameterIn,SSL *s)"];
"1000257" [label="(Call,ssl_parse_serverhello_renegotiate_ext(s, &spkt, al))"];
"1000575" [label="(Call,s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg))"];
"1000522" [label="(Call,memcpy(s->tlsext_scts, data, size))"];
"1000510" [label="(Call,s->tlsext_scts == NULL)"];
"1000503" [label="(Call,s->tlsext_scts = OPENSSL_malloc(size))"];
"1000507" [label="(Call,OPENSSL_malloc(size))"];
"1000499" [label="(Call,size > 0)"];
"1000478" [label="(Call,s->tlsext_scts != NULL)"];
"1000488" [label="(Call,s->tlsext_scts = NULL)"];
"1000706" [label="(Call,s->s3->alpn_selected == NULL)"];
"1000697" [label="(Call,s->s3->alpn_selected = OPENSSL_malloc(len))"];
"1000703" [label="(Call,OPENSSL_malloc(len))"];
"1000667" [label="(Call,PACKET_remaining(&spkt) != len)"];
"1000722" [label="(Call,PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len))"];
"1000679" [label="(Call,PACKET_remaining(&spkt) != len)"];
"1000348" [label="(Call,(s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length)) == NULL)"];
"1000471" [label="(Call,s->ct_validation_callback != NULL)"];
"1000283" [label="(Call,s->tlsext_hostname == NULL)"];
"1000607" [label="(Call,s->next_proto_negotiated == NULL)"];
"1000600" [label="(Call,s->next_proto_negotiated = OPENSSL_malloc(selected_len))"];
"1000604" [label="(Call,OPENSSL_malloc(selected_len))"];
"1000619" [label="(Call,memcpy(s->next_proto_negotiated, selected, selected_len))"];
"1000547" [label="(Call,s->ctx->next_proto_select_cb == NULL)"];
"1000118" [label="(MethodParameterIn,int *al)"];
"1000854" [label="(Call,type == TLSEXT_TYPE_extended_master_secret)"];
"1000817" [label="(Call,type == TLSEXT_TYPE_encrypt_then_mac)"];
"1000750" [label="(Call,type == TLSEXT_TYPE_heartbeat)"];
"1000639" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1000531" [label="(Call,type == TLSEXT_TYPE_next_proto_neg)"];
"1000468" [label="(Call,type == TLSEXT_TYPE_signed_certificate_timestamp)"];
"1000438" [label="(Call,type == TLSEXT_TYPE_status_request)"];
"1000392" [label="(Call,type == TLSEXT_TYPE_session_ticket)"];
"1000303" [label="(Call,type == TLSEXT_TYPE_ec_point_formats)"];
"1000277" [label="(Call,type == TLSEXT_TYPE_server_name)"];
"1000251" [label="(Call,type == TLSEXT_TYPE_renegotiate)"];
"1000803" [label="(Call,type == TLSEXT_TYPE_use_srtp)"];
"1000757" [label="(Call,PACKET_get_1(&spkt, &hbtype))"];
"1000563" [label="(Call,ssl_next_proto_validate(&spkt))"];
"1000288" [label="(Call,size > 0)"];
"1000421" [label="(Call,size > 0)"];
"1000450" [label="(Call,size > 0)"];
"1000672" [label="(Call,!PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000666" [label="(Call,PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000659" [label="(Call,!PACKET_get_net_2(&spkt, &len)\n                || PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000282" [label="(Call,s->tlsext_hostname == NULL || size > 0)"];
"1000417" [label="(Call,!tls_use_ticket(s) || (size > 0))"];
"1000443" [label="(Call,(s->tlsext_status_type == -1) || (size > 0))"];
"1000467" [label="(Call,type == TLSEXT_TYPE_signed_certificate_timestamp &&\n                 s->ct_validation_callback != NULL)"];
"1000484" [label="(Call,OPENSSL_free(s->tlsext_scts))"];
"1000209" [label="(Call,PACKET_get_net_2(pkt, &type) && PACKET_get_net_2(pkt, &size))"];
"1000892" [label="(Call,PACKET_remaining(pkt))"];
"1000891" [label="(Call,PACKET_remaining(pkt) != 0)"];
"1000223" [label="(Call,!PACKET_get_sub_packet(pkt, &spkt, size))"];
"1000222" [label="(Call,!PACKET_get_sub_packet(pkt, &spkt, size)\n            || !PACKET_peek_bytes(&spkt, &data, size))"];
"1000229" [label="(Call,!PACKET_peek_bytes(&spkt, &data, size))"];
"1000530" [label="(Call,type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000747" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat)"];
"1000800" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_use_srtp)"];
"1000256" [label="(Call,!ssl_parse_serverhello_renegotiate_ext(s, &spkt, al))"];
"1000401" [label="(Call,!s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000397" [label="(Call,s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000418" [label="(Call,!tls_use_ticket(s))"];
"1000574" [label="(Call,s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg) !=\n                SSL_TLSEXT_ERR_OK)"];
"1000879" [label="(Call,custom_ext_parse(s, 0, type, data, size, al) <= 0)"];
"1000309" [label="(Call,!PACKET_get_1(&spkt, &ecpointformatlist_length)\n                || ecpointformatlist_length != size - 1)"];
"1000341" [label="(Call,OPENSSL_free(s->session->tlsext_ecpointformatlist))"];
"1000373" [label="(Call,!PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length))"];
"1000365" [label="(Call,s->session->tlsext_ecpointformatlist_length =\n                    ecpointformatlist_length)"];
"1000493" [label="(Call,s->tlsext_scts_len = size)"];
"1000310" [label="(Call,!PACKET_get_1(&spkt, &ecpointformatlist_length))"];
"1000562" [label="(Call,!ssl_next_proto_validate(&spkt))"];
"1000660" [label="(Call,!PACKET_get_net_2(&spkt, &len))"];
"1000673" [label="(Call,!PACKET_get_1(&spkt, &len))"];
"1000691" [label="(Call,OPENSSL_free(s->s3->alpn_selected))"];
"1000721" [label="(Call,!PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len))"];
"1000738" [label="(Call,s->s3->alpn_selected_len = len)"];
"1000756" [label="(Call,!PACKET_get_1(&spkt, &hbtype))"];
"1000596" [label="(Call,OPENSSL_free(s->next_proto_negotiated))"];
"1000625" [label="(Call,s->next_proto_negotiated_len = selected_len)"];
"1000918" [label="(Call,s->session->tlsext_hostname == NULL)"];
"1000932" [label="(Call,OPENSSL_strdup(s->tlsext_hostname))"];
"1000926" [label="(Call,s->session->tlsext_hostname =\n                    OPENSSL_strdup(s->tlsext_hostname))"];
"1000937" [label="(Call,!s->session->tlsext_hostname)"];
"1000810" [label="(Call,&spkt)"];
"1000750" [label="(Call,type == TLSEXT_TYPE_heartbeat)"];
"1000660" [label="(Call,!PACKET_get_net_2(&spkt, &len))"];
"1000500" [label="(Identifier,size)"];
"1000347" [label="(ControlStructure,if ((s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length)) == NULL))"];
"1000284" [label="(Call,s->tlsext_hostname)"];
"1000256" [label="(Call,!ssl_parse_serverhello_renegotiate_ext(s, &spkt, al))"];
"1000118" [label="(MethodParameterIn,int *al)"];
"1000889" [label="(Literal,0)"];
"1000573" [label="(ControlStructure,if (s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg) !=\n                SSL_TLSEXT_ERR_OK))"];
"1000495" [label="(Identifier,s)"];
"1000484" [label="(Call,OPENSSL_free(s->tlsext_scts))"];
"1000225" [label="(Identifier,pkt)"];
"1000489" [label="(Call,s->tlsext_scts)"];
"1000404" [label="(Identifier,data)"];
"1000522" [label="(Call,memcpy(s->tlsext_scts, data, size))"];
"1000748" [label="(Call,SSL_IS_DTLS(s))"];
"1000278" [label="(Identifier,type)"];
"1000894" [label="(Literal,0)"];
"1000927" [label="(Call,s->session->tlsext_hostname)"];
"1000246" [label="(Identifier,size)"];
"1000212" [label="(Call,&type)"];
"1000149" [label="(Call,s->s3->alpn_selected = NULL)"];
"1000641" [label="(Identifier,TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1000188" [label="(Identifier,pkt)"];
"1000940" [label="(Identifier,s)"];
"1000730" [label="(Identifier,len)"];
"1000478" [label="(Call,s->tlsext_scts != NULL)"];
"1000583" [label="(Call,s->\n                                             ctx->next_proto_select_cb_arg)"];
"1000319" [label="(Identifier,size)"];
"1000530" [label="(Call,type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0)"];
"1000271" [label="(Identifier,s)"];
"1000882" [label="(Literal,0)"];
"1000819" [label="(Identifier,TLSEXT_TYPE_encrypt_then_mac)"];
"1000394" [label="(Identifier,TLSEXT_TYPE_session_ticket)"];
"1000242" [label="(Identifier,s)"];
"1000310" [label="(Call,!PACKET_get_1(&spkt, &ecpointformatlist_length))"];
"1000885" [label="(Identifier,size)"];
"1000393" [label="(Identifier,type)"];
"1000529" [label="(ControlStructure,if (type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0))"];
"1000508" [label="(Identifier,size)"];
"1000757" [label="(Call,PACKET_get_1(&spkt, &hbtype))"];
"1000758" [label="(Call,&spkt)"];
"1000929" [label="(Identifier,s)"];
"1000642" [label="(Block,)"];
"1000741" [label="(Identifier,s)"];
"1000805" [label="(Identifier,TLSEXT_TYPE_use_srtp)"];
"1000287" [label="(Identifier,NULL)"];
"1000917" [label="(ControlStructure,if (s->session->tlsext_hostname == NULL))"];
"1000244" [label="(Identifier,type)"];
"1000818" [label="(Identifier,type)"];
"1000533" [label="(Identifier,TLSEXT_TYPE_next_proto_neg)"];
"1000538" [label="(Identifier,s)"];
"1000285" [label="(Identifier,s)"];
"1000724" [label="(Identifier,spkt)"];
"1000277" [label="(Call,type == TLSEXT_TYPE_server_name)"];
"1000698" [label="(Call,s->s3->alpn_selected)"];
"1000749" [label="(Identifier,s)"];
"1000954" [label="(Identifier,al)"];
"1000898" [label="(Identifier,al)"];
"1000919" [label="(Call,s->session->tlsext_hostname)"];
"1000884" [label="(Identifier,data)"];
"1000563" [label="(Call,ssl_next_proto_validate(&spkt))"];
"1000375" [label="(Call,&spkt)"];
"1001021" [label="(MethodReturn,static int)"];
"1000891" [label="(Call,PACKET_remaining(pkt) != 0)"];
"1000444" [label="(Call,s->tlsext_status_type == -1)"];
"1000856" [label="(Identifier,TLSEXT_TYPE_extended_master_secret)"];
"1000751" [label="(Identifier,type)"];
"1000569" [label="(Identifier,al)"];
"1000198" [label="(Call,!tls1_check_duplicate_extensions(pkt))"];
"1000208" [label="(ControlStructure,while (PACKET_get_net_2(pkt, &type) && PACKET_get_net_2(pkt, &size)))"];
"1000581" [label="(Identifier,data)"];
"1000803" [label="(Call,type == TLSEXT_TYPE_use_srtp)"];
"1000802" [label="(Identifier,s)"];
"1000893" [label="(Identifier,pkt)"];
"1000497" [label="(Identifier,size)"];
"1000725" [label="(Call,s->s3->alpn_selected)"];
"1000807" [label="(ControlStructure,if (ssl_parse_serverhello_use_srtp_ext(s, &spkt, al)))"];
"1000627" [label="(Identifier,s)"];
"1000399" [label="(Identifier,s)"];
"1000258" [label="(Identifier,s)"];
"1000855" [label="(Identifier,type)"];
"1000281" [label="(ControlStructure,if (s->tlsext_hostname == NULL || size > 0))"];
"1000276" [label="(ControlStructure,if (type == TLSEXT_TYPE_server_name))"];
"1000707" [label="(Call,s->s3->alpn_selected)"];
"1000373" [label="(Call,!PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length))"];
"1000214" [label="(Call,PACKET_get_net_2(pkt, &size))"];
"1000854" [label="(Call,type == TLSEXT_TYPE_extended_master_secret)"];
"1000687" [label="(Identifier,al)"];
"1000485" [label="(Call,s->tlsext_scts)"];
"1000365" [label="(Call,s->session->tlsext_ecpointformatlist_length =\n                    ecpointformatlist_length)"];
"1000514" [label="(Identifier,NULL)"];
"1000667" [label="(Call,PACKET_remaining(&spkt) != len)"];
"1000294" [label="(Identifier,al)"];
"1000673" [label="(Call,!PACKET_get_1(&spkt, &len))"];
"1000236" [label="(ControlStructure,goto ri_check;)"];
"1000483" [label="(Block,)"];
"1000416" [label="(ControlStructure,if (!tls_use_ticket(s) || (size > 0)))"];
"1000625" [label="(Call,s->next_proto_negotiated_len = selected_len)"];
"1000812" [label="(Identifier,al)"];
"1000534" [label="(Call,s->s3->tmp.finish_md_len == 0)"];
"1000892" [label="(Call,PACKET_remaining(pkt))"];
"1000720" [label="(ControlStructure,if (!PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len)))"];
"1000705" [label="(ControlStructure,if (s->s3->alpn_selected == NULL))"];
"1000596" [label="(Call,OPENSSL_free(s->next_proto_negotiated))"];
"1000808" [label="(Call,ssl_parse_serverhello_use_srtp_ext(s, &spkt, al))"];
"1000498" [label="(ControlStructure,if (size > 0))"];
"1000494" [label="(Call,s->tlsext_scts_len)"];
"1000629" [label="(Identifier,selected_len)"];
"1000659" [label="(Call,!PACKET_get_net_2(&spkt, &len)\n                || PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000890" [label="(ControlStructure,if (PACKET_remaining(pkt) != 0))"];
"1000924" [label="(Identifier,NULL)"];
"1000722" [label="(Call,PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len))"];
"1000442" [label="(ControlStructure,if ((s->tlsext_status_type == -1) || (size > 0)))"];
"1000547" [label="(Call,s->ctx->next_proto_select_cb == NULL)"];
"1000661" [label="(Call,PACKET_get_net_2(&spkt, &len))"];
"1000518" [label="(Identifier,al)"];
"1000289" [label="(Identifier,size)"];
"1000305" [label="(Identifier,TLSEXT_TYPE_ec_point_formats)"];
"1000228" [label="(Identifier,size)"];
"1000309" [label="(Call,!PACKET_get_1(&spkt, &ecpointformatlist_length)\n                || ecpointformatlist_length != size - 1)"];
"1000760" [label="(Call,&hbtype)"];
"1000604" [label="(Call,OPENSSL_malloc(selected_len))"];
"1000333" [label="(Block,)"];
"1000800" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_use_srtp)"];
"1000620" [label="(Call,s->next_proto_negotiated)"];
"1000561" [label="(ControlStructure,if (!ssl_next_proto_validate(&spkt)))"];
"1000311" [label="(Call,PACKET_get_1(&spkt, &ecpointformatlist_length))"];
"1000230" [label="(Call,PACKET_peek_bytes(&spkt, &data, size))"];
"1000946" [label="(Identifier,al)"];
"1000403" [label="(Identifier,s)"];
"1000666" [label="(Call,PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000180" [label="(Call,PACKET_get_net_2(pkt, &length))"];
"1000626" [label="(Call,s->next_proto_negotiated_len)"];
"1000501" [label="(Literal,0)"];
"1000303" [label="(Call,type == TLSEXT_TYPE_ec_point_formats)"];
"1000451" [label="(Identifier,size)"];
"1000479" [label="(Call,s->tlsext_scts)"];
"1000509" [label="(ControlStructure,if (s->tlsext_scts == NULL))"];
"1000226" [label="(Call,&spkt)"];
"1000633" [label="(Identifier,s)"];
"1000261" [label="(Identifier,al)"];
"1000469" [label="(Identifier,type)"];
"1000606" [label="(ControlStructure,if (s->next_proto_negotiated == NULL))"];
"1000490" [label="(Identifier,s)"];
"1000308" [label="(ControlStructure,if (!PACKET_get_1(&spkt, &ecpointformatlist_length)\n                || ecpointformatlist_length != size - 1))"];
"1000216" [label="(Call,&size)"];
"1000526" [label="(Identifier,data)"];
"1000117" [label="(MethodParameterIn,PACKET *pkt)"];
"1000250" [label="(ControlStructure,if (type == TLSEXT_TYPE_renegotiate))"];
"1000582" [label="(Identifier,size)"];
"1000611" [label="(Identifier,NULL)"];
"1000532" [label="(Identifier,type)"];
"1000879" [label="(Call,custom_ext_parse(s, 0, type, data, size, al) <= 0)"];
"1000881" [label="(Identifier,s)"];
"1000739" [label="(Call,s->s3->alpn_selected_len)"];
"1000716" [label="(Identifier,al)"];
"1000853" [label="(ControlStructure,if (type == TLSEXT_TYPE_extended_master_secret))"];
"1000680" [label="(Call,PACKET_remaining(&spkt))"];
"1000588" [label="(Identifier,SSL_TLSEXT_ERR_OK)"];
"1000456" [label="(Identifier,al)"];
"1000546" [label="(ControlStructure,if (s->ctx->next_proto_select_cb == NULL))"];
"1000512" [label="(Identifier,s)"];
"1000668" [label="(Call,PACKET_remaining(&spkt))"];
"1000801" [label="(Call,SSL_IS_DTLS(s))"];
"1000511" [label="(Call,s->tlsext_scts)"];
"1000417" [label="(Call,!tls_use_ticket(s) || (size > 0))"];
"1000341" [label="(Call,OPENSSL_free(s->session->tlsext_ecpointformatlist))"];
"1000878" [label="(ControlStructure,if (custom_ext_parse(s, 0, type, data, size, al) <= 0))"];
"1000639" [label="(Call,type == TLSEXT_TYPE_application_layer_protocol_negotiation)"];
"1000349" [label="(Call,s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length))"];
"1000531" [label="(Call,type == TLSEXT_TYPE_next_proto_neg)"];
"1000648" [label="(Identifier,s)"];
"1000299" [label="(Identifier,tlsext_servername)"];
"1000592" [label="(Identifier,al)"];
"1000747" [label="(Call,SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat)"];
"1000235" [label="(Identifier,size)"];
"1000263" [label="(Literal,0)"];
"1000437" [label="(ControlStructure,if (type == TLSEXT_TYPE_status_request))"];
"1000187" [label="(Call,PACKET_remaining(pkt))"];
"1000527" [label="(Identifier,size)"];
"1000752" [label="(Identifier,TLSEXT_TYPE_heartbeat)"];
"1000224" [label="(Call,PACKET_get_sub_packet(pkt, &spkt, size))"];
"1000221" [label="(ControlStructure,if (!PACKET_get_sub_packet(pkt, &spkt, size)\n            || !PACKET_peek_bytes(&spkt, &data, size)))"];
"1000342" [label="(Call,s->session->tlsext_ecpointformatlist)"];
"1000181" [label="(Identifier,pkt)"];
"1000253" [label="(Identifier,TLSEXT_TYPE_renegotiate)"];
"1000374" [label="(Call,PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length))"];
"1000503" [label="(Call,s->tlsext_scts = OPENSSL_malloc(size))"];
"1000887" [label="(Literal,0)"];
"1000402" [label="(Call,s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000574" [label="(Call,s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg) !=\n                SSL_TLSEXT_ERR_OK)"];
"1000744" [label="(Identifier,len)"];
"1000694" [label="(Identifier,s)"];
"1000439" [label="(Identifier,type)"];
"1000675" [label="(Call,&spkt)"];
"1000243" [label="(Literal,1)"];
"1000231" [label="(Call,&spkt)"];
"1000679" [label="(Call,PACKET_remaining(&spkt) != len)"];
"1000355" [label="(Call,OPENSSL_malloc(ecpointformatlist_length))"];
"1000482" [label="(Identifier,NULL)"];
"1000200" [label="(Identifier,pkt)"];
"1000222" [label="(Call,!PACKET_get_sub_packet(pkt, &spkt, size)\n            || !PACKET_peek_bytes(&spkt, &data, size))"];
"1000452" [label="(Literal,0)"];
"1000723" [label="(Call,&spkt)"];
"1000734" [label="(Identifier,al)"];
"1000926" [label="(Call,s->session->tlsext_hostname =\n                    OPENSSL_strdup(s->tlsext_hostname))"];
"1000672" [label="(Call,!PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len)"];
"1000283" [label="(Call,s->tlsext_hostname == NULL)"];
"1000524" [label="(Identifier,s)"];
"1000602" [label="(Identifier,s)"];
"1000210" [label="(Call,PACKET_get_net_2(pkt, &type))"];
"1000709" [label="(Identifier,s)"];
"1000507" [label="(Call,OPENSSL_malloc(size))"];
"1000499" [label="(Call,size > 0)"];
"1000814" [label="(Literal,0)"];
"1000958" [label="(JumpTarget,ri_check:)"];
"1000472" [label="(Call,s->ct_validation_callback)"];
"1000259" [label="(Call,&spkt)"];
"1000883" [label="(Identifier,type)"];
"1000422" [label="(Identifier,size)"];
"1000356" [label="(Identifier,ecpointformatlist_length)"];
"1000257" [label="(Call,ssl_parse_serverhello_renegotiate_ext(s, &spkt, al))"];
"1000804" [label="(Identifier,type)"];
"1000759" [label="(Identifier,spkt)"];
"1000936" [label="(ControlStructure,if (!s->session->tlsext_hostname))"];
"1000316" [label="(Call,ecpointformatlist_length != size - 1)"];
"1000377" [label="(Call,s->session->tlsext_ecpointformatlist)"];
"1000505" [label="(Identifier,s)"];
"1000116" [label="(MethodParameterIn,SSL *s)"];
"1000245" [label="(Identifier,data)"];
"1000419" [label="(Call,tls_use_ticket(s))"];
"1000313" [label="(Identifier,spkt)"];
"1000470" [label="(Identifier,TLSEXT_TYPE_signed_certificate_timestamp)"];
"1000440" [label="(Identifier,TLSEXT_TYPE_status_request)"];
"1000692" [label="(Call,s->s3->alpn_selected)"];
"1000462" [label="(Identifier,s)"];
"1000621" [label="(Identifier,s)"];
"1000607" [label="(Call,s->next_proto_negotiated == NULL)"];
"1000302" [label="(ControlStructure,if (type == TLSEXT_TYPE_ec_point_formats))"];
"1000770" [label="(Identifier,hbtype)"];
"1000438" [label="(Call,type == TLSEXT_TYPE_status_request)"];
"1000682" [label="(Identifier,spkt)"];
"1000247" [label="(Call,s->tlsext_debug_arg)"];
"1000576" [label="(Identifier,s)"];
"1000504" [label="(Call,s->tlsext_scts)"];
"1000397" [label="(Call,s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000288" [label="(Call,size > 0)"];
"1000880" [label="(Call,custom_ext_parse(s, 0, type, data, size, al))"];
"1000232" [label="(Identifier,spkt)"];
"1000601" [label="(Call,s->next_proto_negotiated)"];
"1000575" [label="(Call,s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg))"];
"1000683" [label="(Identifier,len)"];
"1000233" [label="(Call,&data)"];
"1000493" [label="(Call,s->tlsext_scts_len = size)"];
"1000615" [label="(Identifier,al)"];
"1000480" [label="(Identifier,s)"];
"1000186" [label="(Call,PACKET_remaining(pkt) != length)"];
"1000215" [label="(Identifier,pkt)"];
"1000523" [label="(Call,s->tlsext_scts)"];
"1000619" [label="(Call,memcpy(s->next_proto_negotiated, selected, selected_len))"];
"1000623" [label="(Identifier,selected)"];
"1000265" [label="(Identifier,renegotiate_seen)"];
"1000350" [label="(Call,s->session->tlsext_ecpointformatlist)"];
"1000681" [label="(Call,&spkt)"];
"1000189" [label="(Identifier,length)"];
"1000674" [label="(Call,PACKET_get_1(&spkt, &len))"];
"1000290" [label="(Literal,0)"];
"1000706" [label="(Call,s->s3->alpn_selected == NULL)"];
"1000746" [label="(ControlStructure,if (SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat))"];
"1000597" [label="(Call,s->next_proto_negotiated)"];
"1000933" [label="(Call,s->tlsext_hostname)"];
"1000937" [label="(Call,!s->session->tlsext_hostname)"];
"1000938" [label="(Call,s->session->tlsext_hostname)"];
"1000471" [label="(Call,s->ct_validation_callback != NULL)"];
"1000252" [label="(Identifier,type)"];
"1000502" [label="(Block,)"];
"1000765" [label="(Identifier,al)"];
"1000564" [label="(Call,&spkt)"];
"1000427" [label="(Identifier,al)"];
"1000677" [label="(Call,&len)"];
"1000209" [label="(Call,PACKET_get_net_2(pkt, &type) && PACKET_get_net_2(pkt, &size))"];
"1000468" [label="(Call,type == TLSEXT_TYPE_signed_certificate_timestamp)"];
"1000738" [label="(Call,s->s3->alpn_selected_len = len)"];
"1000477" [label="(ControlStructure,if (s->tlsext_scts != NULL))"];
"1000691" [label="(Call,OPENSSL_free(s->s3->alpn_selected))"];
"1000799" [label="(ControlStructure,if (SSL_IS_DTLS(s) && type == TLSEXT_TYPE_use_srtp))"];
"1000817" [label="(Call,type == TLSEXT_TYPE_encrypt_then_mac)"];
"1000670" [label="(Identifier,spkt)"];
"1000396" [label="(ControlStructure,if (s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg)))"];
"1000700" [label="(Identifier,s)"];
"1000669" [label="(Call,&spkt)"];
"1000320" [label="(Literal,1)"];
"1000577" [label="(Call,&selected)"];
"1000239" [label="(Identifier,s)"];
"1000241" [label="(Call,s->tlsext_debug_cb(s, 1, type, data, size, s->tlsext_debug_arg))"];
"1000229" [label="(Call,!PACKET_peek_bytes(&spkt, &data, size))"];
"1000809" [label="(Identifier,s)"];
"1000756" [label="(Call,!PACKET_get_1(&spkt, &hbtype))"];
"1000314" [label="(Call,&ecpointformatlist_length)"];
"1000348" [label="(Call,(s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length)) == NULL)"];
"1000543" [label="(Block,)"];
"1000433" [label="(Identifier,s)"];
"1000486" [label="(Identifier,s)"];
"1000609" [label="(Identifier,s)"];
"1000331" [label="(Identifier,s)"];
"1000199" [label="(Call,tls1_check_duplicate_extensions(pkt))"];
"1000605" [label="(Identifier,selected_len)"];
"1000886" [label="(Identifier,al)"];
"1000317" [label="(Identifier,ecpointformatlist_length)"];
"1000371" [label="(Identifier,ecpointformatlist_length)"];
"1000550" [label="(Identifier,s)"];
"1000450" [label="(Call,size > 0)"];
"1000179" [label="(Call,!PACKET_get_net_2(pkt, &length))"];
"1000755" [label="(ControlStructure,if (!PACKET_get_1(&spkt, &hbtype)))"];
"1000446" [label="(Identifier,s)"];
"1000676" [label="(Identifier,spkt)"];
"1000925" [label="(Block,)"];
"1000712" [label="(Identifier,NULL)"];
"1000398" [label="(Call,s->tls_session_ticket_ext_cb)"];
"1000703" [label="(Call,OPENSSL_malloc(len))"];
"1000638" [label="(ControlStructure,if (type == TLSEXT_TYPE_application_layer_protocol_negotiation))"];
"1000466" [label="(ControlStructure,if (type == TLSEXT_TYPE_signed_certificate_timestamp &&\n                 s->ct_validation_callback != NULL))"];
"1000352" [label="(Identifier,s)"];
"1000918" [label="(Call,s->session->tlsext_hostname == NULL)"];
"1000476" [label="(Block,)"];
"1000406" [label="(Call,s->tls_session_ticket_ext_cb_arg)"];
"1000473" [label="(Identifier,s)"];
"1000304" [label="(Identifier,type)"];
"1000600" [label="(Call,s->next_proto_negotiated = OPENSSL_malloc(selected_len))"];
"1000475" [label="(Identifier,NULL)"];
"1000376" [label="(Identifier,spkt)"];
"1000392" [label="(Call,type == TLSEXT_TYPE_session_ticket)"];
"1000828" [label="(Identifier,s)"];
"1000251" [label="(Call,type == TLSEXT_TYPE_renegotiate)"];
"1000318" [label="(Call,size - 1)"];
"1000324" [label="(Identifier,al)"];
"1000662" [label="(Call,&spkt)"];
"1000658" [label="(ControlStructure,if (!PACKET_get_net_2(&spkt, &len)\n                || PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len))"];
"1000932" [label="(Call,OPENSSL_strdup(s->tlsext_hostname))"];
"1000565" [label="(Identifier,spkt)"];
"1000418" [label="(Call,!tls_use_ticket(s))"];
"1000906" [label="(Identifier,s)"];
"1000664" [label="(Call,&len)"];
"1000366" [label="(Call,s->session->tlsext_ecpointformatlist_length)"];
"1000704" [label="(Identifier,len)"];
"1000721" [label="(Call,!PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len))"];
"1000368" [label="(Identifier,s)"];
"1000640" [label="(Identifier,type)"];
"1000391" [label="(ControlStructure,if (type == TLSEXT_TYPE_session_ticket))"];
"1000492" [label="(Identifier,NULL)"];
"1000548" [label="(Call,s->ctx->next_proto_select_cb)"];
"1000412" [label="(Identifier,al)"];
"1000423" [label="(Literal,0)"];
"1000420" [label="(Identifier,s)"];
"1000382" [label="(Identifier,ecpointformatlist_length)"];
"1000697" [label="(Call,s->s3->alpn_selected = OPENSSL_malloc(len))"];
"1000608" [label="(Call,s->next_proto_negotiated)"];
"1000182" [label="(Call,&length)"];
"1000401" [label="(Call,!s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg))"];
"1000357" [label="(Identifier,NULL)"];
"1000223" [label="(Call,!PACKET_get_sub_packet(pkt, &spkt, size))"];
"1000237" [label="(ControlStructure,if (s->tlsext_debug_cb))"];
"1000671" [label="(Identifier,len)"];
"1000861" [label="(Identifier,s)"];
"1000598" [label="(Identifier,s)"];
"1000562" [label="(Call,!ssl_next_proto_validate(&spkt))"];
"1000553" [label="(Identifier,NULL)"];
"1000488" [label="(Call,s->tlsext_scts = NULL)"];
"1000386" [label="(Identifier,al)"];
"1000361" [label="(Identifier,al)"];
"1000279" [label="(Identifier,TLSEXT_TYPE_server_name)"];
"1000579" [label="(Call,&selected_len)"];
"1000557" [label="(Identifier,al)"];
"1000816" [label="(ControlStructure,if (type == TLSEXT_TYPE_encrypt_then_mac))"];
"1000372" [label="(ControlStructure,if (!PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length)))"];
"1000510" [label="(Call,s->tlsext_scts == NULL)"];
"1000312" [label="(Call,&spkt)"];
"1000467" [label="(Call,type == TLSEXT_TYPE_signed_certificate_timestamp &&\n                 s->ct_validation_callback != NULL)"];
"1000282" [label="(Call,s->tlsext_hostname == NULL || size > 0)"];
"1000421" [label="(Call,size > 0)"];
"1000405" [label="(Identifier,size)"];
"1000255" [label="(ControlStructure,if (!ssl_parse_serverhello_renegotiate_ext(s, &spkt, al)))"];
"1000443" [label="(Call,(s->tlsext_status_type == -1) || (size > 0))"];
"1000211" [label="(Identifier,pkt)"];
"1000624" [label="(Identifier,selected_len)"];
"1000679" -> "1000672"  [label="AST: "];
"1000679" -> "1000683"  [label="CFG: "];
"1000680" -> "1000679"  [label="AST: "];
"1000683" -> "1000679"  [label="AST: "];
"1000672" -> "1000679"  [label="CFG: "];
"1000679" -> "1001021"  [label="DDG: PACKET_remaining(&spkt)"];
"1000679" -> "1001021"  [label="DDG: len"];
"1000679" -> "1000672"  [label="DDG: PACKET_remaining(&spkt)"];
"1000679" -> "1000672"  [label="DDG: len"];
"1000680" -> "1000679"  [label="DDG: &spkt"];
"1000667" -> "1000679"  [label="DDG: len"];
"1000679" -> "1000703"  [label="DDG: len"];
"1000680" -> "1000681"  [label="CFG: "];
"1000681" -> "1000680"  [label="AST: "];
"1000683" -> "1000680"  [label="CFG: "];
"1000680" -> "1001021"  [label="DDG: &spkt"];
"1000674" -> "1000680"  [label="DDG: &spkt"];
"1000680" -> "1000722"  [label="DDG: &spkt"];
"1000674" -> "1000673"  [label="AST: "];
"1000674" -> "1000677"  [label="CFG: "];
"1000675" -> "1000674"  [label="AST: "];
"1000677" -> "1000674"  [label="AST: "];
"1000673" -> "1000674"  [label="CFG: "];
"1000674" -> "1001021"  [label="DDG: &len"];
"1000674" -> "1001021"  [label="DDG: &spkt"];
"1000674" -> "1000661"  [label="DDG: &len"];
"1000674" -> "1000673"  [label="DDG: &spkt"];
"1000674" -> "1000673"  [label="DDG: &len"];
"1000668" -> "1000674"  [label="DDG: &spkt"];
"1000661" -> "1000674"  [label="DDG: &len"];
"1000674" -> "1000722"  [label="DDG: &spkt"];
"1000668" -> "1000667"  [label="AST: "];
"1000668" -> "1000669"  [label="CFG: "];
"1000669" -> "1000668"  [label="AST: "];
"1000671" -> "1000668"  [label="CFG: "];
"1000668" -> "1001021"  [label="DDG: &spkt"];
"1000668" -> "1000667"  [label="DDG: &spkt"];
"1000661" -> "1000668"  [label="DDG: &spkt"];
"1000668" -> "1000722"  [label="DDG: &spkt"];
"1000661" -> "1000660"  [label="AST: "];
"1000661" -> "1000664"  [label="CFG: "];
"1000662" -> "1000661"  [label="AST: "];
"1000664" -> "1000661"  [label="AST: "];
"1000660" -> "1000661"  [label="CFG: "];
"1000661" -> "1001021"  [label="DDG: &len"];
"1000661" -> "1001021"  [label="DDG: &spkt"];
"1000661" -> "1000660"  [label="DDG: &spkt"];
"1000661" -> "1000660"  [label="DDG: &len"];
"1000224" -> "1000661"  [label="DDG: &spkt"];
"1000230" -> "1000661"  [label="DDG: &spkt"];
"1000661" -> "1000722"  [label="DDG: &spkt"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1001021"  [label="DDG: pkt"];
"1000224" -> "1001021"  [label="DDG: &spkt"];
"1000224" -> "1001021"  [label="DDG: size"];
"1000224" -> "1000210"  [label="DDG: pkt"];
"1000224" -> "1000223"  [label="DDG: pkt"];
"1000224" -> "1000223"  [label="DDG: &spkt"];
"1000224" -> "1000223"  [label="DDG: size"];
"1000210" -> "1000224"  [label="DDG: pkt"];
"1000214" -> "1000224"  [label="DDG: pkt"];
"1000117" -> "1000224"  [label="DDG: pkt"];
"1000311" -> "1000224"  [label="DDG: &spkt"];
"1000374" -> "1000224"  [label="DDG: &spkt"];
"1000757" -> "1000224"  [label="DDG: &spkt"];
"1000230" -> "1000224"  [label="DDG: &spkt"];
"1000230" -> "1000224"  [label="DDG: size"];
"1000563" -> "1000224"  [label="DDG: &spkt"];
"1000722" -> "1000224"  [label="DDG: &spkt"];
"1000257" -> "1000224"  [label="DDG: &spkt"];
"1000808" -> "1000224"  [label="DDG: &spkt"];
"1000402" -> "1000224"  [label="DDG: size"];
"1000288" -> "1000224"  [label="DDG: size"];
"1000421" -> "1000224"  [label="DDG: size"];
"1000499" -> "1000224"  [label="DDG: size"];
"1000575" -> "1000224"  [label="DDG: size"];
"1000522" -> "1000224"  [label="DDG: size"];
"1000450" -> "1000224"  [label="DDG: size"];
"1000241" -> "1000224"  [label="DDG: size"];
"1000880" -> "1000224"  [label="DDG: size"];
"1000318" -> "1000224"  [label="DDG: size"];
"1000224" -> "1000230"  [label="DDG: &spkt"];
"1000224" -> "1000230"  [label="DDG: size"];
"1000224" -> "1000241"  [label="DDG: size"];
"1000224" -> "1000257"  [label="DDG: &spkt"];
"1000224" -> "1000288"  [label="DDG: size"];
"1000224" -> "1000311"  [label="DDG: &spkt"];
"1000224" -> "1000318"  [label="DDG: size"];
"1000224" -> "1000402"  [label="DDG: size"];
"1000224" -> "1000421"  [label="DDG: size"];
"1000224" -> "1000450"  [label="DDG: size"];
"1000224" -> "1000493"  [label="DDG: size"];
"1000224" -> "1000499"  [label="DDG: size"];
"1000224" -> "1000563"  [label="DDG: &spkt"];
"1000224" -> "1000575"  [label="DDG: size"];
"1000224" -> "1000757"  [label="DDG: &spkt"];
"1000224" -> "1000808"  [label="DDG: &spkt"];
"1000224" -> "1000880"  [label="DDG: size"];
"1000224" -> "1000892"  [label="DDG: pkt"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="CFG: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1001021"  [label="DDG: &type"];
"1000210" -> "1000209"  [label="DDG: pkt"];
"1000210" -> "1000209"  [label="DDG: &type"];
"1000199" -> "1000210"  [label="DDG: pkt"];
"1000117" -> "1000210"  [label="DDG: pkt"];
"1000210" -> "1000214"  [label="DDG: pkt"];
"1000210" -> "1000892"  [label="DDG: pkt"];
"1000199" -> "1000198"  [label="AST: "];
"1000199" -> "1000200"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1001021"  [label="DDG: pkt"];
"1000199" -> "1000198"  [label="DDG: pkt"];
"1000187" -> "1000199"  [label="DDG: pkt"];
"1000117" -> "1000199"  [label="DDG: pkt"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000188"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="CFG: "];
"1000187" -> "1001021"  [label="DDG: pkt"];
"1000187" -> "1000186"  [label="DDG: pkt"];
"1000180" -> "1000187"  [label="DDG: pkt"];
"1000117" -> "1000187"  [label="DDG: pkt"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1001021"  [label="DDG: &length"];
"1000180" -> "1001021"  [label="DDG: pkt"];
"1000180" -> "1000179"  [label="DDG: pkt"];
"1000180" -> "1000179"  [label="DDG: &length"];
"1000117" -> "1000180"  [label="DDG: pkt"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1001021"  [label="DDG: pkt"];
"1000117" -> "1000214"  [label="DDG: pkt"];
"1000117" -> "1000892"  [label="DDG: pkt"];
"1000214" -> "1000209"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000209" -> "1000214"  [label="CFG: "];
"1000214" -> "1001021"  [label="DDG: &size"];
"1000214" -> "1000209"  [label="DDG: pkt"];
"1000214" -> "1000209"  [label="DDG: &size"];
"1000214" -> "1000892"  [label="DDG: pkt"];
"1000311" -> "1000310"  [label="AST: "];
"1000311" -> "1000314"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000314" -> "1000311"  [label="AST: "];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1001021"  [label="DDG: &spkt"];
"1000311" -> "1001021"  [label="DDG: &ecpointformatlist_length"];
"1000311" -> "1000310"  [label="DDG: &spkt"];
"1000311" -> "1000310"  [label="DDG: &ecpointformatlist_length"];
"1000230" -> "1000311"  [label="DDG: &spkt"];
"1000311" -> "1000374"  [label="DDG: &spkt"];
"1000230" -> "1000229"  [label="AST: "];
"1000230" -> "1000235"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000233" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1001021"  [label="DDG: &data"];
"1000230" -> "1001021"  [label="DDG: size"];
"1000230" -> "1001021"  [label="DDG: &spkt"];
"1000230" -> "1000229"  [label="DDG: &spkt"];
"1000230" -> "1000229"  [label="DDG: &data"];
"1000230" -> "1000229"  [label="DDG: size"];
"1000230" -> "1000241"  [label="DDG: size"];
"1000230" -> "1000257"  [label="DDG: &spkt"];
"1000230" -> "1000288"  [label="DDG: size"];
"1000230" -> "1000318"  [label="DDG: size"];
"1000230" -> "1000402"  [label="DDG: size"];
"1000230" -> "1000421"  [label="DDG: size"];
"1000230" -> "1000450"  [label="DDG: size"];
"1000230" -> "1000493"  [label="DDG: size"];
"1000230" -> "1000499"  [label="DDG: size"];
"1000230" -> "1000563"  [label="DDG: &spkt"];
"1000230" -> "1000575"  [label="DDG: size"];
"1000230" -> "1000757"  [label="DDG: &spkt"];
"1000230" -> "1000808"  [label="DDG: &spkt"];
"1000230" -> "1000880"  [label="DDG: size"];
"1000374" -> "1000373"  [label="AST: "];
"1000374" -> "1000382"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000377" -> "1000374"  [label="AST: "];
"1000382" -> "1000374"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1001021"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000374" -> "1001021"  [label="DDG: &spkt"];
"1000374" -> "1001021"  [label="DDG: ecpointformatlist_length"];
"1000374" -> "1000316"  [label="DDG: ecpointformatlist_length"];
"1000374" -> "1000341"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000374" -> "1000355"  [label="DDG: ecpointformatlist_length"];
"1000374" -> "1000373"  [label="DDG: &spkt"];
"1000374" -> "1000373"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000374" -> "1000373"  [label="DDG: ecpointformatlist_length"];
"1000349" -> "1000374"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000355" -> "1000374"  [label="DDG: ecpointformatlist_length"];
"1000349" -> "1000348"  [label="AST: "];
"1000349" -> "1000355"  [label="CFG: "];
"1000350" -> "1000349"  [label="AST: "];
"1000355" -> "1000349"  [label="AST: "];
"1000357" -> "1000349"  [label="CFG: "];
"1000349" -> "1001021"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000349" -> "1001021"  [label="DDG: OPENSSL_malloc(ecpointformatlist_length)"];
"1000349" -> "1000348"  [label="DDG: s->session->tlsext_ecpointformatlist"];
"1000355" -> "1000349"  [label="DDG: ecpointformatlist_length"];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000355" -> "1001021"  [label="DDG: ecpointformatlist_length"];
"1000355" -> "1000348"  [label="DDG: ecpointformatlist_length"];
"1000316" -> "1000355"  [label="DDG: ecpointformatlist_length"];
"1000355" -> "1000365"  [label="DDG: ecpointformatlist_length"];
"1000316" -> "1000309"  [label="AST: "];
"1000316" -> "1000318"  [label="CFG: "];
"1000317" -> "1000316"  [label="AST: "];
"1000318" -> "1000316"  [label="AST: "];
"1000309" -> "1000316"  [label="CFG: "];
"1000316" -> "1001021"  [label="DDG: size - 1"];
"1000316" -> "1001021"  [label="DDG: ecpointformatlist_length"];
"1000316" -> "1000309"  [label="DDG: ecpointformatlist_length"];
"1000316" -> "1000309"  [label="DDG: size - 1"];
"1000318" -> "1000316"  [label="DDG: size"];
"1000318" -> "1000316"  [label="DDG: 1"];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000318" -> "1001021"  [label="DDG: size"];
"1000241" -> "1000318"  [label="DDG: size"];
"1000241" -> "1000237"  [label="AST: "];
"1000241" -> "1000247"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000247" -> "1000241"  [label="AST: "];
"1000252" -> "1000241"  [label="CFG: "];
"1000241" -> "1001021"  [label="DDG: s"];
"1000241" -> "1001021"  [label="DDG: data"];
"1000241" -> "1001021"  [label="DDG: size"];
"1000241" -> "1001021"  [label="DDG: s->tlsext_debug_cb(s, 1, type, data, size, s->tlsext_debug_arg)"];
"1000241" -> "1001021"  [label="DDG: s->tlsext_debug_arg"];
"1000880" -> "1000241"  [label="DDG: s"];
"1000880" -> "1000241"  [label="DDG: type"];
"1000880" -> "1000241"  [label="DDG: data"];
"1000801" -> "1000241"  [label="DDG: s"];
"1000419" -> "1000241"  [label="DDG: s"];
"1000808" -> "1000241"  [label="DDG: s"];
"1000257" -> "1000241"  [label="DDG: s"];
"1000748" -> "1000241"  [label="DDG: s"];
"1000575" -> "1000241"  [label="DDG: s"];
"1000575" -> "1000241"  [label="DDG: data"];
"1000116" -> "1000241"  [label="DDG: s"];
"1000750" -> "1000241"  [label="DDG: type"];
"1000303" -> "1000241"  [label="DDG: type"];
"1000817" -> "1000241"  [label="DDG: type"];
"1000468" -> "1000241"  [label="DDG: type"];
"1000803" -> "1000241"  [label="DDG: type"];
"1000438" -> "1000241"  [label="DDG: type"];
"1000531" -> "1000241"  [label="DDG: type"];
"1000639" -> "1000241"  [label="DDG: type"];
"1000251" -> "1000241"  [label="DDG: type"];
"1000392" -> "1000241"  [label="DDG: type"];
"1000277" -> "1000241"  [label="DDG: type"];
"1000854" -> "1000241"  [label="DDG: type"];
"1000402" -> "1000241"  [label="DDG: data"];
"1000522" -> "1000241"  [label="DDG: data"];
"1000241" -> "1000251"  [label="DDG: type"];
"1000241" -> "1000257"  [label="DDG: s"];
"1000241" -> "1000288"  [label="DDG: size"];
"1000241" -> "1000402"  [label="DDG: s"];
"1000241" -> "1000402"  [label="DDG: data"];
"1000241" -> "1000402"  [label="DDG: size"];
"1000241" -> "1000419"  [label="DDG: s"];
"1000241" -> "1000421"  [label="DDG: size"];
"1000241" -> "1000450"  [label="DDG: size"];
"1000241" -> "1000493"  [label="DDG: size"];
"1000241" -> "1000499"  [label="DDG: size"];
"1000241" -> "1000522"  [label="DDG: data"];
"1000241" -> "1000575"  [label="DDG: s"];
"1000241" -> "1000575"  [label="DDG: data"];
"1000241" -> "1000575"  [label="DDG: size"];
"1000241" -> "1000748"  [label="DDG: s"];
"1000241" -> "1000880"  [label="DDG: data"];
"1000241" -> "1000880"  [label="DDG: size"];
"1000880" -> "1000879"  [label="AST: "];
"1000880" -> "1000886"  [label="CFG: "];
"1000881" -> "1000880"  [label="AST: "];
"1000882" -> "1000880"  [label="AST: "];
"1000883" -> "1000880"  [label="AST: "];
"1000884" -> "1000880"  [label="AST: "];
"1000885" -> "1000880"  [label="AST: "];
"1000886" -> "1000880"  [label="AST: "];
"1000887" -> "1000880"  [label="CFG: "];
"1000880" -> "1001021"  [label="DDG: s"];
"1000880" -> "1001021"  [label="DDG: type"];
"1000880" -> "1001021"  [label="DDG: data"];
"1000880" -> "1001021"  [label="DDG: size"];
"1000880" -> "1001021"  [label="DDG: al"];
"1000880" -> "1000251"  [label="DDG: type"];
"1000880" -> "1000257"  [label="DDG: s"];
"1000880" -> "1000257"  [label="DDG: al"];
"1000880" -> "1000402"  [label="DDG: s"];
"1000880" -> "1000402"  [label="DDG: data"];
"1000880" -> "1000419"  [label="DDG: s"];
"1000880" -> "1000522"  [label="DDG: data"];
"1000880" -> "1000575"  [label="DDG: s"];
"1000880" -> "1000575"  [label="DDG: data"];
"1000880" -> "1000748"  [label="DDG: s"];
"1000880" -> "1000808"  [label="DDG: al"];
"1000880" -> "1000879"  [label="DDG: 0"];
"1000880" -> "1000879"  [label="DDG: s"];
"1000880" -> "1000879"  [label="DDG: size"];
"1000880" -> "1000879"  [label="DDG: data"];
"1000880" -> "1000879"  [label="DDG: type"];
"1000880" -> "1000879"  [label="DDG: al"];
"1000801" -> "1000880"  [label="DDG: s"];
"1000116" -> "1000880"  [label="DDG: s"];
"1000854" -> "1000880"  [label="DDG: type"];
"1000402" -> "1000880"  [label="DDG: data"];
"1000522" -> "1000880"  [label="DDG: data"];
"1000575" -> "1000880"  [label="DDG: data"];
"1000257" -> "1000880"  [label="DDG: al"];
"1000808" -> "1000880"  [label="DDG: al"];
"1000118" -> "1000880"  [label="DDG: al"];
"1000801" -> "1000800"  [label="AST: "];
"1000801" -> "1000802"  [label="CFG: "];
"1000802" -> "1000801"  [label="AST: "];
"1000804" -> "1000801"  [label="CFG: "];
"1000800" -> "1000801"  [label="CFG: "];
"1000801" -> "1001021"  [label="DDG: s"];
"1000801" -> "1000257"  [label="DDG: s"];
"1000801" -> "1000402"  [label="DDG: s"];
"1000801" -> "1000419"  [label="DDG: s"];
"1000801" -> "1000575"  [label="DDG: s"];
"1000801" -> "1000748"  [label="DDG: s"];
"1000801" -> "1000800"  [label="DDG: s"];
"1000748" -> "1000801"  [label="DDG: s"];
"1000116" -> "1000801"  [label="DDG: s"];
"1000801" -> "1000808"  [label="DDG: s"];
"1000748" -> "1000747"  [label="AST: "];
"1000748" -> "1000749"  [label="CFG: "];
"1000749" -> "1000748"  [label="AST: "];
"1000751" -> "1000748"  [label="CFG: "];
"1000747" -> "1000748"  [label="CFG: "];
"1000748" -> "1001021"  [label="DDG: s"];
"1000748" -> "1000257"  [label="DDG: s"];
"1000748" -> "1000402"  [label="DDG: s"];
"1000748" -> "1000419"  [label="DDG: s"];
"1000748" -> "1000575"  [label="DDG: s"];
"1000748" -> "1000747"  [label="DDG: s"];
"1000419" -> "1000748"  [label="DDG: s"];
"1000808" -> "1000748"  [label="DDG: s"];
"1000257" -> "1000748"  [label="DDG: s"];
"1000575" -> "1000748"  [label="DDG: s"];
"1000116" -> "1000748"  [label="DDG: s"];
"1000419" -> "1000418"  [label="AST: "];
"1000419" -> "1000420"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000418" -> "1000419"  [label="CFG: "];
"1000419" -> "1001021"  [label="DDG: s"];
"1000419" -> "1000257"  [label="DDG: s"];
"1000419" -> "1000402"  [label="DDG: s"];
"1000419" -> "1000418"  [label="DDG: s"];
"1000402" -> "1000419"  [label="DDG: s"];
"1000808" -> "1000419"  [label="DDG: s"];
"1000257" -> "1000419"  [label="DDG: s"];
"1000575" -> "1000419"  [label="DDG: s"];
"1000116" -> "1000419"  [label="DDG: s"];
"1000419" -> "1000575"  [label="DDG: s"];
"1000402" -> "1000401"  [label="AST: "];
"1000402" -> "1000406"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000404" -> "1000402"  [label="AST: "];
"1000405" -> "1000402"  [label="AST: "];
"1000406" -> "1000402"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1001021"  [label="DDG: size"];
"1000402" -> "1001021"  [label="DDG: data"];
"1000402" -> "1001021"  [label="DDG: s"];
"1000402" -> "1001021"  [label="DDG: s->tls_session_ticket_ext_cb_arg"];
"1000402" -> "1000401"  [label="DDG: s"];
"1000402" -> "1000401"  [label="DDG: data"];
"1000402" -> "1000401"  [label="DDG: size"];
"1000402" -> "1000401"  [label="DDG: s->tls_session_ticket_ext_cb_arg"];
"1000808" -> "1000402"  [label="DDG: s"];
"1000257" -> "1000402"  [label="DDG: s"];
"1000575" -> "1000402"  [label="DDG: s"];
"1000575" -> "1000402"  [label="DDG: data"];
"1000116" -> "1000402"  [label="DDG: s"];
"1000522" -> "1000402"  [label="DDG: data"];
"1000402" -> "1000421"  [label="DDG: size"];
"1000402" -> "1000522"  [label="DDG: data"];
"1000402" -> "1000575"  [label="DDG: data"];
"1000808" -> "1000807"  [label="AST: "];
"1000808" -> "1000812"  [label="CFG: "];
"1000809" -> "1000808"  [label="AST: "];
"1000810" -> "1000808"  [label="AST: "];
"1000812" -> "1000808"  [label="AST: "];
"1000211" -> "1000808"  [label="CFG: "];
"1000814" -> "1000808"  [label="CFG: "];
"1000808" -> "1001021"  [label="DDG: &spkt"];
"1000808" -> "1001021"  [label="DDG: ssl_parse_serverhello_use_srtp_ext(s, &spkt, al)"];
"1000808" -> "1001021"  [label="DDG: s"];
"1000808" -> "1001021"  [label="DDG: al"];
"1000808" -> "1000257"  [label="DDG: s"];
"1000808" -> "1000257"  [label="DDG: al"];
"1000808" -> "1000575"  [label="DDG: s"];
"1000116" -> "1000808"  [label="DDG: s"];
"1000257" -> "1000808"  [label="DDG: al"];
"1000118" -> "1000808"  [label="DDG: al"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1001021"  [label="DDG: s"];
"1000116" -> "1000257"  [label="DDG: s"];
"1000116" -> "1000575"  [label="DDG: s"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000261"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000261" -> "1000257"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1001021"  [label="DDG: &spkt"];
"1000257" -> "1001021"  [label="DDG: s"];
"1000257" -> "1001021"  [label="DDG: al"];
"1000257" -> "1000256"  [label="DDG: s"];
"1000257" -> "1000256"  [label="DDG: &spkt"];
"1000257" -> "1000256"  [label="DDG: al"];
"1000575" -> "1000257"  [label="DDG: s"];
"1000118" -> "1000257"  [label="DDG: al"];
"1000257" -> "1000575"  [label="DDG: s"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000583"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000579" -> "1000575"  [label="AST: "];
"1000581" -> "1000575"  [label="AST: "];
"1000582" -> "1000575"  [label="AST: "];
"1000583" -> "1000575"  [label="AST: "];
"1000588" -> "1000575"  [label="CFG: "];
"1000575" -> "1001021"  [label="DDG: &selected_len"];
"1000575" -> "1001021"  [label="DDG: &selected"];
"1000575" -> "1001021"  [label="DDG: s->\n                                             ctx->next_proto_select_cb_arg"];
"1000575" -> "1001021"  [label="DDG: size"];
"1000575" -> "1001021"  [label="DDG: data"];
"1000575" -> "1001021"  [label="DDG: s"];
"1000575" -> "1000522"  [label="DDG: data"];
"1000575" -> "1000574"  [label="DDG: s"];
"1000575" -> "1000574"  [label="DDG: &selected"];
"1000575" -> "1000574"  [label="DDG: data"];
"1000575" -> "1000574"  [label="DDG: &selected_len"];
"1000575" -> "1000574"  [label="DDG: s->\n                                             ctx->next_proto_select_cb_arg"];
"1000575" -> "1000574"  [label="DDG: size"];
"1000522" -> "1000575"  [label="DDG: data"];
"1000522" -> "1000502"  [label="AST: "];
"1000522" -> "1000527"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="AST: "];
"1000527" -> "1000522"  [label="AST: "];
"1000211" -> "1000522"  [label="CFG: "];
"1000522" -> "1001021"  [label="DDG: memcpy(s->tlsext_scts, data, size)"];
"1000522" -> "1001021"  [label="DDG: data"];
"1000522" -> "1001021"  [label="DDG: size"];
"1000522" -> "1001021"  [label="DDG: s->tlsext_scts"];
"1000522" -> "1000478"  [label="DDG: s->tlsext_scts"];
"1000510" -> "1000522"  [label="DDG: s->tlsext_scts"];
"1000507" -> "1000522"  [label="DDG: size"];
"1000510" -> "1000509"  [label="AST: "];
"1000510" -> "1000514"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000514" -> "1000510"  [label="AST: "];
"1000518" -> "1000510"  [label="CFG: "];
"1000524" -> "1000510"  [label="CFG: "];
"1000510" -> "1001021"  [label="DDG: NULL"];
"1000510" -> "1001021"  [label="DDG: s->tlsext_scts"];
"1000510" -> "1001021"  [label="DDG: s->tlsext_scts == NULL"];
"1000510" -> "1000283"  [label="DDG: NULL"];
"1000510" -> "1000348"  [label="DDG: NULL"];
"1000510" -> "1000471"  [label="DDG: NULL"];
"1000510" -> "1000478"  [label="DDG: NULL"];
"1000503" -> "1000510"  [label="DDG: s->tlsext_scts"];
"1000478" -> "1000510"  [label="DDG: NULL"];
"1000510" -> "1000547"  [label="DDG: NULL"];
"1000510" -> "1000706"  [label="DDG: NULL"];
"1000510" -> "1000918"  [label="DDG: NULL"];
"1000503" -> "1000502"  [label="AST: "];
"1000503" -> "1000507"  [label="CFG: "];
"1000504" -> "1000503"  [label="AST: "];
"1000507" -> "1000503"  [label="AST: "];
"1000512" -> "1000503"  [label="CFG: "];
"1000503" -> "1001021"  [label="DDG: OPENSSL_malloc(size)"];
"1000507" -> "1000503"  [label="DDG: size"];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000507" -> "1001021"  [label="DDG: size"];
"1000499" -> "1000507"  [label="DDG: size"];
"1000499" -> "1000498"  [label="AST: "];
"1000499" -> "1000501"  [label="CFG: "];
"1000500" -> "1000499"  [label="AST: "];
"1000501" -> "1000499"  [label="AST: "];
"1000211" -> "1000499"  [label="CFG: "];
"1000505" -> "1000499"  [label="CFG: "];
"1000499" -> "1001021"  [label="DDG: size > 0"];
"1000499" -> "1001021"  [label="DDG: size"];
"1000499" -> "1000282"  [label="DDG: size > 0"];
"1000499" -> "1000417"  [label="DDG: size > 0"];
"1000499" -> "1000443"  [label="DDG: size > 0"];
"1000478" -> "1000477"  [label="AST: "];
"1000478" -> "1000482"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000482" -> "1000478"  [label="AST: "];
"1000486" -> "1000478"  [label="CFG: "];
"1000495" -> "1000478"  [label="CFG: "];
"1000478" -> "1001021"  [label="DDG: s->tlsext_scts"];
"1000478" -> "1001021"  [label="DDG: s->tlsext_scts != NULL"];
"1000478" -> "1001021"  [label="DDG: NULL"];
"1000478" -> "1000283"  [label="DDG: NULL"];
"1000478" -> "1000348"  [label="DDG: NULL"];
"1000478" -> "1000471"  [label="DDG: NULL"];
"1000488" -> "1000478"  [label="DDG: s->tlsext_scts"];
"1000706" -> "1000478"  [label="DDG: NULL"];
"1000348" -> "1000478"  [label="DDG: NULL"];
"1000471" -> "1000478"  [label="DDG: NULL"];
"1000283" -> "1000478"  [label="DDG: NULL"];
"1000607" -> "1000478"  [label="DDG: NULL"];
"1000478" -> "1000484"  [label="DDG: s->tlsext_scts"];
"1000478" -> "1000488"  [label="DDG: NULL"];
"1000478" -> "1000547"  [label="DDG: NULL"];
"1000478" -> "1000706"  [label="DDG: NULL"];
"1000478" -> "1000918"  [label="DDG: NULL"];
"1000488" -> "1000483"  [label="AST: "];
"1000488" -> "1000492"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000492" -> "1000488"  [label="AST: "];
"1000495" -> "1000488"  [label="CFG: "];
"1000488" -> "1001021"  [label="DDG: s->tlsext_scts"];
"1000488" -> "1001021"  [label="DDG: NULL"];
"1000706" -> "1000705"  [label="AST: "];
"1000706" -> "1000712"  [label="CFG: "];
"1000707" -> "1000706"  [label="AST: "];
"1000712" -> "1000706"  [label="AST: "];
"1000716" -> "1000706"  [label="CFG: "];
"1000724" -> "1000706"  [label="CFG: "];
"1000706" -> "1001021"  [label="DDG: NULL"];
"1000706" -> "1001021"  [label="DDG: s->s3->alpn_selected == NULL"];
"1000706" -> "1001021"  [label="DDG: s->s3->alpn_selected"];
"1000706" -> "1000283"  [label="DDG: NULL"];
"1000706" -> "1000348"  [label="DDG: NULL"];
"1000706" -> "1000471"  [label="DDG: NULL"];
"1000706" -> "1000547"  [label="DDG: NULL"];
"1000697" -> "1000706"  [label="DDG: s->s3->alpn_selected"];
"1000348" -> "1000706"  [label="DDG: NULL"];
"1000471" -> "1000706"  [label="DDG: NULL"];
"1000283" -> "1000706"  [label="DDG: NULL"];
"1000607" -> "1000706"  [label="DDG: NULL"];
"1000706" -> "1000722"  [label="DDG: s->s3->alpn_selected"];
"1000706" -> "1000918"  [label="DDG: NULL"];
"1000697" -> "1000642"  [label="AST: "];
"1000697" -> "1000703"  [label="CFG: "];
"1000698" -> "1000697"  [label="AST: "];
"1000703" -> "1000697"  [label="AST: "];
"1000709" -> "1000697"  [label="CFG: "];
"1000697" -> "1001021"  [label="DDG: OPENSSL_malloc(len)"];
"1000703" -> "1000697"  [label="DDG: len"];
"1000703" -> "1000704"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000703" -> "1001021"  [label="DDG: len"];
"1000667" -> "1000703"  [label="DDG: len"];
"1000722" -> "1000703"  [label="DDG: len"];
"1000703" -> "1000722"  [label="DDG: len"];
"1000667" -> "1000666"  [label="AST: "];
"1000667" -> "1000671"  [label="CFG: "];
"1000671" -> "1000667"  [label="AST: "];
"1000676" -> "1000667"  [label="CFG: "];
"1000666" -> "1000667"  [label="CFG: "];
"1000667" -> "1001021"  [label="DDG: PACKET_remaining(&spkt)"];
"1000667" -> "1001021"  [label="DDG: len"];
"1000667" -> "1000666"  [label="DDG: PACKET_remaining(&spkt)"];
"1000667" -> "1000666"  [label="DDG: len"];
"1000722" -> "1000667"  [label="DDG: len"];
"1000722" -> "1000721"  [label="AST: "];
"1000722" -> "1000730"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000725" -> "1000722"  [label="AST: "];
"1000730" -> "1000722"  [label="AST: "];
"1000721" -> "1000722"  [label="CFG: "];
"1000722" -> "1001021"  [label="DDG: len"];
"1000722" -> "1001021"  [label="DDG: s->s3->alpn_selected"];
"1000722" -> "1001021"  [label="DDG: &spkt"];
"1000722" -> "1000691"  [label="DDG: s->s3->alpn_selected"];
"1000722" -> "1000721"  [label="DDG: &spkt"];
"1000722" -> "1000721"  [label="DDG: s->s3->alpn_selected"];
"1000722" -> "1000721"  [label="DDG: len"];
"1000722" -> "1000738"  [label="DDG: len"];
"1000348" -> "1000347"  [label="AST: "];
"1000348" -> "1000357"  [label="CFG: "];
"1000357" -> "1000348"  [label="AST: "];
"1000361" -> "1000348"  [label="CFG: "];
"1000368" -> "1000348"  [label="CFG: "];
"1000348" -> "1001021"  [label="DDG: NULL"];
"1000348" -> "1001021"  [label="DDG: (s->session->tlsext_ecpointformatlist =\n                     OPENSSL_malloc(ecpointformatlist_length)) == NULL"];
"1000348" -> "1000283"  [label="DDG: NULL"];
"1000471" -> "1000348"  [label="DDG: NULL"];
"1000283" -> "1000348"  [label="DDG: NULL"];
"1000607" -> "1000348"  [label="DDG: NULL"];
"1000348" -> "1000471"  [label="DDG: NULL"];
"1000348" -> "1000547"  [label="DDG: NULL"];
"1000348" -> "1000918"  [label="DDG: NULL"];
"1000471" -> "1000467"  [label="AST: "];
"1000471" -> "1000475"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000475" -> "1000471"  [label="AST: "];
"1000467" -> "1000471"  [label="CFG: "];
"1000471" -> "1001021"  [label="DDG: s->ct_validation_callback"];
"1000471" -> "1001021"  [label="DDG: NULL"];
"1000471" -> "1000283"  [label="DDG: NULL"];
"1000471" -> "1000467"  [label="DDG: s->ct_validation_callback"];
"1000471" -> "1000467"  [label="DDG: NULL"];
"1000283" -> "1000471"  [label="DDG: NULL"];
"1000607" -> "1000471"  [label="DDG: NULL"];
"1000471" -> "1000547"  [label="DDG: NULL"];
"1000471" -> "1000918"  [label="DDG: NULL"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000287"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="AST: "];
"1000289" -> "1000283"  [label="CFG: "];
"1000282" -> "1000283"  [label="CFG: "];
"1000283" -> "1001021"  [label="DDG: s->tlsext_hostname"];
"1000283" -> "1001021"  [label="DDG: NULL"];
"1000283" -> "1000282"  [label="DDG: s->tlsext_hostname"];
"1000283" -> "1000282"  [label="DDG: NULL"];
"1000607" -> "1000283"  [label="DDG: NULL"];
"1000283" -> "1000547"  [label="DDG: NULL"];
"1000283" -> "1000918"  [label="DDG: NULL"];
"1000283" -> "1000932"  [label="DDG: s->tlsext_hostname"];
"1000607" -> "1000606"  [label="AST: "];
"1000607" -> "1000611"  [label="CFG: "];
"1000608" -> "1000607"  [label="AST: "];
"1000611" -> "1000607"  [label="AST: "];
"1000615" -> "1000607"  [label="CFG: "];
"1000621" -> "1000607"  [label="CFG: "];
"1000607" -> "1001021"  [label="DDG: s->next_proto_negotiated == NULL"];
"1000607" -> "1001021"  [label="DDG: s->next_proto_negotiated"];
"1000607" -> "1001021"  [label="DDG: NULL"];
"1000607" -> "1000547"  [label="DDG: NULL"];
"1000600" -> "1000607"  [label="DDG: s->next_proto_negotiated"];
"1000547" -> "1000607"  [label="DDG: NULL"];
"1000607" -> "1000619"  [label="DDG: s->next_proto_negotiated"];
"1000607" -> "1000918"  [label="DDG: NULL"];
"1000600" -> "1000543"  [label="AST: "];
"1000600" -> "1000604"  [label="CFG: "];
"1000601" -> "1000600"  [label="AST: "];
"1000604" -> "1000600"  [label="AST: "];
"1000609" -> "1000600"  [label="CFG: "];
"1000600" -> "1001021"  [label="DDG: OPENSSL_malloc(selected_len)"];
"1000604" -> "1000600"  [label="DDG: selected_len"];
"1000604" -> "1000605"  [label="CFG: "];
"1000605" -> "1000604"  [label="AST: "];
"1000604" -> "1001021"  [label="DDG: selected_len"];
"1000619" -> "1000604"  [label="DDG: selected_len"];
"1000604" -> "1000619"  [label="DDG: selected_len"];
"1000619" -> "1000543"  [label="AST: "];
"1000619" -> "1000624"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000623" -> "1000619"  [label="AST: "];
"1000624" -> "1000619"  [label="AST: "];
"1000627" -> "1000619"  [label="CFG: "];
"1000619" -> "1001021"  [label="DDG: selected"];
"1000619" -> "1001021"  [label="DDG: memcpy(s->next_proto_negotiated, selected, selected_len)"];
"1000619" -> "1001021"  [label="DDG: s->next_proto_negotiated"];
"1000619" -> "1000596"  [label="DDG: s->next_proto_negotiated"];
"1000619" -> "1000625"  [label="DDG: selected_len"];
"1000547" -> "1000546"  [label="AST: "];
"1000547" -> "1000553"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000553" -> "1000547"  [label="AST: "];
"1000557" -> "1000547"  [label="CFG: "];
"1000565" -> "1000547"  [label="CFG: "];
"1000547" -> "1001021"  [label="DDG: s->ctx->next_proto_select_cb"];
"1000547" -> "1001021"  [label="DDG: NULL"];
"1000547" -> "1001021"  [label="DDG: s->ctx->next_proto_select_cb == NULL"];
"1000118" -> "1000115"  [label="AST: "];
"1000118" -> "1001021"  [label="DDG: al"];
"1000854" -> "1000853"  [label="AST: "];
"1000854" -> "1000856"  [label="CFG: "];
"1000855" -> "1000854"  [label="AST: "];
"1000856" -> "1000854"  [label="AST: "];
"1000861" -> "1000854"  [label="CFG: "];
"1000881" -> "1000854"  [label="CFG: "];
"1000854" -> "1001021"  [label="DDG: type"];
"1000854" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_extended_master_secret"];
"1000854" -> "1001021"  [label="DDG: TLSEXT_TYPE_extended_master_secret"];
"1000854" -> "1000251"  [label="DDG: type"];
"1000817" -> "1000854"  [label="DDG: type"];
"1000817" -> "1000816"  [label="AST: "];
"1000817" -> "1000819"  [label="CFG: "];
"1000818" -> "1000817"  [label="AST: "];
"1000819" -> "1000817"  [label="AST: "];
"1000828" -> "1000817"  [label="CFG: "];
"1000855" -> "1000817"  [label="CFG: "];
"1000817" -> "1001021"  [label="DDG: type"];
"1000817" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_encrypt_then_mac"];
"1000817" -> "1001021"  [label="DDG: TLSEXT_TYPE_encrypt_then_mac"];
"1000817" -> "1000251"  [label="DDG: type"];
"1000750" -> "1000817"  [label="DDG: type"];
"1000639" -> "1000817"  [label="DDG: type"];
"1000803" -> "1000817"  [label="DDG: type"];
"1000750" -> "1000747"  [label="AST: "];
"1000750" -> "1000752"  [label="CFG: "];
"1000751" -> "1000750"  [label="AST: "];
"1000752" -> "1000750"  [label="AST: "];
"1000747" -> "1000750"  [label="CFG: "];
"1000750" -> "1001021"  [label="DDG: type"];
"1000750" -> "1001021"  [label="DDG: TLSEXT_TYPE_heartbeat"];
"1000750" -> "1000251"  [label="DDG: type"];
"1000750" -> "1000747"  [label="DDG: type"];
"1000750" -> "1000747"  [label="DDG: TLSEXT_TYPE_heartbeat"];
"1000639" -> "1000750"  [label="DDG: type"];
"1000750" -> "1000803"  [label="DDG: type"];
"1000639" -> "1000638"  [label="AST: "];
"1000639" -> "1000641"  [label="CFG: "];
"1000640" -> "1000639"  [label="AST: "];
"1000641" -> "1000639"  [label="AST: "];
"1000648" -> "1000639"  [label="CFG: "];
"1000749" -> "1000639"  [label="CFG: "];
"1000639" -> "1001021"  [label="DDG: TLSEXT_TYPE_application_layer_protocol_negotiation"];
"1000639" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_application_layer_protocol_negotiation"];
"1000639" -> "1001021"  [label="DDG: type"];
"1000639" -> "1000251"  [label="DDG: type"];
"1000531" -> "1000639"  [label="DDG: type"];
"1000639" -> "1000803"  [label="DDG: type"];
"1000531" -> "1000530"  [label="AST: "];
"1000531" -> "1000533"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000533" -> "1000531"  [label="AST: "];
"1000538" -> "1000531"  [label="CFG: "];
"1000530" -> "1000531"  [label="CFG: "];
"1000531" -> "1001021"  [label="DDG: TLSEXT_TYPE_next_proto_neg"];
"1000531" -> "1001021"  [label="DDG: type"];
"1000531" -> "1000251"  [label="DDG: type"];
"1000531" -> "1000530"  [label="DDG: type"];
"1000531" -> "1000530"  [label="DDG: TLSEXT_TYPE_next_proto_neg"];
"1000468" -> "1000531"  [label="DDG: type"];
"1000468" -> "1000467"  [label="AST: "];
"1000468" -> "1000470"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000470" -> "1000468"  [label="AST: "];
"1000473" -> "1000468"  [label="CFG: "];
"1000467" -> "1000468"  [label="CFG: "];
"1000468" -> "1001021"  [label="DDG: type"];
"1000468" -> "1001021"  [label="DDG: TLSEXT_TYPE_signed_certificate_timestamp"];
"1000468" -> "1000251"  [label="DDG: type"];
"1000468" -> "1000467"  [label="DDG: type"];
"1000468" -> "1000467"  [label="DDG: TLSEXT_TYPE_signed_certificate_timestamp"];
"1000438" -> "1000468"  [label="DDG: type"];
"1000438" -> "1000437"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000439" -> "1000438"  [label="AST: "];
"1000440" -> "1000438"  [label="AST: "];
"1000446" -> "1000438"  [label="CFG: "];
"1000469" -> "1000438"  [label="CFG: "];
"1000438" -> "1001021"  [label="DDG: TLSEXT_TYPE_status_request"];
"1000438" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_status_request"];
"1000438" -> "1001021"  [label="DDG: type"];
"1000438" -> "1000251"  [label="DDG: type"];
"1000392" -> "1000438"  [label="DDG: type"];
"1000392" -> "1000391"  [label="AST: "];
"1000392" -> "1000394"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000394" -> "1000392"  [label="AST: "];
"1000399" -> "1000392"  [label="CFG: "];
"1000439" -> "1000392"  [label="CFG: "];
"1000392" -> "1001021"  [label="DDG: TLSEXT_TYPE_session_ticket"];
"1000392" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_session_ticket"];
"1000392" -> "1001021"  [label="DDG: type"];
"1000392" -> "1000251"  [label="DDG: type"];
"1000303" -> "1000392"  [label="DDG: type"];
"1000303" -> "1000302"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000313" -> "1000303"  [label="CFG: "];
"1000393" -> "1000303"  [label="CFG: "];
"1000303" -> "1001021"  [label="DDG: type"];
"1000303" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_ec_point_formats"];
"1000303" -> "1001021"  [label="DDG: TLSEXT_TYPE_ec_point_formats"];
"1000303" -> "1000251"  [label="DDG: type"];
"1000277" -> "1000303"  [label="DDG: type"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000285" -> "1000277"  [label="CFG: "];
"1000304" -> "1000277"  [label="CFG: "];
"1000277" -> "1001021"  [label="DDG: type"];
"1000277" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_server_name"];
"1000277" -> "1001021"  [label="DDG: TLSEXT_TYPE_server_name"];
"1000277" -> "1000251"  [label="DDG: type"];
"1000251" -> "1000277"  [label="DDG: type"];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000258" -> "1000251"  [label="CFG: "];
"1000271" -> "1000251"  [label="CFG: "];
"1000251" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_renegotiate"];
"1000251" -> "1001021"  [label="DDG: TLSEXT_TYPE_renegotiate"];
"1000251" -> "1001021"  [label="DDG: type"];
"1000803" -> "1000251"  [label="DDG: type"];
"1000803" -> "1000800"  [label="AST: "];
"1000803" -> "1000805"  [label="CFG: "];
"1000804" -> "1000803"  [label="AST: "];
"1000805" -> "1000803"  [label="AST: "];
"1000800" -> "1000803"  [label="CFG: "];
"1000803" -> "1001021"  [label="DDG: TLSEXT_TYPE_use_srtp"];
"1000803" -> "1001021"  [label="DDG: type"];
"1000803" -> "1000800"  [label="DDG: type"];
"1000803" -> "1000800"  [label="DDG: TLSEXT_TYPE_use_srtp"];
"1000757" -> "1000756"  [label="AST: "];
"1000757" -> "1000760"  [label="CFG: "];
"1000758" -> "1000757"  [label="AST: "];
"1000760" -> "1000757"  [label="AST: "];
"1000756" -> "1000757"  [label="CFG: "];
"1000757" -> "1001021"  [label="DDG: &spkt"];
"1000757" -> "1001021"  [label="DDG: &hbtype"];
"1000757" -> "1000756"  [label="DDG: &spkt"];
"1000757" -> "1000756"  [label="DDG: &hbtype"];
"1000563" -> "1000562"  [label="AST: "];
"1000563" -> "1000564"  [label="CFG: "];
"1000564" -> "1000563"  [label="AST: "];
"1000562" -> "1000563"  [label="CFG: "];
"1000563" -> "1001021"  [label="DDG: &spkt"];
"1000563" -> "1000562"  [label="DDG: &spkt"];
"1000288" -> "1000282"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000282" -> "1000288"  [label="CFG: "];
"1000288" -> "1001021"  [label="DDG: size"];
"1000288" -> "1000282"  [label="DDG: size"];
"1000288" -> "1000282"  [label="DDG: 0"];
"1000421" -> "1000417"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000417" -> "1000421"  [label="CFG: "];
"1000421" -> "1001021"  [label="DDG: size"];
"1000421" -> "1000417"  [label="DDG: size"];
"1000421" -> "1000417"  [label="DDG: 0"];
"1000450" -> "1000443"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000451" -> "1000450"  [label="AST: "];
"1000452" -> "1000450"  [label="AST: "];
"1000443" -> "1000450"  [label="CFG: "];
"1000450" -> "1001021"  [label="DDG: size"];
"1000450" -> "1000443"  [label="DDG: size"];
"1000450" -> "1000443"  [label="DDG: 0"];
"1000672" -> "1000666"  [label="AST: "];
"1000672" -> "1000673"  [label="CFG: "];
"1000673" -> "1000672"  [label="AST: "];
"1000666" -> "1000672"  [label="CFG: "];
"1000672" -> "1001021"  [label="DDG: !PACKET_get_1(&spkt, &len)"];
"1000672" -> "1000666"  [label="DDG: PACKET_remaining(&spkt) != len"];
"1000672" -> "1000666"  [label="DDG: !PACKET_get_1(&spkt, &len)"];
"1000673" -> "1000672"  [label="DDG: PACKET_get_1(&spkt, &len)"];
"1000666" -> "1000672"  [label="DDG: PACKET_remaining(&spkt) != len"];
"1000666" -> "1000659"  [label="AST: "];
"1000659" -> "1000666"  [label="CFG: "];
"1000666" -> "1001021"  [label="DDG: !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len"];
"1000666" -> "1001021"  [label="DDG: PACKET_remaining(&spkt) != len"];
"1000666" -> "1000659"  [label="DDG: PACKET_remaining(&spkt) != len"];
"1000666" -> "1000659"  [label="DDG: !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len"];
"1000659" -> "1000658"  [label="AST: "];
"1000659" -> "1000660"  [label="CFG: "];
"1000660" -> "1000659"  [label="AST: "];
"1000687" -> "1000659"  [label="CFG: "];
"1000694" -> "1000659"  [label="CFG: "];
"1000659" -> "1001021"  [label="DDG: !PACKET_get_net_2(&spkt, &len)"];
"1000659" -> "1001021"  [label="DDG: PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len"];
"1000659" -> "1001021"  [label="DDG: !PACKET_get_net_2(&spkt, &len)\n                || PACKET_remaining(&spkt) != len || !PACKET_get_1(&spkt, &len)\n                || PACKET_remaining(&spkt) != len"];
"1000660" -> "1000659"  [label="DDG: PACKET_get_net_2(&spkt, &len)"];
"1000282" -> "1000281"  [label="AST: "];
"1000294" -> "1000282"  [label="CFG: "];
"1000299" -> "1000282"  [label="CFG: "];
"1000282" -> "1001021"  [label="DDG: s->tlsext_hostname == NULL || size > 0"];
"1000282" -> "1001021"  [label="DDG: size > 0"];
"1000282" -> "1001021"  [label="DDG: s->tlsext_hostname == NULL"];
"1000443" -> "1000282"  [label="DDG: size > 0"];
"1000417" -> "1000282"  [label="DDG: size > 0"];
"1000282" -> "1000417"  [label="DDG: size > 0"];
"1000282" -> "1000443"  [label="DDG: size > 0"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000418"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000427" -> "1000417"  [label="CFG: "];
"1000433" -> "1000417"  [label="CFG: "];
"1000417" -> "1001021"  [label="DDG: !tls_use_ticket(s)"];
"1000417" -> "1001021"  [label="DDG: !tls_use_ticket(s) || (size > 0)"];
"1000417" -> "1001021"  [label="DDG: size > 0"];
"1000418" -> "1000417"  [label="DDG: tls_use_ticket(s)"];
"1000443" -> "1000417"  [label="DDG: size > 0"];
"1000417" -> "1000443"  [label="DDG: size > 0"];
"1000443" -> "1000442"  [label="AST: "];
"1000443" -> "1000444"  [label="CFG: "];
"1000444" -> "1000443"  [label="AST: "];
"1000456" -> "1000443"  [label="CFG: "];
"1000462" -> "1000443"  [label="CFG: "];
"1000443" -> "1001021"  [label="DDG: (s->tlsext_status_type == -1) || (size > 0)"];
"1000443" -> "1001021"  [label="DDG: size > 0"];
"1000443" -> "1001021"  [label="DDG: s->tlsext_status_type == -1"];
"1000444" -> "1000443"  [label="DDG: s->tlsext_status_type"];
"1000444" -> "1000443"  [label="DDG: -1"];
"1000467" -> "1000466"  [label="AST: "];
"1000480" -> "1000467"  [label="CFG: "];
"1000532" -> "1000467"  [label="CFG: "];
"1000467" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_signed_certificate_timestamp"];
"1000467" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_signed_certificate_timestamp &&\n                 s->ct_validation_callback != NULL"];
"1000467" -> "1001021"  [label="DDG: s->ct_validation_callback != NULL"];
"1000484" -> "1000483"  [label="AST: "];
"1000484" -> "1000485"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000490" -> "1000484"  [label="CFG: "];
"1000484" -> "1001021"  [label="DDG: OPENSSL_free(s->tlsext_scts)"];
"1000209" -> "1000208"  [label="AST: "];
"1000225" -> "1000209"  [label="CFG: "];
"1000893" -> "1000209"  [label="CFG: "];
"1000209" -> "1001021"  [label="DDG: PACKET_get_net_2(pkt, &type) && PACKET_get_net_2(pkt, &size)"];
"1000209" -> "1001021"  [label="DDG: PACKET_get_net_2(pkt, &type)"];
"1000209" -> "1001021"  [label="DDG: PACKET_get_net_2(pkt, &size)"];
"1000892" -> "1000891"  [label="AST: "];
"1000892" -> "1000893"  [label="CFG: "];
"1000893" -> "1000892"  [label="AST: "];
"1000894" -> "1000892"  [label="CFG: "];
"1000892" -> "1001021"  [label="DDG: pkt"];
"1000892" -> "1000891"  [label="DDG: pkt"];
"1000891" -> "1000890"  [label="AST: "];
"1000891" -> "1000894"  [label="CFG: "];
"1000894" -> "1000891"  [label="AST: "];
"1000898" -> "1000891"  [label="CFG: "];
"1000906" -> "1000891"  [label="CFG: "];
"1000891" -> "1001021"  [label="DDG: PACKET_remaining(pkt) != 0"];
"1000891" -> "1001021"  [label="DDG: PACKET_remaining(pkt)"];
"1000223" -> "1000222"  [label="AST: "];
"1000232" -> "1000223"  [label="CFG: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1001021"  [label="DDG: PACKET_get_sub_packet(pkt, &spkt, size)"];
"1000223" -> "1000222"  [label="DDG: PACKET_get_sub_packet(pkt, &spkt, size)"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000229"  [label="CFG: "];
"1000229" -> "1000222"  [label="AST: "];
"1000236" -> "1000222"  [label="CFG: "];
"1000239" -> "1000222"  [label="CFG: "];
"1000222" -> "1001021"  [label="DDG: !PACKET_get_sub_packet(pkt, &spkt, size)"];
"1000222" -> "1001021"  [label="DDG: !PACKET_peek_bytes(&spkt, &data, size)"];
"1000222" -> "1001021"  [label="DDG: !PACKET_get_sub_packet(pkt, &spkt, size)\n            || !PACKET_peek_bytes(&spkt, &data, size)"];
"1000229" -> "1000222"  [label="DDG: PACKET_peek_bytes(&spkt, &data, size)"];
"1000229" -> "1001021"  [label="DDG: PACKET_peek_bytes(&spkt, &data, size)"];
"1000530" -> "1000529"  [label="AST: "];
"1000530" -> "1000534"  [label="CFG: "];
"1000534" -> "1000530"  [label="AST: "];
"1000550" -> "1000530"  [label="CFG: "];
"1000640" -> "1000530"  [label="CFG: "];
"1000530" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_next_proto_neg"];
"1000530" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_next_proto_neg &&\n                 s->s3->tmp.finish_md_len == 0"];
"1000530" -> "1001021"  [label="DDG: s->s3->tmp.finish_md_len == 0"];
"1000534" -> "1000530"  [label="DDG: s->s3->tmp.finish_md_len"];
"1000534" -> "1000530"  [label="DDG: 0"];
"1000747" -> "1000746"  [label="AST: "];
"1000759" -> "1000747"  [label="CFG: "];
"1000802" -> "1000747"  [label="CFG: "];
"1000747" -> "1001021"  [label="DDG: SSL_IS_DTLS(s)"];
"1000747" -> "1001021"  [label="DDG: SSL_IS_DTLS(s) && type == TLSEXT_TYPE_heartbeat"];
"1000747" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_heartbeat"];
"1000800" -> "1000799"  [label="AST: "];
"1000809" -> "1000800"  [label="CFG: "];
"1000818" -> "1000800"  [label="CFG: "];
"1000800" -> "1001021"  [label="DDG: type == TLSEXT_TYPE_use_srtp"];
"1000800" -> "1001021"  [label="DDG: SSL_IS_DTLS(s) && type == TLSEXT_TYPE_use_srtp"];
"1000800" -> "1001021"  [label="DDG: SSL_IS_DTLS(s)"];
"1000256" -> "1000255"  [label="AST: "];
"1000263" -> "1000256"  [label="CFG: "];
"1000265" -> "1000256"  [label="CFG: "];
"1000256" -> "1001021"  [label="DDG: ssl_parse_serverhello_renegotiate_ext(s, &spkt, al)"];
"1000256" -> "1001021"  [label="DDG: !ssl_parse_serverhello_renegotiate_ext(s, &spkt, al)"];
"1000401" -> "1000397"  [label="AST: "];
"1000397" -> "1000401"  [label="CFG: "];
"1000401" -> "1001021"  [label="DDG: s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000401" -> "1000397"  [label="DDG: s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000398"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000412" -> "1000397"  [label="CFG: "];
"1000420" -> "1000397"  [label="CFG: "];
"1000397" -> "1001021"  [label="DDG: s->tls_session_ticket_ext_cb &&\n                !s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000397" -> "1001021"  [label="DDG: s->tls_session_ticket_ext_cb"];
"1000397" -> "1001021"  [label="DDG: !s->tls_session_ticket_ext_cb(s, data, size,\n                                              s->tls_session_ticket_ext_cb_arg)"];
"1000422" -> "1000418"  [label="CFG: "];
"1000418" -> "1001021"  [label="DDG: tls_use_ticket(s)"];
"1000574" -> "1000573"  [label="AST: "];
"1000574" -> "1000588"  [label="CFG: "];
"1000588" -> "1000574"  [label="AST: "];
"1000592" -> "1000574"  [label="CFG: "];
"1000598" -> "1000574"  [label="CFG: "];
"1000574" -> "1001021"  [label="DDG: s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg)"];
"1000574" -> "1001021"  [label="DDG: SSL_TLSEXT_ERR_OK"];
"1000574" -> "1001021"  [label="DDG: s->ctx->next_proto_select_cb(s, &selected, &selected_len, data,\n                                             size,\n                                             s->\n                                             ctx->next_proto_select_cb_arg) !=\n                SSL_TLSEXT_ERR_OK"];
"1000879" -> "1000878"  [label="AST: "];
"1000879" -> "1000887"  [label="CFG: "];
"1000887" -> "1000879"  [label="AST: "];
"1000211" -> "1000879"  [label="CFG: "];
"1000889" -> "1000879"  [label="CFG: "];
"1000879" -> "1001021"  [label="DDG: custom_ext_parse(s, 0, type, data, size, al) <= 0"];
"1000879" -> "1001021"  [label="DDG: custom_ext_parse(s, 0, type, data, size, al)"];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000324" -> "1000309"  [label="CFG: "];
"1000331" -> "1000309"  [label="CFG: "];
"1000309" -> "1001021"  [label="DDG: !PACKET_get_1(&spkt, &ecpointformatlist_length)"];
"1000309" -> "1001021"  [label="DDG: !PACKET_get_1(&spkt, &ecpointformatlist_length)\n                || ecpointformatlist_length != size - 1"];
"1000309" -> "1001021"  [label="DDG: ecpointformatlist_length != size - 1"];
"1000310" -> "1000309"  [label="DDG: PACKET_get_1(&spkt, &ecpointformatlist_length)"];
"1000341" -> "1000333"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000352" -> "1000341"  [label="CFG: "];
"1000341" -> "1001021"  [label="DDG: OPENSSL_free(s->session->tlsext_ecpointformatlist)"];
"1000373" -> "1000372"  [label="AST: "];
"1000211" -> "1000373"  [label="CFG: "];
"1000386" -> "1000373"  [label="CFG: "];
"1000373" -> "1001021"  [label="DDG: !PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length)"];
"1000373" -> "1001021"  [label="DDG: PACKET_copy_bytes(&spkt,\n                                       s->session->tlsext_ecpointformatlist,\n                                       ecpointformatlist_length)"];
"1000365" -> "1000333"  [label="AST: "];
"1000365" -> "1000371"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000371" -> "1000365"  [label="AST: "];
"1000376" -> "1000365"  [label="CFG: "];
"1000365" -> "1001021"  [label="DDG: s->session->tlsext_ecpointformatlist_length"];
"1000493" -> "1000476"  [label="AST: "];
"1000493" -> "1000497"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000497" -> "1000493"  [label="AST: "];
"1000500" -> "1000493"  [label="CFG: "];
"1000493" -> "1001021"  [label="DDG: s->tlsext_scts_len"];
"1000317" -> "1000310"  [label="CFG: "];
"1000310" -> "1001021"  [label="DDG: PACKET_get_1(&spkt, &ecpointformatlist_length)"];
"1000562" -> "1000561"  [label="AST: "];
"1000569" -> "1000562"  [label="CFG: "];
"1000576" -> "1000562"  [label="CFG: "];
"1000562" -> "1001021"  [label="DDG: ssl_next_proto_validate(&spkt)"];
"1000562" -> "1001021"  [label="DDG: !ssl_next_proto_validate(&spkt)"];
"1000670" -> "1000660"  [label="CFG: "];
"1000660" -> "1001021"  [label="DDG: PACKET_get_net_2(&spkt, &len)"];
"1000682" -> "1000673"  [label="CFG: "];
"1000673" -> "1001021"  [label="DDG: PACKET_get_1(&spkt, &len)"];
"1000691" -> "1000642"  [label="AST: "];
"1000691" -> "1000692"  [label="CFG: "];
"1000692" -> "1000691"  [label="AST: "];
"1000700" -> "1000691"  [label="CFG: "];
"1000691" -> "1001021"  [label="DDG: OPENSSL_free(s->s3->alpn_selected)"];
"1000149" -> "1000691"  [label="DDG: s->s3->alpn_selected"];
"1000721" -> "1000720"  [label="AST: "];
"1000734" -> "1000721"  [label="CFG: "];
"1000741" -> "1000721"  [label="CFG: "];
"1000721" -> "1001021"  [label="DDG: !PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len)"];
"1000721" -> "1001021"  [label="DDG: PACKET_copy_bytes(&spkt, s->s3->alpn_selected, len)"];
"1000738" -> "1000642"  [label="AST: "];
"1000738" -> "1000744"  [label="CFG: "];
"1000739" -> "1000738"  [label="AST: "];
"1000744" -> "1000738"  [label="AST: "];
"1000211" -> "1000738"  [label="CFG: "];
"1000738" -> "1001021"  [label="DDG: len"];
"1000738" -> "1001021"  [label="DDG: s->s3->alpn_selected_len"];
"1000756" -> "1000755"  [label="AST: "];
"1000765" -> "1000756"  [label="CFG: "];
"1000770" -> "1000756"  [label="CFG: "];
"1000756" -> "1001021"  [label="DDG: PACKET_get_1(&spkt, &hbtype)"];
"1000756" -> "1001021"  [label="DDG: !PACKET_get_1(&spkt, &hbtype)"];
"1000596" -> "1000543"  [label="AST: "];
"1000596" -> "1000597"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000602" -> "1000596"  [label="CFG: "];
"1000596" -> "1001021"  [label="DDG: OPENSSL_free(s->next_proto_negotiated)"];
"1000625" -> "1000543"  [label="AST: "];
"1000625" -> "1000629"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000629" -> "1000625"  [label="AST: "];
"1000633" -> "1000625"  [label="CFG: "];
"1000625" -> "1001021"  [label="DDG: selected_len"];
"1000625" -> "1001021"  [label="DDG: s->next_proto_negotiated_len"];
"1000918" -> "1000917"  [label="AST: "];
"1000918" -> "1000924"  [label="CFG: "];
"1000919" -> "1000918"  [label="AST: "];
"1000924" -> "1000918"  [label="AST: "];
"1000929" -> "1000918"  [label="CFG: "];
"1000954" -> "1000918"  [label="CFG: "];
"1000918" -> "1001021"  [label="DDG: s->session->tlsext_hostname == NULL"];
"1000918" -> "1001021"  [label="DDG: s->session->tlsext_hostname"];
"1000918" -> "1001021"  [label="DDG: NULL"];
"1000932" -> "1000926"  [label="AST: "];
"1000932" -> "1000933"  [label="CFG: "];
"1000933" -> "1000932"  [label="AST: "];
"1000926" -> "1000932"  [label="CFG: "];
"1000932" -> "1001021"  [label="DDG: s->tlsext_hostname"];
"1000932" -> "1000926"  [label="DDG: s->tlsext_hostname"];
"1000926" -> "1000925"  [label="AST: "];
"1000927" -> "1000926"  [label="AST: "];
"1000940" -> "1000926"  [label="CFG: "];
"1000926" -> "1001021"  [label="DDG: OPENSSL_strdup(s->tlsext_hostname)"];
"1000926" -> "1000937"  [label="DDG: s->session->tlsext_hostname"];
"1000937" -> "1000936"  [label="AST: "];
"1000937" -> "1000938"  [label="CFG: "];
"1000938" -> "1000937"  [label="AST: "];
"1000946" -> "1000937"  [label="CFG: "];
"1000958" -> "1000937"  [label="CFG: "];
"1000937" -> "1001021"  [label="DDG: !s->session->tlsext_hostname"];
"1000937" -> "1001021"  [label="DDG: s->session->tlsext_hostname"];
}
