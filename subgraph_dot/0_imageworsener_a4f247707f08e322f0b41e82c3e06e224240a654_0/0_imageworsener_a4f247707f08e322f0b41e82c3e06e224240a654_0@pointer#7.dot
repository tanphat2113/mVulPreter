digraph "0_imageworsener_a4f247707f08e322f0b41e82c3e06e224240a654_0@pointer" {
"1000540" [label="(Call,(iw_float32)outpix_tofree[i])"];
"1000508" [label="(Call,outpix_tofree && ctx->final_alpha32)"];
"1000540" [label="(Call,(iw_float32)outpix_tofree[i])"];
"1000257" [label="(Call,!outpix_tofree)"];
"1000246" [label="(Call,outpix_tofree = (iw_tmpsample*)iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000248" [label="(Call,(iw_tmpsample*)iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000250" [label="(Call,iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000237" [label="(Call,iw_malloc(ctx, num_in_pix * sizeof(iw_tmpsample)))"];
"1000231" [label="(Call,iw_bkgd_has_transparency(ctx))"];
"1000109" [label="(MethodParameterIn,struct iw_context *ctx)"];
"1000239" [label="(Call,num_in_pix * sizeof(iw_tmpsample))"];
"1000168" [label="(Call,num_in_pix = ctx->intermed_canvas_width)"];
"1000252" [label="(Call,num_out_pix * sizeof(iw_tmpsample))"];
"1000173" [label="(Call,num_out_pix = ctx->img2.width)"];
"1000524" [label="(Call,ctx->final_alpha32[((size_t)j)*ctx->img2.width+i] = (iw_float32)outpix_tofree[i])"];
"1000506" [label="(Call,is_alpha_channel && outpix_tofree && ctx->final_alpha32)"];
"1000722" [label="(Call,is_alpha_channel && bkgd_has_transparency)"];
"1000847" [label="(Call,iw_free(ctx,outpix_tofree))"];
"1000849" [label="(Identifier,outpix_tofree)"];
"1000439" [label="(Call,i<num_in_pix)"];
"1000509" [label="(Identifier,outpix_tofree)"];
"1000845" [label="(ControlStructure,if(outpix_tofree))"];
"1000175" [label="(Call,ctx->img2.width)"];
"1000250" [label="(Call,iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000721" [label="(ControlStructure,if(is_alpha_channel && bkgd_has_transparency))"];
"1000842" [label="(Call,iw_free(ctx,inpix_tofree))"];
"1000247" [label="(Identifier,outpix_tofree)"];
"1000258" [label="(Identifier,outpix_tofree)"];
"1000739" [label="(Identifier,ctx)"];
"1000246" [label="(Call,outpix_tofree = (iw_tmpsample*)iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000257" [label="(Call,!outpix_tofree)"];
"1000232" [label="(Identifier,ctx)"];
"1000523" [label="(Block,)"];
"1000522" [label="(Identifier,i)"];
"1000540" [label="(Call,(iw_float32)outpix_tofree[i])"];
"1000256" [label="(ControlStructure,if(!outpix_tofree))"];
"1000252" [label="(Call,num_out_pix * sizeof(iw_tmpsample))"];
"1000222" [label="(Call,is_alpha_channel = (int_ci->channeltype==IW_CHANNELTYPE_ALPHA))"];
"1000727" [label="(Identifier,tmpsamp)"];
"1000248" [label="(Call,(iw_tmpsample*)iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample)))"];
"1000109" [label="(MethodParameterIn,struct iw_context *ctx)"];
"1000518" [label="(Call,i<num_out_pix)"];
"1000505" [label="(ControlStructure,if(is_alpha_channel && outpix_tofree && ctx->final_alpha32))"];
"1000851" [label="(Identifier,retval)"];
"1000251" [label="(Identifier,ctx)"];
"1000751" [label="(Call,put_sample_convert_from_linear(ctx,tmpsamp,i,j,output_channel,out_csdescr))"];
"1000406" [label="(Call,iwpvt_resize_rows_init(ctx,rs,int_ci->channeltype,\n\t\t\tnum_in_pix, num_out_pix))"];
"1000468" [label="(Call,i<num_in_pix)"];
"1000743" [label="(Call,put_sample_convert_from_linear_flt(ctx,tmpsamp,i,j,output_channel,out_csdescr))"];
"1000722" [label="(Call,is_alpha_channel && bkgd_has_transparency)"];
"1000542" [label="(Call,outpix_tofree[i])"];
"1000169" [label="(Identifier,num_in_pix)"];
"1000848" [label="(Identifier,ctx)"];
"1000501" [label="(Call,clamp_output_samples(ctx,out_pix,num_out_pix))"];
"1000237" [label="(Call,iw_malloc(ctx, num_in_pix * sizeof(iw_tmpsample)))"];
"1000229" [label="(Call,bkgd_has_transparency = iw_bkgd_has_transparency(ctx))"];
"1000240" [label="(Identifier,num_in_pix)"];
"1000724" [label="(Identifier,bkgd_has_transparency)"];
"1000508" [label="(Call,outpix_tofree && ctx->final_alpha32)"];
"1000506" [label="(Call,is_alpha_channel && outpix_tofree && ctx->final_alpha32)"];
"1000112" [label="(Block,)"];
"1000168" [label="(Call,num_in_pix = ctx->intermed_canvas_width)"];
"1000847" [label="(Call,iw_free(ctx,outpix_tofree))"];
"1000235" [label="(Call,(iw_tmpsample*)iw_malloc(ctx, num_in_pix * sizeof(iw_tmpsample)))"];
"1000852" [label="(MethodReturn,static int)"];
"1000241" [label="(Call,sizeof(iw_tmpsample))"];
"1000269" [label="(Call,!is_alpha_channel)"];
"1000253" [label="(Identifier,num_out_pix)"];
"1000723" [label="(Identifier,is_alpha_channel)"];
"1000238" [label="(Identifier,ctx)"];
"1000507" [label="(Identifier,is_alpha_channel)"];
"1000525" [label="(Call,ctx->final_alpha32[((size_t)j)*ctx->img2.width+i])"];
"1000547" [label="(Identifier,output_channel)"];
"1000510" [label="(Call,ctx->final_alpha32)"];
"1000170" [label="(Call,ctx->intermed_canvas_width)"];
"1000261" [label="(Identifier,out_pix)"];
"1000260" [label="(Call,out_pix = outpix_tofree)"];
"1000524" [label="(Call,ctx->final_alpha32[((size_t)j)*ctx->img2.width+i] = (iw_float32)outpix_tofree[i])"];
"1000231" [label="(Call,iw_bkgd_has_transparency(ctx))"];
"1000174" [label="(Identifier,num_out_pix)"];
"1000173" [label="(Call,num_out_pix = ctx->img2.width)"];
"1000516" [label="(Identifier,i)"];
"1000259" [label="(ControlStructure,goto done;)"];
"1000239" [label="(Call,num_in_pix * sizeof(iw_tmpsample))"];
"1000181" [label="(Identifier,int_ci)"];
"1000254" [label="(Call,sizeof(iw_tmpsample))"];
"1000540" -> "1000524"  [label="AST: "];
"1000540" -> "1000542"  [label="CFG: "];
"1000541" -> "1000540"  [label="AST: "];
"1000542" -> "1000540"  [label="AST: "];
"1000524" -> "1000540"  [label="CFG: "];
"1000540" -> "1000852"  [label="DDG: outpix_tofree[i]"];
"1000540" -> "1000508"  [label="DDG: outpix_tofree[i]"];
"1000540" -> "1000524"  [label="DDG: outpix_tofree[i]"];
"1000508" -> "1000540"  [label="DDG: outpix_tofree"];
"1000257" -> "1000540"  [label="DDG: outpix_tofree"];
"1000540" -> "1000847"  [label="DDG: outpix_tofree[i]"];
"1000508" -> "1000506"  [label="AST: "];
"1000508" -> "1000509"  [label="CFG: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000510" -> "1000508"  [label="AST: "];
"1000506" -> "1000508"  [label="CFG: "];
"1000508" -> "1000852"  [label="DDG: outpix_tofree"];
"1000508" -> "1000852"  [label="DDG: ctx->final_alpha32"];
"1000508" -> "1000506"  [label="DDG: outpix_tofree"];
"1000508" -> "1000506"  [label="DDG: ctx->final_alpha32"];
"1000257" -> "1000508"  [label="DDG: outpix_tofree"];
"1000524" -> "1000508"  [label="DDG: ctx->final_alpha32[((size_t)j)*ctx->img2.width+i]"];
"1000508" -> "1000847"  [label="DDG: outpix_tofree"];
"1000257" -> "1000256"  [label="AST: "];
"1000257" -> "1000258"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="CFG: "];
"1000261" -> "1000257"  [label="CFG: "];
"1000257" -> "1000852"  [label="DDG: outpix_tofree"];
"1000257" -> "1000852"  [label="DDG: !outpix_tofree"];
"1000246" -> "1000257"  [label="DDG: outpix_tofree"];
"1000257" -> "1000260"  [label="DDG: outpix_tofree"];
"1000257" -> "1000847"  [label="DDG: outpix_tofree"];
"1000246" -> "1000112"  [label="AST: "];
"1000246" -> "1000248"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000258" -> "1000246"  [label="CFG: "];
"1000246" -> "1000852"  [label="DDG: (iw_tmpsample*)iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample))"];
"1000248" -> "1000246"  [label="DDG: iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample))"];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000248" -> "1000852"  [label="DDG: iw_malloc(ctx, num_out_pix * sizeof(iw_tmpsample))"];
"1000250" -> "1000248"  [label="DDG: ctx"];
"1000250" -> "1000248"  [label="DDG: num_out_pix * sizeof(iw_tmpsample)"];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000250" -> "1000852"  [label="DDG: ctx"];
"1000250" -> "1000852"  [label="DDG: num_out_pix * sizeof(iw_tmpsample)"];
"1000237" -> "1000250"  [label="DDG: ctx"];
"1000109" -> "1000250"  [label="DDG: ctx"];
"1000252" -> "1000250"  [label="DDG: num_out_pix"];
"1000250" -> "1000406"  [label="DDG: ctx"];
"1000250" -> "1000501"  [label="DDG: ctx"];
"1000250" -> "1000743"  [label="DDG: ctx"];
"1000250" -> "1000751"  [label="DDG: ctx"];
"1000250" -> "1000842"  [label="DDG: ctx"];
"1000250" -> "1000847"  [label="DDG: ctx"];
"1000237" -> "1000235"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000239" -> "1000237"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000237" -> "1000852"  [label="DDG: num_in_pix * sizeof(iw_tmpsample)"];
"1000237" -> "1000235"  [label="DDG: ctx"];
"1000237" -> "1000235"  [label="DDG: num_in_pix * sizeof(iw_tmpsample)"];
"1000231" -> "1000237"  [label="DDG: ctx"];
"1000109" -> "1000237"  [label="DDG: ctx"];
"1000239" -> "1000237"  [label="DDG: num_in_pix"];
"1000231" -> "1000229"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000231" -> "1000229"  [label="DDG: ctx"];
"1000109" -> "1000231"  [label="DDG: ctx"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000852"  [label="DDG: ctx"];
"1000109" -> "1000406"  [label="DDG: ctx"];
"1000109" -> "1000501"  [label="DDG: ctx"];
"1000109" -> "1000743"  [label="DDG: ctx"];
"1000109" -> "1000751"  [label="DDG: ctx"];
"1000109" -> "1000842"  [label="DDG: ctx"];
"1000109" -> "1000847"  [label="DDG: ctx"];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000239" -> "1000852"  [label="DDG: num_in_pix"];
"1000168" -> "1000239"  [label="DDG: num_in_pix"];
"1000239" -> "1000406"  [label="DDG: num_in_pix"];
"1000239" -> "1000439"  [label="DDG: num_in_pix"];
"1000239" -> "1000468"  [label="DDG: num_in_pix"];
"1000168" -> "1000112"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000174" -> "1000168"  [label="CFG: "];
"1000168" -> "1000852"  [label="DDG: ctx->intermed_canvas_width"];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000252" -> "1000852"  [label="DDG: num_out_pix"];
"1000173" -> "1000252"  [label="DDG: num_out_pix"];
"1000252" -> "1000406"  [label="DDG: num_out_pix"];
"1000252" -> "1000501"  [label="DDG: num_out_pix"];
"1000252" -> "1000518"  [label="DDG: num_out_pix"];
"1000173" -> "1000112"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000181" -> "1000173"  [label="CFG: "];
"1000173" -> "1000852"  [label="DDG: ctx->img2.width"];
"1000524" -> "1000523"  [label="AST: "];
"1000525" -> "1000524"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000524" -> "1000852"  [label="DDG: (iw_float32)outpix_tofree[i]"];
"1000524" -> "1000852"  [label="DDG: ctx->final_alpha32[((size_t)j)*ctx->img2.width+i]"];
"1000506" -> "1000505"  [label="AST: "];
"1000506" -> "1000507"  [label="CFG: "];
"1000507" -> "1000506"  [label="AST: "];
"1000516" -> "1000506"  [label="CFG: "];
"1000547" -> "1000506"  [label="CFG: "];
"1000506" -> "1000852"  [label="DDG: is_alpha_channel && outpix_tofree && ctx->final_alpha32"];
"1000506" -> "1000852"  [label="DDG: is_alpha_channel"];
"1000506" -> "1000852"  [label="DDG: outpix_tofree && ctx->final_alpha32"];
"1000222" -> "1000506"  [label="DDG: is_alpha_channel"];
"1000269" -> "1000506"  [label="DDG: is_alpha_channel"];
"1000722" -> "1000506"  [label="DDG: is_alpha_channel"];
"1000506" -> "1000722"  [label="DDG: is_alpha_channel"];
"1000722" -> "1000721"  [label="AST: "];
"1000722" -> "1000723"  [label="CFG: "];
"1000722" -> "1000724"  [label="CFG: "];
"1000723" -> "1000722"  [label="AST: "];
"1000724" -> "1000722"  [label="AST: "];
"1000727" -> "1000722"  [label="CFG: "];
"1000739" -> "1000722"  [label="CFG: "];
"1000722" -> "1000852"  [label="DDG: bkgd_has_transparency"];
"1000722" -> "1000852"  [label="DDG: is_alpha_channel && bkgd_has_transparency"];
"1000722" -> "1000852"  [label="DDG: is_alpha_channel"];
"1000229" -> "1000722"  [label="DDG: bkgd_has_transparency"];
"1000847" -> "1000845"  [label="AST: "];
"1000847" -> "1000849"  [label="CFG: "];
"1000848" -> "1000847"  [label="AST: "];
"1000849" -> "1000847"  [label="AST: "];
"1000851" -> "1000847"  [label="CFG: "];
"1000847" -> "1000852"  [label="DDG: outpix_tofree"];
"1000847" -> "1000852"  [label="DDG: ctx"];
"1000847" -> "1000852"  [label="DDG: iw_free(ctx,outpix_tofree)"];
"1000743" -> "1000847"  [label="DDG: ctx"];
"1000406" -> "1000847"  [label="DDG: ctx"];
"1000501" -> "1000847"  [label="DDG: ctx"];
"1000751" -> "1000847"  [label="DDG: ctx"];
"1000842" -> "1000847"  [label="DDG: ctx"];
}
