digraph "0_Chrome_f6ac1dba5e36f338a490752a2cbef3339096d9fe_4@pointer" {
"1000164" [label="(Call,std::swap(pixels[i], pixels[i + 2]))"];
"1000131" [label="(Call,gl_->ReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, pixels))"];
"1000102" [label="(MethodParameterIn,int width)"];
"1000103" [label="(MethodParameterIn,int height)"];
"1000101" [label="(MethodParameterIn,unsigned char* pixels)"];
"1000240" [label="(Call,pixels[i + 2] * pixels[i + 3] / 255)"];
"1000238" [label="(Call,std::min(255, pixels[i + 2] * pixels[i + 3] / 255))"];
"1000232" [label="(Call,pixels[i + 2] = std::min(255, pixels[i + 2] * pixels[i + 3] / 255))"];
"1000132" [label="(Literal,0)"];
"1000190" [label="(Call,pixels[i + 0] = std::min(255, pixels[i + 0] * pixels[i + 3] / 255))"];
"1000131" [label="(Call,gl_->ReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, pixels))"];
"1000238" [label="(Call,std::min(255, pixels[i + 2] * pixels[i + 3] / 255))"];
"1000161" [label="(Identifier,i)"];
"1000233" [label="(Call,pixels[i + 2])"];
"1000211" [label="(Call,pixels[i + 1] = std::min(255, pixels[i + 1] * pixels[i + 3] / 255))"];
"1000101" [label="(MethodParameterIn,unsigned char* pixels)"];
"1000187" [label="(Identifier,i)"];
"1000133" [label="(Literal,0)"];
"1000135" [label="(Identifier,height)"];
"1000163" [label="(Block,)"];
"1000219" [label="(Call,pixels[i + 1] * pixels[i + 3] / 255)"];
"1000189" [label="(Block,)"];
"1000198" [label="(Call,pixels[i + 0] * pixels[i + 3] / 255)"];
"1000260" [label="(MethodReturn,void)"];
"1000102" [label="(MethodParameterIn,int width)"];
"1000141" [label="(Identifier,buffer_size)"];
"1000232" [label="(Call,pixels[i + 2] = std::min(255, pixels[i + 2] * pixels[i + 3] / 255))"];
"1000240" [label="(Call,pixels[i + 2] * pixels[i + 3] / 255)"];
"1000103" [label="(MethodParameterIn,int height)"];
"1000106" [label="(Block,)"];
"1000241" [label="(Call,pixels[i + 2])"];
"1000138" [label="(Identifier,pixels)"];
"1000137" [label="(Identifier,GL_UNSIGNED_BYTE)"];
"1000134" [label="(Identifier,width)"];
"1000168" [label="(Call,pixels[i + 2])"];
"1000144" [label="(Call,width * height)"];
"1000165" [label="(Call,pixels[i])"];
"1000225" [label="(Call,pixels[i + 3] / 255)"];
"1000246" [label="(Call,pixels[i + 3] / 255)"];
"1000164" [label="(Call,std::swap(pixels[i], pixels[i + 2]))"];
"1000204" [label="(Call,pixels[i + 3] / 255)"];
"1000136" [label="(Identifier,GL_RGBA)"];
"1000239" [label="(Literal,255)"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000168"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000168" -> "1000164"  [label="AST: "];
"1000161" -> "1000164"  [label="CFG: "];
"1000164" -> "1000260"  [label="DDG: pixels[i + 2]"];
"1000164" -> "1000260"  [label="DDG: std::swap(pixels[i], pixels[i + 2])"];
"1000164" -> "1000260"  [label="DDG: pixels[i]"];
"1000131" -> "1000164"  [label="DDG: pixels"];
"1000101" -> "1000164"  [label="DDG: pixels"];
"1000164" -> "1000240"  [label="DDG: pixels[i + 2]"];
"1000131" -> "1000106"  [label="AST: "];
"1000131" -> "1000138"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000134" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="AST: "];
"1000136" -> "1000131"  [label="AST: "];
"1000137" -> "1000131"  [label="AST: "];
"1000138" -> "1000131"  [label="AST: "];
"1000141" -> "1000131"  [label="CFG: "];
"1000131" -> "1000260"  [label="DDG: GL_RGBA"];
"1000131" -> "1000260"  [label="DDG: pixels"];
"1000131" -> "1000260"  [label="DDG: GL_UNSIGNED_BYTE"];
"1000131" -> "1000260"  [label="DDG: gl_->ReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, pixels)"];
"1000102" -> "1000131"  [label="DDG: width"];
"1000103" -> "1000131"  [label="DDG: height"];
"1000101" -> "1000131"  [label="DDG: pixels"];
"1000131" -> "1000144"  [label="DDG: width"];
"1000131" -> "1000144"  [label="DDG: height"];
"1000131" -> "1000198"  [label="DDG: pixels"];
"1000131" -> "1000204"  [label="DDG: pixels"];
"1000131" -> "1000219"  [label="DDG: pixels"];
"1000131" -> "1000225"  [label="DDG: pixels"];
"1000131" -> "1000240"  [label="DDG: pixels"];
"1000131" -> "1000246"  [label="DDG: pixels"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000260"  [label="DDG: width"];
"1000102" -> "1000144"  [label="DDG: width"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000260"  [label="DDG: height"];
"1000103" -> "1000144"  [label="DDG: height"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000260"  [label="DDG: pixels"];
"1000101" -> "1000190"  [label="DDG: pixels"];
"1000101" -> "1000198"  [label="DDG: pixels"];
"1000101" -> "1000204"  [label="DDG: pixels"];
"1000101" -> "1000211"  [label="DDG: pixels"];
"1000101" -> "1000219"  [label="DDG: pixels"];
"1000101" -> "1000225"  [label="DDG: pixels"];
"1000101" -> "1000232"  [label="DDG: pixels"];
"1000101" -> "1000240"  [label="DDG: pixels"];
"1000101" -> "1000246"  [label="DDG: pixels"];
"1000240" -> "1000238"  [label="AST: "];
"1000240" -> "1000246"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000246" -> "1000240"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000240" -> "1000260"  [label="DDG: pixels[i + 3] / 255"];
"1000240" -> "1000238"  [label="DDG: pixels[i + 2]"];
"1000240" -> "1000238"  [label="DDG: pixels[i + 3] / 255"];
"1000232" -> "1000240"  [label="DDG: pixels[i + 2]"];
"1000246" -> "1000240"  [label="DDG: pixels[i + 3]"];
"1000246" -> "1000240"  [label="DDG: 255"];
"1000238" -> "1000232"  [label="AST: "];
"1000239" -> "1000238"  [label="AST: "];
"1000232" -> "1000238"  [label="CFG: "];
"1000238" -> "1000260"  [label="DDG: pixels[i + 2] * pixels[i + 3] / 255"];
"1000238" -> "1000232"  [label="DDG: 255"];
"1000238" -> "1000232"  [label="DDG: pixels[i + 2] * pixels[i + 3] / 255"];
"1000232" -> "1000189"  [label="AST: "];
"1000233" -> "1000232"  [label="AST: "];
"1000187" -> "1000232"  [label="CFG: "];
"1000232" -> "1000260"  [label="DDG: pixels[i + 2]"];
"1000232" -> "1000260"  [label="DDG: std::min(255, pixels[i + 2] * pixels[i + 3] / 255)"];
}
