digraph "1_linux_7d5145d8eb2b9791533ffe4dc003b129b9696c48_2@pointer" {
"1000178" [label="(Call,data_len = skb->len)"];
"1000257" [label="(Call,min_t(int, skb->len, PKT_PROT_LEN))"];
"1000247" [label="(Call,skb_headlen(skb) < PKT_PROT_LEN)"];
"1000248" [label="(Call,skb_headlen(skb))"];
"1000242" [label="(Call,xen_netbk_fill_frags(netbk, skb))"];
"1000216" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000190" [label="(Call,idx_to_kaddr(netbk, pending_idx))"];
"1000158" [label="(Call,xen_netbk_tx_check_gop(netbk, skb, &gop))"];
"1000105" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000116" [label="(Call,skb = __skb_dequeue(&netbk->tx_queue))"];
"1000118" [label="(Call,__skb_dequeue(&netbk->tx_queue))"];
"1000129" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000183" [label="(Call,memcpy(skb->data,\n\t\t       (void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset),\n\t\t       data_len))"];
"1000132" [label="(Call,(u16 *)skb->data)"];
"1000198" [label="(Call,data_len < txp->size)"];
"1000204" [label="(Call,txp->offset += data_len)"];
"1000189" [label="(Call,idx_to_kaddr(netbk, pending_idx)|txp->offset)"];
"1000187" [label="(Call,(void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset))"];
"1000209" [label="(Call,txp->size -= data_len)"];
"1000204" [label="(Call,txp->offset += data_len)"];
"1000197" [label="(ControlStructure,if (data_len < txp->size))"];
"1000161" [label="(Call,&gop)"];
"1000118" [label="(Call,__skb_dequeue(&netbk->tx_queue))"];
"1000138" [label="(Identifier,vif)"];
"1000257" [label="(Call,min_t(int, skb->len, PKT_PROT_LEN))"];
"1000191" [label="(Identifier,netbk)"];
"1000159" [label="(Identifier,netbk)"];
"1000217" [label="(Identifier,netbk)"];
"1000160" [label="(Identifier,skb)"];
"1000210" [label="(Call,txp->size)"];
"1000183" [label="(Call,memcpy(skb->data,\n\t\t       (void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset),\n\t\t       data_len))"];
"1000203" [label="(Block,)"];
"1000180" [label="(Call,skb->len)"];
"1000262" [label="(Identifier,PKT_PROT_LEN)"];
"1000258" [label="(Identifier,int)"];
"1000251" [label="(Call,skb_is_nonlinear(skb))"];
"1000244" [label="(Identifier,skb)"];
"1000193" [label="(Call,txp->offset)"];
"1000213" [label="(Identifier,data_len)"];
"1000216" [label="(Call,xen_netbk_idx_release(netbk, pending_idx))"];
"1000194" [label="(Identifier,txp)"];
"1000255" [label="(Call,target = min_t(int, skb->len, PKT_PROT_LEN))"];
"1000218" [label="(Identifier,pending_idx)"];
"1000198" [label="(Call,data_len < txp->size)"];
"1000157" [label="(Call,unlikely(xen_netbk_tx_check_gop(netbk, skb, &gop)))"];
"1000123" [label="(Identifier,NULL)"];
"1000179" [label="(Identifier,data_len)"];
"1000250" [label="(Identifier,PKT_PROT_LEN)"];
"1000267" [label="(Call,skb_headlen(skb))"];
"1000158" [label="(Call,xen_netbk_tx_check_gop(netbk, skb, &gop))"];
"1000298" [label="(Call,vif->dev->stats.rx_bytes += skb->len)"];
"1000200" [label="(Call,txp->size)"];
"1000189" [label="(Call,idx_to_kaddr(netbk, pending_idx)|txp->offset)"];
"1000248" [label="(Call,skb_headlen(skb))"];
"1000280" [label="(Call,eth_type_trans(skb, skb->dev))"];
"1000209" [label="(Call,txp->size -= data_len)"];
"1000190" [label="(Call,idx_to_kaddr(netbk, pending_idx))"];
"1000205" [label="(Call,txp->offset)"];
"1000222" [label="(Identifier,txp)"];
"1000129" [label="(Call,pending_idx = *((u16 *)skb->data))"];
"1000187" [label="(Call,(void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset))"];
"1000119" [label="(Call,&netbk->tx_queue)"];
"1000124" [label="(Block,)"];
"1000199" [label="(Identifier,data_len)"];
"1000192" [label="(Identifier,pending_idx)"];
"1000211" [label="(Identifier,txp)"];
"1000184" [label="(Call,skb->data)"];
"1000259" [label="(Call,skb->len)"];
"1000178" [label="(Call,data_len = skb->len)"];
"1000185" [label="(Identifier,skb)"];
"1000252" [label="(Identifier,skb)"];
"1000117" [label="(Identifier,skb)"];
"1000130" [label="(Identifier,pending_idx)"];
"1000242" [label="(Call,xen_netbk_fill_frags(netbk, skb))"];
"1000131" [label="(Call,*((u16 *)skb->data))"];
"1000134" [label="(Call,skb->data)"];
"1000320" [label="(MethodReturn,static void)"];
"1000115" [label="(Call,(skb = __skb_dequeue(&netbk->tx_queue)) != NULL)"];
"1000132" [label="(Call,(u16 *)skb->data)"];
"1000206" [label="(Identifier,txp)"];
"1000116" [label="(Call,skb = __skb_dequeue(&netbk->tx_queue))"];
"1000208" [label="(Identifier,data_len)"];
"1000171" [label="(Call,skb_shinfo(skb))"];
"1000243" [label="(Identifier,netbk)"];
"1000215" [label="(Block,)"];
"1000247" [label="(Call,skb_headlen(skb) < PKT_PROT_LEN)"];
"1000249" [label="(Identifier,skb)"];
"1000105" [label="(MethodParameterIn,struct xen_netbk *netbk)"];
"1000246" [label="(Call,skb_headlen(skb) < PKT_PROT_LEN && skb_is_nonlinear(skb))"];
"1000196" [label="(Identifier,data_len)"];
"1000178" -> "1000124"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000185" -> "1000178"  [label="CFG: "];
"1000178" -> "1000320"  [label="DDG: skb->len"];
"1000257" -> "1000178"  [label="DDG: skb->len"];
"1000178" -> "1000183"  [label="DDG: data_len"];
"1000257" -> "1000255"  [label="AST: "];
"1000257" -> "1000262"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000262" -> "1000257"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000257" -> "1000320"  [label="DDG: PKT_PROT_LEN"];
"1000257" -> "1000320"  [label="DDG: skb->len"];
"1000257" -> "1000320"  [label="DDG: int"];
"1000257" -> "1000247"  [label="DDG: PKT_PROT_LEN"];
"1000257" -> "1000255"  [label="DDG: int"];
"1000257" -> "1000255"  [label="DDG: skb->len"];
"1000257" -> "1000255"  [label="DDG: PKT_PROT_LEN"];
"1000247" -> "1000257"  [label="DDG: PKT_PROT_LEN"];
"1000257" -> "1000298"  [label="DDG: skb->len"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000246" -> "1000247"  [label="CFG: "];
"1000247" -> "1000320"  [label="DDG: skb_headlen(skb)"];
"1000247" -> "1000320"  [label="DDG: PKT_PROT_LEN"];
"1000247" -> "1000246"  [label="DDG: skb_headlen(skb)"];
"1000247" -> "1000246"  [label="DDG: PKT_PROT_LEN"];
"1000248" -> "1000247"  [label="DDG: skb"];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="CFG: "];
"1000242" -> "1000248"  [label="DDG: skb"];
"1000248" -> "1000251"  [label="DDG: skb"];
"1000248" -> "1000267"  [label="DDG: skb"];
"1000248" -> "1000280"  [label="DDG: skb"];
"1000242" -> "1000124"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="CFG: "];
"1000242" -> "1000320"  [label="DDG: xen_netbk_fill_frags(netbk, skb)"];
"1000242" -> "1000320"  [label="DDG: netbk"];
"1000242" -> "1000158"  [label="DDG: netbk"];
"1000216" -> "1000242"  [label="DDG: netbk"];
"1000190" -> "1000242"  [label="DDG: netbk"];
"1000105" -> "1000242"  [label="DDG: netbk"];
"1000158" -> "1000242"  [label="DDG: skb"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000222" -> "1000216"  [label="CFG: "];
"1000216" -> "1000320"  [label="DDG: xen_netbk_idx_release(netbk, pending_idx)"];
"1000216" -> "1000320"  [label="DDG: pending_idx"];
"1000190" -> "1000216"  [label="DDG: netbk"];
"1000190" -> "1000216"  [label="DDG: pending_idx"];
"1000105" -> "1000216"  [label="DDG: netbk"];
"1000190" -> "1000189"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000194" -> "1000190"  [label="CFG: "];
"1000190" -> "1000320"  [label="DDG: pending_idx"];
"1000190" -> "1000189"  [label="DDG: netbk"];
"1000190" -> "1000189"  [label="DDG: pending_idx"];
"1000158" -> "1000190"  [label="DDG: netbk"];
"1000105" -> "1000190"  [label="DDG: netbk"];
"1000129" -> "1000190"  [label="DDG: pending_idx"];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000161"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="AST: "];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000320"  [label="DDG: netbk"];
"1000158" -> "1000320"  [label="DDG: &gop"];
"1000158" -> "1000157"  [label="DDG: netbk"];
"1000158" -> "1000157"  [label="DDG: skb"];
"1000158" -> "1000157"  [label="DDG: &gop"];
"1000105" -> "1000158"  [label="DDG: netbk"];
"1000116" -> "1000158"  [label="DDG: skb"];
"1000158" -> "1000171"  [label="DDG: skb"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000320"  [label="DDG: netbk"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000123" -> "1000116"  [label="CFG: "];
"1000116" -> "1000320"  [label="DDG: __skb_dequeue(&netbk->tx_queue)"];
"1000116" -> "1000320"  [label="DDG: skb"];
"1000116" -> "1000115"  [label="DDG: skb"];
"1000118" -> "1000116"  [label="DDG: &netbk->tx_queue"];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000118" -> "1000320"  [label="DDG: &netbk->tx_queue"];
"1000118" -> "1000115"  [label="DDG: &netbk->tx_queue"];
"1000129" -> "1000124"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000138" -> "1000129"  [label="CFG: "];
"1000129" -> "1000320"  [label="DDG: pending_idx"];
"1000129" -> "1000320"  [label="DDG: *((u16 *)skb->data)"];
"1000183" -> "1000124"  [label="AST: "];
"1000183" -> "1000196"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000187" -> "1000183"  [label="AST: "];
"1000196" -> "1000183"  [label="AST: "];
"1000199" -> "1000183"  [label="CFG: "];
"1000183" -> "1000320"  [label="DDG: (void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset)"];
"1000183" -> "1000320"  [label="DDG: skb->data"];
"1000183" -> "1000320"  [label="DDG: memcpy(skb->data,\n\t\t       (void *)(idx_to_kaddr(netbk, pending_idx)|txp->offset),\n\t\t       data_len)"];
"1000183" -> "1000132"  [label="DDG: skb->data"];
"1000132" -> "1000183"  [label="DDG: skb->data"];
"1000187" -> "1000183"  [label="DDG: idx_to_kaddr(netbk, pending_idx)|txp->offset"];
"1000183" -> "1000198"  [label="DDG: data_len"];
"1000132" -> "1000131"  [label="AST: "];
"1000132" -> "1000134"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000320"  [label="DDG: skb->data"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000206" -> "1000198"  [label="CFG: "];
"1000217" -> "1000198"  [label="CFG: "];
"1000198" -> "1000320"  [label="DDG: txp->size"];
"1000198" -> "1000320"  [label="DDG: data_len"];
"1000198" -> "1000320"  [label="DDG: data_len < txp->size"];
"1000209" -> "1000198"  [label="DDG: txp->size"];
"1000198" -> "1000204"  [label="DDG: data_len"];
"1000198" -> "1000209"  [label="DDG: data_len"];
"1000198" -> "1000209"  [label="DDG: txp->size"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000208"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000208" -> "1000204"  [label="AST: "];
"1000211" -> "1000204"  [label="CFG: "];
"1000204" -> "1000320"  [label="DDG: txp->offset"];
"1000204" -> "1000189"  [label="DDG: txp->offset"];
"1000189" -> "1000204"  [label="DDG: txp->offset"];
"1000189" -> "1000187"  [label="AST: "];
"1000189" -> "1000193"  [label="CFG: "];
"1000193" -> "1000189"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000189" -> "1000320"  [label="DDG: idx_to_kaddr(netbk, pending_idx)"];
"1000189" -> "1000320"  [label="DDG: txp->offset"];
"1000189" -> "1000187"  [label="DDG: idx_to_kaddr(netbk, pending_idx)"];
"1000189" -> "1000187"  [label="DDG: txp->offset"];
"1000188" -> "1000187"  [label="AST: "];
"1000196" -> "1000187"  [label="CFG: "];
"1000187" -> "1000320"  [label="DDG: idx_to_kaddr(netbk, pending_idx)|txp->offset"];
"1000209" -> "1000203"  [label="AST: "];
"1000209" -> "1000213"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000213" -> "1000209"  [label="AST: "];
"1000222" -> "1000209"  [label="CFG: "];
"1000209" -> "1000320"  [label="DDG: txp->size"];
"1000209" -> "1000320"  [label="DDG: data_len"];
}
