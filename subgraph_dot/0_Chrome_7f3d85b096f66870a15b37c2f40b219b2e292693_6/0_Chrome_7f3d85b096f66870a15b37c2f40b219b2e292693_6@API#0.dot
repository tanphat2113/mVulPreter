digraph "0_Chrome_7f3d85b096f66870a15b37c2f40b219b2e292693_6@API" {
"1000224" [label="(Call,png_free(png_ptr, old_buffer))"];
"1000212" [label="(Call,png_malloc_warn(png_ptr,\n         (png_uint_32)new_max))"];
"1000187" [label="(Call,png_error(png_ptr, \"Potential overflow of save_buffer\"))"];
"1000101" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000214" [label="(Call,(png_uint_32)new_max)"];
"1000190" [label="(Call,new_max = png_ptr->save_buffer_size + png_ptr->current_buffer_size + 256)"];
"1000175" [label="(Call,png_ptr->save_buffer_size > PNG_SIZE_MAX -\n         (png_ptr->current_buffer_size + 256))"];
"1000179" [label="(Call,PNG_SIZE_MAX -\n         (png_ptr->current_buffer_size + 256))"];
"1000201" [label="(Call,old_buffer = png_ptr->save_buffer)"];
"1000109" [label="(Call,png_ptr->save_buffer_ptr != png_ptr->save_buffer)"];
"1000227" [label="(Call,png_error(png_ptr, \"Insufficient memory for save_buffer\"))"];
"1000279" [label="(Call,png_ptr->save_buffer_ptr = png_ptr->save_buffer)"];
"1000188" [label="(Identifier,png_ptr)"];
"1000175" [label="(Call,png_ptr->save_buffer_size > PNG_SIZE_MAX -\n         (png_ptr->current_buffer_size + 256))"];
"1000250" [label="(Identifier,png_ptr)"];
"1000224" [label="(Call,png_free(png_ptr, old_buffer))"];
"1000243" [label="(Call,png_ptr->save_buffer_max = new_max)"];
"1000122" [label="(Identifier,istop)"];
"1000267" [label="(Call,png_ptr->save_buffer_size += png_ptr->current_buffer_size)"];
"1000191" [label="(Identifier,new_max)"];
"1000186" [label="(Block,)"];
"1000232" [label="(Call,png_memcpy(png_ptr->save_buffer, old_buffer, png_ptr->save_buffer_size))"];
"1000212" [label="(Call,png_malloc_warn(png_ptr,\n         (png_uint_32)new_max))"];
"1000223" [label="(Block,)"];
"1000291" [label="(MethodReturn,RET)"];
"1000137" [label="(Call,dp = png_ptr->save_buffer)"];
"1000180" [label="(Identifier,PNG_SIZE_MAX)"];
"1000225" [label="(Identifier,png_ptr)"];
"1000213" [label="(Identifier,png_ptr)"];
"1000171" [label="(Block,)"];
"1000109" [label="(Call,png_ptr->save_buffer_ptr != png_ptr->save_buffer)"];
"1000210" [label="(Call,(png_bytep)png_malloc_warn(png_ptr,\n         (png_uint_32)new_max))"];
"1000189" [label="(Literal,\"Potential overflow of save_buffer\")"];
"1000110" [label="(Call,png_ptr->save_buffer_ptr)"];
"1000113" [label="(Call,png_ptr->save_buffer)"];
"1000190" [label="(Call,new_max = png_ptr->save_buffer_size + png_ptr->current_buffer_size + 256)"];
"1000101" [label="(MethodParameterIn,png_structp png_ptr)"];
"1000216" [label="(Identifier,new_max)"];
"1000214" [label="(Call,(png_uint_32)new_max)"];
"1000203" [label="(Call,png_ptr->save_buffer)"];
"1000108" [label="(ControlStructure,if (png_ptr->save_buffer_ptr != png_ptr->save_buffer))"];
"1000229" [label="(Literal,\"Insufficient memory for save_buffer\")"];
"1000240" [label="(Call,png_free(png_ptr, old_buffer))"];
"1000187" [label="(Call,png_error(png_ptr, \"Potential overflow of save_buffer\"))"];
"1000163" [label="(Identifier,png_ptr)"];
"1000228" [label="(Identifier,png_ptr)"];
"1000202" [label="(Identifier,old_buffer)"];
"1000253" [label="(Call,png_memcpy(png_ptr->save_buffer + png_ptr->save_buffer_size,\n         png_ptr->current_buffer_ptr, png_ptr->current_buffer_size))"];
"1000201" [label="(Call,old_buffer = png_ptr->save_buffer)"];
"1000226" [label="(Identifier,old_buffer)"];
"1000179" [label="(Call,PNG_SIZE_MAX -\n         (png_ptr->current_buffer_size + 256))"];
"1000176" [label="(Call,png_ptr->save_buffer_size)"];
"1000192" [label="(Call,png_ptr->save_buffer_size + png_ptr->current_buffer_size + 256)"];
"1000174" [label="(ControlStructure,if (png_ptr->save_buffer_size > PNG_SIZE_MAX -\n         (png_ptr->current_buffer_size + 256)))"];
"1000132" [label="(Call,sp = png_ptr->save_buffer_ptr)"];
"1000208" [label="(Identifier,png_ptr)"];
"1000181" [label="(Call,png_ptr->current_buffer_size + 256)"];
"1000227" [label="(Call,png_error(png_ptr, \"Insufficient memory for save_buffer\"))"];
"1000254" [label="(Call,png_ptr->save_buffer + png_ptr->save_buffer_size)"];
"1000224" -> "1000223"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="CFG: "];
"1000224" -> "1000291"  [label="DDG: "];
"1000224" -> "1000291"  [label="DDG: "];
"1000212" -> "1000224"  [label="DDG: "];
"1000101" -> "1000224"  [label="DDG: "];
"1000201" -> "1000224"  [label="DDG: "];
"1000224" -> "1000227"  [label="DDG: "];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000212" -> "1000291"  [label="DDG: "];
"1000212" -> "1000210"  [label="DDG: "];
"1000212" -> "1000210"  [label="DDG: "];
"1000187" -> "1000212"  [label="DDG: "];
"1000101" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000212" -> "1000240"  [label="DDG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000191" -> "1000187"  [label="CFG: "];
"1000187" -> "1000291"  [label="DDG: "];
"1000101" -> "1000187"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000291"  [label="DDG: "];
"1000101" -> "1000227"  [label="DDG: "];
"1000101" -> "1000240"  [label="DDG: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000214" -> "1000291"  [label="DDG: "];
"1000190" -> "1000214"  [label="DDG: "];
"1000214" -> "1000243"  [label="DDG: "];
"1000190" -> "1000171"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000192" -> "1000190"  [label="AST: "];
"1000202" -> "1000190"  [label="CFG: "];
"1000190" -> "1000291"  [label="DDG: "];
"1000175" -> "1000190"  [label="DDG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000188" -> "1000175"  [label="CFG: "];
"1000191" -> "1000175"  [label="CFG: "];
"1000175" -> "1000291"  [label="DDG: "];
"1000175" -> "1000291"  [label="DDG: "];
"1000179" -> "1000175"  [label="DDG: "];
"1000179" -> "1000175"  [label="DDG: "];
"1000175" -> "1000192"  [label="DDG: "];
"1000175" -> "1000232"  [label="DDG: "];
"1000175" -> "1000253"  [label="DDG: "];
"1000175" -> "1000254"  [label="DDG: "];
"1000175" -> "1000267"  [label="DDG: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000179" -> "1000291"  [label="DDG: "];
"1000201" -> "1000171"  [label="AST: "];
"1000201" -> "1000203"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000208" -> "1000201"  [label="CFG: "];
"1000109" -> "1000201"  [label="DDG: "];
"1000201" -> "1000232"  [label="DDG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000113"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000113" -> "1000109"  [label="AST: "];
"1000122" -> "1000109"  [label="CFG: "];
"1000163" -> "1000109"  [label="CFG: "];
"1000109" -> "1000291"  [label="DDG: "];
"1000109" -> "1000132"  [label="DDG: "];
"1000109" -> "1000137"  [label="DDG: "];
"1000109" -> "1000253"  [label="DDG: "];
"1000109" -> "1000254"  [label="DDG: "];
"1000109" -> "1000279"  [label="DDG: "];
"1000227" -> "1000223"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000250" -> "1000227"  [label="CFG: "];
"1000227" -> "1000291"  [label="DDG: "];
"1000227" -> "1000291"  [label="DDG: "];
}
