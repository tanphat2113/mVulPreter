digraph "0_linux_dee1f973ca341c266229faa5a1a5bb268bed3531_0@API" {
"1000208" [label="(Call,ext4_update_inode_fsync_trans(handle, inode, 1))"];
"1000198" [label="(Call,ext4_convert_unwritten_extents_endio(handle, inode, map,\n \t\t\t\t\t\t\tpath))"];
"1000111" [label="(MethodParameterIn,handle_t *handle)"];
"1000150" [label="(Call,trace_ext4_ext_handle_uninitialized_extents(inode, map, allocated,\n\t\t\t\t\t\t    newblock))"];
"1000147" [label="(Call,ext4_ext_show_leaf(inode, path))"];
"1000130" [label="(Call,ext4_inode_aio(inode))"];
"1000112" [label="(MethodParameterIn,struct inode *inode)"];
"1000114" [label="(MethodParameterIn,struct ext4_ext_path *path)"];
"1000113" [label="(MethodParameterIn,struct ext4_map_blocks *map)"];
"1000132" [label="(Call,ext_debug(\"ext4_ext_handle_uninitialized_extents: inode %lu, logical \"\n\t\t  \"block %llu, max_blocks %u, flags %x, allocated %u\n\",\n\t\t  inode->i_ino, (unsigned long long)map->m_lblk, map->m_len,\n\t\t  flags, allocated))"];
"1000137" [label="(Call,(unsigned long long)map->m_lblk)"];
"1000115" [label="(MethodParameterIn,int flags)"];
"1000116" [label="(MethodParameterIn,unsigned int allocated)"];
"1000117" [label="(MethodParameterIn,ext4_fsblk_t newblock)"];
"1000214" [label="(Call,check_eofblocks_fl(handle, inode, map->m_lblk,\n\t\t\t\t\t\t path, map->m_len))"];
"1000212" [label="(Call,err = check_eofblocks_fl(handle, inode, map->m_lblk,\n\t\t\t\t\t\t path, map->m_len))"];
"1000395" [label="(Call,err ? err : allocated)"];
"1000394" [label="(Return,return err ? err : allocated;)"];
"1000390" [label="(Call,ext4_ext_drop_refs(path))"];
"1000392" [label="(Call,kfree(path))"];
"1000147" [label="(Call,ext4_ext_show_leaf(inode, path))"];
"1000339" [label="(Call,flags & EXT4_GET_BLOCKS_KEEP_SIZE)"];
"1000142" [label="(Call,map->m_len)"];
"1000145" [label="(Identifier,flags)"];
"1000157" [label="(Identifier,flags)"];
"1000192" [label="(Call,flags & EXT4_GET_BLOCKS_CONVERT)"];
"1000213" [label="(Identifier,err)"];
"1000131" [label="(Identifier,inode)"];
"1000215" [label="(Identifier,handle)"];
"1000389" [label="(Block,)"];
"1000363" [label="(Call,allocated > map->m_len)"];
"1000392" [label="(Call,kfree(path))"];
"1000282" [label="(Call,allocated > map->m_len)"];
"1000139" [label="(Call,map->m_lblk)"];
"1000390" [label="(Call,ext4_ext_drop_refs(path))"];
"1000397" [label="(Identifier,err)"];
"1000156" [label="(Call,flags & EXT4_GET_BLOCKS_PRE_IO)"];
"1000268" [label="(Call,err = ret)"];
"1000114" [label="(MethodParameterIn,struct ext4_ext_path *path)"];
"1000196" [label="(Call,ret = ext4_convert_unwritten_extents_endio(handle, inode, map,\n \t\t\t\t\t\t\tpath))"];
"1000183" [label="(Call,ext4_should_dioread_nolock(inode))"];
"1000396" [label="(Identifier,err)"];
"1000207" [label="(Block,)"];
"1000111" [label="(MethodParameterIn,handle_t *handle)"];
"1000373" [label="(Call,ext4_ext_show_leaf(inode, path))"];
"1000149" [label="(Identifier,path)"];
"1000225" [label="(Call,err = ret)"];
"1000395" [label="(Call,err ? err : allocated)"];
"1000153" [label="(Identifier,allocated)"];
"1000221" [label="(Call,map->m_len)"];
"1000150" [label="(Call,trace_ext4_ext_handle_uninitialized_extents(inode, map, allocated,\n\t\t\t\t\t\t    newblock))"];
"1000179" [label="(Call,ext4_set_inode_state(inode, EXT4_STATE_DIO_UNWRITTEN))"];
"1000199" [label="(Identifier,handle)"];
"1000273" [label="(Call,allocated = ret)"];
"1000230" [label="(Call,flags & EXT4_GET_BLOCKS_UNINIT_EXT)"];
"1000346" [label="(Call,check_eofblocks_fl(handle, inode, map->m_lblk, path,\n\t\t\t\t\t map->m_len))"];
"1000124" [label="(Call,err = 0)"];
"1000310" [label="(Call,flags & EXT4_GET_BLOCKS_DELALLOC_RESERVE)"];
"1000220" [label="(Identifier,path)"];
"1000113" [label="(MethodParameterIn,struct ext4_map_blocks *map)"];
"1000217" [label="(Call,map->m_lblk)"];
"1000249" [label="(Call,ext4_ext_convert_to_initialized(handle, inode, map, path))"];
"1000115" [label="(MethodParameterIn,int flags)"];
"1000299" [label="(Call,allocated - map->m_len)"];
"1000154" [label="(Identifier,newblock)"];
"1000236" [label="(Call,flags & EXT4_GET_BLOCKS_CREATE)"];
"1000391" [label="(Identifier,path)"];
"1000368" [label="(Call,allocated = map->m_len)"];
"1000210" [label="(Identifier,inode)"];
"1000134" [label="(Call,inode->i_ino)"];
"1000399" [label="(MethodReturn,RET)"];
"1000202" [label="(Identifier,path)"];
"1000137" [label="(Call,(unsigned long long)map->m_lblk)"];
"1000151" [label="(Identifier,inode)"];
"1000175" [label="(Call,ext4_set_io_unwritten_flag(inode, io))"];
"1000148" [label="(Identifier,inode)"];
"1000116" [label="(MethodParameterIn,unsigned int allocated)"];
"1000198" [label="(Call,ext4_convert_unwritten_extents_endio(handle, inode, map,\n \t\t\t\t\t\t\tpath))"];
"1000398" [label="(Identifier,allocated)"];
"1000146" [label="(Identifier,allocated)"];
"1000357" [label="(Call,err < 0)"];
"1000208" [label="(Call,ext4_update_inode_fsync_trans(handle, inode, 1))"];
"1000117" [label="(MethodParameterIn,ext4_fsblk_t newblock)"];
"1000381" [label="(Call,map->m_len = allocated)"];
"1000211" [label="(Literal,1)"];
"1000394" [label="(Return,return err ? err : allocated;)"];
"1000209" [label="(Identifier,handle)"];
"1000317" [label="(Call,get_reserved_cluster_alloc(inode,\n\t\t\t\tmap->m_lblk, map->m_len))"];
"1000152" [label="(Identifier,map)"];
"1000376" [label="(Call,map->m_pblk = newblock)"];
"1000118" [label="(Block,)"];
"1000327" [label="(Call,ext4_da_update_reserve_space(inode,\n\t\t\t\t\t\t     reserved_clusters,\n\t\t\t\t\t\t     0))"];
"1000258" [label="(Call,ext4_update_inode_fsync_trans(handle, inode, 1))"];
"1000216" [label="(Identifier,inode)"];
"1000130" [label="(Call,ext4_inode_aio(inode))"];
"1000133" [label="(Literal,\"ext4_ext_handle_uninitialized_extents: inode %lu, logical \"\n\t\t  \"block %llu, max_blocks %u, flags %x, allocated %u\n\")"];
"1000162" [label="(Call,ext4_split_unwritten_extents(handle, inode, map,\n\t\t\t\t\t\t   path, flags))"];
"1000143" [label="(Identifier,map)"];
"1000132" [label="(Call,ext_debug(\"ext4_ext_handle_uninitialized_extents: inode %lu, logical \"\n\t\t  \"block %llu, max_blocks %u, flags %x, allocated %u\n\",\n\t\t  inode->i_ino, (unsigned long long)map->m_lblk, map->m_len,\n\t\t  flags, allocated))"];
"1000201" [label="(Identifier,map)"];
"1000200" [label="(Identifier,inode)"];
"1000294" [label="(Call,newblock + map->m_len)"];
"1000112" [label="(MethodParameterIn,struct inode *inode)"];
"1000228" [label="(ControlStructure,goto out2;)"];
"1000288" [label="(Call,unmap_underlying_metadata_blocks(inode->i_sb->s_bdev,\n\t\t\t\t\tnewblock + map->m_len,\n\t\t\t\t\tallocated - map->m_len))"];
"1000212" [label="(Call,err = check_eofblocks_fl(handle, inode, map->m_lblk,\n\t\t\t\t\t\t path, map->m_len))"];
"1000128" [label="(Call,*io = ext4_inode_aio(inode))"];
"1000304" [label="(Call,allocated = map->m_len)"];
"1000393" [label="(Identifier,path)"];
"1000214" [label="(Call,check_eofblocks_fl(handle, inode, map->m_lblk,\n\t\t\t\t\t\t path, map->m_len))"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000211"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="AST: "];
"1000213" -> "1000208"  [label="CFG: "];
"1000208" -> "1000399"  [label="DDG: "];
"1000198" -> "1000208"  [label="DDG: "];
"1000198" -> "1000208"  [label="DDG: "];
"1000111" -> "1000208"  [label="DDG: "];
"1000112" -> "1000208"  [label="DDG: "];
"1000208" -> "1000214"  [label="DDG: "];
"1000208" -> "1000214"  [label="DDG: "];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000202"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000399"  [label="DDG: "];
"1000198" -> "1000399"  [label="DDG: "];
"1000198" -> "1000399"  [label="DDG: "];
"1000198" -> "1000399"  [label="DDG: "];
"1000198" -> "1000196"  [label="DDG: "];
"1000198" -> "1000196"  [label="DDG: "];
"1000198" -> "1000196"  [label="DDG: "];
"1000198" -> "1000196"  [label="DDG: "];
"1000111" -> "1000198"  [label="DDG: "];
"1000150" -> "1000198"  [label="DDG: "];
"1000150" -> "1000198"  [label="DDG: "];
"1000112" -> "1000198"  [label="DDG: "];
"1000113" -> "1000198"  [label="DDG: "];
"1000147" -> "1000198"  [label="DDG: "];
"1000114" -> "1000198"  [label="DDG: "];
"1000198" -> "1000214"  [label="DDG: "];
"1000198" -> "1000390"  [label="DDG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000399"  [label="DDG: "];
"1000111" -> "1000162"  [label="DDG: "];
"1000111" -> "1000214"  [label="DDG: "];
"1000111" -> "1000249"  [label="DDG: "];
"1000111" -> "1000258"  [label="DDG: "];
"1000111" -> "1000346"  [label="DDG: "];
"1000150" -> "1000118"  [label="AST: "];
"1000150" -> "1000154"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000153" -> "1000150"  [label="AST: "];
"1000154" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="CFG: "];
"1000150" -> "1000399"  [label="DDG: "];
"1000150" -> "1000399"  [label="DDG: "];
"1000150" -> "1000399"  [label="DDG: "];
"1000147" -> "1000150"  [label="DDG: "];
"1000112" -> "1000150"  [label="DDG: "];
"1000113" -> "1000150"  [label="DDG: "];
"1000132" -> "1000150"  [label="DDG: "];
"1000116" -> "1000150"  [label="DDG: "];
"1000117" -> "1000150"  [label="DDG: "];
"1000150" -> "1000162"  [label="DDG: "];
"1000150" -> "1000162"  [label="DDG: "];
"1000150" -> "1000249"  [label="DDG: "];
"1000150" -> "1000249"  [label="DDG: "];
"1000150" -> "1000288"  [label="DDG: "];
"1000150" -> "1000294"  [label="DDG: "];
"1000150" -> "1000346"  [label="DDG: "];
"1000150" -> "1000363"  [label="DDG: "];
"1000150" -> "1000373"  [label="DDG: "];
"1000150" -> "1000376"  [label="DDG: "];
"1000150" -> "1000395"  [label="DDG: "];
"1000147" -> "1000118"  [label="AST: "];
"1000147" -> "1000149"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="AST: "];
"1000151" -> "1000147"  [label="CFG: "];
"1000147" -> "1000399"  [label="DDG: "];
"1000130" -> "1000147"  [label="DDG: "];
"1000112" -> "1000147"  [label="DDG: "];
"1000114" -> "1000147"  [label="DDG: "];
"1000147" -> "1000162"  [label="DDG: "];
"1000147" -> "1000249"  [label="DDG: "];
"1000147" -> "1000346"  [label="DDG: "];
"1000147" -> "1000373"  [label="DDG: "];
"1000130" -> "1000128"  [label="AST: "];
"1000130" -> "1000131"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000128" -> "1000130"  [label="CFG: "];
"1000130" -> "1000128"  [label="DDG: "];
"1000112" -> "1000130"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000399"  [label="DDG: "];
"1000112" -> "1000162"  [label="DDG: "];
"1000112" -> "1000175"  [label="DDG: "];
"1000112" -> "1000179"  [label="DDG: "];
"1000112" -> "1000183"  [label="DDG: "];
"1000112" -> "1000214"  [label="DDG: "];
"1000112" -> "1000249"  [label="DDG: "];
"1000112" -> "1000258"  [label="DDG: "];
"1000112" -> "1000317"  [label="DDG: "];
"1000112" -> "1000327"  [label="DDG: "];
"1000112" -> "1000346"  [label="DDG: "];
"1000112" -> "1000373"  [label="DDG: "];
"1000114" -> "1000110"  [label="AST: "];
"1000114" -> "1000399"  [label="DDG: "];
"1000114" -> "1000162"  [label="DDG: "];
"1000114" -> "1000214"  [label="DDG: "];
"1000114" -> "1000249"  [label="DDG: "];
"1000114" -> "1000346"  [label="DDG: "];
"1000114" -> "1000373"  [label="DDG: "];
"1000114" -> "1000390"  [label="DDG: "];
"1000114" -> "1000392"  [label="DDG: "];
"1000113" -> "1000110"  [label="AST: "];
"1000113" -> "1000399"  [label="DDG: "];
"1000113" -> "1000162"  [label="DDG: "];
"1000113" -> "1000249"  [label="DDG: "];
"1000132" -> "1000118"  [label="AST: "];
"1000132" -> "1000146"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000134" -> "1000132"  [label="AST: "];
"1000137" -> "1000132"  [label="AST: "];
"1000142" -> "1000132"  [label="AST: "];
"1000145" -> "1000132"  [label="AST: "];
"1000146" -> "1000132"  [label="AST: "];
"1000148" -> "1000132"  [label="CFG: "];
"1000132" -> "1000399"  [label="DDG: "];
"1000132" -> "1000399"  [label="DDG: "];
"1000132" -> "1000399"  [label="DDG: "];
"1000132" -> "1000399"  [label="DDG: "];
"1000137" -> "1000132"  [label="DDG: "];
"1000115" -> "1000132"  [label="DDG: "];
"1000116" -> "1000132"  [label="DDG: "];
"1000132" -> "1000156"  [label="DDG: "];
"1000132" -> "1000214"  [label="DDG: "];
"1000132" -> "1000282"  [label="DDG: "];
"1000132" -> "1000346"  [label="DDG: "];
"1000132" -> "1000363"  [label="DDG: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000143" -> "1000137"  [label="CFG: "];
"1000137" -> "1000399"  [label="DDG: "];
"1000137" -> "1000214"  [label="DDG: "];
"1000137" -> "1000317"  [label="DDG: "];
"1000137" -> "1000346"  [label="DDG: "];
"1000115" -> "1000110"  [label="AST: "];
"1000115" -> "1000399"  [label="DDG: "];
"1000115" -> "1000156"  [label="DDG: "];
"1000115" -> "1000162"  [label="DDG: "];
"1000115" -> "1000192"  [label="DDG: "];
"1000115" -> "1000230"  [label="DDG: "];
"1000115" -> "1000236"  [label="DDG: "];
"1000115" -> "1000310"  [label="DDG: "];
"1000115" -> "1000339"  [label="DDG: "];
"1000116" -> "1000110"  [label="AST: "];
"1000116" -> "1000399"  [label="DDG: "];
"1000116" -> "1000273"  [label="DDG: "];
"1000116" -> "1000282"  [label="DDG: "];
"1000116" -> "1000299"  [label="DDG: "];
"1000116" -> "1000304"  [label="DDG: "];
"1000116" -> "1000363"  [label="DDG: "];
"1000116" -> "1000368"  [label="DDG: "];
"1000116" -> "1000381"  [label="DDG: "];
"1000116" -> "1000395"  [label="DDG: "];
"1000117" -> "1000110"  [label="AST: "];
"1000117" -> "1000399"  [label="DDG: "];
"1000117" -> "1000288"  [label="DDG: "];
"1000117" -> "1000294"  [label="DDG: "];
"1000117" -> "1000376"  [label="DDG: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000221"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000217" -> "1000214"  [label="AST: "];
"1000220" -> "1000214"  [label="AST: "];
"1000221" -> "1000214"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000214" -> "1000399"  [label="DDG: "];
"1000214" -> "1000399"  [label="DDG: "];
"1000214" -> "1000399"  [label="DDG: "];
"1000214" -> "1000399"  [label="DDG: "];
"1000214" -> "1000399"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000214" -> "1000390"  [label="DDG: "];
"1000212" -> "1000207"  [label="AST: "];
"1000213" -> "1000212"  [label="AST: "];
"1000228" -> "1000212"  [label="CFG: "];
"1000212" -> "1000399"  [label="DDG: "];
"1000212" -> "1000395"  [label="DDG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000395" -> "1000398"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000397" -> "1000395"  [label="AST: "];
"1000398" -> "1000395"  [label="AST: "];
"1000394" -> "1000395"  [label="CFG: "];
"1000395" -> "1000399"  [label="DDG: "];
"1000395" -> "1000399"  [label="DDG: "];
"1000395" -> "1000399"  [label="DDG: "];
"1000395" -> "1000394"  [label="DDG: "];
"1000124" -> "1000395"  [label="DDG: "];
"1000225" -> "1000395"  [label="DDG: "];
"1000268" -> "1000395"  [label="DDG: "];
"1000357" -> "1000395"  [label="DDG: "];
"1000304" -> "1000395"  [label="DDG: "];
"1000282" -> "1000395"  [label="DDG: "];
"1000368" -> "1000395"  [label="DDG: "];
"1000363" -> "1000395"  [label="DDG: "];
"1000394" -> "1000118"  [label="AST: "];
"1000399" -> "1000394"  [label="CFG: "];
"1000394" -> "1000399"  [label="DDG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000393" -> "1000390"  [label="CFG: "];
"1000390" -> "1000399"  [label="DDG: "];
"1000373" -> "1000390"  [label="DDG: "];
"1000249" -> "1000390"  [label="DDG: "];
"1000162" -> "1000390"  [label="DDG: "];
"1000346" -> "1000390"  [label="DDG: "];
"1000390" -> "1000392"  [label="DDG: "];
"1000392" -> "1000389"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000396" -> "1000392"  [label="CFG: "];
"1000392" -> "1000399"  [label="DDG: "];
"1000392" -> "1000399"  [label="DDG: "];
}
