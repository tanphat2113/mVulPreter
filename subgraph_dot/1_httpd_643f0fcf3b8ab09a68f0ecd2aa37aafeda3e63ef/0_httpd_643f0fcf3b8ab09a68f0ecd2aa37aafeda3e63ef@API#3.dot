digraph "0_httpd_643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef@API" {
"1000406" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000408" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000167" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000152" [label="(Call,ap_lua_ssl_is_https(r->connection))"];
"1000186" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000235" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000176" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000165" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000342" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000292" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000296" [label="(Call,(char*) &payload_short)"];
"1000346" [label="(Call,(char*) &payload_long)"];
"1000412" [label="(Call,(char*) mask_bytes)"];
"1000158" [label="(Call,mask_bytes = apr_pcalloc(r->pool, 4))"];
"1000160" [label="(Call,apr_pcalloc(r->pool, 4))"];
"1000417" [label="(Call,rv != APR_SUCCESS)"];
"1000343" [label="(Call,r->connection)"];
"1000519" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000418" [label="(Identifier,rv)"];
"1000184" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000471" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000558" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000117" [label="(Block,)"];
"1000395" [label="(Call,rv = apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000405" [label="(Block,)"];
"1000235" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000243" [label="(Call,rv == APR_SUCCESS)"];
"1000151" [label="(Call,ap_lua_ssl_is_https(r->connection) ? 0 : 1)"];
"1000340" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000157" [label="(Literal,1)"];
"1000167" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000298" [label="(Call,&payload_short)"];
"1000180" [label="(Call,&len)"];
"1000290" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000166" [label="(Identifier,sock)"];
"1000225" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000174" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000426" [label="(Identifier,plen)"];
"1000236" [label="(Call,r->connection)"];
"1000293" [label="(Call,r->connection)"];
"1000178" [label="(Call,&byte)"];
"1000422" [label="(Literal,0)"];
"1000500" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000407" [label="(Identifier,rv)"];
"1000300" [label="(Literal,2)"];
"1000190" [label="(Call,&byte)"];
"1000346" [label="(Call,(char*) &payload_long)"];
"1000408" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000186" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000342" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000168" [label="(Call,r->connection)"];
"1000156" [label="(Literal,0)"];
"1000152" [label="(Call,ap_lua_ssl_is_https(r->connection))"];
"1000187" [label="(Call,r->connection)"];
"1000176" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000406" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000419" [label="(Identifier,APR_SUCCESS)"];
"1000241" [label="(Literal,1)"];
"1000306" [label="(Call,rv == APR_SUCCESS)"];
"1000159" [label="(Identifier,mask_bytes)"];
"1000165" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000172" [label="(Identifier,plaintext)"];
"1000239" [label="(Call,&byte)"];
"1000192" [label="(Literal,1)"];
"1000350" [label="(Literal,8)"];
"1000348" [label="(Call,&payload_long)"];
"1000158" [label="(Call,mask_bytes = apr_pcalloc(r->pool, 4))"];
"1000161" [label="(Call,r->pool)"];
"1000352" [label="(Call,rv == APR_SUCCESS)"];
"1000280" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000415" [label="(Literal,4)"];
"1000358" [label="(Call,ap_ntoh64(&payload_long))"];
"1000414" [label="(Identifier,mask_bytes)"];
"1000177" [label="(Identifier,sock)"];
"1000233" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000330" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000296" [label="(Call,(char*) &payload_short)"];
"1000397" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000164" [label="(Literal,4)"];
"1000160" [label="(Call,apr_pcalloc(r->pool, 4))"];
"1000567" [label="(MethodReturn,static int)"];
"1000416" [label="(ControlStructure,if (rv != APR_SUCCESS))"];
"1000412" [label="(Call,(char*) mask_bytes)"];
"1000409" [label="(Call,r->connection)"];
"1000399" [label="(Call,(char*) mask_bytes)"];
"1000153" [label="(Call,r->connection)"];
"1000446" [label="(Call,apr_palloc(r->pool, plen+1))"];
"1000292" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000417" [label="(Call,rv != APR_SUCCESS)"];
"1000406" -> "1000405"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000407" -> "1000406"  [label="AST: "];
"1000408" -> "1000406"  [label="AST: "];
"1000418" -> "1000406"  [label="CFG: "];
"1000406" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4)"];
"1000408" -> "1000406"  [label="DDG: r->connection"];
"1000408" -> "1000406"  [label="DDG: (char*) mask_bytes"];
"1000408" -> "1000406"  [label="DDG: 4"];
"1000406" -> "1000417"  [label="DDG: rv"];
"1000408" -> "1000415"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="AST: "];
"1000415" -> "1000408"  [label="AST: "];
"1000408" -> "1000567"  [label="DDG: r->connection"];
"1000408" -> "1000567"  [label="DDG: (char*) mask_bytes"];
"1000167" -> "1000408"  [label="DDG: r->connection"];
"1000186" -> "1000408"  [label="DDG: r->connection"];
"1000235" -> "1000408"  [label="DDG: r->connection"];
"1000342" -> "1000408"  [label="DDG: r->connection"];
"1000292" -> "1000408"  [label="DDG: r->connection"];
"1000412" -> "1000408"  [label="DDG: mask_bytes"];
"1000408" -> "1000500"  [label="DDG: r->connection"];
"1000167" -> "1000165"  [label="AST: "];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000167" -> "1000567"  [label="DDG: r->connection"];
"1000167" -> "1000165"  [label="DDG: r->connection"];
"1000152" -> "1000167"  [label="DDG: r->connection"];
"1000167" -> "1000186"  [label="DDG: r->connection"];
"1000167" -> "1000235"  [label="DDG: r->connection"];
"1000167" -> "1000292"  [label="DDG: r->connection"];
"1000167" -> "1000342"  [label="DDG: r->connection"];
"1000167" -> "1000500"  [label="DDG: r->connection"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000186" -> "1000184"  [label="AST: "];
"1000186" -> "1000192"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="AST: "];
"1000192" -> "1000186"  [label="AST: "];
"1000184" -> "1000186"  [label="CFG: "];
"1000186" -> "1000567"  [label="DDG: r->connection"];
"1000186" -> "1000567"  [label="DDG: &byte"];
"1000186" -> "1000184"  [label="DDG: r->connection"];
"1000186" -> "1000184"  [label="DDG: &byte"];
"1000186" -> "1000184"  [label="DDG: 1"];
"1000186" -> "1000225"  [label="DDG: &byte"];
"1000186" -> "1000235"  [label="DDG: r->connection"];
"1000186" -> "1000235"  [label="DDG: &byte"];
"1000186" -> "1000292"  [label="DDG: r->connection"];
"1000186" -> "1000342"  [label="DDG: r->connection"];
"1000186" -> "1000500"  [label="DDG: r->connection"];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000241"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000241" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000567"  [label="DDG: r->connection"];
"1000235" -> "1000567"  [label="DDG: &byte"];
"1000235" -> "1000233"  [label="DDG: r->connection"];
"1000235" -> "1000233"  [label="DDG: &byte"];
"1000235" -> "1000233"  [label="DDG: 1"];
"1000176" -> "1000235"  [label="DDG: &byte"];
"1000235" -> "1000292"  [label="DDG: r->connection"];
"1000235" -> "1000342"  [label="DDG: r->connection"];
"1000235" -> "1000500"  [label="DDG: r->connection"];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000180"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000176" -> "1000567"  [label="DDG: &byte"];
"1000176" -> "1000567"  [label="DDG: &len"];
"1000176" -> "1000567"  [label="DDG: sock"];
"1000176" -> "1000174"  [label="DDG: sock"];
"1000176" -> "1000174"  [label="DDG: &byte"];
"1000176" -> "1000174"  [label="DDG: &len"];
"1000165" -> "1000176"  [label="DDG: sock"];
"1000176" -> "1000225"  [label="DDG: sock"];
"1000176" -> "1000225"  [label="DDG: &byte"];
"1000176" -> "1000225"  [label="DDG: &len"];
"1000176" -> "1000280"  [label="DDG: sock"];
"1000176" -> "1000280"  [label="DDG: &len"];
"1000176" -> "1000330"  [label="DDG: sock"];
"1000176" -> "1000330"  [label="DDG: &len"];
"1000176" -> "1000397"  [label="DDG: sock"];
"1000176" -> "1000397"  [label="DDG: &len"];
"1000176" -> "1000471"  [label="DDG: sock"];
"1000176" -> "1000558"  [label="DDG: sock"];
"1000165" -> "1000117"  [label="AST: "];
"1000166" -> "1000165"  [label="AST: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000165" -> "1000567"  [label="DDG: sock"];
"1000165" -> "1000567"  [label="DDG: ap_get_conn_socket(r->connection)"];
"1000165" -> "1000225"  [label="DDG: sock"];
"1000165" -> "1000280"  [label="DDG: sock"];
"1000165" -> "1000330"  [label="DDG: sock"];
"1000165" -> "1000397"  [label="DDG: sock"];
"1000165" -> "1000471"  [label="DDG: sock"];
"1000165" -> "1000558"  [label="DDG: sock"];
"1000342" -> "1000340"  [label="AST: "];
"1000342" -> "1000350"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="AST: "];
"1000350" -> "1000342"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000342" -> "1000567"  [label="DDG: r->connection"];
"1000342" -> "1000567"  [label="DDG: (char*) &payload_long"];
"1000342" -> "1000340"  [label="DDG: r->connection"];
"1000342" -> "1000340"  [label="DDG: (char*) &payload_long"];
"1000342" -> "1000340"  [label="DDG: 8"];
"1000292" -> "1000342"  [label="DDG: r->connection"];
"1000346" -> "1000342"  [label="DDG: &payload_long"];
"1000342" -> "1000500"  [label="DDG: r->connection"];
"1000292" -> "1000290"  [label="AST: "];
"1000292" -> "1000300"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="AST: "];
"1000300" -> "1000292"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000292" -> "1000567"  [label="DDG: r->connection"];
"1000292" -> "1000567"  [label="DDG: (char*) &payload_short"];
"1000292" -> "1000290"  [label="DDG: r->connection"];
"1000292" -> "1000290"  [label="DDG: (char*) &payload_short"];
"1000292" -> "1000290"  [label="DDG: 2"];
"1000296" -> "1000292"  [label="DDG: &payload_short"];
"1000292" -> "1000500"  [label="DDG: r->connection"];
"1000296" -> "1000298"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="AST: "];
"1000300" -> "1000296"  [label="CFG: "];
"1000296" -> "1000567"  [label="DDG: &payload_short"];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000350" -> "1000346"  [label="CFG: "];
"1000346" -> "1000567"  [label="DDG: &payload_long"];
"1000346" -> "1000358"  [label="DDG: &payload_long"];
"1000412" -> "1000414"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000414" -> "1000412"  [label="AST: "];
"1000415" -> "1000412"  [label="CFG: "];
"1000412" -> "1000567"  [label="DDG: mask_bytes"];
"1000158" -> "1000412"  [label="DDG: mask_bytes"];
"1000412" -> "1000519"  [label="DDG: mask_bytes"];
"1000158" -> "1000117"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000166" -> "1000158"  [label="CFG: "];
"1000158" -> "1000567"  [label="DDG: mask_bytes"];
"1000158" -> "1000567"  [label="DDG: apr_pcalloc(r->pool, 4)"];
"1000160" -> "1000158"  [label="DDG: r->pool"];
"1000160" -> "1000158"  [label="DDG: 4"];
"1000158" -> "1000399"  [label="DDG: mask_bytes"];
"1000158" -> "1000519"  [label="DDG: mask_bytes"];
"1000160" -> "1000164"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000164" -> "1000160"  [label="AST: "];
"1000160" -> "1000567"  [label="DDG: r->pool"];
"1000160" -> "1000446"  [label="DDG: r->pool"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000422" -> "1000417"  [label="CFG: "];
"1000426" -> "1000417"  [label="CFG: "];
"1000417" -> "1000567"  [label="DDG: rv"];
"1000417" -> "1000567"  [label="DDG: rv != APR_SUCCESS"];
"1000417" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000395" -> "1000417"  [label="DDG: rv"];
"1000352" -> "1000417"  [label="DDG: APR_SUCCESS"];
"1000243" -> "1000417"  [label="DDG: APR_SUCCESS"];
"1000306" -> "1000417"  [label="DDG: APR_SUCCESS"];
}
