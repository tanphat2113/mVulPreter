digraph "0_httpd_643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef@pointer" {
"1000165" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000167" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000152" [label="(Call,ap_lua_ssl_is_https(r->connection))"];
"1000176" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000174" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000194" [label="(Call,rv == APR_SUCCESS)"];
"1000243" [label="(Call,rv == APR_SUCCESS)"];
"1000306" [label="(Call,rv == APR_SUCCESS)"];
"1000352" [label="(Call,rv == APR_SUCCESS)"];
"1000417" [label="(Call,rv != APR_SUCCESS)"];
"1000225" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000223" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000280" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000278" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000330" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000328" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000397" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000395" [label="(Call,rv = apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000471" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000469" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000558" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000235" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000233" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000292" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000290" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000342" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000340" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000408" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000406" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000500" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000498" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000519" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000528" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000534" [label="(Call,lua_pushboolean(L, fin))"];
"1000561" [label="(Call,&plen)"];
"1000519" [label="(Call,buffer[n] ^= mask_bytes[n%4])"];
"1000453" [label="(Call,buffer[plen] = 0)"];
"1000117" [label="(Block,)"];
"1000308" [label="(Identifier,APR_SUCCESS)"];
"1000235" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000243" [label="(Call,rv == APR_SUCCESS)"];
"1000340" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000469" [label="(Call,rv = apr_socket_recv(sock, buffer+at, &received))"];
"1000402" [label="(Call,&len)"];
"1000286" [label="(Call,&len)"];
"1000180" [label="(Call,&len)"];
"1000293" [label="(Call,r->connection)"];
"1000500" [label="(Call,lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000528" [label="(Call,lua_pushlstring(L, buffer, (size_t) plen))"];
"1000176" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000470" [label="(Identifier,rv)"];
"1000505" [label="(Identifier,remaining)"];
"1000175" [label="(Identifier,rv)"];
"1000352" [label="(Call,rv == APR_SUCCESS)"];
"1000158" [label="(Call,mask_bytes = apr_pcalloc(r->pool, 4))"];
"1000336" [label="(Call,&len)"];
"1000415" [label="(Literal,4)"];
"1000330" [label="(Call,apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000444" [label="(Call,*buffer = apr_palloc(r->pool, plen+1))"];
"1000517" [label="(Identifier,n)"];
"1000153" [label="(Call,r->connection)"];
"1000290" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000433" [label="(Block,)"];
"1000116" [label="(MethodParameterIn,lua_State *L)"];
"1000226" [label="(Identifier,sock)"];
"1000307" [label="(Identifier,rv)"];
"1000418" [label="(Identifier,rv)"];
"1000277" [label="(Block,)"];
"1000504" [label="(Identifier,buffer)"];
"1000530" [label="(Identifier,buffer)"];
"1000204" [label="(Identifier,ubyte)"];
"1000302" [label="(Identifier,payload_short)"];
"1000405" [label="(Block,)"];
"1000232" [label="(Block,)"];
"1000435" [label="(Call,remaining = plen)"];
"1000498" [label="(Call,rv = lua_websocket_readbytes(r->connection, buffer, \n                            remaining))"];
"1000354" [label="(Identifier,APR_SUCCESS)"];
"1000174" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000311" [label="(Identifier,plen)"];
"1000236" [label="(Call,r->connection)"];
"1000178" [label="(Call,&byte)"];
"1000422" [label="(Literal,0)"];
"1000173" [label="(Block,)"];
"1000346" [label="(Call,(char*) &payload_long)"];
"1000531" [label="(Call,(size_t) plen)"];
"1000536" [label="(Identifier,fin)"];
"1000227" [label="(Call,&byte)"];
"1000165" [label="(Call,sock = ap_get_conn_socket(r->connection))"];
"1000224" [label="(Identifier,rv)"];
"1000172" [label="(Identifier,plaintext)"];
"1000222" [label="(Block,)"];
"1000353" [label="(Identifier,rv)"];
"1000499" [label="(Identifier,rv)"];
"1000535" [label="(Identifier,L)"];
"1000280" [label="(Call,apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000234" [label="(Identifier,rv)"];
"1000351" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000357" [label="(Identifier,plen)"];
"1000329" [label="(Identifier,rv)"];
"1000292" [label="(Call,lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2))"];
"1000417" [label="(Call,rv != APR_SUCCESS)"];
"1000559" [label="(Identifier,sock)"];
"1000497" [label="(Block,)"];
"1000184" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000529" [label="(Identifier,L)"];
"1000507" [label="(Identifier,mask)"];
"1000395" [label="(Call,rv = apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000279" [label="(Identifier,rv)"];
"1000244" [label="(Identifier,rv)"];
"1000486" [label="(Call,at += received)"];
"1000151" [label="(Call,ap_lua_ssl_is_https(r->connection) ? 0 : 1)"];
"1000332" [label="(Call,(char*) &payload_long)"];
"1000166" [label="(Identifier,sock)"];
"1000564" [label="(Identifier,L)"];
"1000426" [label="(Identifier,plen)"];
"1000396" [label="(Identifier,rv)"];
"1000193" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000328" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_long, &len))"];
"1000520" [label="(Call,buffer[n])"];
"1000300" [label="(Literal,2)"];
"1000407" [label="(Identifier,rv)"];
"1000186" [label="(Call,lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000342" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8))"];
"1000408" [label="(Call,lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000156" [label="(Literal,0)"];
"1000548" [label="(Call,frame[0] = 0x8A)"];
"1000419" [label="(Identifier,APR_SUCCESS)"];
"1000406" [label="(Call,rv = lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4))"];
"1000241" [label="(Literal,1)"];
"1000239" [label="(Call,&byte)"];
"1000195" [label="(Identifier,rv)"];
"1000364" [label="(Literal,0)"];
"1000501" [label="(Call,r->connection)"];
"1000177" [label="(Identifier,sock)"];
"1000233" [label="(Call,rv = lua_websocket_readbytes(r->connection, &byte, 1))"];
"1000296" [label="(Call,(char*) &payload_short)"];
"1000397" [label="(Call,apr_socket_recv(sock, (char*) mask_bytes, &len))"];
"1000316" [label="(Literal,0)"];
"1000248" [label="(Identifier,ubyte)"];
"1000146" [label="(Call,ap_lua_check_request_rec(L, 1))"];
"1000399" [label="(Call,(char*) mask_bytes)"];
"1000305" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000327" [label="(Block,)"];
"1000343" [label="(Call,r->connection)"];
"1000471" [label="(Call,apr_socket_recv(sock, buffer+at, &received))"];
"1000558" [label="(Call,apr_socket_send(sock, frame, &plen))"];
"1000476" [label="(Call,&received)"];
"1000394" [label="(Block,)"];
"1000291" [label="(Identifier,rv)"];
"1000465" [label="(Block,)"];
"1000223" [label="(Call,rv = apr_socket_recv(sock, &byte, &len))"];
"1000157" [label="(Literal,1)"];
"1000242" [label="(ControlStructure,if (rv == APR_SUCCESS))"];
"1000278" [label="(Call,rv = apr_socket_recv(sock, (char*) &payload_short, &len))"];
"1000167" [label="(Call,ap_get_conn_socket(r->connection))"];
"1000194" [label="(Call,rv == APR_SUCCESS)"];
"1000196" [label="(Identifier,APR_SUCCESS)"];
"1000225" [label="(Call,apr_socket_recv(sock, &byte, &len))"];
"1000560" [label="(Identifier,frame)"];
"1000440" [label="(Call,at = 0)"];
"1000534" [label="(Call,lua_pushboolean(L, fin))"];
"1000480" [label="(Identifier,received)"];
"1000553" [label="(Call,frame[1] = 0)"];
"1000168" [label="(Call,r->connection)"];
"1000398" [label="(Identifier,sock)"];
"1000152" [label="(Call,ap_lua_ssl_is_https(r->connection))"];
"1000281" [label="(Identifier,sock)"];
"1000306" [label="(Call,rv == APR_SUCCESS)"];
"1000282" [label="(Call,(char*) &payload_short)"];
"1000566" [label="(Literal,0)"];
"1000339" [label="(Block,)"];
"1000350" [label="(Literal,8)"];
"1000289" [label="(Block,)"];
"1000472" [label="(Identifier,sock)"];
"1000538" [label="(Literal,2)"];
"1000543" [label="(Block,)"];
"1000341" [label="(Identifier,rv)"];
"1000245" [label="(Identifier,APR_SUCCESS)"];
"1000518" [label="(Block,)"];
"1000523" [label="(Call,mask_bytes[n%4])"];
"1000331" [label="(Identifier,sock)"];
"1000567" [label="(MethodReturn,static int)"];
"1000416" [label="(ControlStructure,if (rv != APR_SUCCESS))"];
"1000473" [label="(Call,buffer+at)"];
"1000412" [label="(Call,(char*) mask_bytes)"];
"1000409" [label="(Call,r->connection)"];
"1000229" [label="(Call,&len)"];
"1000165" -> "1000117"  [label="AST: "];
"1000165" -> "1000167"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000167" -> "1000165"  [label="AST: "];
"1000172" -> "1000165"  [label="CFG: "];
"1000165" -> "1000567"  [label="DDG: sock"];
"1000165" -> "1000567"  [label="DDG: ap_get_conn_socket(r->connection)"];
"1000167" -> "1000165"  [label="DDG: r->connection"];
"1000165" -> "1000176"  [label="DDG: sock"];
"1000165" -> "1000225"  [label="DDG: sock"];
"1000165" -> "1000280"  [label="DDG: sock"];
"1000165" -> "1000330"  [label="DDG: sock"];
"1000165" -> "1000397"  [label="DDG: sock"];
"1000165" -> "1000471"  [label="DDG: sock"];
"1000165" -> "1000558"  [label="DDG: sock"];
"1000167" -> "1000168"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000167" -> "1000567"  [label="DDG: r->connection"];
"1000152" -> "1000167"  [label="DDG: r->connection"];
"1000167" -> "1000186"  [label="DDG: r->connection"];
"1000167" -> "1000235"  [label="DDG: r->connection"];
"1000167" -> "1000292"  [label="DDG: r->connection"];
"1000167" -> "1000342"  [label="DDG: r->connection"];
"1000167" -> "1000408"  [label="DDG: r->connection"];
"1000167" -> "1000500"  [label="DDG: r->connection"];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000153"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000156" -> "1000152"  [label="CFG: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000176" -> "1000174"  [label="AST: "];
"1000176" -> "1000180"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000176" -> "1000567"  [label="DDG: &byte"];
"1000176" -> "1000567"  [label="DDG: &len"];
"1000176" -> "1000567"  [label="DDG: sock"];
"1000176" -> "1000174"  [label="DDG: sock"];
"1000176" -> "1000174"  [label="DDG: &byte"];
"1000176" -> "1000174"  [label="DDG: &len"];
"1000176" -> "1000225"  [label="DDG: sock"];
"1000176" -> "1000225"  [label="DDG: &byte"];
"1000176" -> "1000225"  [label="DDG: &len"];
"1000176" -> "1000235"  [label="DDG: &byte"];
"1000176" -> "1000280"  [label="DDG: sock"];
"1000176" -> "1000280"  [label="DDG: &len"];
"1000176" -> "1000330"  [label="DDG: sock"];
"1000176" -> "1000330"  [label="DDG: &len"];
"1000176" -> "1000397"  [label="DDG: sock"];
"1000176" -> "1000397"  [label="DDG: &len"];
"1000176" -> "1000471"  [label="DDG: sock"];
"1000176" -> "1000558"  [label="DDG: sock"];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000174"  [label="AST: "];
"1000195" -> "1000174"  [label="CFG: "];
"1000174" -> "1000567"  [label="DDG: apr_socket_recv(sock, &byte, &len)"];
"1000174" -> "1000194"  [label="DDG: rv"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000204" -> "1000194"  [label="CFG: "];
"1000566" -> "1000194"  [label="CFG: "];
"1000194" -> "1000567"  [label="DDG: rv == APR_SUCCESS"];
"1000194" -> "1000567"  [label="DDG: rv"];
"1000194" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000184" -> "1000194"  [label="DDG: rv"];
"1000194" -> "1000243"  [label="DDG: APR_SUCCESS"];
"1000243" -> "1000242"  [label="AST: "];
"1000243" -> "1000245"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000245" -> "1000243"  [label="AST: "];
"1000248" -> "1000243"  [label="CFG: "];
"1000566" -> "1000243"  [label="CFG: "];
"1000243" -> "1000567"  [label="DDG: rv"];
"1000243" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000243" -> "1000567"  [label="DDG: rv == APR_SUCCESS"];
"1000233" -> "1000243"  [label="DDG: rv"];
"1000223" -> "1000243"  [label="DDG: rv"];
"1000243" -> "1000306"  [label="DDG: APR_SUCCESS"];
"1000243" -> "1000352"  [label="DDG: APR_SUCCESS"];
"1000243" -> "1000417"  [label="DDG: APR_SUCCESS"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000311" -> "1000306"  [label="CFG: "];
"1000316" -> "1000306"  [label="CFG: "];
"1000306" -> "1000567"  [label="DDG: rv"];
"1000306" -> "1000567"  [label="DDG: rv == APR_SUCCESS"];
"1000306" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000290" -> "1000306"  [label="DDG: rv"];
"1000278" -> "1000306"  [label="DDG: rv"];
"1000306" -> "1000352"  [label="DDG: APR_SUCCESS"];
"1000306" -> "1000417"  [label="DDG: APR_SUCCESS"];
"1000352" -> "1000351"  [label="AST: "];
"1000352" -> "1000354"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000354" -> "1000352"  [label="AST: "];
"1000357" -> "1000352"  [label="CFG: "];
"1000364" -> "1000352"  [label="CFG: "];
"1000352" -> "1000567"  [label="DDG: rv"];
"1000352" -> "1000567"  [label="DDG: rv == APR_SUCCESS"];
"1000352" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000328" -> "1000352"  [label="DDG: rv"];
"1000340" -> "1000352"  [label="DDG: rv"];
"1000352" -> "1000417"  [label="DDG: APR_SUCCESS"];
"1000417" -> "1000416"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000422" -> "1000417"  [label="CFG: "];
"1000426" -> "1000417"  [label="CFG: "];
"1000417" -> "1000567"  [label="DDG: rv"];
"1000417" -> "1000567"  [label="DDG: rv != APR_SUCCESS"];
"1000417" -> "1000567"  [label="DDG: APR_SUCCESS"];
"1000395" -> "1000417"  [label="DDG: rv"];
"1000406" -> "1000417"  [label="DDG: rv"];
"1000225" -> "1000223"  [label="AST: "];
"1000225" -> "1000229"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="AST: "];
"1000223" -> "1000225"  [label="CFG: "];
"1000225" -> "1000567"  [label="DDG: &byte"];
"1000225" -> "1000567"  [label="DDG: sock"];
"1000225" -> "1000567"  [label="DDG: &len"];
"1000225" -> "1000223"  [label="DDG: sock"];
"1000225" -> "1000223"  [label="DDG: &byte"];
"1000225" -> "1000223"  [label="DDG: &len"];
"1000186" -> "1000225"  [label="DDG: &byte"];
"1000225" -> "1000280"  [label="DDG: sock"];
"1000225" -> "1000280"  [label="DDG: &len"];
"1000225" -> "1000330"  [label="DDG: sock"];
"1000225" -> "1000330"  [label="DDG: &len"];
"1000225" -> "1000397"  [label="DDG: sock"];
"1000225" -> "1000397"  [label="DDG: &len"];
"1000225" -> "1000471"  [label="DDG: sock"];
"1000225" -> "1000558"  [label="DDG: sock"];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000223"  [label="AST: "];
"1000244" -> "1000223"  [label="CFG: "];
"1000223" -> "1000567"  [label="DDG: apr_socket_recv(sock, &byte, &len)"];
"1000280" -> "1000278"  [label="AST: "];
"1000280" -> "1000286"  [label="CFG: "];
"1000281" -> "1000280"  [label="AST: "];
"1000282" -> "1000280"  [label="AST: "];
"1000286" -> "1000280"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000280" -> "1000567"  [label="DDG: &len"];
"1000280" -> "1000567"  [label="DDG: (char*) &payload_short"];
"1000280" -> "1000567"  [label="DDG: sock"];
"1000280" -> "1000278"  [label="DDG: sock"];
"1000280" -> "1000278"  [label="DDG: (char*) &payload_short"];
"1000280" -> "1000278"  [label="DDG: &len"];
"1000282" -> "1000280"  [label="DDG: &payload_short"];
"1000280" -> "1000330"  [label="DDG: sock"];
"1000280" -> "1000330"  [label="DDG: &len"];
"1000280" -> "1000397"  [label="DDG: sock"];
"1000280" -> "1000397"  [label="DDG: &len"];
"1000280" -> "1000471"  [label="DDG: sock"];
"1000280" -> "1000558"  [label="DDG: sock"];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000278"  [label="AST: "];
"1000302" -> "1000278"  [label="CFG: "];
"1000278" -> "1000567"  [label="DDG: apr_socket_recv(sock, (char*) &payload_short, &len)"];
"1000330" -> "1000328"  [label="AST: "];
"1000330" -> "1000336"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000336" -> "1000330"  [label="AST: "];
"1000328" -> "1000330"  [label="CFG: "];
"1000330" -> "1000567"  [label="DDG: sock"];
"1000330" -> "1000567"  [label="DDG: &len"];
"1000330" -> "1000567"  [label="DDG: (char*) &payload_long"];
"1000330" -> "1000328"  [label="DDG: sock"];
"1000330" -> "1000328"  [label="DDG: (char*) &payload_long"];
"1000330" -> "1000328"  [label="DDG: &len"];
"1000332" -> "1000330"  [label="DDG: &payload_long"];
"1000330" -> "1000397"  [label="DDG: sock"];
"1000330" -> "1000397"  [label="DDG: &len"];
"1000330" -> "1000471"  [label="DDG: sock"];
"1000330" -> "1000558"  [label="DDG: sock"];
"1000328" -> "1000327"  [label="AST: "];
"1000329" -> "1000328"  [label="AST: "];
"1000353" -> "1000328"  [label="CFG: "];
"1000328" -> "1000567"  [label="DDG: apr_socket_recv(sock, (char*) &payload_long, &len)"];
"1000397" -> "1000395"  [label="AST: "];
"1000397" -> "1000402"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000399" -> "1000397"  [label="AST: "];
"1000402" -> "1000397"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000397" -> "1000567"  [label="DDG: sock"];
"1000397" -> "1000567"  [label="DDG: &len"];
"1000397" -> "1000567"  [label="DDG: (char*) mask_bytes"];
"1000397" -> "1000395"  [label="DDG: sock"];
"1000397" -> "1000395"  [label="DDG: (char*) mask_bytes"];
"1000397" -> "1000395"  [label="DDG: &len"];
"1000399" -> "1000397"  [label="DDG: mask_bytes"];
"1000397" -> "1000471"  [label="DDG: sock"];
"1000397" -> "1000558"  [label="DDG: sock"];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000395"  [label="AST: "];
"1000418" -> "1000395"  [label="CFG: "];
"1000395" -> "1000567"  [label="DDG: apr_socket_recv(sock, (char*) mask_bytes, &len)"];
"1000471" -> "1000469"  [label="AST: "];
"1000471" -> "1000476"  [label="CFG: "];
"1000472" -> "1000471"  [label="AST: "];
"1000473" -> "1000471"  [label="AST: "];
"1000476" -> "1000471"  [label="AST: "];
"1000469" -> "1000471"  [label="CFG: "];
"1000471" -> "1000567"  [label="DDG: sock"];
"1000471" -> "1000567"  [label="DDG: &received"];
"1000471" -> "1000567"  [label="DDG: buffer+at"];
"1000471" -> "1000469"  [label="DDG: sock"];
"1000471" -> "1000469"  [label="DDG: buffer+at"];
"1000471" -> "1000469"  [label="DDG: &received"];
"1000444" -> "1000471"  [label="DDG: buffer"];
"1000453" -> "1000471"  [label="DDG: buffer[plen]"];
"1000440" -> "1000471"  [label="DDG: at"];
"1000486" -> "1000471"  [label="DDG: at"];
"1000469" -> "1000465"  [label="AST: "];
"1000470" -> "1000469"  [label="AST: "];
"1000480" -> "1000469"  [label="CFG: "];
"1000469" -> "1000567"  [label="DDG: apr_socket_recv(sock, buffer+at, &received)"];
"1000469" -> "1000567"  [label="DDG: rv"];
"1000558" -> "1000543"  [label="AST: "];
"1000558" -> "1000561"  [label="CFG: "];
"1000559" -> "1000558"  [label="AST: "];
"1000560" -> "1000558"  [label="AST: "];
"1000561" -> "1000558"  [label="AST: "];
"1000564" -> "1000558"  [label="CFG: "];
"1000558" -> "1000567"  [label="DDG: frame"];
"1000558" -> "1000567"  [label="DDG: apr_socket_send(sock, frame, &plen)"];
"1000558" -> "1000567"  [label="DDG: sock"];
"1000558" -> "1000567"  [label="DDG: &plen"];
"1000553" -> "1000558"  [label="DDG: frame[1]"];
"1000548" -> "1000558"  [label="DDG: frame[0]"];
"1000235" -> "1000233"  [label="AST: "];
"1000235" -> "1000241"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000239" -> "1000235"  [label="AST: "];
"1000241" -> "1000235"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000235" -> "1000567"  [label="DDG: r->connection"];
"1000235" -> "1000567"  [label="DDG: &byte"];
"1000235" -> "1000233"  [label="DDG: r->connection"];
"1000235" -> "1000233"  [label="DDG: &byte"];
"1000235" -> "1000233"  [label="DDG: 1"];
"1000186" -> "1000235"  [label="DDG: r->connection"];
"1000186" -> "1000235"  [label="DDG: &byte"];
"1000235" -> "1000292"  [label="DDG: r->connection"];
"1000235" -> "1000342"  [label="DDG: r->connection"];
"1000235" -> "1000408"  [label="DDG: r->connection"];
"1000235" -> "1000500"  [label="DDG: r->connection"];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000233"  [label="AST: "];
"1000244" -> "1000233"  [label="CFG: "];
"1000233" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, &byte, 1)"];
"1000292" -> "1000290"  [label="AST: "];
"1000292" -> "1000300"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000296" -> "1000292"  [label="AST: "];
"1000300" -> "1000292"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000292" -> "1000567"  [label="DDG: r->connection"];
"1000292" -> "1000567"  [label="DDG: (char*) &payload_short"];
"1000292" -> "1000290"  [label="DDG: r->connection"];
"1000292" -> "1000290"  [label="DDG: (char*) &payload_short"];
"1000292" -> "1000290"  [label="DDG: 2"];
"1000186" -> "1000292"  [label="DDG: r->connection"];
"1000296" -> "1000292"  [label="DDG: &payload_short"];
"1000292" -> "1000342"  [label="DDG: r->connection"];
"1000292" -> "1000408"  [label="DDG: r->connection"];
"1000292" -> "1000500"  [label="DDG: r->connection"];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000290"  [label="AST: "];
"1000302" -> "1000290"  [label="CFG: "];
"1000290" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, \n                        (char*) &payload_short, 2)"];
"1000342" -> "1000340"  [label="AST: "];
"1000342" -> "1000350"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000346" -> "1000342"  [label="AST: "];
"1000350" -> "1000342"  [label="AST: "];
"1000340" -> "1000342"  [label="CFG: "];
"1000342" -> "1000567"  [label="DDG: r->connection"];
"1000342" -> "1000567"  [label="DDG: (char*) &payload_long"];
"1000342" -> "1000340"  [label="DDG: r->connection"];
"1000342" -> "1000340"  [label="DDG: (char*) &payload_long"];
"1000342" -> "1000340"  [label="DDG: 8"];
"1000186" -> "1000342"  [label="DDG: r->connection"];
"1000346" -> "1000342"  [label="DDG: &payload_long"];
"1000342" -> "1000408"  [label="DDG: r->connection"];
"1000342" -> "1000500"  [label="DDG: r->connection"];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000340"  [label="AST: "];
"1000353" -> "1000340"  [label="CFG: "];
"1000340" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, \n                            (char*) &payload_long, 8)"];
"1000408" -> "1000406"  [label="AST: "];
"1000408" -> "1000415"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000412" -> "1000408"  [label="AST: "];
"1000415" -> "1000408"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000408" -> "1000567"  [label="DDG: r->connection"];
"1000408" -> "1000567"  [label="DDG: (char*) mask_bytes"];
"1000408" -> "1000406"  [label="DDG: r->connection"];
"1000408" -> "1000406"  [label="DDG: (char*) mask_bytes"];
"1000408" -> "1000406"  [label="DDG: 4"];
"1000186" -> "1000408"  [label="DDG: r->connection"];
"1000412" -> "1000408"  [label="DDG: mask_bytes"];
"1000408" -> "1000500"  [label="DDG: r->connection"];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000406"  [label="AST: "];
"1000418" -> "1000406"  [label="CFG: "];
"1000406" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, \n                            (char*) mask_bytes, 4)"];
"1000500" -> "1000498"  [label="AST: "];
"1000500" -> "1000505"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000504" -> "1000500"  [label="AST: "];
"1000505" -> "1000500"  [label="AST: "];
"1000498" -> "1000500"  [label="CFG: "];
"1000500" -> "1000567"  [label="DDG: r->connection"];
"1000500" -> "1000567"  [label="DDG: remaining"];
"1000500" -> "1000498"  [label="DDG: r->connection"];
"1000500" -> "1000498"  [label="DDG: buffer"];
"1000500" -> "1000498"  [label="DDG: remaining"];
"1000186" -> "1000500"  [label="DDG: r->connection"];
"1000444" -> "1000500"  [label="DDG: buffer"];
"1000453" -> "1000500"  [label="DDG: buffer[plen]"];
"1000435" -> "1000500"  [label="DDG: remaining"];
"1000500" -> "1000519"  [label="DDG: buffer"];
"1000500" -> "1000528"  [label="DDG: buffer"];
"1000498" -> "1000497"  [label="AST: "];
"1000499" -> "1000498"  [label="AST: "];
"1000507" -> "1000498"  [label="CFG: "];
"1000498" -> "1000567"  [label="DDG: rv"];
"1000498" -> "1000567"  [label="DDG: lua_websocket_readbytes(r->connection, buffer, \n                            remaining)"];
"1000519" -> "1000518"  [label="AST: "];
"1000519" -> "1000523"  [label="CFG: "];
"1000520" -> "1000519"  [label="AST: "];
"1000523" -> "1000519"  [label="AST: "];
"1000517" -> "1000519"  [label="CFG: "];
"1000519" -> "1000567"  [label="DDG: buffer[n]"];
"1000519" -> "1000567"  [label="DDG: buffer[n] ^= mask_bytes[n%4]"];
"1000519" -> "1000567"  [label="DDG: mask_bytes[n%4]"];
"1000444" -> "1000519"  [label="DDG: buffer"];
"1000453" -> "1000519"  [label="DDG: buffer[plen]"];
"1000158" -> "1000519"  [label="DDG: mask_bytes"];
"1000399" -> "1000519"  [label="DDG: mask_bytes"];
"1000412" -> "1000519"  [label="DDG: mask_bytes"];
"1000519" -> "1000528"  [label="DDG: buffer[n]"];
"1000528" -> "1000433"  [label="AST: "];
"1000528" -> "1000531"  [label="CFG: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000531" -> "1000528"  [label="AST: "];
"1000535" -> "1000528"  [label="CFG: "];
"1000528" -> "1000567"  [label="DDG: lua_pushlstring(L, buffer, (size_t) plen)"];
"1000528" -> "1000567"  [label="DDG: (size_t) plen"];
"1000528" -> "1000567"  [label="DDG: buffer"];
"1000146" -> "1000528"  [label="DDG: L"];
"1000116" -> "1000528"  [label="DDG: L"];
"1000444" -> "1000528"  [label="DDG: buffer"];
"1000453" -> "1000528"  [label="DDG: buffer[plen]"];
"1000531" -> "1000528"  [label="DDG: plen"];
"1000528" -> "1000534"  [label="DDG: L"];
"1000534" -> "1000433"  [label="AST: "];
"1000534" -> "1000536"  [label="CFG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000536" -> "1000534"  [label="AST: "];
"1000538" -> "1000534"  [label="CFG: "];
"1000534" -> "1000567"  [label="DDG: fin"];
"1000534" -> "1000567"  [label="DDG: lua_pushboolean(L, fin)"];
"1000534" -> "1000567"  [label="DDG: L"];
"1000116" -> "1000534"  [label="DDG: L"];
}
