digraph "0_Android_9667e3eff2d34c3797c3b529370de47b2c1f1bf6@API" {
"1000353" [label="(Call,streamCTR = data.readInt32())"];
"1000363" [label="(Call,decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000361" [label="(Call,err = decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000369" [label="(Call,reply->writeInt32(err))"];
"1000372" [label="(Call,err == OK)"];
"1000386" [label="(Return,return OK;)"];
"1000376" [label="(Call,reply->write(outData, size))"];
"1000379" [label="(Call,free(inData))"];
"1000353" [label="(Call,streamCTR = data.readInt32())"];
"1000367" [label="(Identifier,inputCTR)"];
"1000386" [label="(Return,return OK;)"];
"1000369" [label="(Call,reply->writeInt32(err))"];
"1000374" [label="(Identifier,OK)"];
"1000349" [label="(Call,data.read(inData, size))"];
"1000387" [label="(Identifier,OK)"];
"1000368" [label="(Identifier,outData)"];
"1000358" [label="(Identifier,inputCTR)"];
"1000379" [label="(Call,free(inData))"];
"1000366" [label="(Identifier,streamCTR)"];
"1000363" [label="(Call,decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000395" [label="(MethodReturn,status_t)"];
"1000364" [label="(Identifier,inData)"];
"1000371" [label="(ControlStructure,if (err == OK))"];
"1000380" [label="(Identifier,inData)"];
"1000308" [label="(Block,)"];
"1000354" [label="(Identifier,streamCTR)"];
"1000370" [label="(Identifier,err)"];
"1000355" [label="(Call,data.readInt32())"];
"1000373" [label="(Identifier,err)"];
"1000378" [label="(Identifier,size)"];
"1000382" [label="(Identifier,inData)"];
"1000376" [label="(Call,reply->write(outData, size))"];
"1000365" [label="(Identifier,size)"];
"1000372" [label="(Call,err == OK)"];
"1000375" [label="(Block,)"];
"1000361" [label="(Call,err = decrypt(inData, size, streamCTR, inputCTR, outData))"];
"1000342" [label="(Call,*outData = (uint8_t *)inData + size)"];
"1000377" [label="(Identifier,outData)"];
"1000362" [label="(Identifier,err)"];
"1000357" [label="(Call,inputCTR = data.readInt64())"];
"1000353" -> "1000308"  [label="AST: "];
"1000353" -> "1000355"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000355" -> "1000353"  [label="AST: "];
"1000358" -> "1000353"  [label="CFG: "];
"1000353" -> "1000395"  [label="DDG: data.readInt32()"];
"1000353" -> "1000363"  [label="DDG: streamCTR"];
"1000363" -> "1000361"  [label="AST: "];
"1000363" -> "1000368"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000367" -> "1000363"  [label="AST: "];
"1000368" -> "1000363"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000363" -> "1000395"  [label="DDG: size"];
"1000363" -> "1000395"  [label="DDG: inputCTR"];
"1000363" -> "1000395"  [label="DDG: streamCTR"];
"1000363" -> "1000361"  [label="DDG: streamCTR"];
"1000363" -> "1000361"  [label="DDG: inputCTR"];
"1000363" -> "1000361"  [label="DDG: inData"];
"1000363" -> "1000361"  [label="DDG: size"];
"1000363" -> "1000361"  [label="DDG: outData"];
"1000349" -> "1000363"  [label="DDG: inData"];
"1000349" -> "1000363"  [label="DDG: size"];
"1000357" -> "1000363"  [label="DDG: inputCTR"];
"1000342" -> "1000363"  [label="DDG: outData"];
"1000363" -> "1000376"  [label="DDG: outData"];
"1000363" -> "1000376"  [label="DDG: size"];
"1000363" -> "1000379"  [label="DDG: inData"];
"1000361" -> "1000308"  [label="AST: "];
"1000362" -> "1000361"  [label="AST: "];
"1000370" -> "1000361"  [label="CFG: "];
"1000361" -> "1000395"  [label="DDG: decrypt(inData, size, streamCTR, inputCTR, outData)"];
"1000361" -> "1000369"  [label="DDG: err"];
"1000369" -> "1000308"  [label="AST: "];
"1000369" -> "1000370"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000373" -> "1000369"  [label="CFG: "];
"1000369" -> "1000395"  [label="DDG: reply->writeInt32(err)"];
"1000369" -> "1000372"  [label="DDG: err"];
"1000372" -> "1000371"  [label="AST: "];
"1000372" -> "1000374"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="AST: "];
"1000377" -> "1000372"  [label="CFG: "];
"1000380" -> "1000372"  [label="CFG: "];
"1000372" -> "1000395"  [label="DDG: err"];
"1000372" -> "1000395"  [label="DDG: err == OK"];
"1000372" -> "1000395"  [label="DDG: OK"];
"1000372" -> "1000386"  [label="DDG: OK"];
"1000386" -> "1000308"  [label="AST: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000395" -> "1000386"  [label="CFG: "];
"1000386" -> "1000395"  [label="DDG: <RET>"];
"1000387" -> "1000386"  [label="DDG: OK"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000380" -> "1000376"  [label="CFG: "];
"1000376" -> "1000395"  [label="DDG: reply->write(outData, size)"];
"1000376" -> "1000395"  [label="DDG: size"];
"1000379" -> "1000308"  [label="AST: "];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="CFG: "];
}
