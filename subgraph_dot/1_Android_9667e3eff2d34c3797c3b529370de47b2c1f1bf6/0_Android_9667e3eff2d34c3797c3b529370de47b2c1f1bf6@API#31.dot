digraph "0_Android_9667e3eff2d34c3797c3b529370de47b2c1f1bf6@API" {
"1000210" [label="(Call,streamCTR = data.readInt32())"];
"1000217" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000215" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000224" [label="(Call,reply->writeInt32(err))"];
"1000227" [label="(Call,err == OK)"];
"1000243" [label="(Return,return OK;)"];
"1000233" [label="(Call,reply->write(outData, size))"];
"1000236" [label="(Call,free(inData))"];
"1000219" [label="(Identifier,size)"];
"1000218" [label="(Identifier,inData)"];
"1000199" [label="(Call,*outData = (uint8_t *)inData + size)"];
"1000217" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000232" [label="(Identifier,inputCTR)"];
"1000211" [label="(Identifier,streamCTR)"];
"1000243" [label="(Return,return OK;)"];
"1000169" [label="(Block,)"];
"1000216" [label="(Identifier,err)"];
"1000235" [label="(Identifier,size)"];
"1000244" [label="(Identifier,OK)"];
"1000212" [label="(Call,data.readInt32())"];
"1000224" [label="(Call,reply->writeInt32(err))"];
"1000230" [label="(Block,)"];
"1000395" [label="(MethodReturn,status_t)"];
"1000210" [label="(Call,streamCTR = data.readInt32())"];
"1000206" [label="(Call,data.read(inData, size))"];
"1000237" [label="(Identifier,inData)"];
"1000220" [label="(Identifier,streamCTR)"];
"1000226" [label="(ControlStructure,if (err == OK))"];
"1000215" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000236" [label="(Call,free(inData))"];
"1000233" [label="(Call,reply->write(outData, size))"];
"1000228" [label="(Identifier,err)"];
"1000227" [label="(Call,err == OK)"];
"1000223" [label="(Identifier,outData)"];
"1000225" [label="(Identifier,err)"];
"1000234" [label="(Identifier,outData)"];
"1000239" [label="(Identifier,inData)"];
"1000221" [label="(Call,&inputCTR)"];
"1000229" [label="(Identifier,OK)"];
"1000210" -> "1000169"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000216" -> "1000210"  [label="CFG: "];
"1000210" -> "1000395"  [label="DDG: data.readInt32()"];
"1000210" -> "1000217"  [label="DDG: streamCTR"];
"1000217" -> "1000215"  [label="AST: "];
"1000217" -> "1000223"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000220" -> "1000217"  [label="AST: "];
"1000221" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000217" -> "1000395"  [label="DDG: &inputCTR"];
"1000217" -> "1000395"  [label="DDG: size"];
"1000217" -> "1000395"  [label="DDG: streamCTR"];
"1000217" -> "1000215"  [label="DDG: inData"];
"1000217" -> "1000215"  [label="DDG: size"];
"1000217" -> "1000215"  [label="DDG: outData"];
"1000217" -> "1000215"  [label="DDG: &inputCTR"];
"1000217" -> "1000215"  [label="DDG: streamCTR"];
"1000206" -> "1000217"  [label="DDG: inData"];
"1000206" -> "1000217"  [label="DDG: size"];
"1000199" -> "1000217"  [label="DDG: outData"];
"1000217" -> "1000233"  [label="DDG: outData"];
"1000217" -> "1000233"  [label="DDG: size"];
"1000217" -> "1000236"  [label="DDG: inData"];
"1000215" -> "1000169"  [label="AST: "];
"1000216" -> "1000215"  [label="AST: "];
"1000225" -> "1000215"  [label="CFG: "];
"1000215" -> "1000395"  [label="DDG: encrypt(inData, size, streamCTR, &inputCTR, outData)"];
"1000215" -> "1000224"  [label="DDG: err"];
"1000224" -> "1000169"  [label="AST: "];
"1000224" -> "1000225"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="CFG: "];
"1000224" -> "1000395"  [label="DDG: reply->writeInt32(err)"];
"1000224" -> "1000227"  [label="DDG: err"];
"1000227" -> "1000226"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000237" -> "1000227"  [label="CFG: "];
"1000227" -> "1000395"  [label="DDG: err == OK"];
"1000227" -> "1000395"  [label="DDG: err"];
"1000227" -> "1000395"  [label="DDG: OK"];
"1000227" -> "1000243"  [label="DDG: OK"];
"1000243" -> "1000169"  [label="AST: "];
"1000243" -> "1000244"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000395" -> "1000243"  [label="CFG: "];
"1000243" -> "1000395"  [label="DDG: <RET>"];
"1000244" -> "1000243"  [label="DDG: OK"];
"1000233" -> "1000230"  [label="AST: "];
"1000233" -> "1000235"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000237" -> "1000233"  [label="CFG: "];
"1000233" -> "1000395"  [label="DDG: reply->write(outData, size)"];
"1000233" -> "1000395"  [label="DDG: size"];
"1000236" -> "1000169"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="CFG: "];
}
