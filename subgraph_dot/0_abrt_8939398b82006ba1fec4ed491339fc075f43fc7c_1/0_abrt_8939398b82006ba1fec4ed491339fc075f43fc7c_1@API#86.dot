digraph "0_abrt_8939398b82006ba1fec4ed491339fc075f43fc7c_1@API" {
"1001173" [label="(Call,close(user_core_fd))"];
"1001168" [label="(Call,fsync(user_core_fd))"];
"1001160" [label="(Call,copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1001153" [label="(Call,user_core_fd >= 0)"];
"1000463" [label="(Call,user_core_fd = open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000465" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000428" [label="(Call,tmp_fsuid != uid)"];
"1000420" [label="(Call,tmp_fsuid = get_fsuid())"];
"1000315" [label="(Call,uid = xatoi_positive(argv[4]))"];
"1000317" [label="(Call,xatoi_positive(argv[4]))"];
"1000151" [label="(MethodParameterIn,char** argv)"];
"1000439" [label="(Call,fsuid = tmp_fsuid)"];
"1000432" [label="(Call,fsuid = 0)"];
"1000416" [label="(Call,fsuid = uid)"];
"1000407" [label="(Call,(long)pid)"];
"1000399" [label="(Call,get_cwd(pid))"];
"1000377" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000308" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000310" [label="(Call,xatoi_positive(argv[3]))"];
"1000324" [label="(Call,pid <= 0)"];
"1000277" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000393" [label="(Call,(long)pid)"];
"1000460" [label="(Call,ulimit_c != 0)"];
"1000284" [label="(Call,ulimit_c < 0)"];
"1000275" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000288" [label="(Call,ulimit_c = ~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000290" [label="(Call,~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000291" [label="(Call,(off_t)1 << (sizeof(off_t)*8-1))"];
"1000292" [label="(Call,(off_t)1)"];
"1000295" [label="(Call,sizeof(off_t)*8-1)"];
"1000296" [label="(Call,sizeof(off_t)*8)"];
"1001172" [label="(Call,close(user_core_fd) != 0)"];
"1001171" [label="(Call,close(user_core_fd) != 0 || core_size < 0)"];
"1001166" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0)"];
"1000316" [label="(Identifier,uid)"];
"1001175" [label="(Literal,0)"];
"1001160" [label="(Call,copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1000480" [label="(Call,(long)pid)"];
"1000469" [label="(Call,&argv[1])"];
"1001200" [label="(Identifier,ulimit_c)"];
"1000645" [label="(Call,(long)pid)"];
"1000467" [label="(Identifier,fsuid)"];
"1000295" [label="(Call,sizeof(off_t)*8-1)"];
"1000308" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000458" [label="(Call,setting_MakeCompatCore && ulimit_c != 0)"];
"1000375" [label="(Call,*executable = get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1001169" [label="(Identifier,user_core_fd)"];
"1000400" [label="(Identifier,pid)"];
"1000326" [label="(Literal,0)"];
"1000288" [label="(Call,ulimit_c = ~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000395" [label="(Identifier,pid)"];
"1000460" [label="(Call,ulimit_c != 0)"];
"1000453" [label="(Call,g_settings_privatereports ? 0 : fsuid)"];
"1000318" [label="(Call,argv[4])"];
"1000203" [label="(Call,strchrnul(argv[i], ' '))"];
"1000422" [label="(Call,get_fsuid())"];
"1000462" [label="(Literal,0)"];
"1000285" [label="(Identifier,ulimit_c)"];
"1000431" [label="(Block,)"];
"1000281" [label="(Identifier,NULL)"];
"1000277" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000378" [label="(Identifier,pid)"];
"1000361" [label="(Call,argv[8] = uts.nodename)"];
"1001170" [label="(Literal,0)"];
"1000184" [label="(Call,strchr(argv[1], ' '))"];
"1000396" [label="(Identifier,executable)"];
"1000420" [label="(Call,tmp_fsuid = get_fsuid())"];
"1001162" [label="(Identifier,user_core_fd)"];
"1001164" [label="(Identifier,COPYFD_SPARSE)"];
"1000618" [label="(Call,(long)pid)"];
"1000461" [label="(Identifier,ulimit_c)"];
"1000457" [label="(ControlStructure,if (setting_MakeCompatCore && ulimit_c != 0))"];
"1000278" [label="(Call,argv[2])"];
"1000429" [label="(Identifier,tmp_fsuid)"];
"1001171" [label="(Call,close(user_core_fd) != 0 || core_size < 0)"];
"1000151" [label="(MethodParameterIn,char** argv)"];
"1001165" [label="(ControlStructure,if (fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0))"];
"1001161" [label="(Identifier,STDIN_FILENO)"];
"1000303" [label="(Identifier,pid_str)"];
"1000299" [label="(Literal,8)"];
"1001159" [label="(Identifier,core_size)"];
"1000322" [label="(Call,errno || pid <= 0)"];
"1000317" [label="(Call,xatoi_positive(argv[4]))"];
"1000310" [label="(Call,xatoi_positive(argv[3]))"];
"1000315" [label="(Call,uid = xatoi_positive(argv[4]))"];
"1000421" [label="(Identifier,tmp_fsuid)"];
"1000324" [label="(Call,pid <= 0)"];
"1000296" [label="(Call,sizeof(off_t)*8)"];
"1000451" [label="(Call,dduid = g_settings_privatereports ? 0 : fsuid)"];
"1000466" [label="(Identifier,uid)"];
"1000452" [label="(Identifier,dduid)"];
"1000425" [label="(Identifier,suid_policy)"];
"1000264" [label="(Call,* signal_str = argv[1])"];
"1000393" [label="(Call,(long)pid)"];
"1001163" [label="(Identifier,ulimit_c)"];
"1000464" [label="(Identifier,user_core_fd)"];
"1001177" [label="(Identifier,core_size)"];
"1000309" [label="(Identifier,pid)"];
"1000323" [label="(Identifier,errno)"];
"1000407" [label="(Call,(long)pid)"];
"1000289" [label="(Identifier,ulimit_c)"];
"1000353" [label="(Call,!argv[8])"];
"1000284" [label="(Call,ulimit_c < 0)"];
"1000416" [label="(Call,fsuid = uid)"];
"1000409" [label="(Identifier,pid)"];
"1001167" [label="(Call,fsync(user_core_fd) != 0)"];
"1001166" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0)"];
"1001176" [label="(Call,core_size < 0)"];
"1000152" [label="(Block,)"];
"1001168" [label="(Call,fsync(user_core_fd))"];
"1000475" [label="(Identifier,executable)"];
"1001172" [label="(Call,close(user_core_fd) != 0)"];
"1000397" [label="(Call,user_pwd = get_cwd(pid))"];
"1000292" [label="(Call,(off_t)1)"];
"1000463" [label="(Call,user_core_fd = open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000302" [label="(Call,*pid_str = argv[3])"];
"1000283" [label="(ControlStructure,if (ulimit_c < 0))"];
"1000297" [label="(Call,sizeof(off_t))"];
"1000294" [label="(Literal,1)"];
"1000276" [label="(Identifier,ulimit_c)"];
"1000291" [label="(Call,(off_t)1 << (sizeof(off_t)*8-1))"];
"1000439" [label="(Call,fsuid = tmp_fsuid)"];
"1000311" [label="(Call,argv[3])"];
"1000437" [label="(Identifier,suid_policy)"];
"1000465" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000433" [label="(Identifier,fsuid)"];
"1000377" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000391" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000325" [label="(Identifier,pid)"];
"1000428" [label="(Call,tmp_fsuid != uid)"];
"1000275" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1001158" [label="(Call,core_size = copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1000282" [label="(Literal,10)"];
"1000178" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME [HOSTNAME]\", argv[0]))"];
"1001221" [label="(Call,(long)pid)"];
"1000290" [label="(Call,~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000404" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1001154" [label="(Identifier,user_core_fd)"];
"1000440" [label="(Identifier,fsuid)"];
"1000328" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1001231" [label="(Identifier,proc_cwd)"];
"1000379" [label="(Call,setting_SaveBinaryImage ? &src_fd_binary : NULL)"];
"1000468" [label="(Identifier,pid)"];
"1000298" [label="(Identifier,off_t)"];
"1000399" [label="(Call,get_cwd(pid))"];
"1000434" [label="(Literal,0)"];
"1000441" [label="(Identifier,tmp_fsuid)"];
"1001174" [label="(Identifier,user_core_fd)"];
"1000427" [label="(ControlStructure,if (tmp_fsuid != uid))"];
"1000300" [label="(Literal,1)"];
"1000430" [label="(Identifier,uid)"];
"1001152" [label="(ControlStructure,if (user_core_fd >= 0))"];
"1001181" [label="(Literal,\"Error writing '%s' at '%s'\")"];
"1000435" [label="(ControlStructure,if (suid_policy == DUMP_SUID_UNSAFE))"];
"1000287" [label="(Block,)"];
"1000432" [label="(Call,fsuid = 0)"];
"1000417" [label="(Identifier,fsuid)"];
"1001153" [label="(Call,user_core_fd >= 0)"];
"1000286" [label="(Literal,0)"];
"1001199" [label="(Call,ulimit_c == 0)"];
"1001237" [label="(MethodReturn,int)"];
"1000418" [label="(Identifier,uid)"];
"1001173" [label="(Call,close(user_core_fd))"];
"1000412" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1001155" [label="(Literal,0)"];
"1001173" -> "1001172"  [label="AST: "];
"1001173" -> "1001174"  [label="CFG: "];
"1001174" -> "1001173"  [label="AST: "];
"1001175" -> "1001173"  [label="CFG: "];
"1001173" -> "1001237"  [label="DDG: user_core_fd"];
"1001173" -> "1001172"  [label="DDG: user_core_fd"];
"1001168" -> "1001173"  [label="DDG: user_core_fd"];
"1001168" -> "1001167"  [label="AST: "];
"1001168" -> "1001169"  [label="CFG: "];
"1001169" -> "1001168"  [label="AST: "];
"1001170" -> "1001168"  [label="CFG: "];
"1001168" -> "1001237"  [label="DDG: user_core_fd"];
"1001168" -> "1001167"  [label="DDG: user_core_fd"];
"1001160" -> "1001168"  [label="DDG: user_core_fd"];
"1001160" -> "1001158"  [label="AST: "];
"1001160" -> "1001164"  [label="CFG: "];
"1001161" -> "1001160"  [label="AST: "];
"1001162" -> "1001160"  [label="AST: "];
"1001163" -> "1001160"  [label="AST: "];
"1001164" -> "1001160"  [label="AST: "];
"1001158" -> "1001160"  [label="CFG: "];
"1001160" -> "1001237"  [label="DDG: ulimit_c"];
"1001160" -> "1001237"  [label="DDG: COPYFD_SPARSE"];
"1001160" -> "1001237"  [label="DDG: STDIN_FILENO"];
"1001160" -> "1001158"  [label="DDG: STDIN_FILENO"];
"1001160" -> "1001158"  [label="DDG: user_core_fd"];
"1001160" -> "1001158"  [label="DDG: ulimit_c"];
"1001160" -> "1001158"  [label="DDG: COPYFD_SPARSE"];
"1001153" -> "1001160"  [label="DDG: user_core_fd"];
"1000460" -> "1001160"  [label="DDG: ulimit_c"];
"1000284" -> "1001160"  [label="DDG: ulimit_c"];
"1000288" -> "1001160"  [label="DDG: ulimit_c"];
"1001160" -> "1001199"  [label="DDG: ulimit_c"];
"1001153" -> "1001152"  [label="AST: "];
"1001153" -> "1001155"  [label="CFG: "];
"1001154" -> "1001153"  [label="AST: "];
"1001155" -> "1001153"  [label="AST: "];
"1001159" -> "1001153"  [label="CFG: "];
"1001231" -> "1001153"  [label="CFG: "];
"1001153" -> "1001237"  [label="DDG: user_core_fd"];
"1001153" -> "1001237"  [label="DDG: user_core_fd >= 0"];
"1000463" -> "1001153"  [label="DDG: user_core_fd"];
"1000463" -> "1000457"  [label="AST: "];
"1000463" -> "1000465"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000465" -> "1000463"  [label="AST: "];
"1000475" -> "1000463"  [label="CFG: "];
"1000463" -> "1001237"  [label="DDG: open_user_core(uid, fsuid, pid, &argv[1])"];
"1000463" -> "1001237"  [label="DDG: user_core_fd"];
"1000465" -> "1000463"  [label="DDG: uid"];
"1000465" -> "1000463"  [label="DDG: fsuid"];
"1000465" -> "1000463"  [label="DDG: pid"];
"1000465" -> "1000463"  [label="DDG: &argv[1]"];
"1000465" -> "1000469"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000465"  [label="AST: "];
"1000468" -> "1000465"  [label="AST: "];
"1000469" -> "1000465"  [label="AST: "];
"1000465" -> "1001237"  [label="DDG: pid"];
"1000465" -> "1001237"  [label="DDG: fsuid"];
"1000465" -> "1001237"  [label="DDG: &argv[1]"];
"1000465" -> "1001237"  [label="DDG: uid"];
"1000428" -> "1000465"  [label="DDG: uid"];
"1000439" -> "1000465"  [label="DDG: fsuid"];
"1000432" -> "1000465"  [label="DDG: fsuid"];
"1000416" -> "1000465"  [label="DDG: fsuid"];
"1000407" -> "1000465"  [label="DDG: pid"];
"1000465" -> "1000480"  [label="DDG: pid"];
"1000465" -> "1000618"  [label="DDG: pid"];
"1000465" -> "1000645"  [label="DDG: pid"];
"1000465" -> "1001221"  [label="DDG: pid"];
"1000428" -> "1000427"  [label="AST: "];
"1000428" -> "1000430"  [label="CFG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000428"  [label="AST: "];
"1000433" -> "1000428"  [label="CFG: "];
"1000452" -> "1000428"  [label="CFG: "];
"1000428" -> "1001237"  [label="DDG: tmp_fsuid != uid"];
"1000428" -> "1001237"  [label="DDG: uid"];
"1000428" -> "1001237"  [label="DDG: tmp_fsuid"];
"1000420" -> "1000428"  [label="DDG: tmp_fsuid"];
"1000315" -> "1000428"  [label="DDG: uid"];
"1000428" -> "1000439"  [label="DDG: tmp_fsuid"];
"1000420" -> "1000152"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000421" -> "1000420"  [label="AST: "];
"1000422" -> "1000420"  [label="AST: "];
"1000425" -> "1000420"  [label="CFG: "];
"1000420" -> "1001237"  [label="DDG: get_fsuid()"];
"1000315" -> "1000152"  [label="AST: "];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000323" -> "1000315"  [label="CFG: "];
"1000315" -> "1001237"  [label="DDG: xatoi_positive(argv[4])"];
"1000317" -> "1000315"  [label="DDG: argv[4]"];
"1000315" -> "1000416"  [label="DDG: uid"];
"1000317" -> "1000318"  [label="CFG: "];
"1000318" -> "1000317"  [label="AST: "];
"1000317" -> "1001237"  [label="DDG: argv[4]"];
"1000151" -> "1000317"  [label="DDG: argv"];
"1000151" -> "1000149"  [label="AST: "];
"1000151" -> "1001237"  [label="DDG: argv"];
"1000151" -> "1000178"  [label="DDG: argv"];
"1000151" -> "1000184"  [label="DDG: argv"];
"1000151" -> "1000203"  [label="DDG: argv"];
"1000151" -> "1000264"  [label="DDG: argv"];
"1000151" -> "1000277"  [label="DDG: argv"];
"1000151" -> "1000302"  [label="DDG: argv"];
"1000151" -> "1000310"  [label="DDG: argv"];
"1000151" -> "1000328"  [label="DDG: argv"];
"1000151" -> "1000353"  [label="DDG: argv"];
"1000151" -> "1000361"  [label="DDG: argv"];
"1000439" -> "1000435"  [label="AST: "];
"1000439" -> "1000441"  [label="CFG: "];
"1000440" -> "1000439"  [label="AST: "];
"1000441" -> "1000439"  [label="AST: "];
"1000452" -> "1000439"  [label="CFG: "];
"1000439" -> "1001237"  [label="DDG: tmp_fsuid"];
"1000439" -> "1000451"  [label="DDG: fsuid"];
"1000439" -> "1000453"  [label="DDG: fsuid"];
"1000432" -> "1000431"  [label="AST: "];
"1000432" -> "1000434"  [label="CFG: "];
"1000433" -> "1000432"  [label="AST: "];
"1000434" -> "1000432"  [label="AST: "];
"1000437" -> "1000432"  [label="CFG: "];
"1000432" -> "1000451"  [label="DDG: fsuid"];
"1000432" -> "1000453"  [label="DDG: fsuid"];
"1000416" -> "1000152"  [label="AST: "];
"1000416" -> "1000418"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000418" -> "1000416"  [label="AST: "];
"1000421" -> "1000416"  [label="CFG: "];
"1000416" -> "1000451"  [label="DDG: fsuid"];
"1000416" -> "1000453"  [label="DDG: fsuid"];
"1000407" -> "1000404"  [label="AST: "];
"1000407" -> "1000409"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000409" -> "1000407"  [label="AST: "];
"1000404" -> "1000407"  [label="CFG: "];
"1000407" -> "1001237"  [label="DDG: pid"];
"1000407" -> "1000404"  [label="DDG: pid"];
"1000399" -> "1000407"  [label="DDG: pid"];
"1000407" -> "1000480"  [label="DDG: pid"];
"1000407" -> "1000618"  [label="DDG: pid"];
"1000407" -> "1000645"  [label="DDG: pid"];
"1000407" -> "1001221"  [label="DDG: pid"];
"1000399" -> "1000397"  [label="AST: "];
"1000399" -> "1000400"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000399" -> "1000397"  [label="DDG: pid"];
"1000377" -> "1000399"  [label="DDG: pid"];
"1000393" -> "1000399"  [label="DDG: pid"];
"1000377" -> "1000375"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000378" -> "1000377"  [label="AST: "];
"1000379" -> "1000377"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000377" -> "1001237"  [label="DDG: setting_SaveBinaryImage ? &src_fd_binary : NULL"];
"1000377" -> "1000375"  [label="DDG: pid"];
"1000377" -> "1000375"  [label="DDG: setting_SaveBinaryImage ? &src_fd_binary : NULL"];
"1000308" -> "1000377"  [label="DDG: pid"];
"1000324" -> "1000377"  [label="DDG: pid"];
"1000277" -> "1000377"  [label="DDG: NULL"];
"1000377" -> "1000393"  [label="DDG: pid"];
"1000308" -> "1000152"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000316" -> "1000308"  [label="CFG: "];
"1000308" -> "1001237"  [label="DDG: xatoi_positive(argv[3])"];
"1000310" -> "1000308"  [label="DDG: argv[3]"];
"1000308" -> "1000324"  [label="DDG: pid"];
"1000310" -> "1000311"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000310" -> "1001237"  [label="DDG: argv[3]"];
"1000310" -> "1000328"  [label="DDG: argv[3]"];
"1000324" -> "1000322"  [label="AST: "];
"1000324" -> "1000326"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000326" -> "1000324"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000324" -> "1000322"  [label="DDG: pid"];
"1000324" -> "1000322"  [label="DDG: 0"];
"1000277" -> "1000275"  [label="AST: "];
"1000277" -> "1000282"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000281" -> "1000277"  [label="AST: "];
"1000282" -> "1000277"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000277" -> "1001237"  [label="DDG: argv[2]"];
"1000277" -> "1000275"  [label="DDG: argv[2]"];
"1000277" -> "1000275"  [label="DDG: NULL"];
"1000277" -> "1000275"  [label="DDG: 10"];
"1000277" -> "1000328"  [label="DDG: argv[2]"];
"1000277" -> "1000379"  [label="DDG: NULL"];
"1000277" -> "1000412"  [label="DDG: NULL"];
"1000393" -> "1000391"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000396" -> "1000393"  [label="CFG: "];
"1000393" -> "1000391"  [label="DDG: pid"];
"1000460" -> "1000458"  [label="AST: "];
"1000460" -> "1000462"  [label="CFG: "];
"1000461" -> "1000460"  [label="AST: "];
"1000462" -> "1000460"  [label="AST: "];
"1000458" -> "1000460"  [label="CFG: "];
"1000460" -> "1001237"  [label="DDG: ulimit_c"];
"1000460" -> "1000458"  [label="DDG: ulimit_c"];
"1000460" -> "1000458"  [label="DDG: 0"];
"1000284" -> "1000460"  [label="DDG: ulimit_c"];
"1000288" -> "1000460"  [label="DDG: ulimit_c"];
"1000284" -> "1000283"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000285" -> "1000284"  [label="AST: "];
"1000286" -> "1000284"  [label="AST: "];
"1000289" -> "1000284"  [label="CFG: "];
"1000303" -> "1000284"  [label="CFG: "];
"1000284" -> "1001237"  [label="DDG: ulimit_c"];
"1000284" -> "1001237"  [label="DDG: ulimit_c < 0"];
"1000275" -> "1000284"  [label="DDG: ulimit_c"];
"1000275" -> "1000152"  [label="AST: "];
"1000276" -> "1000275"  [label="AST: "];
"1000285" -> "1000275"  [label="CFG: "];
"1000275" -> "1001237"  [label="DDG: strtoull(argv[2], NULL, 10)"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000303" -> "1000288"  [label="CFG: "];
"1000288" -> "1001237"  [label="DDG: ~((off_t)1 << (sizeof(off_t)*8-1))"];
"1000288" -> "1001237"  [label="DDG: ulimit_c"];
"1000290" -> "1000288"  [label="DDG: (off_t)1 << (sizeof(off_t)*8-1)"];
"1000290" -> "1000291"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000290" -> "1001237"  [label="DDG: (off_t)1 << (sizeof(off_t)*8-1)"];
"1000291" -> "1000290"  [label="DDG: (off_t)1"];
"1000291" -> "1000290"  [label="DDG: sizeof(off_t)*8-1"];
"1000291" -> "1000295"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000295" -> "1000291"  [label="AST: "];
"1000291" -> "1001237"  [label="DDG: (off_t)1"];
"1000291" -> "1001237"  [label="DDG: sizeof(off_t)*8-1"];
"1000292" -> "1000291"  [label="DDG: 1"];
"1000295" -> "1000291"  [label="DDG: sizeof(off_t)*8"];
"1000295" -> "1000291"  [label="DDG: 1"];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000295" -> "1000300"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000300" -> "1000295"  [label="AST: "];
"1000295" -> "1001237"  [label="DDG: sizeof(off_t)*8"];
"1000296" -> "1000295"  [label="DDG: 8"];
"1000296" -> "1000299"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000299" -> "1000296"  [label="AST: "];
"1000300" -> "1000296"  [label="CFG: "];
"1001172" -> "1001171"  [label="AST: "];
"1001172" -> "1001175"  [label="CFG: "];
"1001175" -> "1001172"  [label="AST: "];
"1001177" -> "1001172"  [label="CFG: "];
"1001171" -> "1001172"  [label="CFG: "];
"1001172" -> "1001237"  [label="DDG: close(user_core_fd)"];
"1001172" -> "1001171"  [label="DDG: close(user_core_fd)"];
"1001172" -> "1001171"  [label="DDG: 0"];
"1001171" -> "1001166"  [label="AST: "];
"1001171" -> "1001176"  [label="CFG: "];
"1001176" -> "1001171"  [label="AST: "];
"1001166" -> "1001171"  [label="CFG: "];
"1001171" -> "1001237"  [label="DDG: core_size < 0"];
"1001171" -> "1001237"  [label="DDG: close(user_core_fd) != 0"];
"1001171" -> "1001166"  [label="DDG: close(user_core_fd) != 0"];
"1001171" -> "1001166"  [label="DDG: core_size < 0"];
"1001176" -> "1001171"  [label="DDG: core_size"];
"1001176" -> "1001171"  [label="DDG: 0"];
"1001166" -> "1001165"  [label="AST: "];
"1001166" -> "1001167"  [label="CFG: "];
"1001167" -> "1001166"  [label="AST: "];
"1001181" -> "1001166"  [label="CFG: "];
"1001200" -> "1001166"  [label="CFG: "];
"1001166" -> "1001237"  [label="DDG: fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0"];
"1001166" -> "1001237"  [label="DDG: fsync(user_core_fd) != 0"];
"1001166" -> "1001237"  [label="DDG: close(user_core_fd) != 0 || core_size < 0"];
"1001167" -> "1001166"  [label="DDG: fsync(user_core_fd)"];
"1001167" -> "1001166"  [label="DDG: 0"];
}
