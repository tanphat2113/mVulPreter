digraph "0_openjpeg_6d8c0c06ee32dc03ba80acd48334e98728e56cf5@API" {
"1000331" [label="(Call,fprintf(stdout, \"%d frames correctly extracted\n\", snum))"];
"1000241" [label="(Call,fprintf(stdout, \"Extracting %d frames from file...\n\", track->num_samples))"];
"1000251" [label="(Call,snum < track->num_samples)"];
"1000256" [label="(Call,snum++)"];
"1000294" [label="(Call,sprintf(outfilename, \"%s_%05d.j2k\", argv[2], snum))"];
"1000303" [label="(Call,fopen(outfilename, \"wb\"))"];
"1000112" [label="(MethodParameterIn,char *argv[])"];
"1000248" [label="(Call,snum = 0)"];
"1000257" [label="(Identifier,snum)"];
"1000296" [label="(Literal,\"%s_%05d.j2k\")"];
"1000302" [label="(Identifier,outfile)"];
"1000244" [label="(Call,track->num_samples)"];
"1000253" [label="(Call,track->num_samples)"];
"1000258" [label="(Block,)"];
"1000251" [label="(Call,snum < track->num_samples)"];
"1000297" [label="(Call,argv[2])"];
"1000336" [label="(Identifier,dinfo)"];
"1000303" [label="(Call,fopen(outfilename, \"wb\"))"];
"1000304" [label="(Identifier,outfilename)"];
"1000136" [label="(Call,printf(\"Example: %s foreman.mj2 output/foreman\n\", argv[0]))"];
"1000300" [label="(Identifier,snum)"];
"1000112" [label="(MethodParameterIn,char *argv[])"];
"1000334" [label="(Identifier,snum)"];
"1000310" [label="(Call,fprintf(stderr, \"failed to open %s for writing\n\", outfilename))"];
"1000145" [label="(Call,fopen(argv[1], \"rb\"))"];
"1000250" [label="(Literal,0)"];
"1000346" [label="(MethodReturn,int)"];
"1000248" [label="(Call,snum = 0)"];
"1000154" [label="(Call,fprintf(stderr, \"failed to open %s for reading\n\", argv[1]))"];
"1000241" [label="(Call,fprintf(stdout, \"Extracting %d frames from file...\n\", track->num_samples))"];
"1000330" [label="(Identifier,file)"];
"1000295" [label="(Identifier,outfilename)"];
"1000333" [label="(Literal,\"%d frames correctly extracted\n\")"];
"1000260" [label="(Identifier,sample)"];
"1000113" [label="(Block,)"];
"1000256" [label="(Call,snum++)"];
"1000252" [label="(Identifier,snum)"];
"1000242" [label="(Identifier,stdout)"];
"1000301" [label="(Call,outfile = fopen(outfilename, \"wb\"))"];
"1000332" [label="(Identifier,stdout)"];
"1000331" [label="(Call,fprintf(stdout, \"%d frames correctly extracted\n\", snum))"];
"1000294" [label="(Call,sprintf(outfilename, \"%s_%05d.j2k\", argv[2], snum))"];
"1000243" [label="(Literal,\"Extracting %d frames from file...\n\")"];
"1000305" [label="(Literal,\"wb\")"];
"1000247" [label="(ControlStructure,for (snum = 0; snum < track->num_samples; snum++))"];
"1000249" [label="(Identifier,snum)"];
"1000131" [label="(Call,printf(\"Usage: %s mj2filename output_location\n\", argv[0]))"];
"1000331" -> "1000113"  [label="AST: "];
"1000331" -> "1000334"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000334" -> "1000331"  [label="AST: "];
"1000336" -> "1000331"  [label="CFG: "];
"1000331" -> "1000346"  [label="DDG: "];
"1000331" -> "1000346"  [label="DDG: "];
"1000331" -> "1000346"  [label="DDG: "];
"1000241" -> "1000331"  [label="DDG: "];
"1000251" -> "1000331"  [label="DDG: "];
"1000241" -> "1000113"  [label="AST: "];
"1000241" -> "1000244"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000244" -> "1000241"  [label="AST: "];
"1000249" -> "1000241"  [label="CFG: "];
"1000241" -> "1000346"  [label="DDG: "];
"1000241" -> "1000346"  [label="DDG: "];
"1000241" -> "1000251"  [label="DDG: "];
"1000251" -> "1000247"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000260" -> "1000251"  [label="CFG: "];
"1000330" -> "1000251"  [label="CFG: "];
"1000251" -> "1000346"  [label="DDG: "];
"1000251" -> "1000346"  [label="DDG: "];
"1000256" -> "1000251"  [label="DDG: "];
"1000248" -> "1000251"  [label="DDG: "];
"1000251" -> "1000294"  [label="DDG: "];
"1000256" -> "1000247"  [label="AST: "];
"1000256" -> "1000257"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000252" -> "1000256"  [label="CFG: "];
"1000294" -> "1000256"  [label="DDG: "];
"1000294" -> "1000258"  [label="AST: "];
"1000294" -> "1000300"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000296" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000300" -> "1000294"  [label="AST: "];
"1000302" -> "1000294"  [label="CFG: "];
"1000294" -> "1000346"  [label="DDG: "];
"1000294" -> "1000346"  [label="DDG: "];
"1000294" -> "1000346"  [label="DDG: "];
"1000303" -> "1000294"  [label="DDG: "];
"1000112" -> "1000294"  [label="DDG: "];
"1000294" -> "1000303"  [label="DDG: "];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000346"  [label="DDG: "];
"1000303" -> "1000301"  [label="DDG: "];
"1000303" -> "1000301"  [label="DDG: "];
"1000303" -> "1000310"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000346"  [label="DDG: "];
"1000112" -> "1000131"  [label="DDG: "];
"1000112" -> "1000136"  [label="DDG: "];
"1000112" -> "1000145"  [label="DDG: "];
"1000112" -> "1000154"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000250"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="AST: "];
"1000252" -> "1000248"  [label="CFG: "];
}
