digraph "0_linux_3e4c56d41eef5595035872a2ec5a483f42e8917f@API" {
"1000191" [label="(Call,pos + total_len <= i_size_read(inode))"];
"1000181" [label="(Call,mlog(0, \"get block of %lu at %llu:%u req %u\n\",\n\t\t\tinode->i_ino, pos, len, total_len))"];
"1000169" [label="(Call,pos & (osb->s_clustersize - 1))"];
"1000139" [label="(Call,pos = iblock << inode->i_sb->s_blocksize_bits)"];
"1000141" [label="(Call,iblock << inode->i_sb->s_blocksize_bits)"];
"1000108" [label="(MethodParameterIn,sector_t iblock)"];
"1000171" [label="(Call,osb->s_clustersize - 1)"];
"1000176" [label="(Call,len = min(total_len, len))"];
"1000178" [label="(Call,min(total_len, len))"];
"1000150" [label="(Call,total_len = bh_result->b_size)"];
"1000163" [label="(Call,len = osb->s_clustersize - (pos & (osb->s_clustersize - 1)))"];
"1000165" [label="(Call,osb->s_clustersize - (pos & (osb->s_clustersize - 1)))"];
"1000195" [label="(Call,i_size_read(inode))"];
"1000122" [label="(Call,OCFS2_I(inode))"];
"1000107" [label="(MethodParameterIn,struct inode *inode)"];
"1000180" [label="(Identifier,len)"];
"1000157" [label="(Identifier,ret)"];
"1000169" [label="(Call,pos & (osb->s_clustersize - 1))"];
"1000166" [label="(Call,osb->s_clustersize)"];
"1000184" [label="(Call,inode->i_ino)"];
"1000143" [label="(Call,inode->i_sb->s_blocksize_bits)"];
"1000179" [label="(Identifier,total_len)"];
"1000151" [label="(Identifier,total_len)"];
"1000172" [label="(Call,osb->s_clustersize)"];
"1000123" [label="(Identifier,inode)"];
"1000484" [label="(MethodReturn,static int)"];
"1000107" [label="(MethodParameterIn,struct inode *inode)"];
"1000193" [label="(Identifier,pos)"];
"1000165" [label="(Call,osb->s_clustersize - (pos & (osb->s_clustersize - 1)))"];
"1000332" [label="(Call,ocfs2_write_begin_nolock(inode->i_mapping, pos, len,\n\t\t\t\t       OCFS2_WRITE_DIRECT, NULL,\n\t\t\t\t       (void **)&wc, di_bh, NULL))"];
"1000309" [label="(Call,ocfs2_zero_tail(inode, di_bh, pos))"];
"1000178" [label="(Call,min(total_len, len))"];
"1000316" [label="(Call,ocfs2_expand_nonsparse_inode(inode, di_bh, pos,\n\t\t\t\t\t\t\t   total_len, NULL))"];
"1000199" [label="(Identifier,ret)"];
"1000248" [label="(Call,pos + total_len)"];
"1000120" [label="(Call,*oi = OCFS2_I(inode))"];
"1000177" [label="(Identifier,len)"];
"1000181" [label="(Call,mlog(0, \"get block of %lu at %llu:%u req %u\n\",\n\t\t\tinode->i_ino, pos, len, total_len))"];
"1000111" [label="(Block,)"];
"1000188" [label="(Identifier,len)"];
"1000196" [label="(Identifier,inode)"];
"1000191" [label="(Call,pos + total_len <= i_size_read(inode))"];
"1000189" [label="(Identifier,total_len)"];
"1000142" [label="(Identifier,iblock)"];
"1000187" [label="(Identifier,pos)"];
"1000195" [label="(Call,i_size_read(inode))"];
"1000200" [label="(Call,ocfs2_lock_get_block(inode, iblock, bh_result, create))"];
"1000164" [label="(Identifier,len)"];
"1000282" [label="(Call,ocfs2_inode_lock(inode, &di_bh, 1))"];
"1000163" [label="(Call,len = osb->s_clustersize - (pos & (osb->s_clustersize - 1)))"];
"1000152" [label="(Call,bh_result->b_size)"];
"1000375" [label="(Call,iblock & (u64)(ocfs2_clusters_to_blocks(inode->i_sb, 1) - 1))"];
"1000175" [label="(Literal,1)"];
"1000176" [label="(Call,len = min(total_len, len))"];
"1000170" [label="(Identifier,pos)"];
"1000192" [label="(Call,pos + total_len)"];
"1000244" [label="(Call,ocfs2_clusters_for_bytes(inode->i_sb, pos + total_len))"];
"1000150" [label="(Call,total_len = bh_result->b_size)"];
"1000140" [label="(Identifier,pos)"];
"1000264" [label="(Call,ocfs2_add_inode_to_orphan(osb, inode))"];
"1000108" [label="(MethodParameterIn,sector_t iblock)"];
"1000141" [label="(Call,iblock << inode->i_sb->s_blocksize_bits)"];
"1000468" [label="(Call,ocfs2_inode_unlock(inode, 1))"];
"1000182" [label="(Literal,0)"];
"1000139" [label="(Call,pos = iblock << inode->i_sb->s_blocksize_bits)"];
"1000255" [label="(Call,i_size_read(inode))"];
"1000171" [label="(Call,osb->s_clustersize - 1)"];
"1000190" [label="(ControlStructure,if (pos + total_len <= i_size_read(inode)))"];
"1000223" [label="(Identifier,dwc)"];
"1000183" [label="(Literal,\"get block of %lu at %llu:%u req %u\n\")"];
"1000122" [label="(Call,OCFS2_I(inode))"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000199" -> "1000191"  [label="CFG: "];
"1000223" -> "1000191"  [label="CFG: "];
"1000191" -> "1000484"  [label="DDG: "];
"1000191" -> "1000484"  [label="DDG: "];
"1000191" -> "1000484"  [label="DDG: "];
"1000181" -> "1000191"  [label="DDG: "];
"1000181" -> "1000191"  [label="DDG: "];
"1000195" -> "1000191"  [label="DDG: "];
"1000181" -> "1000111"  [label="AST: "];
"1000181" -> "1000189"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000184" -> "1000181"  [label="AST: "];
"1000187" -> "1000181"  [label="AST: "];
"1000188" -> "1000181"  [label="AST: "];
"1000189" -> "1000181"  [label="AST: "];
"1000193" -> "1000181"  [label="CFG: "];
"1000181" -> "1000484"  [label="DDG: "];
"1000181" -> "1000484"  [label="DDG: "];
"1000181" -> "1000484"  [label="DDG: "];
"1000169" -> "1000181"  [label="DDG: "];
"1000176" -> "1000181"  [label="DDG: "];
"1000178" -> "1000181"  [label="DDG: "];
"1000181" -> "1000192"  [label="DDG: "];
"1000181" -> "1000192"  [label="DDG: "];
"1000181" -> "1000244"  [label="DDG: "];
"1000181" -> "1000244"  [label="DDG: "];
"1000181" -> "1000248"  [label="DDG: "];
"1000181" -> "1000248"  [label="DDG: "];
"1000181" -> "1000309"  [label="DDG: "];
"1000181" -> "1000316"  [label="DDG: "];
"1000181" -> "1000316"  [label="DDG: "];
"1000181" -> "1000332"  [label="DDG: "];
"1000181" -> "1000332"  [label="DDG: "];
"1000169" -> "1000165"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000171" -> "1000169"  [label="AST: "];
"1000165" -> "1000169"  [label="CFG: "];
"1000169" -> "1000484"  [label="DDG: "];
"1000169" -> "1000165"  [label="DDG: "];
"1000169" -> "1000165"  [label="DDG: "];
"1000139" -> "1000169"  [label="DDG: "];
"1000171" -> "1000169"  [label="DDG: "];
"1000171" -> "1000169"  [label="DDG: "];
"1000139" -> "1000111"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000151" -> "1000139"  [label="CFG: "];
"1000139" -> "1000484"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000139"  [label="DDG: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000143" -> "1000141"  [label="AST: "];
"1000141" -> "1000484"  [label="DDG: "];
"1000141" -> "1000484"  [label="DDG: "];
"1000108" -> "1000141"  [label="DDG: "];
"1000141" -> "1000200"  [label="DDG: "];
"1000141" -> "1000375"  [label="DDG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000484"  [label="DDG: "];
"1000108" -> "1000200"  [label="DDG: "];
"1000108" -> "1000375"  [label="DDG: "];
"1000171" -> "1000175"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000175" -> "1000171"  [label="AST: "];
"1000171" -> "1000165"  [label="DDG: "];
"1000176" -> "1000111"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000182" -> "1000176"  [label="CFG: "];
"1000176" -> "1000484"  [label="DDG: "];
"1000178" -> "1000176"  [label="DDG: "];
"1000178" -> "1000176"  [label="DDG: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000150" -> "1000178"  [label="DDG: "];
"1000163" -> "1000178"  [label="DDG: "];
"1000150" -> "1000111"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="CFG: "];
"1000150" -> "1000484"  [label="DDG: "];
"1000163" -> "1000111"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000177" -> "1000163"  [label="CFG: "];
"1000163" -> "1000484"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000165" -> "1000163"  [label="DDG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000165" -> "1000484"  [label="DDG: "];
"1000165" -> "1000484"  [label="DDG: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000195" -> "1000484"  [label="DDG: "];
"1000122" -> "1000195"  [label="DDG: "];
"1000107" -> "1000195"  [label="DDG: "];
"1000195" -> "1000200"  [label="DDG: "];
"1000195" -> "1000255"  [label="DDG: "];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000120"  [label="DDG: "];
"1000107" -> "1000122"  [label="DDG: "];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000484"  [label="DDG: "];
"1000107" -> "1000200"  [label="DDG: "];
"1000107" -> "1000255"  [label="DDG: "];
"1000107" -> "1000264"  [label="DDG: "];
"1000107" -> "1000282"  [label="DDG: "];
"1000107" -> "1000309"  [label="DDG: "];
"1000107" -> "1000316"  [label="DDG: "];
"1000107" -> "1000468"  [label="DDG: "];
}
