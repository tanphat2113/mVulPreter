digraph "0_openssl_2b0532f3984324ebe1236a63d15893792384328d@pointer" {
"1001047" [label="(Call,(unsigned char *)s->init_buf->data)"];
"1001045" [label="(Call,ret - (unsigned char *)s->init_buf->data)"];
"1001043" [label="(Call,hlen = ret - (unsigned char *)s->init_buf->data)"];
"1001060" [label="(Call,hlen -= 5)"];
"1001065" [label="(Call,hlen > 0xff)"];
"1001064" [label="(Call,hlen > 0xff && hlen < 0x200)"];
"1001068" [label="(Call,hlen < 0x200)"];
"1001074" [label="(Call,0x200 - hlen)"];
"1001072" [label="(Call,hlen = 0x200 - hlen)"];
"1001078" [label="(Call,hlen >= 4)"];
"1001081" [label="(Call,hlen -= 4)"];
"1001091" [label="(Call,s2n(hlen, ret))"];
"1001094" [label="(Call,memset(ret, 0, hlen))"];
"1001098" [label="(Call,ret += hlen)"];
"1001105" [label="(Call,ret-orig-2)"];
"1001102" [label="(Call,(extdatalen = ret-orig-2)== 0)"];
"1001103" [label="(Call,extdatalen = ret-orig-2)"];
"1001113" [label="(Call,s2n(extdatalen, orig))"];
"1001116" [label="(Return,return ret;)"];
"1001088" [label="(Call,s2n(TLSEXT_TYPE_padding, ret))"];
"1001043" [label="(Call,hlen = ret - (unsigned char *)s->init_buf->data)"];
"1001041" [label="(Block,)"];
"1001086" [label="(Identifier,hlen)"];
"1001115" [label="(Identifier,orig)"];
"1001047" [label="(Call,(unsigned char *)s->init_buf->data)"];
"1001080" [label="(Literal,4)"];
"1001045" [label="(Call,ret - (unsigned char *)s->init_buf->data)"];
"1001099" [label="(Identifier,ret)"];
"1001060" [label="(Call,hlen -= 5)"];
"1001113" [label="(Call,s2n(extdatalen, orig))"];
"1001074" [label="(Call,0x200 - hlen)"];
"1001100" [label="(Identifier,hlen)"];
"1001068" [label="(Call,hlen < 0x200)"];
"1001089" [label="(Identifier,TLSEXT_TYPE_padding)"];
"1001091" [label="(Call,s2n(hlen, ret))"];
"1001116" [label="(Return,return ret;)"];
"1001105" [label="(Call,ret-orig-2)"];
"1001092" [label="(Identifier,hlen)"];
"1001096" [label="(Literal,0)"];
"1001117" [label="(Identifier,ret)"];
"1001095" [label="(Identifier,ret)"];
"1001097" [label="(Identifier,hlen)"];
"1001083" [label="(Literal,4)"];
"1001049" [label="(Call,s->init_buf->data)"];
"1001073" [label="(Identifier,hlen)"];
"1001085" [label="(Call,hlen = 0)"];
"1001054" [label="(ControlStructure,if (s->state == SSL23_ST_CW_CLNT_HELLO_A))"];
"1001094" [label="(Call,memset(ret, 0, hlen))"];
"1001102" [label="(Call,(extdatalen = ret-orig-2)== 0)"];
"1001070" [label="(Literal,0x200)"];
"1001062" [label="(Literal,5)"];
"1001064" [label="(Call,hlen > 0xff && hlen < 0x200)"];
"1001061" [label="(Identifier,hlen)"];
"1001101" [label="(ControlStructure,if ((extdatalen = ret-orig-2)== 0))"];
"1001104" [label="(Identifier,extdatalen)"];
"1001063" [label="(ControlStructure,if (hlen > 0xff && hlen < 0x200))"];
"1001098" [label="(Call,ret += hlen)"];
"1001093" [label="(Identifier,ret)"];
"1001079" [label="(Identifier,hlen)"];
"1000946" [label="(Call,ret++)"];
"1001067" [label="(Literal,0xff)"];
"1001075" [label="(Literal,0x200)"];
"1001088" [label="(Call,s2n(TLSEXT_TYPE_padding, ret))"];
"1001082" [label="(Identifier,hlen)"];
"1001118" [label="(MethodReturn,unsigned char *)"];
"1001106" [label="(Identifier,ret)"];
"1001114" [label="(Identifier,extdatalen)"];
"1001072" [label="(Call,hlen = 0x200 - hlen)"];
"1001077" [label="(ControlStructure,if (hlen >= 4))"];
"1001112" [label="(Identifier,orig)"];
"1000952" [label="(Call,ret++)"];
"1001090" [label="(Identifier,ret)"];
"1001110" [label="(Literal,0)"];
"1001032" [label="(Call,ret += el)"];
"1001066" [label="(Identifier,hlen)"];
"1001081" [label="(Call,hlen -= 4)"];
"1000984" [label="(Call,s2n(0,ret))"];
"1001076" [label="(Identifier,hlen)"];
"1001046" [label="(Identifier,ret)"];
"1001057" [label="(Identifier,s)"];
"1001069" [label="(Identifier,hlen)"];
"1001065" [label="(Call,hlen > 0xff)"];
"1001044" [label="(Identifier,hlen)"];
"1000129" [label="(Block,)"];
"1001078" [label="(Call,hlen >= 4)"];
"1001103" [label="(Call,extdatalen = ret-orig-2)"];
"1001107" [label="(Call,orig-2)"];
"1001071" [label="(Block,)"];
"1001047" -> "1001045"  [label="AST: "];
"1001047" -> "1001049"  [label="CFG: "];
"1001048" -> "1001047"  [label="AST: "];
"1001049" -> "1001047"  [label="AST: "];
"1001045" -> "1001047"  [label="CFG: "];
"1001047" -> "1001118"  [label="DDG: s->init_buf->data"];
"1001047" -> "1001045"  [label="DDG: s->init_buf->data"];
"1001045" -> "1001043"  [label="AST: "];
"1001046" -> "1001045"  [label="AST: "];
"1001043" -> "1001045"  [label="CFG: "];
"1001045" -> "1001118"  [label="DDG: (unsigned char *)s->init_buf->data"];
"1001045" -> "1001043"  [label="DDG: ret"];
"1001045" -> "1001043"  [label="DDG: (unsigned char *)s->init_buf->data"];
"1000952" -> "1001045"  [label="DDG: ret"];
"1001032" -> "1001045"  [label="DDG: ret"];
"1000946" -> "1001045"  [label="DDG: ret"];
"1000984" -> "1001045"  [label="DDG: ret"];
"1001045" -> "1001088"  [label="DDG: ret"];
"1001045" -> "1001105"  [label="DDG: ret"];
"1001043" -> "1001041"  [label="AST: "];
"1001044" -> "1001043"  [label="AST: "];
"1001057" -> "1001043"  [label="CFG: "];
"1001043" -> "1001118"  [label="DDG: ret - (unsigned char *)s->init_buf->data"];
"1001043" -> "1001060"  [label="DDG: hlen"];
"1001043" -> "1001065"  [label="DDG: hlen"];
"1001060" -> "1001054"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001062" -> "1001060"  [label="AST: "];
"1001066" -> "1001060"  [label="CFG: "];
"1001060" -> "1001065"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="AST: "];
"1001065" -> "1001067"  [label="CFG: "];
"1001066" -> "1001065"  [label="AST: "];
"1001067" -> "1001065"  [label="AST: "];
"1001069" -> "1001065"  [label="CFG: "];
"1001064" -> "1001065"  [label="CFG: "];
"1001065" -> "1001118"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="DDG: 0xff"];
"1001065" -> "1001068"  [label="DDG: hlen"];
"1001065" -> "1001074"  [label="DDG: hlen"];
"1001064" -> "1001063"  [label="AST: "];
"1001064" -> "1001068"  [label="CFG: "];
"1001068" -> "1001064"  [label="AST: "];
"1001073" -> "1001064"  [label="CFG: "];
"1001104" -> "1001064"  [label="CFG: "];
"1001064" -> "1001118"  [label="DDG: hlen > 0xff && hlen < 0x200"];
"1001064" -> "1001118"  [label="DDG: hlen > 0xff"];
"1001064" -> "1001118"  [label="DDG: hlen < 0x200"];
"1001068" -> "1001064"  [label="DDG: hlen"];
"1001068" -> "1001064"  [label="DDG: 0x200"];
"1001068" -> "1001070"  [label="CFG: "];
"1001069" -> "1001068"  [label="AST: "];
"1001070" -> "1001068"  [label="AST: "];
"1001068" -> "1001118"  [label="DDG: hlen"];
"1001068" -> "1001074"  [label="DDG: hlen"];
"1001074" -> "1001072"  [label="AST: "];
"1001074" -> "1001076"  [label="CFG: "];
"1001075" -> "1001074"  [label="AST: "];
"1001076" -> "1001074"  [label="AST: "];
"1001072" -> "1001074"  [label="CFG: "];
"1001074" -> "1001072"  [label="DDG: 0x200"];
"1001074" -> "1001072"  [label="DDG: hlen"];
"1001072" -> "1001071"  [label="AST: "];
"1001073" -> "1001072"  [label="AST: "];
"1001079" -> "1001072"  [label="CFG: "];
"1001072" -> "1001118"  [label="DDG: 0x200 - hlen"];
"1001072" -> "1001078"  [label="DDG: hlen"];
"1001078" -> "1001077"  [label="AST: "];
"1001078" -> "1001080"  [label="CFG: "];
"1001079" -> "1001078"  [label="AST: "];
"1001080" -> "1001078"  [label="AST: "];
"1001082" -> "1001078"  [label="CFG: "];
"1001086" -> "1001078"  [label="CFG: "];
"1001078" -> "1001118"  [label="DDG: hlen >= 4"];
"1001078" -> "1001081"  [label="DDG: hlen"];
"1001081" -> "1001077"  [label="AST: "];
"1001081" -> "1001083"  [label="CFG: "];
"1001082" -> "1001081"  [label="AST: "];
"1001083" -> "1001081"  [label="AST: "];
"1001089" -> "1001081"  [label="CFG: "];
"1001081" -> "1001091"  [label="DDG: hlen"];
"1001091" -> "1001071"  [label="AST: "];
"1001091" -> "1001093"  [label="CFG: "];
"1001092" -> "1001091"  [label="AST: "];
"1001093" -> "1001091"  [label="AST: "];
"1001095" -> "1001091"  [label="CFG: "];
"1001091" -> "1001118"  [label="DDG: s2n(hlen, ret)"];
"1001085" -> "1001091"  [label="DDG: hlen"];
"1001088" -> "1001091"  [label="DDG: ret"];
"1001091" -> "1001094"  [label="DDG: ret"];
"1001091" -> "1001094"  [label="DDG: hlen"];
"1001094" -> "1001071"  [label="AST: "];
"1001094" -> "1001097"  [label="CFG: "];
"1001095" -> "1001094"  [label="AST: "];
"1001096" -> "1001094"  [label="AST: "];
"1001097" -> "1001094"  [label="AST: "];
"1001099" -> "1001094"  [label="CFG: "];
"1001094" -> "1001118"  [label="DDG: memset(ret, 0, hlen)"];
"1001094" -> "1001098"  [label="DDG: hlen"];
"1001094" -> "1001098"  [label="DDG: ret"];
"1001098" -> "1001071"  [label="AST: "];
"1001098" -> "1001100"  [label="CFG: "];
"1001099" -> "1001098"  [label="AST: "];
"1001100" -> "1001098"  [label="AST: "];
"1001104" -> "1001098"  [label="CFG: "];
"1001098" -> "1001118"  [label="DDG: hlen"];
"1001098" -> "1001105"  [label="DDG: ret"];
"1001105" -> "1001103"  [label="AST: "];
"1001105" -> "1001107"  [label="CFG: "];
"1001106" -> "1001105"  [label="AST: "];
"1001107" -> "1001105"  [label="AST: "];
"1001103" -> "1001105"  [label="CFG: "];
"1001105" -> "1001118"  [label="DDG: orig-2"];
"1001105" -> "1001118"  [label="DDG: ret"];
"1001105" -> "1001102"  [label="DDG: ret"];
"1001105" -> "1001102"  [label="DDG: orig-2"];
"1001105" -> "1001103"  [label="DDG: ret"];
"1001105" -> "1001103"  [label="DDG: orig-2"];
"1000952" -> "1001105"  [label="DDG: ret"];
"1001032" -> "1001105"  [label="DDG: ret"];
"1000946" -> "1001105"  [label="DDG: ret"];
"1000984" -> "1001105"  [label="DDG: ret"];
"1001107" -> "1001105"  [label="DDG: orig"];
"1001107" -> "1001105"  [label="DDG: 2"];
"1001105" -> "1001116"  [label="DDG: ret"];
"1001102" -> "1001101"  [label="AST: "];
"1001102" -> "1001110"  [label="CFG: "];
"1001103" -> "1001102"  [label="AST: "];
"1001110" -> "1001102"  [label="AST: "];
"1001112" -> "1001102"  [label="CFG: "];
"1001114" -> "1001102"  [label="CFG: "];
"1001102" -> "1001118"  [label="DDG: (extdatalen = ret-orig-2)== 0"];
"1001103" -> "1001102"  [label="DDG: extdatalen"];
"1001104" -> "1001103"  [label="AST: "];
"1001110" -> "1001103"  [label="CFG: "];
"1001103" -> "1001118"  [label="DDG: ret-orig-2"];
"1001103" -> "1001118"  [label="DDG: extdatalen"];
"1001103" -> "1001113"  [label="DDG: extdatalen"];
"1001113" -> "1000129"  [label="AST: "];
"1001113" -> "1001115"  [label="CFG: "];
"1001114" -> "1001113"  [label="AST: "];
"1001115" -> "1001113"  [label="AST: "];
"1001117" -> "1001113"  [label="CFG: "];
"1001113" -> "1001118"  [label="DDG: s2n(extdatalen, orig)"];
"1001113" -> "1001118"  [label="DDG: extdatalen"];
"1001113" -> "1001118"  [label="DDG: orig"];
"1001107" -> "1001113"  [label="DDG: orig"];
"1001116" -> "1000129"  [label="AST: "];
"1001116" -> "1001117"  [label="CFG: "];
"1001117" -> "1001116"  [label="AST: "];
"1001118" -> "1001116"  [label="CFG: "];
"1001116" -> "1001118"  [label="DDG: <RET>"];
"1001117" -> "1001116"  [label="DDG: ret"];
"1001088" -> "1001071"  [label="AST: "];
"1001088" -> "1001090"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001092" -> "1001088"  [label="CFG: "];
"1001088" -> "1001118"  [label="DDG: s2n(TLSEXT_TYPE_padding, ret)"];
"1001088" -> "1001118"  [label="DDG: TLSEXT_TYPE_padding"];
}
