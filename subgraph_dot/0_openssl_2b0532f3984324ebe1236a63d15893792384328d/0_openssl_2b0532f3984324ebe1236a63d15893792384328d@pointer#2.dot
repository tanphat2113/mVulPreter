digraph "0_openssl_2b0532f3984324ebe1236a63d15893792384328d@pointer" {
"1000995" [label="(Call,ssl_add_clienthello_use_srtp_ext(s, 0, &el, 0))"];
"1000991" [label="(Call,SSL_get_srtp_profiles(s))"];
"1000989" [label="(Call,SSL_IS_DTLS(s))"];
"1000646" [label="(Call,TLS1_get_client_version(s))"];
"1000502" [label="(Call,SSL_get_options(s))"];
"1000270" [label="(Call,ssl_add_clienthello_renegotiate_ext(s, ret, &el, el))"];
"1000238" [label="(Call,ssl_add_clienthello_renegotiate_ext(s, 0, &el, 0))"];
"1000126" [label="(MethodParameterIn,SSL *s)"];
"1000265" [label="(Call,s2n(el,ret))"];
"1000256" [label="(Call,4 - el)"];
"1000262" [label="(Call,s2n(TLSEXT_TYPE_renegotiate,ret))"];
"1000254" [label="(Call,ret - 4 - el)"];
"1000227" [label="(Call,ret+=size_str)"];
"1000221" [label="(Call,memcpy(ret, s->tlsext_hostname, size_str))"];
"1000218" [label="(Call,s2n(size_str,ret))"];
"1000187" [label="(Call,size_str = strlen(s->tlsext_hostname))"];
"1000189" [label="(Call,strlen(s->tlsext_hostname))"];
"1000167" [label="(Call,s->tlsext_hostname != NULL)"];
"1000213" [label="(Call,ret++)"];
"1000206" [label="(Call,s2n(size_str+3,ret))"];
"1000201" [label="(Call,s2n(size_str+5,ret))"];
"1000198" [label="(Call,s2n(TLSEXT_TYPE_server_name,ret))"];
"1000182" [label="(Call,ret - 9)"];
"1000161" [label="(Call,ret>=limit)"];
"1000157" [label="(Call,ret+=2)"];
"1000139" [label="(Call,*ret = buf)"];
"1000127" [label="(MethodParameterIn,unsigned char *buf)"];
"1000128" [label="(MethodParameterIn,unsigned char *limit)"];
"1001020" [label="(Call,ssl_add_clienthello_use_srtp_ext(s, ret, &el, el))"];
"1001032" [label="(Call,ret += el)"];
"1001045" [label="(Call,ret - (unsigned char *)s->init_buf->data)"];
"1001043" [label="(Call,hlen = ret - (unsigned char *)s->init_buf->data)"];
"1001060" [label="(Call,hlen -= 5)"];
"1001065" [label="(Call,hlen > 0xff)"];
"1001064" [label="(Call,hlen > 0xff && hlen < 0x200)"];
"1001068" [label="(Call,hlen < 0x200)"];
"1001074" [label="(Call,0x200 - hlen)"];
"1001072" [label="(Call,hlen = 0x200 - hlen)"];
"1001078" [label="(Call,hlen >= 4)"];
"1001081" [label="(Call,hlen -= 4)"];
"1001091" [label="(Call,s2n(hlen, ret))"];
"1001094" [label="(Call,memset(ret, 0, hlen))"];
"1001098" [label="(Call,ret += hlen)"];
"1001105" [label="(Call,ret-orig-2)"];
"1001102" [label="(Call,(extdatalen = ret-orig-2)== 0)"];
"1001103" [label="(Call,extdatalen = ret-orig-2)"];
"1001113" [label="(Call,s2n(extdatalen, orig))"];
"1001116" [label="(Return,return ret;)"];
"1001088" [label="(Call,s2n(TLSEXT_TYPE_padding, ret))"];
"1000205" [label="(Identifier,ret)"];
"1001041" [label="(Block,)"];
"1000227" [label="(Call,ret+=size_str)"];
"1001060" [label="(Call,hlen -= 5)"];
"1001113" [label="(Call,s2n(extdatalen, orig))"];
"1000369" [label="(Call,ret - 5)"];
"1000835" [label="(Call,ret - 7 - extlen - idlen)"];
"1000615" [label="(Call,ret - 4 - ticklen)"];
"1001068" [label="(Call,hlen < 0x200)"];
"1001089" [label="(Identifier,TLSEXT_TYPE_padding)"];
"1000169" [label="(Identifier,s)"];
"1000714" [label="(Call,ret - 6 - col)"];
"1001083" [label="(Literal,4)"];
"1000218" [label="(Call,s2n(size_str,ret))"];
"1001094" [label="(Call,memset(ret, 0, hlen))"];
"1001070" [label="(Literal,0x200)"];
"1000993" [label="(Block,)"];
"1001098" [label="(Call,ret += hlen)"];
"1000240" [label="(Literal,0)"];
"1000161" [label="(Call,ret>=limit)"];
"1000219" [label="(Identifier,size_str)"];
"1000186" [label="(Call,(size_str = strlen(s->tlsext_hostname)) > (unsigned long)lenmax)"];
"1000646" [label="(Call,TLS1_get_client_version(s))"];
"1001067" [label="(Literal,0xff)"];
"1000272" [label="(Identifier,ret)"];
"1001088" [label="(Call,s2n(TLSEXT_TYPE_padding, ret))"];
"1000248" [label="(Return,return NULL;)"];
"1001007" [label="(Call,4 - el)"];
"1001090" [label="(Identifier,ret)"];
"1000207" [label="(Call,size_str+3)"];
"1000992" [label="(Identifier,s)"];
"1000988" [label="(Call,SSL_IS_DTLS(s) && SSL_get_srtp_profiles(s))"];
"1001032" [label="(Call,ret += el)"];
"1001081" [label="(Call,hlen -= 4)"];
"1001076" [label="(Identifier,hlen)"];
"1000273" [label="(Call,&el)"];
"1000613" [label="(Call,limit - ret - 4 - ticklen)"];
"1001044" [label="(Identifier,hlen)"];
"1000167" [label="(Call,s->tlsext_hostname != NULL)"];
"1000157" [label="(Call,ret+=2)"];
"1001103" [label="(Call,extdatalen = ret-orig-2)"];
"1000172" [label="(Block,)"];
"1001086" [label="(Identifier,hlen)"];
"1001115" [label="(Identifier,orig)"];
"1001080" [label="(Literal,4)"];
"1000254" [label="(Call,ret - 4 - el)"];
"1000190" [label="(Call,s->tlsext_hostname)"];
"1001034" [label="(Identifier,el)"];
"1000989" [label="(Call,SSL_IS_DTLS(s))"];
"1001099" [label="(Identifier,ret)"];
"1000991" [label="(Call,SSL_get_srtp_profiles(s))"];
"1001028" [label="(Identifier,SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT)"];
"1000647" [label="(Identifier,s)"];
"1000501" [label="(Call,SSL_get_options(s) & SSL_OP_NO_TICKET)"];
"1000321" [label="(Call,ret - 5 - login_len)"];
"1000182" [label="(Call,ret - 9)"];
"1001116" [label="(Return,return ret;)"];
"1000203" [label="(Identifier,size_str)"];
"1000441" [label="(Call,limit - ret - 6)"];
"1001092" [label="(Identifier,hlen)"];
"1000367" [label="(Call,limit - ret - 5)"];
"1000139" [label="(Call,*ret = buf)"];
"1001020" [label="(Call,ssl_add_clienthello_use_srtp_ext(s, ret, &el, el))"];
"1000171" [label="(Identifier,NULL)"];
"1000162" [label="(Identifier,ret)"];
"1000187" [label="(Call,size_str = strlen(s->tlsext_hostname))"];
"1000200" [label="(Identifier,ret)"];
"1001104" [label="(Identifier,extdatalen)"];
"1001101" [label="(ControlStructure,if ((extdatalen = ret-orig-2)== 0))"];
"1001093" [label="(Identifier,ret)"];
"1000267" [label="(Identifier,ret)"];
"1001079" [label="(Identifier,hlen)"];
"1001022" [label="(Identifier,ret)"];
"1000160" [label="(ControlStructure,if (ret>=limit))"];
"1001072" [label="(Call,hlen = 0x200 - hlen)"];
"1000232" [label="(Identifier,s)"];
"1000238" [label="(Call,ssl_add_clienthello_renegotiate_ext(s, 0, &el, 0))"];
"1000222" [label="(Identifier,ret)"];
"1000221" [label="(Call,memcpy(ret, s->tlsext_hostname, size_str))"];
"1000165" [label="(Identifier,NULL)"];
"1000199" [label="(Identifier,TLSEXT_TYPE_server_name)"];
"1000146" [label="(Identifier,s)"];
"1001066" [label="(Identifier,hlen)"];
"1000255" [label="(Identifier,ret)"];
"1001046" [label="(Identifier,ret)"];
"1001065" [label="(Call,hlen > 0xff)"];
"1000129" [label="(Block,)"];
"1000995" [label="(Call,ssl_add_clienthello_use_srtp_ext(s, 0, &el, 0))"];
"1001033" [label="(Identifier,ret)"];
"1001078" [label="(Call,hlen >= 4)"];
"1000502" [label="(Call,SSL_get_options(s))"];
"1000188" [label="(Identifier,size_str)"];
"1001043" [label="(Call,hlen = ret - (unsigned char *)s->init_buf->data)"];
"1000168" [label="(Call,s->tlsext_hostname)"];
"1000128" [label="(MethodParameterIn,unsigned char *limit)"];
"1000973" [label="(Call,limit - ret - 4)"];
"1001047" [label="(Call,(unsigned char *)s->init_buf->data)"];
"1000990" [label="(Identifier,s)"];
"1000280" [label="(Return,return NULL;)"];
"1000924" [label="(Call,ret - 4 - 1)"];
"1000443" [label="(Call,ret - 6)"];
"1000234" [label="(Block,)"];
"1001019" [label="(ControlStructure,if(ssl_add_clienthello_use_srtp_ext(s, ret, &el, el)))"];
"1001095" [label="(Identifier,ret)"];
"1000226" [label="(Identifier,size_str)"];
"1001073" [label="(Identifier,hlen)"];
"1001102" [label="(Call,(extdatalen = ret-orig-2)== 0)"];
"1000503" [label="(Identifier,s)"];
"1001054" [label="(ControlStructure,if (s->state == SSL23_ST_CW_CLNT_HELLO_A))"];
"1000206" [label="(Call,s2n(size_str+3,ret))"];
"1000237" [label="(Call,!ssl_add_clienthello_renegotiate_ext(s, 0, &el, 0))"];
"1000159" [label="(Literal,2)"];
"1000140" [label="(Identifier,ret)"];
"1000241" [label="(Call,&el)"];
"1001062" [label="(Literal,5)"];
"1000257" [label="(Literal,4)"];
"1001064" [label="(Call,hlen > 0xff && hlen < 0x200)"];
"1000265" [label="(Call,s2n(el,ret))"];
"1000252" [label="(Call,limit - ret - 4 - el)"];
"1001063" [label="(ControlStructure,if (hlen > 0xff && hlen < 0x200))"];
"1000262" [label="(Call,s2n(TLSEXT_TYPE_renegotiate,ret))"];
"1000180" [label="(Call,limit - ret - 9)"];
"1000712" [label="(Call,limit - ret - 6 - col)"];
"1000946" [label="(Call,ret++)"];
"1000243" [label="(Literal,0)"];
"1000922" [label="(Call,limit - ret - 4 - 1)"];
"1001075" [label="(Literal,0x200)"];
"1000997" [label="(Literal,0)"];
"1001082" [label="(Identifier,hlen)"];
"1001106" [label="(Identifier,ret)"];
"1001112" [label="(Identifier,orig)"];
"1000127" [label="(MethodParameterIn,unsigned char *buf)"];
"1001110" [label="(Literal,0)"];
"1000319" [label="(Call,limit - ret - 5 - login_len)"];
"1000198" [label="(Call,s2n(TLSEXT_TYPE_server_name,ret))"];
"1001021" [label="(Identifier,s)"];
"1000984" [label="(Call,s2n(0,ret))"];
"1000286" [label="(Call,s->srp_ctx.login != NULL)"];
"1001025" [label="(Identifier,el)"];
"1000645" [label="(Call,TLS1_get_client_version(s) >= TLS1_2_VERSION)"];
"1000158" [label="(Identifier,ret)"];
"1000833" [label="(Call,limit - ret - 7 - extlen - idlen)"];
"1000210" [label="(Identifier,ret)"];
"1000126" [label="(MethodParameterIn,SSL *s)"];
"1000214" [label="(Identifier,ret)"];
"1001071" [label="(Block,)"];
"1000282" [label="(Call,ret += el)"];
"1000220" [label="(Identifier,ret)"];
"1000201" [label="(Call,s2n(size_str+5,ret))"];
"1000189" [label="(Call,strlen(s->tlsext_hostname))"];
"1000269" [label="(Call,!ssl_add_clienthello_renegotiate_ext(s, ret, &el, el))"];
"1000260" [label="(Return,return NULL;)"];
"1001004" [label="(Identifier,limit)"];
"1000228" [label="(Identifier,ret)"];
"1000135" [label="(Call,*orig = buf)"];
"1001003" [label="(Call,limit - ret - 4 - el)"];
"1001045" [label="(Call,ret - (unsigned char *)s->init_buf->data)"];
"1001074" [label="(Call,0x200 - hlen)"];
"1001100" [label="(Identifier,hlen)"];
"1000208" [label="(Identifier,size_str)"];
"1001091" [label="(Call,s2n(hlen, ret))"];
"1000275" [label="(Identifier,el)"];
"1000256" [label="(Call,4 - el)"];
"1000229" [label="(Identifier,size_str)"];
"1000163" [label="(Identifier,limit)"];
"1000196" [label="(Return,return NULL;)"];
"1000504" [label="(Identifier,SSL_OP_NO_TICKET)"];
"1001105" [label="(Call,ret-orig-2)"];
"1000179" [label="(Identifier,lenmax)"];
"1001096" [label="(Literal,0)"];
"1001117" [label="(Identifier,ret)"];
"1001097" [label="(Identifier,hlen)"];
"1000271" [label="(Identifier,s)"];
"1001085" [label="(Call,hlen = 0)"];
"1000166" [label="(ControlStructure,if (s->tlsext_hostname != NULL))"];
"1000270" [label="(Call,ssl_add_clienthello_renegotiate_ext(s, ret, &el, el))"];
"1000998" [label="(Call,&el)"];
"1000202" [label="(Call,size_str+5)"];
"1000239" [label="(Identifier,s)"];
"1000654" [label="(Call,limit - ret)"];
"1001023" [label="(Call,&el)"];
"1001061" [label="(Identifier,hlen)"];
"1000213" [label="(Call,ret++)"];
"1001114" [label="(Identifier,extdatalen)"];
"1001118" [label="(MethodReturn,unsigned char *)"];
"1001077" [label="(ControlStructure,if (hlen >= 4))"];
"1000264" [label="(Identifier,ret)"];
"1000952" [label="(Call,ret++)"];
"1000258" [label="(Identifier,el)"];
"1000212" [label="(Call,*(ret++))"];
"1000648" [label="(Identifier,TLS1_2_VERSION)"];
"1001016" [label="(Call,s2n(el,ret))"];
"1000141" [label="(Identifier,buf)"];
"1000996" [label="(Identifier,s)"];
"1001038" [label="(Identifier,s)"];
"1001057" [label="(Identifier,s)"];
"1000266" [label="(Identifier,el)"];
"1001069" [label="(Identifier,hlen)"];
"1000263" [label="(Identifier,TLSEXT_TYPE_renegotiate)"];
"1000184" [label="(Literal,9)"];
"1000223" [label="(Call,s->tlsext_hostname)"];
"1001000" [label="(Literal,0)"];
"1000183" [label="(Identifier,ret)"];
"1001107" [label="(Call,orig-2)"];
"1000995" -> "1000993"  [label="AST: "];
"1000995" -> "1001000"  [label="CFG: "];
"1000996" -> "1000995"  [label="AST: "];
"1000997" -> "1000995"  [label="AST: "];
"1000998" -> "1000995"  [label="AST: "];
"1001000" -> "1000995"  [label="AST: "];
"1001004" -> "1000995"  [label="CFG: "];
"1000995" -> "1001118"  [label="DDG: s"];
"1000995" -> "1001118"  [label="DDG: &el"];
"1000995" -> "1001118"  [label="DDG: ssl_add_clienthello_use_srtp_ext(s, 0, &el, 0)"];
"1000991" -> "1000995"  [label="DDG: s"];
"1000989" -> "1000995"  [label="DDG: s"];
"1000126" -> "1000995"  [label="DDG: s"];
"1000270" -> "1000995"  [label="DDG: &el"];
"1000995" -> "1001020"  [label="DDG: s"];
"1000995" -> "1001020"  [label="DDG: &el"];
"1000991" -> "1000988"  [label="AST: "];
"1000991" -> "1000992"  [label="CFG: "];
"1000992" -> "1000991"  [label="AST: "];
"1000988" -> "1000991"  [label="CFG: "];
"1000991" -> "1001118"  [label="DDG: s"];
"1000991" -> "1000988"  [label="DDG: s"];
"1000989" -> "1000991"  [label="DDG: s"];
"1000126" -> "1000991"  [label="DDG: s"];
"1000989" -> "1000988"  [label="AST: "];
"1000989" -> "1000990"  [label="CFG: "];
"1000990" -> "1000989"  [label="AST: "];
"1000992" -> "1000989"  [label="CFG: "];
"1000988" -> "1000989"  [label="CFG: "];
"1000989" -> "1001118"  [label="DDG: s"];
"1000989" -> "1000988"  [label="DDG: s"];
"1000646" -> "1000989"  [label="DDG: s"];
"1000126" -> "1000989"  [label="DDG: s"];
"1000646" -> "1000645"  [label="AST: "];
"1000646" -> "1000647"  [label="CFG: "];
"1000647" -> "1000646"  [label="AST: "];
"1000648" -> "1000646"  [label="CFG: "];
"1000646" -> "1001118"  [label="DDG: s"];
"1000646" -> "1000645"  [label="DDG: s"];
"1000502" -> "1000646"  [label="DDG: s"];
"1000126" -> "1000646"  [label="DDG: s"];
"1000502" -> "1000501"  [label="AST: "];
"1000502" -> "1000503"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000504" -> "1000502"  [label="CFG: "];
"1000502" -> "1001118"  [label="DDG: s"];
"1000502" -> "1000501"  [label="DDG: s"];
"1000270" -> "1000502"  [label="DDG: s"];
"1000126" -> "1000502"  [label="DDG: s"];
"1000270" -> "1000269"  [label="AST: "];
"1000270" -> "1000275"  [label="CFG: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000273" -> "1000270"  [label="AST: "];
"1000275" -> "1000270"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1001118"  [label="DDG: el"];
"1000270" -> "1001118"  [label="DDG: &el"];
"1000270" -> "1001118"  [label="DDG: ret"];
"1000270" -> "1001118"  [label="DDG: s"];
"1000270" -> "1000269"  [label="DDG: s"];
"1000270" -> "1000269"  [label="DDG: ret"];
"1000270" -> "1000269"  [label="DDG: &el"];
"1000270" -> "1000269"  [label="DDG: el"];
"1000238" -> "1000270"  [label="DDG: s"];
"1000238" -> "1000270"  [label="DDG: &el"];
"1000126" -> "1000270"  [label="DDG: s"];
"1000265" -> "1000270"  [label="DDG: ret"];
"1000265" -> "1000270"  [label="DDG: el"];
"1000270" -> "1000282"  [label="DDG: el"];
"1000270" -> "1000282"  [label="DDG: ret"];
"1000270" -> "1001007"  [label="DDG: el"];
"1000238" -> "1000237"  [label="AST: "];
"1000238" -> "1000243"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000241" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1001118"  [label="DDG: s"];
"1000238" -> "1001118"  [label="DDG: &el"];
"1000238" -> "1000237"  [label="DDG: s"];
"1000238" -> "1000237"  [label="DDG: 0"];
"1000238" -> "1000237"  [label="DDG: &el"];
"1000126" -> "1000238"  [label="DDG: s"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1001118"  [label="DDG: s"];
"1000126" -> "1001020"  [label="DDG: s"];
"1000265" -> "1000234"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000271" -> "1000265"  [label="CFG: "];
"1000265" -> "1001118"  [label="DDG: s2n(el,ret)"];
"1000256" -> "1000265"  [label="DDG: el"];
"1000262" -> "1000265"  [label="DDG: ret"];
"1000256" -> "1000254"  [label="AST: "];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000256" -> "1001118"  [label="DDG: el"];
"1000256" -> "1000254"  [label="DDG: 4"];
"1000256" -> "1000254"  [label="DDG: el"];
"1000262" -> "1000234"  [label="AST: "];
"1000262" -> "1000264"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="CFG: "];
"1000262" -> "1001118"  [label="DDG: TLSEXT_TYPE_renegotiate"];
"1000262" -> "1001118"  [label="DDG: s2n(TLSEXT_TYPE_renegotiate,ret)"];
"1000254" -> "1000262"  [label="DDG: ret"];
"1000254" -> "1000252"  [label="AST: "];
"1000255" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1001118"  [label="DDG: ret"];
"1000254" -> "1001118"  [label="DDG: 4 - el"];
"1000254" -> "1000252"  [label="DDG: ret"];
"1000254" -> "1000252"  [label="DDG: 4 - el"];
"1000227" -> "1000254"  [label="DDG: ret"];
"1000161" -> "1000254"  [label="DDG: ret"];
"1000227" -> "1000172"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000232" -> "1000227"  [label="CFG: "];
"1000227" -> "1001118"  [label="DDG: ret"];
"1000227" -> "1001118"  [label="DDG: size_str"];
"1000221" -> "1000227"  [label="DDG: size_str"];
"1000221" -> "1000227"  [label="DDG: ret"];
"1000227" -> "1000321"  [label="DDG: ret"];
"1000227" -> "1000369"  [label="DDG: ret"];
"1000227" -> "1000443"  [label="DDG: ret"];
"1000227" -> "1000615"  [label="DDG: ret"];
"1000227" -> "1000654"  [label="DDG: ret"];
"1000227" -> "1000714"  [label="DDG: ret"];
"1000227" -> "1000835"  [label="DDG: ret"];
"1000227" -> "1000924"  [label="DDG: ret"];
"1000221" -> "1000172"  [label="AST: "];
"1000221" -> "1000226"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="AST: "];
"1000228" -> "1000221"  [label="CFG: "];
"1000221" -> "1001118"  [label="DDG: memcpy(ret, s->tlsext_hostname, size_str)"];
"1000221" -> "1001118"  [label="DDG: s->tlsext_hostname"];
"1000218" -> "1000221"  [label="DDG: ret"];
"1000218" -> "1000221"  [label="DDG: size_str"];
"1000167" -> "1000221"  [label="DDG: s->tlsext_hostname"];
"1000189" -> "1000221"  [label="DDG: s->tlsext_hostname"];
"1000218" -> "1000172"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000222" -> "1000218"  [label="CFG: "];
"1000218" -> "1001118"  [label="DDG: s2n(size_str,ret)"];
"1000187" -> "1000218"  [label="DDG: size_str"];
"1000213" -> "1000218"  [label="DDG: ret"];
"1000187" -> "1000186"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000194" -> "1000187"  [label="CFG: "];
"1000187" -> "1001118"  [label="DDG: size_str"];
"1000187" -> "1001118"  [label="DDG: strlen(s->tlsext_hostname)"];
"1000187" -> "1000186"  [label="DDG: size_str"];
"1000189" -> "1000187"  [label="DDG: s->tlsext_hostname"];
"1000187" -> "1000201"  [label="DDG: size_str"];
"1000187" -> "1000202"  [label="DDG: size_str"];
"1000187" -> "1000206"  [label="DDG: size_str"];
"1000187" -> "1000207"  [label="DDG: size_str"];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000189" -> "1001118"  [label="DDG: s->tlsext_hostname"];
"1000189" -> "1000186"  [label="DDG: s->tlsext_hostname"];
"1000167" -> "1000189"  [label="DDG: s->tlsext_hostname"];
"1000167" -> "1000166"  [label="AST: "];
"1000167" -> "1000171"  [label="CFG: "];
"1000168" -> "1000167"  [label="AST: "];
"1000171" -> "1000167"  [label="AST: "];
"1000179" -> "1000167"  [label="CFG: "];
"1000232" -> "1000167"  [label="CFG: "];
"1000167" -> "1001118"  [label="DDG: s->tlsext_hostname"];
"1000167" -> "1001118"  [label="DDG: s->tlsext_hostname != NULL"];
"1000167" -> "1001118"  [label="DDG: NULL"];
"1000167" -> "1000196"  [label="DDG: NULL"];
"1000167" -> "1000248"  [label="DDG: NULL"];
"1000167" -> "1000260"  [label="DDG: NULL"];
"1000167" -> "1000280"  [label="DDG: NULL"];
"1000167" -> "1000286"  [label="DDG: NULL"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000206" -> "1000213"  [label="DDG: ret"];
"1000206" -> "1000172"  [label="AST: "];
"1000206" -> "1000210"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="AST: "];
"1000214" -> "1000206"  [label="CFG: "];
"1000206" -> "1001118"  [label="DDG: s2n(size_str+3,ret)"];
"1000206" -> "1001118"  [label="DDG: size_str+3"];
"1000201" -> "1000206"  [label="DDG: ret"];
"1000201" -> "1000172"  [label="AST: "];
"1000201" -> "1000205"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000205" -> "1000201"  [label="AST: "];
"1000208" -> "1000201"  [label="CFG: "];
"1000201" -> "1001118"  [label="DDG: s2n(size_str+5,ret)"];
"1000201" -> "1001118"  [label="DDG: size_str+5"];
"1000198" -> "1000201"  [label="DDG: ret"];
"1000198" -> "1000172"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="CFG: "];
"1000198" -> "1001118"  [label="DDG: TLSEXT_TYPE_server_name"];
"1000198" -> "1001118"  [label="DDG: s2n(TLSEXT_TYPE_server_name,ret)"];
"1000182" -> "1000198"  [label="DDG: ret"];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000182" -> "1001118"  [label="DDG: ret"];
"1000182" -> "1000180"  [label="DDG: ret"];
"1000182" -> "1000180"  [label="DDG: 9"];
"1000161" -> "1000182"  [label="DDG: ret"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="CFG: "];
"1000169" -> "1000161"  [label="CFG: "];
"1000161" -> "1001118"  [label="DDG: limit"];
"1000161" -> "1001118"  [label="DDG: ret"];
"1000161" -> "1001118"  [label="DDG: ret>=limit"];
"1000157" -> "1000161"  [label="DDG: ret"];
"1000128" -> "1000161"  [label="DDG: limit"];
"1000161" -> "1000180"  [label="DDG: limit"];
"1000161" -> "1000252"  [label="DDG: limit"];
"1000161" -> "1000319"  [label="DDG: limit"];
"1000161" -> "1000321"  [label="DDG: ret"];
"1000161" -> "1000367"  [label="DDG: limit"];
"1000161" -> "1000369"  [label="DDG: ret"];
"1000161" -> "1000441"  [label="DDG: limit"];
"1000161" -> "1000443"  [label="DDG: ret"];
"1000161" -> "1000613"  [label="DDG: limit"];
"1000161" -> "1000615"  [label="DDG: ret"];
"1000161" -> "1000654"  [label="DDG: limit"];
"1000161" -> "1000654"  [label="DDG: ret"];
"1000161" -> "1000712"  [label="DDG: limit"];
"1000161" -> "1000714"  [label="DDG: ret"];
"1000161" -> "1000833"  [label="DDG: limit"];
"1000161" -> "1000835"  [label="DDG: ret"];
"1000161" -> "1000922"  [label="DDG: limit"];
"1000161" -> "1000924"  [label="DDG: ret"];
"1000157" -> "1000129"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000162" -> "1000157"  [label="CFG: "];
"1000139" -> "1000157"  [label="DDG: ret"];
"1000139" -> "1000129"  [label="AST: "];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000146" -> "1000139"  [label="CFG: "];
"1000139" -> "1001118"  [label="DDG: buf"];
"1000139" -> "1001118"  [label="DDG: ret"];
"1000127" -> "1000139"  [label="DDG: buf"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1001118"  [label="DDG: buf"];
"1000127" -> "1000135"  [label="DDG: buf"];
"1000128" -> "1000125"  [label="AST: "];
"1000128" -> "1001118"  [label="DDG: limit"];
"1000128" -> "1000180"  [label="DDG: limit"];
"1000128" -> "1000252"  [label="DDG: limit"];
"1000128" -> "1000319"  [label="DDG: limit"];
"1000128" -> "1000367"  [label="DDG: limit"];
"1000128" -> "1000441"  [label="DDG: limit"];
"1000128" -> "1000613"  [label="DDG: limit"];
"1000128" -> "1000654"  [label="DDG: limit"];
"1000128" -> "1000712"  [label="DDG: limit"];
"1000128" -> "1000833"  [label="DDG: limit"];
"1000128" -> "1000922"  [label="DDG: limit"];
"1000128" -> "1000973"  [label="DDG: limit"];
"1000128" -> "1001003"  [label="DDG: limit"];
"1001020" -> "1001019"  [label="AST: "];
"1001020" -> "1001025"  [label="CFG: "];
"1001021" -> "1001020"  [label="AST: "];
"1001022" -> "1001020"  [label="AST: "];
"1001023" -> "1001020"  [label="AST: "];
"1001025" -> "1001020"  [label="AST: "];
"1001028" -> "1001020"  [label="CFG: "];
"1001033" -> "1001020"  [label="CFG: "];
"1001020" -> "1001118"  [label="DDG: s"];
"1001020" -> "1001118"  [label="DDG: ssl_add_clienthello_use_srtp_ext(s, ret, &el, el)"];
"1001020" -> "1001118"  [label="DDG: &el"];
"1001020" -> "1001118"  [label="DDG: ret"];
"1001020" -> "1001118"  [label="DDG: el"];
"1001016" -> "1001020"  [label="DDG: ret"];
"1001016" -> "1001020"  [label="DDG: el"];
"1001020" -> "1001032"  [label="DDG: el"];
"1001020" -> "1001032"  [label="DDG: ret"];
"1001032" -> "1000993"  [label="AST: "];
"1001032" -> "1001034"  [label="CFG: "];
"1001033" -> "1001032"  [label="AST: "];
"1001034" -> "1001032"  [label="AST: "];
"1001038" -> "1001032"  [label="CFG: "];
"1001032" -> "1001118"  [label="DDG: el"];
"1001032" -> "1001045"  [label="DDG: ret"];
"1001032" -> "1001105"  [label="DDG: ret"];
"1001045" -> "1001043"  [label="AST: "];
"1001045" -> "1001047"  [label="CFG: "];
"1001046" -> "1001045"  [label="AST: "];
"1001047" -> "1001045"  [label="AST: "];
"1001043" -> "1001045"  [label="CFG: "];
"1001045" -> "1001118"  [label="DDG: (unsigned char *)s->init_buf->data"];
"1001045" -> "1001043"  [label="DDG: ret"];
"1001045" -> "1001043"  [label="DDG: (unsigned char *)s->init_buf->data"];
"1000952" -> "1001045"  [label="DDG: ret"];
"1000946" -> "1001045"  [label="DDG: ret"];
"1000984" -> "1001045"  [label="DDG: ret"];
"1001047" -> "1001045"  [label="DDG: s->init_buf->data"];
"1001045" -> "1001088"  [label="DDG: ret"];
"1001045" -> "1001105"  [label="DDG: ret"];
"1001043" -> "1001041"  [label="AST: "];
"1001044" -> "1001043"  [label="AST: "];
"1001057" -> "1001043"  [label="CFG: "];
"1001043" -> "1001118"  [label="DDG: ret - (unsigned char *)s->init_buf->data"];
"1001043" -> "1001060"  [label="DDG: hlen"];
"1001043" -> "1001065"  [label="DDG: hlen"];
"1001060" -> "1001054"  [label="AST: "];
"1001060" -> "1001062"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001062" -> "1001060"  [label="AST: "];
"1001066" -> "1001060"  [label="CFG: "];
"1001060" -> "1001065"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="AST: "];
"1001065" -> "1001067"  [label="CFG: "];
"1001066" -> "1001065"  [label="AST: "];
"1001067" -> "1001065"  [label="AST: "];
"1001069" -> "1001065"  [label="CFG: "];
"1001064" -> "1001065"  [label="CFG: "];
"1001065" -> "1001118"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="DDG: hlen"];
"1001065" -> "1001064"  [label="DDG: 0xff"];
"1001065" -> "1001068"  [label="DDG: hlen"];
"1001065" -> "1001074"  [label="DDG: hlen"];
"1001064" -> "1001063"  [label="AST: "];
"1001064" -> "1001068"  [label="CFG: "];
"1001068" -> "1001064"  [label="AST: "];
"1001073" -> "1001064"  [label="CFG: "];
"1001104" -> "1001064"  [label="CFG: "];
"1001064" -> "1001118"  [label="DDG: hlen > 0xff && hlen < 0x200"];
"1001064" -> "1001118"  [label="DDG: hlen > 0xff"];
"1001064" -> "1001118"  [label="DDG: hlen < 0x200"];
"1001068" -> "1001064"  [label="DDG: hlen"];
"1001068" -> "1001064"  [label="DDG: 0x200"];
"1001068" -> "1001070"  [label="CFG: "];
"1001069" -> "1001068"  [label="AST: "];
"1001070" -> "1001068"  [label="AST: "];
"1001068" -> "1001118"  [label="DDG: hlen"];
"1001068" -> "1001074"  [label="DDG: hlen"];
"1001074" -> "1001072"  [label="AST: "];
"1001074" -> "1001076"  [label="CFG: "];
"1001075" -> "1001074"  [label="AST: "];
"1001076" -> "1001074"  [label="AST: "];
"1001072" -> "1001074"  [label="CFG: "];
"1001074" -> "1001072"  [label="DDG: 0x200"];
"1001074" -> "1001072"  [label="DDG: hlen"];
"1001072" -> "1001071"  [label="AST: "];
"1001073" -> "1001072"  [label="AST: "];
"1001079" -> "1001072"  [label="CFG: "];
"1001072" -> "1001118"  [label="DDG: 0x200 - hlen"];
"1001072" -> "1001078"  [label="DDG: hlen"];
"1001078" -> "1001077"  [label="AST: "];
"1001078" -> "1001080"  [label="CFG: "];
"1001079" -> "1001078"  [label="AST: "];
"1001080" -> "1001078"  [label="AST: "];
"1001082" -> "1001078"  [label="CFG: "];
"1001086" -> "1001078"  [label="CFG: "];
"1001078" -> "1001118"  [label="DDG: hlen >= 4"];
"1001078" -> "1001081"  [label="DDG: hlen"];
"1001081" -> "1001077"  [label="AST: "];
"1001081" -> "1001083"  [label="CFG: "];
"1001082" -> "1001081"  [label="AST: "];
"1001083" -> "1001081"  [label="AST: "];
"1001089" -> "1001081"  [label="CFG: "];
"1001081" -> "1001091"  [label="DDG: hlen"];
"1001091" -> "1001071"  [label="AST: "];
"1001091" -> "1001093"  [label="CFG: "];
"1001092" -> "1001091"  [label="AST: "];
"1001093" -> "1001091"  [label="AST: "];
"1001095" -> "1001091"  [label="CFG: "];
"1001091" -> "1001118"  [label="DDG: s2n(hlen, ret)"];
"1001085" -> "1001091"  [label="DDG: hlen"];
"1001088" -> "1001091"  [label="DDG: ret"];
"1001091" -> "1001094"  [label="DDG: ret"];
"1001091" -> "1001094"  [label="DDG: hlen"];
"1001094" -> "1001071"  [label="AST: "];
"1001094" -> "1001097"  [label="CFG: "];
"1001095" -> "1001094"  [label="AST: "];
"1001096" -> "1001094"  [label="AST: "];
"1001097" -> "1001094"  [label="AST: "];
"1001099" -> "1001094"  [label="CFG: "];
"1001094" -> "1001118"  [label="DDG: memset(ret, 0, hlen)"];
"1001094" -> "1001098"  [label="DDG: hlen"];
"1001094" -> "1001098"  [label="DDG: ret"];
"1001098" -> "1001071"  [label="AST: "];
"1001098" -> "1001100"  [label="CFG: "];
"1001099" -> "1001098"  [label="AST: "];
"1001100" -> "1001098"  [label="AST: "];
"1001104" -> "1001098"  [label="CFG: "];
"1001098" -> "1001118"  [label="DDG: hlen"];
"1001098" -> "1001105"  [label="DDG: ret"];
"1001105" -> "1001103"  [label="AST: "];
"1001105" -> "1001107"  [label="CFG: "];
"1001106" -> "1001105"  [label="AST: "];
"1001107" -> "1001105"  [label="AST: "];
"1001103" -> "1001105"  [label="CFG: "];
"1001105" -> "1001118"  [label="DDG: orig-2"];
"1001105" -> "1001118"  [label="DDG: ret"];
"1001105" -> "1001102"  [label="DDG: ret"];
"1001105" -> "1001102"  [label="DDG: orig-2"];
"1001105" -> "1001103"  [label="DDG: ret"];
"1001105" -> "1001103"  [label="DDG: orig-2"];
"1000952" -> "1001105"  [label="DDG: ret"];
"1000946" -> "1001105"  [label="DDG: ret"];
"1000984" -> "1001105"  [label="DDG: ret"];
"1001107" -> "1001105"  [label="DDG: orig"];
"1001107" -> "1001105"  [label="DDG: 2"];
"1001105" -> "1001116"  [label="DDG: ret"];
"1001102" -> "1001101"  [label="AST: "];
"1001102" -> "1001110"  [label="CFG: "];
"1001103" -> "1001102"  [label="AST: "];
"1001110" -> "1001102"  [label="AST: "];
"1001112" -> "1001102"  [label="CFG: "];
"1001114" -> "1001102"  [label="CFG: "];
"1001102" -> "1001118"  [label="DDG: (extdatalen = ret-orig-2)== 0"];
"1001103" -> "1001102"  [label="DDG: extdatalen"];
"1001104" -> "1001103"  [label="AST: "];
"1001110" -> "1001103"  [label="CFG: "];
"1001103" -> "1001118"  [label="DDG: ret-orig-2"];
"1001103" -> "1001118"  [label="DDG: extdatalen"];
"1001103" -> "1001113"  [label="DDG: extdatalen"];
"1001113" -> "1000129"  [label="AST: "];
"1001113" -> "1001115"  [label="CFG: "];
"1001114" -> "1001113"  [label="AST: "];
"1001115" -> "1001113"  [label="AST: "];
"1001117" -> "1001113"  [label="CFG: "];
"1001113" -> "1001118"  [label="DDG: s2n(extdatalen, orig)"];
"1001113" -> "1001118"  [label="DDG: extdatalen"];
"1001113" -> "1001118"  [label="DDG: orig"];
"1001107" -> "1001113"  [label="DDG: orig"];
"1001116" -> "1000129"  [label="AST: "];
"1001116" -> "1001117"  [label="CFG: "];
"1001117" -> "1001116"  [label="AST: "];
"1001118" -> "1001116"  [label="CFG: "];
"1001116" -> "1001118"  [label="DDG: <RET>"];
"1001117" -> "1001116"  [label="DDG: ret"];
"1001088" -> "1001071"  [label="AST: "];
"1001088" -> "1001090"  [label="CFG: "];
"1001089" -> "1001088"  [label="AST: "];
"1001090" -> "1001088"  [label="AST: "];
"1001092" -> "1001088"  [label="CFG: "];
"1001088" -> "1001118"  [label="DDG: s2n(TLSEXT_TYPE_padding, ret)"];
"1001088" -> "1001118"  [label="DDG: TLSEXT_TYPE_padding"];
}
