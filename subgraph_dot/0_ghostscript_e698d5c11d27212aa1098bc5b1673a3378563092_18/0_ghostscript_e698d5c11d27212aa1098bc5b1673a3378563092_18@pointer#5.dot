digraph "0_ghostscript_e698d5c11d27212aa1098bc5b1673a3378563092_18@pointer" {
"1000247" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_WARNING, segment->number, \"failed to allocate storage for text region\"))"];
"1000239" [label="(Call,jbig2_huffman_new(ctx, ws))"];
"1000230" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"huffman coded text region\"))"];
"1000201" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"symbol list contains %d glyphs in %d dictionaries\", SBNUMSYMS, n_dicts))"];
"1000136" [label="(MethodParameterIn,Jbig2Ctx *ctx)"];
"1000181" [label="(Call,SBNUMSYMS = 0)"];
"1000194" [label="(Call,SBNUMSYMS += dicts[index]->n_symbols)"];
"1000188" [label="(Call,index < n_dicts)"];
"1000185" [label="(Call,index = 0)"];
"1000191" [label="(Call,index++)"];
"1000140" [label="(MethodParameterIn,const uint32_t n_dicts)"];
"1000146" [label="(MethodParameterIn,Jbig2WordStream *ws)"];
"1000327" [label="(Call,jbig2_build_huffman_table(ctx, &runcodeparams))"];
"1000246" [label="(Block,)"];
"1000336" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"error constructing symbol id runcode table!\"))"];
"1000929" [label="(Call,ID >= SBNUMSYMS)"];
"1000249" [label="(Identifier,JBIG2_SEVERITY_WARNING)"];
"1000935" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"symbol id out of range! (%d/%d)\", ID, SBNUMSYMS))"];
"1001195" [label="(Call,jbig2_image_new(ctx, IBO->width + RDW, IBO->height + RDH))"];
"1001576" [label="(Call,jbig2_release_huffman_table(ctx, SBSYMCODES))"];
"1000195" [label="(Identifier,SBNUMSYMS)"];
"1000656" [label="(Call,jbig2_image_clear(ctx, image, params->SBDEFPIXEL))"];
"1000237" [label="(Call,hs = jbig2_huffman_new(ctx, ws))"];
"1001182" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"failed to decode data\"))"];
"1000140" [label="(MethodParameterIn,const uint32_t n_dicts)"];
"1000183" [label="(Literal,0)"];
"1001567" [label="(Call,jbig2_image_release(ctx, IB))"];
"1001220" [label="(Call,jbig2_release_huffman_table(ctx, SBSYMCODES))"];
"1001523" [label="(Call,jbig2_image_release(ctx, IB))"];
"1000186" [label="(Identifier,index)"];
"1000136" [label="(MethodParameterIn,Jbig2Ctx *ctx)"];
"1000203" [label="(Identifier,JBIG2_SEVERITY_DEBUG)"];
"1000253" [label="(Literal,\"failed to allocate storage for text region\")"];
"1000359" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"memory allocation failure reading symbol ID huffman table!\"))"];
"1001293" [label="(Call,jbig2_image_release(ctx, refimage))"];
"1000630" [label="(Call,jbig2_release_huffman_table(ctx, runcodes))"];
"1001579" [label="(Call,jbig2_huffman_free(ctx, hs))"];
"1000192" [label="(Identifier,index)"];
"1000233" [label="(Call,segment->number)"];
"1000239" [label="(Call,jbig2_huffman_new(ctx, ws))"];
"1000807" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"too many NINSTANCES (%d) decoded\", NINSTANCES))"];
"1000147" [label="(Block,)"];
"1000232" [label="(Identifier,JBIG2_SEVERITY_DEBUG)"];
"1000512" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"  read runcode%d at index %d (length %d range %d)\", code, index, len, range))"];
"1001231" [label="(Call,jbig2_image_clear(ctx, refimage, 0x00))"];
"1001280" [label="(Call,jbig2_decode_refinement_region(ctx, segment, &rparams, as, refimage, GR_stats))"];
"1000209" [label="(Identifier,n_dicts)"];
"1000190" [label="(Identifier,n_dicts)"];
"1000240" [label="(Identifier,ctx)"];
"1000645" [label="(Call,jbig2_huffman_free(ctx, hs))"];
"1000185" [label="(Call,index = 0)"];
"1000638" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"could not construct Symbol ID huffman table!\"))"];
"1000297" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"  read runcode%d length %d\", index, runcodelengths[index].PREFLEN))"];
"1000230" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"huffman coded text region\"))"];
"1000202" [label="(Identifier,ctx)"];
"1000530" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_WARNING, segment->number,\n                            \"runlength extends %d entries beyond the end of symbol id table!\", index + range - SBNUMSYMS))"];
"1000986" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"missing glyph %d/%d!\", index, id))"];
"1000184" [label="(ControlStructure,for (index = 0; index < n_dicts; index++))"];
"1000193" [label="(Block,)"];
"1000189" [label="(Identifier,index)"];
"1000187" [label="(Literal,0)"];
"1000207" [label="(Literal,\"symbol list contains %d glyphs in %d dictionaries\")"];
"1000238" [label="(Identifier,hs)"];
"1000620" [label="(Call,jbig2_build_huffman_table(ctx, &symcodeparams))"];
"1000196" [label="(Call,dicts[index]->n_symbols)"];
"1000201" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number, \"symbol list contains %d glyphs in %d dictionaries\", SBNUMSYMS, n_dicts))"];
"1001224" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"couldn't allocate reference image\"))"];
"1000231" [label="(Identifier,ctx)"];
"1000241" [label="(Identifier,ws)"];
"1000437" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"error decoding symbol id table: run length with no antecedent!\"))"];
"1000214" [label="(Block,)"];
"1000212" [label="(Identifier,params)"];
"1000248" [label="(Identifier,ctx)"];
"1000204" [label="(Call,segment->number)"];
"1000236" [label="(Literal,\"huffman coded text region\")"];
"1000247" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_WARNING, segment->number, \"failed to allocate storage for text region\"))"];
"1001300" [label="(Call,jbig2_image_release(ctx, IBO))"];
"1001509" [label="(Call,jbig2_image_compose(ctx, image, IB, x, y, params->SBCOMBOP))"];
"1001584" [label="(MethodReturn,RET)"];
"1001485" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_DEBUG, segment->number,\n                        \"composing glyph id %d: %dx%d @ (%d,%d) symbol %d/%d\", ID, IB->width, IB->height, x, y, NINSTANCES + 1, params->SBNUMINSTANCES))"];
"1000191" [label="(Call,index++)"];
"1000146" [label="(MethodParameterIn,Jbig2WordStream *ws)"];
"1000256" [label="(Literal,1)"];
"1000188" [label="(Call,index < n_dicts)"];
"1000971" [label="(Call,jbig2_image_clone(ctx, dicts[index]->glyphs[id]))"];
"1000250" [label="(Call,segment->number)"];
"1000181" [label="(Call,SBNUMSYMS = 0)"];
"1000208" [label="(Identifier,SBNUMSYMS)"];
"1000182" [label="(Identifier,SBNUMSYMS)"];
"1000194" [label="(Call,SBNUMSYMS += dicts[index]->n_symbols)"];
"1000594" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_WARNING, segment->number, \"runlength codes do not cover the available symbol set\"))"];
"1001212" [label="(Call,jbig2_image_release(ctx, IBO))"];
"1000399" [label="(Call,jbig2_error(ctx, JBIG2_SEVERITY_FATAL, segment->number, \"error reading symbol ID huffman table!\"))"];
"1000350" [label="(Call,jbig2_new(ctx, Jbig2HuffmanLine, SBNUMSYMS))"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000253"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000253" -> "1000247"  [label="AST: "];
"1000256" -> "1000247"  [label="CFG: "];
"1000247" -> "1001584"  [label="DDG: "];
"1000247" -> "1001584"  [label="DDG: "];
"1000247" -> "1001584"  [label="DDG: "];
"1000247" -> "1001584"  [label="DDG: "];
"1000239" -> "1000247"  [label="DDG: "];
"1000136" -> "1000247"  [label="DDG: "];
"1000230" -> "1000247"  [label="DDG: "];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1001584"  [label="DDG: "];
"1000239" -> "1000237"  [label="DDG: "];
"1000239" -> "1000237"  [label="DDG: "];
"1000230" -> "1000239"  [label="DDG: "];
"1000136" -> "1000239"  [label="DDG: "];
"1000146" -> "1000239"  [label="DDG: "];
"1000239" -> "1000297"  [label="DDG: "];
"1000239" -> "1000327"  [label="DDG: "];
"1000239" -> "1000630"  [label="DDG: "];
"1000230" -> "1000214"  [label="AST: "];
"1000230" -> "1000236"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000233" -> "1000230"  [label="AST: "];
"1000236" -> "1000230"  [label="AST: "];
"1000238" -> "1000230"  [label="CFG: "];
"1000230" -> "1001584"  [label="DDG: "];
"1000230" -> "1001584"  [label="DDG: "];
"1000230" -> "1001584"  [label="DDG: "];
"1000201" -> "1000230"  [label="DDG: "];
"1000201" -> "1000230"  [label="DDG: "];
"1000201" -> "1000230"  [label="DDG: "];
"1000136" -> "1000230"  [label="DDG: "];
"1000230" -> "1000297"  [label="DDG: "];
"1000230" -> "1000297"  [label="DDG: "];
"1000230" -> "1000336"  [label="DDG: "];
"1000230" -> "1000359"  [label="DDG: "];
"1000230" -> "1000399"  [label="DDG: "];
"1000230" -> "1000437"  [label="DDG: "];
"1000230" -> "1000512"  [label="DDG: "];
"1000230" -> "1000512"  [label="DDG: "];
"1000230" -> "1000594"  [label="DDG: "];
"1000230" -> "1000638"  [label="DDG: "];
"1000230" -> "1000807"  [label="DDG: "];
"1000230" -> "1000935"  [label="DDG: "];
"1000230" -> "1000986"  [label="DDG: "];
"1000230" -> "1001182"  [label="DDG: "];
"1000230" -> "1001224"  [label="DDG: "];
"1000230" -> "1001485"  [label="DDG: "];
"1000230" -> "1001485"  [label="DDG: "];
"1000201" -> "1000147"  [label="AST: "];
"1000201" -> "1000209"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000203" -> "1000201"  [label="AST: "];
"1000204" -> "1000201"  [label="AST: "];
"1000207" -> "1000201"  [label="AST: "];
"1000208" -> "1000201"  [label="AST: "];
"1000209" -> "1000201"  [label="AST: "];
"1000212" -> "1000201"  [label="CFG: "];
"1000201" -> "1001584"  [label="DDG: "];
"1000201" -> "1001584"  [label="DDG: "];
"1000201" -> "1001584"  [label="DDG: "];
"1000201" -> "1001584"  [label="DDG: "];
"1000201" -> "1001584"  [label="DDG: "];
"1000136" -> "1000201"  [label="DDG: "];
"1000181" -> "1000201"  [label="DDG: "];
"1000194" -> "1000201"  [label="DDG: "];
"1000188" -> "1000201"  [label="DDG: "];
"1000140" -> "1000201"  [label="DDG: "];
"1000201" -> "1000350"  [label="DDG: "];
"1000201" -> "1000656"  [label="DDG: "];
"1000201" -> "1000807"  [label="DDG: "];
"1000201" -> "1000929"  [label="DDG: "];
"1000201" -> "1000935"  [label="DDG: "];
"1000201" -> "1000986"  [label="DDG: "];
"1000201" -> "1001182"  [label="DDG: "];
"1000201" -> "1001224"  [label="DDG: "];
"1000201" -> "1001485"  [label="DDG: "];
"1000201" -> "1001485"  [label="DDG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1001584"  [label="DDG: "];
"1000136" -> "1000297"  [label="DDG: "];
"1000136" -> "1000327"  [label="DDG: "];
"1000136" -> "1000336"  [label="DDG: "];
"1000136" -> "1000350"  [label="DDG: "];
"1000136" -> "1000359"  [label="DDG: "];
"1000136" -> "1000399"  [label="DDG: "];
"1000136" -> "1000437"  [label="DDG: "];
"1000136" -> "1000512"  [label="DDG: "];
"1000136" -> "1000530"  [label="DDG: "];
"1000136" -> "1000594"  [label="DDG: "];
"1000136" -> "1000620"  [label="DDG: "];
"1000136" -> "1000630"  [label="DDG: "];
"1000136" -> "1000638"  [label="DDG: "];
"1000136" -> "1000645"  [label="DDG: "];
"1000136" -> "1000656"  [label="DDG: "];
"1000136" -> "1000807"  [label="DDG: "];
"1000136" -> "1000935"  [label="DDG: "];
"1000136" -> "1000971"  [label="DDG: "];
"1000136" -> "1000986"  [label="DDG: "];
"1000136" -> "1001182"  [label="DDG: "];
"1000136" -> "1001195"  [label="DDG: "];
"1000136" -> "1001212"  [label="DDG: "];
"1000136" -> "1001220"  [label="DDG: "];
"1000136" -> "1001224"  [label="DDG: "];
"1000136" -> "1001231"  [label="DDG: "];
"1000136" -> "1001280"  [label="DDG: "];
"1000136" -> "1001293"  [label="DDG: "];
"1000136" -> "1001300"  [label="DDG: "];
"1000136" -> "1001485"  [label="DDG: "];
"1000136" -> "1001509"  [label="DDG: "];
"1000136" -> "1001523"  [label="DDG: "];
"1000136" -> "1001567"  [label="DDG: "];
"1000136" -> "1001576"  [label="DDG: "];
"1000136" -> "1001579"  [label="DDG: "];
"1000181" -> "1000147"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000186" -> "1000181"  [label="CFG: "];
"1000181" -> "1000194"  [label="DDG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000194" -> "1001584"  [label="DDG: "];
"1000188" -> "1000184"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000202" -> "1000188"  [label="CFG: "];
"1000188" -> "1001584"  [label="DDG: "];
"1000188" -> "1001584"  [label="DDG: "];
"1000185" -> "1000188"  [label="DDG: "];
"1000191" -> "1000188"  [label="DDG: "];
"1000140" -> "1000188"  [label="DDG: "];
"1000188" -> "1000191"  [label="DDG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="CFG: "];
"1000191" -> "1000184"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000140" -> "1000135"  [label="AST: "];
"1000140" -> "1001584"  [label="DDG: "];
"1000146" -> "1000135"  [label="AST: "];
"1000146" -> "1001584"  [label="DDG: "];
}
