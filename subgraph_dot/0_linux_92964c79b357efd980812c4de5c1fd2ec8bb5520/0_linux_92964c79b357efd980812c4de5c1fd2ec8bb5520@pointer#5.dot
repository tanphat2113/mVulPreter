digraph "0_linux_92964c79b357efd980812c4de5c1fd2ec8bb5520@pointer" {
"1000151" [label="(Call,cb = &nlk->cb)"];
"1000213" [label="(Call,cb->dump(skb, cb))"];
"1000211" [label="(Call,len = cb->dump(skb, cb))"];
"1000217" [label="(Call,len > 0)"];
"1000226" [label="(Call,sk_filter(sk, skb))"];
"1000229" [label="(Call,kfree_skb(skb))"];
"1000232" [label="(Call,__netlink_sendskb(sk, skb))"];
"1000239" [label="(Call,nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI))"];
"1000237" [label="(Call,nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI))"];
"1000247" [label="(Call,!nlh)"];
"1000250" [label="(Call,nl_dump_check_consistent(cb, nlh))"];
"1000254" [label="(Call,nlmsg_data(nlh))"];
"1000253" [label="(Call,memcpy(nlmsg_data(nlh), &len, sizeof(len)))"];
"1000274" [label="(Call,cb->done(cb))"];
"1000261" [label="(Call,sk_filter(sk, skb))"];
"1000264" [label="(Call,kfree_skb(skb))"];
"1000267" [label="(Call,__netlink_sendskb(sk, skb))"];
"1000306" [label="(Call,kfree_skb(skb))"];
"1000249" [label="(ControlStructure,goto errout_skb;)"];
"1000226" [label="(Call,sk_filter(sk, skb))"];
"1000268" [label="(Identifier,sk)"];
"1000307" [label="(Identifier,skb)"];
"1000265" [label="(Identifier,skb)"];
"1000274" [label="(Call,cb->done(cb))"];
"1000247" [label="(Call,!nlh)"];
"1000219" [label="(Literal,0)"];
"1000267" [label="(Call,__netlink_sendskb(sk, skb))"];
"1000199" [label="(Call,!skb)"];
"1000243" [label="(Call,sizeof(len))"];
"1000223" [label="(Identifier,nlk)"];
"1000151" [label="(Call,cb = &nlk->cb)"];
"1000232" [label="(Call,__netlink_sendskb(sk, skb))"];
"1000237" [label="(Call,nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI))"];
"1000242" [label="(Identifier,NLMSG_DONE)"];
"1000278" [label="(Identifier,nlk)"];
"1000251" [label="(Identifier,cb)"];
"1000264" [label="(Call,kfree_skb(skb))"];
"1000266" [label="(ControlStructure,else)"];
"1000225" [label="(ControlStructure,if (sk_filter(sk, skb)))"];
"1000270" [label="(ControlStructure,if (cb->done))"];
"1000212" [label="(Identifier,len)"];
"1000275" [label="(Identifier,cb)"];
"1000240" [label="(Identifier,skb)"];
"1000236" [label="(Literal,0)"];
"1000213" [label="(Call,cb->dump(skb, cb))"];
"1000253" [label="(Call,memcpy(nlmsg_data(nlh), &len, sizeof(len)))"];
"1000258" [label="(Call,sizeof(len))"];
"1000256" [label="(Call,&len)"];
"1000255" [label="(Identifier,nlh)"];
"1000230" [label="(Identifier,skb)"];
"1000254" [label="(Call,nlmsg_data(nlh))"];
"1000260" [label="(ControlStructure,if (sk_filter(sk, skb)))"];
"1000208" [label="(Call,netlink_skb_set_owner_r(skb, sk))"];
"1000262" [label="(Identifier,sk)"];
"1000152" [label="(Identifier,cb)"];
"1000257" [label="(Identifier,len)"];
"1000211" [label="(Call,len = cb->dump(skb, cb))"];
"1000263" [label="(Identifier,skb)"];
"1000241" [label="(Identifier,cb)"];
"1000227" [label="(Identifier,sk)"];
"1000216" [label="(ControlStructure,if (len > 0))"];
"1000306" [label="(Call,kfree_skb(skb))"];
"1000272" [label="(Identifier,cb)"];
"1000269" [label="(Identifier,skb)"];
"1000112" [label="(Call,*skb = NULL)"];
"1000246" [label="(ControlStructure,if (!nlh))"];
"1000238" [label="(Identifier,nlh)"];
"1000231" [label="(ControlStructure,else)"];
"1000239" [label="(Call,nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI))"];
"1000217" [label="(Call,len > 0)"];
"1000310" [label="(MethodReturn,static int)"];
"1000158" [label="(Identifier,alloc_min_size)"];
"1000228" [label="(Identifier,skb)"];
"1000218" [label="(Identifier,len)"];
"1000214" [label="(Identifier,skb)"];
"1000261" [label="(Call,sk_filter(sk, skb))"];
"1000245" [label="(Identifier,NLM_F_MULTI)"];
"1000233" [label="(Identifier,sk)"];
"1000234" [label="(Identifier,skb)"];
"1000252" [label="(Identifier,nlh)"];
"1000250" [label="(Call,nl_dump_check_consistent(cb, nlh))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000248" [label="(Identifier,nlh)"];
"1000104" [label="(Block,)"];
"1000215" [label="(Identifier,cb)"];
"1000309" [label="(Identifier,err)"];
"1000229" [label="(Call,kfree_skb(skb))"];
"1000153" [label="(Call,&nlk->cb)"];
"1000151" -> "1000104"  [label="AST: "];
"1000151" -> "1000153"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000158" -> "1000151"  [label="CFG: "];
"1000151" -> "1000310"  [label="DDG: cb"];
"1000151" -> "1000310"  [label="DDG: &nlk->cb"];
"1000151" -> "1000213"  [label="DDG: cb"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000215"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000310"  [label="DDG: cb"];
"1000213" -> "1000211"  [label="DDG: skb"];
"1000213" -> "1000211"  [label="DDG: cb"];
"1000208" -> "1000213"  [label="DDG: skb"];
"1000213" -> "1000226"  [label="DDG: skb"];
"1000213" -> "1000239"  [label="DDG: skb"];
"1000213" -> "1000239"  [label="DDG: cb"];
"1000211" -> "1000104"  [label="AST: "];
"1000212" -> "1000211"  [label="AST: "];
"1000218" -> "1000211"  [label="CFG: "];
"1000211" -> "1000310"  [label="DDG: cb->dump(skb, cb)"];
"1000211" -> "1000217"  [label="DDG: len"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="CFG: "];
"1000238" -> "1000217"  [label="CFG: "];
"1000217" -> "1000310"  [label="DDG: len > 0"];
"1000217" -> "1000310"  [label="DDG: len"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="CFG: "];
"1000233" -> "1000226"  [label="CFG: "];
"1000226" -> "1000310"  [label="DDG: sk_filter(sk, skb)"];
"1000226" -> "1000310"  [label="DDG: sk"];
"1000208" -> "1000226"  [label="DDG: sk"];
"1000103" -> "1000226"  [label="DDG: sk"];
"1000226" -> "1000229"  [label="DDG: skb"];
"1000226" -> "1000232"  [label="DDG: sk"];
"1000226" -> "1000232"  [label="DDG: skb"];
"1000229" -> "1000225"  [label="AST: "];
"1000229" -> "1000230"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000236" -> "1000229"  [label="CFG: "];
"1000229" -> "1000310"  [label="DDG: kfree_skb(skb)"];
"1000229" -> "1000310"  [label="DDG: skb"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000236" -> "1000232"  [label="CFG: "];
"1000232" -> "1000310"  [label="DDG: sk"];
"1000232" -> "1000310"  [label="DDG: __netlink_sendskb(sk, skb)"];
"1000232" -> "1000310"  [label="DDG: skb"];
"1000103" -> "1000232"  [label="DDG: sk"];
"1000239" -> "1000237"  [label="AST: "];
"1000239" -> "1000245"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000242" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000245" -> "1000239"  [label="AST: "];
"1000237" -> "1000239"  [label="CFG: "];
"1000239" -> "1000310"  [label="DDG: NLMSG_DONE"];
"1000239" -> "1000310"  [label="DDG: NLM_F_MULTI"];
"1000239" -> "1000310"  [label="DDG: cb"];
"1000239" -> "1000237"  [label="DDG: cb"];
"1000239" -> "1000237"  [label="DDG: skb"];
"1000239" -> "1000237"  [label="DDG: NLMSG_DONE"];
"1000239" -> "1000237"  [label="DDG: NLM_F_MULTI"];
"1000239" -> "1000250"  [label="DDG: cb"];
"1000239" -> "1000261"  [label="DDG: skb"];
"1000239" -> "1000306"  [label="DDG: skb"];
"1000237" -> "1000104"  [label="AST: "];
"1000238" -> "1000237"  [label="AST: "];
"1000248" -> "1000237"  [label="CFG: "];
"1000237" -> "1000310"  [label="DDG: nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI)"];
"1000237" -> "1000247"  [label="DDG: nlh"];
"1000247" -> "1000246"  [label="AST: "];
"1000247" -> "1000248"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="CFG: "];
"1000251" -> "1000247"  [label="CFG: "];
"1000247" -> "1000310"  [label="DDG: nlh"];
"1000247" -> "1000310"  [label="DDG: !nlh"];
"1000247" -> "1000250"  [label="DDG: nlh"];
"1000250" -> "1000104"  [label="AST: "];
"1000250" -> "1000252"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="AST: "];
"1000255" -> "1000250"  [label="CFG: "];
"1000250" -> "1000310"  [label="DDG: cb"];
"1000250" -> "1000310"  [label="DDG: nl_dump_check_consistent(cb, nlh)"];
"1000250" -> "1000254"  [label="DDG: nlh"];
"1000250" -> "1000274"  [label="DDG: cb"];
"1000254" -> "1000253"  [label="AST: "];
"1000254" -> "1000255"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="CFG: "];
"1000254" -> "1000310"  [label="DDG: nlh"];
"1000254" -> "1000253"  [label="DDG: nlh"];
"1000253" -> "1000104"  [label="AST: "];
"1000253" -> "1000258"  [label="CFG: "];
"1000256" -> "1000253"  [label="AST: "];
"1000258" -> "1000253"  [label="AST: "];
"1000262" -> "1000253"  [label="CFG: "];
"1000253" -> "1000310"  [label="DDG: memcpy(nlmsg_data(nlh), &len, sizeof(len))"];
"1000253" -> "1000310"  [label="DDG: nlmsg_data(nlh)"];
"1000253" -> "1000310"  [label="DDG: &len"];
"1000274" -> "1000270"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000278" -> "1000274"  [label="CFG: "];
"1000274" -> "1000310"  [label="DDG: cb"];
"1000274" -> "1000310"  [label="DDG: cb->done(cb)"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000263"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000263" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="CFG: "];
"1000268" -> "1000261"  [label="CFG: "];
"1000261" -> "1000310"  [label="DDG: sk"];
"1000261" -> "1000310"  [label="DDG: sk_filter(sk, skb)"];
"1000208" -> "1000261"  [label="DDG: sk"];
"1000103" -> "1000261"  [label="DDG: sk"];
"1000261" -> "1000264"  [label="DDG: skb"];
"1000261" -> "1000267"  [label="DDG: sk"];
"1000261" -> "1000267"  [label="DDG: skb"];
"1000264" -> "1000260"  [label="AST: "];
"1000264" -> "1000265"  [label="CFG: "];
"1000265" -> "1000264"  [label="AST: "];
"1000272" -> "1000264"  [label="CFG: "];
"1000264" -> "1000310"  [label="DDG: kfree_skb(skb)"];
"1000267" -> "1000266"  [label="AST: "];
"1000267" -> "1000269"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000269" -> "1000267"  [label="AST: "];
"1000272" -> "1000267"  [label="CFG: "];
"1000267" -> "1000310"  [label="DDG: sk"];
"1000267" -> "1000310"  [label="DDG: __netlink_sendskb(sk, skb)"];
"1000103" -> "1000267"  [label="DDG: sk"];
"1000306" -> "1000104"  [label="AST: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000309" -> "1000306"  [label="CFG: "];
"1000306" -> "1000310"  [label="DDG: skb"];
"1000306" -> "1000310"  [label="DDG: kfree_skb(skb)"];
"1000199" -> "1000306"  [label="DDG: skb"];
"1000112" -> "1000306"  [label="DDG: skb"];
}
