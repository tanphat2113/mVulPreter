digraph "0_linux_ae53b5bd77719fed58086c5be60ce4f22bffe1c6@pointer" {
"1000296" [label="(Call,sctp_sk(sk))"];
"1000290" [label="(Call,sk = sctp_get_ctl_sock())"];
"1000320" [label="(Call,xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family))"];
"1000319" [label="(Call,!xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family))"];
"1000326" [label="(Call,nf_reset(skb))"];
"1000329" [label="(Call,sk_filter(sk, skb))"];
"1000335" [label="(Call,sctp_chunkify(skb, asoc, sk))"];
"1000333" [label="(Call,chunk = sctp_chunkify(skb, asoc, sk))"];
"1000340" [label="(Call,!chunk)"];
"1000343" [label="(Call,SCTP_INPUT_CB(skb)->chunk = chunk)"];
"1000359" [label="(Call,sctp_init_addrs(chunk, &src, &dest))"];
"1000401" [label="(Call,sctp_inq_push(&chunk->rcvr->inqueue, chunk))"];
"1000345" [label="(Call,SCTP_INPUT_CB(skb))"];
"1000394" [label="(Call,sctp_add_backlog(sk, skb))"];
"1000409" [label="(Call,sctp_bh_unlock_sock(sk))"];
"1000370" [label="(Call,sctp_bh_lock_sock(sk))"];
"1000373" [label="(Call,sk != rcvr->sk)"];
"1000379" [label="(Call,sctp_bh_unlock_sock(sk))"];
"1000381" [label="(Call,sk = rcvr->sk)"];
"1000386" [label="(Call,sctp_bh_lock_sock(sk))"];
"1000389" [label="(Call,sock_owned_by_user(sk))"];
"1000413" [label="(Call,sctp_association_put(asoc))"];
"1000423" [label="(Call,kfree_skb(skb))"];
"1000430" [label="(Call,sctp_association_put(asoc))"];
"1000312" [label="(Call,sctp_rcv_ootb(skb))"];
"1000339" [label="(ControlStructure,if (!chunk))"];
"1000292" [label="(Call,sctp_get_ctl_sock())"];
"1000296" [label="(Call,sctp_sk(sk))"];
"1000412" [label="(Identifier,asoc)"];
"1000332" [label="(ControlStructure,goto discard_release;)"];
"1000298" [label="(FieldIdentifier,ep)"];
"1000334" [label="(Identifier,chunk)"];
"1000331" [label="(Identifier,skb)"];
"1000375" [label="(Call,rcvr->sk)"];
"1000409" [label="(Call,sctp_bh_unlock_sock(sk))"];
"1000367" [label="(Identifier,chunk)"];
"1000243" [label="(Call,__sctp_rcv_lookup_endpoint(&dest))"];
"1000340" [label="(Call,!chunk)"];
"1000389" [label="(Call,sock_owned_by_user(sk))"];
"1000363" [label="(Call,&dest)"];
"1000360" [label="(Identifier,chunk)"];
"1000390" [label="(Identifier,sk)"];
"1000295" [label="(Call,sctp_sk(sk)->ep)"];
"1000326" [label="(Call,nf_reset(skb))"];
"1000196" [label="(Call,sctp_get_af_specific(family))"];
"1000335" [label="(Call,sctp_chunkify(skb, asoc, sk))"];
"1000344" [label="(Call,SCTP_INPUT_CB(skb)->chunk)"];
"1000342" [label="(ControlStructure,goto discard_release;)"];
"1000402" [label="(Call,&chunk->rcvr->inqueue)"];
"1000396" [label="(Identifier,skb)"];
"1000291" [label="(Identifier,sk)"];
"1000400" [label="(Identifier,SCTP_MIB_IN_PKT_SOFTIRQ)"];
"1000424" [label="(Identifier,skb)"];
"1000373" [label="(Call,sk != rcvr->sk)"];
"1000359" [label="(Call,sctp_init_addrs(chunk, &src, &dest))"];
"1000382" [label="(Identifier,sk)"];
"1000395" [label="(Identifier,sk)"];
"1000153" [label="(Call,__skb_pull(skb, skb_transport_offset(skb)))"];
"1000336" [label="(Identifier,skb)"];
"1000387" [label="(Identifier,sk)"];
"1000230" [label="(Call,__sctp_rcv_lookup(skb, &src, &dest, &transport))"];
"1000346" [label="(Identifier,skb)"];
"1000388" [label="(ControlStructure,if (sock_owned_by_user(sk)))"];
"1000435" [label="(ControlStructure,goto discard_it;)"];
"1000320" [label="(Call,xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family))"];
"1000371" [label="(Identifier,sk)"];
"1000290" [label="(Call,sk = sctp_get_ctl_sock())"];
"1000341" [label="(Identifier,chunk)"];
"1000391" [label="(Block,)"];
"1000423" [label="(Call,kfree_skb(skb))"];
"1000408" [label="(Identifier,chunk)"];
"1000372" [label="(ControlStructure,if (sk != rcvr->sk))"];
"1000351" [label="(Identifier,chunk)"];
"1000191" [label="(Call,ip_hdr(skb))"];
"1000386" [label="(Call,sctp_bh_lock_sock(sk))"];
"1000328" [label="(ControlStructure,if (sk_filter(sk, skb)))"];
"1000383" [label="(Call,rcvr->sk)"];
"1000374" [label="(Identifier,sk)"];
"1000175" [label="(Call,skb_pull(skb, sizeof(struct sctphdr)))"];
"1000297" [label="(Identifier,sk)"];
"1000347" [label="(FieldIdentifier,chunk)"];
"1000410" [label="(Identifier,sk)"];
"1000222" [label="(Call,af->addr_valid(&dest, NULL, skb))"];
"1000401" [label="(Call,sctp_inq_push(&chunk->rcvr->inqueue, chunk))"];
"1000398" [label="(Block,)"];
"1000146" [label="(Call,skb_linearize(skb))"];
"1000117" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000345" [label="(Call,SCTP_INPUT_CB(skb))"];
"1000333" [label="(Call,chunk = sctp_chunkify(skb, asoc, sk))"];
"1000380" [label="(Identifier,sk)"];
"1000394" [label="(Call,sctp_add_backlog(sk, skb))"];
"1000381" [label="(Call,sk = rcvr->sk)"];
"1000426" [label="(Literal,0)"];
"1000431" [label="(Identifier,asoc)"];
"1000414" [label="(Identifier,asoc)"];
"1000321" [label="(Identifier,sk)"];
"1000330" [label="(Identifier,sk)"];
"1000428" [label="(ControlStructure,if (asoc))"];
"1000419" [label="(Literal,0)"];
"1000118" [label="(Block,)"];
"1000430" [label="(Call,sctp_association_put(asoc))"];
"1000343" [label="(Call,SCTP_INPUT_CB(skb)->chunk = chunk)"];
"1000378" [label="(Block,)"];
"1000329" [label="(Call,sk_filter(sk, skb))"];
"1000327" [label="(Identifier,skb)"];
"1000348" [label="(Identifier,chunk)"];
"1000258" [label="(Call,sk = rcvr->sk)"];
"1000216" [label="(Call,af->addr_valid(&src, NULL, skb))"];
"1000361" [label="(Call,&src)"];
"1000318" [label="(ControlStructure,if (!xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family)))"];
"1000319" [label="(Call,!xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family))"];
"1000411" [label="(ControlStructure,if (asoc))"];
"1000324" [label="(Identifier,family)"];
"1000323" [label="(Identifier,skb)"];
"1000325" [label="(ControlStructure,goto discard_release;)"];
"1000379" [label="(Call,sctp_bh_unlock_sock(sk))"];
"1000322" [label="(Identifier,XFRM_POLICY_IN)"];
"1000338" [label="(Identifier,sk)"];
"1000274" [label="(Block,)"];
"1000294" [label="(Identifier,ep)"];
"1000337" [label="(Identifier,asoc)"];
"1000308" [label="(Call,!asoc)"];
"1000413" [label="(Call,sctp_association_put(asoc))"];
"1000168" [label="(Call,skb_csum_unnecessary(skb))"];
"1000272" [label="(Call,af->skb_iif(skb))"];
"1000393" [label="(Identifier,SCTP_MIB_IN_PKT_BACKLOG)"];
"1000171" [label="(Call,sctp_rcv_checksum(skb))"];
"1000436" [label="(MethodReturn,int)"];
"1000370" [label="(Call,sctp_bh_lock_sock(sk))"];
"1000296" -> "1000295"  [label="AST: "];
"1000296" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000298" -> "1000296"  [label="CFG: "];
"1000296" -> "1000436"  [label="DDG: sk"];
"1000290" -> "1000296"  [label="DDG: sk"];
"1000296" -> "1000320"  [label="DDG: sk"];
"1000290" -> "1000274"  [label="AST: "];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000294" -> "1000290"  [label="CFG: "];
"1000290" -> "1000436"  [label="DDG: sctp_get_ctl_sock()"];
"1000320" -> "1000319"  [label="AST: "];
"1000320" -> "1000324"  [label="CFG: "];
"1000321" -> "1000320"  [label="AST: "];
"1000322" -> "1000320"  [label="AST: "];
"1000323" -> "1000320"  [label="AST: "];
"1000324" -> "1000320"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000436"  [label="DDG: family"];
"1000320" -> "1000436"  [label="DDG: XFRM_POLICY_IN"];
"1000320" -> "1000436"  [label="DDG: sk"];
"1000320" -> "1000319"  [label="DDG: sk"];
"1000320" -> "1000319"  [label="DDG: XFRM_POLICY_IN"];
"1000320" -> "1000319"  [label="DDG: skb"];
"1000320" -> "1000319"  [label="DDG: family"];
"1000258" -> "1000320"  [label="DDG: sk"];
"1000312" -> "1000320"  [label="DDG: skb"];
"1000230" -> "1000320"  [label="DDG: skb"];
"1000272" -> "1000320"  [label="DDG: skb"];
"1000117" -> "1000320"  [label="DDG: skb"];
"1000196" -> "1000320"  [label="DDG: family"];
"1000320" -> "1000326"  [label="DDG: skb"];
"1000320" -> "1000329"  [label="DDG: sk"];
"1000320" -> "1000423"  [label="DDG: skb"];
"1000319" -> "1000318"  [label="AST: "];
"1000325" -> "1000319"  [label="CFG: "];
"1000327" -> "1000319"  [label="CFG: "];
"1000319" -> "1000436"  [label="DDG: !xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family)"];
"1000319" -> "1000436"  [label="DDG: xfrm_policy_check(sk, XFRM_POLICY_IN, skb, family)"];
"1000326" -> "1000118"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="CFG: "];
"1000326" -> "1000436"  [label="DDG: nf_reset(skb)"];
"1000117" -> "1000326"  [label="DDG: skb"];
"1000326" -> "1000329"  [label="DDG: skb"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000332" -> "1000329"  [label="CFG: "];
"1000334" -> "1000329"  [label="CFG: "];
"1000329" -> "1000436"  [label="DDG: sk_filter(sk, skb)"];
"1000329" -> "1000436"  [label="DDG: sk"];
"1000117" -> "1000329"  [label="DDG: skb"];
"1000329" -> "1000335"  [label="DDG: skb"];
"1000329" -> "1000335"  [label="DDG: sk"];
"1000329" -> "1000423"  [label="DDG: skb"];
"1000335" -> "1000333"  [label="AST: "];
"1000335" -> "1000338"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000338" -> "1000335"  [label="AST: "];
"1000333" -> "1000335"  [label="CFG: "];
"1000335" -> "1000436"  [label="DDG: sk"];
"1000335" -> "1000436"  [label="DDG: asoc"];
"1000335" -> "1000333"  [label="DDG: skb"];
"1000335" -> "1000333"  [label="DDG: asoc"];
"1000335" -> "1000333"  [label="DDG: sk"];
"1000117" -> "1000335"  [label="DDG: skb"];
"1000308" -> "1000335"  [label="DDG: asoc"];
"1000335" -> "1000345"  [label="DDG: skb"];
"1000335" -> "1000370"  [label="DDG: sk"];
"1000335" -> "1000413"  [label="DDG: asoc"];
"1000335" -> "1000423"  [label="DDG: skb"];
"1000335" -> "1000430"  [label="DDG: asoc"];
"1000333" -> "1000118"  [label="AST: "];
"1000334" -> "1000333"  [label="AST: "];
"1000341" -> "1000333"  [label="CFG: "];
"1000333" -> "1000436"  [label="DDG: sctp_chunkify(skb, asoc, sk)"];
"1000333" -> "1000340"  [label="DDG: chunk"];
"1000340" -> "1000339"  [label="AST: "];
"1000340" -> "1000341"  [label="CFG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000342" -> "1000340"  [label="CFG: "];
"1000346" -> "1000340"  [label="CFG: "];
"1000340" -> "1000436"  [label="DDG: !chunk"];
"1000340" -> "1000436"  [label="DDG: chunk"];
"1000340" -> "1000343"  [label="DDG: chunk"];
"1000340" -> "1000359"  [label="DDG: chunk"];
"1000343" -> "1000118"  [label="AST: "];
"1000343" -> "1000348"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000348" -> "1000343"  [label="AST: "];
"1000351" -> "1000343"  [label="CFG: "];
"1000343" -> "1000436"  [label="DDG: SCTP_INPUT_CB(skb)->chunk"];
"1000359" -> "1000118"  [label="AST: "];
"1000359" -> "1000363"  [label="CFG: "];
"1000360" -> "1000359"  [label="AST: "];
"1000361" -> "1000359"  [label="AST: "];
"1000363" -> "1000359"  [label="AST: "];
"1000367" -> "1000359"  [label="CFG: "];
"1000359" -> "1000436"  [label="DDG: &src"];
"1000359" -> "1000436"  [label="DDG: chunk"];
"1000359" -> "1000436"  [label="DDG: &dest"];
"1000359" -> "1000436"  [label="DDG: sctp_init_addrs(chunk, &src, &dest)"];
"1000230" -> "1000359"  [label="DDG: &src"];
"1000230" -> "1000359"  [label="DDG: &dest"];
"1000243" -> "1000359"  [label="DDG: &dest"];
"1000359" -> "1000401"  [label="DDG: chunk"];
"1000401" -> "1000398"  [label="AST: "];
"1000401" -> "1000408"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000408" -> "1000401"  [label="AST: "];
"1000410" -> "1000401"  [label="CFG: "];
"1000401" -> "1000436"  [label="DDG: sctp_inq_push(&chunk->rcvr->inqueue, chunk)"];
"1000401" -> "1000436"  [label="DDG: &chunk->rcvr->inqueue"];
"1000401" -> "1000436"  [label="DDG: chunk"];
"1000345" -> "1000344"  [label="AST: "];
"1000345" -> "1000346"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="CFG: "];
"1000345" -> "1000436"  [label="DDG: skb"];
"1000117" -> "1000345"  [label="DDG: skb"];
"1000345" -> "1000394"  [label="DDG: skb"];
"1000394" -> "1000391"  [label="AST: "];
"1000394" -> "1000396"  [label="CFG: "];
"1000395" -> "1000394"  [label="AST: "];
"1000396" -> "1000394"  [label="AST: "];
"1000410" -> "1000394"  [label="CFG: "];
"1000394" -> "1000436"  [label="DDG: skb"];
"1000394" -> "1000436"  [label="DDG: sctp_add_backlog(sk, skb)"];
"1000389" -> "1000394"  [label="DDG: sk"];
"1000117" -> "1000394"  [label="DDG: skb"];
"1000394" -> "1000409"  [label="DDG: sk"];
"1000409" -> "1000118"  [label="AST: "];
"1000409" -> "1000410"  [label="CFG: "];
"1000410" -> "1000409"  [label="AST: "];
"1000412" -> "1000409"  [label="CFG: "];
"1000409" -> "1000436"  [label="DDG: sctp_bh_unlock_sock(sk)"];
"1000409" -> "1000436"  [label="DDG: sk"];
"1000389" -> "1000409"  [label="DDG: sk"];
"1000370" -> "1000118"  [label="AST: "];
"1000370" -> "1000371"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000374" -> "1000370"  [label="CFG: "];
"1000370" -> "1000436"  [label="DDG: sctp_bh_lock_sock(sk)"];
"1000370" -> "1000373"  [label="DDG: sk"];
"1000373" -> "1000372"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000380" -> "1000373"  [label="CFG: "];
"1000390" -> "1000373"  [label="CFG: "];
"1000373" -> "1000436"  [label="DDG: rcvr->sk"];
"1000373" -> "1000436"  [label="DDG: sk != rcvr->sk"];
"1000373" -> "1000379"  [label="DDG: sk"];
"1000373" -> "1000381"  [label="DDG: rcvr->sk"];
"1000373" -> "1000389"  [label="DDG: sk"];
"1000379" -> "1000378"  [label="AST: "];
"1000379" -> "1000380"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="CFG: "];
"1000381" -> "1000378"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000383" -> "1000381"  [label="AST: "];
"1000387" -> "1000381"  [label="CFG: "];
"1000381" -> "1000436"  [label="DDG: rcvr->sk"];
"1000381" -> "1000386"  [label="DDG: sk"];
"1000386" -> "1000378"  [label="AST: "];
"1000386" -> "1000387"  [label="CFG: "];
"1000387" -> "1000386"  [label="AST: "];
"1000390" -> "1000386"  [label="CFG: "];
"1000386" -> "1000436"  [label="DDG: sctp_bh_lock_sock(sk)"];
"1000386" -> "1000389"  [label="DDG: sk"];
"1000389" -> "1000388"  [label="AST: "];
"1000389" -> "1000390"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000393" -> "1000389"  [label="CFG: "];
"1000400" -> "1000389"  [label="CFG: "];
"1000389" -> "1000436"  [label="DDG: sock_owned_by_user(sk)"];
"1000413" -> "1000411"  [label="AST: "];
"1000413" -> "1000414"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000419" -> "1000413"  [label="CFG: "];
"1000413" -> "1000436"  [label="DDG: asoc"];
"1000413" -> "1000436"  [label="DDG: sctp_association_put(asoc)"];
"1000423" -> "1000118"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000426" -> "1000423"  [label="CFG: "];
"1000423" -> "1000436"  [label="DDG: kfree_skb(skb)"];
"1000423" -> "1000436"  [label="DDG: skb"];
"1000168" -> "1000423"  [label="DDG: skb"];
"1000222" -> "1000423"  [label="DDG: skb"];
"1000312" -> "1000423"  [label="DDG: skb"];
"1000175" -> "1000423"  [label="DDG: skb"];
"1000153" -> "1000423"  [label="DDG: skb"];
"1000216" -> "1000423"  [label="DDG: skb"];
"1000171" -> "1000423"  [label="DDG: skb"];
"1000146" -> "1000423"  [label="DDG: skb"];
"1000191" -> "1000423"  [label="DDG: skb"];
"1000117" -> "1000423"  [label="DDG: skb"];
"1000430" -> "1000428"  [label="AST: "];
"1000430" -> "1000431"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000435" -> "1000430"  [label="CFG: "];
"1000430" -> "1000436"  [label="DDG: asoc"];
"1000430" -> "1000436"  [label="DDG: sctp_association_put(asoc)"];
"1000308" -> "1000430"  [label="DDG: asoc"];
}
