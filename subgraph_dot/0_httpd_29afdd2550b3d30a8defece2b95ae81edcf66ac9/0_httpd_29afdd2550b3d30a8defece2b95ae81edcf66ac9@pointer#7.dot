digraph "0_httpd_29afdd2550b3d30a8defece2b95ae81edcf66ac9@pointer" {
"1000236" [label="(Call,tog ? ~limited : limited)"];
"1000125" [label="(Call,limited = 0)"];
"1000229" [label="(Call,limited |= (AP_METHOD_BIT << methnum))"];
"1000231" [label="(Call,AP_METHOD_BIT << methnum)"];
"1000193" [label="(Call,methnum == M_INVALID)"];
"1000183" [label="(Call,methnum == M_TRACE)"];
"1000177" [label="(Call,methnum = ap_method_number_of(method))"];
"1000179" [label="(Call,ap_method_number_of(method))"];
"1000168" [label="(Call,*method = ap_getword_conf(cmd->temp_pool, &limited_methods))"];
"1000170" [label="(Call,ap_getword_conf(cmd->temp_pool, &limited_methods))"];
"1000145" [label="(Call,apr_pstrmemdup(cmd->temp_pool, arg, endp - arg))"];
"1000150" [label="(Call,endp - arg)"];
"1000136" [label="(Call,endp == NULL)"];
"1000110" [label="(Call,*endp = ap_strrchr_c(arg, '>'))"];
"1000112" [label="(Call,ap_strrchr_c(arg, '>'))"];
"1000107" [label="(MethodParameterIn,const char *arg)"];
"1000198" [label="(Call,cmd->pool == cmd->temp_pool)"];
"1000220" [label="(Call,ap_method_register(cmd->pool,\n                                          apr_pstrdup(cmd->pool, method)))"];
"1000224" [label="(Call,apr_pstrdup(cmd->pool, method))"];
"1000218" [label="(Call,methnum = ap_method_register(cmd->pool,\n                                          apr_pstrdup(cmd->pool, method)))"];
"1000224" [label="(Call,apr_pstrdup(cmd->pool, method))"];
"1000219" [label="(Identifier,methnum)"];
"1000182" [label="(Call,methnum == M_TRACE && !tog)"];
"1000143" [label="(Call,limited_methods = apr_pstrmemdup(cmd->temp_pool, arg, endp - arg))"];
"1000169" [label="(Identifier,method)"];
"1000149" [label="(Identifier,arg)"];
"1000195" [label="(Identifier,M_INVALID)"];
"1000146" [label="(Call,cmd->temp_pool)"];
"1000247" [label="(Call,apr_pstrcat(cmd->pool, cmd->cmd->name,\n                           \"> directive excludes all methods\", NULL))"];
"1000232" [label="(Identifier,AP_METHOD_BIT)"];
"1000187" [label="(Identifier,tog)"];
"1000192" [label="(ControlStructure,if (methnum == M_INVALID))"];
"1000179" [label="(Call,ap_method_number_of(method))"];
"1000183" [label="(Call,methnum == M_TRACE)"];
"1000185" [label="(Identifier,M_TRACE)"];
"1000126" [label="(Identifier,limited)"];
"1000118" [label="(Identifier,tog)"];
"1000221" [label="(Call,cmd->pool)"];
"1000194" [label="(Identifier,methnum)"];
"1000150" [label="(Call,endp - arg)"];
"1000114" [label="(Literal,'>')"];
"1000200" [label="(Identifier,cmd)"];
"1000135" [label="(ControlStructure,if (endp == NULL))"];
"1000197" [label="(ControlStructure,if (cmd->pool == cmd->temp_pool))"];
"1000207" [label="(Call,apr_psprintf(cmd->pool, \"Could not register method '%s' \"\n                                   \"for %s from .htaccess configuration\",\n                                    method, cmd->cmd->name))"];
"1000209" [label="(Identifier,cmd)"];
"1000164" [label="(Identifier,limited_methods)"];
"1000196" [label="(Block,)"];
"1000239" [label="(Identifier,limited)"];
"1000193" [label="(Call,methnum == M_INVALID)"];
"1000199" [label="(Call,cmd->pool)"];
"1000178" [label="(Identifier,methnum)"];
"1000145" [label="(Call,apr_pstrmemdup(cmd->temp_pool, arg, endp - arg))"];
"1000238" [label="(Identifier,~limited)"];
"1000136" [label="(Call,endp == NULL)"];
"1000108" [label="(Block,)"];
"1000170" [label="(Call,ap_getword_conf(cmd->temp_pool, &limited_methods))"];
"1000107" [label="(MethodParameterIn,const char *arg)"];
"1000125" [label="(Call,limited = 0)"];
"1000177" [label="(Call,methnum = ap_method_number_of(method))"];
"1000236" [label="(Call,tog ? ~limited : limited)"];
"1000198" [label="(Call,cmd->pool == cmd->temp_pool)"];
"1000180" [label="(Identifier,method)"];
"1000168" [label="(Call,*method = ap_getword_conf(cmd->temp_pool, &limited_methods))"];
"1000152" [label="(Identifier,arg)"];
"1000184" [label="(Identifier,methnum)"];
"1000130" [label="(Identifier,old_limited)"];
"1000127" [label="(Literal,0)"];
"1000267" [label="(Call,apr_pstrcat(cmd->pool, cmd->cmd->name,\n                           \"> directive specifies methods already excluded\",\n                           NULL))"];
"1000302" [label="(MethodReturn,RET)"];
"1000220" [label="(Call,ap_method_register(cmd->pool,\n                                          apr_pstrdup(cmd->pool, method)))"];
"1000228" [label="(Identifier,method)"];
"1000151" [label="(Identifier,endp)"];
"1000225" [label="(Call,cmd->pool)"];
"1000144" [label="(Identifier,limited_methods)"];
"1000233" [label="(Identifier,methnum)"];
"1000171" [label="(Call,cmd->temp_pool)"];
"1000174" [label="(Call,&limited_methods)"];
"1000229" [label="(Call,limited |= (AP_METHOD_BIT << methnum))"];
"1000110" [label="(Call,*endp = ap_strrchr_c(arg, '>'))"];
"1000230" [label="(Identifier,limited)"];
"1000202" [label="(Call,cmd->temp_pool)"];
"1000237" [label="(Identifier,tog)"];
"1000112" [label="(Call,ap_strrchr_c(arg, '>'))"];
"1000138" [label="(Identifier,NULL)"];
"1000142" [label="(Identifier,cmd)"];
"1000231" [label="(Call,AP_METHOD_BIT << methnum)"];
"1000137" [label="(Identifier,endp)"];
"1000234" [label="(Call,limited = tog ? ~limited : limited)"];
"1000166" [label="(Block,)"];
"1000111" [label="(Identifier,endp)"];
"1000113" [label="(Identifier,arg)"];
"1000218" [label="(Call,methnum = ap_method_register(cmd->pool,\n                                          apr_pstrdup(cmd->pool, method)))"];
"1000236" -> "1000234"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000236" -> "1000239"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000238" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="AST: "];
"1000234" -> "1000236"  [label="CFG: "];
"1000236" -> "1000302"  [label="DDG: tog"];
"1000236" -> "1000302"  [label="DDG: ~limited"];
"1000125" -> "1000236"  [label="DDG: limited"];
"1000229" -> "1000236"  [label="DDG: limited"];
"1000125" -> "1000108"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000125" -> "1000302"  [label="DDG: limited"];
"1000125" -> "1000229"  [label="DDG: limited"];
"1000125" -> "1000234"  [label="DDG: limited"];
"1000229" -> "1000166"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000164" -> "1000229"  [label="CFG: "];
"1000229" -> "1000302"  [label="DDG: limited |= (AP_METHOD_BIT << methnum)"];
"1000229" -> "1000302"  [label="DDG: AP_METHOD_BIT << methnum"];
"1000229" -> "1000302"  [label="DDG: limited"];
"1000231" -> "1000229"  [label="DDG: AP_METHOD_BIT"];
"1000231" -> "1000229"  [label="DDG: methnum"];
"1000229" -> "1000234"  [label="DDG: limited"];
"1000231" -> "1000233"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="AST: "];
"1000231" -> "1000302"  [label="DDG: methnum"];
"1000231" -> "1000302"  [label="DDG: AP_METHOD_BIT"];
"1000193" -> "1000231"  [label="DDG: methnum"];
"1000218" -> "1000231"  [label="DDG: methnum"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000200" -> "1000193"  [label="CFG: "];
"1000230" -> "1000193"  [label="CFG: "];
"1000193" -> "1000302"  [label="DDG: methnum"];
"1000193" -> "1000302"  [label="DDG: M_INVALID"];
"1000193" -> "1000302"  [label="DDG: methnum == M_INVALID"];
"1000183" -> "1000193"  [label="DDG: methnum"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000187" -> "1000183"  [label="CFG: "];
"1000182" -> "1000183"  [label="CFG: "];
"1000183" -> "1000302"  [label="DDG: M_TRACE"];
"1000183" -> "1000302"  [label="DDG: methnum"];
"1000183" -> "1000182"  [label="DDG: methnum"];
"1000183" -> "1000182"  [label="DDG: M_TRACE"];
"1000177" -> "1000183"  [label="DDG: methnum"];
"1000177" -> "1000166"  [label="AST: "];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000184" -> "1000177"  [label="CFG: "];
"1000177" -> "1000302"  [label="DDG: ap_method_number_of(method)"];
"1000179" -> "1000177"  [label="DDG: method"];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000179" -> "1000302"  [label="DDG: method"];
"1000168" -> "1000179"  [label="DDG: method"];
"1000179" -> "1000207"  [label="DDG: method"];
"1000179" -> "1000224"  [label="DDG: method"];
"1000168" -> "1000166"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000178" -> "1000168"  [label="CFG: "];
"1000168" -> "1000302"  [label="DDG: ap_getword_conf(cmd->temp_pool, &limited_methods)"];
"1000170" -> "1000168"  [label="DDG: cmd->temp_pool"];
"1000170" -> "1000168"  [label="DDG: &limited_methods"];
"1000170" -> "1000174"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000174" -> "1000170"  [label="AST: "];
"1000170" -> "1000302"  [label="DDG: cmd->temp_pool"];
"1000170" -> "1000302"  [label="DDG: &limited_methods"];
"1000145" -> "1000170"  [label="DDG: cmd->temp_pool"];
"1000198" -> "1000170"  [label="DDG: cmd->temp_pool"];
"1000170" -> "1000198"  [label="DDG: cmd->temp_pool"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000150"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000149" -> "1000145"  [label="AST: "];
"1000150" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000302"  [label="DDG: arg"];
"1000145" -> "1000302"  [label="DDG: endp - arg"];
"1000145" -> "1000302"  [label="DDG: cmd->temp_pool"];
"1000145" -> "1000143"  [label="DDG: cmd->temp_pool"];
"1000145" -> "1000143"  [label="DDG: arg"];
"1000145" -> "1000143"  [label="DDG: endp - arg"];
"1000150" -> "1000145"  [label="DDG: arg"];
"1000150" -> "1000145"  [label="DDG: endp"];
"1000107" -> "1000145"  [label="DDG: arg"];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000150" -> "1000302"  [label="DDG: endp"];
"1000136" -> "1000150"  [label="DDG: endp"];
"1000112" -> "1000150"  [label="DDG: arg"];
"1000107" -> "1000150"  [label="DDG: arg"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000138"  [label="CFG: "];
"1000137" -> "1000136"  [label="AST: "];
"1000138" -> "1000136"  [label="AST: "];
"1000142" -> "1000136"  [label="CFG: "];
"1000144" -> "1000136"  [label="CFG: "];
"1000136" -> "1000302"  [label="DDG: endp == NULL"];
"1000136" -> "1000302"  [label="DDG: NULL"];
"1000136" -> "1000302"  [label="DDG: endp"];
"1000110" -> "1000136"  [label="DDG: endp"];
"1000136" -> "1000247"  [label="DDG: NULL"];
"1000136" -> "1000267"  [label="DDG: NULL"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000112"  [label="CFG: "];
"1000111" -> "1000110"  [label="AST: "];
"1000112" -> "1000110"  [label="AST: "];
"1000118" -> "1000110"  [label="CFG: "];
"1000110" -> "1000302"  [label="DDG: ap_strrchr_c(arg, '>')"];
"1000112" -> "1000110"  [label="DDG: arg"];
"1000112" -> "1000110"  [label="DDG: '>'"];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000112" -> "1000302"  [label="DDG: arg"];
"1000107" -> "1000112"  [label="DDG: arg"];
"1000107" -> "1000104"  [label="AST: "];
"1000107" -> "1000302"  [label="DDG: arg"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000202"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000202" -> "1000198"  [label="AST: "];
"1000209" -> "1000198"  [label="CFG: "];
"1000219" -> "1000198"  [label="CFG: "];
"1000198" -> "1000302"  [label="DDG: cmd->pool == cmd->temp_pool"];
"1000198" -> "1000302"  [label="DDG: cmd->temp_pool"];
"1000220" -> "1000198"  [label="DDG: cmd->pool"];
"1000198" -> "1000207"  [label="DDG: cmd->pool"];
"1000198" -> "1000224"  [label="DDG: cmd->pool"];
"1000220" -> "1000218"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000220" -> "1000302"  [label="DDG: cmd->pool"];
"1000220" -> "1000302"  [label="DDG: apr_pstrdup(cmd->pool, method)"];
"1000220" -> "1000218"  [label="DDG: cmd->pool"];
"1000220" -> "1000218"  [label="DDG: apr_pstrdup(cmd->pool, method)"];
"1000224" -> "1000220"  [label="DDG: cmd->pool"];
"1000224" -> "1000220"  [label="DDG: method"];
"1000220" -> "1000247"  [label="DDG: cmd->pool"];
"1000220" -> "1000267"  [label="DDG: cmd->pool"];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000224" -> "1000302"  [label="DDG: method"];
"1000218" -> "1000196"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000230" -> "1000218"  [label="CFG: "];
"1000218" -> "1000302"  [label="DDG: ap_method_register(cmd->pool,\n                                          apr_pstrdup(cmd->pool, method))"];
}
