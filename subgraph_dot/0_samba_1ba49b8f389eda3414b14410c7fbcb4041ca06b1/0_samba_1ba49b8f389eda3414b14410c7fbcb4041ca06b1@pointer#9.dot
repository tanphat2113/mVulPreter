digraph "0_samba_1ba49b8f389eda3414b14410c7fbcb4041ca06b1@pointer" {
"1000206" [label="(Call,share != NULL)"];
"1000194" [label="(Call,SMBC_find_server(ctx, context, server, share,\n                               pp_workgroup, pp_username, pp_password))"];
"1000115" [label="(MethodParameterIn,TALLOC_CTX *ctx)"];
"1000116" [label="(MethodParameterIn,SMBCCTX *context)"];
"1000181" [label="(Call,server[0] == 0)"];
"1000118" [label="(MethodParameterIn,const char *server)"];
"1000146" [label="(Call,share != NULL)"];
"1000120" [label="(MethodParameterIn,const char *share)"];
"1000121" [label="(MethodParameterIn,char **pp_workgroup)"];
"1000122" [label="(MethodParameterIn,char **pp_username)"];
"1000123" [label="(MethodParameterIn,char **pp_password)"];
"1000205" [label="(Call,share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context))"];
"1000203" [label="(Call,srv &&\n\t    share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context))"];
"1000266" [label="(Call,smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv))"];
"1000308" [label="(Call,smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv))"];
"1000343" [label="(Call,smbc_getOptionCaseSensitive(context))"];
"1000454" [label="(Call,smbc_getOptionUseKerberos(context))"];
"1000461" [label="(Call,smbc_getOptionFallbackAfterKerberos(context))"];
"1000468" [label="(Call,smbc_getOptionUseCCache(context))"];
"1000475" [label="(Call,smbc_getOptionUseNTHash(context))"];
"1000261" [label="(Call,srv->cli = NULL)"];
"1000269" [label="(Return,return NULL;)"];
"1000303" [label="(Call,srv->cli = NULL)"];
"1000311" [label="(Call,srv = NULL)"];
"1000416" [label="(Return,return NULL;)"];
"1000434" [label="(Return,return NULL;)"];
"1000120" [label="(MethodParameterIn,const char *share)"];
"1000307" [label="(Identifier,NULL)"];
"1000193" [label="(Identifier,srv)"];
"1000202" [label="(ControlStructure,if (srv &&\n\t    share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context)))"];
"1000269" [label="(Return,return NULL;)"];
"1000479" [label="(Identifier,flags)"];
"1000415" [label="(Block,)"];
"1000212" [label="(Identifier,share)"];
"1000194" [label="(Call,SMBC_find_server(ctx, context, server, share,\n                               pp_workgroup, pp_username, pp_password))"];
"1000139" [label="(Call,*server_n = server)"];
"1000262" [label="(Call,srv->cli)"];
"1000461" [label="(Call,smbc_getOptionFallbackAfterKerberos(context))"];
"1000188" [label="(Identifier,errno)"];
"1000454" [label="(Call,smbc_getOptionUseKerberos(context))"];
"1000221" [label="(Identifier,srv)"];
"1000200" [label="(Identifier,pp_username)"];
"1000267" [label="(Identifier,context)"];
"1000352" [label="(Identifier,c)"];
"1000405" [label="(Identifier,srv)"];
"1000434" [label="(Return,return NULL;)"];
"1000475" [label="(Call,smbc_getOptionUseNTHash(context))"];
"1000203" [label="(Call,srv &&\n\t    share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context))"];
"1000181" [label="(Call,server[0] == 0)"];
"1000204" [label="(Identifier,srv)"];
"1000261" [label="(Call,srv->cli = NULL)"];
"1000214" [label="(Call,smbc_getOptionOneSharePerServer(context))"];
"1000147" [label="(Identifier,share)"];
"1000146" [label="(Call,share != NULL)"];
"1000435" [label="(Identifier,NULL)"];
"1000268" [label="(Identifier,srv)"];
"1000198" [label="(Identifier,share)"];
"1000122" [label="(MethodParameterIn,char **pp_username)"];
"1000224" [label="(Call,SMBC_call_auth_fn(ctx, context,\n\t\t\t\t\t  smbXcli_conn_remote_name(srv->cli->conn),\n\t\t\t\t\t  srv->cli->share,\n                                          pp_workgroup,\n                                          pp_username,\n                                          pp_password))"];
"1000474" [label="(ControlStructure,if (smbc_getOptionUseNTHash(context)))"];
"1000342" [label="(ControlStructure,if (smbc_getOptionCaseSensitive(context)))"];
"1000311" [label="(Call,srv = NULL)"];
"1000304" [label="(Call,srv->cli)"];
"1000266" [label="(Call,smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv))"];
"1000270" [label="(Identifier,NULL)"];
"1000115" [label="(MethodParameterIn,TALLOC_CTX *ctx)"];
"1000496" [label="(MethodReturn,RET)"];
"1000416" [label="(Return,return NULL;)"];
"1000315" [label="(Identifier,is_ipc)"];
"1000196" [label="(Identifier,context)"];
"1000309" [label="(Identifier,context)"];
"1000488" [label="(Identifier,context)"];
"1000150" [label="(Call,strcmp(share, \"IPC$\"))"];
"1000347" [label="(Identifier,c)"];
"1000472" [label="(Identifier,flags)"];
"1000476" [label="(Identifier,context)"];
"1000458" [label="(Identifier,flags)"];
"1000265" [label="(Identifier,NULL)"];
"1000151" [label="(Identifier,share)"];
"1000460" [label="(ControlStructure,if (smbc_getOptionFallbackAfterKerberos(context)))"];
"1000430" [label="(Block,)"];
"1000303" [label="(Call,srv->cli = NULL)"];
"1000294" [label="(Block,)"];
"1000192" [label="(Call,srv = SMBC_find_server(ctx, context, server, share,\n                               pp_workgroup, pp_username, pp_password))"];
"1000195" [label="(Identifier,ctx)"];
"1000182" [label="(Call,server[0])"];
"1000343" [label="(Call,smbc_getOptionCaseSensitive(context))"];
"1000417" [label="(Identifier,NULL)"];
"1000453" [label="(ControlStructure,if (smbc_getOptionUseKerberos(context)))"];
"1000148" [label="(Identifier,NULL)"];
"1000469" [label="(Identifier,context)"];
"1000123" [label="(MethodParameterIn,char **pp_password)"];
"1000209" [label="(Call,*share != '\0' &&\n            smbc_getOptionOneSharePerServer(context))"];
"1000455" [label="(Identifier,context)"];
"1000206" [label="(Call,share != NULL)"];
"1000145" [label="(Call,share != NULL && strcmp(share, \"IPC$\") == 0)"];
"1000205" [label="(Call,share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context))"];
"1000207" [label="(Identifier,share)"];
"1000185" [label="(Literal,0)"];
"1000312" [label="(Identifier,srv)"];
"1000465" [label="(Identifier,flags)"];
"1000308" [label="(Call,smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv))"];
"1000149" [label="(Call,strcmp(share, \"IPC$\") == 0)"];
"1000121" [label="(MethodParameterIn,char **pp_workgroup)"];
"1000201" [label="(Identifier,pp_password)"];
"1000467" [label="(ControlStructure,if (smbc_getOptionUseCCache(context)))"];
"1000253" [label="(Block,)"];
"1000167" [label="(Call,*tcon = NULL)"];
"1000462" [label="(Identifier,context)"];
"1000208" [label="(Identifier,NULL)"];
"1000197" [label="(Identifier,server)"];
"1000180" [label="(ControlStructure,if (server[0] == 0))"];
"1000118" [label="(MethodParameterIn,const char *server)"];
"1000190" [label="(Return,return NULL;)"];
"1000313" [label="(Identifier,NULL)"];
"1000310" [label="(Identifier,srv)"];
"1000468" [label="(Call,smbc_getOptionUseCCache(context))"];
"1000116" [label="(MethodParameterIn,SMBCCTX *context)"];
"1000199" [label="(Identifier,pp_workgroup)"];
"1000344" [label="(Identifier,context)"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000212" -> "1000206"  [label="CFG: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000496"  [label="DDG: NULL"];
"1000206" -> "1000496"  [label="DDG: share"];
"1000206" -> "1000205"  [label="DDG: share"];
"1000206" -> "1000205"  [label="DDG: NULL"];
"1000194" -> "1000206"  [label="DDG: share"];
"1000120" -> "1000206"  [label="DDG: share"];
"1000146" -> "1000206"  [label="DDG: NULL"];
"1000206" -> "1000261"  [label="DDG: NULL"];
"1000206" -> "1000269"  [label="DDG: NULL"];
"1000206" -> "1000303"  [label="DDG: NULL"];
"1000206" -> "1000311"  [label="DDG: NULL"];
"1000206" -> "1000416"  [label="DDG: NULL"];
"1000206" -> "1000434"  [label="DDG: NULL"];
"1000194" -> "1000192"  [label="AST: "];
"1000194" -> "1000201"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000197" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="AST: "];
"1000199" -> "1000194"  [label="AST: "];
"1000200" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000194" -> "1000496"  [label="DDG: pp_password"];
"1000194" -> "1000496"  [label="DDG: pp_username"];
"1000194" -> "1000496"  [label="DDG: ctx"];
"1000194" -> "1000496"  [label="DDG: server"];
"1000194" -> "1000496"  [label="DDG: pp_workgroup"];
"1000194" -> "1000496"  [label="DDG: context"];
"1000194" -> "1000496"  [label="DDG: share"];
"1000194" -> "1000192"  [label="DDG: server"];
"1000194" -> "1000192"  [label="DDG: pp_password"];
"1000194" -> "1000192"  [label="DDG: pp_username"];
"1000194" -> "1000192"  [label="DDG: ctx"];
"1000194" -> "1000192"  [label="DDG: pp_workgroup"];
"1000194" -> "1000192"  [label="DDG: context"];
"1000194" -> "1000192"  [label="DDG: share"];
"1000115" -> "1000194"  [label="DDG: ctx"];
"1000116" -> "1000194"  [label="DDG: context"];
"1000181" -> "1000194"  [label="DDG: server[0]"];
"1000118" -> "1000194"  [label="DDG: server"];
"1000146" -> "1000194"  [label="DDG: share"];
"1000120" -> "1000194"  [label="DDG: share"];
"1000121" -> "1000194"  [label="DDG: pp_workgroup"];
"1000122" -> "1000194"  [label="DDG: pp_username"];
"1000123" -> "1000194"  [label="DDG: pp_password"];
"1000194" -> "1000214"  [label="DDG: context"];
"1000194" -> "1000224"  [label="DDG: ctx"];
"1000194" -> "1000224"  [label="DDG: context"];
"1000194" -> "1000224"  [label="DDG: pp_workgroup"];
"1000194" -> "1000224"  [label="DDG: pp_username"];
"1000194" -> "1000224"  [label="DDG: pp_password"];
"1000194" -> "1000454"  [label="DDG: context"];
"1000115" -> "1000114"  [label="AST: "];
"1000115" -> "1000496"  [label="DDG: ctx"];
"1000115" -> "1000224"  [label="DDG: ctx"];
"1000116" -> "1000114"  [label="AST: "];
"1000116" -> "1000496"  [label="DDG: context"];
"1000116" -> "1000214"  [label="DDG: context"];
"1000116" -> "1000224"  [label="DDG: context"];
"1000116" -> "1000266"  [label="DDG: context"];
"1000116" -> "1000308"  [label="DDG: context"];
"1000116" -> "1000343"  [label="DDG: context"];
"1000116" -> "1000454"  [label="DDG: context"];
"1000116" -> "1000461"  [label="DDG: context"];
"1000116" -> "1000468"  [label="DDG: context"];
"1000116" -> "1000475"  [label="DDG: context"];
"1000181" -> "1000180"  [label="AST: "];
"1000181" -> "1000185"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000185" -> "1000181"  [label="AST: "];
"1000188" -> "1000181"  [label="CFG: "];
"1000193" -> "1000181"  [label="CFG: "];
"1000181" -> "1000496"  [label="DDG: server[0]"];
"1000181" -> "1000496"  [label="DDG: server[0] == 0"];
"1000118" -> "1000181"  [label="DDG: server"];
"1000118" -> "1000114"  [label="AST: "];
"1000118" -> "1000496"  [label="DDG: server"];
"1000118" -> "1000139"  [label="DDG: server"];
"1000146" -> "1000145"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="CFG: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000496"  [label="DDG: share"];
"1000146" -> "1000145"  [label="DDG: share"];
"1000146" -> "1000145"  [label="DDG: NULL"];
"1000120" -> "1000146"  [label="DDG: share"];
"1000146" -> "1000149"  [label="DDG: share"];
"1000146" -> "1000150"  [label="DDG: share"];
"1000146" -> "1000167"  [label="DDG: NULL"];
"1000146" -> "1000190"  [label="DDG: NULL"];
"1000146" -> "1000261"  [label="DDG: NULL"];
"1000146" -> "1000269"  [label="DDG: NULL"];
"1000146" -> "1000303"  [label="DDG: NULL"];
"1000146" -> "1000311"  [label="DDG: NULL"];
"1000146" -> "1000416"  [label="DDG: NULL"];
"1000146" -> "1000434"  [label="DDG: NULL"];
"1000120" -> "1000114"  [label="AST: "];
"1000120" -> "1000496"  [label="DDG: share"];
"1000120" -> "1000149"  [label="DDG: share"];
"1000120" -> "1000150"  [label="DDG: share"];
"1000121" -> "1000114"  [label="AST: "];
"1000121" -> "1000496"  [label="DDG: pp_workgroup"];
"1000121" -> "1000224"  [label="DDG: pp_workgroup"];
"1000122" -> "1000114"  [label="AST: "];
"1000122" -> "1000496"  [label="DDG: pp_username"];
"1000122" -> "1000224"  [label="DDG: pp_username"];
"1000123" -> "1000114"  [label="AST: "];
"1000123" -> "1000496"  [label="DDG: pp_password"];
"1000123" -> "1000224"  [label="DDG: pp_password"];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000209"  [label="CFG: "];
"1000209" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1000496"  [label="DDG: *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context)"];
"1000205" -> "1000496"  [label="DDG: share != NULL"];
"1000205" -> "1000203"  [label="DDG: share != NULL"];
"1000205" -> "1000203"  [label="DDG: *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context)"];
"1000209" -> "1000205"  [label="DDG: *share != '\0'"];
"1000209" -> "1000205"  [label="DDG: smbc_getOptionOneSharePerServer(context)"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000204"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000221" -> "1000203"  [label="CFG: "];
"1000405" -> "1000203"  [label="CFG: "];
"1000203" -> "1000496"  [label="DDG: srv &&\n\t    share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context)"];
"1000203" -> "1000496"  [label="DDG: share != NULL && *share != '\0' &&\n            smbc_getOptionOneSharePerServer(context)"];
"1000203" -> "1000496"  [label="DDG: srv"];
"1000192" -> "1000203"  [label="DDG: srv"];
"1000203" -> "1000266"  [label="DDG: srv"];
"1000203" -> "1000308"  [label="DDG: srv"];
"1000266" -> "1000253"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="CFG: "];
"1000266" -> "1000496"  [label="DDG: context"];
"1000266" -> "1000496"  [label="DDG: srv"];
"1000266" -> "1000496"  [label="DDG: smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv)"];
"1000224" -> "1000266"  [label="DDG: context"];
"1000308" -> "1000294"  [label="AST: "];
"1000308" -> "1000310"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000310" -> "1000308"  [label="AST: "];
"1000312" -> "1000308"  [label="CFG: "];
"1000308" -> "1000496"  [label="DDG: context"];
"1000308" -> "1000496"  [label="DDG: smbc_getFunctionRemoveCachedServer(context)(context,\n                                                                            srv)"];
"1000224" -> "1000308"  [label="DDG: context"];
"1000308" -> "1000343"  [label="DDG: context"];
"1000308" -> "1000454"  [label="DDG: context"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000344"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000347" -> "1000343"  [label="CFG: "];
"1000352" -> "1000343"  [label="CFG: "];
"1000343" -> "1000496"  [label="DDG: context"];
"1000343" -> "1000496"  [label="DDG: smbc_getOptionCaseSensitive(context)"];
"1000224" -> "1000343"  [label="DDG: context"];
"1000343" -> "1000454"  [label="DDG: context"];
"1000454" -> "1000453"  [label="AST: "];
"1000454" -> "1000455"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000458" -> "1000454"  [label="CFG: "];
"1000462" -> "1000454"  [label="CFG: "];
"1000454" -> "1000496"  [label="DDG: smbc_getOptionUseKerberos(context)"];
"1000224" -> "1000454"  [label="DDG: context"];
"1000214" -> "1000454"  [label="DDG: context"];
"1000454" -> "1000461"  [label="DDG: context"];
"1000461" -> "1000460"  [label="AST: "];
"1000461" -> "1000462"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000465" -> "1000461"  [label="CFG: "];
"1000469" -> "1000461"  [label="CFG: "];
"1000461" -> "1000496"  [label="DDG: smbc_getOptionFallbackAfterKerberos(context)"];
"1000461" -> "1000468"  [label="DDG: context"];
"1000468" -> "1000467"  [label="AST: "];
"1000468" -> "1000469"  [label="CFG: "];
"1000469" -> "1000468"  [label="AST: "];
"1000472" -> "1000468"  [label="CFG: "];
"1000476" -> "1000468"  [label="CFG: "];
"1000468" -> "1000496"  [label="DDG: smbc_getOptionUseCCache(context)"];
"1000468" -> "1000475"  [label="DDG: context"];
"1000475" -> "1000474"  [label="AST: "];
"1000475" -> "1000476"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000479" -> "1000475"  [label="CFG: "];
"1000488" -> "1000475"  [label="CFG: "];
"1000475" -> "1000496"  [label="DDG: context"];
"1000475" -> "1000496"  [label="DDG: smbc_getOptionUseNTHash(context)"];
"1000261" -> "1000253"  [label="AST: "];
"1000261" -> "1000265"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000265" -> "1000261"  [label="AST: "];
"1000267" -> "1000261"  [label="CFG: "];
"1000261" -> "1000496"  [label="DDG: NULL"];
"1000261" -> "1000496"  [label="DDG: srv->cli"];
"1000269" -> "1000253"  [label="AST: "];
"1000269" -> "1000270"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000496" -> "1000269"  [label="CFG: "];
"1000269" -> "1000496"  [label="DDG: <RET>"];
"1000270" -> "1000269"  [label="DDG: NULL"];
"1000303" -> "1000294"  [label="AST: "];
"1000303" -> "1000307"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000307" -> "1000303"  [label="AST: "];
"1000309" -> "1000303"  [label="CFG: "];
"1000303" -> "1000496"  [label="DDG: srv->cli"];
"1000311" -> "1000294"  [label="AST: "];
"1000311" -> "1000313"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000313" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="CFG: "];
"1000311" -> "1000496"  [label="DDG: srv"];
"1000311" -> "1000496"  [label="DDG: NULL"];
"1000416" -> "1000415"  [label="AST: "];
"1000416" -> "1000417"  [label="CFG: "];
"1000417" -> "1000416"  [label="AST: "];
"1000496" -> "1000416"  [label="CFG: "];
"1000416" -> "1000496"  [label="DDG: <RET>"];
"1000417" -> "1000416"  [label="DDG: NULL"];
"1000434" -> "1000430"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1000434"  [label="AST: "];
"1000496" -> "1000434"  [label="CFG: "];
"1000434" -> "1000496"  [label="DDG: <RET>"];
"1000435" -> "1000434"  [label="DDG: NULL"];
}
