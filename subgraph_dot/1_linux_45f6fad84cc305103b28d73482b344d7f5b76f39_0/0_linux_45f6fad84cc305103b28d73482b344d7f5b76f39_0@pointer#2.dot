digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_0@pointer" {
"1000397" [label="(Call,newnp->opt != NULL)"];
"1000356" [label="(Call,newnp->opt\t  = NULL)"];
"1000262" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000258" [label="(Call,newsk == NULL)"];
"1000251" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000253" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000231" [label="(Call,sk_acceptq_is_full(sk))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000241" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000235" [label="(Call,!dst)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000248" [label="(Call,!dst)"];
"1000239" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000381" [label="(Call,newnp->opt = ipv6_dup_options(newsk, np->opt))"];
"1000385" [label="(Call,ipv6_dup_options(newsk, np->opt))"];
"1000300" [label="(Call,inet6_sk(newsk))"];
"1000288" [label="(Call,inet_sk(newsk))"];
"1000283" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000376" [label="(Call,np->opt != NULL)"];
"1000476" [label="(Call,ireq->pktopts = NULL)"];
"1000505" [label="(Return,return NULL;)"];
"1000258" [label="(Call,newsk == NULL)"];
"1000251" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000393" [label="(Identifier,newsk)"];
"1000140" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000483" [label="(Identifier,newnp)"];
"1000397" [label="(Call,newnp->opt != NULL)"];
"1000260" [label="(Identifier,NULL)"];
"1000249" [label="(Identifier,dst)"];
"1000298" [label="(Call,newnp = inet6_sk(newsk))"];
"1000376" [label="(Call,np->opt != NULL)"];
"1000212" [label="(Call,inet6_iif(skb))"];
"1000269" [label="(Identifier,newsk)"];
"1000477" [label="(Call,ireq->pktopts)"];
"1000263" [label="(Identifier,newsk)"];
"1000266" [label="(Identifier,NULL)"];
"1000250" [label="(ControlStructure,goto out;)"];
"1000380" [label="(Identifier,NULL)"];
"1000356" [label="(Call,newnp->opt\t  = NULL)"];
"1000505" [label="(Return,return NULL;)"];
"1000300" [label="(Call,inet6_sk(newsk))"];
"1000261" [label="(ControlStructure,goto out_nonewsk;)"];
"1000252" [label="(Identifier,newsk)"];
"1000498" [label="(Call,dst_release(dst))"];
"1000363" [label="(Identifier,newnp)"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000285" [label="(Identifier,newsk)"];
"1000392" [label="(Call,inet_csk(newsk))"];
"1000255" [label="(Identifier,req)"];
"1000231" [label="(Call,sk_acceptq_is_full(sk))"];
"1000507" [label="(MethodReturn,static struct sock *)"];
"1000405" [label="(Identifier,newsk)"];
"1000243" [label="(Call,&fl6)"];
"1000462" [label="(Block,)"];
"1000480" [label="(Identifier,NULL)"];
"1000365" [label="(Call,inet6_iif(skb))"];
"1000286" [label="(Call,newinet = inet_sk(newsk))"];
"1000386" [label="(Identifier,newsk)"];
"1000245" [label="(Identifier,req)"];
"1000247" [label="(ControlStructure,if (!dst))"];
"1000502" [label="(Call,sock_net(sk))"];
"1000253" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000476" [label="(Call,ireq->pktopts = NULL)"];
"1000494" [label="(Call,sock_net(sk))"];
"1000219" [label="(Call,ipv6_hdr(skb))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000264" [label="(Identifier,dst)"];
"1000375" [label="(ControlStructure,if (np->opt != NULL))"];
"1000383" [label="(Identifier,newnp)"];
"1000360" [label="(Identifier,NULL)"];
"1000387" [label="(Call,np->opt)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000236" [label="(Identifier,dst)"];
"1000117" [label="(Call,*ireq = inet_rsk(req))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000237" [label="(Block,)"];
"1000265" [label="(Identifier,NULL)"];
"1000112" [label="(MethodParameterIn,struct dst_entry *dst)"];
"1000382" [label="(Call,newnp->opt)"];
"1000506" [label="(Identifier,NULL)"];
"1000283" [label="(Call,(struct dccp6_sock *)newsk)"];
"1000230" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000256" [label="(Identifier,skb)"];
"1000289" [label="(Identifier,newsk)"];
"1000351" [label="(Call,newnp->pktoptions = NULL)"];
"1000357" [label="(Call,newnp->opt)"];
"1000242" [label="(Identifier,sk)"];
"1000235" [label="(Call,!dst)"];
"1000335" [label="(Call,newinet->inet_opt = NULL)"];
"1000234" [label="(ControlStructure,if (!dst))"];
"1000120" [label="(Identifier,req)"];
"1000381" [label="(Call,newnp->opt = ipv6_dup_options(newsk, np->opt))"];
"1000232" [label="(Identifier,sk)"];
"1000401" [label="(Identifier,NULL)"];
"1000126" [label="(Identifier,sk)"];
"1000262" [label="(Call,__ip6_dst_store(newsk, dst, NULL, NULL))"];
"1000420" [label="(Call,dst_mtu(dst))"];
"1000246" [label="(Identifier,IPPROTO_DCCP)"];
"1000233" [label="(ControlStructure,goto out_overflow;)"];
"1000240" [label="(Identifier,dst)"];
"1000288" [label="(Call,inet_sk(newsk))"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000419" [label="(Identifier,newsk)"];
"1000257" [label="(ControlStructure,if (newsk == NULL))"];
"1000372" [label="(Call,ipv6_hdr(skb))"];
"1000259" [label="(Identifier,newsk)"];
"1000254" [label="(Identifier,sk)"];
"1000398" [label="(Call,newnp->opt)"];
"1000438" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000241" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000281" [label="(Call,newdp6 = (struct dccp6_sock *)newsk)"];
"1000301" [label="(Identifier,newsk)"];
"1000239" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000385" [label="(Call,ipv6_dup_options(newsk, np->opt))"];
"1000377" [label="(Call,np->opt)"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000248" [label="(Call,!dst)"];
"1000115" [label="(Block,)"];
"1000396" [label="(ControlStructure,if (newnp->opt != NULL))"];
"1000397" -> "1000396"  [label="AST: "];
"1000397" -> "1000401"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000401" -> "1000397"  [label="AST: "];
"1000405" -> "1000397"  [label="CFG: "];
"1000419" -> "1000397"  [label="CFG: "];
"1000397" -> "1000507"  [label="DDG: newnp->opt != NULL"];
"1000397" -> "1000507"  [label="DDG: newnp->opt"];
"1000397" -> "1000507"  [label="DDG: NULL"];
"1000356" -> "1000397"  [label="DDG: newnp->opt"];
"1000381" -> "1000397"  [label="DDG: newnp->opt"];
"1000376" -> "1000397"  [label="DDG: NULL"];
"1000397" -> "1000476"  [label="DDG: NULL"];
"1000397" -> "1000505"  [label="DDG: NULL"];
"1000356" -> "1000115"  [label="AST: "];
"1000356" -> "1000360"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000360" -> "1000356"  [label="AST: "];
"1000363" -> "1000356"  [label="CFG: "];
"1000262" -> "1000356"  [label="DDG: NULL"];
"1000262" -> "1000115"  [label="AST: "];
"1000262" -> "1000266"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000265" -> "1000262"  [label="AST: "];
"1000266" -> "1000262"  [label="AST: "];
"1000269" -> "1000262"  [label="CFG: "];
"1000262" -> "1000507"  [label="DDG: __ip6_dst_store(newsk, dst, NULL, NULL)"];
"1000258" -> "1000262"  [label="DDG: newsk"];
"1000258" -> "1000262"  [label="DDG: NULL"];
"1000235" -> "1000262"  [label="DDG: dst"];
"1000248" -> "1000262"  [label="DDG: dst"];
"1000112" -> "1000262"  [label="DDG: dst"];
"1000262" -> "1000283"  [label="DDG: newsk"];
"1000262" -> "1000335"  [label="DDG: NULL"];
"1000262" -> "1000351"  [label="DDG: NULL"];
"1000262" -> "1000376"  [label="DDG: NULL"];
"1000262" -> "1000420"  [label="DDG: dst"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000260"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="AST: "];
"1000261" -> "1000258"  [label="CFG: "];
"1000263" -> "1000258"  [label="CFG: "];
"1000258" -> "1000507"  [label="DDG: newsk"];
"1000258" -> "1000507"  [label="DDG: NULL"];
"1000258" -> "1000507"  [label="DDG: newsk == NULL"];
"1000251" -> "1000258"  [label="DDG: newsk"];
"1000258" -> "1000505"  [label="DDG: NULL"];
"1000251" -> "1000115"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000259" -> "1000251"  [label="CFG: "];
"1000251" -> "1000507"  [label="DDG: dccp_create_openreq_child(sk, req, skb)"];
"1000253" -> "1000251"  [label="DDG: sk"];
"1000253" -> "1000251"  [label="DDG: req"];
"1000253" -> "1000251"  [label="DDG: skb"];
"1000253" -> "1000256"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="AST: "];
"1000253" -> "1000507"  [label="DDG: req"];
"1000253" -> "1000507"  [label="DDG: skb"];
"1000231" -> "1000253"  [label="DDG: sk"];
"1000241" -> "1000253"  [label="DDG: sk"];
"1000241" -> "1000253"  [label="DDG: req"];
"1000109" -> "1000253"  [label="DDG: sk"];
"1000119" -> "1000253"  [label="DDG: req"];
"1000111" -> "1000253"  [label="DDG: req"];
"1000110" -> "1000253"  [label="DDG: skb"];
"1000253" -> "1000365"  [label="DDG: skb"];
"1000253" -> "1000438"  [label="DDG: sk"];
"1000253" -> "1000502"  [label="DDG: sk"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="CFG: "];
"1000236" -> "1000231"  [label="CFG: "];
"1000231" -> "1000507"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000125" -> "1000231"  [label="DDG: sk"];
"1000109" -> "1000231"  [label="DDG: sk"];
"1000231" -> "1000241"  [label="DDG: sk"];
"1000231" -> "1000494"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000140"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000507"  [label="DDG: sk"];
"1000109" -> "1000140"  [label="DDG: sk"];
"1000109" -> "1000241"  [label="DDG: sk"];
"1000109" -> "1000438"  [label="DDG: sk"];
"1000109" -> "1000494"  [label="DDG: sk"];
"1000109" -> "1000502"  [label="DDG: sk"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000507"  [label="DDG: req"];
"1000241" -> "1000507"  [label="DDG: IPPROTO_DCCP"];
"1000241" -> "1000507"  [label="DDG: &fl6"];
"1000241" -> "1000239"  [label="DDG: sk"];
"1000241" -> "1000239"  [label="DDG: &fl6"];
"1000241" -> "1000239"  [label="DDG: req"];
"1000241" -> "1000239"  [label="DDG: IPPROTO_DCCP"];
"1000119" -> "1000241"  [label="DDG: req"];
"1000111" -> "1000241"  [label="DDG: req"];
"1000241" -> "1000502"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000507"  [label="DDG: req"];
"1000119" -> "1000117"  [label="DDG: req"];
"1000111" -> "1000119"  [label="DDG: req"];
"1000119" -> "1000140"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000507"  [label="DDG: req"];
"1000111" -> "1000140"  [label="DDG: req"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000507"  [label="DDG: skb"];
"1000110" -> "1000140"  [label="DDG: skb"];
"1000110" -> "1000212"  [label="DDG: skb"];
"1000110" -> "1000219"  [label="DDG: skb"];
"1000110" -> "1000365"  [label="DDG: skb"];
"1000110" -> "1000372"  [label="DDG: skb"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="CFG: "];
"1000252" -> "1000235"  [label="CFG: "];
"1000235" -> "1000507"  [label="DDG: !dst"];
"1000112" -> "1000235"  [label="DDG: dst"];
"1000235" -> "1000498"  [label="DDG: dst"];
"1000112" -> "1000108"  [label="AST: "];
"1000112" -> "1000507"  [label="DDG: dst"];
"1000112" -> "1000140"  [label="DDG: dst"];
"1000112" -> "1000239"  [label="DDG: dst"];
"1000112" -> "1000248"  [label="DDG: dst"];
"1000112" -> "1000420"  [label="DDG: dst"];
"1000112" -> "1000498"  [label="DDG: dst"];
"1000248" -> "1000247"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000250" -> "1000248"  [label="CFG: "];
"1000252" -> "1000248"  [label="CFG: "];
"1000248" -> "1000507"  [label="DDG: !dst"];
"1000248" -> "1000507"  [label="DDG: dst"];
"1000239" -> "1000248"  [label="DDG: dst"];
"1000248" -> "1000498"  [label="DDG: dst"];
"1000239" -> "1000237"  [label="AST: "];
"1000240" -> "1000239"  [label="AST: "];
"1000249" -> "1000239"  [label="CFG: "];
"1000239" -> "1000507"  [label="DDG: inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP)"];
"1000381" -> "1000375"  [label="AST: "];
"1000381" -> "1000385"  [label="CFG: "];
"1000382" -> "1000381"  [label="AST: "];
"1000385" -> "1000381"  [label="AST: "];
"1000393" -> "1000381"  [label="CFG: "];
"1000381" -> "1000507"  [label="DDG: ipv6_dup_options(newsk, np->opt)"];
"1000385" -> "1000381"  [label="DDG: newsk"];
"1000385" -> "1000381"  [label="DDG: np->opt"];
"1000385" -> "1000387"  [label="CFG: "];
"1000386" -> "1000385"  [label="AST: "];
"1000387" -> "1000385"  [label="AST: "];
"1000385" -> "1000507"  [label="DDG: np->opt"];
"1000300" -> "1000385"  [label="DDG: newsk"];
"1000376" -> "1000385"  [label="DDG: np->opt"];
"1000385" -> "1000392"  [label="DDG: newsk"];
"1000300" -> "1000298"  [label="AST: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000300" -> "1000298"  [label="DDG: newsk"];
"1000288" -> "1000300"  [label="DDG: newsk"];
"1000300" -> "1000392"  [label="DDG: newsk"];
"1000288" -> "1000286"  [label="AST: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000288" -> "1000286"  [label="DDG: newsk"];
"1000283" -> "1000288"  [label="DDG: newsk"];
"1000283" -> "1000281"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000281" -> "1000283"  [label="CFG: "];
"1000283" -> "1000281"  [label="DDG: newsk"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000380"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000380" -> "1000376"  [label="AST: "];
"1000383" -> "1000376"  [label="CFG: "];
"1000393" -> "1000376"  [label="CFG: "];
"1000376" -> "1000507"  [label="DDG: np->opt != NULL"];
"1000376" -> "1000507"  [label="DDG: np->opt"];
"1000476" -> "1000462"  [label="AST: "];
"1000476" -> "1000480"  [label="CFG: "];
"1000477" -> "1000476"  [label="AST: "];
"1000480" -> "1000476"  [label="AST: "];
"1000483" -> "1000476"  [label="CFG: "];
"1000476" -> "1000507"  [label="DDG: ireq->pktopts"];
"1000476" -> "1000507"  [label="DDG: NULL"];
"1000505" -> "1000115"  [label="AST: "];
"1000505" -> "1000506"  [label="CFG: "];
"1000506" -> "1000505"  [label="AST: "];
"1000507" -> "1000505"  [label="CFG: "];
"1000505" -> "1000507"  [label="DDG: <RET>"];
"1000506" -> "1000505"  [label="DDG: NULL"];
}
