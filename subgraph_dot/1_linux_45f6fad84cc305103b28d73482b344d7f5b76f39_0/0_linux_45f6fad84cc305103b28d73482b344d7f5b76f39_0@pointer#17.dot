digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_0@pointer" {
"1000365" [label="(Call,inet6_iif(skb))"];
"1000253" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000231" [label="(Call,sk_acceptq_is_full(sk))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000241" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000361" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000372" [label="(Call,ipv6_hdr(skb))"];
"1000251" [label="(Call,newsk = dccp_create_openreq_child(sk, req, skb))"];
"1000140" [label="(Call,dccp_v4_request_recv_sock(sk, skb, req, dst,\n\t\t\t\t\t\t  req_unhash, own_req))"];
"1000125" [label="(Call,inet6_sk(sk))"];
"1000246" [label="(Identifier,IPPROTO_DCCP)"];
"1000110" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000236" [label="(Identifier,dst)"];
"1000233" [label="(ControlStructure,goto out_overflow;)"];
"1000117" [label="(Call,*ireq = inet_rsk(req))"];
"1000109" [label="(MethodParameterIn,const struct sock *sk)"];
"1000255" [label="(Identifier,req)"];
"1000231" [label="(Call,sk_acceptq_is_full(sk))"];
"1000371" [label="(Call,ipv6_hdr(skb)->hop_limit)"];
"1000507" [label="(MethodReturn,static struct sock *)"];
"1000369" [label="(Identifier,newnp)"];
"1000366" [label="(Identifier,skb)"];
"1000119" [label="(Call,inet_rsk(req))"];
"1000243" [label="(Call,&fl6)"];
"1000212" [label="(Call,inet6_iif(skb))"];
"1000230" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000256" [label="(Identifier,skb)"];
"1000365" [label="(Call,inet6_iif(skb))"];
"1000242" [label="(Identifier,sk)"];
"1000372" [label="(Call,ipv6_hdr(skb))"];
"1000245" [label="(Identifier,req)"];
"1000254" [label="(Identifier,sk)"];
"1000502" [label="(Call,sock_net(sk))"];
"1000253" [label="(Call,dccp_create_openreq_child(sk, req, skb))"];
"1000438" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000241" [label="(Call,inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000494" [label="(Call,sock_net(sk))"];
"1000219" [label="(Call,ipv6_hdr(skb))"];
"1000111" [label="(MethodParameterIn,struct request_sock *req)"];
"1000239" [label="(Call,dst = inet6_csk_route_req(sk, &fl6, req, IPPROTO_DCCP))"];
"1000120" [label="(Identifier,req)"];
"1000123" [label="(Call,*np = inet6_sk(sk))"];
"1000362" [label="(Call,newnp->mcast_oif)"];
"1000232" [label="(Identifier,sk)"];
"1000373" [label="(Identifier,skb)"];
"1000374" [label="(FieldIdentifier,hop_limit)"];
"1000361" [label="(Call,newnp->mcast_oif  = inet6_iif(skb))"];
"1000115" [label="(Block,)"];
"1000126" [label="(Identifier,sk)"];
"1000365" -> "1000361"  [label="AST: "];
"1000365" -> "1000366"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000361" -> "1000365"  [label="CFG: "];
"1000365" -> "1000361"  [label="DDG: skb"];
"1000253" -> "1000365"  [label="DDG: skb"];
"1000110" -> "1000365"  [label="DDG: skb"];
"1000365" -> "1000372"  [label="DDG: skb"];
"1000253" -> "1000251"  [label="AST: "];
"1000253" -> "1000256"  [label="CFG: "];
"1000254" -> "1000253"  [label="AST: "];
"1000255" -> "1000253"  [label="AST: "];
"1000256" -> "1000253"  [label="AST: "];
"1000251" -> "1000253"  [label="CFG: "];
"1000253" -> "1000507"  [label="DDG: req"];
"1000253" -> "1000507"  [label="DDG: skb"];
"1000253" -> "1000251"  [label="DDG: sk"];
"1000253" -> "1000251"  [label="DDG: req"];
"1000253" -> "1000251"  [label="DDG: skb"];
"1000231" -> "1000253"  [label="DDG: sk"];
"1000241" -> "1000253"  [label="DDG: sk"];
"1000241" -> "1000253"  [label="DDG: req"];
"1000109" -> "1000253"  [label="DDG: sk"];
"1000119" -> "1000253"  [label="DDG: req"];
"1000111" -> "1000253"  [label="DDG: req"];
"1000110" -> "1000253"  [label="DDG: skb"];
"1000253" -> "1000438"  [label="DDG: sk"];
"1000253" -> "1000502"  [label="DDG: sk"];
"1000231" -> "1000230"  [label="AST: "];
"1000231" -> "1000232"  [label="CFG: "];
"1000232" -> "1000231"  [label="AST: "];
"1000233" -> "1000231"  [label="CFG: "];
"1000236" -> "1000231"  [label="CFG: "];
"1000231" -> "1000507"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000125" -> "1000231"  [label="DDG: sk"];
"1000109" -> "1000231"  [label="DDG: sk"];
"1000231" -> "1000241"  [label="DDG: sk"];
"1000231" -> "1000494"  [label="DDG: sk"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000125" -> "1000123"  [label="DDG: sk"];
"1000109" -> "1000125"  [label="DDG: sk"];
"1000125" -> "1000140"  [label="DDG: sk"];
"1000109" -> "1000108"  [label="AST: "];
"1000109" -> "1000507"  [label="DDG: sk"];
"1000109" -> "1000140"  [label="DDG: sk"];
"1000109" -> "1000241"  [label="DDG: sk"];
"1000109" -> "1000438"  [label="DDG: sk"];
"1000109" -> "1000494"  [label="DDG: sk"];
"1000109" -> "1000502"  [label="DDG: sk"];
"1000241" -> "1000239"  [label="AST: "];
"1000241" -> "1000246"  [label="CFG: "];
"1000242" -> "1000241"  [label="AST: "];
"1000243" -> "1000241"  [label="AST: "];
"1000245" -> "1000241"  [label="AST: "];
"1000246" -> "1000241"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000241" -> "1000507"  [label="DDG: req"];
"1000241" -> "1000507"  [label="DDG: IPPROTO_DCCP"];
"1000241" -> "1000507"  [label="DDG: &fl6"];
"1000241" -> "1000239"  [label="DDG: sk"];
"1000241" -> "1000239"  [label="DDG: &fl6"];
"1000241" -> "1000239"  [label="DDG: req"];
"1000241" -> "1000239"  [label="DDG: IPPROTO_DCCP"];
"1000119" -> "1000241"  [label="DDG: req"];
"1000111" -> "1000241"  [label="DDG: req"];
"1000241" -> "1000502"  [label="DDG: sk"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000120"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000507"  [label="DDG: req"];
"1000119" -> "1000117"  [label="DDG: req"];
"1000111" -> "1000119"  [label="DDG: req"];
"1000119" -> "1000140"  [label="DDG: req"];
"1000111" -> "1000108"  [label="AST: "];
"1000111" -> "1000507"  [label="DDG: req"];
"1000111" -> "1000140"  [label="DDG: req"];
"1000110" -> "1000108"  [label="AST: "];
"1000110" -> "1000507"  [label="DDG: skb"];
"1000110" -> "1000140"  [label="DDG: skb"];
"1000110" -> "1000212"  [label="DDG: skb"];
"1000110" -> "1000219"  [label="DDG: skb"];
"1000110" -> "1000372"  [label="DDG: skb"];
"1000361" -> "1000115"  [label="AST: "];
"1000362" -> "1000361"  [label="AST: "];
"1000369" -> "1000361"  [label="CFG: "];
"1000361" -> "1000507"  [label="DDG: inet6_iif(skb)"];
"1000361" -> "1000507"  [label="DDG: newnp->mcast_oif"];
"1000372" -> "1000371"  [label="AST: "];
"1000372" -> "1000373"  [label="CFG: "];
"1000373" -> "1000372"  [label="AST: "];
"1000374" -> "1000372"  [label="CFG: "];
"1000372" -> "1000507"  [label="DDG: skb"];
}
