digraph "0_src_3095060f479b86288e31c79ecbc5131a66bcd2f9_9@API" {
"1000161" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?\n\t    \"zlib@openssh.com,none\" : \"none,zlib@openssh.com\")"];
"1000157" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_CTOS] =\n \t    myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?\n\t    \"zlib@openssh.com,none\" : \"none,zlib@openssh.com\")"];
"1000249" [label="(Call,kex_setup(active_state, myproposal))"];
"1000246" [label="(Call,(r = kex_setup(active_state, myproposal)) != 0)"];
"1000247" [label="(Call,r = kex_setup(active_state, myproposal))"];
"1000255" [label="(Call,ssh_err(r))"];
"1000253" [label="(Call,fatal(\"kex_setup: %s\", ssh_err(r)))"];
"1000341" [label="(Call,dispatch_run(DISPATCH_BLOCK, &kex->done, active_state))"];
"1000360" [label="(Call,kex_prop2buf(kex->my, myproposal))"];
"1000357" [label="(Call,(r = kex_prop2buf(kex->my, myproposal)) != 0)"];
"1000358" [label="(Call,r = kex_prop2buf(kex->my, myproposal))"];
"1000368" [label="(Call,ssh_err(r))"];
"1000366" [label="(Call,fatal(\"kex_prop2buf: %s\", ssh_err(r)))"];
"1000135" [label="(Call,myproposal[PROPOSAL_KEX_ALGS] = compat_kex_proposal(s))"];
"1000201" [label="(Call,myproposal[PROPOSAL_SERVER_HOST_KEY_ALGS] =\n\t\t    compat_pkalg_proposal(options.hostkeyalgorithms))"];
"1000371" [label="(Identifier,session_id2)"];
"1000368" [label="(Call,ssh_err(r))"];
"1000246" [label="(Call,(r = kex_setup(active_state, myproposal)) != 0)"];
"1000254" [label="(Literal,\"kex_setup: %s\")"];
"1000217" [label="(Call,myproposal[PROPOSAL_SERVER_HOST_KEY_ALGS] =\n\t\t    compat_pkalg_proposal(\n\t\t    order_hostkeyalgs(host, hostaddr, port)))"];
"1000245" [label="(ControlStructure,if ((r = kex_setup(active_state, myproposal)) != 0))"];
"1000369" [label="(Identifier,r)"];
"1000175" [label="(Call,myproposal[PROPOSAL_MAC_ALGS_STOC] = options.macs)"];
"1000149" [label="(Call,myproposal[PROPOSAL_ENC_ALGS_STOC] =\n \t    compat_cipher_proposal(options.ciphers))"];
"1000249" [label="(Call,kex_setup(active_state, myproposal))"];
"1000109" [label="(Block,)"];
"1000253" [label="(Call,fatal(\"kex_setup: %s\", ssh_err(r)))"];
"1000256" [label="(Identifier,r)"];
"1000361" [label="(Call,kex->my)"];
"1000365" [label="(Literal,0)"];
"1000367" [label="(Literal,\"kex_prop2buf: %s\")"];
"1000342" [label="(Identifier,DISPATCH_BLOCK)"];
"1000364" [label="(Identifier,myproposal)"];
"1000360" [label="(Call,kex_prop2buf(kex->my, myproposal))"];
"1000171" [label="(Call,myproposal[PROPOSAL_MAC_ALGS_CTOS] =\n \t    myproposal[PROPOSAL_MAC_ALGS_STOC] = options.macs)"];
"1000366" [label="(Call,fatal(\"kex_prop2buf: %s\", ssh_err(r)))"];
"1000357" [label="(Call,(r = kex_prop2buf(kex->my, myproposal)) != 0)"];
"1000162" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_STOC])"];
"1000252" [label="(Literal,0)"];
"1000161" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?\n\t    \"zlib@openssh.com,none\" : \"none,zlib@openssh.com\")"];
"1000348" [label="(Call,myproposal[PROPOSAL_KEX_ALGS] =\n\t    compat_kex_proposal(options.kex_algorithms))"];
"1000358" [label="(Call,r = kex_prop2buf(kex->my, myproposal))"];
"1000250" [label="(Identifier,active_state)"];
"1000248" [label="(Identifier,r)"];
"1000173" [label="(Identifier,myproposal)"];
"1000356" [label="(ControlStructure,if ((r = kex_prop2buf(kex->my, myproposal)) != 0))"];
"1000258" [label="(Identifier,kex)"];
"1000386" [label="(MethodReturn,RET)"];
"1000165" [label="(Call,options.compression ?\n\t    \"zlib@openssh.com,none\" : \"none,zlib@openssh.com\")"];
"1000341" [label="(Call,dispatch_run(DISPATCH_BLOCK, &kex->done, active_state))"];
"1000141" [label="(Call,myproposal[PROPOSAL_ENC_ALGS_CTOS] =\n\t    compat_cipher_proposal(options.ciphers))"];
"1000359" [label="(Identifier,r)"];
"1000255" [label="(Call,ssh_err(r))"];
"1000343" [label="(Call,&kex->done)"];
"1000350" [label="(Identifier,myproposal)"];
"1000247" [label="(Call,r = kex_setup(active_state, myproposal))"];
"1000158" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_CTOS])"];
"1000347" [label="(Identifier,active_state)"];
"1000157" [label="(Call,myproposal[PROPOSAL_COMP_ALGS_CTOS] =\n \t    myproposal[PROPOSAL_COMP_ALGS_STOC] = options.compression ?\n\t    \"zlib@openssh.com,none\" : \"none,zlib@openssh.com\")"];
"1000251" [label="(Identifier,myproposal)"];
"1000111" [label="(Call,*myproposal[PROPOSAL_MAX] = { KEX_CLIENT })"];
"1000161" -> "1000157"  [label="AST: "];
"1000161" -> "1000165"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000165" -> "1000161"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000161" -> "1000386"  [label="DDG: "];
"1000161" -> "1000386"  [label="DDG: "];
"1000161" -> "1000157"  [label="DDG: "];
"1000161" -> "1000249"  [label="DDG: "];
"1000161" -> "1000360"  [label="DDG: "];
"1000157" -> "1000109"  [label="AST: "];
"1000158" -> "1000157"  [label="AST: "];
"1000173" -> "1000157"  [label="CFG: "];
"1000157" -> "1000386"  [label="DDG: "];
"1000157" -> "1000249"  [label="DDG: "];
"1000157" -> "1000360"  [label="DDG: "];
"1000249" -> "1000247"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000247" -> "1000249"  [label="CFG: "];
"1000249" -> "1000246"  [label="DDG: "];
"1000249" -> "1000246"  [label="DDG: "];
"1000249" -> "1000247"  [label="DDG: "];
"1000249" -> "1000247"  [label="DDG: "];
"1000217" -> "1000249"  [label="DDG: "];
"1000175" -> "1000249"  [label="DDG: "];
"1000111" -> "1000249"  [label="DDG: "];
"1000135" -> "1000249"  [label="DDG: "];
"1000149" -> "1000249"  [label="DDG: "];
"1000201" -> "1000249"  [label="DDG: "];
"1000171" -> "1000249"  [label="DDG: "];
"1000141" -> "1000249"  [label="DDG: "];
"1000249" -> "1000341"  [label="DDG: "];
"1000249" -> "1000360"  [label="DDG: "];
"1000246" -> "1000245"  [label="AST: "];
"1000246" -> "1000252"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000252" -> "1000246"  [label="AST: "];
"1000254" -> "1000246"  [label="CFG: "];
"1000258" -> "1000246"  [label="CFG: "];
"1000246" -> "1000386"  [label="DDG: "];
"1000247" -> "1000246"  [label="DDG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000252" -> "1000247"  [label="CFG: "];
"1000247" -> "1000386"  [label="DDG: "];
"1000247" -> "1000255"  [label="DDG: "];
"1000255" -> "1000253"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000253" -> "1000255"  [label="CFG: "];
"1000255" -> "1000253"  [label="DDG: "];
"1000253" -> "1000245"  [label="AST: "];
"1000254" -> "1000253"  [label="AST: "];
"1000258" -> "1000253"  [label="CFG: "];
"1000253" -> "1000386"  [label="DDG: "];
"1000253" -> "1000386"  [label="DDG: "];
"1000341" -> "1000109"  [label="AST: "];
"1000341" -> "1000347"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="AST: "];
"1000347" -> "1000341"  [label="AST: "];
"1000350" -> "1000341"  [label="CFG: "];
"1000341" -> "1000386"  [label="DDG: "];
"1000341" -> "1000386"  [label="DDG: "];
"1000341" -> "1000386"  [label="DDG: "];
"1000341" -> "1000386"  [label="DDG: "];
"1000360" -> "1000358"  [label="AST: "];
"1000360" -> "1000364"  [label="CFG: "];
"1000361" -> "1000360"  [label="AST: "];
"1000364" -> "1000360"  [label="AST: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000360" -> "1000386"  [label="DDG: "];
"1000360" -> "1000386"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000357"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000360" -> "1000358"  [label="DDG: "];
"1000348" -> "1000360"  [label="DDG: "];
"1000217" -> "1000360"  [label="DDG: "];
"1000175" -> "1000360"  [label="DDG: "];
"1000149" -> "1000360"  [label="DDG: "];
"1000201" -> "1000360"  [label="DDG: "];
"1000171" -> "1000360"  [label="DDG: "];
"1000141" -> "1000360"  [label="DDG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000365"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000365" -> "1000357"  [label="AST: "];
"1000367" -> "1000357"  [label="CFG: "];
"1000371" -> "1000357"  [label="CFG: "];
"1000357" -> "1000386"  [label="DDG: "];
"1000358" -> "1000357"  [label="DDG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000365" -> "1000358"  [label="CFG: "];
"1000358" -> "1000386"  [label="DDG: "];
"1000358" -> "1000386"  [label="DDG: "];
"1000358" -> "1000368"  [label="DDG: "];
"1000368" -> "1000366"  [label="AST: "];
"1000368" -> "1000369"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000368" -> "1000386"  [label="DDG: "];
"1000368" -> "1000366"  [label="DDG: "];
"1000366" -> "1000356"  [label="AST: "];
"1000367" -> "1000366"  [label="AST: "];
"1000371" -> "1000366"  [label="CFG: "];
"1000366" -> "1000386"  [label="DDG: "];
"1000366" -> "1000386"  [label="DDG: "];
}
