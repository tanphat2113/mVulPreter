digraph "0_linux_237bbd29f7a049d310d907f4b2716a7feef9abf3@pointer" {
"1000417" [label="(Call,kmem_cache_free(key_jar, key))"];
"1000254" [label="(Call,kmem_cache_zalloc(key_jar, GFP_KERNEL))"];
"1000393" [label="(Call,security_key_alloc(key, cred, flags))"];
"1000258" [label="(Call,!key)"];
"1000252" [label="(Call,key = kmem_cache_zalloc(key_jar, GFP_KERNEL))"];
"1000110" [label="(MethodParameterIn,const struct cred *cred)"];
"1000376" [label="(Call,flags & KEY_ALLOC_UID_KEYRING)"];
"1000365" [label="(Call,flags & KEY_ALLOC_BUILT_IN)"];
"1000354" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000178" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000112" [label="(MethodParameterIn,unsigned long flags)"];
"1000207" [label="(Call,flags & KEY_ALLOC_QUOTA_OVERRUN)"];
"1000423" [label="(Identifier,flags)"];
"1000354" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000274" [label="(Call,kmemdup(desc, desclen + 1, GFP_KERNEL))"];
"1000459" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000370" [label="(Identifier,key)"];
"1000422" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000393" [label="(Call,security_key_alloc(key, cred, flags))"];
"1000378" [label="(Identifier,KEY_ALLOC_UID_KEYRING)"];
"1000257" [label="(ControlStructure,if (!key))"];
"1000365" [label="(Call,flags & KEY_ALLOC_BUILT_IN)"];
"1000177" [label="(Call,!(flags & KEY_ALLOC_NOT_IN_QUOTA))"];
"1000376" [label="(Call,flags & KEY_ALLOC_UID_KEYRING)"];
"1000395" [label="(Identifier,cred)"];
"1000394" [label="(Identifier,key)"];
"1000179" [label="(Identifier,flags)"];
"1000256" [label="(Identifier,GFP_KERNEL)"];
"1000209" [label="(Identifier,KEY_ALLOC_QUOTA_OVERRUN)"];
"1000377" [label="(Identifier,flags)"];
"1000418" [label="(Identifier,key_jar)"];
"1000367" [label="(Identifier,KEY_ALLOC_BUILT_IN)"];
"1000264" [label="(Identifier,key)"];
"1000254" [label="(Call,kmem_cache_zalloc(key_jar, GFP_KERNEL))"];
"1000407" [label="(Call,key_alloc_serial(key))"];
"1000364" [label="(ControlStructure,if (flags & KEY_ALLOC_BUILT_IN))"];
"1000391" [label="(Call,ret = security_key_alloc(key, cred, flags))"];
"1000206" [label="(Call,!(flags & KEY_ALLOC_QUOTA_OVERRUN))"];
"1000396" [label="(Identifier,flags)"];
"1000417" [label="(Call,kmem_cache_free(key_jar, key))"];
"1000258" [label="(Call,!key)"];
"1000419" [label="(Identifier,key)"];
"1000110" [label="(MethodParameterIn,const struct cred *cred)"];
"1000366" [label="(Identifier,flags)"];
"1000260" [label="(ControlStructure,goto no_memory_2;)"];
"1000381" [label="(Identifier,key)"];
"1000178" [label="(Call,flags & KEY_ALLOC_NOT_IN_QUOTA)"];
"1000112" [label="(MethodParameterIn,unsigned long flags)"];
"1000208" [label="(Identifier,flags)"];
"1000114" [label="(Block,)"];
"1000375" [label="(ControlStructure,if (flags & KEY_ALLOC_UID_KEYRING))"];
"1000355" [label="(Identifier,flags)"];
"1000453" [label="(Call,kmem_cache_free(key_jar, key))"];
"1000259" [label="(Identifier,key)"];
"1000180" [label="(Identifier,KEY_ALLOC_NOT_IN_QUOTA)"];
"1000356" [label="(Identifier,KEY_ALLOC_NOT_IN_QUOTA)"];
"1000505" [label="(MethodReturn,struct key *)"];
"1000252" [label="(Call,key = kmem_cache_zalloc(key_jar, GFP_KERNEL))"];
"1000253" [label="(Identifier,key)"];
"1000353" [label="(Call,!(flags & KEY_ALLOC_NOT_IN_QUOTA))"];
"1000207" [label="(Call,flags & KEY_ALLOC_QUOTA_OVERRUN)"];
"1000388" [label="(Identifier,key)"];
"1000255" [label="(Identifier,key_jar)"];
"1000417" -> "1000114"  [label="AST: "];
"1000417" -> "1000419"  [label="CFG: "];
"1000418" -> "1000417"  [label="AST: "];
"1000419" -> "1000417"  [label="AST: "];
"1000423" -> "1000417"  [label="CFG: "];
"1000417" -> "1000505"  [label="DDG: key_jar"];
"1000417" -> "1000505"  [label="DDG: kmem_cache_free(key_jar, key)"];
"1000254" -> "1000417"  [label="DDG: key_jar"];
"1000393" -> "1000417"  [label="DDG: key"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1000505"  [label="DDG: key_jar"];
"1000254" -> "1000505"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000252"  [label="DDG: key_jar"];
"1000254" -> "1000252"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000274"  [label="DDG: GFP_KERNEL"];
"1000254" -> "1000453"  [label="DDG: key_jar"];
"1000393" -> "1000391"  [label="AST: "];
"1000393" -> "1000396"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="AST: "];
"1000396" -> "1000393"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000393" -> "1000505"  [label="DDG: flags"];
"1000393" -> "1000505"  [label="DDG: cred"];
"1000393" -> "1000391"  [label="DDG: key"];
"1000393" -> "1000391"  [label="DDG: cred"];
"1000393" -> "1000391"  [label="DDG: flags"];
"1000258" -> "1000393"  [label="DDG: key"];
"1000110" -> "1000393"  [label="DDG: cred"];
"1000376" -> "1000393"  [label="DDG: flags"];
"1000112" -> "1000393"  [label="DDG: flags"];
"1000393" -> "1000407"  [label="DDG: key"];
"1000393" -> "1000422"  [label="DDG: flags"];
"1000258" -> "1000257"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1000258"  [label="AST: "];
"1000260" -> "1000258"  [label="CFG: "];
"1000264" -> "1000258"  [label="CFG: "];
"1000258" -> "1000505"  [label="DDG: !key"];
"1000252" -> "1000258"  [label="DDG: key"];
"1000258" -> "1000453"  [label="DDG: key"];
"1000252" -> "1000114"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000259" -> "1000252"  [label="CFG: "];
"1000252" -> "1000505"  [label="DDG: kmem_cache_zalloc(key_jar, GFP_KERNEL)"];
"1000110" -> "1000105"  [label="AST: "];
"1000110" -> "1000505"  [label="DDG: cred"];
"1000376" -> "1000375"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000388" -> "1000376"  [label="CFG: "];
"1000376" -> "1000505"  [label="DDG: flags & KEY_ALLOC_UID_KEYRING"];
"1000376" -> "1000505"  [label="DDG: KEY_ALLOC_UID_KEYRING"];
"1000365" -> "1000376"  [label="DDG: flags"];
"1000112" -> "1000376"  [label="DDG: flags"];
"1000365" -> "1000364"  [label="AST: "];
"1000365" -> "1000367"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000367" -> "1000365"  [label="AST: "];
"1000370" -> "1000365"  [label="CFG: "];
"1000377" -> "1000365"  [label="CFG: "];
"1000365" -> "1000505"  [label="DDG: flags & KEY_ALLOC_BUILT_IN"];
"1000365" -> "1000505"  [label="DDG: KEY_ALLOC_BUILT_IN"];
"1000354" -> "1000365"  [label="DDG: flags"];
"1000112" -> "1000365"  [label="DDG: flags"];
"1000354" -> "1000353"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000356" -> "1000354"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000505"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000354" -> "1000353"  [label="DDG: flags"];
"1000354" -> "1000353"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000178" -> "1000354"  [label="DDG: flags"];
"1000178" -> "1000354"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000207" -> "1000354"  [label="DDG: flags"];
"1000112" -> "1000354"  [label="DDG: flags"];
"1000354" -> "1000422"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000178" -> "1000177"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000505"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000178" -> "1000177"  [label="DDG: flags"];
"1000178" -> "1000177"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000112" -> "1000178"  [label="DDG: flags"];
"1000178" -> "1000207"  [label="DDG: flags"];
"1000178" -> "1000459"  [label="DDG: flags"];
"1000178" -> "1000459"  [label="DDG: KEY_ALLOC_NOT_IN_QUOTA"];
"1000112" -> "1000105"  [label="AST: "];
"1000112" -> "1000505"  [label="DDG: flags"];
"1000112" -> "1000207"  [label="DDG: flags"];
"1000112" -> "1000422"  [label="DDG: flags"];
"1000112" -> "1000459"  [label="DDG: flags"];
"1000207" -> "1000206"  [label="AST: "];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000505"  [label="DDG: KEY_ALLOC_QUOTA_OVERRUN"];
"1000207" -> "1000505"  [label="DDG: flags"];
"1000207" -> "1000206"  [label="DDG: flags"];
"1000207" -> "1000206"  [label="DDG: KEY_ALLOC_QUOTA_OVERRUN"];
"1000207" -> "1000459"  [label="DDG: flags"];
}
