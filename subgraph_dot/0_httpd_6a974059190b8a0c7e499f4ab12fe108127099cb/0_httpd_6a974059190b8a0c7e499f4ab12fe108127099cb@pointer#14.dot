digraph "0_httpd_6a974059190b8a0c7e499f4ab12fe108127099cb@pointer" {
"1000593" [label="(Call,r->method_number == M_INVALID)"];
"1000321" [label="(Call,r->method_number == M_GET)"];
"1000311" [label="(Call,r->method_number = ap_method_number_of(r->method))"];
"1000315" [label="(Call,ap_method_number_of(r->method))"];
"1000293" [label="(Call,r->method = ap_getword_white(r->pool, &ll))"];
"1000297" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000276" [label="(Call,ap_escape_logitem(r->pool, r->the_request))"];
"1000175" [label="(Call,r->the_request = NULL)"];
"1000182" [label="(Call,ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000187" [label="(Call,(apr_size_t)(r->server->limit_req_line + 2))"];
"1000110" [label="(MethodParameterIn,request_rec *r)"];
"1000111" [label="(MethodParameterIn,apr_bucket_brigade *bb)"];
"1000312" [label="(Call,r->method_number)"];
"1000288" [label="(Call,ll = r->the_request)"];
"1000316" [label="(Call,r->method)"];
"1000305" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000592" [label="(ControlStructure,if (r->method_number == M_INVALID))"];
"1000176" [label="(Call,r->the_request)"];
"1000339" [label="(Call,ap_parse_uri(r, uri))"];
"1000198" [label="(Identifier,r)"];
"1000277" [label="(Call,r->pool)"];
"1000323" [label="(Identifier,r)"];
"1000294" [label="(Call,r->method)"];
"1000329" [label="(Identifier,r)"];
"1000197" [label="(Identifier,len)"];
"1000180" [label="(Call,rv = ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000189" [label="(Call,r->server->limit_req_line + 2)"];
"1000276" [label="(Call,ap_escape_logitem(r->pool, r->the_request))"];
"1000175" [label="(Call,r->the_request = NULL)"];
"1000607" [label="(Identifier,r)"];
"1000311" [label="(Call,r->method_number = ap_method_number_of(r->method))"];
"1000112" [label="(Block,)"];
"1000304" [label="(Identifier,uri)"];
"1000597" [label="(Identifier,M_INVALID)"];
"1000182" [label="(Call,ap_rgetline(&(r->the_request), (apr_size_t)(r->server->limit_req_line + 2),\n                         &len, r, 0, bb))"];
"1000270" [label="(Call,ap_log_rerror(APLOG_MARK, APLOG_TRACE5, 0, r,\n                      \"Request received from client: %s\",\n                      ap_escape_logitem(r->pool, r->the_request)))"];
"1000297" [label="(Call,ap_getword_white(r->pool, &ll))"];
"1000110" [label="(MethodParameterIn,request_rec *r)"];
"1000293" [label="(Call,r->method = ap_getword_white(r->pool, &ll))"];
"1000200" [label="(Identifier,bb)"];
"1000187" [label="(Call,(apr_size_t)(r->server->limit_req_line + 2))"];
"1000267" [label="(Call,APLOGrtrace5(r))"];
"1000173" [label="(Block,)"];
"1000301" [label="(Call,&ll)"];
"1000183" [label="(Call,&(r->the_request))"];
"1000179" [label="(Identifier,NULL)"];
"1000199" [label="(Literal,0)"];
"1000298" [label="(Call,r->pool)"];
"1000593" [label="(Call,r->method_number == M_INVALID)"];
"1000111" [label="(MethodParameterIn,apr_bucket_brigade *bb)"];
"1000322" [label="(Call,r->method_number)"];
"1000315" [label="(Call,ap_method_number_of(r->method))"];
"1000321" [label="(Call,r->method_number == M_GET)"];
"1000556" [label="(Call,ap_has_cntrl(r->the_request))"];
"1000280" [label="(Call,r->the_request)"];
"1000320" [label="(Call,r->method_number == M_GET && r->method[0] == 'H')"];
"1000325" [label="(Identifier,M_GET)"];
"1000196" [label="(Call,&len)"];
"1000181" [label="(Identifier,rv)"];
"1000635" [label="(MethodReturn,static int)"];
"1000600" [label="(Identifier,err)"];
"1000594" [label="(Call,r->method_number)"];
"1000593" -> "1000592"  [label="AST: "];
"1000593" -> "1000597"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000597" -> "1000593"  [label="AST: "];
"1000600" -> "1000593"  [label="CFG: "];
"1000607" -> "1000593"  [label="CFG: "];
"1000593" -> "1000635"  [label="DDG: M_INVALID"];
"1000593" -> "1000635"  [label="DDG: r->method_number"];
"1000593" -> "1000635"  [label="DDG: r->method_number == M_INVALID"];
"1000321" -> "1000593"  [label="DDG: r->method_number"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000325"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000325" -> "1000321"  [label="AST: "];
"1000329" -> "1000321"  [label="CFG: "];
"1000320" -> "1000321"  [label="CFG: "];
"1000321" -> "1000635"  [label="DDG: r->method_number"];
"1000321" -> "1000635"  [label="DDG: M_GET"];
"1000321" -> "1000320"  [label="DDG: r->method_number"];
"1000321" -> "1000320"  [label="DDG: M_GET"];
"1000311" -> "1000321"  [label="DDG: r->method_number"];
"1000311" -> "1000112"  [label="AST: "];
"1000311" -> "1000315"  [label="CFG: "];
"1000312" -> "1000311"  [label="AST: "];
"1000315" -> "1000311"  [label="AST: "];
"1000323" -> "1000311"  [label="CFG: "];
"1000311" -> "1000635"  [label="DDG: ap_method_number_of(r->method)"];
"1000315" -> "1000311"  [label="DDG: r->method"];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000315" -> "1000635"  [label="DDG: r->method"];
"1000293" -> "1000315"  [label="DDG: r->method"];
"1000293" -> "1000112"  [label="AST: "];
"1000293" -> "1000297"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000297" -> "1000293"  [label="AST: "];
"1000304" -> "1000293"  [label="CFG: "];
"1000297" -> "1000293"  [label="DDG: r->pool"];
"1000297" -> "1000293"  [label="DDG: &ll"];
"1000297" -> "1000301"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000301" -> "1000297"  [label="AST: "];
"1000276" -> "1000297"  [label="DDG: r->pool"];
"1000297" -> "1000305"  [label="DDG: r->pool"];
"1000297" -> "1000305"  [label="DDG: &ll"];
"1000276" -> "1000270"  [label="AST: "];
"1000276" -> "1000280"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="AST: "];
"1000270" -> "1000276"  [label="CFG: "];
"1000276" -> "1000270"  [label="DDG: r->pool"];
"1000276" -> "1000270"  [label="DDG: r->the_request"];
"1000175" -> "1000276"  [label="DDG: r->the_request"];
"1000182" -> "1000276"  [label="DDG: &(r->the_request)"];
"1000276" -> "1000288"  [label="DDG: r->the_request"];
"1000276" -> "1000556"  [label="DDG: r->the_request"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000179" -> "1000175"  [label="AST: "];
"1000181" -> "1000175"  [label="CFG: "];
"1000175" -> "1000635"  [label="DDG: NULL"];
"1000175" -> "1000635"  [label="DDG: r->the_request"];
"1000175" -> "1000182"  [label="DDG: r->the_request"];
"1000175" -> "1000288"  [label="DDG: r->the_request"];
"1000175" -> "1000556"  [label="DDG: r->the_request"];
"1000182" -> "1000180"  [label="AST: "];
"1000182" -> "1000200"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000187" -> "1000182"  [label="AST: "];
"1000196" -> "1000182"  [label="AST: "];
"1000198" -> "1000182"  [label="AST: "];
"1000199" -> "1000182"  [label="AST: "];
"1000200" -> "1000182"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000182" -> "1000635"  [label="DDG: (apr_size_t)(r->server->limit_req_line + 2)"];
"1000182" -> "1000635"  [label="DDG: bb"];
"1000182" -> "1000635"  [label="DDG: &len"];
"1000182" -> "1000635"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000635"  [label="DDG: r"];
"1000182" -> "1000180"  [label="DDG: (apr_size_t)(r->server->limit_req_line + 2)"];
"1000182" -> "1000180"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000180"  [label="DDG: bb"];
"1000182" -> "1000180"  [label="DDG: 0"];
"1000182" -> "1000180"  [label="DDG: &len"];
"1000182" -> "1000180"  [label="DDG: r"];
"1000187" -> "1000182"  [label="DDG: r->server->limit_req_line + 2"];
"1000110" -> "1000182"  [label="DDG: r"];
"1000111" -> "1000182"  [label="DDG: bb"];
"1000182" -> "1000267"  [label="DDG: r"];
"1000182" -> "1000288"  [label="DDG: &(r->the_request)"];
"1000182" -> "1000556"  [label="DDG: &(r->the_request)"];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000197" -> "1000187"  [label="CFG: "];
"1000187" -> "1000635"  [label="DDG: r->server->limit_req_line + 2"];
"1000110" -> "1000109"  [label="AST: "];
"1000110" -> "1000635"  [label="DDG: r"];
"1000110" -> "1000267"  [label="DDG: r"];
"1000110" -> "1000270"  [label="DDG: r"];
"1000110" -> "1000339"  [label="DDG: r"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000635"  [label="DDG: bb"];
}
