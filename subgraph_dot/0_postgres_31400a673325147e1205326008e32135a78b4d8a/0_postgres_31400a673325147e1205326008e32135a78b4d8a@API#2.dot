digraph "0_postgres_31400a673325147e1205326008e32135a78b4d8a@API" {
"1000200" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000198" [label="(Call,count > MaxAllocSize / sizeof(Pairs))"];
"1000209" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t count, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000221" [label="(Call,count * sizeof(Pairs))"];
"1000220" [label="(Call,palloc(count * sizeof(Pairs)))"];
"1000218" [label="(Call,pairs = palloc(count * sizeof(Pairs)))"];
"1000382" [label="(Call,hstoreUniquePairs(pairs, count, &buflen))"];
"1000380" [label="(Call,count = hstoreUniquePairs(pairs, count, &buflen))"];
"1000389" [label="(Call,hstorePairs(pairs, count, buflen))"];
"1000387" [label="(Call,out = hstorePairs(pairs, count, buflen))"];
"1000393" [label="(Call,PG_RETURN_POINTER(out))"];
"1000229" [label="(Call,i < count)"];
"1000238" [label="(Call,i * 2)"];
"1000252" [label="(Call,i * 2)"];
"1000251" [label="(Call,i * 2 + 1)"];
"1000266" [label="(Call,i * 2)"];
"1000286" [label="(Call,i * 2)"];
"1000232" [label="(Call,++i)"];
"1000321" [label="(Call,i * 2)"];
"1000334" [label="(Call,i * 2)"];
"1000333" [label="(Call,i * 2 + 1)"];
"1000348" [label="(Call,i * 2)"];
"1000362" [label="(Call,i * 2)"];
"1000361" [label="(Call,i * 2 + 1)"];
"1000214" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000212" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000205" [label="(Identifier,ERROR)"];
"1000287" [label="(Identifier,i)"];
"1000333" [label="(Call,i * 2 + 1)"];
"1000227" [label="(Identifier,i)"];
"1000387" [label="(Call,out = hstorePairs(pairs, count, buflen))"];
"1000395" [label="(MethodReturn,RET)"];
"1000346" [label="(Call,in_datums[i * 2])"];
"1000218" [label="(Call,pairs = palloc(count * sizeof(Pairs)))"];
"1000284" [label="(Call,in_datums[i * 2])"];
"1000219" [label="(Identifier,pairs)"];
"1000240" [label="(Literal,2)"];
"1000334" [label="(Call,i * 2)"];
"1000204" [label="(Call,ereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),\n\t\t\t  errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t count, (int) (MaxAllocSize / sizeof(Pairs))))))"];
"1000363" [label="(Identifier,i)"];
"1000392" [label="(Identifier,buflen)"];
"1000384" [label="(Identifier,count)"];
"1000385" [label="(Call,&buflen)"];
"1000350" [label="(Literal,2)"];
"1000103" [label="(Block,)"];
"1000251" [label="(Call,i * 2 + 1)"];
"1000336" [label="(Literal,2)"];
"1000254" [label="(Literal,2)"];
"1000321" [label="(Call,i * 2)"];
"1000253" [label="(Identifier,i)"];
"1000390" [label="(Identifier,pairs)"];
"1000361" [label="(Call,i * 2 + 1)"];
"1000236" [label="(Call,in_nulls[i * 2])"];
"1000211" [label="(Identifier,count)"];
"1000225" [label="(ControlStructure,for (i = 0; i < count; ++i))"];
"1000323" [label="(Literal,2)"];
"1000200" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000383" [label="(Identifier,pairs)"];
"1000267" [label="(Identifier,i)"];
"1000348" [label="(Call,i * 2)"];
"1000288" [label="(Literal,2)"];
"1000337" [label="(Literal,1)"];
"1000382" [label="(Call,hstoreUniquePairs(pairs, count, &buflen))"];
"1000232" [label="(Call,++i)"];
"1000238" [label="(Call,i * 2)"];
"1000222" [label="(Identifier,count)"];
"1000221" [label="(Call,count * sizeof(Pairs))"];
"1000199" [label="(Identifier,count)"];
"1000359" [label="(Call,in_datums[i * 2 + 1])"];
"1000255" [label="(Literal,1)"];
"1000393" [label="(Call,PG_RETURN_POINTER(out))"];
"1000197" [label="(ControlStructure,if (count > MaxAllocSize / sizeof(Pairs)))"];
"1000268" [label="(Literal,2)"];
"1000362" [label="(Call,i * 2)"];
"1000249" [label="(Call,in_nulls[i * 2 + 1])"];
"1000322" [label="(Identifier,i)"];
"1000226" [label="(Call,i = 0)"];
"1000206" [label="(Block,)"];
"1000233" [label="(Identifier,i)"];
"1000237" [label="(Identifier,in_nulls)"];
"1000389" [label="(Call,hstorePairs(pairs, count, buflen))"];
"1000192" [label="(Call,count = in_count / 2)"];
"1000209" [label="(Call,errmsg(\"number of pairs (%d) exceeds the maximum allowed (%d)\",\n\t\t\t\t\t count, (int) (MaxAllocSize / sizeof(Pairs))))"];
"1000252" [label="(Call,i * 2)"];
"1000335" [label="(Identifier,i)"];
"1000381" [label="(Identifier,count)"];
"1000215" [label="(Identifier,MaxAllocSize)"];
"1000319" [label="(Call,in_datums[i * 2])"];
"1000198" [label="(Call,count > MaxAllocSize / sizeof(Pairs))"];
"1000231" [label="(Identifier,count)"];
"1000286" [label="(Call,i * 2)"];
"1000230" [label="(Identifier,i)"];
"1000349" [label="(Identifier,i)"];
"1000210" [label="(Literal,\"number of pairs (%d) exceeds the maximum allowed (%d)\")"];
"1000391" [label="(Identifier,count)"];
"1000214" [label="(Call,MaxAllocSize / sizeof(Pairs))"];
"1000331" [label="(Call,in_datums[i * 2 + 1])"];
"1000201" [label="(Identifier,MaxAllocSize)"];
"1000220" [label="(Call,palloc(count * sizeof(Pairs)))"];
"1000380" [label="(Call,count = hstoreUniquePairs(pairs, count, &buflen))"];
"1000229" [label="(Call,i < count)"];
"1000365" [label="(Literal,1)"];
"1000216" [label="(Call,sizeof(Pairs))"];
"1000394" [label="(Identifier,out)"];
"1000364" [label="(Literal,2)"];
"1000202" [label="(Call,sizeof(Pairs))"];
"1000239" [label="(Identifier,i)"];
"1000388" [label="(Identifier,out)"];
"1000264" [label="(Call,in_datums[i * 2])"];
"1000212" [label="(Call,(int) (MaxAllocSize / sizeof(Pairs)))"];
"1000266" [label="(Call,i * 2)"];
"1000223" [label="(Call,sizeof(Pairs))"];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000200" -> "1000395"  [label="DDG: "];
"1000200" -> "1000198"  [label="DDG: "];
"1000200" -> "1000214"  [label="DDG: "];
"1000198" -> "1000197"  [label="AST: "];
"1000199" -> "1000198"  [label="AST: "];
"1000205" -> "1000198"  [label="CFG: "];
"1000219" -> "1000198"  [label="CFG: "];
"1000198" -> "1000395"  [label="DDG: "];
"1000198" -> "1000395"  [label="DDG: "];
"1000192" -> "1000198"  [label="DDG: "];
"1000198" -> "1000209"  [label="DDG: "];
"1000198" -> "1000221"  [label="DDG: "];
"1000209" -> "1000206"  [label="AST: "];
"1000209" -> "1000212"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000212" -> "1000209"  [label="AST: "];
"1000204" -> "1000209"  [label="CFG: "];
"1000209" -> "1000395"  [label="DDG: "];
"1000209" -> "1000395"  [label="DDG: "];
"1000212" -> "1000209"  [label="DDG: "];
"1000209" -> "1000221"  [label="DDG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="DDG: "];
"1000221" -> "1000229"  [label="DDG: "];
"1000220" -> "1000218"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000220" -> "1000395"  [label="DDG: "];
"1000220" -> "1000218"  [label="DDG: "];
"1000218" -> "1000103"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000218" -> "1000395"  [label="DDG: "];
"1000218" -> "1000382"  [label="DDG: "];
"1000382" -> "1000380"  [label="AST: "];
"1000382" -> "1000385"  [label="CFG: "];
"1000383" -> "1000382"  [label="AST: "];
"1000384" -> "1000382"  [label="AST: "];
"1000385" -> "1000382"  [label="AST: "];
"1000380" -> "1000382"  [label="CFG: "];
"1000382" -> "1000395"  [label="DDG: "];
"1000382" -> "1000380"  [label="DDG: "];
"1000382" -> "1000380"  [label="DDG: "];
"1000382" -> "1000380"  [label="DDG: "];
"1000229" -> "1000382"  [label="DDG: "];
"1000382" -> "1000389"  [label="DDG: "];
"1000380" -> "1000103"  [label="AST: "];
"1000381" -> "1000380"  [label="AST: "];
"1000388" -> "1000380"  [label="CFG: "];
"1000380" -> "1000395"  [label="DDG: "];
"1000380" -> "1000389"  [label="DDG: "];
"1000389" -> "1000387"  [label="AST: "];
"1000389" -> "1000392"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000391" -> "1000389"  [label="AST: "];
"1000392" -> "1000389"  [label="AST: "];
"1000387" -> "1000389"  [label="CFG: "];
"1000389" -> "1000395"  [label="DDG: "];
"1000389" -> "1000395"  [label="DDG: "];
"1000389" -> "1000395"  [label="DDG: "];
"1000389" -> "1000387"  [label="DDG: "];
"1000389" -> "1000387"  [label="DDG: "];
"1000389" -> "1000387"  [label="DDG: "];
"1000387" -> "1000103"  [label="AST: "];
"1000388" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="CFG: "];
"1000387" -> "1000395"  [label="DDG: "];
"1000387" -> "1000393"  [label="DDG: "];
"1000393" -> "1000103"  [label="AST: "];
"1000393" -> "1000394"  [label="CFG: "];
"1000394" -> "1000393"  [label="AST: "];
"1000395" -> "1000393"  [label="CFG: "];
"1000393" -> "1000395"  [label="DDG: "];
"1000393" -> "1000395"  [label="DDG: "];
"1000229" -> "1000225"  [label="AST: "];
"1000229" -> "1000231"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000231" -> "1000229"  [label="AST: "];
"1000237" -> "1000229"  [label="CFG: "];
"1000381" -> "1000229"  [label="CFG: "];
"1000229" -> "1000395"  [label="DDG: "];
"1000229" -> "1000395"  [label="DDG: "];
"1000226" -> "1000229"  [label="DDG: "];
"1000232" -> "1000229"  [label="DDG: "];
"1000229" -> "1000238"  [label="DDG: "];
"1000238" -> "1000236"  [label="AST: "];
"1000238" -> "1000240"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="AST: "];
"1000236" -> "1000238"  [label="CFG: "];
"1000238" -> "1000252"  [label="DDG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000255" -> "1000252"  [label="CFG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000251"  [label="DDG: "];
"1000252" -> "1000266"  [label="DDG: "];
"1000252" -> "1000321"  [label="DDG: "];
"1000251" -> "1000249"  [label="AST: "];
"1000251" -> "1000255"  [label="CFG: "];
"1000255" -> "1000251"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000266" -> "1000264"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000264" -> "1000266"  [label="CFG: "];
"1000266" -> "1000286"  [label="DDG: "];
"1000286" -> "1000284"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000284" -> "1000286"  [label="CFG: "];
"1000286" -> "1000232"  [label="DDG: "];
"1000232" -> "1000225"  [label="AST: "];
"1000232" -> "1000233"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000362" -> "1000232"  [label="DDG: "];
"1000321" -> "1000319"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000319" -> "1000321"  [label="CFG: "];
"1000321" -> "1000334"  [label="DDG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000334" -> "1000336"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000336" -> "1000334"  [label="AST: "];
"1000337" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="DDG: "];
"1000334" -> "1000333"  [label="DDG: "];
"1000334" -> "1000348"  [label="DDG: "];
"1000333" -> "1000331"  [label="AST: "];
"1000333" -> "1000337"  [label="CFG: "];
"1000337" -> "1000333"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000348" -> "1000346"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000348" -> "1000362"  [label="DDG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000362" -> "1000364"  [label="CFG: "];
"1000363" -> "1000362"  [label="AST: "];
"1000364" -> "1000362"  [label="AST: "];
"1000365" -> "1000362"  [label="CFG: "];
"1000362" -> "1000361"  [label="DDG: "];
"1000362" -> "1000361"  [label="DDG: "];
"1000361" -> "1000359"  [label="AST: "];
"1000361" -> "1000365"  [label="CFG: "];
"1000365" -> "1000361"  [label="AST: "];
"1000359" -> "1000361"  [label="CFG: "];
"1000361" -> "1000395"  [label="DDG: "];
"1000214" -> "1000212"  [label="AST: "];
"1000214" -> "1000216"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000216" -> "1000214"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000214" -> "1000395"  [label="DDG: "];
"1000214" -> "1000212"  [label="DDG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000212" -> "1000395"  [label="DDG: "];
}
