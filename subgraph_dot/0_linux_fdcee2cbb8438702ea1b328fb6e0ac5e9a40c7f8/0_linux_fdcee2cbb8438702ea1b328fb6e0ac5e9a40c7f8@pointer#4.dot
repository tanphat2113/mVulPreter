digraph "0_linux_fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8@pointer" {
"1000137" [label="(Call,sock_reset_flag(sk, SOCK_ZAPPED))"];
"1000133" [label="(Call,sctp_copy_sock(newsk, sk, asoc))"];
"1000130" [label="(Call,sock_init_data(NULL, newsk))"];
"1000127" [label="(Call,!newsk)"];
"1000115" [label="(Call,newsk = sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000117" [label="(Call,sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000118" [label="(Call,sock_net(sk))"];
"1000111" [label="(Call,inet6_sk(sk))"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000104" [label="(MethodParameterIn,bool kern)"];
"1000103" [label="(MethodParameterIn,struct sctp_association *asoc)"];
"1000160" [label="(Call,sctp_sk(sk))"];
"1000133" [label="(Call,sctp_copy_sock(newsk, sk, asoc))"];
"1000116" [label="(Identifier,newsk)"];
"1000161" [label="(Identifier,sk)"];
"1000177" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000137" [label="(Call,sock_reset_flag(sk, SOCK_ZAPPED))"];
"1000128" [label="(Identifier,newsk)"];
"1000141" [label="(Identifier,newsctp6sk)"];
"1000134" [label="(Identifier,newsk)"];
"1000118" [label="(Call,sock_net(sk))"];
"1000125" [label="(Identifier,kern)"];
"1000115" [label="(Call,newsk = sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000182" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000230" [label="(Call,newsk = NULL)"];
"1000119" [label="(Identifier,sk)"];
"1000159" [label="(Call,sctp_sk(sk)->v4mapped)"];
"1000142" [label="(Call,(struct sctp6_sock *)newsk)"];
"1000120" [label="(Identifier,PF_INET6)"];
"1000105" [label="(Block,)"];
"1000162" [label="(FieldIdentifier,v4mapped)"];
"1000129" [label="(ControlStructure,goto out;)"];
"1000234" [label="(Return,return newsk;)"];
"1000138" [label="(Identifier,sk)"];
"1000127" [label="(Call,!newsk)"];
"1000126" [label="(ControlStructure,if (!newsk))"];
"1000130" [label="(Call,sock_init_data(NULL, newsk))"];
"1000236" [label="(MethodReturn,static struct sock *)"];
"1000117" [label="(Call,sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000135" [label="(Identifier,sk)"];
"1000103" [label="(MethodParameterIn,struct sctp_association *asoc)"];
"1000121" [label="(Identifier,GFP_KERNEL)"];
"1000112" [label="(Identifier,sk)"];
"1000111" [label="(Call,inet6_sk(sk))"];
"1000139" [label="(Identifier,SOCK_ZAPPED)"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000109" [label="(Call,*np = inet6_sk(sk))"];
"1000132" [label="(Identifier,newsk)"];
"1000122" [label="(Call,sk->sk_prot)"];
"1000172" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000160" [label="(Call,sctp_sk(sk))"];
"1000131" [label="(Identifier,NULL)"];
"1000104" [label="(MethodParameterIn,bool kern)"];
"1000136" [label="(Identifier,asoc)"];
"1000137" -> "1000105"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="CFG: "];
"1000137" -> "1000236"  [label="DDG: SOCK_ZAPPED"];
"1000137" -> "1000236"  [label="DDG: sock_reset_flag(sk, SOCK_ZAPPED)"];
"1000133" -> "1000137"  [label="DDG: sk"];
"1000102" -> "1000137"  [label="DDG: sk"];
"1000137" -> "1000160"  [label="DDG: sk"];
"1000133" -> "1000105"  [label="AST: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000133" -> "1000236"  [label="DDG: sctp_copy_sock(newsk, sk, asoc)"];
"1000133" -> "1000236"  [label="DDG: asoc"];
"1000130" -> "1000133"  [label="DDG: newsk"];
"1000118" -> "1000133"  [label="DDG: sk"];
"1000102" -> "1000133"  [label="DDG: sk"];
"1000103" -> "1000133"  [label="DDG: asoc"];
"1000133" -> "1000142"  [label="DDG: newsk"];
"1000130" -> "1000105"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000236"  [label="DDG: sock_init_data(NULL, newsk)"];
"1000127" -> "1000130"  [label="DDG: newsk"];
"1000130" -> "1000172"  [label="DDG: NULL"];
"1000130" -> "1000177"  [label="DDG: NULL"];
"1000130" -> "1000182"  [label="DDG: NULL"];
"1000130" -> "1000230"  [label="DDG: NULL"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000127" -> "1000236"  [label="DDG: !newsk"];
"1000127" -> "1000236"  [label="DDG: newsk"];
"1000115" -> "1000127"  [label="DDG: newsk"];
"1000127" -> "1000234"  [label="DDG: newsk"];
"1000115" -> "1000105"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000128" -> "1000115"  [label="CFG: "];
"1000115" -> "1000236"  [label="DDG: sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern)"];
"1000117" -> "1000115"  [label="DDG: sk->sk_prot"];
"1000117" -> "1000115"  [label="DDG: kern"];
"1000117" -> "1000115"  [label="DDG: sock_net(sk)"];
"1000117" -> "1000115"  [label="DDG: PF_INET6"];
"1000117" -> "1000115"  [label="DDG: GFP_KERNEL"];
"1000117" -> "1000125"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="AST: "];
"1000117" -> "1000236"  [label="DDG: kern"];
"1000117" -> "1000236"  [label="DDG: GFP_KERNEL"];
"1000117" -> "1000236"  [label="DDG: sock_net(sk)"];
"1000117" -> "1000236"  [label="DDG: PF_INET6"];
"1000117" -> "1000236"  [label="DDG: sk->sk_prot"];
"1000118" -> "1000117"  [label="DDG: sk"];
"1000104" -> "1000117"  [label="DDG: kern"];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000118" -> "1000236"  [label="DDG: sk"];
"1000111" -> "1000118"  [label="DDG: sk"];
"1000102" -> "1000118"  [label="DDG: sk"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000109"  [label="DDG: sk"];
"1000102" -> "1000111"  [label="DDG: sk"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000236"  [label="DDG: sk"];
"1000102" -> "1000160"  [label="DDG: sk"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000236"  [label="DDG: kern"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000236"  [label="DDG: asoc"];
"1000160" -> "1000159"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="CFG: "];
"1000160" -> "1000236"  [label="DDG: sk"];
}
