digraph "0_linux_fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8@pointer" {
"1000228" [label="(Call,sk_common_release(newsk))"];
"1000225" [label="(Call,newsk->sk_prot->init(newsk))"];
"1000222" [label="(Call,sk_refcnt_debug_inc(newsk))"];
"1000207" [label="(Call,sctp_v6_to_sk_daddr(&asoc->peer.primary_addr, newsk))"];
"1000165" [label="(Call,inet6_sk(newsk))"];
"1000156" [label="(Call,sctp_sk(newsk))"];
"1000147" [label="(Call,inet_sk(newsk))"];
"1000142" [label="(Call,(struct sctp6_sock *)newsk)"];
"1000133" [label="(Call,sctp_copy_sock(newsk, sk, asoc))"];
"1000130" [label="(Call,sock_init_data(NULL, newsk))"];
"1000127" [label="(Call,!newsk)"];
"1000115" [label="(Call,newsk = sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000117" [label="(Call,sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000118" [label="(Call,sock_net(sk))"];
"1000111" [label="(Call,inet6_sk(sk))"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000104" [label="(MethodParameterIn,bool kern)"];
"1000103" [label="(MethodParameterIn,struct sctp_association *asoc)"];
"1000198" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000188" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000190" [label="(Call,rcu_dereference(np->opt))"];
"1000227" [label="(Block,)"];
"1000224" [label="(ControlStructure,if (newsk->sk_prot->init(newsk)))"];
"1000133" [label="(Call,sctp_copy_sock(newsk, sk, asoc))"];
"1000116" [label="(Identifier,newsk)"];
"1000190" [label="(Call,rcu_dereference(np->opt))"];
"1000177" [label="(Call,newnp->ipv6_ac_list = NULL)"];
"1000226" [label="(Identifier,newsk)"];
"1000156" [label="(Call,sctp_sk(newsk))"];
"1000137" [label="(Call,sock_reset_flag(sk, SOCK_ZAPPED))"];
"1000128" [label="(Identifier,newsk)"];
"1000200" [label="(Identifier,opt)"];
"1000134" [label="(Identifier,newsk)"];
"1000118" [label="(Call,sock_net(sk))"];
"1000195" [label="(Identifier,opt)"];
"1000155" [label="(Call,sctp_sk(newsk)->v4mapped)"];
"1000166" [label="(Identifier,newsk)"];
"1000115" [label="(Call,newsk = sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000125" [label="(Identifier,kern)"];
"1000182" [label="(Call,newnp->ipv6_fl_list = NULL)"];
"1000230" [label="(Call,newsk = NULL)"];
"1000119" [label="(Identifier,sk)"];
"1000198" [label="(Call,ipv6_dup_options(newsk, opt))"];
"1000142" [label="(Call,(struct sctp6_sock *)newsk)"];
"1000140" [label="(Call,newsctp6sk = (struct sctp6_sock *)newsk)"];
"1000105" [label="(Block,)"];
"1000120" [label="(Identifier,PF_INET6)"];
"1000191" [label="(Call,np->opt)"];
"1000129" [label="(ControlStructure,goto out;)"];
"1000217" [label="(Identifier,newsk)"];
"1000234" [label="(Return,return newsk;)"];
"1000214" [label="(Identifier,newsk)"];
"1000157" [label="(Identifier,newsk)"];
"1000138" [label="(Identifier,sk)"];
"1000127" [label="(Call,!newsk)"];
"1000126" [label="(ControlStructure,if (!newsk))"];
"1000144" [label="(Identifier,newsk)"];
"1000229" [label="(Identifier,newsk)"];
"1000130" [label="(Call,sock_init_data(NULL, newsk))"];
"1000236" [label="(MethodReturn,static struct sock *)"];
"1000201" [label="(Call,RCU_INIT_POINTER(newnp->opt, opt))"];
"1000117" [label="(Call,sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern))"];
"1000189" [label="(Identifier,opt)"];
"1000233" [label="(JumpTarget,out:)"];
"1000135" [label="(Identifier,sk)"];
"1000103" [label="(MethodParameterIn,struct sctp_association *asoc)"];
"1000146" [label="(Call,inet_sk(newsk)->pinet6)"];
"1000121" [label="(Identifier,GFP_KERNEL)"];
"1000112" [label="(Identifier,sk)"];
"1000111" [label="(Call,inet6_sk(sk))"];
"1000231" [label="(Identifier,newsk)"];
"1000158" [label="(FieldIdentifier,v4mapped)"];
"1000196" [label="(Call,opt = ipv6_dup_options(newsk, opt))"];
"1000148" [label="(Identifier,newsk)"];
"1000228" [label="(Call,sk_common_release(newsk))"];
"1000163" [label="(Call,newnp = inet6_sk(newsk))"];
"1000149" [label="(FieldIdentifier,pinet6)"];
"1000102" [label="(MethodParameterIn,struct sock *sk)"];
"1000109" [label="(Call,*np = inet6_sk(sk))"];
"1000223" [label="(Identifier,newsk)"];
"1000132" [label="(Identifier,newsk)"];
"1000122" [label="(Call,sk->sk_prot)"];
"1000225" [label="(Call,newsk->sk_prot->init(newsk))"];
"1000208" [label="(Call,&asoc->peer.primary_addr)"];
"1000172" [label="(Call,newnp->ipv6_mc_list = NULL)"];
"1000188" [label="(Call,opt = rcu_dereference(np->opt))"];
"1000147" [label="(Call,inet_sk(newsk))"];
"1000160" [label="(Call,sctp_sk(sk))"];
"1000222" [label="(Call,sk_refcnt_debug_inc(newsk))"];
"1000131" [label="(Identifier,NULL)"];
"1000104" [label="(MethodParameterIn,bool kern)"];
"1000199" [label="(Identifier,newsk)"];
"1000207" [label="(Call,sctp_v6_to_sk_daddr(&asoc->peer.primary_addr, newsk))"];
"1000165" [label="(Call,inet6_sk(newsk))"];
"1000136" [label="(Identifier,asoc)"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000229"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000231" -> "1000228"  [label="CFG: "];
"1000228" -> "1000236"  [label="DDG: sk_common_release(newsk)"];
"1000225" -> "1000228"  [label="DDG: newsk"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000226"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000229" -> "1000225"  [label="CFG: "];
"1000233" -> "1000225"  [label="CFG: "];
"1000225" -> "1000236"  [label="DDG: newsk->sk_prot->init(newsk)"];
"1000225" -> "1000236"  [label="DDG: newsk"];
"1000222" -> "1000225"  [label="DDG: newsk"];
"1000225" -> "1000234"  [label="DDG: newsk"];
"1000222" -> "1000105"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="CFG: "];
"1000222" -> "1000236"  [label="DDG: sk_refcnt_debug_inc(newsk)"];
"1000207" -> "1000222"  [label="DDG: newsk"];
"1000207" -> "1000105"  [label="AST: "];
"1000207" -> "1000214"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000214" -> "1000207"  [label="AST: "];
"1000217" -> "1000207"  [label="CFG: "];
"1000207" -> "1000236"  [label="DDG: &asoc->peer.primary_addr"];
"1000207" -> "1000236"  [label="DDG: sctp_v6_to_sk_daddr(&asoc->peer.primary_addr, newsk)"];
"1000165" -> "1000207"  [label="DDG: newsk"];
"1000198" -> "1000207"  [label="DDG: newsk"];
"1000165" -> "1000163"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000165" -> "1000163"  [label="DDG: newsk"];
"1000156" -> "1000165"  [label="DDG: newsk"];
"1000165" -> "1000198"  [label="DDG: newsk"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000158" -> "1000156"  [label="CFG: "];
"1000147" -> "1000156"  [label="DDG: newsk"];
"1000147" -> "1000146"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000149" -> "1000147"  [label="CFG: "];
"1000142" -> "1000147"  [label="DDG: newsk"];
"1000142" -> "1000140"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000140" -> "1000142"  [label="CFG: "];
"1000142" -> "1000140"  [label="DDG: newsk"];
"1000133" -> "1000142"  [label="DDG: newsk"];
"1000133" -> "1000105"  [label="AST: "];
"1000133" -> "1000136"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000136" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000133" -> "1000236"  [label="DDG: sctp_copy_sock(newsk, sk, asoc)"];
"1000133" -> "1000236"  [label="DDG: asoc"];
"1000130" -> "1000133"  [label="DDG: newsk"];
"1000118" -> "1000133"  [label="DDG: sk"];
"1000102" -> "1000133"  [label="DDG: sk"];
"1000103" -> "1000133"  [label="DDG: asoc"];
"1000133" -> "1000137"  [label="DDG: sk"];
"1000130" -> "1000105"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000134" -> "1000130"  [label="CFG: "];
"1000130" -> "1000236"  [label="DDG: sock_init_data(NULL, newsk)"];
"1000127" -> "1000130"  [label="DDG: newsk"];
"1000130" -> "1000172"  [label="DDG: NULL"];
"1000130" -> "1000177"  [label="DDG: NULL"];
"1000130" -> "1000182"  [label="DDG: NULL"];
"1000130" -> "1000230"  [label="DDG: NULL"];
"1000127" -> "1000126"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="CFG: "];
"1000131" -> "1000127"  [label="CFG: "];
"1000127" -> "1000236"  [label="DDG: !newsk"];
"1000127" -> "1000236"  [label="DDG: newsk"];
"1000115" -> "1000127"  [label="DDG: newsk"];
"1000127" -> "1000234"  [label="DDG: newsk"];
"1000115" -> "1000105"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000117" -> "1000115"  [label="AST: "];
"1000128" -> "1000115"  [label="CFG: "];
"1000115" -> "1000236"  [label="DDG: sk_alloc(sock_net(sk), PF_INET6, GFP_KERNEL, sk->sk_prot, kern)"];
"1000117" -> "1000115"  [label="DDG: sk->sk_prot"];
"1000117" -> "1000115"  [label="DDG: kern"];
"1000117" -> "1000115"  [label="DDG: sock_net(sk)"];
"1000117" -> "1000115"  [label="DDG: PF_INET6"];
"1000117" -> "1000115"  [label="DDG: GFP_KERNEL"];
"1000117" -> "1000125"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000120" -> "1000117"  [label="AST: "];
"1000121" -> "1000117"  [label="AST: "];
"1000122" -> "1000117"  [label="AST: "];
"1000125" -> "1000117"  [label="AST: "];
"1000117" -> "1000236"  [label="DDG: kern"];
"1000117" -> "1000236"  [label="DDG: GFP_KERNEL"];
"1000117" -> "1000236"  [label="DDG: sock_net(sk)"];
"1000117" -> "1000236"  [label="DDG: PF_INET6"];
"1000117" -> "1000236"  [label="DDG: sk->sk_prot"];
"1000118" -> "1000117"  [label="DDG: sk"];
"1000104" -> "1000117"  [label="DDG: kern"];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000118"  [label="AST: "];
"1000120" -> "1000118"  [label="CFG: "];
"1000118" -> "1000236"  [label="DDG: sk"];
"1000111" -> "1000118"  [label="DDG: sk"];
"1000102" -> "1000118"  [label="DDG: sk"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000111" -> "1000109"  [label="DDG: sk"];
"1000102" -> "1000111"  [label="DDG: sk"];
"1000102" -> "1000101"  [label="AST: "];
"1000102" -> "1000236"  [label="DDG: sk"];
"1000102" -> "1000137"  [label="DDG: sk"];
"1000102" -> "1000160"  [label="DDG: sk"];
"1000104" -> "1000101"  [label="AST: "];
"1000104" -> "1000236"  [label="DDG: kern"];
"1000103" -> "1000101"  [label="AST: "];
"1000103" -> "1000236"  [label="DDG: asoc"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000196"  [label="DDG: newsk"];
"1000198" -> "1000196"  [label="DDG: opt"];
"1000188" -> "1000198"  [label="DDG: opt"];
"1000188" -> "1000105"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000188" -> "1000236"  [label="DDG: rcu_dereference(np->opt)"];
"1000190" -> "1000188"  [label="DDG: np->opt"];
"1000188" -> "1000201"  [label="DDG: opt"];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000190" -> "1000236"  [label="DDG: np->opt"];
}
