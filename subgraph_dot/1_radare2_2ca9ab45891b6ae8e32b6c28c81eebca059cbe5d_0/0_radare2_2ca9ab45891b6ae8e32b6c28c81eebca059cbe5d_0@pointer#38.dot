digraph "0_radare2_2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d_0@pointer" {
"1000271" [label="(Call,value->encoding.block.data = calloc (sizeof(ut8), value->encoding.block.length))"];
"1000279" [label="(Call,calloc (sizeof(ut8), value->encoding.block.length))"];
"1000261" [label="(Call,value->encoding.block.length > 0)"];
"1000249" [label="(Call,value->encoding.block.length = READ (buf, ut16))"];
"1000257" [label="(Call,READ (buf, ut16))"];
"1000112" [label="(Call,*buf = obuf)"];
"1000103" [label="(MethodParameterIn,const ut8 *obuf)"];
"1000116" [label="(Call,*buf_end = obuf + obuf_len)"];
"1000258" [label="(Identifier,buf)"];
"1000596" [label="(Call,r_leb128 (buf, &value->encoding.sdata))"];
"1000753" [label="(Call,READ (buf, ut32))"];
"1000133" [label="(Call,!obuf)"];
"1000529" [label="(Call,READ (buf, ut8))"];
"1000409" [label="(Call,READ (buf, ut32))"];
"1000455" [label="(Call,buf_end - buf)"];
"1000275" [label="(Identifier,value)"];
"1000280" [label="(Call,sizeof(ut8))"];
"1000265" [label="(Identifier,value)"];
"1000279" [label="(Call,calloc (sizeof(ut8), value->encoding.block.length))"];
"1000114" [label="(Identifier,obuf)"];
"1000291" [label="(Identifier,j)"];
"1000589" [label="(Call,READ (buf, ut8))"];
"1000420" [label="(Call,READ (buf, ut64))"];
"1000200" [label="(Call,READ (buf, ut8))"];
"1000186" [label="(Block,)"];
"1000118" [label="(Call,obuf + obuf_len)"];
"1000257" [label="(Call,READ (buf, ut16))"];
"1000796" [label="(MethodReturn,static const ut8 *)"];
"1000731" [label="(Call,READ (buf, ut8))"];
"1000261" [label="(Call,value->encoding.block.length > 0)"];
"1000110" [label="(Block,)"];
"1000269" [label="(Literal,0)"];
"1000250" [label="(Call,value->encoding.block.length)"];
"1000272" [label="(Call,value->encoding.block.data)"];
"1000315" [label="(Call,READ (buf, ut8))"];
"1000211" [label="(Call,READ (buf, ut16))"];
"1000259" [label="(Identifier,ut16)"];
"1000117" [label="(Identifier,buf_end)"];
"1000318" [label="(ControlStructure,break;)"];
"1000249" [label="(Call,value->encoding.block.length = READ (buf, ut16))"];
"1000328" [label="(Call,READ (buf, ut32))"];
"1000233" [label="(Call,READ (buf, ut64))"];
"1000614" [label="(Call,READ (buf, ut32))"];
"1000775" [label="(Call,READ (buf, ut8))"];
"1000103" [label="(MethodParameterIn,const ut8 *obuf)"];
"1000764" [label="(Call,READ (buf, ut64))"];
"1000112" [label="(Call,*buf = obuf)"];
"1000260" [label="(ControlStructure,if (value->encoding.block.length > 0))"];
"1000282" [label="(Call,value->encoding.block.length)"];
"1000794" [label="(Return,return buf;)"];
"1000437" [label="(Call,(const char*)buf)"];
"1000742" [label="(Call,READ (buf, ut16))"];
"1000271" [label="(Call,value->encoding.block.data = calloc (sizeof(ut8), value->encoding.block.length))"];
"1000113" [label="(Identifier,buf)"];
"1000293" [label="(Call,j < value->encoding.block.length)"];
"1000445" [label="(Call,(const char*)buf)"];
"1000398" [label="(Call,READ (buf, ut16))"];
"1000720" [label="(Call,READ (buf, ut64))"];
"1000222" [label="(Call,READ (buf, ut32))"];
"1000270" [label="(Block,)"];
"1000684" [label="(Call,buf_end - buf)"];
"1000262" [label="(Call,value->encoding.block.length)"];
"1000271" -> "1000270"  [label="AST: "];
"1000271" -> "1000279"  [label="CFG: "];
"1000272" -> "1000271"  [label="AST: "];
"1000279" -> "1000271"  [label="AST: "];
"1000291" -> "1000271"  [label="CFG: "];
"1000271" -> "1000796"  [label="DDG: value->encoding.block.data"];
"1000271" -> "1000796"  [label="DDG: calloc (sizeof(ut8), value->encoding.block.length)"];
"1000279" -> "1000271"  [label="DDG: value->encoding.block.length"];
"1000279" -> "1000282"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000282" -> "1000279"  [label="AST: "];
"1000261" -> "1000279"  [label="DDG: value->encoding.block.length"];
"1000279" -> "1000293"  [label="DDG: value->encoding.block.length"];
"1000261" -> "1000260"  [label="AST: "];
"1000261" -> "1000269"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000269" -> "1000261"  [label="AST: "];
"1000275" -> "1000261"  [label="CFG: "];
"1000318" -> "1000261"  [label="CFG: "];
"1000261" -> "1000796"  [label="DDG: value->encoding.block.length"];
"1000261" -> "1000796"  [label="DDG: value->encoding.block.length > 0"];
"1000249" -> "1000261"  [label="DDG: value->encoding.block.length"];
"1000249" -> "1000186"  [label="AST: "];
"1000249" -> "1000257"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000257" -> "1000249"  [label="AST: "];
"1000265" -> "1000249"  [label="CFG: "];
"1000249" -> "1000796"  [label="DDG: READ (buf, ut16)"];
"1000257" -> "1000249"  [label="DDG: buf"];
"1000257" -> "1000249"  [label="DDG: ut16"];
"1000257" -> "1000259"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000259" -> "1000257"  [label="AST: "];
"1000257" -> "1000796"  [label="DDG: ut16"];
"1000257" -> "1000796"  [label="DDG: buf"];
"1000112" -> "1000257"  [label="DDG: buf"];
"1000257" -> "1000315"  [label="DDG: buf"];
"1000257" -> "1000794"  [label="DDG: buf"];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000112" -> "1000796"  [label="DDG: buf"];
"1000103" -> "1000112"  [label="DDG: obuf"];
"1000112" -> "1000200"  [label="DDG: buf"];
"1000112" -> "1000211"  [label="DDG: buf"];
"1000112" -> "1000222"  [label="DDG: buf"];
"1000112" -> "1000233"  [label="DDG: buf"];
"1000112" -> "1000328"  [label="DDG: buf"];
"1000112" -> "1000398"  [label="DDG: buf"];
"1000112" -> "1000409"  [label="DDG: buf"];
"1000112" -> "1000420"  [label="DDG: buf"];
"1000112" -> "1000437"  [label="DDG: buf"];
"1000112" -> "1000445"  [label="DDG: buf"];
"1000112" -> "1000455"  [label="DDG: buf"];
"1000112" -> "1000529"  [label="DDG: buf"];
"1000112" -> "1000589"  [label="DDG: buf"];
"1000112" -> "1000596"  [label="DDG: buf"];
"1000112" -> "1000614"  [label="DDG: buf"];
"1000112" -> "1000684"  [label="DDG: buf"];
"1000112" -> "1000720"  [label="DDG: buf"];
"1000112" -> "1000731"  [label="DDG: buf"];
"1000112" -> "1000742"  [label="DDG: buf"];
"1000112" -> "1000753"  [label="DDG: buf"];
"1000112" -> "1000764"  [label="DDG: buf"];
"1000112" -> "1000775"  [label="DDG: buf"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000796"  [label="DDG: obuf"];
"1000103" -> "1000116"  [label="DDG: obuf"];
"1000103" -> "1000118"  [label="DDG: obuf"];
"1000103" -> "1000133"  [label="DDG: obuf"];
}
