digraph "0_yara_83d799804648c2a0895d40a19835d9b757c6fa4e_2@pointer" {
"1000184" [label="(Call,STRING_IS_WIDE(ac_match->string))"];
"1000161" [label="(Call,STRING_IS_ASCII(ac_match->string))"];
"1000149" [label="(Call,STRING_IS_FAST_REGEXP(ac_match->string))"];
"1000141" [label="(Call,STRING_IS_DOT_ALL(ac_match->string))"];
"1000133" [label="(Call,STRING_IS_NO_CASE(ac_match->string))"];
"1000125" [label="(Call,STRING_IS_GREEDY_REGEXP(ac_match->string))"];
"1000183" [label="(Call,STRING_IS_WIDE(ac_match->string) && forward_matches == -1)"];
"1000242" [label="(Call,callback_args.string = ac_match->string)"];
"1000278" [label="(Call,STRING_IS_FULL_WORD(ac_match->string))"];
"1000274" [label="(Call,callback_args.full_word = STRING_IS_FULL_WORD(ac_match->string))"];
"1000142" [label="(Call,ac_match->string)"];
"1000183" [label="(Call,STRING_IS_WIDE(ac_match->string) && forward_matches == -1)"];
"1000213" [label="(Identifier,forward_matches)"];
"1000149" [label="(Call,STRING_IS_FAST_REGEXP(ac_match->string))"];
"1000130" [label="(Identifier,flags)"];
"1000274" [label="(Call,callback_args.full_word = STRING_IS_FULL_WORD(ac_match->string))"];
"1000246" [label="(Call,ac_match->string)"];
"1000161" [label="(Call,STRING_IS_ASCII(ac_match->string))"];
"1000158" [label="(Identifier,exec)"];
"1000251" [label="(Identifier,callback_args)"];
"1000243" [label="(Call,callback_args.string)"];
"1000160" [label="(ControlStructure,if (STRING_IS_ASCII(ac_match->string)))"];
"1000162" [label="(Call,ac_match->string)"];
"1000132" [label="(ControlStructure,if (STRING_IS_NO_CASE(ac_match->string)))"];
"1000125" [label="(Call,STRING_IS_GREEDY_REGEXP(ac_match->string))"];
"1000167" [label="(Identifier,forward_matches)"];
"1000148" [label="(ControlStructure,if (STRING_IS_FAST_REGEXP(ac_match->string)))"];
"1000143" [label="(Identifier,ac_match)"];
"1000134" [label="(Call,ac_match->string)"];
"1000189" [label="(Identifier,forward_matches)"];
"1000126" [label="(Call,ac_match->string)"];
"1000186" [label="(Identifier,ac_match)"];
"1000185" [label="(Call,ac_match->string)"];
"1000141" [label="(Call,STRING_IS_DOT_ALL(ac_match->string))"];
"1000150" [label="(Call,ac_match->string)"];
"1000242" [label="(Call,callback_args.string = ac_match->string)"];
"1000135" [label="(Identifier,ac_match)"];
"1000124" [label="(ControlStructure,if (STRING_IS_GREEDY_REGEXP(ac_match->string)))"];
"1000340" [label="(MethodReturn,int)"];
"1000133" [label="(Call,STRING_IS_NO_CASE(ac_match->string))"];
"1000184" [label="(Call,STRING_IS_WIDE(ac_match->string))"];
"1000188" [label="(Call,forward_matches == -1)"];
"1000107" [label="(Block,)"];
"1000275" [label="(Call,callback_args.full_word)"];
"1000138" [label="(Identifier,flags)"];
"1000285" [label="(Identifier,ac_match)"];
"1000278" [label="(Call,STRING_IS_FULL_WORD(ac_match->string))"];
"1000182" [label="(ControlStructure,if (STRING_IS_WIDE(ac_match->string) && forward_matches == -1))"];
"1000146" [label="(Identifier,flags)"];
"1000140" [label="(ControlStructure,if (STRING_IS_DOT_ALL(ac_match->string)))"];
"1000154" [label="(Identifier,exec)"];
"1000279" [label="(Call,ac_match->string)"];
"1000194" [label="(Identifier,flags)"];
"1000151" [label="(Identifier,ac_match)"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="CFG: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000340"  [label="DDG: ac_match->string"];
"1000184" -> "1000183"  [label="DDG: ac_match->string"];
"1000161" -> "1000184"  [label="DDG: ac_match->string"];
"1000184" -> "1000242"  [label="DDG: ac_match->string"];
"1000184" -> "1000278"  [label="DDG: ac_match->string"];
"1000161" -> "1000160"  [label="AST: "];
"1000161" -> "1000162"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000167" -> "1000161"  [label="CFG: "];
"1000186" -> "1000161"  [label="CFG: "];
"1000161" -> "1000340"  [label="DDG: STRING_IS_ASCII(ac_match->string)"];
"1000149" -> "1000161"  [label="DDG: ac_match->string"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000150"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000154" -> "1000149"  [label="CFG: "];
"1000158" -> "1000149"  [label="CFG: "];
"1000149" -> "1000340"  [label="DDG: STRING_IS_FAST_REGEXP(ac_match->string)"];
"1000141" -> "1000149"  [label="DDG: ac_match->string"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000146" -> "1000141"  [label="CFG: "];
"1000151" -> "1000141"  [label="CFG: "];
"1000141" -> "1000340"  [label="DDG: STRING_IS_DOT_ALL(ac_match->string)"];
"1000133" -> "1000141"  [label="DDG: ac_match->string"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000134"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000138" -> "1000133"  [label="CFG: "];
"1000143" -> "1000133"  [label="CFG: "];
"1000133" -> "1000340"  [label="DDG: STRING_IS_NO_CASE(ac_match->string)"];
"1000125" -> "1000133"  [label="DDG: ac_match->string"];
"1000125" -> "1000124"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000130" -> "1000125"  [label="CFG: "];
"1000135" -> "1000125"  [label="CFG: "];
"1000125" -> "1000340"  [label="DDG: STRING_IS_GREEDY_REGEXP(ac_match->string)"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000188"  [label="CFG: "];
"1000188" -> "1000183"  [label="AST: "];
"1000194" -> "1000183"  [label="CFG: "];
"1000213" -> "1000183"  [label="CFG: "];
"1000183" -> "1000340"  [label="DDG: forward_matches == -1"];
"1000183" -> "1000340"  [label="DDG: STRING_IS_WIDE(ac_match->string)"];
"1000183" -> "1000340"  [label="DDG: STRING_IS_WIDE(ac_match->string) && forward_matches == -1"];
"1000188" -> "1000183"  [label="DDG: forward_matches"];
"1000188" -> "1000183"  [label="DDG: -1"];
"1000242" -> "1000107"  [label="AST: "];
"1000242" -> "1000246"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000251" -> "1000242"  [label="CFG: "];
"1000242" -> "1000340"  [label="DDG: callback_args.string"];
"1000278" -> "1000274"  [label="AST: "];
"1000278" -> "1000279"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000274" -> "1000278"  [label="CFG: "];
"1000278" -> "1000340"  [label="DDG: ac_match->string"];
"1000278" -> "1000274"  [label="DDG: ac_match->string"];
"1000274" -> "1000107"  [label="AST: "];
"1000275" -> "1000274"  [label="AST: "];
"1000285" -> "1000274"  [label="CFG: "];
"1000274" -> "1000340"  [label="DDG: callback_args.full_word"];
"1000274" -> "1000340"  [label="DDG: STRING_IS_FULL_WORD(ac_match->string)"];
}
