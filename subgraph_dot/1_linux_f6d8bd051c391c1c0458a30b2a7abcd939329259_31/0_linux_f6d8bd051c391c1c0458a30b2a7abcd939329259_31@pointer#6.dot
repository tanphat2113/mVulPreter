digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_31@pointer" {
"1000333" [label="(Call,sock_net(sk))"];
"1000114" [label="(Call,sk_acceptq_is_full(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000332" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000341" [label="(Call,sock_net(sk))"];
"1000340" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000116" [label="(ControlStructure,goto exit_overflow;)"];
"1000343" [label="(Identifier,LINUX_MIB_LISTENDROPS)"];
"1000279" [label="(Call,tcp_v4_md5_do_lookup(sk, newinet->inet_daddr))"];
"1000332" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS))"];
"1000340" [label="(Call,NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS))"];
"1000114" [label="(Call,sk_acceptq_is_full(sk))"];
"1000251" [label="(Call,tcp_sk(sk))"];
"1000333" [label="(Call,sock_net(sk))"];
"1000120" [label="(Identifier,dst)"];
"1000115" [label="(Identifier,sk)"];
"1000124" [label="(Call,inet_csk_route_req(sk, req))"];
"1000113" [label="(ControlStructure,if (sk_acceptq_is_full(sk)))"];
"1000258" [label="(Call,tcp_sk(sk))"];
"1000346" [label="(MethodReturn,struct sock *)"];
"1000342" [label="(Identifier,sk)"];
"1000131" [label="(Call,tcp_create_openreq_child(sk, req, skb))"];
"1000318" [label="(Call,__inet_inherit_port(sk, newsk))"];
"1000345" [label="(Identifier,NULL)"];
"1000335" [label="(Identifier,LINUX_MIB_LISTENOVERFLOWS)"];
"1000334" [label="(Identifier,sk)"];
"1000336" [label="(JumpTarget,exit_nonewsk:)"];
"1000107" [label="(Block,)"];
"1000341" [label="(Call,sock_net(sk))"];
"1000271" [label="(Call,tcp_sk(sk))"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000333" -> "1000332"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000335" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="DDG: sk"];
"1000114" -> "1000333"  [label="DDG: sk"];
"1000103" -> "1000333"  [label="DDG: sk"];
"1000333" -> "1000341"  [label="DDG: sk"];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000115"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="CFG: "];
"1000120" -> "1000114"  [label="CFG: "];
"1000114" -> "1000346"  [label="DDG: sk_acceptq_is_full(sk)"];
"1000103" -> "1000114"  [label="DDG: sk"];
"1000114" -> "1000124"  [label="DDG: sk"];
"1000114" -> "1000131"  [label="DDG: sk"];
"1000114" -> "1000341"  [label="DDG: sk"];
"1000103" -> "1000102"  [label="AST: "];
"1000103" -> "1000346"  [label="DDG: sk"];
"1000103" -> "1000124"  [label="DDG: sk"];
"1000103" -> "1000131"  [label="DDG: sk"];
"1000103" -> "1000251"  [label="DDG: sk"];
"1000103" -> "1000258"  [label="DDG: sk"];
"1000103" -> "1000271"  [label="DDG: sk"];
"1000103" -> "1000279"  [label="DDG: sk"];
"1000103" -> "1000318"  [label="DDG: sk"];
"1000103" -> "1000341"  [label="DDG: sk"];
"1000332" -> "1000107"  [label="AST: "];
"1000332" -> "1000335"  [label="CFG: "];
"1000335" -> "1000332"  [label="AST: "];
"1000336" -> "1000332"  [label="CFG: "];
"1000332" -> "1000346"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENOVERFLOWS)"];
"1000332" -> "1000346"  [label="DDG: LINUX_MIB_LISTENOVERFLOWS"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000342"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000341"  [label="CFG: "];
"1000341" -> "1000346"  [label="DDG: sk"];
"1000341" -> "1000340"  [label="DDG: sk"];
"1000124" -> "1000341"  [label="DDG: sk"];
"1000318" -> "1000341"  [label="DDG: sk"];
"1000131" -> "1000341"  [label="DDG: sk"];
"1000340" -> "1000107"  [label="AST: "];
"1000340" -> "1000343"  [label="CFG: "];
"1000343" -> "1000340"  [label="AST: "];
"1000345" -> "1000340"  [label="CFG: "];
"1000340" -> "1000346"  [label="DDG: LINUX_MIB_LISTENDROPS"];
"1000340" -> "1000346"  [label="DDG: NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_LISTENDROPS)"];
"1000340" -> "1000346"  [label="DDG: sock_net(sk)"];
}
