digraph "0_savannah_73be9f9ab67842cfbec36ee99e8d2301434c84ca@pointer" {
"1000522" [label="(Call,T1_Add_Table( code_table, n, base, size ))"];
"1000504" [label="(Call,T1_Add_Table( code_table, n,\n                                temp + face->type1.private_dict.lenIV, size ))"];
"1000522" [label="(Call,T1_Add_Table( code_table, n, base, size ))"];
"1000233" [label="(Call,psaux->ps_table_funcs->init(\n                code_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000142" [label="(Call,code_table   = &loader->charstrings)"];
"1000216" [label="(Call,num_glyphs == 0)"];
"1000205" [label="(Call,num_glyphs < 0)"];
"1000198" [label="(Call,num_glyphs = (FT_Int)T1_ToInt( parser ))"];
"1000200" [label="(Call,(FT_Int)T1_ToInt( parser ))"];
"1000202" [label="(Call,T1_ToInt( parser ))"];
"1000135" [label="(Call,parser       = &loader->parser)"];
"1000163" [label="(Call,memory       = parser->root.memory)"];
"1000403" [label="(Call,T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000149" [label="(Call,name_table   = &loader->glyph_names)"];
"1000246" [label="(Call,psaux->ps_table_funcs->init(\n                name_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000530" [label="(Call,n++)"];
"1000266" [label="(Call,n = 0)"];
"1000312" [label="(Call,cur[2] == 'f')"];
"1000334" [label="(Call,cur[2] == 'd')"];
"1000283" [label="(Call,cur >= limit)"];
"1000329" [label="(Call,cur[1] == 'n')"];
"1000307" [label="(Call,cur[1] == 'e')"];
"1000294" [label="(Call,IS_PS_DELIM( cur[3] ))"];
"1000323" [label="(Call,cur[0] == 'e')"];
"1000424" [label="(Call,*cur == '.')"];
"1000301" [label="(Call,cur[0] == 'd')"];
"1000275" [label="(Call,cur = parser->root.cursor)"];
"1000379" [label="(Call,parser->root.cursor - cur)"];
"1000343" [label="(Call,parser->root.cursor >= limit)"];
"1000289" [label="(Call,cur + 3 < limit)"];
"1000375" [label="(Call,cur++)"];
"1000181" [label="(Call,*       limit        = parser->root.limit)"];
"1000364" [label="(Call,cur + 2 >= limit)"];
"1000377" [label="(Call,len = parser->root.cursor - cur)"];
"1000457" [label="(Call,n < num_glyphs + TABLE_EXTEND)"];
"1000485" [label="(Call,FT_MEM_COPY( temp, base, size ))"];
"1000481" [label="(Call,FT_ALLOC( temp, size ))"];
"1000517" [label="(Call,FT_FREE( temp ))"];
"1000489" [label="(Call,psaux->t1_decrypt( temp, size, 4330 ))"];
"1000465" [label="(Call,size <= face->type1.private_dict.lenIV)"];
"1000448" [label="(Call,face->type1.private_dict.lenIV >= 0)"];
"1000493" [label="(Call,size -= face->type1.private_dict.lenIV)"];
"1000447" [label="(Call,face->type1.private_dict.lenIV >= 0 &&\n             n < num_glyphs + TABLE_EXTEND)"];
"1000502" [label="(Call,error = T1_Add_Table( code_table, n,\n                                temp + face->type1.private_dict.lenIV, size ))"];
"1000520" [label="(Call,error = T1_Add_Table( code_table, n, base, size ))"];
"1000401" [label="(Call,error = T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000440" [label="(Call,notdef_index = n)"];
"1000507" [label="(Call,temp + face->type1.private_dict.lenIV)"];
"1000293" [label="(Identifier,limit)"];
"1000489" [label="(Call,psaux->t1_decrypt( temp, size, 4330 ))"];
"1000532" [label="(MethodReturn,RET)"];
"1000484" [label="(ControlStructure,goto Fail;)"];
"1000221" [label="(Identifier,parser)"];
"1000248" [label="(Call,num_glyphs + 1 + TABLE_EXTEND)"];
"1000203" [label="(Identifier,parser)"];
"1000481" [label="(Call,FT_ALLOC( temp, size ))"];
"1000343" [label="(Call,parser->root.cursor >= limit)"];
"1000218" [label="(Literal,0)"];
"1000246" [label="(Call,psaux->ps_table_funcs->init(\n                name_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000377" [label="(Call,len = parser->root.cursor - cur)"];
"1000441" [label="(Identifier,notdef_index)"];
"1000217" [label="(Identifier,num_glyphs)"];
"1000380" [label="(Call,parser->root.cursor)"];
"1000290" [label="(Call,cur + 3)"];
"1000424" [label="(Call,*cur == '.')"];
"1000522" [label="(Call,T1_Add_Table( code_table, n, base, size ))"];
"1000192" [label="(Identifier,notdef_index)"];
"1000379" [label="(Call,parser->root.cursor - cur)"];
"1000524" [label="(Identifier,n)"];
"1000135" [label="(Call,parser       = &loader->parser)"];
"1000331" [label="(Identifier,cur)"];
"1000313" [label="(Call,cur[2])"];
"1000277" [label="(Call,parser->root.cursor)"];
"1000311" [label="(Literal,'e')"];
"1000495" [label="(Call,face->type1.private_dict.lenIV)"];
"1000491" [label="(Identifier,size)"];
"1000407" [label="(Call,len + 1)"];
"1000323" [label="(Call,cur[0] == 'e')"];
"1000442" [label="(Identifier,n)"];
"1000165" [label="(Call,parser->root.memory)"];
"1000296" [label="(Identifier,cur)"];
"1000164" [label="(Identifier,memory)"];
"1000307" [label="(Call,cur[1] == 'e')"];
"1000234" [label="(Identifier,code_table)"];
"1000456" [label="(Literal,0)"];
"1000308" [label="(Call,cur[1])"];
"1000284" [label="(Identifier,cur)"];
"1000268" [label="(Literal,0)"];
"1000525" [label="(Identifier,base)"];
"1000482" [label="(Identifier,temp)"];
"1000322" [label="(Call,cur[0] == 'e' &&\n             cur[1] == 'n' &&\n             cur[2] == 'd')"];
"1000294" [label="(Call,IS_PS_DELIM( cur[3] ))"];
"1000464" [label="(ControlStructure,if ( size <= face->type1.private_dict.lenIV ))"];
"1000291" [label="(Identifier,cur)"];
"1000259" [label="(Call,psaux->ps_table_funcs->init( swap_table, 4, memory ))"];
"1000446" [label="(ControlStructure,if ( face->type1.private_dict.lenIV >= 0 &&\n             n < num_glyphs + TABLE_EXTEND       ))"];
"1000401" [label="(Call,error = T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000244" [label="(Call,error = psaux->ps_table_funcs->init(\n                name_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000330" [label="(Call,cur[1])"];
"1000240" [label="(Identifier,memory)"];
"1000504" [label="(Call,T1_Add_Table( code_table, n,\n                                temp + face->type1.private_dict.lenIV, size ))"];
"1000406" [label="(Identifier,cur)"];
"1000403" [label="(Call,T1_Add_Table( name_table, n, cur, len + 1 ))"];
"1000518" [label="(Identifier,temp)"];
"1000349" [label="(Identifier,limit)"];
"1000282" [label="(ControlStructure,if ( cur >= limit ))"];
"1000207" [label="(Literal,0)"];
"1000182" [label="(Identifier,limit)"];
"1000405" [label="(Identifier,n)"];
"1000183" [label="(Call,parser->root.limit)"];
"1000519" [label="(ControlStructure,else)"];
"1000531" [label="(Identifier,n)"];
"1000200" [label="(Call,(FT_Int)T1_ToInt( parser ))"];
"1000336" [label="(Identifier,cur)"];
"1000205" [label="(Call,num_glyphs < 0)"];
"1000492" [label="(Literal,4330)"];
"1000143" [label="(Identifier,code_table)"];
"1000136" [label="(Identifier,parser)"];
"1000459" [label="(Call,num_glyphs + TABLE_EXTEND)"];
"1000295" [label="(Call,cur[3])"];
"1000425" [label="(Call,*cur)"];
"1000352" [label="(Identifier,error)"];
"1000157" [label="(Identifier,swap_table)"];
"1000488" [label="(Identifier,size)"];
"1000521" [label="(Identifier,error)"];
"1000302" [label="(Call,cur[0])"];
"1000402" [label="(Identifier,error)"];
"1000365" [label="(Call,cur + 2)"];
"1000411" [label="(Identifier,error)"];
"1000327" [label="(Literal,'e')"];
"1000300" [label="(Call,cur[0] == 'd' &&\n             cur[1] == 'e' &&\n             cur[2] == 'f')"];
"1000359" [label="(Identifier,parser)"];
"1000389" [label="(Identifier,parser)"];
"1000149" [label="(Call,name_table   = &loader->glyph_names)"];
"1000206" [label="(Identifier,num_glyphs)"];
"1000210" [label="(Identifier,error)"];
"1000142" [label="(Call,code_table   = &loader->charstrings)"];
"1000507" [label="(Call,temp + face->type1.private_dict.lenIV)"];
"1000335" [label="(Call,cur[2])"];
"1000137" [label="(Call,&loader->parser)"];
"1000309" [label="(Identifier,cur)"];
"1000181" [label="(Call,*       limit        = parser->root.limit)"];
"1000329" [label="(Call,cur[1] == 'n')"];
"1000266" [label="(Call,n = 0)"];
"1000305" [label="(Literal,'d')"];
"1000467" [label="(Call,face->type1.private_dict.lenIV)"];
"1000324" [label="(Call,cur[0])"];
"1000301" [label="(Call,cur[0] == 'd')"];
"1000490" [label="(Identifier,temp)"];
"1000150" [label="(Identifier,name_table)"];
"1000151" [label="(Call,&loader->glyph_names)"];
"1000444" [label="(Identifier,notdef_found)"];
"1000276" [label="(Identifier,cur)"];
"1000506" [label="(Identifier,n)"];
"1000270" [label="(Block,)"];
"1000449" [label="(Call,face->type1.private_dict.lenIV)"];
"1000342" [label="(ControlStructure,if ( parser->root.cursor >= limit ))"];
"1000375" [label="(Call,cur++)"];
"1000288" [label="(Call,cur + 3 < limit && IS_PS_DELIM( cur[3] ))"];
"1000494" [label="(Identifier,size)"];
"1000404" [label="(Identifier,name_table)"];
"1000462" [label="(Block,)"];
"1000199" [label="(Identifier,num_glyphs)"];
"1000273" [label="(Call,T1_Skip_Spaces( parser ))"];
"1000503" [label="(Identifier,error)"];
"1000338" [label="(Literal,'d')"];
"1000204" [label="(ControlStructure,if ( num_glyphs < 0 ))"];
"1000275" [label="(Call,cur = parser->root.cursor)"];
"1000231" [label="(Call,error = psaux->ps_table_funcs->init(\n                code_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000502" [label="(Call,error = T1_Add_Table( code_table, n,\n                                temp + face->type1.private_dict.lenIV, size ))"];
"1000344" [label="(Call,parser->root.cursor)"];
"1000487" [label="(Identifier,base)"];
"1000316" [label="(Literal,'f')"];
"1000215" [label="(Call,num_glyphs == 0 || parser->root.error)"];
"1000523" [label="(Identifier,code_table)"];
"1000457" [label="(Call,n < num_glyphs + TABLE_EXTEND)"];
"1000476" [label="(Identifier,error)"];
"1000483" [label="(Identifier,size)"];
"1000312" [label="(Call,cur[2] == 'f')"];
"1000363" [label="(ControlStructure,if ( cur + 2 >= limit ))"];
"1000528" [label="(Identifier,error)"];
"1000439" [label="(Block,)"];
"1000516" [label="(Identifier,size)"];
"1000493" [label="(Call,size -= face->type1.private_dict.lenIV)"];
"1000368" [label="(Identifier,limit)"];
"1000505" [label="(Identifier,code_table)"];
"1000235" [label="(Call,num_glyphs + 1 + TABLE_EXTEND)"];
"1000480" [label="(ControlStructure,if ( FT_ALLOC( temp, size ) ))"];
"1000440" [label="(Call,notdef_index = n)"];
"1000306" [label="(Call,cur[1] == 'e' &&\n             cur[2] == 'f')"];
"1000509" [label="(Call,face->type1.private_dict.lenIV)"];
"1000508" [label="(Identifier,temp)"];
"1000144" [label="(Call,&loader->charstrings)"];
"1000458" [label="(Identifier,n)"];
"1000202" [label="(Call,T1_ToInt( parser ))"];
"1000233" [label="(Call,psaux->ps_table_funcs->init(\n                code_table, num_glyphs + 1 + TABLE_EXTEND, memory ))"];
"1000448" [label="(Call,face->type1.private_dict.lenIV >= 0)"];
"1000163" [label="(Call,memory       = parser->root.memory)"];
"1000173" [label="(Identifier,psaux)"];
"1000430" [label="(Literal,\".notdef\")"];
"1000289" [label="(Call,cur + 3 < limit)"];
"1000385" [label="(Identifier,cur)"];
"1000285" [label="(Identifier,limit)"];
"1000371" [label="(Identifier,error)"];
"1000216" [label="(Call,num_glyphs == 0)"];
"1000267" [label="(Identifier,n)"];
"1000466" [label="(Identifier,size)"];
"1000253" [label="(Identifier,memory)"];
"1000465" [label="(Call,size <= face->type1.private_dict.lenIV)"];
"1000485" [label="(Call,FT_MEM_COPY( temp, base, size ))"];
"1000486" [label="(Identifier,temp)"];
"1000530" [label="(Call,n++)"];
"1000334" [label="(Call,cur[2] == 'd')"];
"1000283" [label="(Call,cur >= limit)"];
"1000447" [label="(Call,face->type1.private_dict.lenIV >= 0 &&\n             n < num_glyphs + TABLE_EXTEND)"];
"1000376" [label="(Identifier,cur)"];
"1000333" [label="(Literal,'n')"];
"1000314" [label="(Identifier,cur)"];
"1000517" [label="(Call,FT_FREE( temp ))"];
"1000526" [label="(Identifier,size)"];
"1000274" [label="(Identifier,parser)"];
"1000427" [label="(Literal,'.')"];
"1000133" [label="(Block,)"];
"1000378" [label="(Identifier,len)"];
"1000423" [label="(Call,*cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000247" [label="(Identifier,name_table)"];
"1000520" [label="(Call,error = T1_Add_Table( code_table, n, base, size ))"];
"1000286" [label="(ControlStructure,break;)"];
"1000328" [label="(Call,cur[1] == 'n' &&\n             cur[2] == 'd')"];
"1000198" [label="(Call,num_glyphs = (FT_Int)T1_ToInt( parser ))"];
"1000364" [label="(Call,cur + 2 >= limit)"];
"1000522" -> "1000520"  [label="AST: "];
"1000522" -> "1000526"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000525" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="AST: "];
"1000520" -> "1000522"  [label="CFG: "];
"1000522" -> "1000532"  [label="DDG: base"];
"1000522" -> "1000532"  [label="DDG: size"];
"1000522" -> "1000532"  [label="DDG: code_table"];
"1000522" -> "1000465"  [label="DDG: size"];
"1000522" -> "1000485"  [label="DDG: base"];
"1000522" -> "1000504"  [label="DDG: code_table"];
"1000522" -> "1000520"  [label="DDG: code_table"];
"1000522" -> "1000520"  [label="DDG: n"];
"1000522" -> "1000520"  [label="DDG: base"];
"1000522" -> "1000520"  [label="DDG: size"];
"1000504" -> "1000522"  [label="DDG: code_table"];
"1000504" -> "1000522"  [label="DDG: size"];
"1000233" -> "1000522"  [label="DDG: code_table"];
"1000142" -> "1000522"  [label="DDG: code_table"];
"1000403" -> "1000522"  [label="DDG: n"];
"1000457" -> "1000522"  [label="DDG: n"];
"1000485" -> "1000522"  [label="DDG: base"];
"1000522" -> "1000530"  [label="DDG: n"];
"1000504" -> "1000502"  [label="AST: "];
"1000504" -> "1000516"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000506" -> "1000504"  [label="AST: "];
"1000507" -> "1000504"  [label="AST: "];
"1000516" -> "1000504"  [label="AST: "];
"1000502" -> "1000504"  [label="CFG: "];
"1000504" -> "1000532"  [label="DDG: temp + face->type1.private_dict.lenIV"];
"1000504" -> "1000532"  [label="DDG: size"];
"1000504" -> "1000532"  [label="DDG: code_table"];
"1000504" -> "1000465"  [label="DDG: size"];
"1000504" -> "1000502"  [label="DDG: code_table"];
"1000504" -> "1000502"  [label="DDG: n"];
"1000504" -> "1000502"  [label="DDG: temp + face->type1.private_dict.lenIV"];
"1000504" -> "1000502"  [label="DDG: size"];
"1000233" -> "1000504"  [label="DDG: code_table"];
"1000142" -> "1000504"  [label="DDG: code_table"];
"1000403" -> "1000504"  [label="DDG: n"];
"1000457" -> "1000504"  [label="DDG: n"];
"1000489" -> "1000504"  [label="DDG: temp"];
"1000465" -> "1000504"  [label="DDG: face->type1.private_dict.lenIV"];
"1000493" -> "1000504"  [label="DDG: size"];
"1000504" -> "1000530"  [label="DDG: n"];
"1000233" -> "1000231"  [label="AST: "];
"1000233" -> "1000240"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000235" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="AST: "];
"1000231" -> "1000233"  [label="CFG: "];
"1000233" -> "1000532"  [label="DDG: code_table"];
"1000233" -> "1000231"  [label="DDG: code_table"];
"1000233" -> "1000231"  [label="DDG: num_glyphs + 1 + TABLE_EXTEND"];
"1000233" -> "1000231"  [label="DDG: memory"];
"1000142" -> "1000233"  [label="DDG: code_table"];
"1000216" -> "1000233"  [label="DDG: num_glyphs"];
"1000163" -> "1000233"  [label="DDG: memory"];
"1000233" -> "1000246"  [label="DDG: memory"];
"1000142" -> "1000133"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000150" -> "1000142"  [label="CFG: "];
"1000142" -> "1000532"  [label="DDG: &loader->charstrings"];
"1000142" -> "1000532"  [label="DDG: code_table"];
"1000216" -> "1000215"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000221" -> "1000216"  [label="CFG: "];
"1000215" -> "1000216"  [label="CFG: "];
"1000216" -> "1000532"  [label="DDG: num_glyphs"];
"1000216" -> "1000215"  [label="DDG: num_glyphs"];
"1000216" -> "1000215"  [label="DDG: 0"];
"1000205" -> "1000216"  [label="DDG: num_glyphs"];
"1000216" -> "1000235"  [label="DDG: num_glyphs"];
"1000216" -> "1000246"  [label="DDG: num_glyphs"];
"1000216" -> "1000248"  [label="DDG: num_glyphs"];
"1000216" -> "1000457"  [label="DDG: num_glyphs"];
"1000216" -> "1000459"  [label="DDG: num_glyphs"];
"1000205" -> "1000204"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000210" -> "1000205"  [label="CFG: "];
"1000217" -> "1000205"  [label="CFG: "];
"1000205" -> "1000532"  [label="DDG: num_glyphs < 0"];
"1000198" -> "1000205"  [label="DDG: num_glyphs"];
"1000198" -> "1000133"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000206" -> "1000198"  [label="CFG: "];
"1000198" -> "1000532"  [label="DDG: (FT_Int)T1_ToInt( parser )"];
"1000200" -> "1000198"  [label="DDG: T1_ToInt( parser )"];
"1000200" -> "1000202"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000200" -> "1000532"  [label="DDG: T1_ToInt( parser )"];
"1000202" -> "1000200"  [label="DDG: parser"];
"1000202" -> "1000203"  [label="CFG: "];
"1000203" -> "1000202"  [label="AST: "];
"1000202" -> "1000532"  [label="DDG: parser"];
"1000135" -> "1000202"  [label="DDG: parser"];
"1000202" -> "1000273"  [label="DDG: parser"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000143" -> "1000135"  [label="CFG: "];
"1000135" -> "1000532"  [label="DDG: &loader->parser"];
"1000163" -> "1000133"  [label="AST: "];
"1000163" -> "1000165"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000165" -> "1000163"  [label="AST: "];
"1000173" -> "1000163"  [label="CFG: "];
"1000163" -> "1000532"  [label="DDG: memory"];
"1000163" -> "1000532"  [label="DDG: parser->root.memory"];
"1000403" -> "1000401"  [label="AST: "];
"1000403" -> "1000407"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000405" -> "1000403"  [label="AST: "];
"1000406" -> "1000403"  [label="AST: "];
"1000407" -> "1000403"  [label="AST: "];
"1000401" -> "1000403"  [label="CFG: "];
"1000403" -> "1000532"  [label="DDG: name_table"];
"1000403" -> "1000532"  [label="DDG: len + 1"];
"1000403" -> "1000401"  [label="DDG: name_table"];
"1000403" -> "1000401"  [label="DDG: n"];
"1000403" -> "1000401"  [label="DDG: cur"];
"1000403" -> "1000401"  [label="DDG: len + 1"];
"1000149" -> "1000403"  [label="DDG: name_table"];
"1000246" -> "1000403"  [label="DDG: name_table"];
"1000530" -> "1000403"  [label="DDG: n"];
"1000266" -> "1000403"  [label="DDG: n"];
"1000312" -> "1000403"  [label="DDG: cur[2]"];
"1000329" -> "1000403"  [label="DDG: cur[1]"];
"1000307" -> "1000403"  [label="DDG: cur[1]"];
"1000334" -> "1000403"  [label="DDG: cur[2]"];
"1000379" -> "1000403"  [label="DDG: cur"];
"1000294" -> "1000403"  [label="DDG: cur[3]"];
"1000323" -> "1000403"  [label="DDG: cur[0]"];
"1000377" -> "1000403"  [label="DDG: len"];
"1000403" -> "1000440"  [label="DDG: n"];
"1000403" -> "1000457"  [label="DDG: n"];
"1000149" -> "1000133"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000157" -> "1000149"  [label="CFG: "];
"1000149" -> "1000532"  [label="DDG: &loader->glyph_names"];
"1000149" -> "1000532"  [label="DDG: name_table"];
"1000149" -> "1000246"  [label="DDG: name_table"];
"1000246" -> "1000244"  [label="AST: "];
"1000246" -> "1000253"  [label="CFG: "];
"1000247" -> "1000246"  [label="AST: "];
"1000248" -> "1000246"  [label="AST: "];
"1000253" -> "1000246"  [label="AST: "];
"1000244" -> "1000246"  [label="CFG: "];
"1000246" -> "1000532"  [label="DDG: num_glyphs + 1 + TABLE_EXTEND"];
"1000246" -> "1000532"  [label="DDG: name_table"];
"1000246" -> "1000244"  [label="DDG: name_table"];
"1000246" -> "1000244"  [label="DDG: num_glyphs + 1 + TABLE_EXTEND"];
"1000246" -> "1000244"  [label="DDG: memory"];
"1000246" -> "1000259"  [label="DDG: memory"];
"1000530" -> "1000270"  [label="AST: "];
"1000530" -> "1000531"  [label="CFG: "];
"1000531" -> "1000530"  [label="AST: "];
"1000274" -> "1000530"  [label="CFG: "];
"1000530" -> "1000532"  [label="DDG: n"];
"1000266" -> "1000133"  [label="AST: "];
"1000266" -> "1000268"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000268" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="CFG: "];
"1000266" -> "1000532"  [label="DDG: n"];
"1000312" -> "1000306"  [label="AST: "];
"1000312" -> "1000316"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000316" -> "1000312"  [label="AST: "];
"1000306" -> "1000312"  [label="CFG: "];
"1000312" -> "1000532"  [label="DDG: cur[2]"];
"1000312" -> "1000283"  [label="DDG: cur[2]"];
"1000312" -> "1000289"  [label="DDG: cur[2]"];
"1000312" -> "1000290"  [label="DDG: cur[2]"];
"1000312" -> "1000294"  [label="DDG: cur[2]"];
"1000312" -> "1000301"  [label="DDG: cur[2]"];
"1000312" -> "1000307"  [label="DDG: cur[2]"];
"1000312" -> "1000306"  [label="DDG: cur[2]"];
"1000312" -> "1000306"  [label="DDG: 'f'"];
"1000334" -> "1000312"  [label="DDG: cur[2]"];
"1000283" -> "1000312"  [label="DDG: cur"];
"1000329" -> "1000312"  [label="DDG: cur[1]"];
"1000307" -> "1000312"  [label="DDG: cur[1]"];
"1000294" -> "1000312"  [label="DDG: cur[3]"];
"1000323" -> "1000312"  [label="DDG: cur[0]"];
"1000312" -> "1000323"  [label="DDG: cur[2]"];
"1000312" -> "1000329"  [label="DDG: cur[2]"];
"1000312" -> "1000334"  [label="DDG: cur[2]"];
"1000312" -> "1000364"  [label="DDG: cur[2]"];
"1000312" -> "1000365"  [label="DDG: cur[2]"];
"1000312" -> "1000375"  [label="DDG: cur[2]"];
"1000312" -> "1000379"  [label="DDG: cur[2]"];
"1000334" -> "1000328"  [label="AST: "];
"1000334" -> "1000338"  [label="CFG: "];
"1000335" -> "1000334"  [label="AST: "];
"1000338" -> "1000334"  [label="AST: "];
"1000328" -> "1000334"  [label="CFG: "];
"1000334" -> "1000532"  [label="DDG: cur[2]"];
"1000334" -> "1000283"  [label="DDG: cur[2]"];
"1000334" -> "1000289"  [label="DDG: cur[2]"];
"1000334" -> "1000290"  [label="DDG: cur[2]"];
"1000334" -> "1000294"  [label="DDG: cur[2]"];
"1000334" -> "1000301"  [label="DDG: cur[2]"];
"1000334" -> "1000307"  [label="DDG: cur[2]"];
"1000334" -> "1000323"  [label="DDG: cur[2]"];
"1000334" -> "1000329"  [label="DDG: cur[2]"];
"1000334" -> "1000328"  [label="DDG: cur[2]"];
"1000334" -> "1000328"  [label="DDG: 'd'"];
"1000283" -> "1000334"  [label="DDG: cur"];
"1000329" -> "1000334"  [label="DDG: cur[1]"];
"1000307" -> "1000334"  [label="DDG: cur[1]"];
"1000294" -> "1000334"  [label="DDG: cur[3]"];
"1000323" -> "1000334"  [label="DDG: cur[0]"];
"1000334" -> "1000364"  [label="DDG: cur[2]"];
"1000334" -> "1000365"  [label="DDG: cur[2]"];
"1000334" -> "1000375"  [label="DDG: cur[2]"];
"1000334" -> "1000379"  [label="DDG: cur[2]"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000286" -> "1000283"  [label="CFG: "];
"1000291" -> "1000283"  [label="CFG: "];
"1000283" -> "1000532"  [label="DDG: limit"];
"1000283" -> "1000532"  [label="DDG: cur"];
"1000283" -> "1000532"  [label="DDG: cur >= limit"];
"1000329" -> "1000283"  [label="DDG: cur[1]"];
"1000275" -> "1000283"  [label="DDG: cur"];
"1000307" -> "1000283"  [label="DDG: cur[1]"];
"1000294" -> "1000283"  [label="DDG: cur[3]"];
"1000323" -> "1000283"  [label="DDG: cur[0]"];
"1000181" -> "1000283"  [label="DDG: limit"];
"1000364" -> "1000283"  [label="DDG: limit"];
"1000283" -> "1000289"  [label="DDG: cur"];
"1000283" -> "1000289"  [label="DDG: limit"];
"1000283" -> "1000290"  [label="DDG: cur"];
"1000283" -> "1000294"  [label="DDG: cur"];
"1000283" -> "1000301"  [label="DDG: cur"];
"1000283" -> "1000307"  [label="DDG: cur"];
"1000283" -> "1000323"  [label="DDG: cur"];
"1000283" -> "1000329"  [label="DDG: cur"];
"1000283" -> "1000364"  [label="DDG: cur"];
"1000283" -> "1000365"  [label="DDG: cur"];
"1000283" -> "1000375"  [label="DDG: cur"];
"1000329" -> "1000328"  [label="AST: "];
"1000329" -> "1000333"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000333" -> "1000329"  [label="AST: "];
"1000336" -> "1000329"  [label="CFG: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000532"  [label="DDG: cur[1]"];
"1000329" -> "1000289"  [label="DDG: cur[1]"];
"1000329" -> "1000290"  [label="DDG: cur[1]"];
"1000329" -> "1000294"  [label="DDG: cur[1]"];
"1000329" -> "1000301"  [label="DDG: cur[1]"];
"1000329" -> "1000307"  [label="DDG: cur[1]"];
"1000329" -> "1000323"  [label="DDG: cur[1]"];
"1000329" -> "1000328"  [label="DDG: cur[1]"];
"1000329" -> "1000328"  [label="DDG: 'n'"];
"1000307" -> "1000329"  [label="DDG: cur[1]"];
"1000294" -> "1000329"  [label="DDG: cur[3]"];
"1000323" -> "1000329"  [label="DDG: cur[0]"];
"1000329" -> "1000364"  [label="DDG: cur[1]"];
"1000329" -> "1000365"  [label="DDG: cur[1]"];
"1000329" -> "1000375"  [label="DDG: cur[1]"];
"1000329" -> "1000379"  [label="DDG: cur[1]"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000311"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000311" -> "1000307"  [label="AST: "];
"1000314" -> "1000307"  [label="CFG: "];
"1000306" -> "1000307"  [label="CFG: "];
"1000307" -> "1000532"  [label="DDG: cur[1]"];
"1000307" -> "1000289"  [label="DDG: cur[1]"];
"1000307" -> "1000290"  [label="DDG: cur[1]"];
"1000307" -> "1000294"  [label="DDG: cur[1]"];
"1000307" -> "1000301"  [label="DDG: cur[1]"];
"1000307" -> "1000306"  [label="DDG: cur[1]"];
"1000307" -> "1000306"  [label="DDG: 'e'"];
"1000294" -> "1000307"  [label="DDG: cur[3]"];
"1000323" -> "1000307"  [label="DDG: cur[0]"];
"1000307" -> "1000323"  [label="DDG: cur[1]"];
"1000307" -> "1000364"  [label="DDG: cur[1]"];
"1000307" -> "1000365"  [label="DDG: cur[1]"];
"1000307" -> "1000375"  [label="DDG: cur[1]"];
"1000307" -> "1000379"  [label="DDG: cur[1]"];
"1000294" -> "1000288"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000288" -> "1000294"  [label="CFG: "];
"1000294" -> "1000532"  [label="DDG: cur[3]"];
"1000294" -> "1000289"  [label="DDG: cur[3]"];
"1000294" -> "1000290"  [label="DDG: cur[3]"];
"1000294" -> "1000288"  [label="DDG: cur[3]"];
"1000323" -> "1000294"  [label="DDG: cur[0]"];
"1000294" -> "1000301"  [label="DDG: cur[3]"];
"1000294" -> "1000323"  [label="DDG: cur[3]"];
"1000294" -> "1000364"  [label="DDG: cur[3]"];
"1000294" -> "1000365"  [label="DDG: cur[3]"];
"1000294" -> "1000375"  [label="DDG: cur[3]"];
"1000294" -> "1000379"  [label="DDG: cur[3]"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000327"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="AST: "];
"1000331" -> "1000323"  [label="CFG: "];
"1000322" -> "1000323"  [label="CFG: "];
"1000323" -> "1000532"  [label="DDG: cur[0]"];
"1000323" -> "1000289"  [label="DDG: cur[0]"];
"1000323" -> "1000290"  [label="DDG: cur[0]"];
"1000323" -> "1000301"  [label="DDG: cur[0]"];
"1000323" -> "1000322"  [label="DDG: cur[0]"];
"1000323" -> "1000322"  [label="DDG: 'e'"];
"1000424" -> "1000323"  [label="DDG: *cur"];
"1000301" -> "1000323"  [label="DDG: cur[0]"];
"1000323" -> "1000364"  [label="DDG: cur[0]"];
"1000323" -> "1000365"  [label="DDG: cur[0]"];
"1000323" -> "1000375"  [label="DDG: cur[0]"];
"1000323" -> "1000379"  [label="DDG: cur[0]"];
"1000323" -> "1000424"  [label="DDG: cur[0]"];
"1000424" -> "1000423"  [label="AST: "];
"1000424" -> "1000427"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000427" -> "1000424"  [label="AST: "];
"1000430" -> "1000424"  [label="CFG: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000532"  [label="DDG: *cur"];
"1000424" -> "1000301"  [label="DDG: *cur"];
"1000424" -> "1000423"  [label="DDG: *cur"];
"1000424" -> "1000423"  [label="DDG: '.'"];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000305"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000305" -> "1000301"  [label="AST: "];
"1000309" -> "1000301"  [label="CFG: "];
"1000300" -> "1000301"  [label="CFG: "];
"1000301" -> "1000532"  [label="DDG: cur[0]"];
"1000301" -> "1000300"  [label="DDG: cur[0]"];
"1000301" -> "1000300"  [label="DDG: 'd'"];
"1000275" -> "1000270"  [label="AST: "];
"1000275" -> "1000277"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000277" -> "1000275"  [label="AST: "];
"1000284" -> "1000275"  [label="CFG: "];
"1000275" -> "1000532"  [label="DDG: parser->root.cursor"];
"1000379" -> "1000275"  [label="DDG: parser->root.cursor"];
"1000379" -> "1000377"  [label="AST: "];
"1000379" -> "1000385"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000385" -> "1000379"  [label="AST: "];
"1000377" -> "1000379"  [label="CFG: "];
"1000379" -> "1000532"  [label="DDG: parser->root.cursor"];
"1000379" -> "1000532"  [label="DDG: cur"];
"1000379" -> "1000343"  [label="DDG: parser->root.cursor"];
"1000379" -> "1000377"  [label="DDG: parser->root.cursor"];
"1000379" -> "1000377"  [label="DDG: cur"];
"1000343" -> "1000379"  [label="DDG: parser->root.cursor"];
"1000375" -> "1000379"  [label="DDG: cur"];
"1000343" -> "1000342"  [label="AST: "];
"1000343" -> "1000349"  [label="CFG: "];
"1000344" -> "1000343"  [label="AST: "];
"1000349" -> "1000343"  [label="AST: "];
"1000352" -> "1000343"  [label="CFG: "];
"1000359" -> "1000343"  [label="CFG: "];
"1000343" -> "1000532"  [label="DDG: limit"];
"1000343" -> "1000532"  [label="DDG: parser->root.cursor"];
"1000343" -> "1000532"  [label="DDG: parser->root.cursor >= limit"];
"1000289" -> "1000343"  [label="DDG: limit"];
"1000343" -> "1000364"  [label="DDG: limit"];
"1000289" -> "1000288"  [label="AST: "];
"1000289" -> "1000293"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000296" -> "1000289"  [label="CFG: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000532"  [label="DDG: cur + 3"];
"1000289" -> "1000532"  [label="DDG: limit"];
"1000289" -> "1000288"  [label="DDG: cur + 3"];
"1000289" -> "1000288"  [label="DDG: limit"];
"1000375" -> "1000270"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000378" -> "1000375"  [label="CFG: "];
"1000181" -> "1000133"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000183" -> "1000181"  [label="AST: "];
"1000192" -> "1000181"  [label="CFG: "];
"1000181" -> "1000532"  [label="DDG: limit"];
"1000181" -> "1000532"  [label="DDG: parser->root.limit"];
"1000364" -> "1000363"  [label="AST: "];
"1000364" -> "1000368"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000368" -> "1000364"  [label="AST: "];
"1000371" -> "1000364"  [label="CFG: "];
"1000376" -> "1000364"  [label="CFG: "];
"1000364" -> "1000532"  [label="DDG: cur + 2"];
"1000364" -> "1000532"  [label="DDG: cur + 2 >= limit"];
"1000364" -> "1000532"  [label="DDG: limit"];
"1000377" -> "1000270"  [label="AST: "];
"1000378" -> "1000377"  [label="AST: "];
"1000389" -> "1000377"  [label="CFG: "];
"1000377" -> "1000532"  [label="DDG: parser->root.cursor - cur"];
"1000377" -> "1000532"  [label="DDG: len"];
"1000377" -> "1000407"  [label="DDG: len"];
"1000457" -> "1000447"  [label="AST: "];
"1000457" -> "1000459"  [label="CFG: "];
"1000458" -> "1000457"  [label="AST: "];
"1000459" -> "1000457"  [label="AST: "];
"1000447" -> "1000457"  [label="CFG: "];
"1000457" -> "1000532"  [label="DDG: num_glyphs + TABLE_EXTEND"];
"1000457" -> "1000447"  [label="DDG: n"];
"1000457" -> "1000447"  [label="DDG: num_glyphs + TABLE_EXTEND"];
"1000485" -> "1000462"  [label="AST: "];
"1000485" -> "1000488"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000487" -> "1000485"  [label="AST: "];
"1000488" -> "1000485"  [label="AST: "];
"1000490" -> "1000485"  [label="CFG: "];
"1000485" -> "1000532"  [label="DDG: base"];
"1000485" -> "1000532"  [label="DDG: FT_MEM_COPY( temp, base, size )"];
"1000481" -> "1000485"  [label="DDG: temp"];
"1000481" -> "1000485"  [label="DDG: size"];
"1000485" -> "1000489"  [label="DDG: temp"];
"1000485" -> "1000489"  [label="DDG: size"];
"1000481" -> "1000480"  [label="AST: "];
"1000481" -> "1000483"  [label="CFG: "];
"1000482" -> "1000481"  [label="AST: "];
"1000483" -> "1000481"  [label="AST: "];
"1000484" -> "1000481"  [label="CFG: "];
"1000486" -> "1000481"  [label="CFG: "];
"1000481" -> "1000532"  [label="DDG: FT_ALLOC( temp, size )"];
"1000517" -> "1000481"  [label="DDG: temp"];
"1000465" -> "1000481"  [label="DDG: size"];
"1000517" -> "1000462"  [label="AST: "];
"1000517" -> "1000518"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000528" -> "1000517"  [label="CFG: "];
"1000517" -> "1000532"  [label="DDG: temp"];
"1000517" -> "1000532"  [label="DDG: FT_FREE( temp )"];
"1000489" -> "1000517"  [label="DDG: temp"];
"1000489" -> "1000462"  [label="AST: "];
"1000489" -> "1000492"  [label="CFG: "];
"1000490" -> "1000489"  [label="AST: "];
"1000491" -> "1000489"  [label="AST: "];
"1000492" -> "1000489"  [label="AST: "];
"1000494" -> "1000489"  [label="CFG: "];
"1000489" -> "1000532"  [label="DDG: psaux->t1_decrypt( temp, size, 4330 )"];
"1000489" -> "1000493"  [label="DDG: size"];
"1000489" -> "1000507"  [label="DDG: temp"];
"1000465" -> "1000464"  [label="AST: "];
"1000465" -> "1000467"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000465"  [label="AST: "];
"1000476" -> "1000465"  [label="CFG: "];
"1000482" -> "1000465"  [label="CFG: "];
"1000465" -> "1000532"  [label="DDG: size <= face->type1.private_dict.lenIV"];
"1000465" -> "1000448"  [label="DDG: face->type1.private_dict.lenIV"];
"1000448" -> "1000465"  [label="DDG: face->type1.private_dict.lenIV"];
"1000465" -> "1000493"  [label="DDG: face->type1.private_dict.lenIV"];
"1000465" -> "1000507"  [label="DDG: face->type1.private_dict.lenIV"];
"1000448" -> "1000447"  [label="AST: "];
"1000448" -> "1000456"  [label="CFG: "];
"1000449" -> "1000448"  [label="AST: "];
"1000456" -> "1000448"  [label="AST: "];
"1000458" -> "1000448"  [label="CFG: "];
"1000447" -> "1000448"  [label="CFG: "];
"1000448" -> "1000532"  [label="DDG: face->type1.private_dict.lenIV"];
"1000448" -> "1000447"  [label="DDG: face->type1.private_dict.lenIV"];
"1000448" -> "1000447"  [label="DDG: 0"];
"1000493" -> "1000462"  [label="AST: "];
"1000493" -> "1000495"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000495" -> "1000493"  [label="AST: "];
"1000503" -> "1000493"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000466" -> "1000447"  [label="CFG: "];
"1000521" -> "1000447"  [label="CFG: "];
"1000447" -> "1000532"  [label="DDG: n < num_glyphs + TABLE_EXTEND"];
"1000447" -> "1000532"  [label="DDG: face->type1.private_dict.lenIV >= 0 &&\n             n < num_glyphs + TABLE_EXTEND"];
"1000447" -> "1000532"  [label="DDG: face->type1.private_dict.lenIV >= 0"];
"1000502" -> "1000462"  [label="AST: "];
"1000503" -> "1000502"  [label="AST: "];
"1000518" -> "1000502"  [label="CFG: "];
"1000502" -> "1000532"  [label="DDG: error"];
"1000502" -> "1000532"  [label="DDG: T1_Add_Table( code_table, n,\n                                temp + face->type1.private_dict.lenIV, size )"];
"1000520" -> "1000519"  [label="AST: "];
"1000521" -> "1000520"  [label="AST: "];
"1000528" -> "1000520"  [label="CFG: "];
"1000520" -> "1000532"  [label="DDG: T1_Add_Table( code_table, n, base, size )"];
"1000520" -> "1000532"  [label="DDG: error"];
"1000401" -> "1000270"  [label="AST: "];
"1000402" -> "1000401"  [label="AST: "];
"1000411" -> "1000401"  [label="CFG: "];
"1000401" -> "1000532"  [label="DDG: T1_Add_Table( name_table, n, cur, len + 1 )"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000442"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000442" -> "1000440"  [label="AST: "];
"1000444" -> "1000440"  [label="CFG: "];
"1000440" -> "1000532"  [label="DDG: notdef_index"];
"1000507" -> "1000509"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000509" -> "1000507"  [label="AST: "];
"1000516" -> "1000507"  [label="CFG: "];
"1000507" -> "1000532"  [label="DDG: face->type1.private_dict.lenIV"];
}
