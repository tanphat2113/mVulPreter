digraph "0_savannah_73be9f9ab67842cfbec36ee99e8d2301434c84ca@array" {
"1000413" [label="(Call,name_table->elements[n][len] = '\0')"];
"1000431" [label="(Call,(const char*)(name_table->elements[n]))"];
"1000429" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ))"];
"1000428" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000423" [label="(Call,*cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000423" [label="(Call,*cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000438" [label="(Literal,0)"];
"1000441" [label="(Identifier,notdef_index)"];
"1000426" [label="(Identifier,cur)"];
"1000433" [label="(Call,name_table->elements[n])"];
"1000428" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0)"];
"1000532" [label="(MethodReturn,RET)"];
"1000421" [label="(Literal,'\0')"];
"1000452" [label="(Identifier,face)"];
"1000430" [label="(Literal,\".notdef\")"];
"1000422" [label="(ControlStructure,if ( *cur == '.'                                              &&\n             ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ) == 0 ))"];
"1000270" [label="(Block,)"];
"1000431" [label="(Call,(const char*)(name_table->elements[n]))"];
"1000414" [label="(Call,name_table->elements[n][len])"];
"1000424" [label="(Call,*cur == '.')"];
"1000429" [label="(Call,ft_strcmp( \".notdef\",\n                        (const char*)(name_table->elements[n]) ))"];
"1000413" [label="(Call,name_table->elements[n][len] = '\0')"];
"1000413" -> "1000270"  [label="AST: "];
"1000413" -> "1000421"  [label="CFG: "];
"1000414" -> "1000413"  [label="AST: "];
"1000421" -> "1000413"  [label="AST: "];
"1000426" -> "1000413"  [label="CFG: "];
"1000413" -> "1000532"  [label="DDG: "];
"1000413" -> "1000431"  [label="DDG: "];
"1000431" -> "1000429"  [label="AST: "];
"1000431" -> "1000433"  [label="CFG: "];
"1000432" -> "1000431"  [label="AST: "];
"1000433" -> "1000431"  [label="AST: "];
"1000429" -> "1000431"  [label="CFG: "];
"1000431" -> "1000532"  [label="DDG: "];
"1000431" -> "1000429"  [label="DDG: "];
"1000429" -> "1000428"  [label="AST: "];
"1000430" -> "1000429"  [label="AST: "];
"1000438" -> "1000429"  [label="CFG: "];
"1000429" -> "1000532"  [label="DDG: "];
"1000429" -> "1000428"  [label="DDG: "];
"1000429" -> "1000428"  [label="DDG: "];
"1000428" -> "1000423"  [label="AST: "];
"1000428" -> "1000438"  [label="CFG: "];
"1000438" -> "1000428"  [label="AST: "];
"1000423" -> "1000428"  [label="CFG: "];
"1000428" -> "1000532"  [label="DDG: "];
"1000428" -> "1000423"  [label="DDG: "];
"1000428" -> "1000423"  [label="DDG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000423" -> "1000424"  [label="CFG: "];
"1000424" -> "1000423"  [label="AST: "];
"1000441" -> "1000423"  [label="CFG: "];
"1000452" -> "1000423"  [label="CFG: "];
"1000423" -> "1000532"  [label="DDG: "];
"1000423" -> "1000532"  [label="DDG: "];
"1000423" -> "1000532"  [label="DDG: "];
"1000424" -> "1000423"  [label="DDG: "];
"1000424" -> "1000423"  [label="DDG: "];
}
