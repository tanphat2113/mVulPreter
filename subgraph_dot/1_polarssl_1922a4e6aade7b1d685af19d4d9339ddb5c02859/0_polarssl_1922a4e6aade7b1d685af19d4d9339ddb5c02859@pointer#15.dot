digraph "0_polarssl_1922a4e6aade7b1d685af19d4d9339ddb5c02859@pointer" {
"1000494" [label="(Call,ssl->ca_chain == NULL)"];
"1000351" [label="(Call,( ssl->session_negotiate->peer_cert = (x509_cert *) malloc(\n                    sizeof( x509_cert ) ) ) == NULL)"];
"1000352" [label="(Call,ssl->session_negotiate->peer_cert = (x509_cert *) malloc(\n                    sizeof( x509_cert ) ))"];
"1000358" [label="(Call,(x509_cert *) malloc(\n                    sizeof( x509_cert ) ))"];
"1000507" [label="(Call,x509parse_verify( ssl->session_negotiate->peer_cert,\n                                ssl->ca_chain, ssl->ca_crl,\n                                ssl->peer_cn,  &ssl->verify_result,\n                                ssl->f_vrfy, ssl->p_vrfy ))"];
"1000505" [label="(Call,ret = x509parse_verify( ssl->session_negotiate->peer_cert,\n                                ssl->ca_chain, ssl->ca_crl,\n                                ssl->peer_cn,  &ssl->verify_result,\n                                ssl->f_vrfy, ssl->p_vrfy ))"];
"1000533" [label="(Call,ret != 0)"];
"1000536" [label="(Call,SSL_DEBUG_RET( 1, \"x509_verify_cert\", ret ))"];
"1000552" [label="(Return,return( ret );)"];
"1000465" [label="(Call,ret != 0)"];
"1000526" [label="(Call,ssl->f_vrfy)"];
"1000373" [label="(Call,memset( ssl->session_negotiate->peer_cert, 0, sizeof( x509_cert ) ))"];
"1000534" [label="(Identifier,ret)"];
"1000363" [label="(Identifier,NULL)"];
"1000554" [label="(MethodReturn,int)"];
"1000140" [label="(Call,ret = ssl_read_record( ssl ))"];
"1000353" [label="(Call,ssl->session_negotiate->peer_cert)"];
"1000516" [label="(Call,ssl->ca_crl)"];
"1000537" [label="(Literal,1)"];
"1000553" [label="(Identifier,ret)"];
"1000539" [label="(Identifier,ret)"];
"1000508" [label="(Call,ssl->session_negotiate->peer_cert)"];
"1000538" [label="(Literal,\"x509_verify_cert\")"];
"1000552" [label="(Return,return( ret );)"];
"1000478" [label="(Call,SSL_DEBUG_CRT( 3, \"peer certificate\", ssl->session_negotiate->peer_cert ))"];
"1000351" [label="(Call,( ssl->session_negotiate->peer_cert = (x509_cert *) malloc(\n                    sizeof( x509_cert ) ) ) == NULL)"];
"1000493" [label="(ControlStructure,if( ssl->ca_chain == NULL ))"];
"1000522" [label="(Call,&ssl->verify_result)"];
"1000513" [label="(Call,ssl->ca_chain)"];
"1000546" [label="(Call,ret = 0)"];
"1000495" [label="(Call,ssl->ca_chain)"];
"1000494" [label="(Call,ssl->ca_chain == NULL)"];
"1000498" [label="(Identifier,NULL)"];
"1000366" [label="(Literal,1)"];
"1000376" [label="(Identifier,ssl)"];
"1000492" [label="(Block,)"];
"1000532" [label="(ControlStructure,if( ret != 0 ))"];
"1000104" [label="(Block,)"];
"1000360" [label="(Call,malloc(\n                    sizeof( x509_cert ) ))"];
"1000535" [label="(Literal,0)"];
"1000505" [label="(Call,ret = x509parse_verify( ssl->session_negotiate->peer_cert,\n                                ssl->ca_chain, ssl->ca_crl,\n                                ssl->peer_cn,  &ssl->verify_result,\n                                ssl->f_vrfy, ssl->p_vrfy ))"];
"1000352" [label="(Call,ssl->session_negotiate->peer_cert = (x509_cert *) malloc(\n                    sizeof( x509_cert ) ))"];
"1000543" [label="(Identifier,ssl)"];
"1000536" [label="(Call,SSL_DEBUG_RET( 1, \"x509_verify_cert\", ret ))"];
"1000507" [label="(Call,x509parse_verify( ssl->session_negotiate->peer_cert,\n                                ssl->ca_chain, ssl->ca_crl,\n                                ssl->peer_cn,  &ssl->verify_result,\n                                ssl->f_vrfy, ssl->p_vrfy ))"];
"1000501" [label="(Literal,1)"];
"1000506" [label="(Identifier,ret)"];
"1000519" [label="(Call,ssl->peer_cn)"];
"1000529" [label="(Call,ssl->p_vrfy)"];
"1000533" [label="(Call,ret != 0)"];
"1000358" [label="(Call,(x509_cert *) malloc(\n                    sizeof( x509_cert ) ))"];
"1000350" [label="(ControlStructure,if( ( ssl->session_negotiate->peer_cert = (x509_cert *) malloc(\n                    sizeof( x509_cert ) ) ) == NULL ))"];
"1000494" -> "1000493"  [label="AST: "];
"1000494" -> "1000498"  [label="CFG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000498" -> "1000494"  [label="AST: "];
"1000501" -> "1000494"  [label="CFG: "];
"1000506" -> "1000494"  [label="CFG: "];
"1000494" -> "1000554"  [label="DDG: "];
"1000494" -> "1000554"  [label="DDG: "];
"1000494" -> "1000554"  [label="DDG: "];
"1000351" -> "1000494"  [label="DDG: "];
"1000494" -> "1000507"  [label="DDG: "];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000363"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000363" -> "1000351"  [label="AST: "];
"1000366" -> "1000351"  [label="CFG: "];
"1000376" -> "1000351"  [label="CFG: "];
"1000351" -> "1000554"  [label="DDG: "];
"1000351" -> "1000554"  [label="DDG: "];
"1000352" -> "1000351"  [label="DDG: "];
"1000358" -> "1000351"  [label="DDG: "];
"1000352" -> "1000358"  [label="CFG: "];
"1000353" -> "1000352"  [label="AST: "];
"1000358" -> "1000352"  [label="AST: "];
"1000363" -> "1000352"  [label="CFG: "];
"1000352" -> "1000554"  [label="DDG: "];
"1000352" -> "1000554"  [label="DDG: "];
"1000358" -> "1000352"  [label="DDG: "];
"1000352" -> "1000373"  [label="DDG: "];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000358" -> "1000554"  [label="DDG: "];
"1000507" -> "1000505"  [label="AST: "];
"1000507" -> "1000529"  [label="CFG: "];
"1000508" -> "1000507"  [label="AST: "];
"1000513" -> "1000507"  [label="AST: "];
"1000516" -> "1000507"  [label="AST: "];
"1000519" -> "1000507"  [label="AST: "];
"1000522" -> "1000507"  [label="AST: "];
"1000526" -> "1000507"  [label="AST: "];
"1000529" -> "1000507"  [label="AST: "];
"1000505" -> "1000507"  [label="CFG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000554"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000507" -> "1000505"  [label="DDG: "];
"1000478" -> "1000507"  [label="DDG: "];
"1000505" -> "1000492"  [label="AST: "];
"1000506" -> "1000505"  [label="AST: "];
"1000534" -> "1000505"  [label="CFG: "];
"1000505" -> "1000554"  [label="DDG: "];
"1000505" -> "1000533"  [label="DDG: "];
"1000533" -> "1000532"  [label="AST: "];
"1000533" -> "1000535"  [label="CFG: "];
"1000534" -> "1000533"  [label="AST: "];
"1000535" -> "1000533"  [label="AST: "];
"1000537" -> "1000533"  [label="CFG: "];
"1000543" -> "1000533"  [label="CFG: "];
"1000533" -> "1000554"  [label="DDG: "];
"1000533" -> "1000554"  [label="DDG: "];
"1000533" -> "1000536"  [label="DDG: "];
"1000533" -> "1000552"  [label="DDG: "];
"1000536" -> "1000532"  [label="AST: "];
"1000536" -> "1000539"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000538" -> "1000536"  [label="AST: "];
"1000539" -> "1000536"  [label="AST: "];
"1000543" -> "1000536"  [label="CFG: "];
"1000536" -> "1000554"  [label="DDG: "];
"1000536" -> "1000554"  [label="DDG: "];
"1000536" -> "1000552"  [label="DDG: "];
"1000552" -> "1000104"  [label="AST: "];
"1000552" -> "1000553"  [label="CFG: "];
"1000553" -> "1000552"  [label="AST: "];
"1000554" -> "1000552"  [label="CFG: "];
"1000552" -> "1000554"  [label="DDG: "];
"1000553" -> "1000552"  [label="DDG: "];
"1000140" -> "1000552"  [label="DDG: "];
"1000546" -> "1000552"  [label="DDG: "];
"1000465" -> "1000552"  [label="DDG: "];
}
