digraph "0_Android_c82e31a7039a03dca7b37c65b7890ba5c1e18ced@API" {
"1000193" [label="(Call,streamCTR = data.readInt32())"];
"1000200" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000198" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000207" [label="(Call,reply->writeInt32(err))"];
"1000210" [label="(Call,err == OK)"];
"1000226" [label="(Return,return OK;)"];
"1000216" [label="(Call,reply->write(outData, size))"];
"1000219" [label="(Call,free(inData))"];
"1000208" [label="(Identifier,err)"];
"1000210" [label="(Call,err == OK)"];
"1000200" [label="(Call,encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000201" [label="(Identifier,inData)"];
"1000218" [label="(Identifier,size)"];
"1000222" [label="(Identifier,inData)"];
"1000213" [label="(Block,)"];
"1000227" [label="(Identifier,OK)"];
"1000206" [label="(Identifier,outData)"];
"1000207" [label="(Call,reply->writeInt32(err))"];
"1000169" [label="(Block,)"];
"1000204" [label="(Call,&inputCTR)"];
"1000216" [label="(Call,reply->write(outData, size))"];
"1000199" [label="(Identifier,err)"];
"1000202" [label="(Identifier,size)"];
"1000219" [label="(Call,free(inData))"];
"1000357" [label="(MethodReturn,status_t)"];
"1000203" [label="(Identifier,streamCTR)"];
"1000209" [label="(ControlStructure,if (err == OK))"];
"1000226" [label="(Return,return OK;)"];
"1000193" [label="(Call,streamCTR = data.readInt32())"];
"1000211" [label="(Identifier,err)"];
"1000215" [label="(Identifier,inputCTR)"];
"1000220" [label="(Identifier,inData)"];
"1000212" [label="(Identifier,OK)"];
"1000195" [label="(Call,data.readInt32())"];
"1000189" [label="(Call,data.read(inData, size))"];
"1000194" [label="(Identifier,streamCTR)"];
"1000198" [label="(Call,err = encrypt(inData, size, streamCTR, &inputCTR, outData))"];
"1000217" [label="(Identifier,outData)"];
"1000182" [label="(Call,*outData = (uint8_t *)inData + size)"];
"1000193" -> "1000169"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000193" -> "1000357"  [label="DDG: data.readInt32()"];
"1000193" -> "1000200"  [label="DDG: streamCTR"];
"1000200" -> "1000198"  [label="AST: "];
"1000200" -> "1000206"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="AST: "];
"1000203" -> "1000200"  [label="AST: "];
"1000204" -> "1000200"  [label="AST: "];
"1000206" -> "1000200"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000200" -> "1000357"  [label="DDG: streamCTR"];
"1000200" -> "1000357"  [label="DDG: &inputCTR"];
"1000200" -> "1000357"  [label="DDG: size"];
"1000200" -> "1000198"  [label="DDG: &inputCTR"];
"1000200" -> "1000198"  [label="DDG: streamCTR"];
"1000200" -> "1000198"  [label="DDG: size"];
"1000200" -> "1000198"  [label="DDG: outData"];
"1000200" -> "1000198"  [label="DDG: inData"];
"1000189" -> "1000200"  [label="DDG: inData"];
"1000189" -> "1000200"  [label="DDG: size"];
"1000182" -> "1000200"  [label="DDG: outData"];
"1000200" -> "1000216"  [label="DDG: outData"];
"1000200" -> "1000216"  [label="DDG: size"];
"1000200" -> "1000219"  [label="DDG: inData"];
"1000198" -> "1000169"  [label="AST: "];
"1000199" -> "1000198"  [label="AST: "];
"1000208" -> "1000198"  [label="CFG: "];
"1000198" -> "1000357"  [label="DDG: encrypt(inData, size, streamCTR, &inputCTR, outData)"];
"1000198" -> "1000207"  [label="DDG: err"];
"1000207" -> "1000169"  [label="AST: "];
"1000207" -> "1000208"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000211" -> "1000207"  [label="CFG: "];
"1000207" -> "1000357"  [label="DDG: reply->writeInt32(err)"];
"1000207" -> "1000210"  [label="DDG: err"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="CFG: "];
"1000220" -> "1000210"  [label="CFG: "];
"1000210" -> "1000357"  [label="DDG: err == OK"];
"1000210" -> "1000357"  [label="DDG: OK"];
"1000210" -> "1000357"  [label="DDG: err"];
"1000210" -> "1000226"  [label="DDG: OK"];
"1000226" -> "1000169"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000357" -> "1000226"  [label="CFG: "];
"1000226" -> "1000357"  [label="DDG: <RET>"];
"1000227" -> "1000226"  [label="DDG: OK"];
"1000216" -> "1000213"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000218" -> "1000216"  [label="AST: "];
"1000220" -> "1000216"  [label="CFG: "];
"1000216" -> "1000357"  [label="DDG: reply->write(outData, size)"];
"1000216" -> "1000357"  [label="DDG: size"];
"1000219" -> "1000169"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000222" -> "1000219"  [label="CFG: "];
}
