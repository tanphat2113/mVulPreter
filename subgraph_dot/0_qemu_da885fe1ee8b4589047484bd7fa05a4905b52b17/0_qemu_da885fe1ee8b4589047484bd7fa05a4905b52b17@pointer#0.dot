digraph "0_qemu_da885fe1ee8b4589047484bd7fa05a4905b52b17@pointer" {
"1000143" [label="(Call,load_image_size(filename_path, fdt, dt_size))"];
"1000120" [label="(Call,get_image_size(filename_path))"];
"1000104" [label="(MethodParameterIn,const char *filename_path)"];
"1000137" [label="(Call,fdt = g_malloc0(dt_size))"];
"1000139" [label="(Call,g_malloc0(dt_size))"];
"1000134" [label="(Call,dt_size *= 2)"];
"1000131" [label="(Call,dt_size += 10000)"];
"1000123" [label="(Call,dt_size < 0)"];
"1000118" [label="(Call,dt_size = get_image_size(filename_path))"];
"1000141" [label="(Call,dt_file_load_size = load_image_size(filename_path, fdt, dt_size))"];
"1000148" [label="(Call,dt_file_load_size < 0)"];
"1000152" [label="(Call,error_report(\"Unable to open device tree file '%s'\",\n                      filename_path))"];
"1000158" [label="(Call,fdt_open_into(fdt, fdt, dt_size))"];
"1000156" [label="(Call,ret = fdt_open_into(fdt, fdt, dt_size))"];
"1000169" [label="(Call,fdt_check_header(fdt))"];
"1000180" [label="(Return,return fdt;)"];
"1000183" [label="(Call,g_free(fdt))"];
"1000176" [label="(Call,*sizep = dt_size)"];
"1000172" [label="(Call,error_report(\"Device tree file loaded into memory is invalid: %s\",\n                     filename_path))"];
"1000157" [label="(Identifier,ret)"];
"1000175" [label="(ControlStructure,goto fail;)"];
"1000154" [label="(Identifier,filename_path)"];
"1000141" [label="(Call,dt_file_load_size = load_image_size(filename_path, fdt, dt_size))"];
"1000180" [label="(Return,return fdt;)"];
"1000142" [label="(Identifier,dt_file_load_size)"];
"1000138" [label="(Identifier,fdt)"];
"1000119" [label="(Identifier,dt_size)"];
"1000140" [label="(Identifier,dt_size)"];
"1000183" [label="(Call,g_free(fdt))"];
"1000153" [label="(Literal,\"Unable to open device tree file '%s'\")"];
"1000156" [label="(Call,ret = fdt_open_into(fdt, fdt, dt_size))"];
"1000168" [label="(ControlStructure,if (fdt_check_header(fdt)))"];
"1000123" [label="(Call,dt_size < 0)"];
"1000163" [label="(Identifier,ret)"];
"1000118" [label="(Call,dt_size = get_image_size(filename_path))"];
"1000155" [label="(ControlStructure,goto fail;)"];
"1000136" [label="(Literal,2)"];
"1000173" [label="(Literal,\"Device tree file loaded into memory is invalid: %s\")"];
"1000170" [label="(Identifier,fdt)"];
"1000161" [label="(Identifier,dt_size)"];
"1000186" [label="(Identifier,NULL)"];
"1000135" [label="(Identifier,dt_size)"];
"1000176" [label="(Call,*sizep = dt_size)"];
"1000177" [label="(Call,*sizep)"];
"1000150" [label="(Literal,0)"];
"1000151" [label="(Block,)"];
"1000124" [label="(Identifier,dt_size)"];
"1000147" [label="(ControlStructure,if (dt_file_load_size < 0))"];
"1000160" [label="(Identifier,fdt)"];
"1000169" [label="(Call,fdt_check_header(fdt))"];
"1000111" [label="(Call,*fdt = NULL)"];
"1000174" [label="(Identifier,filename_path)"];
"1000106" [label="(Block,)"];
"1000131" [label="(Call,dt_size += 10000)"];
"1000133" [label="(Literal,10000)"];
"1000134" [label="(Call,dt_size *= 2)"];
"1000145" [label="(Identifier,fdt)"];
"1000149" [label="(Identifier,dt_file_load_size)"];
"1000184" [label="(Identifier,fdt)"];
"1000104" [label="(MethodParameterIn,const char *filename_path)"];
"1000122" [label="(ControlStructure,if (dt_size < 0))"];
"1000187" [label="(MethodReturn,void *)"];
"1000152" [label="(Call,error_report(\"Unable to open device tree file '%s'\",\n                      filename_path))"];
"1000128" [label="(Literal,\"Unable to get size of device tree file '%s'\")"];
"1000178" [label="(Identifier,sizep)"];
"1000132" [label="(Identifier,dt_size)"];
"1000158" [label="(Call,fdt_open_into(fdt, fdt, dt_size))"];
"1000125" [label="(Literal,0)"];
"1000139" [label="(Call,g_malloc0(dt_size))"];
"1000120" [label="(Call,get_image_size(filename_path))"];
"1000137" [label="(Call,fdt = g_malloc0(dt_size))"];
"1000127" [label="(Call,error_report(\"Unable to get size of device tree file '%s'\",\n                     filename_path))"];
"1000148" [label="(Call,dt_file_load_size < 0)"];
"1000146" [label="(Identifier,dt_size)"];
"1000171" [label="(Block,)"];
"1000159" [label="(Identifier,fdt)"];
"1000143" [label="(Call,load_image_size(filename_path, fdt, dt_size))"];
"1000181" [label="(Identifier,fdt)"];
"1000121" [label="(Identifier,filename_path)"];
"1000179" [label="(Identifier,dt_size)"];
"1000172" [label="(Call,error_report(\"Device tree file loaded into memory is invalid: %s\",\n                     filename_path))"];
"1000144" [label="(Identifier,filename_path)"];
"1000143" -> "1000141"  [label="AST: "];
"1000143" -> "1000146"  [label="CFG: "];
"1000144" -> "1000143"  [label="AST: "];
"1000145" -> "1000143"  [label="AST: "];
"1000146" -> "1000143"  [label="AST: "];
"1000141" -> "1000143"  [label="CFG: "];
"1000143" -> "1000187"  [label="DDG: "];
"1000143" -> "1000187"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000143" -> "1000141"  [label="DDG: "];
"1000120" -> "1000143"  [label="DDG: "];
"1000104" -> "1000143"  [label="DDG: "];
"1000137" -> "1000143"  [label="DDG: "];
"1000139" -> "1000143"  [label="DDG: "];
"1000143" -> "1000152"  [label="DDG: "];
"1000143" -> "1000158"  [label="DDG: "];
"1000143" -> "1000158"  [label="DDG: "];
"1000143" -> "1000172"  [label="DDG: "];
"1000143" -> "1000183"  [label="DDG: "];
"1000120" -> "1000118"  [label="AST: "];
"1000120" -> "1000121"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000118" -> "1000120"  [label="CFG: "];
"1000120" -> "1000118"  [label="DDG: "];
"1000104" -> "1000120"  [label="DDG: "];
"1000120" -> "1000127"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000187"  [label="DDG: "];
"1000104" -> "1000127"  [label="DDG: "];
"1000104" -> "1000152"  [label="DDG: "];
"1000104" -> "1000172"  [label="DDG: "];
"1000137" -> "1000106"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000142" -> "1000137"  [label="CFG: "];
"1000137" -> "1000187"  [label="DDG: "];
"1000139" -> "1000137"  [label="DDG: "];
"1000139" -> "1000140"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000134" -> "1000139"  [label="DDG: "];
"1000134" -> "1000106"  [label="AST: "];
"1000134" -> "1000136"  [label="CFG: "];
"1000135" -> "1000134"  [label="AST: "];
"1000136" -> "1000134"  [label="AST: "];
"1000138" -> "1000134"  [label="CFG: "];
"1000131" -> "1000134"  [label="DDG: "];
"1000131" -> "1000106"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000133" -> "1000131"  [label="AST: "];
"1000135" -> "1000131"  [label="CFG: "];
"1000123" -> "1000131"  [label="DDG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000128" -> "1000123"  [label="CFG: "];
"1000132" -> "1000123"  [label="CFG: "];
"1000123" -> "1000187"  [label="DDG: "];
"1000123" -> "1000187"  [label="DDG: "];
"1000118" -> "1000123"  [label="DDG: "];
"1000118" -> "1000106"  [label="AST: "];
"1000119" -> "1000118"  [label="AST: "];
"1000124" -> "1000118"  [label="CFG: "];
"1000118" -> "1000187"  [label="DDG: "];
"1000141" -> "1000106"  [label="AST: "];
"1000142" -> "1000141"  [label="AST: "];
"1000149" -> "1000141"  [label="CFG: "];
"1000141" -> "1000187"  [label="DDG: "];
"1000141" -> "1000148"  [label="DDG: "];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000157" -> "1000148"  [label="CFG: "];
"1000148" -> "1000187"  [label="DDG: "];
"1000148" -> "1000187"  [label="DDG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000155" -> "1000152"  [label="CFG: "];
"1000152" -> "1000187"  [label="DDG: "];
"1000152" -> "1000187"  [label="DDG: "];
"1000158" -> "1000156"  [label="AST: "];
"1000158" -> "1000161"  [label="CFG: "];
"1000159" -> "1000158"  [label="AST: "];
"1000160" -> "1000158"  [label="AST: "];
"1000161" -> "1000158"  [label="AST: "];
"1000156" -> "1000158"  [label="CFG: "];
"1000158" -> "1000187"  [label="DDG: "];
"1000158" -> "1000156"  [label="DDG: "];
"1000158" -> "1000156"  [label="DDG: "];
"1000158" -> "1000169"  [label="DDG: "];
"1000158" -> "1000176"  [label="DDG: "];
"1000158" -> "1000183"  [label="DDG: "];
"1000156" -> "1000106"  [label="AST: "];
"1000157" -> "1000156"  [label="AST: "];
"1000163" -> "1000156"  [label="CFG: "];
"1000156" -> "1000187"  [label="DDG: "];
"1000156" -> "1000187"  [label="DDG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000169" -> "1000170"  [label="CFG: "];
"1000170" -> "1000169"  [label="AST: "];
"1000173" -> "1000169"  [label="CFG: "];
"1000178" -> "1000169"  [label="CFG: "];
"1000169" -> "1000187"  [label="DDG: "];
"1000169" -> "1000187"  [label="DDG: "];
"1000169" -> "1000180"  [label="DDG: "];
"1000169" -> "1000183"  [label="DDG: "];
"1000180" -> "1000106"  [label="AST: "];
"1000180" -> "1000181"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000187" -> "1000180"  [label="CFG: "];
"1000180" -> "1000187"  [label="DDG: "];
"1000181" -> "1000180"  [label="DDG: "];
"1000183" -> "1000106"  [label="AST: "];
"1000183" -> "1000184"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000186" -> "1000183"  [label="CFG: "];
"1000183" -> "1000187"  [label="DDG: "];
"1000183" -> "1000187"  [label="DDG: "];
"1000111" -> "1000183"  [label="DDG: "];
"1000176" -> "1000106"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000179" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000176" -> "1000187"  [label="DDG: "];
"1000176" -> "1000187"  [label="DDG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000172" -> "1000174"  [label="CFG: "];
"1000173" -> "1000172"  [label="AST: "];
"1000174" -> "1000172"  [label="AST: "];
"1000175" -> "1000172"  [label="CFG: "];
"1000172" -> "1000187"  [label="DDG: "];
"1000172" -> "1000187"  [label="DDG: "];
}
