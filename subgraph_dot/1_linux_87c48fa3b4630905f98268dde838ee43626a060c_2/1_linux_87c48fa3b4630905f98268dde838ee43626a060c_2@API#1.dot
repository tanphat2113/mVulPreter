digraph "1_linux_87c48fa3b4630905f98268dde838ee43626a060c_2@API" {
"1000133" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000142" [label="(Call,flags & MSG_DONTWAIT)"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000131" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000148" [label="(Call,skb == NULL)"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000185" [label="(Call,skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000183" [label="(Call,err = skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000194" [label="(Call,!err)"];
"1000238" [label="(Return,return err;)"];
"1000200" [label="(Call,skb_shinfo(skb))"];
"1000213" [label="(Call,skb_shinfo(skb))"];
"1000222" [label="(Call,skb_shinfo(skb))"];
"1000228" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000236" [label="(Call,kfree_skb(skb))"];
"1000150" [label="(Identifier,NULL)"];
"1000137" [label="(Call,fragheaderlen + transhdrlen + 20)"];
"1000109" [label="(MethodParameterIn,int getfrag(void *from, char *to, int offset, int len,\n \t\t\tint odd, struct sk_buff *skb))"];
"1000238" [label="(Return,return err;)"];
"1000124" [label="(Call,skb_peek_tail(&sk->sk_write_queue))"];
"1000214" [label="(Identifier,skb)"];
"1000149" [label="(Identifier,skb)"];
"1000121" [label="(Call,(skb = skb_peek_tail(&sk->sk_write_queue)) == NULL)"];
"1000201" [label="(Identifier,skb)"];
"1000147" [label="(ControlStructure,if (skb == NULL))"];
"1000146" [label="(Identifier,err)"];
"1000153" [label="(Identifier,ENOMEM)"];
"1000162" [label="(Call,skb_reset_network_header(skb))"];
"1000193" [label="(ControlStructure,if (!err))"];
"1000202" [label="(FieldIdentifier,gso_size)"];
"1000156" [label="(Identifier,hh_len)"];
"1000213" [label="(Call,skb_shinfo(skb))"];
"1000184" [label="(Identifier,err)"];
"1000164" [label="(Call,skb->transport_header = skb->network_header + fragheaderlen)"];
"1000122" [label="(Call,skb = skb_peek_tail(&sk->sk_write_queue))"];
"1000224" [label="(FieldIdentifier,ip6_frag_id)"];
"1000233" [label="(Identifier,skb)"];
"1000229" [label="(Call,&sk->sk_write_queue)"];
"1000189" [label="(Identifier,from)"];
"1000195" [label="(Identifier,err)"];
"1000112" [label="(MethodParameterIn,int hh_len)"];
"1000157" [label="(Call,skb_put(skb,fragheaderlen + transhdrlen))"];
"1000194" [label="(Call,!err)"];
"1000212" [label="(Call,skb_shinfo(skb)->gso_type)"];
"1000223" [label="(Identifier,skb)"];
"1000139" [label="(Call,transhdrlen + 20)"];
"1000228" [label="(Call,__skb_queue_tail(&sk->sk_write_queue, skb))"];
"1000114" [label="(MethodParameterIn,int transhdrlen)"];
"1000159" [label="(Call,fragheaderlen + transhdrlen)"];
"1000163" [label="(Identifier,skb)"];
"1000186" [label="(Identifier,sk)"];
"1000190" [label="(Call,length - transhdrlen)"];
"1000143" [label="(Identifier,flags)"];
"1000131" [label="(Call,skb = sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000110" [label="(MethodParameterIn,void *from)"];
"1000132" [label="(Identifier,skb)"];
"1000166" [label="(Identifier,skb)"];
"1000188" [label="(Identifier,getfrag)"];
"1000221" [label="(Call,skb_shinfo(skb)->ip6_frag_id)"];
"1000187" [label="(Identifier,skb)"];
"1000148" [label="(Call,skb == NULL)"];
"1000200" [label="(Call,skb_shinfo(skb))"];
"1000116" [label="(MethodParameterIn,unsigned int flags)"];
"1000133" [label="(Call,sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err))"];
"1000155" [label="(Identifier,skb)"];
"1000158" [label="(Identifier,skb)"];
"1000183" [label="(Call,err = skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000199" [label="(Call,skb_shinfo(skb)->gso_size)"];
"1000222" [label="(Call,skb_shinfo(skb))"];
"1000113" [label="(MethodParameterIn,int fragheaderlen)"];
"1000134" [label="(Identifier,sk)"];
"1000237" [label="(Identifier,skb)"];
"1000145" [label="(Call,&err)"];
"1000240" [label="(MethodReturn,static inline int)"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000154" [label="(Call,skb_reserve(skb, hh_len))"];
"1000206" [label="(Call,fragheaderlen -\n \t\t\t\t\t     sizeof(struct frag_hdr))"];
"1000142" [label="(Call,flags & MSG_DONTWAIT)"];
"1000236" [label="(Call,kfree_skb(skb))"];
"1000215" [label="(FieldIdentifier,gso_type)"];
"1000135" [label="(Call,hh_len + fragheaderlen + transhdrlen + 20)"];
"1000239" [label="(Identifier,err)"];
"1000117" [label="(Block,)"];
"1000196" [label="(Block,)"];
"1000235" [label="(Literal,0)"];
"1000168" [label="(Call,skb->network_header + fragheaderlen)"];
"1000185" [label="(Call,skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen)))"];
"1000144" [label="(Identifier,MSG_DONTWAIT)"];
"1000130" [label="(Block,)"];
"1000133" -> "1000131"  [label="AST: "];
"1000133" -> "1000145"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000142" -> "1000133"  [label="AST: "];
"1000145" -> "1000133"  [label="AST: "];
"1000131" -> "1000133"  [label="CFG: "];
"1000133" -> "1000240"  [label="DDG: flags & MSG_DONTWAIT"];
"1000133" -> "1000240"  [label="DDG: sk"];
"1000133" -> "1000240"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000133" -> "1000240"  [label="DDG: &err"];
"1000133" -> "1000131"  [label="DDG: sk"];
"1000133" -> "1000131"  [label="DDG: hh_len + fragheaderlen + transhdrlen + 20"];
"1000133" -> "1000131"  [label="DDG: flags & MSG_DONTWAIT"];
"1000133" -> "1000131"  [label="DDG: &err"];
"1000108" -> "1000133"  [label="DDG: sk"];
"1000112" -> "1000133"  [label="DDG: hh_len"];
"1000113" -> "1000133"  [label="DDG: fragheaderlen"];
"1000114" -> "1000133"  [label="DDG: transhdrlen"];
"1000142" -> "1000133"  [label="DDG: flags"];
"1000142" -> "1000133"  [label="DDG: MSG_DONTWAIT"];
"1000133" -> "1000185"  [label="DDG: sk"];
"1000108" -> "1000107"  [label="AST: "];
"1000108" -> "1000240"  [label="DDG: sk"];
"1000108" -> "1000185"  [label="DDG: sk"];
"1000112" -> "1000107"  [label="AST: "];
"1000112" -> "1000240"  [label="DDG: hh_len"];
"1000112" -> "1000135"  [label="DDG: hh_len"];
"1000112" -> "1000154"  [label="DDG: hh_len"];
"1000113" -> "1000107"  [label="AST: "];
"1000113" -> "1000240"  [label="DDG: fragheaderlen"];
"1000113" -> "1000135"  [label="DDG: fragheaderlen"];
"1000113" -> "1000137"  [label="DDG: fragheaderlen"];
"1000113" -> "1000157"  [label="DDG: fragheaderlen"];
"1000113" -> "1000159"  [label="DDG: fragheaderlen"];
"1000113" -> "1000164"  [label="DDG: fragheaderlen"];
"1000113" -> "1000168"  [label="DDG: fragheaderlen"];
"1000113" -> "1000206"  [label="DDG: fragheaderlen"];
"1000114" -> "1000107"  [label="AST: "];
"1000114" -> "1000240"  [label="DDG: transhdrlen"];
"1000114" -> "1000135"  [label="DDG: transhdrlen"];
"1000114" -> "1000137"  [label="DDG: transhdrlen"];
"1000114" -> "1000139"  [label="DDG: transhdrlen"];
"1000114" -> "1000157"  [label="DDG: transhdrlen"];
"1000114" -> "1000159"  [label="DDG: transhdrlen"];
"1000114" -> "1000190"  [label="DDG: transhdrlen"];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000146" -> "1000142"  [label="CFG: "];
"1000142" -> "1000240"  [label="DDG: MSG_DONTWAIT"];
"1000142" -> "1000240"  [label="DDG: flags"];
"1000116" -> "1000142"  [label="DDG: flags"];
"1000116" -> "1000107"  [label="AST: "];
"1000116" -> "1000240"  [label="DDG: flags"];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000131"  [label="AST: "];
"1000149" -> "1000131"  [label="CFG: "];
"1000131" -> "1000240"  [label="DDG: sock_alloc_send_skb(sk,\n\t\t\thh_len + fragheaderlen + transhdrlen + 20,\n\t\t\t(flags & MSG_DONTWAIT), &err)"];
"1000131" -> "1000148"  [label="DDG: skb"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000153" -> "1000148"  [label="CFG: "];
"1000155" -> "1000148"  [label="CFG: "];
"1000148" -> "1000240"  [label="DDG: skb"];
"1000148" -> "1000240"  [label="DDG: skb == NULL"];
"1000148" -> "1000240"  [label="DDG: NULL"];
"1000121" -> "1000148"  [label="DDG: NULL"];
"1000148" -> "1000154"  [label="DDG: skb"];
"1000154" -> "1000130"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000158" -> "1000154"  [label="CFG: "];
"1000154" -> "1000240"  [label="DDG: skb_reserve(skb, hh_len)"];
"1000154" -> "1000240"  [label="DDG: hh_len"];
"1000154" -> "1000157"  [label="DDG: skb"];
"1000157" -> "1000130"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000163" -> "1000157"  [label="CFG: "];
"1000157" -> "1000240"  [label="DDG: fragheaderlen + transhdrlen"];
"1000157" -> "1000240"  [label="DDG: skb_put(skb,fragheaderlen + transhdrlen)"];
"1000157" -> "1000162"  [label="DDG: skb"];
"1000162" -> "1000130"  [label="AST: "];
"1000162" -> "1000163"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="CFG: "];
"1000162" -> "1000240"  [label="DDG: skb_reset_network_header(skb)"];
"1000162" -> "1000185"  [label="DDG: skb"];
"1000185" -> "1000183"  [label="AST: "];
"1000185" -> "1000190"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000188" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000185" -> "1000240"  [label="DDG: getfrag"];
"1000185" -> "1000240"  [label="DDG: sk"];
"1000185" -> "1000240"  [label="DDG: length - transhdrlen"];
"1000185" -> "1000240"  [label="DDG: from"];
"1000185" -> "1000183"  [label="DDG: skb"];
"1000185" -> "1000183"  [label="DDG: sk"];
"1000185" -> "1000183"  [label="DDG: getfrag"];
"1000185" -> "1000183"  [label="DDG: length - transhdrlen"];
"1000185" -> "1000183"  [label="DDG: from"];
"1000122" -> "1000185"  [label="DDG: skb"];
"1000109" -> "1000185"  [label="DDG: getfrag"];
"1000110" -> "1000185"  [label="DDG: from"];
"1000190" -> "1000185"  [label="DDG: length"];
"1000190" -> "1000185"  [label="DDG: transhdrlen"];
"1000185" -> "1000200"  [label="DDG: skb"];
"1000185" -> "1000236"  [label="DDG: skb"];
"1000183" -> "1000117"  [label="AST: "];
"1000184" -> "1000183"  [label="AST: "];
"1000195" -> "1000183"  [label="CFG: "];
"1000183" -> "1000240"  [label="DDG: skb_append_datato_frags(sk,skb, getfrag, from,\n\t\t\t\t      (length - transhdrlen))"];
"1000183" -> "1000194"  [label="DDG: err"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000201" -> "1000194"  [label="CFG: "];
"1000237" -> "1000194"  [label="CFG: "];
"1000194" -> "1000240"  [label="DDG: !err"];
"1000194" -> "1000240"  [label="DDG: err"];
"1000194" -> "1000238"  [label="DDG: err"];
"1000238" -> "1000117"  [label="AST: "];
"1000238" -> "1000239"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000240" -> "1000238"  [label="CFG: "];
"1000238" -> "1000240"  [label="DDG: <RET>"];
"1000239" -> "1000238"  [label="DDG: err"];
"1000200" -> "1000199"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000202" -> "1000200"  [label="CFG: "];
"1000200" -> "1000213"  [label="DDG: skb"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000215" -> "1000213"  [label="CFG: "];
"1000213" -> "1000222"  [label="DDG: skb"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="CFG: "];
"1000222" -> "1000228"  [label="DDG: skb"];
"1000228" -> "1000196"  [label="AST: "];
"1000228" -> "1000233"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000233" -> "1000228"  [label="AST: "];
"1000235" -> "1000228"  [label="CFG: "];
"1000228" -> "1000240"  [label="DDG: skb"];
"1000228" -> "1000240"  [label="DDG: __skb_queue_tail(&sk->sk_write_queue, skb)"];
"1000228" -> "1000240"  [label="DDG: &sk->sk_write_queue"];
"1000124" -> "1000228"  [label="DDG: &sk->sk_write_queue"];
"1000236" -> "1000117"  [label="AST: "];
"1000236" -> "1000237"  [label="CFG: "];
"1000237" -> "1000236"  [label="AST: "];
"1000239" -> "1000236"  [label="CFG: "];
"1000236" -> "1000240"  [label="DDG: skb"];
"1000236" -> "1000240"  [label="DDG: kfree_skb(skb)"];
}
