digraph "0_keepalived_c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067@array" {
"1001018" [label="(Call,buf[0] = '\0')"];
"1001029" [label="(Call,strcpy(buf, \" rx_bufs_policy = MTU\"))"];
"1001059" [label="(Call,conf_write(fp, \"%s\", buf))"];
"1001063" [label="(Call,conf_write(fp, \" rx_bufs_multiples = %u\", global_data->vrrp_rx_bufs_multiples))"];
"1001069" [label="(Call,conf_write(fp, \" umask = 0%o\", global_data->umask))"];
"1001039" [label="(Call,strcpy(buf, \" rx_bufs_policy = ADVERT\"))"];
"1001049" [label="(Call,sprintf(buf, \" rx_bufs_size = %lu\", global_data->vrrp_rx_bufs_size))"];
"1001057" [label="(Identifier,buf)"];
"1001019" [label="(Call,buf[0])"];
"1001051" [label="(Literal,\" rx_bufs_size = %lu\")"];
"1001022" [label="(Literal,'\0')"];
"1001030" [label="(Identifier,buf)"];
"1001061" [label="(Literal,\"%s\")"];
"1001039" [label="(Call,strcpy(buf, \" rx_bufs_policy = ADVERT\"))"];
"1001018" [label="(Call,buf[0] = '\0')"];
"1000103" [label="(Block,)"];
"1001059" [label="(Call,conf_write(fp, \"%s\", buf))"];
"1001055" [label="(ControlStructure,if (buf[0]))"];
"1001041" [label="(Literal,\" rx_bufs_policy = ADVERT\")"];
"1001065" [label="(Literal,\" rx_bufs_multiples = %u\")"];
"1001050" [label="(Identifier,buf)"];
"1001064" [label="(Identifier,fp)"];
"1001063" [label="(Call,conf_write(fp, \" rx_bufs_multiples = %u\", global_data->vrrp_rx_bufs_multiples))"];
"1001023" [label="(ControlStructure,if (global_data->vrrp_rx_bufs_policy & RX_BUFS_POLICY_MTU))"];
"1001026" [label="(Identifier,global_data)"];
"1001052" [label="(Call,global_data->vrrp_rx_bufs_size)"];
"1001075" [label="(MethodReturn,RET)"];
"1000101" [label="(MethodParameterIn,FILE *fp)"];
"1001072" [label="(Call,global_data->umask)"];
"1001060" [label="(Identifier,fp)"];
"1001069" [label="(Call,conf_write(fp, \" umask = 0%o\", global_data->umask))"];
"1001071" [label="(Literal,\" umask = 0%o\")"];
"1001033" [label="(ControlStructure,if (global_data->vrrp_rx_bufs_policy & RX_BUFS_POLICY_ADVERT))"];
"1001062" [label="(Identifier,buf)"];
"1001012" [label="(Call,conf_write(fp, \" no_checker_emails = %u\", global_data->no_checker_emails))"];
"1001043" [label="(ControlStructure,if (global_data->vrrp_rx_bufs_policy & RX_BUFS_SIZE))"];
"1001066" [label="(Call,global_data->vrrp_rx_bufs_multiples)"];
"1001070" [label="(Identifier,fp)"];
"1001031" [label="(Literal,\" rx_bufs_policy = MTU\")"];
"1001049" [label="(Call,sprintf(buf, \" rx_bufs_size = %lu\", global_data->vrrp_rx_bufs_size))"];
"1001029" [label="(Call,strcpy(buf, \" rx_bufs_policy = MTU\"))"];
"1001040" [label="(Identifier,buf)"];
"1001018" -> "1000103"  [label="AST: "];
"1001018" -> "1001022"  [label="CFG: "];
"1001019" -> "1001018"  [label="AST: "];
"1001022" -> "1001018"  [label="AST: "];
"1001026" -> "1001018"  [label="CFG: "];
"1001018" -> "1001075"  [label="DDG: "];
"1001018" -> "1001029"  [label="DDG: "];
"1001018" -> "1001039"  [label="DDG: "];
"1001018" -> "1001049"  [label="DDG: "];
"1001018" -> "1001059"  [label="DDG: "];
"1001029" -> "1001023"  [label="AST: "];
"1001029" -> "1001031"  [label="CFG: "];
"1001030" -> "1001029"  [label="AST: "];
"1001031" -> "1001029"  [label="AST: "];
"1001057" -> "1001029"  [label="CFG: "];
"1001029" -> "1001075"  [label="DDG: "];
"1001029" -> "1001075"  [label="DDG: "];
"1001029" -> "1001059"  [label="DDG: "];
"1001059" -> "1001055"  [label="AST: "];
"1001059" -> "1001062"  [label="CFG: "];
"1001060" -> "1001059"  [label="AST: "];
"1001061" -> "1001059"  [label="AST: "];
"1001062" -> "1001059"  [label="AST: "];
"1001064" -> "1001059"  [label="CFG: "];
"1001059" -> "1001075"  [label="DDG: "];
"1001059" -> "1001075"  [label="DDG: "];
"1001012" -> "1001059"  [label="DDG: "];
"1000101" -> "1001059"  [label="DDG: "];
"1001039" -> "1001059"  [label="DDG: "];
"1001049" -> "1001059"  [label="DDG: "];
"1001059" -> "1001063"  [label="DDG: "];
"1001063" -> "1000103"  [label="AST: "];
"1001063" -> "1001066"  [label="CFG: "];
"1001064" -> "1001063"  [label="AST: "];
"1001065" -> "1001063"  [label="AST: "];
"1001066" -> "1001063"  [label="AST: "];
"1001070" -> "1001063"  [label="CFG: "];
"1001063" -> "1001075"  [label="DDG: "];
"1001063" -> "1001075"  [label="DDG: "];
"1001012" -> "1001063"  [label="DDG: "];
"1000101" -> "1001063"  [label="DDG: "];
"1001063" -> "1001069"  [label="DDG: "];
"1001069" -> "1000103"  [label="AST: "];
"1001069" -> "1001072"  [label="CFG: "];
"1001070" -> "1001069"  [label="AST: "];
"1001071" -> "1001069"  [label="AST: "];
"1001072" -> "1001069"  [label="AST: "];
"1001075" -> "1001069"  [label="CFG: "];
"1001069" -> "1001075"  [label="DDG: "];
"1001069" -> "1001075"  [label="DDG: "];
"1001069" -> "1001075"  [label="DDG: "];
"1000101" -> "1001069"  [label="DDG: "];
"1001039" -> "1001033"  [label="AST: "];
"1001039" -> "1001041"  [label="CFG: "];
"1001040" -> "1001039"  [label="AST: "];
"1001041" -> "1001039"  [label="AST: "];
"1001057" -> "1001039"  [label="CFG: "];
"1001039" -> "1001075"  [label="DDG: "];
"1001039" -> "1001075"  [label="DDG: "];
"1001049" -> "1001043"  [label="AST: "];
"1001049" -> "1001052"  [label="CFG: "];
"1001050" -> "1001049"  [label="AST: "];
"1001051" -> "1001049"  [label="AST: "];
"1001052" -> "1001049"  [label="AST: "];
"1001057" -> "1001049"  [label="CFG: "];
"1001049" -> "1001075"  [label="DDG: "];
"1001049" -> "1001075"  [label="DDG: "];
"1001049" -> "1001075"  [label="DDG: "];
}
