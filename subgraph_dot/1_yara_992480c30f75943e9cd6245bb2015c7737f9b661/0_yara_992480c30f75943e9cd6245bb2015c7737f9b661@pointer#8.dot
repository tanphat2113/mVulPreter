digraph "0_yara_992480c30f75943e9cd6245bb2015c7737f9b661@pointer" {
"1000384" [label="(Call,*(next_opcode) == RE_OPCODE_LITERAL)"];
"1000379" [label="(Call,*(next_opcode) != RE_OPCODE_LITERAL)"];
"1000384" [label="(Call,*(next_opcode) == RE_OPCODE_LITERAL)"];
"1000378" [label="(Call,*(next_opcode) != RE_OPCODE_LITERAL ||\n                 (*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input))"];
"1000383" [label="(Call,*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input)"];
"1000383" [label="(Call,*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input)"];
"1000452" [label="(MethodReturn,int)"];
"1000380" [label="(Call,*(next_opcode))"];
"1000387" [label="(Identifier,RE_OPCODE_LITERAL)"];
"1000388" [label="(Call,*(next_opcode + 1) == *next_input)"];
"1000385" [label="(Call,*(next_opcode))"];
"1000382" [label="(Identifier,RE_OPCODE_LITERAL)"];
"1000398" [label="(Identifier,sp)"];
"1000361" [label="(Identifier,i)"];
"1000377" [label="(ControlStructure,if ( *(next_opcode) != RE_OPCODE_LITERAL ||\n                 (*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input)))"];
"1000379" [label="(Call,*(next_opcode) != RE_OPCODE_LITERAL)"];
"1000378" [label="(Call,*(next_opcode) != RE_OPCODE_LITERAL ||\n                 (*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input))"];
"1000384" [label="(Call,*(next_opcode) == RE_OPCODE_LITERAL)"];
"1000391" [label="(Identifier,next_opcode)"];
"1000386" [label="(Identifier,next_opcode)"];
"1000384" -> "1000383"  [label="AST: "];
"1000384" -> "1000387"  [label="CFG: "];
"1000385" -> "1000384"  [label="AST: "];
"1000387" -> "1000384"  [label="AST: "];
"1000391" -> "1000384"  [label="CFG: "];
"1000383" -> "1000384"  [label="CFG: "];
"1000384" -> "1000452"  [label="DDG: RE_OPCODE_LITERAL"];
"1000384" -> "1000452"  [label="DDG: *(next_opcode)"];
"1000384" -> "1000379"  [label="DDG: *(next_opcode)"];
"1000384" -> "1000379"  [label="DDG: RE_OPCODE_LITERAL"];
"1000384" -> "1000383"  [label="DDG: *(next_opcode)"];
"1000384" -> "1000383"  [label="DDG: RE_OPCODE_LITERAL"];
"1000379" -> "1000384"  [label="DDG: *(next_opcode)"];
"1000379" -> "1000384"  [label="DDG: RE_OPCODE_LITERAL"];
"1000379" -> "1000378"  [label="AST: "];
"1000379" -> "1000382"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000382" -> "1000379"  [label="AST: "];
"1000386" -> "1000379"  [label="CFG: "];
"1000378" -> "1000379"  [label="CFG: "];
"1000379" -> "1000452"  [label="DDG: *(next_opcode)"];
"1000379" -> "1000452"  [label="DDG: RE_OPCODE_LITERAL"];
"1000379" -> "1000378"  [label="DDG: *(next_opcode)"];
"1000379" -> "1000378"  [label="DDG: RE_OPCODE_LITERAL"];
"1000378" -> "1000377"  [label="AST: "];
"1000378" -> "1000383"  [label="CFG: "];
"1000383" -> "1000378"  [label="AST: "];
"1000398" -> "1000378"  [label="CFG: "];
"1000361" -> "1000378"  [label="CFG: "];
"1000378" -> "1000452"  [label="DDG: *(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input"];
"1000378" -> "1000452"  [label="DDG: *(next_opcode) != RE_OPCODE_LITERAL"];
"1000378" -> "1000452"  [label="DDG: *(next_opcode) != RE_OPCODE_LITERAL ||\n                 (*(next_opcode) == RE_OPCODE_LITERAL &&\n                  *(next_opcode + 1) == *next_input)"];
"1000383" -> "1000378"  [label="DDG: *(next_opcode) == RE_OPCODE_LITERAL"];
"1000383" -> "1000378"  [label="DDG: *(next_opcode + 1) == *next_input"];
"1000383" -> "1000388"  [label="CFG: "];
"1000388" -> "1000383"  [label="AST: "];
"1000383" -> "1000452"  [label="DDG: *(next_opcode) == RE_OPCODE_LITERAL"];
"1000383" -> "1000452"  [label="DDG: *(next_opcode + 1) == *next_input"];
"1000388" -> "1000383"  [label="DDG: *(next_opcode + 1)"];
"1000388" -> "1000383"  [label="DDG: *next_input"];
}
