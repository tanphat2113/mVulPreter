digraph "0_yara_992480c30f75943e9cd6245bb2015c7737f9b661@pointer" {
"1000107" [label="(MethodParameterIn,void* callback_args)"];
"1000220" [label="(Call,callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args))"];
"1000215" [label="(Call,flags & RE_FLAGS_EXHAUSTIVE)"];
"1000222" [label="(Call,flags & RE_FLAGS_BACKWARDS)"];
"1000219" [label="(Call,FAIL_ON_ERROR(callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args)))"];
"1000307" [label="(Call,bytes_matched++)"];
"1000196" [label="(Call,bytes_matched = matches_stack[sp])"];
"1000224" [label="(Identifier,RE_FLAGS_BACKWARDS)"];
"1000220" [label="(Call,callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args))"];
"1000221" [label="(Call,flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data)"];
"1000246" [label="(Call,bytes_matched >= max_bytes_matched)"];
"1000191" [label="(Call,input = input_stack[sp])"];
"1000232" [label="(ControlStructure,break;)"];
"1000422" [label="(Call,input += input_incr * repeat_any_args->min)"];
"1000223" [label="(Identifier,flags)"];
"1000215" [label="(Call,flags & RE_FLAGS_EXHAUSTIVE)"];
"1000222" [label="(Call,flags & RE_FLAGS_BACKWARDS)"];
"1000157" [label="(Call,flags & RE_FLAGS_BACKWARDS)"];
"1000219" [label="(Call,FAIL_ON_ERROR(callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args)))"];
"1000309" [label="(Call,input += input_incr)"];
"1000214" [label="(ControlStructure,if (flags & RE_FLAGS_EXHAUSTIVE))"];
"1000216" [label="(Identifier,flags)"];
"1000264" [label="(Call,bytes_matched++)"];
"1000230" [label="(Identifier,flags)"];
"1000452" [label="(MethodReturn,int)"];
"1000237" [label="(Identifier,matches)"];
"1000217" [label="(Identifier,RE_FLAGS_EXHAUSTIVE)"];
"1000229" [label="(Identifier,bytes_matched)"];
"1000266" [label="(Call,input += input_incr)"];
"1000107" [label="(MethodParameterIn,void* callback_args)"];
"1000429" [label="(Call,bytes_matched += repeat_any_args->min)"];
"1000322" [label="(Call,bytes_matched++)"];
"1000102" [label="(MethodParameterIn,uint8_t* input_data)"];
"1000228" [label="(Identifier,input_data)"];
"1000226" [label="(Identifier,input)"];
"1000231" [label="(Identifier,callback_args)"];
"1000218" [label="(Block,)"];
"1000105" [label="(MethodParameterIn,int flags)"];
"1000324" [label="(Call,input += input_incr)"];
"1000107" -> "1000100"  [label="AST: "];
"1000107" -> "1000452"  [label="DDG: callback_args"];
"1000107" -> "1000220"  [label="DDG: callback_args"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000231"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000229" -> "1000220"  [label="AST: "];
"1000230" -> "1000220"  [label="AST: "];
"1000231" -> "1000220"  [label="AST: "];
"1000219" -> "1000220"  [label="CFG: "];
"1000220" -> "1000452"  [label="DDG: flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data"];
"1000220" -> "1000452"  [label="DDG: bytes_matched"];
"1000220" -> "1000452"  [label="DDG: callback_args"];
"1000220" -> "1000452"  [label="DDG: flags"];
"1000220" -> "1000215"  [label="DDG: flags"];
"1000220" -> "1000219"  [label="DDG: flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data"];
"1000220" -> "1000219"  [label="DDG: bytes_matched"];
"1000220" -> "1000219"  [label="DDG: flags"];
"1000220" -> "1000219"  [label="DDG: callback_args"];
"1000309" -> "1000220"  [label="DDG: input"];
"1000266" -> "1000220"  [label="DDG: input"];
"1000422" -> "1000220"  [label="DDG: input"];
"1000324" -> "1000220"  [label="DDG: input"];
"1000191" -> "1000220"  [label="DDG: input"];
"1000102" -> "1000220"  [label="DDG: input_data"];
"1000264" -> "1000220"  [label="DDG: bytes_matched"];
"1000196" -> "1000220"  [label="DDG: bytes_matched"];
"1000322" -> "1000220"  [label="DDG: bytes_matched"];
"1000429" -> "1000220"  [label="DDG: bytes_matched"];
"1000307" -> "1000220"  [label="DDG: bytes_matched"];
"1000246" -> "1000220"  [label="DDG: bytes_matched"];
"1000222" -> "1000220"  [label="DDG: flags"];
"1000105" -> "1000220"  [label="DDG: flags"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000223" -> "1000215"  [label="CFG: "];
"1000237" -> "1000215"  [label="CFG: "];
"1000215" -> "1000452"  [label="DDG: flags"];
"1000215" -> "1000452"  [label="DDG: RE_FLAGS_EXHAUSTIVE"];
"1000215" -> "1000452"  [label="DDG: flags & RE_FLAGS_EXHAUSTIVE"];
"1000157" -> "1000215"  [label="DDG: flags"];
"1000105" -> "1000215"  [label="DDG: flags"];
"1000215" -> "1000222"  [label="DDG: flags"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000226" -> "1000222"  [label="CFG: "];
"1000228" -> "1000222"  [label="CFG: "];
"1000222" -> "1000452"  [label="DDG: RE_FLAGS_BACKWARDS"];
"1000105" -> "1000222"  [label="DDG: flags"];
"1000157" -> "1000222"  [label="DDG: RE_FLAGS_BACKWARDS"];
"1000219" -> "1000218"  [label="AST: "];
"1000232" -> "1000219"  [label="CFG: "];
"1000219" -> "1000452"  [label="DDG: FAIL_ON_ERROR(callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args))"];
"1000219" -> "1000452"  [label="DDG: callback(\n             flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,\n             bytes_matched,\n             flags,\n             callback_args)"];
}
