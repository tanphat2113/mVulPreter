digraph "0_libarchive_d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7@pointer" {
"1000445" [label="(Call,zip->stream.total_out = 0)"];
"1000502" [label="(Call,metadata_bytes -= zip->stream.total_out)"];
"1000356" [label="(Call,(size_t)bytes_avail > metadata_bytes)"];
"1000361" [label="(Call,bytes_avail = metadata_bytes)"];
"1000364" [label="(Call,memcpy(mp, p, bytes_avail))"];
"1000370" [label="(Call,(size_t)bytes_avail)"];
"1000342" [label="(Call,(size_t)bytes_avail)"];
"1000341" [label="(Call,(size_t)bytes_avail > remaining_bytes)"];
"1000346" [label="(Call,bytes_avail = remaining_bytes)"];
"1000357" [label="(Call,(size_t)bytes_avail)"];
"1000419" [label="(Call,(uInt)bytes_avail)"];
"1000413" [label="(Call,zip->stream.avail_in = (uInt)bytes_avail)"];
"1000525" [label="(Call,remaining_bytes -= bytes_used)"];
"1000309" [label="(Call,!eof && remaining_bytes)"];
"1000368" [label="(Call,bytes_used = (size_t)bytes_avail)"];
"1000373" [label="(Call,metadata_bytes -= bytes_used)"];
"1000380" [label="(Call,metadata_bytes == 0)"];
"1000442" [label="(Call,(uInt)metadata_bytes)"];
"1000436" [label="(Call,zip->stream.avail_out = (uInt)metadata_bytes)"];
"1000531" [label="(Call,(size_t)rsrc->uncompressed_size - metadata_bytes)"];
"1000528" [label="(Call,archive_entry_copy_mac_metadata(entry, metadata,\n\t    (size_t)rsrc->uncompressed_size - metadata_bytes))"];
"1000548" [label="(Call,free(metadata))"];
"1000376" [label="(Call,mp += bytes_used)"];
"1000429" [label="(Call,zip->stream.next_out = mp)"];
"1000509" [label="(Call,mp += zip->stream.total_out)"];
"1000522" [label="(Call,__archive_read_consume(a, bytes_used))"];
"1000319" [label="(Call,__archive_read_ahead(a, 1, &bytes_avail))"];
"1000317" [label="(Call,p = __archive_read_ahead(a, 1, &bytes_avail))"];
"1000325" [label="(Call,p == NULL)"];
"1000410" [label="(Call,(const void *)p)"];
"1000408" [label="(Call,(uintptr_t)(const void *)p)"];
"1000406" [label="(Call,(Bytef *)(uintptr_t)(const void *)p)"];
"1000400" [label="(Call,zip->stream.next_in =\n\t\t\t    (Bytef *)(uintptr_t)(const void *)p)"];
"1000392" [label="(Call,zip_deflate_init(a, zip))"];
"1000390" [label="(Call,ret = zip_deflate_init(a, zip))"];
"1000396" [label="(Call,ret != ARCHIVE_OK)"];
"1000550" [label="(Return,return (ret);)"];
"1000539" [label="(Call,__archive_read_seek(a, offset, SEEK_SET))"];
"1000538" [label="(JumpTarget,exit_mac_metadata:)"];
"1000321" [label="(Literal,1)"];
"1000549" [label="(Identifier,metadata)"];
"1000410" [label="(Call,(const void *)p)"];
"1000312" [label="(Identifier,remaining_bytes)"];
"1000240" [label="(Call,metadata == NULL)"];
"1000364" [label="(Call,memcpy(mp, p, bytes_avail))"];
"1000421" [label="(Identifier,bytes_avail)"];
"1000393" [label="(Identifier,a)"];
"1000373" [label="(Call,metadata_bytes -= bytes_used)"];
"1000439" [label="(Identifier,zip)"];
"1000425" [label="(Identifier,zip)"];
"1000381" [label="(Identifier,metadata_bytes)"];
"1000532" [label="(Call,(size_t)rsrc->uncompressed_size)"];
"1000347" [label="(Identifier,bytes_avail)"];
"1000310" [label="(Call,!eof)"];
"1000285" [label="(Call,__archive_read_consume(a, hsize))"];
"1000109" [label="(MethodParameterIn,struct archive_entry *entry)"];
"1000369" [label="(Identifier,bytes_used)"];
"1000446" [label="(Call,zip->stream.total_out)"];
"1000445" [label="(Call,zip->stream.total_out = 0)"];
"1000327" [label="(Identifier,NULL)"];
"1000302" [label="(Call,mp = metadata)"];
"1000537" [label="(Identifier,metadata_bytes)"];
"1000341" [label="(Call,(size_t)bytes_avail > remaining_bytes)"];
"1000542" [label="(Identifier,SEEK_SET)"];
"1000309" [label="(Call,!eof && remaining_bytes)"];
"1000529" [label="(Identifier,entry)"];
"1000363" [label="(Identifier,metadata_bytes)"];
"1000539" [label="(Call,__archive_read_seek(a, offset, SEEK_SET))"];
"1000311" [label="(Identifier,eof)"];
"1000516" [label="(ControlStructure,break;)"];
"1000435" [label="(Identifier,mp)"];
"1000413" [label="(Call,zip->stream.avail_in = (uInt)bytes_avail)"];
"1000406" [label="(Call,(Bytef *)(uintptr_t)(const void *)p)"];
"1000391" [label="(Identifier,ret)"];
"1000356" [label="(Call,(size_t)bytes_avail > metadata_bytes)"];
"1000355" [label="(ControlStructure,if ((size_t)bytes_avail > metadata_bytes))"];
"1000374" [label="(Identifier,metadata_bytes)"];
"1000368" [label="(Call,bytes_used = (size_t)bytes_avail)"];
"1000390" [label="(Call,ret = zip_deflate_init(a, zip))"];
"1000375" [label="(Identifier,bytes_used)"];
"1000448" [label="(Identifier,zip)"];
"1000412" [label="(Identifier,p)"];
"1000377" [label="(Identifier,mp)"];
"1000388" [label="(Block,)"];
"1000526" [label="(Identifier,remaining_bytes)"];
"1000359" [label="(Identifier,bytes_avail)"];
"1000419" [label="(Call,(uInt)bytes_avail)"];
"1000320" [label="(Identifier,a)"];
"1000382" [label="(Literal,0)"];
"1000318" [label="(Identifier,p)"];
"1000113" [label="(Call,*zip = (struct zip *)a->format->data)"];
"1000380" [label="(Call,metadata_bytes == 0)"];
"1000348" [label="(Identifier,remaining_bytes)"];
"1000384" [label="(Identifier,eof)"];
"1000324" [label="(ControlStructure,if (p == NULL))"];
"1000397" [label="(Identifier,ret)"];
"1000322" [label="(Call,&bytes_avail)"];
"1000137" [label="(Call,ret = ARCHIVE_OK)"];
"1000370" [label="(Call,(size_t)bytes_avail)"];
"1000274" [label="(Call,__archive_read_seek(a, rsrc->local_header_offset, SEEK_SET))"];
"1000111" [label="(Block,)"];
"1000108" [label="(MethodParameterIn,struct archive_read *a)"];
"1000429" [label="(Call,zip->stream.next_out = mp)"];
"1000528" [label="(Call,archive_entry_copy_mac_metadata(entry, metadata,\n\t    (size_t)rsrc->uncompressed_size - metadata_bytes))"];
"1000504" [label="(Call,zip->stream.total_out)"];
"1000308" [label="(ControlStructure,while (!eof && remaining_bytes))"];
"1000361" [label="(Call,bytes_avail = metadata_bytes)"];
"1000395" [label="(ControlStructure,if (ret != ARCHIVE_OK))"];
"1000545" [label="(Identifier,zip)"];
"1000366" [label="(Identifier,p)"];
"1000394" [label="(Identifier,zip)"];
"1000342" [label="(Call,(size_t)bytes_avail)"];
"1000453" [label="(Identifier,r)"];
"1000288" [label="(Call,remaining_bytes = (size_t)rsrc->compressed_size)"];
"1000437" [label="(Call,zip->stream.avail_out)"];
"1000523" [label="(Identifier,a)"];
"1000548" [label="(Call,free(metadata))"];
"1000317" [label="(Call,p = __archive_read_ahead(a, 1, &bytes_avail))"];
"1000399" [label="(ControlStructure,goto exit_mac_metadata;)"];
"1000401" [label="(Call,zip->stream.next_in)"];
"1000430" [label="(Call,zip->stream.next_out)"];
"1000444" [label="(Identifier,metadata_bytes)"];
"1000398" [label="(Identifier,ARCHIVE_OK)"];
"1000550" [label="(Return,return (ret);)"];
"1000510" [label="(Identifier,mp)"];
"1000400" [label="(Call,zip->stream.next_in =\n\t\t\t    (Bytef *)(uintptr_t)(const void *)p)"];
"1000530" [label="(Identifier,metadata)"];
"1000495" [label="(Call,bytes_used = zip->stream.total_in)"];
"1000353" [label="(Block,)"];
"1000540" [label="(Identifier,a)"];
"1000416" [label="(Identifier,zip)"];
"1000346" [label="(Call,bytes_avail = remaining_bytes)"];
"1000552" [label="(MethodReturn,RET)"];
"1000340" [label="(ControlStructure,if ((size_t)bytes_avail > remaining_bytes))"];
"1000379" [label="(ControlStructure,if (metadata_bytes == 0))"];
"1000295" [label="(Call,metadata_bytes = (size_t)rsrc->uncompressed_size)"];
"1000261" [label="(Call,rsrc->local_header_offset - offset)"];
"1000478" [label="(Call,ret = ARCHIVE_FATAL)"];
"1000451" [label="(Literal,0)"];
"1000360" [label="(Identifier,metadata_bytes)"];
"1000408" [label="(Call,(uintptr_t)(const void *)p)"];
"1000522" [label="(Call,__archive_read_consume(a, bytes_used))"];
"1000511" [label="(Call,zip->stream.total_out)"];
"1000396" [label="(Call,ret != ARCHIVE_OK)"];
"1000541" [label="(Identifier,offset)"];
"1000365" [label="(Identifier,mp)"];
"1000525" [label="(Call,remaining_bytes -= bytes_used)"];
"1000551" [label="(Identifier,ret)"];
"1000319" [label="(Call,__archive_read_ahead(a, 1, &bytes_avail))"];
"1000268" [label="(Call,offset != rsrc->local_header_offset)"];
"1000509" [label="(Call,mp += zip->stream.total_out)"];
"1000357" [label="(Call,(size_t)bytes_avail)"];
"1000518" [label="(Call,bytes_used = 0)"];
"1000313" [label="(Block,)"];
"1000531" [label="(Call,(size_t)rsrc->uncompressed_size - metadata_bytes)"];
"1000442" [label="(Call,(uInt)metadata_bytes)"];
"1000491" [label="(Call,ret = ARCHIVE_FATAL)"];
"1000414" [label="(Call,zip->stream.avail_in)"];
"1000326" [label="(Identifier,p)"];
"1000378" [label="(Identifier,bytes_used)"];
"1000367" [label="(Identifier,bytes_avail)"];
"1000345" [label="(Identifier,remaining_bytes)"];
"1000524" [label="(Identifier,bytes_used)"];
"1000344" [label="(Identifier,bytes_avail)"];
"1000403" [label="(Identifier,zip)"];
"1000503" [label="(Identifier,metadata_bytes)"];
"1000336" [label="(Call,ret = ARCHIVE_WARN)"];
"1000502" [label="(Call,metadata_bytes -= zip->stream.total_out)"];
"1000386" [label="(ControlStructure,break;)"];
"1000362" [label="(Identifier,bytes_avail)"];
"1000325" [label="(Call,p == NULL)"];
"1000527" [label="(Identifier,bytes_used)"];
"1000392" [label="(Call,zip_deflate_init(a, zip))"];
"1000332" [label="(Identifier,a)"];
"1000436" [label="(Call,zip->stream.avail_out = (uInt)metadata_bytes)"];
"1000372" [label="(Identifier,bytes_avail)"];
"1000376" [label="(Call,mp += bytes_used)"];
"1000351" [label="(Identifier,rsrc)"];
"1000445" -> "1000388"  [label="AST: "];
"1000445" -> "1000451"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000451" -> "1000445"  [label="AST: "];
"1000453" -> "1000445"  [label="CFG: "];
"1000445" -> "1000552"  [label="DDG: zip->stream.total_out"];
"1000445" -> "1000502"  [label="DDG: zip->stream.total_out"];
"1000445" -> "1000509"  [label="DDG: zip->stream.total_out"];
"1000502" -> "1000388"  [label="AST: "];
"1000502" -> "1000504"  [label="CFG: "];
"1000503" -> "1000502"  [label="AST: "];
"1000504" -> "1000502"  [label="AST: "];
"1000510" -> "1000502"  [label="CFG: "];
"1000502" -> "1000552"  [label="DDG: metadata_bytes"];
"1000502" -> "1000356"  [label="DDG: metadata_bytes"];
"1000502" -> "1000442"  [label="DDG: metadata_bytes"];
"1000295" -> "1000502"  [label="DDG: metadata_bytes"];
"1000380" -> "1000502"  [label="DDG: metadata_bytes"];
"1000442" -> "1000502"  [label="DDG: metadata_bytes"];
"1000502" -> "1000531"  [label="DDG: metadata_bytes"];
"1000356" -> "1000355"  [label="AST: "];
"1000356" -> "1000360"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000360" -> "1000356"  [label="AST: "];
"1000362" -> "1000356"  [label="CFG: "];
"1000365" -> "1000356"  [label="CFG: "];
"1000356" -> "1000552"  [label="DDG: (size_t)bytes_avail > metadata_bytes"];
"1000357" -> "1000356"  [label="DDG: bytes_avail"];
"1000295" -> "1000356"  [label="DDG: metadata_bytes"];
"1000380" -> "1000356"  [label="DDG: metadata_bytes"];
"1000442" -> "1000356"  [label="DDG: metadata_bytes"];
"1000356" -> "1000361"  [label="DDG: metadata_bytes"];
"1000356" -> "1000373"  [label="DDG: metadata_bytes"];
"1000361" -> "1000355"  [label="AST: "];
"1000361" -> "1000363"  [label="CFG: "];
"1000362" -> "1000361"  [label="AST: "];
"1000363" -> "1000361"  [label="AST: "];
"1000365" -> "1000361"  [label="CFG: "];
"1000361" -> "1000364"  [label="DDG: bytes_avail"];
"1000364" -> "1000353"  [label="AST: "];
"1000364" -> "1000367"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000366" -> "1000364"  [label="AST: "];
"1000367" -> "1000364"  [label="AST: "];
"1000369" -> "1000364"  [label="CFG: "];
"1000364" -> "1000552"  [label="DDG: memcpy(mp, p, bytes_avail)"];
"1000364" -> "1000552"  [label="DDG: p"];
"1000376" -> "1000364"  [label="DDG: mp"];
"1000302" -> "1000364"  [label="DDG: mp"];
"1000509" -> "1000364"  [label="DDG: mp"];
"1000325" -> "1000364"  [label="DDG: p"];
"1000357" -> "1000364"  [label="DDG: bytes_avail"];
"1000364" -> "1000370"  [label="DDG: bytes_avail"];
"1000364" -> "1000376"  [label="DDG: mp"];
"1000370" -> "1000368"  [label="AST: "];
"1000370" -> "1000372"  [label="CFG: "];
"1000371" -> "1000370"  [label="AST: "];
"1000372" -> "1000370"  [label="AST: "];
"1000368" -> "1000370"  [label="CFG: "];
"1000370" -> "1000552"  [label="DDG: bytes_avail"];
"1000370" -> "1000342"  [label="DDG: bytes_avail"];
"1000370" -> "1000368"  [label="DDG: bytes_avail"];
"1000342" -> "1000341"  [label="AST: "];
"1000342" -> "1000344"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000345" -> "1000342"  [label="CFG: "];
"1000342" -> "1000552"  [label="DDG: bytes_avail"];
"1000342" -> "1000341"  [label="DDG: bytes_avail"];
"1000346" -> "1000342"  [label="DDG: bytes_avail"];
"1000419" -> "1000342"  [label="DDG: bytes_avail"];
"1000342" -> "1000357"  [label="DDG: bytes_avail"];
"1000342" -> "1000419"  [label="DDG: bytes_avail"];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000345"  [label="CFG: "];
"1000345" -> "1000341"  [label="AST: "];
"1000347" -> "1000341"  [label="CFG: "];
"1000351" -> "1000341"  [label="CFG: "];
"1000341" -> "1000552"  [label="DDG: (size_t)bytes_avail"];
"1000341" -> "1000552"  [label="DDG: remaining_bytes"];
"1000341" -> "1000552"  [label="DDG: (size_t)bytes_avail > remaining_bytes"];
"1000309" -> "1000341"  [label="DDG: remaining_bytes"];
"1000341" -> "1000346"  [label="DDG: remaining_bytes"];
"1000341" -> "1000525"  [label="DDG: remaining_bytes"];
"1000346" -> "1000340"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000351" -> "1000346"  [label="CFG: "];
"1000346" -> "1000552"  [label="DDG: remaining_bytes"];
"1000346" -> "1000552"  [label="DDG: bytes_avail"];
"1000346" -> "1000357"  [label="DDG: bytes_avail"];
"1000346" -> "1000419"  [label="DDG: bytes_avail"];
"1000357" -> "1000359"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000359" -> "1000357"  [label="AST: "];
"1000360" -> "1000357"  [label="CFG: "];
"1000419" -> "1000413"  [label="AST: "];
"1000419" -> "1000421"  [label="CFG: "];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000419"  [label="AST: "];
"1000413" -> "1000419"  [label="CFG: "];
"1000419" -> "1000552"  [label="DDG: bytes_avail"];
"1000419" -> "1000413"  [label="DDG: bytes_avail"];
"1000413" -> "1000388"  [label="AST: "];
"1000414" -> "1000413"  [label="AST: "];
"1000425" -> "1000413"  [label="CFG: "];
"1000413" -> "1000552"  [label="DDG: zip->stream.avail_in"];
"1000413" -> "1000552"  [label="DDG: (uInt)bytes_avail"];
"1000525" -> "1000313"  [label="AST: "];
"1000525" -> "1000527"  [label="CFG: "];
"1000526" -> "1000525"  [label="AST: "];
"1000527" -> "1000525"  [label="AST: "];
"1000311" -> "1000525"  [label="CFG: "];
"1000525" -> "1000552"  [label="DDG: bytes_used"];
"1000525" -> "1000309"  [label="DDG: remaining_bytes"];
"1000522" -> "1000525"  [label="DDG: bytes_used"];
"1000309" -> "1000308"  [label="AST: "];
"1000309" -> "1000310"  [label="CFG: "];
"1000309" -> "1000312"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000312" -> "1000309"  [label="AST: "];
"1000318" -> "1000309"  [label="CFG: "];
"1000529" -> "1000309"  [label="CFG: "];
"1000309" -> "1000552"  [label="DDG: !eof"];
"1000309" -> "1000552"  [label="DDG: !eof && remaining_bytes"];
"1000309" -> "1000552"  [label="DDG: remaining_bytes"];
"1000310" -> "1000309"  [label="DDG: eof"];
"1000288" -> "1000309"  [label="DDG: remaining_bytes"];
"1000368" -> "1000353"  [label="AST: "];
"1000369" -> "1000368"  [label="AST: "];
"1000374" -> "1000368"  [label="CFG: "];
"1000368" -> "1000552"  [label="DDG: (size_t)bytes_avail"];
"1000368" -> "1000373"  [label="DDG: bytes_used"];
"1000368" -> "1000376"  [label="DDG: bytes_used"];
"1000368" -> "1000522"  [label="DDG: bytes_used"];
"1000373" -> "1000353"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000375" -> "1000373"  [label="AST: "];
"1000377" -> "1000373"  [label="CFG: "];
"1000373" -> "1000380"  [label="DDG: metadata_bytes"];
"1000380" -> "1000379"  [label="AST: "];
"1000380" -> "1000382"  [label="CFG: "];
"1000381" -> "1000380"  [label="AST: "];
"1000382" -> "1000380"  [label="AST: "];
"1000384" -> "1000380"  [label="CFG: "];
"1000386" -> "1000380"  [label="CFG: "];
"1000380" -> "1000552"  [label="DDG: metadata_bytes == 0"];
"1000380" -> "1000552"  [label="DDG: metadata_bytes"];
"1000380" -> "1000442"  [label="DDG: metadata_bytes"];
"1000380" -> "1000531"  [label="DDG: metadata_bytes"];
"1000442" -> "1000436"  [label="AST: "];
"1000442" -> "1000444"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="AST: "];
"1000436" -> "1000442"  [label="CFG: "];
"1000442" -> "1000552"  [label="DDG: metadata_bytes"];
"1000442" -> "1000436"  [label="DDG: metadata_bytes"];
"1000295" -> "1000442"  [label="DDG: metadata_bytes"];
"1000442" -> "1000531"  [label="DDG: metadata_bytes"];
"1000436" -> "1000388"  [label="AST: "];
"1000437" -> "1000436"  [label="AST: "];
"1000448" -> "1000436"  [label="CFG: "];
"1000436" -> "1000552"  [label="DDG: (uInt)metadata_bytes"];
"1000436" -> "1000552"  [label="DDG: zip->stream.avail_out"];
"1000531" -> "1000528"  [label="AST: "];
"1000531" -> "1000537"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000537" -> "1000531"  [label="AST: "];
"1000528" -> "1000531"  [label="CFG: "];
"1000531" -> "1000552"  [label="DDG: (size_t)rsrc->uncompressed_size"];
"1000531" -> "1000552"  [label="DDG: metadata_bytes"];
"1000531" -> "1000528"  [label="DDG: (size_t)rsrc->uncompressed_size"];
"1000531" -> "1000528"  [label="DDG: metadata_bytes"];
"1000532" -> "1000531"  [label="DDG: rsrc->uncompressed_size"];
"1000295" -> "1000531"  [label="DDG: metadata_bytes"];
"1000528" -> "1000111"  [label="AST: "];
"1000529" -> "1000528"  [label="AST: "];
"1000530" -> "1000528"  [label="AST: "];
"1000538" -> "1000528"  [label="CFG: "];
"1000528" -> "1000552"  [label="DDG: archive_entry_copy_mac_metadata(entry, metadata,\n\t    (size_t)rsrc->uncompressed_size - metadata_bytes)"];
"1000528" -> "1000552"  [label="DDG: (size_t)rsrc->uncompressed_size - metadata_bytes"];
"1000528" -> "1000552"  [label="DDG: entry"];
"1000109" -> "1000528"  [label="DDG: entry"];
"1000240" -> "1000528"  [label="DDG: metadata"];
"1000528" -> "1000548"  [label="DDG: metadata"];
"1000548" -> "1000111"  [label="AST: "];
"1000548" -> "1000549"  [label="CFG: "];
"1000549" -> "1000548"  [label="AST: "];
"1000551" -> "1000548"  [label="CFG: "];
"1000548" -> "1000552"  [label="DDG: metadata"];
"1000240" -> "1000548"  [label="DDG: metadata"];
"1000376" -> "1000353"  [label="AST: "];
"1000376" -> "1000378"  [label="CFG: "];
"1000377" -> "1000376"  [label="AST: "];
"1000378" -> "1000376"  [label="AST: "];
"1000381" -> "1000376"  [label="CFG: "];
"1000376" -> "1000552"  [label="DDG: mp"];
"1000376" -> "1000552"  [label="DDG: bytes_used"];
"1000376" -> "1000429"  [label="DDG: mp"];
"1000376" -> "1000509"  [label="DDG: mp"];
"1000429" -> "1000388"  [label="AST: "];
"1000429" -> "1000435"  [label="CFG: "];
"1000430" -> "1000429"  [label="AST: "];
"1000435" -> "1000429"  [label="AST: "];
"1000439" -> "1000429"  [label="CFG: "];
"1000429" -> "1000552"  [label="DDG: mp"];
"1000429" -> "1000552"  [label="DDG: zip->stream.next_out"];
"1000302" -> "1000429"  [label="DDG: mp"];
"1000509" -> "1000429"  [label="DDG: mp"];
"1000509" -> "1000388"  [label="AST: "];
"1000509" -> "1000511"  [label="CFG: "];
"1000510" -> "1000509"  [label="AST: "];
"1000511" -> "1000509"  [label="AST: "];
"1000516" -> "1000509"  [label="CFG: "];
"1000509" -> "1000552"  [label="DDG: zip->stream.total_out"];
"1000509" -> "1000552"  [label="DDG: mp"];
"1000302" -> "1000509"  [label="DDG: mp"];
"1000522" -> "1000313"  [label="AST: "];
"1000522" -> "1000524"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000524" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="CFG: "];
"1000522" -> "1000552"  [label="DDG: __archive_read_consume(a, bytes_used)"];
"1000522" -> "1000319"  [label="DDG: a"];
"1000392" -> "1000522"  [label="DDG: a"];
"1000319" -> "1000522"  [label="DDG: a"];
"1000108" -> "1000522"  [label="DDG: a"];
"1000495" -> "1000522"  [label="DDG: bytes_used"];
"1000518" -> "1000522"  [label="DDG: bytes_used"];
"1000522" -> "1000539"  [label="DDG: a"];
"1000319" -> "1000317"  [label="AST: "];
"1000319" -> "1000322"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000321" -> "1000319"  [label="AST: "];
"1000322" -> "1000319"  [label="AST: "];
"1000317" -> "1000319"  [label="CFG: "];
"1000319" -> "1000552"  [label="DDG: &bytes_avail"];
"1000319" -> "1000317"  [label="DDG: a"];
"1000319" -> "1000317"  [label="DDG: 1"];
"1000319" -> "1000317"  [label="DDG: &bytes_avail"];
"1000285" -> "1000319"  [label="DDG: a"];
"1000108" -> "1000319"  [label="DDG: a"];
"1000319" -> "1000392"  [label="DDG: a"];
"1000319" -> "1000539"  [label="DDG: a"];
"1000317" -> "1000313"  [label="AST: "];
"1000318" -> "1000317"  [label="AST: "];
"1000326" -> "1000317"  [label="CFG: "];
"1000317" -> "1000552"  [label="DDG: __archive_read_ahead(a, 1, &bytes_avail)"];
"1000317" -> "1000325"  [label="DDG: p"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000327"  [label="CFG: "];
"1000326" -> "1000325"  [label="AST: "];
"1000327" -> "1000325"  [label="AST: "];
"1000332" -> "1000325"  [label="CFG: "];
"1000343" -> "1000325"  [label="CFG: "];
"1000325" -> "1000552"  [label="DDG: p"];
"1000325" -> "1000552"  [label="DDG: p == NULL"];
"1000325" -> "1000552"  [label="DDG: NULL"];
"1000240" -> "1000325"  [label="DDG: NULL"];
"1000325" -> "1000410"  [label="DDG: p"];
"1000410" -> "1000408"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000411" -> "1000410"  [label="AST: "];
"1000412" -> "1000410"  [label="AST: "];
"1000408" -> "1000410"  [label="CFG: "];
"1000410" -> "1000552"  [label="DDG: p"];
"1000410" -> "1000408"  [label="DDG: p"];
"1000408" -> "1000406"  [label="AST: "];
"1000409" -> "1000408"  [label="AST: "];
"1000406" -> "1000408"  [label="CFG: "];
"1000408" -> "1000552"  [label="DDG: (const void *)p"];
"1000408" -> "1000406"  [label="DDG: (const void *)p"];
"1000406" -> "1000400"  [label="AST: "];
"1000407" -> "1000406"  [label="AST: "];
"1000400" -> "1000406"  [label="CFG: "];
"1000406" -> "1000552"  [label="DDG: (uintptr_t)(const void *)p"];
"1000406" -> "1000400"  [label="DDG: (uintptr_t)(const void *)p"];
"1000400" -> "1000388"  [label="AST: "];
"1000401" -> "1000400"  [label="AST: "];
"1000416" -> "1000400"  [label="CFG: "];
"1000400" -> "1000552"  [label="DDG: zip->stream.next_in"];
"1000400" -> "1000552"  [label="DDG: (Bytef *)(uintptr_t)(const void *)p"];
"1000392" -> "1000390"  [label="AST: "];
"1000392" -> "1000394"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000394" -> "1000392"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000392" -> "1000552"  [label="DDG: zip"];
"1000392" -> "1000390"  [label="DDG: a"];
"1000392" -> "1000390"  [label="DDG: zip"];
"1000108" -> "1000392"  [label="DDG: a"];
"1000113" -> "1000392"  [label="DDG: zip"];
"1000392" -> "1000539"  [label="DDG: a"];
"1000390" -> "1000388"  [label="AST: "];
"1000391" -> "1000390"  [label="AST: "];
"1000397" -> "1000390"  [label="CFG: "];
"1000390" -> "1000552"  [label="DDG: zip_deflate_init(a, zip)"];
"1000390" -> "1000396"  [label="DDG: ret"];
"1000396" -> "1000395"  [label="AST: "];
"1000396" -> "1000398"  [label="CFG: "];
"1000397" -> "1000396"  [label="AST: "];
"1000398" -> "1000396"  [label="AST: "];
"1000399" -> "1000396"  [label="CFG: "];
"1000403" -> "1000396"  [label="CFG: "];
"1000396" -> "1000552"  [label="DDG: ret != ARCHIVE_OK"];
"1000396" -> "1000552"  [label="DDG: ret"];
"1000396" -> "1000552"  [label="DDG: ARCHIVE_OK"];
"1000396" -> "1000550"  [label="DDG: ret"];
"1000550" -> "1000111"  [label="AST: "];
"1000550" -> "1000551"  [label="CFG: "];
"1000551" -> "1000550"  [label="AST: "];
"1000552" -> "1000550"  [label="CFG: "];
"1000550" -> "1000552"  [label="DDG: <RET>"];
"1000551" -> "1000550"  [label="DDG: ret"];
"1000478" -> "1000550"  [label="DDG: ret"];
"1000491" -> "1000550"  [label="DDG: ret"];
"1000137" -> "1000550"  [label="DDG: ret"];
"1000336" -> "1000550"  [label="DDG: ret"];
"1000539" -> "1000111"  [label="AST: "];
"1000539" -> "1000542"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000541" -> "1000539"  [label="AST: "];
"1000542" -> "1000539"  [label="AST: "];
"1000545" -> "1000539"  [label="CFG: "];
"1000539" -> "1000552"  [label="DDG: a"];
"1000539" -> "1000552"  [label="DDG: SEEK_SET"];
"1000539" -> "1000552"  [label="DDG: __archive_read_seek(a, offset, SEEK_SET)"];
"1000539" -> "1000552"  [label="DDG: offset"];
"1000285" -> "1000539"  [label="DDG: a"];
"1000108" -> "1000539"  [label="DDG: a"];
"1000268" -> "1000539"  [label="DDG: offset"];
"1000261" -> "1000539"  [label="DDG: offset"];
"1000274" -> "1000539"  [label="DDG: SEEK_SET"];
}
