digraph "0_linux_0d0e57697f162da4aa218b5feafe614fb666db07@pointer" {
"1000644" [label="(Call,BPF_SRC(insn->code))"];
"1000583" [label="(Call,BPF_OP(insn->code))"];
"1000568" [label="(Call,BPF_SIZE(insn->code))"];
"1000530" [label="(Call,BPF_MODE(insn->code))"];
"1000473" [label="(Call,BPF_SIZE(insn->code))"];
"1000412" [label="(Call,BPF_MODE(insn->code))"];
"1000357" [label="(Call,BPF_SIZE(insn->code))"];
"1000351" [label="(Call,BPF_SIZE(insn->code))"];
"1000336" [label="(Call,BPF_SIZE(insn->code))"];
"1000189" [label="(Call,BPF_CLASS(insn->code))"];
"1000643" [label="(Call,BPF_SRC(insn->code) != BPF_K)"];
"1000642" [label="(Call,BPF_SRC(insn->code) != BPF_K ||\n\t\t\t\t    insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0)"];
"1000642" [label="(Call,BPF_SRC(insn->code) != BPF_K ||\n\t\t\t\t    insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0)"];
"1000560" [label="(Call,check_mem_access(env, insn->dst_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_WRITE,\n\t\t\t\t\t       -1))"];
"1000581" [label="(Call,opcode = BPF_OP(insn->code))"];
"1000356" [label="(Call,BPF_SIZE(insn->code) != BPF_DW)"];
"1000641" [label="(ControlStructure,if (BPF_SRC(insn->code) != BPF_K ||\n\t\t\t\t    insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0))"];
"1000413" [label="(Call,insn->code)"];
"1000357" [label="(Call,BPF_SIZE(insn->code))"];
"1000773" [label="(Call,BPF_MODE(insn->code))"];
"1000583" [label="(Call,BPF_OP(insn->code))"];
"1000328" [label="(Call,check_mem_access(env, insn->src_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_READ,\n\t\t\t\t\t       insn->dst_reg))"];
"1000673" [label="(Identifier,insn_idx)"];
"1000534" [label="(Identifier,BPF_MEM)"];
"1000465" [label="(Call,check_mem_access(env, insn->dst_reg, insn->off,\n\t\t\t\t\t       BPF_SIZE(insn->code), BPF_WRITE,\n\t\t\t\t\t       insn->src_reg))"];
"1000595" [label="(Call,BPF_SRC(insn->code))"];
"1000336" [label="(Call,BPF_SIZE(insn->code))"];
"1000361" [label="(Identifier,BPF_DW)"];
"1000412" [label="(Call,BPF_MODE(insn->code))"];
"1000337" [label="(Call,insn->code)"];
"1000351" [label="(Call,BPF_SIZE(insn->code))"];
"1000649" [label="(Call,insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0)"];
"1000644" [label="(Call,BPF_SRC(insn->code))"];
"1000529" [label="(Call,BPF_MODE(insn->code) != BPF_MEM)"];
"1000584" [label="(Call,insn->code)"];
"1000355" [label="(Identifier,BPF_W)"];
"1000189" [label="(Call,BPF_CLASS(insn->code))"];
"1000643" [label="(Call,BPF_SRC(insn->code) != BPF_K)"];
"1000190" [label="(Call,insn->code)"];
"1000350" [label="(Call,BPF_SIZE(insn->code) != BPF_W)"];
"1000530" [label="(Call,BPF_MODE(insn->code))"];
"1000645" [label="(Call,insn->code)"];
"1000477" [label="(Identifier,BPF_WRITE)"];
"1000340" [label="(Identifier,BPF_READ)"];
"1000411" [label="(Call,BPF_MODE(insn->code) == BPF_XADD)"];
"1000474" [label="(Call,insn->code)"];
"1000652" [label="(Identifier,insn)"];
"1000668" [label="(Literal,\"BPF_JA uses reserved fields\n\")"];
"1000648" [label="(Identifier,BPF_K)"];
"1000572" [label="(Identifier,BPF_WRITE)"];
"1000531" [label="(Call,insn->code)"];
"1000416" [label="(Identifier,BPF_XADD)"];
"1000196" [label="(Identifier,insn_processed)"];
"1000473" [label="(Call,BPF_SIZE(insn->code))"];
"1000352" [label="(Call,insn->code)"];
"1000569" [label="(Call,insn->code)"];
"1000831" [label="(MethodReturn,static int)"];
"1000168" [label="(Block,)"];
"1000358" [label="(Call,insn->code)"];
"1000568" [label="(Call,BPF_SIZE(insn->code))"];
"1000689" [label="(Call,BPF_SRC(insn->code))"];
"1000644" -> "1000643"  [label="AST: "];
"1000644" -> "1000645"  [label="CFG: "];
"1000645" -> "1000644"  [label="AST: "];
"1000648" -> "1000644"  [label="CFG: "];
"1000644" -> "1000831"  [label="DDG: insn->code"];
"1000644" -> "1000189"  [label="DDG: insn->code"];
"1000644" -> "1000643"  [label="DDG: insn->code"];
"1000583" -> "1000644"  [label="DDG: insn->code"];
"1000583" -> "1000581"  [label="AST: "];
"1000583" -> "1000584"  [label="CFG: "];
"1000584" -> "1000583"  [label="AST: "];
"1000581" -> "1000583"  [label="CFG: "];
"1000583" -> "1000831"  [label="DDG: insn->code"];
"1000583" -> "1000581"  [label="DDG: insn->code"];
"1000568" -> "1000583"  [label="DDG: insn->code"];
"1000583" -> "1000595"  [label="DDG: insn->code"];
"1000583" -> "1000689"  [label="DDG: insn->code"];
"1000583" -> "1000773"  [label="DDG: insn->code"];
"1000568" -> "1000560"  [label="AST: "];
"1000568" -> "1000569"  [label="CFG: "];
"1000569" -> "1000568"  [label="AST: "];
"1000572" -> "1000568"  [label="CFG: "];
"1000568" -> "1000831"  [label="DDG: insn->code"];
"1000568" -> "1000560"  [label="DDG: insn->code"];
"1000530" -> "1000568"  [label="DDG: insn->code"];
"1000530" -> "1000529"  [label="AST: "];
"1000530" -> "1000531"  [label="CFG: "];
"1000531" -> "1000530"  [label="AST: "];
"1000534" -> "1000530"  [label="CFG: "];
"1000530" -> "1000831"  [label="DDG: insn->code"];
"1000530" -> "1000529"  [label="DDG: insn->code"];
"1000473" -> "1000530"  [label="DDG: insn->code"];
"1000473" -> "1000465"  [label="AST: "];
"1000473" -> "1000474"  [label="CFG: "];
"1000474" -> "1000473"  [label="AST: "];
"1000477" -> "1000473"  [label="CFG: "];
"1000473" -> "1000831"  [label="DDG: insn->code"];
"1000473" -> "1000465"  [label="DDG: insn->code"];
"1000412" -> "1000473"  [label="DDG: insn->code"];
"1000412" -> "1000411"  [label="AST: "];
"1000412" -> "1000413"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000416" -> "1000412"  [label="CFG: "];
"1000412" -> "1000831"  [label="DDG: insn->code"];
"1000412" -> "1000189"  [label="DDG: insn->code"];
"1000412" -> "1000411"  [label="DDG: insn->code"];
"1000357" -> "1000412"  [label="DDG: insn->code"];
"1000351" -> "1000412"  [label="DDG: insn->code"];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000358"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="CFG: "];
"1000357" -> "1000831"  [label="DDG: insn->code"];
"1000357" -> "1000189"  [label="DDG: insn->code"];
"1000357" -> "1000356"  [label="DDG: insn->code"];
"1000351" -> "1000357"  [label="DDG: insn->code"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000351"  [label="AST: "];
"1000355" -> "1000351"  [label="CFG: "];
"1000351" -> "1000831"  [label="DDG: insn->code"];
"1000351" -> "1000189"  [label="DDG: insn->code"];
"1000351" -> "1000350"  [label="DDG: insn->code"];
"1000336" -> "1000351"  [label="DDG: insn->code"];
"1000336" -> "1000328"  [label="AST: "];
"1000336" -> "1000337"  [label="CFG: "];
"1000337" -> "1000336"  [label="AST: "];
"1000340" -> "1000336"  [label="CFG: "];
"1000336" -> "1000831"  [label="DDG: insn->code"];
"1000336" -> "1000328"  [label="DDG: insn->code"];
"1000189" -> "1000168"  [label="AST: "];
"1000189" -> "1000190"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000196" -> "1000189"  [label="CFG: "];
"1000189" -> "1000831"  [label="DDG: insn->code"];
"1000189" -> "1000831"  [label="DDG: BPF_CLASS(insn->code)"];
"1000689" -> "1000189"  [label="DDG: insn->code"];
"1000773" -> "1000189"  [label="DDG: insn->code"];
"1000643" -> "1000642"  [label="AST: "];
"1000643" -> "1000648"  [label="CFG: "];
"1000648" -> "1000643"  [label="AST: "];
"1000652" -> "1000643"  [label="CFG: "];
"1000642" -> "1000643"  [label="CFG: "];
"1000643" -> "1000831"  [label="DDG: BPF_SRC(insn->code)"];
"1000643" -> "1000831"  [label="DDG: BPF_K"];
"1000643" -> "1000642"  [label="DDG: BPF_SRC(insn->code)"];
"1000643" -> "1000642"  [label="DDG: BPF_K"];
"1000642" -> "1000641"  [label="AST: "];
"1000642" -> "1000649"  [label="CFG: "];
"1000649" -> "1000642"  [label="AST: "];
"1000668" -> "1000642"  [label="CFG: "];
"1000673" -> "1000642"  [label="CFG: "];
"1000642" -> "1000831"  [label="DDG: BPF_SRC(insn->code) != BPF_K"];
"1000642" -> "1000831"  [label="DDG: insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0"];
"1000642" -> "1000831"  [label="DDG: BPF_SRC(insn->code) != BPF_K ||\n\t\t\t\t    insn->imm != 0 ||\n\t\t\t\t    insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0"];
"1000649" -> "1000642"  [label="DDG: insn->imm != 0"];
"1000649" -> "1000642"  [label="DDG: insn->src_reg != BPF_REG_0 ||\n\t\t\t\t    insn->dst_reg != BPF_REG_0"];
}
