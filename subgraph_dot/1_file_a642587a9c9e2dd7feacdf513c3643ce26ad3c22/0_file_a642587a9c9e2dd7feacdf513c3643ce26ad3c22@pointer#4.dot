digraph "0_file_a642587a9c9e2dd7feacdf513c3643ce26ad3c22@pointer" {
"1000111" [label="(MethodParameterIn,unsigned char *nbuf)"];
"1000251" [label="(Call,memcpy(&pi, nbuf + doff, descsz))"];
"1000254" [label="(Call,nbuf + doff)"];
"1000331" [label="(Call,c = nbuf[noffset])"];
"1000337" [label="(Call,c == '\0')"];
"1000353" [label="(Call,isprint(c))"];
"1000352" [label="(Call,!isprint(c))"];
"1000351" [label="(Call,!isprint(c) || isquote(c))"];
"1000355" [label="(Call,isquote(c))"];
"1000401" [label="(Call,isprint(nbuf[no]))"];
"1000399" [label="(Call,adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000397" [label="(Call,adjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000251" [label="(Call,memcpy(&pi, nbuf + doff, descsz))"];
"1000354" [label="(Identifier,c)"];
"1000382" [label="(ControlStructure,for (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++))"];
"1000401" [label="(Call,isprint(nbuf[no]))"];
"1000397" [label="(Call,adjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000352" [label="(Call,!isprint(c))"];
"1000357" [label="(ControlStructure,goto tryanother;)"];
"1000245" [label="(Call,memset(&pi, 0, sizeof(pi)))"];
"1000111" [label="(MethodParameterIn,unsigned char *nbuf)"];
"1000255" [label="(Identifier,nbuf)"];
"1000331" [label="(Call,c = nbuf[noffset])"];
"1000115" [label="(MethodParameterIn,uint32_t descsz)"];
"1000257" [label="(Identifier,descsz)"];
"1000320" [label="(Block,)"];
"1000256" [label="(Identifier,doff)"];
"1000402" [label="(Call,nbuf[no])"];
"1000339" [label="(Literal,'\0')"];
"1000242" [label="(Block,)"];
"1000314" [label="(Identifier,j)"];
"1000254" [label="(Call,nbuf + doff)"];
"1000338" [label="(Identifier,c)"];
"1000471" [label="(MethodReturn,RET)"];
"1000396" [label="(Identifier,no)"];
"1000398" [label="(Identifier,adjust)"];
"1000350" [label="(ControlStructure,if (!isprint(c) || isquote(c)))"];
"1000372" [label="(Call,adjust = 1)"];
"1000399" [label="(Call,adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]))"];
"1000343" [label="(Identifier,j)"];
"1000400" [label="(Identifier,adjust)"];
"1000337" [label="(Call,c == '\0')"];
"1000355" [label="(Call,isquote(c))"];
"1000259" [label="(Literal,1)"];
"1000356" [label="(Identifier,c)"];
"1000252" [label="(Call,&pi)"];
"1000336" [label="(ControlStructure,if (c == '\0'))"];
"1000332" [label="(Identifier,c)"];
"1000353" [label="(Call,isprint(c))"];
"1000351" [label="(Call,!isprint(c) || isquote(c))"];
"1000333" [label="(Call,nbuf[noffset])"];
"1000117" [label="(MethodParameterIn,size_t doff)"];
"1000111" -> "1000109"  [label="AST: "];
"1000111" -> "1000471"  [label="DDG: nbuf"];
"1000111" -> "1000251"  [label="DDG: nbuf"];
"1000111" -> "1000254"  [label="DDG: nbuf"];
"1000111" -> "1000331"  [label="DDG: nbuf"];
"1000111" -> "1000401"  [label="DDG: nbuf"];
"1000251" -> "1000242"  [label="AST: "];
"1000251" -> "1000257"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000254" -> "1000251"  [label="AST: "];
"1000257" -> "1000251"  [label="AST: "];
"1000259" -> "1000251"  [label="CFG: "];
"1000251" -> "1000471"  [label="DDG: memcpy(&pi, nbuf + doff, descsz)"];
"1000251" -> "1000471"  [label="DDG: nbuf + doff"];
"1000251" -> "1000471"  [label="DDG: &pi"];
"1000251" -> "1000471"  [label="DDG: descsz"];
"1000245" -> "1000251"  [label="DDG: &pi"];
"1000117" -> "1000251"  [label="DDG: doff"];
"1000115" -> "1000251"  [label="DDG: descsz"];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="CFG: "];
"1000254" -> "1000471"  [label="DDG: nbuf"];
"1000254" -> "1000471"  [label="DDG: doff"];
"1000117" -> "1000254"  [label="DDG: doff"];
"1000331" -> "1000320"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000338" -> "1000331"  [label="CFG: "];
"1000331" -> "1000471"  [label="DDG: nbuf[noffset]"];
"1000331" -> "1000337"  [label="DDG: c"];
"1000337" -> "1000336"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000339" -> "1000337"  [label="AST: "];
"1000343" -> "1000337"  [label="CFG: "];
"1000354" -> "1000337"  [label="CFG: "];
"1000337" -> "1000471"  [label="DDG: c"];
"1000337" -> "1000471"  [label="DDG: c == '\0'"];
"1000337" -> "1000353"  [label="DDG: c"];
"1000353" -> "1000352"  [label="AST: "];
"1000353" -> "1000354"  [label="CFG: "];
"1000354" -> "1000353"  [label="AST: "];
"1000352" -> "1000353"  [label="CFG: "];
"1000353" -> "1000471"  [label="DDG: c"];
"1000353" -> "1000352"  [label="DDG: c"];
"1000353" -> "1000355"  [label="DDG: c"];
"1000352" -> "1000351"  [label="AST: "];
"1000356" -> "1000352"  [label="CFG: "];
"1000351" -> "1000352"  [label="CFG: "];
"1000352" -> "1000471"  [label="DDG: isprint(c)"];
"1000352" -> "1000351"  [label="DDG: isprint(c)"];
"1000351" -> "1000350"  [label="AST: "];
"1000351" -> "1000355"  [label="CFG: "];
"1000355" -> "1000351"  [label="AST: "];
"1000357" -> "1000351"  [label="CFG: "];
"1000314" -> "1000351"  [label="CFG: "];
"1000351" -> "1000471"  [label="DDG: !isprint(c) || isquote(c)"];
"1000351" -> "1000471"  [label="DDG: !isprint(c)"];
"1000351" -> "1000471"  [label="DDG: isquote(c)"];
"1000355" -> "1000351"  [label="DDG: c"];
"1000355" -> "1000356"  [label="CFG: "];
"1000356" -> "1000355"  [label="AST: "];
"1000355" -> "1000471"  [label="DDG: c"];
"1000401" -> "1000399"  [label="AST: "];
"1000401" -> "1000402"  [label="CFG: "];
"1000402" -> "1000401"  [label="AST: "];
"1000399" -> "1000401"  [label="CFG: "];
"1000401" -> "1000471"  [label="DDG: nbuf[no]"];
"1000401" -> "1000399"  [label="DDG: nbuf[no]"];
"1000399" -> "1000397"  [label="AST: "];
"1000399" -> "1000400"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000397" -> "1000399"  [label="CFG: "];
"1000399" -> "1000471"  [label="DDG: isprint(nbuf[no])"];
"1000399" -> "1000397"  [label="DDG: adjust"];
"1000399" -> "1000397"  [label="DDG: isprint(nbuf[no])"];
"1000397" -> "1000399"  [label="DDG: adjust"];
"1000372" -> "1000399"  [label="DDG: adjust"];
"1000397" -> "1000382"  [label="AST: "];
"1000398" -> "1000397"  [label="AST: "];
"1000396" -> "1000397"  [label="CFG: "];
"1000397" -> "1000471"  [label="DDG: adjust"];
"1000397" -> "1000471"  [label="DDG: adjust\n\t\t\t\t\t\t         && isprint(nbuf[no])"];
}
