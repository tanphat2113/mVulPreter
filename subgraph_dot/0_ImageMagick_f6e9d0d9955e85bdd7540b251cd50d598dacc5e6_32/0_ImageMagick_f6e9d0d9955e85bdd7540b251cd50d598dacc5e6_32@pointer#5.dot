digraph "0_ImageMagick_f6e9d0d9955e85bdd7540b251cd50d598dacc5e6_32@pointer" {
"1000309" [label="(Call,packet_size*image->colors)"];
"1000298" [label="(Call,packet_size*image->colors)"];
"1000274" [label="(Call,packet_size*\n    sizeof(*colormap))"];
"1000254" [label="(Call,packet_size=(size_t) (image->colors > 256 ? 6UL : 3UL))"];
"1000256" [label="(Call,(size_t) (image->colors > 256 ? 6UL : 3UL))"];
"1000270" [label="(Call,AcquireQuantumMemory(image->colors,packet_size*\n    sizeof(*colormap)))"];
"1000259" [label="(Call,image->colors > 256)"];
"1000307" [label="(Call,(ssize_t) (packet_size*image->colors))"];
"1000305" [label="(Call,count != (ssize_t) (packet_size*image->colors))"];
"1000332" [label="(Call,(ssize_t) image->colors)"];
"1000330" [label="(Call,i < (ssize_t) image->colors)"];
"1000337" [label="(Call,i++)"];
"1000596" [label="(Call,image->colors > 256)"];
"1000383" [label="(Call,(ssize_t) image->colors)"];
"1000381" [label="(Call,i < (ssize_t) image->colors)"];
"1000388" [label="(Call,i++)"];
"1000307" [label="(Call,(ssize_t) (packet_size*image->colors))"];
"1000268" [label="(Call,(unsigned char *) AcquireQuantumMemory(image->colors,packet_size*\n    sizeof(*colormap)))"];
"1000265" [label="(Literal,3UL)"];
"1000385" [label="(Call,image->colors)"];
"1000326" [label="(ControlStructure,for (i=0; i < (ssize_t) image->colors; i++))"];
"1000382" [label="(Identifier,i)"];
"1000274" [label="(Call,packet_size*\n    sizeof(*colormap))"];
"1000600" [label="(Literal,256)"];
"1000267" [label="(Identifier,colormap)"];
"1000392" [label="(Identifier,quantum)"];
"1000461" [label="(Identifier,colormap)"];
"1000332" [label="(Call,(ssize_t) image->colors)"];
"1000303" [label="(Identifier,colormap)"];
"1000299" [label="(Identifier,packet_size)"];
"1000315" [label="(Identifier,CorruptImageError)"];
"1000264" [label="(Literal,6UL)"];
"1000298" [label="(Call,packet_size*image->colors)"];
"1000595" [label="(ControlStructure,if (image->colors > 256))"];
"1000270" [label="(Call,AcquireQuantumMemory(image->colors,packet_size*\n    sizeof(*colormap)))"];
"1000275" [label="(Identifier,packet_size)"];
"1000597" [label="(Call,image->colors)"];
"1000256" [label="(Call,(size_t) (image->colors > 256 ? 6UL : 3UL))"];
"1000311" [label="(Call,image->colors)"];
"1000603" [label="(Identifier,index)"];
"1000258" [label="(Call,image->colors > 256 ? 6UL : 3UL)"];
"1000255" [label="(Identifier,packet_size)"];
"1000276" [label="(Call,sizeof(*colormap))"];
"1000300" [label="(Call,image->colors)"];
"1000304" [label="(ControlStructure,if (count != (ssize_t) (packet_size*image->colors)))"];
"1000254" [label="(Call,packet_size=(size_t) (image->colors > 256 ? 6UL : 3UL))"];
"1000260" [label="(Call,image->colors)"];
"1000388" [label="(Call,i++)"];
"1000318" [label="(Identifier,p)"];
"1000389" [label="(Identifier,i)"];
"1000263" [label="(Literal,256)"];
"1000306" [label="(Identifier,count)"];
"1000383" [label="(Call,(ssize_t) image->colors)"];
"1000377" [label="(ControlStructure,for (i=0; i < (ssize_t) image->colors; i++))"];
"1000294" [label="(Call,count=ReadBlob(image,packet_size*image->colors,colormap))"];
"1000259" [label="(Call,image->colors > 256)"];
"1000310" [label="(Identifier,packet_size)"];
"1000344" [label="(Identifier,image)"];
"1000618" [label="(Identifier,indexes)"];
"1000334" [label="(Call,image->colors)"];
"1000378" [label="(Call,i=0)"];
"1000596" [label="(Call,image->colors > 256)"];
"1000107" [label="(Block,)"];
"1000665" [label="(MethodReturn,static Image *)"];
"1000337" [label="(Call,i++)"];
"1000381" [label="(Call,i < (ssize_t) image->colors)"];
"1000271" [label="(Call,image->colors)"];
"1000330" [label="(Call,i < (ssize_t) image->colors)"];
"1000296" [label="(Call,ReadBlob(image,packet_size*image->colors,colormap))"];
"1000331" [label="(Identifier,i)"];
"1000338" [label="(Identifier,i)"];
"1000309" [label="(Call,packet_size*image->colors)"];
"1000305" [label="(Call,count != (ssize_t) (packet_size*image->colors))"];
"1000327" [label="(Call,i=0)"];
"1000309" -> "1000307"  [label="AST: "];
"1000309" -> "1000311"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000309" -> "1000665"  [label="DDG: packet_size"];
"1000309" -> "1000307"  [label="DDG: packet_size"];
"1000309" -> "1000307"  [label="DDG: image->colors"];
"1000298" -> "1000309"  [label="DDG: packet_size"];
"1000298" -> "1000309"  [label="DDG: image->colors"];
"1000309" -> "1000332"  [label="DDG: image->colors"];
"1000309" -> "1000383"  [label="DDG: image->colors"];
"1000298" -> "1000296"  [label="AST: "];
"1000298" -> "1000300"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000300" -> "1000298"  [label="AST: "];
"1000303" -> "1000298"  [label="CFG: "];
"1000298" -> "1000296"  [label="DDG: packet_size"];
"1000298" -> "1000296"  [label="DDG: image->colors"];
"1000274" -> "1000298"  [label="DDG: packet_size"];
"1000270" -> "1000298"  [label="DDG: image->colors"];
"1000274" -> "1000270"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000270" -> "1000274"  [label="CFG: "];
"1000274" -> "1000270"  [label="DDG: packet_size"];
"1000254" -> "1000274"  [label="DDG: packet_size"];
"1000254" -> "1000107"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000267" -> "1000254"  [label="CFG: "];
"1000254" -> "1000665"  [label="DDG: (size_t) (image->colors > 256 ? 6UL : 3UL)"];
"1000256" -> "1000254"  [label="DDG: image->colors > 256 ? 6UL : 3UL"];
"1000256" -> "1000258"  [label="CFG: "];
"1000257" -> "1000256"  [label="AST: "];
"1000258" -> "1000256"  [label="AST: "];
"1000256" -> "1000665"  [label="DDG: image->colors > 256 ? 6UL : 3UL"];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000270" -> "1000665"  [label="DDG: packet_size*\n    sizeof(*colormap)"];
"1000270" -> "1000268"  [label="DDG: image->colors"];
"1000270" -> "1000268"  [label="DDG: packet_size*\n    sizeof(*colormap)"];
"1000259" -> "1000270"  [label="DDG: image->colors"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000263"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000263" -> "1000259"  [label="AST: "];
"1000264" -> "1000259"  [label="CFG: "];
"1000265" -> "1000259"  [label="CFG: "];
"1000307" -> "1000305"  [label="AST: "];
"1000308" -> "1000307"  [label="AST: "];
"1000305" -> "1000307"  [label="CFG: "];
"1000307" -> "1000665"  [label="DDG: packet_size*image->colors"];
"1000307" -> "1000305"  [label="DDG: packet_size*image->colors"];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000305"  [label="AST: "];
"1000315" -> "1000305"  [label="CFG: "];
"1000318" -> "1000305"  [label="CFG: "];
"1000305" -> "1000665"  [label="DDG: count != (ssize_t) (packet_size*image->colors)"];
"1000305" -> "1000665"  [label="DDG: (ssize_t) (packet_size*image->colors)"];
"1000305" -> "1000665"  [label="DDG: count"];
"1000294" -> "1000305"  [label="DDG: count"];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000334"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000334" -> "1000332"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000332" -> "1000665"  [label="DDG: image->colors"];
"1000332" -> "1000330"  [label="DDG: image->colors"];
"1000332" -> "1000596"  [label="DDG: image->colors"];
"1000330" -> "1000326"  [label="AST: "];
"1000331" -> "1000330"  [label="AST: "];
"1000344" -> "1000330"  [label="CFG: "];
"1000461" -> "1000330"  [label="CFG: "];
"1000330" -> "1000665"  [label="DDG: i"];
"1000330" -> "1000665"  [label="DDG: (ssize_t) image->colors"];
"1000330" -> "1000665"  [label="DDG: i < (ssize_t) image->colors"];
"1000327" -> "1000330"  [label="DDG: i"];
"1000337" -> "1000330"  [label="DDG: i"];
"1000330" -> "1000337"  [label="DDG: i"];
"1000337" -> "1000326"  [label="AST: "];
"1000337" -> "1000338"  [label="CFG: "];
"1000338" -> "1000337"  [label="AST: "];
"1000331" -> "1000337"  [label="CFG: "];
"1000596" -> "1000595"  [label="AST: "];
"1000596" -> "1000600"  [label="CFG: "];
"1000597" -> "1000596"  [label="AST: "];
"1000600" -> "1000596"  [label="AST: "];
"1000603" -> "1000596"  [label="CFG: "];
"1000618" -> "1000596"  [label="CFG: "];
"1000596" -> "1000665"  [label="DDG: image->colors"];
"1000596" -> "1000665"  [label="DDG: image->colors > 256"];
"1000383" -> "1000596"  [label="DDG: image->colors"];
"1000383" -> "1000381"  [label="AST: "];
"1000383" -> "1000385"  [label="CFG: "];
"1000384" -> "1000383"  [label="AST: "];
"1000385" -> "1000383"  [label="AST: "];
"1000381" -> "1000383"  [label="CFG: "];
"1000383" -> "1000665"  [label="DDG: image->colors"];
"1000383" -> "1000381"  [label="DDG: image->colors"];
"1000381" -> "1000377"  [label="AST: "];
"1000382" -> "1000381"  [label="AST: "];
"1000392" -> "1000381"  [label="CFG: "];
"1000461" -> "1000381"  [label="CFG: "];
"1000381" -> "1000665"  [label="DDG: (ssize_t) image->colors"];
"1000381" -> "1000665"  [label="DDG: i"];
"1000381" -> "1000665"  [label="DDG: i < (ssize_t) image->colors"];
"1000388" -> "1000381"  [label="DDG: i"];
"1000378" -> "1000381"  [label="DDG: i"];
"1000381" -> "1000388"  [label="DDG: i"];
"1000388" -> "1000377"  [label="AST: "];
"1000388" -> "1000389"  [label="CFG: "];
"1000389" -> "1000388"  [label="AST: "];
"1000382" -> "1000388"  [label="CFG: "];
}
