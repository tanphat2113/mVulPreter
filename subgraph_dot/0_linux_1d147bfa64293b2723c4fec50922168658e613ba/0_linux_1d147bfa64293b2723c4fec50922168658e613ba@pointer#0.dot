digraph "0_linux_1d147bfa64293b2723c4fec50922168658e613ba@pointer" {
"1000151" [label="(Call,drv_sta_notify(local, sdata, STA_NOTIFY_AWAKE, &sta->sta))"];
"1000113" [label="(Call,*local = sdata->local)"];
"1000107" [label="(Call,*sdata = sta->sdata)"];
"1000265" [label="(Call,ieee80211_add_pending_skbs_fn(local, &pending, clear_sta_ps_flags, sta))"];
"1000297" [label="(Call,sta_info_tx_streams(sta))"];
"1000296" [label="(Call,sta_info_tx_streams(sta) != 1)"];
"1000286" [label="(Call,sta->known_smps_mode != sdata->bss->req_smps &&\n\t    sta_info_tx_streams(sta) != 1)"];
"1000277" [label="(Call,!ieee80211_smps_is_restrictive(sta->known_smps_mode,\n\t\t\t\t\t   sdata->smps_mode) &&\n\t    sta->known_smps_mode != sdata->bss->req_smps &&\n\t    sta_info_tx_streams(sta) != 1)"];
"1000333" [label="(Call,sta_info_recalc_tim(sta))"];
"1000301" [label="(Call,ht_dbg(sdata,\n\t\t       \"%pM just woke up and MIMO capable - update SMPS\n\",\n\t\t       sta->sta.addr))"];
"1000309" [label="(Call,ieee80211_send_smps_action(sdata, sdata->bss->req_smps,\n\t\t\t\t\t   sta->sta.addr,\n\t\t\t\t\t   sdata->vif.bss_conf.bssid))"];
"1000335" [label="(Call,ps_dbg(sdata,\n\t       \"STA %pM aid %d sending %d filtered/%d PS frames since STA not sleeping anymore\n\",\n\t       sta->sta.addr, sta->sta.aid, filtered, buffered))"];
"1000270" [label="(Identifier,sta)"];
"1000114" [label="(Identifier,local)"];
"1000298" [label="(Identifier,sta)"];
"1000266" [label="(Identifier,local)"];
"1000286" [label="(Call,sta->known_smps_mode != sdata->bss->req_smps &&\n\t    sta_info_tx_streams(sta) != 1)"];
"1000151" [label="(Call,drv_sta_notify(local, sdata, STA_NOTIFY_AWAKE, &sta->sta))"];
"1000333" [label="(Call,sta_info_recalc_tim(sta))"];
"1000338" [label="(Call,sta->sta.addr)"];
"1000113" [label="(Call,*local = sdata->local)"];
"1000274" [label="(Identifier,sta)"];
"1000303" [label="(Literal,\"%pM just woke up and MIMO capable - update SMPS\n\")"];
"1000260" [label="(Call,buffered += tmp - count)"];
"1000304" [label="(Call,sta->sta.addr)"];
"1000104" [label="(MethodParameterIn,struct sta_info *sta)"];
"1000107" [label="(Call,*sdata = sta->sdata)"];
"1000309" [label="(Call,ieee80211_send_smps_action(sdata, sdata->bss->req_smps,\n\t\t\t\t\t   sta->sta.addr,\n\t\t\t\t\t   sdata->vif.bss_conf.bssid))"];
"1000316" [label="(Call,sta->sta.addr)"];
"1000161" [label="(Identifier,pending)"];
"1000321" [label="(Call,sdata->vif.bss_conf.bssid)"];
"1000311" [label="(Call,sdata->bss->req_smps)"];
"1000120" [label="(Call,filtered = 0)"];
"1000297" [label="(Call,sta_info_tx_streams(sta))"];
"1000115" [label="(Call,sdata->local)"];
"1000296" [label="(Call,sta_info_tx_streams(sta) != 1)"];
"1000142" [label="(ControlStructure,if (!(local->hw.flags & IEEE80211_HW_AP_LINK_PS)))"];
"1000124" [label="(Call,buffered = 0)"];
"1000276" [label="(ControlStructure,if (!ieee80211_smps_is_restrictive(sta->known_smps_mode,\n\t\t\t\t\t   sdata->smps_mode) &&\n\t    sta->known_smps_mode != sdata->bss->req_smps &&\n\t    sta_info_tx_streams(sta) != 1))"];
"1000287" [label="(Call,sta->known_smps_mode != sdata->bss->req_smps)"];
"1000310" [label="(Identifier,sdata)"];
"1000159" [label="(Call,skb_queue_head_init(&pending))"];
"1000152" [label="(Identifier,local)"];
"1000343" [label="(Call,sta->sta.aid)"];
"1000301" [label="(Call,ht_dbg(sdata,\n\t\t       \"%pM just woke up and MIMO capable - update SMPS\n\",\n\t\t       sta->sta.addr))"];
"1000302" [label="(Identifier,sdata)"];
"1000334" [label="(Identifier,sta)"];
"1000277" [label="(Call,!ieee80211_smps_is_restrictive(sta->known_smps_mode,\n\t\t\t\t\t   sdata->smps_mode) &&\n\t    sta->known_smps_mode != sdata->bss->req_smps &&\n\t    sta_info_tx_streams(sta) != 1)"];
"1000336" [label="(Identifier,sdata)"];
"1000108" [label="(Identifier,sdata)"];
"1000349" [label="(Identifier,buffered)"];
"1000337" [label="(Literal,\"STA %pM aid %d sending %d filtered/%d PS frames since STA not sleeping anymore\n\")"];
"1000153" [label="(Identifier,sdata)"];
"1000121" [label="(Identifier,filtered)"];
"1000218" [label="(Call,filtered += tmp - count)"];
"1000129" [label="(Call,clear_sta_flag(sta, WLAN_STA_SP))"];
"1000155" [label="(Call,&sta->sta)"];
"1000257" [label="(Call,skb_queue_len(&pending))"];
"1000267" [label="(Call,&pending)"];
"1000269" [label="(Identifier,clear_sta_ps_flags)"];
"1000330" [label="(Identifier,local)"];
"1000105" [label="(Block,)"];
"1000350" [label="(MethodReturn,void)"];
"1000265" [label="(Call,ieee80211_add_pending_skbs_fn(local, &pending, clear_sta_ps_flags, sta))"];
"1000109" [label="(Call,sta->sdata)"];
"1000154" [label="(Identifier,STA_NOTIFY_AWAKE)"];
"1000299" [label="(Literal,1)"];
"1000300" [label="(Block,)"];
"1000335" [label="(Call,ps_dbg(sdata,\n\t       \"STA %pM aid %d sending %d filtered/%d PS frames since STA not sleeping anymore\n\",\n\t       sta->sta.addr, sta->sta.aid, filtered, buffered))"];
"1000348" [label="(Identifier,filtered)"];
"1000278" [label="(Call,!ieee80211_smps_is_restrictive(sta->known_smps_mode,\n\t\t\t\t\t   sdata->smps_mode))"];
"1000151" -> "1000142"  [label="AST: "];
"1000151" -> "1000155"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000153" -> "1000151"  [label="AST: "];
"1000154" -> "1000151"  [label="AST: "];
"1000155" -> "1000151"  [label="AST: "];
"1000161" -> "1000151"  [label="CFG: "];
"1000151" -> "1000350"  [label="DDG: "];
"1000151" -> "1000350"  [label="DDG: "];
"1000151" -> "1000350"  [label="DDG: "];
"1000113" -> "1000151"  [label="DDG: "];
"1000107" -> "1000151"  [label="DDG: "];
"1000151" -> "1000265"  [label="DDG: "];
"1000151" -> "1000301"  [label="DDG: "];
"1000151" -> "1000335"  [label="DDG: "];
"1000113" -> "1000105"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000115" -> "1000113"  [label="AST: "];
"1000121" -> "1000113"  [label="CFG: "];
"1000113" -> "1000350"  [label="DDG: "];
"1000113" -> "1000265"  [label="DDG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000114" -> "1000107"  [label="CFG: "];
"1000107" -> "1000350"  [label="DDG: "];
"1000107" -> "1000301"  [label="DDG: "];
"1000107" -> "1000335"  [label="DDG: "];
"1000265" -> "1000105"  [label="AST: "];
"1000265" -> "1000270"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000269" -> "1000265"  [label="AST: "];
"1000270" -> "1000265"  [label="AST: "];
"1000274" -> "1000265"  [label="CFG: "];
"1000265" -> "1000350"  [label="DDG: "];
"1000265" -> "1000350"  [label="DDG: "];
"1000265" -> "1000350"  [label="DDG: "];
"1000265" -> "1000350"  [label="DDG: "];
"1000159" -> "1000265"  [label="DDG: "];
"1000257" -> "1000265"  [label="DDG: "];
"1000129" -> "1000265"  [label="DDG: "];
"1000104" -> "1000265"  [label="DDG: "];
"1000265" -> "1000297"  [label="DDG: "];
"1000265" -> "1000333"  [label="DDG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000298"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="CFG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000104" -> "1000297"  [label="DDG: "];
"1000297" -> "1000333"  [label="DDG: "];
"1000296" -> "1000286"  [label="AST: "];
"1000296" -> "1000299"  [label="CFG: "];
"1000299" -> "1000296"  [label="AST: "];
"1000286" -> "1000296"  [label="CFG: "];
"1000296" -> "1000350"  [label="DDG: "];
"1000296" -> "1000286"  [label="DDG: "];
"1000296" -> "1000286"  [label="DDG: "];
"1000286" -> "1000277"  [label="AST: "];
"1000286" -> "1000287"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000277" -> "1000286"  [label="CFG: "];
"1000286" -> "1000350"  [label="DDG: "];
"1000286" -> "1000350"  [label="DDG: "];
"1000286" -> "1000277"  [label="DDG: "];
"1000286" -> "1000277"  [label="DDG: "];
"1000287" -> "1000286"  [label="DDG: "];
"1000287" -> "1000286"  [label="DDG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000302" -> "1000277"  [label="CFG: "];
"1000330" -> "1000277"  [label="CFG: "];
"1000277" -> "1000350"  [label="DDG: "];
"1000277" -> "1000350"  [label="DDG: "];
"1000277" -> "1000350"  [label="DDG: "];
"1000278" -> "1000277"  [label="DDG: "];
"1000333" -> "1000105"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000336" -> "1000333"  [label="CFG: "];
"1000333" -> "1000350"  [label="DDG: "];
"1000333" -> "1000350"  [label="DDG: "];
"1000104" -> "1000333"  [label="DDG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000304"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000304" -> "1000301"  [label="AST: "];
"1000310" -> "1000301"  [label="CFG: "];
"1000301" -> "1000350"  [label="DDG: "];
"1000301" -> "1000309"  [label="DDG: "];
"1000301" -> "1000309"  [label="DDG: "];
"1000309" -> "1000300"  [label="AST: "];
"1000309" -> "1000321"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000316" -> "1000309"  [label="AST: "];
"1000321" -> "1000309"  [label="AST: "];
"1000330" -> "1000309"  [label="CFG: "];
"1000309" -> "1000350"  [label="DDG: "];
"1000309" -> "1000350"  [label="DDG: "];
"1000309" -> "1000350"  [label="DDG: "];
"1000287" -> "1000309"  [label="DDG: "];
"1000309" -> "1000335"  [label="DDG: "];
"1000309" -> "1000335"  [label="DDG: "];
"1000335" -> "1000105"  [label="AST: "];
"1000335" -> "1000349"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000338" -> "1000335"  [label="AST: "];
"1000343" -> "1000335"  [label="AST: "];
"1000348" -> "1000335"  [label="AST: "];
"1000349" -> "1000335"  [label="AST: "];
"1000350" -> "1000335"  [label="CFG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000335" -> "1000350"  [label="DDG: "];
"1000218" -> "1000335"  [label="DDG: "];
"1000120" -> "1000335"  [label="DDG: "];
"1000124" -> "1000335"  [label="DDG: "];
"1000260" -> "1000335"  [label="DDG: "];
}
