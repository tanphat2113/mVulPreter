digraph "0_abrt_8939398b82006ba1fec4ed491339fc075f43fc7c_1@API" {
"1001164" [label="(Call,close(user_core_fd))"];
"1001159" [label="(Call,fsync(user_core_fd))"];
"1001151" [label="(Call,copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1001144" [label="(Call,user_core_fd >= 0)"];
"1000454" [label="(Call,user_core_fd = open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000456" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000426" [label="(Call,tmp_fsuid != uid)"];
"1000418" [label="(Call,tmp_fsuid = get_fsuid())"];
"1000313" [label="(Call,uid = xatoi_positive(argv[4]))"];
"1000315" [label="(Call,xatoi_positive(argv[4]))"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000437" [label="(Call,fsuid = tmp_fsuid)"];
"1000430" [label="(Call,fsuid = 0)"];
"1000414" [label="(Call,fsuid = uid)"];
"1000405" [label="(Call,(long)pid)"];
"1000397" [label="(Call,get_cwd(pid))"];
"1000375" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000306" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000308" [label="(Call,xatoi_positive(argv[3]))"];
"1000322" [label="(Call,pid <= 0)"];
"1000275" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000391" [label="(Call,(long)pid)"];
"1000286" [label="(Call,ulimit_c = ~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000288" [label="(Call,~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000289" [label="(Call,(off_t)1 << (sizeof(off_t)*8-1))"];
"1000290" [label="(Call,(off_t)1)"];
"1000293" [label="(Call,sizeof(off_t)*8-1)"];
"1000294" [label="(Call,sizeof(off_t)*8)"];
"1000451" [label="(Call,ulimit_c != 0)"];
"1000282" [label="(Call,ulimit_c < 0)"];
"1000273" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1001163" [label="(Call,close(user_core_fd) != 0)"];
"1001162" [label="(Call,close(user_core_fd) != 0 || core_size < 0)"];
"1001157" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0)"];
"1000393" [label="(Identifier,pid)"];
"1000296" [label="(Identifier,off_t)"];
"1001159" [label="(Call,fsync(user_core_fd))"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000398" [label="(Identifier,pid)"];
"1000284" [label="(Literal,0)"];
"1000397" [label="(Call,get_cwd(pid))"];
"1000297" [label="(Literal,8)"];
"1001228" [label="(MethodReturn,int)"];
"1000176" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME [HOSTNAME]\", argv[0]))"];
"1000316" [label="(Call,argv[4])"];
"1000323" [label="(Identifier,pid)"];
"1000609" [label="(Call,(long)pid)"];
"1000150" [label="(Block,)"];
"1001151" [label="(Call,copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1000419" [label="(Identifier,tmp_fsuid)"];
"1001191" [label="(Identifier,ulimit_c)"];
"1000373" [label="(Call,*executable = get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000428" [label="(Identifier,uid)"];
"1000636" [label="(Call,(long)pid)"];
"1000375" [label="(Call,get_executable(pid, setting_SaveBinaryImage ? &src_fd_binary : NULL))"];
"1000420" [label="(Call,get_fsuid())"];
"1001166" [label="(Literal,0)"];
"1000451" [label="(Call,ulimit_c != 0)"];
"1001163" [label="(Call,close(user_core_fd) != 0)"];
"1001144" [label="(Call,user_core_fd >= 0)"];
"1000313" [label="(Call,uid = xatoi_positive(argv[4]))"];
"1000429" [label="(Block,)"];
"1000285" [label="(Block,)"];
"1001212" [label="(Call,(long)pid)"];
"1000426" [label="(Call,tmp_fsuid != uid)"];
"1000448" [label="(ControlStructure,if (setting_MakeCompatCore && ulimit_c != 0))"];
"1001190" [label="(Call,ulimit_c == 0)"];
"1001167" [label="(Call,core_size < 0)"];
"1000315" [label="(Call,xatoi_positive(argv[4]))"];
"1000453" [label="(Literal,0)"];
"1000414" [label="(Call,fsuid = uid)"];
"1000431" [label="(Identifier,fsuid)"];
"1000376" [label="(Identifier,pid)"];
"1000430" [label="(Call,fsuid = 0)"];
"1000314" [label="(Identifier,uid)"];
"1000289" [label="(Call,(off_t)1 << (sizeof(off_t)*8-1))"];
"1000427" [label="(Identifier,tmp_fsuid)"];
"1000306" [label="(Call,pid = xatoi_positive(argv[3]))"];
"1000293" [label="(Call,sizeof(off_t)*8-1)"];
"1000435" [label="(Identifier,suid_policy)"];
"1000456" [label="(Call,open_user_core(uid, fsuid, pid, &argv[1]))"];
"1001162" [label="(Call,close(user_core_fd) != 0 || core_size < 0)"];
"1000407" [label="(Identifier,pid)"];
"1000402" [label="(Call,sprintf(path, \"/proc/%lu/status\", (long)pid))"];
"1000395" [label="(Call,user_pwd = get_cwd(pid))"];
"1001158" [label="(Call,fsync(user_core_fd) != 0)"];
"1000295" [label="(Call,sizeof(off_t))"];
"1001149" [label="(Call,core_size = copyfd_size(STDIN_FILENO, user_core_fd, ulimit_c, COPYFD_SPARSE))"];
"1000415" [label="(Identifier,fsuid)"];
"1000423" [label="(Identifier,suid_policy)"];
"1000459" [label="(Identifier,pid)"];
"1001145" [label="(Identifier,user_core_fd)"];
"1001154" [label="(Identifier,ulimit_c)"];
"1001172" [label="(Literal,\"Error writing '%s' at '%s'\")"];
"1000416" [label="(Identifier,uid)"];
"1000320" [label="(Call,errno || pid <= 0)"];
"1000283" [label="(Identifier,ulimit_c)"];
"1000425" [label="(ControlStructure,if (tmp_fsuid != uid))"];
"1000290" [label="(Call,(off_t)1)"];
"1000439" [label="(Identifier,tmp_fsuid)"];
"1001155" [label="(Identifier,COPYFD_SPARSE)"];
"1001160" [label="(Identifier,user_core_fd)"];
"1000182" [label="(Call,strchr(argv[1], ' '))"];
"1001156" [label="(ControlStructure,if (fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0))"];
"1001157" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0)"];
"1000351" [label="(Call,!argv[8])"];
"1001161" [label="(Literal,0)"];
"1000279" [label="(Identifier,NULL)"];
"1000433" [label="(ControlStructure,if (suid_policy == DUMP_SUID_UNSAFE))"];
"1000280" [label="(Literal,10)"];
"1001146" [label="(Literal,0)"];
"1001168" [label="(Identifier,core_size)"];
"1000454" [label="(Call,user_core_fd = open_user_core(uid, fsuid, pid, &argv[1]))"];
"1000410" [label="(Call,xmalloc_xopen_read_close(path, /*maxsz:*/ NULL))"];
"1000281" [label="(ControlStructure,if (ulimit_c < 0))"];
"1001164" [label="(Call,close(user_core_fd))"];
"1000405" [label="(Call,(long)pid)"];
"1000437" [label="(Call,fsuid = tmp_fsuid)"];
"1000309" [label="(Call,argv[3])"];
"1000288" [label="(Call,~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1001143" [label="(ControlStructure,if (user_core_fd >= 0))"];
"1000455" [label="(Identifier,user_core_fd)"];
"1000307" [label="(Identifier,pid)"];
"1000301" [label="(Identifier,pid_str)"];
"1000460" [label="(Call,&argv[1])"];
"1000450" [label="(Identifier,setting_MakeCompatCore)"];
"1000458" [label="(Identifier,fsuid)"];
"1000282" [label="(Call,ulimit_c < 0)"];
"1000321" [label="(Identifier,errno)"];
"1000391" [label="(Call,(long)pid)"];
"1000294" [label="(Call,sizeof(off_t)*8)"];
"1000471" [label="(Call,(long)pid)"];
"1000322" [label="(Call,pid <= 0)"];
"1000418" [label="(Call,tmp_fsuid = get_fsuid())"];
"1001153" [label="(Identifier,user_core_fd)"];
"1000274" [label="(Identifier,ulimit_c)"];
"1000438" [label="(Identifier,fsuid)"];
"1000359" [label="(Call,argv[8] = uts.nodename)"];
"1000275" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000273" [label="(Call,ulimit_c = strtoull(argv[2], NULL, 10))"];
"1000286" [label="(Call,ulimit_c = ~((off_t)1 << (sizeof(off_t)*8-1)))"];
"1000262" [label="(Call,* signal_str = argv[1])"];
"1000201" [label="(Call,strchrnul(argv[i], ' '))"];
"1000394" [label="(Identifier,executable)"];
"1001150" [label="(Identifier,core_size)"];
"1000300" [label="(Call,*pid_str = argv[3])"];
"1000287" [label="(Identifier,ulimit_c)"];
"1000298" [label="(Literal,1)"];
"1001152" [label="(Identifier,STDIN_FILENO)"];
"1000457" [label="(Identifier,uid)"];
"1001165" [label="(Identifier,user_core_fd)"];
"1000292" [label="(Literal,1)"];
"1000389" [label="(Call,error_msg_and_die(\"PID %lu is '%s', not dumping it to avoid recursion\",\n                        (long)pid, executable))"];
"1000308" [label="(Call,xatoi_positive(argv[3]))"];
"1000377" [label="(Call,setting_SaveBinaryImage ? &src_fd_binary : NULL)"];
"1000466" [label="(Identifier,executable)"];
"1001222" [label="(Identifier,proc_cwd)"];
"1000324" [label="(Literal,0)"];
"1000452" [label="(Identifier,ulimit_c)"];
"1000276" [label="(Call,argv[2])"];
"1000432" [label="(Literal,0)"];
"1000449" [label="(Call,setting_MakeCompatCore && ulimit_c != 0)"];
"1000326" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1001164" -> "1001163"  [label="AST: "];
"1001164" -> "1001165"  [label="CFG: "];
"1001165" -> "1001164"  [label="AST: "];
"1001166" -> "1001164"  [label="CFG: "];
"1001164" -> "1001228"  [label="DDG: user_core_fd"];
"1001164" -> "1001163"  [label="DDG: user_core_fd"];
"1001159" -> "1001164"  [label="DDG: user_core_fd"];
"1001159" -> "1001158"  [label="AST: "];
"1001159" -> "1001160"  [label="CFG: "];
"1001160" -> "1001159"  [label="AST: "];
"1001161" -> "1001159"  [label="CFG: "];
"1001159" -> "1001228"  [label="DDG: user_core_fd"];
"1001159" -> "1001158"  [label="DDG: user_core_fd"];
"1001151" -> "1001159"  [label="DDG: user_core_fd"];
"1001151" -> "1001149"  [label="AST: "];
"1001151" -> "1001155"  [label="CFG: "];
"1001152" -> "1001151"  [label="AST: "];
"1001153" -> "1001151"  [label="AST: "];
"1001154" -> "1001151"  [label="AST: "];
"1001155" -> "1001151"  [label="AST: "];
"1001149" -> "1001151"  [label="CFG: "];
"1001151" -> "1001228"  [label="DDG: COPYFD_SPARSE"];
"1001151" -> "1001228"  [label="DDG: ulimit_c"];
"1001151" -> "1001228"  [label="DDG: STDIN_FILENO"];
"1001151" -> "1001149"  [label="DDG: STDIN_FILENO"];
"1001151" -> "1001149"  [label="DDG: user_core_fd"];
"1001151" -> "1001149"  [label="DDG: ulimit_c"];
"1001151" -> "1001149"  [label="DDG: COPYFD_SPARSE"];
"1001144" -> "1001151"  [label="DDG: user_core_fd"];
"1000286" -> "1001151"  [label="DDG: ulimit_c"];
"1000451" -> "1001151"  [label="DDG: ulimit_c"];
"1000282" -> "1001151"  [label="DDG: ulimit_c"];
"1001151" -> "1001190"  [label="DDG: ulimit_c"];
"1001144" -> "1001143"  [label="AST: "];
"1001144" -> "1001146"  [label="CFG: "];
"1001145" -> "1001144"  [label="AST: "];
"1001146" -> "1001144"  [label="AST: "];
"1001150" -> "1001144"  [label="CFG: "];
"1001222" -> "1001144"  [label="CFG: "];
"1001144" -> "1001228"  [label="DDG: user_core_fd"];
"1001144" -> "1001228"  [label="DDG: user_core_fd >= 0"];
"1000454" -> "1001144"  [label="DDG: user_core_fd"];
"1000454" -> "1000448"  [label="AST: "];
"1000454" -> "1000456"  [label="CFG: "];
"1000455" -> "1000454"  [label="AST: "];
"1000456" -> "1000454"  [label="AST: "];
"1000466" -> "1000454"  [label="CFG: "];
"1000454" -> "1001228"  [label="DDG: user_core_fd"];
"1000454" -> "1001228"  [label="DDG: open_user_core(uid, fsuid, pid, &argv[1])"];
"1000456" -> "1000454"  [label="DDG: uid"];
"1000456" -> "1000454"  [label="DDG: fsuid"];
"1000456" -> "1000454"  [label="DDG: pid"];
"1000456" -> "1000454"  [label="DDG: &argv[1]"];
"1000456" -> "1000460"  [label="CFG: "];
"1000457" -> "1000456"  [label="AST: "];
"1000458" -> "1000456"  [label="AST: "];
"1000459" -> "1000456"  [label="AST: "];
"1000460" -> "1000456"  [label="AST: "];
"1000456" -> "1001228"  [label="DDG: &argv[1]"];
"1000456" -> "1001228"  [label="DDG: pid"];
"1000456" -> "1001228"  [label="DDG: uid"];
"1000456" -> "1001228"  [label="DDG: fsuid"];
"1000426" -> "1000456"  [label="DDG: uid"];
"1000437" -> "1000456"  [label="DDG: fsuid"];
"1000430" -> "1000456"  [label="DDG: fsuid"];
"1000414" -> "1000456"  [label="DDG: fsuid"];
"1000405" -> "1000456"  [label="DDG: pid"];
"1000456" -> "1000471"  [label="DDG: pid"];
"1000456" -> "1000609"  [label="DDG: pid"];
"1000456" -> "1000636"  [label="DDG: pid"];
"1000456" -> "1001212"  [label="DDG: pid"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000428"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000428" -> "1000426"  [label="AST: "];
"1000431" -> "1000426"  [label="CFG: "];
"1000450" -> "1000426"  [label="CFG: "];
"1000426" -> "1001228"  [label="DDG: uid"];
"1000426" -> "1001228"  [label="DDG: tmp_fsuid"];
"1000426" -> "1001228"  [label="DDG: tmp_fsuid != uid"];
"1000418" -> "1000426"  [label="DDG: tmp_fsuid"];
"1000313" -> "1000426"  [label="DDG: uid"];
"1000426" -> "1000437"  [label="DDG: tmp_fsuid"];
"1000418" -> "1000150"  [label="AST: "];
"1000418" -> "1000420"  [label="CFG: "];
"1000419" -> "1000418"  [label="AST: "];
"1000420" -> "1000418"  [label="AST: "];
"1000423" -> "1000418"  [label="CFG: "];
"1000418" -> "1001228"  [label="DDG: get_fsuid()"];
"1000313" -> "1000150"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000321" -> "1000313"  [label="CFG: "];
"1000313" -> "1001228"  [label="DDG: xatoi_positive(argv[4])"];
"1000315" -> "1000313"  [label="DDG: argv[4]"];
"1000313" -> "1000414"  [label="DDG: uid"];
"1000315" -> "1000316"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000315" -> "1001228"  [label="DDG: argv[4]"];
"1000149" -> "1000315"  [label="DDG: argv"];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1001228"  [label="DDG: argv"];
"1000149" -> "1000176"  [label="DDG: argv"];
"1000149" -> "1000182"  [label="DDG: argv"];
"1000149" -> "1000201"  [label="DDG: argv"];
"1000149" -> "1000262"  [label="DDG: argv"];
"1000149" -> "1000275"  [label="DDG: argv"];
"1000149" -> "1000300"  [label="DDG: argv"];
"1000149" -> "1000308"  [label="DDG: argv"];
"1000149" -> "1000326"  [label="DDG: argv"];
"1000149" -> "1000351"  [label="DDG: argv"];
"1000149" -> "1000359"  [label="DDG: argv"];
"1000437" -> "1000433"  [label="AST: "];
"1000437" -> "1000439"  [label="CFG: "];
"1000438" -> "1000437"  [label="AST: "];
"1000439" -> "1000437"  [label="AST: "];
"1000450" -> "1000437"  [label="CFG: "];
"1000437" -> "1001228"  [label="DDG: fsuid"];
"1000437" -> "1001228"  [label="DDG: tmp_fsuid"];
"1000430" -> "1000429"  [label="AST: "];
"1000430" -> "1000432"  [label="CFG: "];
"1000431" -> "1000430"  [label="AST: "];
"1000432" -> "1000430"  [label="AST: "];
"1000435" -> "1000430"  [label="CFG: "];
"1000430" -> "1001228"  [label="DDG: fsuid"];
"1000414" -> "1000150"  [label="AST: "];
"1000414" -> "1000416"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000416" -> "1000414"  [label="AST: "];
"1000419" -> "1000414"  [label="CFG: "];
"1000414" -> "1001228"  [label="DDG: fsuid"];
"1000405" -> "1000402"  [label="AST: "];
"1000405" -> "1000407"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000407" -> "1000405"  [label="AST: "];
"1000402" -> "1000405"  [label="CFG: "];
"1000405" -> "1001228"  [label="DDG: pid"];
"1000405" -> "1000402"  [label="DDG: pid"];
"1000397" -> "1000405"  [label="DDG: pid"];
"1000405" -> "1000471"  [label="DDG: pid"];
"1000405" -> "1000609"  [label="DDG: pid"];
"1000405" -> "1000636"  [label="DDG: pid"];
"1000405" -> "1001212"  [label="DDG: pid"];
"1000397" -> "1000395"  [label="AST: "];
"1000397" -> "1000398"  [label="CFG: "];
"1000398" -> "1000397"  [label="AST: "];
"1000395" -> "1000397"  [label="CFG: "];
"1000397" -> "1000395"  [label="DDG: pid"];
"1000375" -> "1000397"  [label="DDG: pid"];
"1000391" -> "1000397"  [label="DDG: pid"];
"1000375" -> "1000373"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000373" -> "1000375"  [label="CFG: "];
"1000375" -> "1001228"  [label="DDG: setting_SaveBinaryImage ? &src_fd_binary : NULL"];
"1000375" -> "1000373"  [label="DDG: pid"];
"1000375" -> "1000373"  [label="DDG: setting_SaveBinaryImage ? &src_fd_binary : NULL"];
"1000306" -> "1000375"  [label="DDG: pid"];
"1000322" -> "1000375"  [label="DDG: pid"];
"1000275" -> "1000375"  [label="DDG: NULL"];
"1000375" -> "1000391"  [label="DDG: pid"];
"1000306" -> "1000150"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000314" -> "1000306"  [label="CFG: "];
"1000306" -> "1001228"  [label="DDG: xatoi_positive(argv[3])"];
"1000308" -> "1000306"  [label="DDG: argv[3]"];
"1000306" -> "1000322"  [label="DDG: pid"];
"1000308" -> "1000309"  [label="CFG: "];
"1000309" -> "1000308"  [label="AST: "];
"1000308" -> "1001228"  [label="DDG: argv[3]"];
"1000308" -> "1000326"  [label="DDG: argv[3]"];
"1000322" -> "1000320"  [label="AST: "];
"1000322" -> "1000324"  [label="CFG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000324" -> "1000322"  [label="AST: "];
"1000320" -> "1000322"  [label="CFG: "];
"1000322" -> "1000320"  [label="DDG: pid"];
"1000322" -> "1000320"  [label="DDG: 0"];
"1000275" -> "1000273"  [label="AST: "];
"1000275" -> "1000280"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000279" -> "1000275"  [label="AST: "];
"1000280" -> "1000275"  [label="AST: "];
"1000273" -> "1000275"  [label="CFG: "];
"1000275" -> "1001228"  [label="DDG: argv[2]"];
"1000275" -> "1000273"  [label="DDG: argv[2]"];
"1000275" -> "1000273"  [label="DDG: NULL"];
"1000275" -> "1000273"  [label="DDG: 10"];
"1000275" -> "1000326"  [label="DDG: argv[2]"];
"1000275" -> "1000377"  [label="DDG: NULL"];
"1000275" -> "1000410"  [label="DDG: NULL"];
"1000391" -> "1000389"  [label="AST: "];
"1000391" -> "1000393"  [label="CFG: "];
"1000392" -> "1000391"  [label="AST: "];
"1000393" -> "1000391"  [label="AST: "];
"1000394" -> "1000391"  [label="CFG: "];
"1000391" -> "1000389"  [label="DDG: pid"];
"1000286" -> "1000285"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000287" -> "1000286"  [label="AST: "];
"1000288" -> "1000286"  [label="AST: "];
"1000301" -> "1000286"  [label="CFG: "];
"1000286" -> "1001228"  [label="DDG: ulimit_c"];
"1000286" -> "1001228"  [label="DDG: ~((off_t)1 << (sizeof(off_t)*8-1))"];
"1000288" -> "1000286"  [label="DDG: (off_t)1 << (sizeof(off_t)*8-1)"];
"1000286" -> "1000451"  [label="DDG: ulimit_c"];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000288" -> "1001228"  [label="DDG: (off_t)1 << (sizeof(off_t)*8-1)"];
"1000289" -> "1000288"  [label="DDG: (off_t)1"];
"1000289" -> "1000288"  [label="DDG: sizeof(off_t)*8-1"];
"1000289" -> "1000293"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000289" -> "1001228"  [label="DDG: (off_t)1"];
"1000289" -> "1001228"  [label="DDG: sizeof(off_t)*8-1"];
"1000290" -> "1000289"  [label="DDG: 1"];
"1000293" -> "1000289"  [label="DDG: sizeof(off_t)*8"];
"1000293" -> "1000289"  [label="DDG: 1"];
"1000290" -> "1000292"  [label="CFG: "];
"1000291" -> "1000290"  [label="AST: "];
"1000292" -> "1000290"  [label="AST: "];
"1000296" -> "1000290"  [label="CFG: "];
"1000293" -> "1000298"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000298" -> "1000293"  [label="AST: "];
"1000293" -> "1001228"  [label="DDG: sizeof(off_t)*8"];
"1000294" -> "1000293"  [label="DDG: 8"];
"1000294" -> "1000297"  [label="CFG: "];
"1000295" -> "1000294"  [label="AST: "];
"1000297" -> "1000294"  [label="AST: "];
"1000298" -> "1000294"  [label="CFG: "];
"1000451" -> "1000449"  [label="AST: "];
"1000451" -> "1000453"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000453" -> "1000451"  [label="AST: "];
"1000449" -> "1000451"  [label="CFG: "];
"1000451" -> "1001228"  [label="DDG: ulimit_c"];
"1000451" -> "1000449"  [label="DDG: ulimit_c"];
"1000451" -> "1000449"  [label="DDG: 0"];
"1000282" -> "1000451"  [label="DDG: ulimit_c"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000287" -> "1000282"  [label="CFG: "];
"1000301" -> "1000282"  [label="CFG: "];
"1000282" -> "1001228"  [label="DDG: ulimit_c < 0"];
"1000282" -> "1001228"  [label="DDG: ulimit_c"];
"1000273" -> "1000282"  [label="DDG: ulimit_c"];
"1000273" -> "1000150"  [label="AST: "];
"1000274" -> "1000273"  [label="AST: "];
"1000283" -> "1000273"  [label="CFG: "];
"1000273" -> "1001228"  [label="DDG: strtoull(argv[2], NULL, 10)"];
"1001163" -> "1001162"  [label="AST: "];
"1001163" -> "1001166"  [label="CFG: "];
"1001166" -> "1001163"  [label="AST: "];
"1001168" -> "1001163"  [label="CFG: "];
"1001162" -> "1001163"  [label="CFG: "];
"1001163" -> "1001228"  [label="DDG: close(user_core_fd)"];
"1001163" -> "1001162"  [label="DDG: close(user_core_fd)"];
"1001163" -> "1001162"  [label="DDG: 0"];
"1001162" -> "1001157"  [label="AST: "];
"1001162" -> "1001167"  [label="CFG: "];
"1001167" -> "1001162"  [label="AST: "];
"1001157" -> "1001162"  [label="CFG: "];
"1001162" -> "1001228"  [label="DDG: close(user_core_fd) != 0"];
"1001162" -> "1001228"  [label="DDG: core_size < 0"];
"1001162" -> "1001157"  [label="DDG: close(user_core_fd) != 0"];
"1001162" -> "1001157"  [label="DDG: core_size < 0"];
"1001167" -> "1001162"  [label="DDG: core_size"];
"1001167" -> "1001162"  [label="DDG: 0"];
"1001157" -> "1001156"  [label="AST: "];
"1001157" -> "1001158"  [label="CFG: "];
"1001158" -> "1001157"  [label="AST: "];
"1001172" -> "1001157"  [label="CFG: "];
"1001191" -> "1001157"  [label="CFG: "];
"1001157" -> "1001228"  [label="DDG: close(user_core_fd) != 0 || core_size < 0"];
"1001157" -> "1001228"  [label="DDG: fsync(user_core_fd) != 0"];
"1001157" -> "1001228"  [label="DDG: fsync(user_core_fd) != 0 || close(user_core_fd) != 0 || core_size < 0"];
"1001158" -> "1001157"  [label="DDG: fsync(user_core_fd)"];
"1001158" -> "1001157"  [label="DDG: 0"];
}
