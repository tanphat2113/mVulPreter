digraph "0_abrt_8939398b82006ba1fec4ed491339fc075f43fc7c_1@API" {
"1000921" [label="(Call,core_size = copyfd_sparse(STDIN_FILENO, abrt_core_fd, user_core_fd, ulimit_c))"];
"1000923" [label="(Call,copyfd_sparse(STDIN_FILENO, abrt_core_fd, user_core_fd, ulimit_c))"];
"1000916" [label="(Call,abrt_core_fd = create_or_die(path))"];
"1000918" [label="(Call,create_or_die(path))"];
"1000643" [label="(Call,dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE, /*no flags*/0))"];
"1000884" [label="(Call,create_or_die(path))"];
"1000910" [label="(Call,error_msg_and_die(\"Error saving '%s'\", path))"];
"1000939" [label="(Call,core_size < 0)"];
"1000934" [label="(Call,close(abrt_core_fd) != 0 || core_size < 0)"];
"1000929" [label="(Call,fsync(abrt_core_fd) != 0 || close(abrt_core_fd) != 0 || core_size < 0)"];
"1000978" [label="(Call,core_size > ulimit_c)"];
"1000974" [label="(Call,ulimit_c == 0 /* paranoia */ || core_size > ulimit_c)"];
"1000969" [label="(Call,close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c))"];
"1000964" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c))"];
"1000960" [label="(Call,user_core_fd >= 0\n            /* error writing user coredump? */\n         && (fsync(user_core_fd) != 0 || close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c)\n            ))"];
"1001101" [label="(Call,(long long)core_size)"];
"1001094" [label="(Call,log(\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\", (long)pid, executable, path, (long long)core_size))"];
"1001104" [label="(Call,notify_new_path(path))"];
"1001122" [label="(Call,trim_problem_dirs(g_settings_dump_location, maxsize * (double)(1024*1024), path))"];
"1000969" [label="(Call,close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c))"];
"1000965" [label="(Call,fsync(user_core_fd) != 0)"];
"1000921" [label="(Call,core_size = copyfd_sparse(STDIN_FILENO, abrt_core_fd, user_core_fd, ulimit_c))"];
"1000948" [label="(Call,user_core_fd >= 0)"];
"1000884" [label="(Call,create_or_die(path))"];
"1000970" [label="(Call,close(user_core_fd) != 0)"];
"1001029" [label="(Call,strcpy(path + path_len, \"/hs_err.log\"))"];
"1001105" [label="(Identifier,path)"];
"1000656" [label="(Call,dd_create_basic_files(dd, fsuid, NULL))"];
"1000978" [label="(Call,core_size > ulimit_c)"];
"1000924" [label="(Identifier,STDIN_FILENO)"];
"1000939" [label="(Call,core_size < 0)"];
"1000935" [label="(Call,close(abrt_core_fd) != 0)"];
"1000980" [label="(Identifier,ulimit_c)"];
"1001094" [label="(Call,log(\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\", (long)pid, executable, path, (long long)core_size))"];
"1001108" [label="(Identifier,g_settings_nMaxCrashReportsSize)"];
"1000641" [label="(Call,dd = dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE, /*no flags*/0))"];
"1001110" [label="(Block,)"];
"1000911" [label="(Literal,\"Error saving '%s'\")"];
"1001122" [label="(Call,trim_problem_dirs(g_settings_dump_location, maxsize * (double)(1024*1024), path))"];
"1000979" [label="(Identifier,core_size)"];
"1001096" [label="(Call,(long)pid)"];
"1001228" [label="(MethodReturn,int)"];
"1000916" [label="(Call,abrt_core_fd = create_or_die(path))"];
"1001133" [label="(Identifier,rootdir)"];
"1000932" [label="(Identifier,abrt_core_fd)"];
"1001103" [label="(Identifier,core_size)"];
"1001104" [label="(Call,notify_new_path(path))"];
"1000930" [label="(Call,fsync(abrt_core_fd) != 0)"];
"1001100" [label="(Identifier,path)"];
"1000650" [label="(Block,)"];
"1001123" [label="(Identifier,g_settings_dump_location)"];
"1000961" [label="(Call,user_core_fd >= 0)"];
"1001037" [label="(Call,create_or_die(path))"];
"1000647" [label="(Literal,0)"];
"1000644" [label="(Identifier,path)"];
"1000882" [label="(Call,dst_fd = create_or_die(path))"];
"1000885" [label="(Identifier,path)"];
"1000928" [label="(ControlStructure,if (fsync(abrt_core_fd) != 0 || close(abrt_core_fd) != 0 || core_size < 0))"];
"1000964" [label="(Call,fsync(user_core_fd) != 0 || close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c))"];
"1000910" [label="(Call,error_msg_and_die(\"Error saving '%s'\", path))"];
"1001030" [label="(Call,path + path_len)"];
"1000975" [label="(Call,ulimit_c == 0)"];
"1000974" [label="(Call,ulimit_c == 0 /* paranoia */ || core_size > ulimit_c)"];
"1000912" [label="(Identifier,path)"];
"1001085" [label="(Call,rename(path, newpath))"];
"1000643" [label="(Call,dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE, /*no flags*/0))"];
"1001099" [label="(Identifier,executable)"];
"1000962" [label="(Identifier,user_core_fd)"];
"1000943" [label="(Call,unlink(path))"];
"1001067" [label="(Call,path[path_len] = '\0')"];
"1000914" [label="(Identifier,src_fd_binary)"];
"1000918" [label="(Call,create_or_die(path))"];
"1000645" [label="(Identifier,fsuid)"];
"1000940" [label="(Identifier,core_size)"];
"1001095" [label="(Literal,\"Saved core dump of pid %lu (%s) to %s (%llu bytes)\")"];
"1000926" [label="(Identifier,user_core_fd)"];
"1000925" [label="(Identifier,abrt_core_fd)"];
"1001075" [label="(Call,xstrndup(path, path_len - (sizeof(\".new\")-1)))"];
"1000907" [label="(Block,)"];
"1000791" [label="(Call,dd_save_text(dd, FILENAME_EXECUTABLE, executable))"];
"1000927" [label="(Identifier,ulimit_c)"];
"1000646" [label="(Identifier,DEFAULT_DUMP_DIR_MODE)"];
"1000917" [label="(Identifier,abrt_core_fd)"];
"1000934" [label="(Call,close(abrt_core_fd) != 0 || core_size < 0)"];
"1001124" [label="(Call,maxsize * (double)(1024*1024))"];
"1000923" [label="(Call,copyfd_sparse(STDIN_FILENO, abrt_core_fd, user_core_fd, ulimit_c))"];
"1000990" [label="(Identifier,java_log)"];
"1000984" [label="(Identifier,proc_cwd)"];
"1000941" [label="(Literal,0)"];
"1001131" [label="(Identifier,path)"];
"1000929" [label="(Call,fsync(abrt_core_fd) != 0 || close(abrt_core_fd) != 0 || core_size < 0)"];
"1000960" [label="(Call,user_core_fd >= 0\n            /* error writing user coredump? */\n         && (fsync(user_core_fd) != 0 || close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c)\n            ))"];
"1000922" [label="(Identifier,core_size)"];
"1000959" [label="(ControlStructure,if (user_core_fd >= 0\n            /* error writing user coredump? */\n         && (fsync(user_core_fd) != 0 || close(user_core_fd) != 0\n            /* user coredump is too big? */\n            || (ulimit_c == 0 /* paranoia */ || core_size > ulimit_c)\n            )\n        ))"];
"1000919" [label="(Identifier,path)"];
"1000931" [label="(Call,fsync(abrt_core_fd))"];
"1000944" [label="(Identifier,path)"];
"1001089" [label="(Call,strcpy(path, newpath))"];
"1001101" [label="(Call,(long long)core_size)"];
"1000921" -> "1000650"  [label="AST: "];
"1000921" -> "1000923"  [label="CFG: "];
"1000922" -> "1000921"  [label="AST: "];
"1000923" -> "1000921"  [label="AST: "];
"1000932" -> "1000921"  [label="CFG: "];
"1000921" -> "1001228"  [label="DDG: "];
"1000923" -> "1000921"  [label="DDG: "];
"1000923" -> "1000921"  [label="DDG: "];
"1000923" -> "1000921"  [label="DDG: "];
"1000923" -> "1000921"  [label="DDG: "];
"1000921" -> "1000939"  [label="DDG: "];
"1000921" -> "1000978"  [label="DDG: "];
"1000921" -> "1001101"  [label="DDG: "];
"1000923" -> "1000927"  [label="CFG: "];
"1000924" -> "1000923"  [label="AST: "];
"1000925" -> "1000923"  [label="AST: "];
"1000926" -> "1000923"  [label="AST: "];
"1000927" -> "1000923"  [label="AST: "];
"1000923" -> "1001228"  [label="DDG: "];
"1000923" -> "1001228"  [label="DDG: "];
"1000916" -> "1000923"  [label="DDG: "];
"1000923" -> "1000931"  [label="DDG: "];
"1000923" -> "1000948"  [label="DDG: "];
"1000923" -> "1000961"  [label="DDG: "];
"1000923" -> "1000975"  [label="DDG: "];
"1000916" -> "1000650"  [label="AST: "];
"1000916" -> "1000918"  [label="CFG: "];
"1000917" -> "1000916"  [label="AST: "];
"1000918" -> "1000916"  [label="AST: "];
"1000922" -> "1000916"  [label="CFG: "];
"1000916" -> "1001228"  [label="DDG: "];
"1000918" -> "1000916"  [label="DDG: "];
"1000918" -> "1000919"  [label="CFG: "];
"1000919" -> "1000918"  [label="AST: "];
"1000643" -> "1000918"  [label="DDG: "];
"1000884" -> "1000918"  [label="DDG: "];
"1000910" -> "1000918"  [label="DDG: "];
"1000918" -> "1000943"  [label="DDG: "];
"1000918" -> "1001029"  [label="DDG: "];
"1000918" -> "1001030"  [label="DDG: "];
"1000918" -> "1001037"  [label="DDG: "];
"1000918" -> "1001075"  [label="DDG: "];
"1000643" -> "1000641"  [label="AST: "];
"1000643" -> "1000647"  [label="CFG: "];
"1000644" -> "1000643"  [label="AST: "];
"1000645" -> "1000643"  [label="AST: "];
"1000646" -> "1000643"  [label="AST: "];
"1000647" -> "1000643"  [label="AST: "];
"1000641" -> "1000643"  [label="CFG: "];
"1000643" -> "1001228"  [label="DDG: "];
"1000643" -> "1001228"  [label="DDG: "];
"1000643" -> "1001228"  [label="DDG: "];
"1000643" -> "1000641"  [label="DDG: "];
"1000643" -> "1000641"  [label="DDG: "];
"1000643" -> "1000641"  [label="DDG: "];
"1000643" -> "1000641"  [label="DDG: "];
"1000643" -> "1000656"  [label="DDG: "];
"1000643" -> "1000884"  [label="DDG: "];
"1000884" -> "1000882"  [label="AST: "];
"1000884" -> "1000885"  [label="CFG: "];
"1000885" -> "1000884"  [label="AST: "];
"1000882" -> "1000884"  [label="CFG: "];
"1000884" -> "1000882"  [label="DDG: "];
"1000884" -> "1000910"  [label="DDG: "];
"1000910" -> "1000907"  [label="AST: "];
"1000910" -> "1000912"  [label="CFG: "];
"1000911" -> "1000910"  [label="AST: "];
"1000912" -> "1000910"  [label="AST: "];
"1000914" -> "1000910"  [label="CFG: "];
"1000910" -> "1001228"  [label="DDG: "];
"1000939" -> "1000934"  [label="AST: "];
"1000939" -> "1000941"  [label="CFG: "];
"1000940" -> "1000939"  [label="AST: "];
"1000941" -> "1000939"  [label="AST: "];
"1000934" -> "1000939"  [label="CFG: "];
"1000939" -> "1000934"  [label="DDG: "];
"1000939" -> "1000934"  [label="DDG: "];
"1000939" -> "1000978"  [label="DDG: "];
"1000939" -> "1001101"  [label="DDG: "];
"1000934" -> "1000929"  [label="AST: "];
"1000934" -> "1000935"  [label="CFG: "];
"1000935" -> "1000934"  [label="AST: "];
"1000929" -> "1000934"  [label="CFG: "];
"1000934" -> "1001228"  [label="DDG: "];
"1000934" -> "1001228"  [label="DDG: "];
"1000934" -> "1000929"  [label="DDG: "];
"1000934" -> "1000929"  [label="DDG: "];
"1000935" -> "1000934"  [label="DDG: "];
"1000935" -> "1000934"  [label="DDG: "];
"1000929" -> "1000928"  [label="AST: "];
"1000929" -> "1000930"  [label="CFG: "];
"1000930" -> "1000929"  [label="AST: "];
"1000944" -> "1000929"  [label="CFG: "];
"1000962" -> "1000929"  [label="CFG: "];
"1000929" -> "1001228"  [label="DDG: "];
"1000929" -> "1001228"  [label="DDG: "];
"1000929" -> "1001228"  [label="DDG: "];
"1000930" -> "1000929"  [label="DDG: "];
"1000930" -> "1000929"  [label="DDG: "];
"1000978" -> "1000974"  [label="AST: "];
"1000978" -> "1000980"  [label="CFG: "];
"1000979" -> "1000978"  [label="AST: "];
"1000980" -> "1000978"  [label="AST: "];
"1000974" -> "1000978"  [label="CFG: "];
"1000978" -> "1001228"  [label="DDG: "];
"1000978" -> "1000974"  [label="DDG: "];
"1000978" -> "1000974"  [label="DDG: "];
"1000975" -> "1000978"  [label="DDG: "];
"1000978" -> "1001101"  [label="DDG: "];
"1000974" -> "1000969"  [label="AST: "];
"1000974" -> "1000975"  [label="CFG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000969" -> "1000974"  [label="CFG: "];
"1000974" -> "1001228"  [label="DDG: "];
"1000974" -> "1001228"  [label="DDG: "];
"1000974" -> "1000969"  [label="DDG: "];
"1000974" -> "1000969"  [label="DDG: "];
"1000975" -> "1000974"  [label="DDG: "];
"1000975" -> "1000974"  [label="DDG: "];
"1000969" -> "1000964"  [label="AST: "];
"1000969" -> "1000970"  [label="CFG: "];
"1000970" -> "1000969"  [label="AST: "];
"1000964" -> "1000969"  [label="CFG: "];
"1000969" -> "1001228"  [label="DDG: "];
"1000969" -> "1001228"  [label="DDG: "];
"1000969" -> "1000964"  [label="DDG: "];
"1000969" -> "1000964"  [label="DDG: "];
"1000970" -> "1000969"  [label="DDG: "];
"1000970" -> "1000969"  [label="DDG: "];
"1000964" -> "1000960"  [label="AST: "];
"1000964" -> "1000965"  [label="CFG: "];
"1000965" -> "1000964"  [label="AST: "];
"1000960" -> "1000964"  [label="CFG: "];
"1000964" -> "1001228"  [label="DDG: "];
"1000964" -> "1001228"  [label="DDG: "];
"1000964" -> "1000960"  [label="DDG: "];
"1000964" -> "1000960"  [label="DDG: "];
"1000965" -> "1000964"  [label="DDG: "];
"1000965" -> "1000964"  [label="DDG: "];
"1000960" -> "1000959"  [label="AST: "];
"1000960" -> "1000961"  [label="CFG: "];
"1000961" -> "1000960"  [label="AST: "];
"1000984" -> "1000960"  [label="CFG: "];
"1000990" -> "1000960"  [label="CFG: "];
"1000960" -> "1001228"  [label="DDG: "];
"1000960" -> "1001228"  [label="DDG: "];
"1000960" -> "1001228"  [label="DDG: "];
"1000961" -> "1000960"  [label="DDG: "];
"1000961" -> "1000960"  [label="DDG: "];
"1001101" -> "1001094"  [label="AST: "];
"1001101" -> "1001103"  [label="CFG: "];
"1001102" -> "1001101"  [label="AST: "];
"1001103" -> "1001101"  [label="AST: "];
"1001094" -> "1001101"  [label="CFG: "];
"1001101" -> "1001228"  [label="DDG: "];
"1001101" -> "1001094"  [label="DDG: "];
"1001094" -> "1000650"  [label="AST: "];
"1001095" -> "1001094"  [label="AST: "];
"1001096" -> "1001094"  [label="AST: "];
"1001099" -> "1001094"  [label="AST: "];
"1001100" -> "1001094"  [label="AST: "];
"1001105" -> "1001094"  [label="CFG: "];
"1001094" -> "1001228"  [label="DDG: "];
"1001094" -> "1001228"  [label="DDG: "];
"1001094" -> "1001228"  [label="DDG: "];
"1001094" -> "1001228"  [label="DDG: "];
"1001096" -> "1001094"  [label="DDG: "];
"1000791" -> "1001094"  [label="DDG: "];
"1001085" -> "1001094"  [label="DDG: "];
"1001067" -> "1001094"  [label="DDG: "];
"1001089" -> "1001094"  [label="DDG: "];
"1001094" -> "1001104"  [label="DDG: "];
"1001104" -> "1000650"  [label="AST: "];
"1001104" -> "1001105"  [label="CFG: "];
"1001105" -> "1001104"  [label="AST: "];
"1001108" -> "1001104"  [label="CFG: "];
"1001104" -> "1001228"  [label="DDG: "];
"1001104" -> "1001228"  [label="DDG: "];
"1001067" -> "1001104"  [label="DDG: "];
"1001104" -> "1001122"  [label="DDG: "];
"1001122" -> "1001110"  [label="AST: "];
"1001122" -> "1001131"  [label="CFG: "];
"1001123" -> "1001122"  [label="AST: "];
"1001124" -> "1001122"  [label="AST: "];
"1001131" -> "1001122"  [label="AST: "];
"1001133" -> "1001122"  [label="CFG: "];
"1001122" -> "1001228"  [label="DDG: "];
"1001122" -> "1001228"  [label="DDG: "];
"1001122" -> "1001228"  [label="DDG: "];
"1001122" -> "1001228"  [label="DDG: "];
"1001124" -> "1001122"  [label="DDG: "];
"1001124" -> "1001122"  [label="DDG: "];
"1001067" -> "1001122"  [label="DDG: "];
}
