digraph "0_abrt_8939398b82006ba1fec4ed491339fc075f43fc7c_1@pointer" {
"1000300" [label="(Call,*pid_str = argv[3])"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000359" [label="(Call,argv[8] = uts.nodename)"];
"1000301" [label="(Identifier,pid_str)"];
"1000307" [label="(Identifier,pid)"];
"1000176" [label="(Call,error_msg_and_die(\"Usage: %s SIGNO CORE_SIZE_LIMIT PID UID GID TIME BINARY_NAME [HOSTNAME]\", argv[0]))"];
"1000351" [label="(Call,!argv[8])"];
"1000150" [label="(Block,)"];
"1000300" [label="(Call,*pid_str = argv[3])"];
"1000302" [label="(Call,argv[3])"];
"1000149" [label="(MethodParameterIn,char** argv)"];
"1000275" [label="(Call,strtoull(argv[2], NULL, 10))"];
"1000308" [label="(Call,xatoi_positive(argv[3]))"];
"1000315" [label="(Call,xatoi_positive(argv[4]))"];
"1000262" [label="(Call,* signal_str = argv[1])"];
"1000201" [label="(Call,strchrnul(argv[i], ' '))"];
"1001228" [label="(MethodReturn,int)"];
"1000182" [label="(Call,strchr(argv[1], ' '))"];
"1000326" [label="(Call,perror_msg_and_die(\"PID '%s' or limit '%s' is bogus\", argv[3], argv[2]))"];
"1000300" -> "1000150"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000307" -> "1000300"  [label="CFG: "];
"1000300" -> "1001228"  [label="DDG: pid_str"];
"1000149" -> "1000300"  [label="DDG: argv"];
"1000149" -> "1000147"  [label="AST: "];
"1000149" -> "1001228"  [label="DDG: argv"];
"1000149" -> "1000176"  [label="DDG: argv"];
"1000149" -> "1000182"  [label="DDG: argv"];
"1000149" -> "1000201"  [label="DDG: argv"];
"1000149" -> "1000262"  [label="DDG: argv"];
"1000149" -> "1000275"  [label="DDG: argv"];
"1000149" -> "1000308"  [label="DDG: argv"];
"1000149" -> "1000315"  [label="DDG: argv"];
"1000149" -> "1000326"  [label="DDG: argv"];
"1000149" -> "1000351"  [label="DDG: argv"];
"1000149" -> "1000359"  [label="DDG: argv"];
}
