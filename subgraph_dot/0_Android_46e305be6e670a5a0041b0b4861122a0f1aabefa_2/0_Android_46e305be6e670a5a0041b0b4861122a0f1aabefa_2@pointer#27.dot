digraph "0_Android_46e305be6e670a5a0041b0b4861122a0f1aabefa_2@pointer" {
"1001220" [label="(Call,portDefn->nBufferSize > m_custom_buffersize.input_buffersize)"];
"1001216" [label="(Call,m_custom_buffersize.input_buffersize\n && (portDefn->nBufferSize > m_custom_buffersize.input_buffersize))"];
"1001228" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: Custom buffer size set by client: %d, trying to set: %d\",\n                                               m_custom_buffersize.input_buffersize, portDefn->nBufferSize))"];
"1001278" [label="(Call,portDefn->nBufferSize != drv_ctx.ip_buf.buffer_size)"];
"1001268" [label="(Call,portDefn->nBufferCountActual >= drv_ctx.ip_buf.mincount\n                                            || portDefn->nBufferSize != drv_ctx.ip_buf.buffer_size)"];
"1001313" [label="(Call,(portDefn->nBufferSize + buffer_prop->alignment - 1) &\n (~(buffer_prop->alignment - 1)))"];
"1001307" [label="(Call,drv_ctx.ip_buf.buffer_size = (portDefn->nBufferSize + buffer_prop->alignment - 1) &\n (~(buffer_prop->alignment - 1)))"];
"1001345" [label="(Call,(unsigned int)drv_ctx.ip_buf.buffer_size)"];
"1001338" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: IP Requirements(#%d: %u) Requested(#%u: %u)\",\n                                               drv_ctx.ip_buf.mincount, (unsigned int)drv_ctx.ip_buf.buffer_size,\n (unsigned int)portDefn->nBufferCountActual, (unsigned int)portDefn->nBufferSize))"];
"1001314" [label="(Call,portDefn->nBufferSize + buffer_prop->alignment - 1)"];
"1001357" [label="(Call,(unsigned int)portDefn->nBufferSize)"];
"1001287" [label="(Block,)"];
"1001243" [label="(Identifier,portDefn)"];
"1001313" [label="(Call,(portDefn->nBufferSize + buffer_prop->alignment - 1) &\n (~(buffer_prop->alignment - 1)))"];
"1001267" [label="(ControlStructure,if (portDefn->nBufferCountActual >= drv_ctx.ip_buf.mincount\n                                            || portDefn->nBufferSize != drv_ctx.ip_buf.buffer_size))"];
"1001357" [label="(Call,(unsigned int)portDefn->nBufferSize)"];
"1001318" [label="(Call,buffer_prop->alignment - 1)"];
"1001337" [label="(Block,)"];
"1001216" [label="(Call,m_custom_buffersize.input_buffersize\n && (portDefn->nBufferSize > m_custom_buffersize.input_buffersize))"];
"1001278" [label="(Call,portDefn->nBufferSize != drv_ctx.ip_buf.buffer_size)"];
"1001224" [label="(Call,m_custom_buffersize.input_buffersize)"];
"1001215" [label="(ControlStructure,if (m_custom_buffersize.input_buffersize\n && (portDefn->nBufferSize > m_custom_buffersize.input_buffersize)))"];
"1001289" [label="(Identifier,port_format_changed)"];
"1001363" [label="(Identifier,eRet)"];
"1001282" [label="(Call,drv_ctx.ip_buf.buffer_size)"];
"1001326" [label="(Identifier,buffer_prop)"];
"1001269" [label="(Call,portDefn->nBufferCountActual >= drv_ctx.ip_buf.mincount)"];
"1001338" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: IP Requirements(#%d: %u) Requested(#%u: %u)\",\n                                               drv_ctx.ip_buf.mincount, (unsigned int)drv_ctx.ip_buf.buffer_size,\n (unsigned int)portDefn->nBufferCountActual, (unsigned int)portDefn->nBufferSize))"];
"1001230" [label="(Call,m_custom_buffersize.input_buffersize)"];
"1001307" [label="(Call,drv_ctx.ip_buf.buffer_size = (portDefn->nBufferSize + buffer_prop->alignment - 1) &\n (~(buffer_prop->alignment - 1)))"];
"1001233" [label="(Call,portDefn->nBufferSize)"];
"1001352" [label="(Call,(unsigned int)portDefn->nBufferCountActual)"];
"1001315" [label="(Call,portDefn->nBufferSize)"];
"1001345" [label="(Call,(unsigned int)drv_ctx.ip_buf.buffer_size)"];
"1001217" [label="(Call,m_custom_buffersize.input_buffersize)"];
"1001237" [label="(Identifier,eRet)"];
"1001268" [label="(Call,portDefn->nBufferCountActual >= drv_ctx.ip_buf.mincount\n                                            || portDefn->nBufferSize != drv_ctx.ip_buf.buffer_size)"];
"1001220" [label="(Call,portDefn->nBufferSize > m_custom_buffersize.input_buffersize)"];
"1001228" [label="(Call,DEBUG_PRINT_ERROR(\"ERROR: Custom buffer size set by client: %d, trying to set: %d\",\n                                               m_custom_buffersize.input_buffersize, portDefn->nBufferSize))"];
"1001359" [label="(Call,portDefn->nBufferSize)"];
"1001279" [label="(Call,portDefn->nBufferSize)"];
"1001229" [label="(Literal,\"ERROR: Custom buffer size set by client: %d, trying to set: %d\")"];
"1001340" [label="(Call,drv_ctx.ip_buf.mincount)"];
"1001308" [label="(Call,drv_ctx.ip_buf.buffer_size)"];
"1001330" [label="(Identifier,eRet)"];
"1003158" [label="(MethodReturn,OMX_ERRORTYPE)"];
"1001335" [label="(Identifier,false)"];
"1001347" [label="(Call,drv_ctx.ip_buf.buffer_size)"];
"1001314" [label="(Call,portDefn->nBufferSize + buffer_prop->alignment - 1)"];
"1001221" [label="(Call,portDefn->nBufferSize)"];
"1001227" [label="(Block,)"];
"1001339" [label="(Literal,\"ERROR: IP Requirements(#%d: %u) Requested(#%u: %u)\")"];
"1001323" [label="(Call,~(buffer_prop->alignment - 1))"];
"1001220" -> "1001216"  [label="AST: "];
"1001220" -> "1001224"  [label="CFG: "];
"1001221" -> "1001220"  [label="AST: "];
"1001224" -> "1001220"  [label="AST: "];
"1001216" -> "1001220"  [label="CFG: "];
"1001220" -> "1003158"  [label="DDG: "];
"1001220" -> "1001216"  [label="DDG: "];
"1001220" -> "1001216"  [label="DDG: "];
"1001220" -> "1001228"  [label="DDG: "];
"1001220" -> "1001278"  [label="DDG: "];
"1001220" -> "1001313"  [label="DDG: "];
"1001220" -> "1001314"  [label="DDG: "];
"1001220" -> "1001357"  [label="DDG: "];
"1001216" -> "1001215"  [label="AST: "];
"1001216" -> "1001217"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001229" -> "1001216"  [label="CFG: "];
"1001243" -> "1001216"  [label="CFG: "];
"1001216" -> "1003158"  [label="DDG: "];
"1001216" -> "1003158"  [label="DDG: "];
"1001216" -> "1003158"  [label="DDG: "];
"1001216" -> "1001228"  [label="DDG: "];
"1001228" -> "1001227"  [label="AST: "];
"1001228" -> "1001233"  [label="CFG: "];
"1001229" -> "1001228"  [label="AST: "];
"1001230" -> "1001228"  [label="AST: "];
"1001233" -> "1001228"  [label="AST: "];
"1001237" -> "1001228"  [label="CFG: "];
"1001228" -> "1003158"  [label="DDG: "];
"1001228" -> "1003158"  [label="DDG: "];
"1001228" -> "1003158"  [label="DDG: "];
"1001278" -> "1001268"  [label="AST: "];
"1001278" -> "1001282"  [label="CFG: "];
"1001279" -> "1001278"  [label="AST: "];
"1001282" -> "1001278"  [label="AST: "];
"1001268" -> "1001278"  [label="CFG: "];
"1001278" -> "1003158"  [label="DDG: "];
"1001278" -> "1003158"  [label="DDG: "];
"1001278" -> "1001268"  [label="DDG: "];
"1001278" -> "1001268"  [label="DDG: "];
"1001278" -> "1001313"  [label="DDG: "];
"1001278" -> "1001314"  [label="DDG: "];
"1001278" -> "1001345"  [label="DDG: "];
"1001278" -> "1001357"  [label="DDG: "];
"1001268" -> "1001267"  [label="AST: "];
"1001268" -> "1001269"  [label="CFG: "];
"1001269" -> "1001268"  [label="AST: "];
"1001289" -> "1001268"  [label="CFG: "];
"1001335" -> "1001268"  [label="CFG: "];
"1001268" -> "1003158"  [label="DDG: "];
"1001268" -> "1003158"  [label="DDG: "];
"1001268" -> "1003158"  [label="DDG: "];
"1001269" -> "1001268"  [label="DDG: "];
"1001269" -> "1001268"  [label="DDG: "];
"1001313" -> "1001307"  [label="AST: "];
"1001313" -> "1001323"  [label="CFG: "];
"1001314" -> "1001313"  [label="AST: "];
"1001323" -> "1001313"  [label="AST: "];
"1001307" -> "1001313"  [label="CFG: "];
"1001313" -> "1003158"  [label="DDG: "];
"1001313" -> "1003158"  [label="DDG: "];
"1001313" -> "1001307"  [label="DDG: "];
"1001313" -> "1001307"  [label="DDG: "];
"1001318" -> "1001313"  [label="DDG: "];
"1001318" -> "1001313"  [label="DDG: "];
"1001323" -> "1001313"  [label="DDG: "];
"1001307" -> "1001287"  [label="AST: "];
"1001308" -> "1001307"  [label="AST: "];
"1001330" -> "1001307"  [label="CFG: "];
"1001307" -> "1003158"  [label="DDG: "];
"1001307" -> "1003158"  [label="DDG: "];
"1001307" -> "1001345"  [label="DDG: "];
"1001345" -> "1001338"  [label="AST: "];
"1001345" -> "1001347"  [label="CFG: "];
"1001346" -> "1001345"  [label="AST: "];
"1001347" -> "1001345"  [label="AST: "];
"1001353" -> "1001345"  [label="CFG: "];
"1001345" -> "1003158"  [label="DDG: "];
"1001345" -> "1001338"  [label="DDG: "];
"1001338" -> "1001337"  [label="AST: "];
"1001338" -> "1001357"  [label="CFG: "];
"1001339" -> "1001338"  [label="AST: "];
"1001340" -> "1001338"  [label="AST: "];
"1001352" -> "1001338"  [label="AST: "];
"1001357" -> "1001338"  [label="AST: "];
"1001363" -> "1001338"  [label="CFG: "];
"1001338" -> "1003158"  [label="DDG: "];
"1001338" -> "1003158"  [label="DDG: "];
"1001338" -> "1003158"  [label="DDG: "];
"1001338" -> "1003158"  [label="DDG: "];
"1001338" -> "1003158"  [label="DDG: "];
"1001269" -> "1001338"  [label="DDG: "];
"1001352" -> "1001338"  [label="DDG: "];
"1001357" -> "1001338"  [label="DDG: "];
"1001314" -> "1001318"  [label="CFG: "];
"1001315" -> "1001314"  [label="AST: "];
"1001318" -> "1001314"  [label="AST: "];
"1001326" -> "1001314"  [label="CFG: "];
"1001314" -> "1003158"  [label="DDG: "];
"1001318" -> "1001314"  [label="DDG: "];
"1001318" -> "1001314"  [label="DDG: "];
"1001357" -> "1001359"  [label="CFG: "];
"1001358" -> "1001357"  [label="AST: "];
"1001359" -> "1001357"  [label="AST: "];
"1001357" -> "1003158"  [label="DDG: "];
}
