digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000307" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000188" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000190" [label="(Identifier,AV_LOG_WARNING)"];
"1000496" [label="(Call,ff_get_buffer(avctx, frame, 0))"];
"1000703" [label="(MethodReturn,static int)"];
"1000285" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Incorrect offset passed\n\"))"];
"1000168" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000309" [label="(Identifier,AV_LOG_ERROR)"];
"1000195" [label="(Identifier,s)"];
"1000191" [label="(Literal,\"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\")"];
"1000187" [label="(Block,)"];
"1000189" [label="(Identifier,avctx)"];
"1000384" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error reading frame header\n\"))"];
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000306" [label="(Block,)"];
"1000371" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000312" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000538" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error decoding frame\n\"))"];
"1000308" [label="(Identifier,avctx)"];
"1000188" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000307" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000310" [label="(Literal,\"Packet is too small\n\")"];
"1000307" -> "1000306"  [label="AST: "];
"1000307" -> "1000310"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000310" -> "1000307"  [label="AST: "];
"1000312" -> "1000307"  [label="CFG: "];
"1000307" -> "1000703"  [label="DDG: "];
"1000307" -> "1000703"  [label="DDG: "];
"1000307" -> "1000703"  [label="DDG: "];
"1000188" -> "1000307"  [label="DDG: "];
"1000106" -> "1000307"  [label="DDG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000191"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000106" -> "1000188"  [label="DDG: "];
"1000188" -> "1000285"  [label="DDG: "];
"1000188" -> "1000371"  [label="DDG: "];
"1000188" -> "1000384"  [label="DDG: "];
"1000188" -> "1000496"  [label="DDG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000703"  [label="DDG: "];
"1000106" -> "1000168"  [label="DDG: "];
"1000106" -> "1000285"  [label="DDG: "];
"1000106" -> "1000371"  [label="DDG: "];
"1000106" -> "1000384"  [label="DDG: "];
"1000106" -> "1000496"  [label="DDG: "];
"1000106" -> "1000538"  [label="DDG: "];
}
