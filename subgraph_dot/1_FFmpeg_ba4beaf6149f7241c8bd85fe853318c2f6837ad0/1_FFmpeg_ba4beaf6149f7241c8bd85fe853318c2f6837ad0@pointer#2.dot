digraph "1_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000487" [label="(Call,frame->nb_samples = blockstodecode)"];
"1000484" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000441" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000424" [label="(Call,blockstodecode = s->samples)"];
"1000411" [label="(Call,FFMIN(s->blocks_per_loop, s->samples))"];
"1000141" [label="(Call,!s->samples)"];
"1000135" [label="(Call,s->samples >= 0)"];
"1000390" [label="(Call,s->samples = nblocks)"];
"1000367" [label="(Call,nblocks > INT_MAX)"];
"1000365" [label="(Call,!nblocks)"];
"1000259" [label="(Call,nblocks = bytestream_get_be32(&s->ptr))"];
"1000261" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000243" [label="(Call,s->ptr = s->data)"];
"1000201" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000198" [label="(Call,buf_size += 2)"];
"1000182" [label="(Call,buf_size != avpkt->size)"];
"1000174" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000176" [label="(Call,avpkt->size & ~3)"];
"1000162" [label="(Call,avpkt->size < 8)"];
"1000150" [label="(Call,!avpkt->size)"];
"1000220" [label="(Call,(uint32_t *) s->data)"];
"1000212" [label="(Call,!s->data)"];
"1000409" [label="(Call,blockstodecode = FFMIN(s->blocks_per_loop, s->samples))"];
"1000204" [label="(Identifier,s)"];
"1000177" [label="(Call,avpkt->size)"];
"1000694" [label="(Call,!s->samples ? avpkt->size : 0)"];
"1000491" [label="(Identifier,blockstodecode)"];
"1000443" [label="(Literal,8)"];
"1000134" [label="(Call,av_assert0(s->samples >= 0))"];
"1000252" [label="(Identifier,s)"];
"1000367" [label="(Call,nblocks > INT_MAX)"];
"1000166" [label="(Literal,8)"];
"1000484" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000250" [label="(Call,s->data_end = s->data + buf_size)"];
"1000369" [label="(Identifier,INT_MAX)"];
"1000442" [label="(Identifier,blockstodecode)"];
"1000183" [label="(Identifier,buf_size)"];
"1000364" [label="(Call,!nblocks || nblocks > INT_MAX)"];
"1000201" [label="(Call,av_fast_padded_malloc(&s->data, &s->data_size, buf_size))"];
"1000213" [label="(Call,s->data)"];
"1000135" [label="(Call,s->samples >= 0)"];
"1000405" [label="(Return,return avpkt->size;)"];
"1000432" [label="(Identifier,s)"];
"1000332" [label="(Call,s->data_end - s->ptr)"];
"1000139" [label="(Literal,0)"];
"1000260" [label="(Identifier,nblocks)"];
"1000371" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000175" [label="(Identifier,buf_size)"];
"1000298" [label="(Call,s->data_end - s->ptr)"];
"1000180" [label="(Identifier,~3)"];
"1000268" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000426" [label="(Call,s->samples)"];
"1000486" [label="(Literal,8)"];
"1000181" [label="(ControlStructure,if (buf_size != avpkt->size))"];
"1000222" [label="(Call,s->data)"];
"1000199" [label="(Identifier,buf_size)"];
"1000520" [label="(Call,ape_unpack_mono(s, blockstodecode))"];
"1000366" [label="(Identifier,nblocks)"];
"1000524" [label="(Call,ape_unpack_stereo(s, blockstodecode))"];
"1000480" [label="(Call,s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000152" [label="(Identifier,avpkt)"];
"1000424" [label="(Call,blockstodecode = s->samples)"];
"1000212" [label="(Call,!s->data)"];
"1000198" [label="(Call,buf_size += 2)"];
"1000140" [label="(ControlStructure,if(!s->samples))"];
"1000261" [label="(Call,bytestream_get_be32(&s->ptr))"];
"1000162" [label="(Call,avpkt->size < 8)"];
"1000418" [label="(ControlStructure,if (s->fileversion < 3930))"];
"1000485" [label="(Identifier,blockstodecode)"];
"1000157" [label="(Identifier,got_frame_ptr)"];
"1000415" [label="(Call,s->samples)"];
"1000410" [label="(Identifier,blockstodecode)"];
"1000259" [label="(Call,nblocks = bytestream_get_be32(&s->ptr))"];
"1000189" [label="(Identifier,avctx)"];
"1000228" [label="(Call,buf_size >> 2)"];
"1000412" [label="(Call,s->blocks_per_loop)"];
"1000232" [label="(Call,s->data + (buf_size & ~3))"];
"1000396" [label="(Call,!s->data)"];
"1000474" [label="(Call,s->decoded[1] = s->decoded_buffer + FFALIGN(blockstodecode, 8))"];
"1000151" [label="(Call,avpkt->size)"];
"1000169" [label="(Identifier,avctx)"];
"1000161" [label="(ControlStructure,if (avpkt->size < 8))"];
"1000267" [label="(Identifier,offset)"];
"1000440" [label="(Call,FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer))"];
"1000409" [label="(Call,blockstodecode = FFMIN(s->blocks_per_loop, s->samples))"];
"1000254" [label="(Call,s->data + buf_size)"];
"1000488" [label="(Call,frame->nb_samples)"];
"1000141" [label="(Call,!s->samples)"];
"1000200" [label="(Literal,2)"];
"1000184" [label="(Call,avpkt->size)"];
"1000411" [label="(Call,FFMIN(s->blocks_per_loop, s->samples))"];
"1000195" [label="(Identifier,s)"];
"1000447" [label="(Identifier,s)"];
"1000142" [label="(Call,s->samples)"];
"1000110" [label="(Block,)"];
"1000441" [label="(Call,FFALIGN(blockstodecode, 8))"];
"1000211" [label="(ControlStructure,if (!s->data))"];
"1000244" [label="(Call,s->ptr)"];
"1000176" [label="(Call,avpkt->size & ~3)"];
"1000163" [label="(Call,avpkt->size)"];
"1000149" [label="(ControlStructure,if (!avpkt->size))"];
"1000365" [label="(Call,!nblocks)"];
"1000495" [label="(Identifier,ret)"];
"1000394" [label="(Identifier,nblocks)"];
"1000684" [label="(Call,s->samples -= blockstodecode)"];
"1000391" [label="(Call,s->samples)"];
"1000262" [label="(Call,&s->ptr)"];
"1000192" [label="(ControlStructure,if (s->fileversion < 3950))"];
"1000703" [label="(MethodReturn,static int)"];
"1000220" [label="(Call,(uint32_t *) s->data)"];
"1000150" [label="(Call,!avpkt->size)"];
"1000218" [label="(Identifier,ENOMEM)"];
"1000210" [label="(Identifier,buf_size)"];
"1000368" [label="(Identifier,nblocks)"];
"1000390" [label="(Call,s->samples = nblocks)"];
"1000247" [label="(Call,s->data)"];
"1000182" [label="(Call,buf_size != avpkt->size)"];
"1000174" [label="(Call,buf_size = avpkt->size & ~3)"];
"1000164" [label="(Identifier,avpkt)"];
"1000219" [label="(Call,s->bdsp.bswap_buf((uint32_t *) s->data, (const uint32_t *) buf,\n                          buf_size >> 2))"];
"1000145" [label="(Block,)"];
"1000214" [label="(Identifier,s)"];
"1000236" [label="(Call,buf_size & ~3)"];
"1000487" [label="(Call,frame->nb_samples = blockstodecode)"];
"1000425" [label="(Identifier,blockstodecode)"];
"1000231" [label="(Call,memset(s->data + (buf_size & ~3), 0, buf_size & 3))"];
"1000206" [label="(Call,&s->data_size)"];
"1000243" [label="(Call,s->ptr = s->data)"];
"1000421" [label="(Identifier,s)"];
"1000398" [label="(Identifier,s)"];
"1000202" [label="(Call,&s->data)"];
"1000136" [label="(Call,s->samples)"];
"1000487" -> "1000110"  [label="AST: "];
"1000487" -> "1000491"  [label="CFG: "];
"1000488" -> "1000487"  [label="AST: "];
"1000491" -> "1000487"  [label="AST: "];
"1000495" -> "1000487"  [label="CFG: "];
"1000487" -> "1000703"  [label="DDG: frame->nb_samples"];
"1000487" -> "1000703"  [label="DDG: blockstodecode"];
"1000484" -> "1000487"  [label="DDG: blockstodecode"];
"1000484" -> "1000480"  [label="AST: "];
"1000484" -> "1000486"  [label="CFG: "];
"1000485" -> "1000484"  [label="AST: "];
"1000486" -> "1000484"  [label="AST: "];
"1000480" -> "1000484"  [label="CFG: "];
"1000484" -> "1000474"  [label="DDG: blockstodecode"];
"1000484" -> "1000474"  [label="DDG: 8"];
"1000484" -> "1000480"  [label="DDG: blockstodecode"];
"1000484" -> "1000480"  [label="DDG: 8"];
"1000441" -> "1000484"  [label="DDG: blockstodecode"];
"1000484" -> "1000520"  [label="DDG: blockstodecode"];
"1000484" -> "1000524"  [label="DDG: blockstodecode"];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000443"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000443" -> "1000441"  [label="AST: "];
"1000447" -> "1000441"  [label="CFG: "];
"1000441" -> "1000703"  [label="DDG: blockstodecode"];
"1000441" -> "1000440"  [label="DDG: blockstodecode"];
"1000441" -> "1000440"  [label="DDG: 8"];
"1000424" -> "1000441"  [label="DDG: blockstodecode"];
"1000409" -> "1000441"  [label="DDG: blockstodecode"];
"1000424" -> "1000418"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000432" -> "1000424"  [label="CFG: "];
"1000424" -> "1000703"  [label="DDG: s->samples"];
"1000411" -> "1000424"  [label="DDG: s->samples"];
"1000411" -> "1000409"  [label="AST: "];
"1000411" -> "1000415"  [label="CFG: "];
"1000412" -> "1000411"  [label="AST: "];
"1000415" -> "1000411"  [label="AST: "];
"1000409" -> "1000411"  [label="CFG: "];
"1000411" -> "1000703"  [label="DDG: s->blocks_per_loop"];
"1000411" -> "1000703"  [label="DDG: s->samples"];
"1000411" -> "1000409"  [label="DDG: s->blocks_per_loop"];
"1000411" -> "1000409"  [label="DDG: s->samples"];
"1000141" -> "1000411"  [label="DDG: s->samples"];
"1000390" -> "1000411"  [label="DDG: s->samples"];
"1000411" -> "1000684"  [label="DDG: s->samples"];
"1000141" -> "1000140"  [label="AST: "];
"1000141" -> "1000142"  [label="CFG: "];
"1000142" -> "1000141"  [label="AST: "];
"1000152" -> "1000141"  [label="CFG: "];
"1000398" -> "1000141"  [label="CFG: "];
"1000141" -> "1000703"  [label="DDG: s->samples"];
"1000141" -> "1000703"  [label="DDG: !s->samples"];
"1000135" -> "1000141"  [label="DDG: s->samples"];
"1000135" -> "1000134"  [label="AST: "];
"1000135" -> "1000139"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000139" -> "1000135"  [label="AST: "];
"1000134" -> "1000135"  [label="CFG: "];
"1000135" -> "1000134"  [label="DDG: s->samples"];
"1000135" -> "1000134"  [label="DDG: 0"];
"1000390" -> "1000145"  [label="AST: "];
"1000390" -> "1000394"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000394" -> "1000390"  [label="AST: "];
"1000398" -> "1000390"  [label="CFG: "];
"1000390" -> "1000703"  [label="DDG: nblocks"];
"1000390" -> "1000703"  [label="DDG: s->samples"];
"1000367" -> "1000390"  [label="DDG: nblocks"];
"1000365" -> "1000390"  [label="DDG: nblocks"];
"1000367" -> "1000364"  [label="AST: "];
"1000367" -> "1000369"  [label="CFG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000369" -> "1000367"  [label="AST: "];
"1000364" -> "1000367"  [label="CFG: "];
"1000367" -> "1000703"  [label="DDG: INT_MAX"];
"1000367" -> "1000703"  [label="DDG: nblocks"];
"1000367" -> "1000364"  [label="DDG: nblocks"];
"1000367" -> "1000364"  [label="DDG: INT_MAX"];
"1000365" -> "1000367"  [label="DDG: nblocks"];
"1000367" -> "1000371"  [label="DDG: nblocks"];
"1000365" -> "1000364"  [label="AST: "];
"1000365" -> "1000366"  [label="CFG: "];
"1000366" -> "1000365"  [label="AST: "];
"1000368" -> "1000365"  [label="CFG: "];
"1000364" -> "1000365"  [label="CFG: "];
"1000365" -> "1000703"  [label="DDG: nblocks"];
"1000365" -> "1000364"  [label="DDG: nblocks"];
"1000259" -> "1000365"  [label="DDG: nblocks"];
"1000365" -> "1000371"  [label="DDG: nblocks"];
"1000259" -> "1000145"  [label="AST: "];
"1000259" -> "1000261"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000267" -> "1000259"  [label="CFG: "];
"1000259" -> "1000703"  [label="DDG: nblocks"];
"1000261" -> "1000259"  [label="DDG: &s->ptr"];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000243" -> "1000261"  [label="DDG: s->ptr"];
"1000261" -> "1000268"  [label="DDG: &s->ptr"];
"1000243" -> "1000145"  [label="AST: "];
"1000243" -> "1000247"  [label="CFG: "];
"1000244" -> "1000243"  [label="AST: "];
"1000247" -> "1000243"  [label="AST: "];
"1000252" -> "1000243"  [label="CFG: "];
"1000243" -> "1000703"  [label="DDG: s->ptr"];
"1000201" -> "1000243"  [label="DDG: &s->data"];
"1000220" -> "1000243"  [label="DDG: s->data"];
"1000243" -> "1000268"  [label="DDG: s->ptr"];
"1000243" -> "1000298"  [label="DDG: s->ptr"];
"1000243" -> "1000332"  [label="DDG: s->ptr"];
"1000201" -> "1000145"  [label="AST: "];
"1000201" -> "1000210"  [label="CFG: "];
"1000202" -> "1000201"  [label="AST: "];
"1000206" -> "1000201"  [label="AST: "];
"1000210" -> "1000201"  [label="AST: "];
"1000214" -> "1000201"  [label="CFG: "];
"1000201" -> "1000703"  [label="DDG: av_fast_padded_malloc(&s->data, &s->data_size, buf_size)"];
"1000201" -> "1000703"  [label="DDG: buf_size"];
"1000201" -> "1000703"  [label="DDG: &s->data_size"];
"1000201" -> "1000703"  [label="DDG: &s->data"];
"1000198" -> "1000201"  [label="DDG: buf_size"];
"1000182" -> "1000201"  [label="DDG: buf_size"];
"1000201" -> "1000212"  [label="DDG: &s->data"];
"1000201" -> "1000220"  [label="DDG: &s->data"];
"1000201" -> "1000228"  [label="DDG: buf_size"];
"1000201" -> "1000231"  [label="DDG: &s->data"];
"1000201" -> "1000232"  [label="DDG: &s->data"];
"1000201" -> "1000250"  [label="DDG: &s->data"];
"1000201" -> "1000254"  [label="DDG: &s->data"];
"1000201" -> "1000396"  [label="DDG: &s->data"];
"1000198" -> "1000192"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000204" -> "1000198"  [label="CFG: "];
"1000182" -> "1000198"  [label="DDG: buf_size"];
"1000182" -> "1000181"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000183" -> "1000182"  [label="AST: "];
"1000184" -> "1000182"  [label="AST: "];
"1000189" -> "1000182"  [label="CFG: "];
"1000195" -> "1000182"  [label="CFG: "];
"1000182" -> "1000703"  [label="DDG: buf_size != avpkt->size"];
"1000182" -> "1000703"  [label="DDG: avpkt->size"];
"1000174" -> "1000182"  [label="DDG: buf_size"];
"1000176" -> "1000182"  [label="DDG: avpkt->size"];
"1000182" -> "1000405"  [label="DDG: avpkt->size"];
"1000182" -> "1000694"  [label="DDG: avpkt->size"];
"1000174" -> "1000145"  [label="AST: "];
"1000174" -> "1000176"  [label="CFG: "];
"1000175" -> "1000174"  [label="AST: "];
"1000176" -> "1000174"  [label="AST: "];
"1000183" -> "1000174"  [label="CFG: "];
"1000174" -> "1000703"  [label="DDG: avpkt->size & ~3"];
"1000176" -> "1000174"  [label="DDG: avpkt->size"];
"1000176" -> "1000174"  [label="DDG: ~3"];
"1000176" -> "1000180"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="AST: "];
"1000176" -> "1000703"  [label="DDG: ~3"];
"1000162" -> "1000176"  [label="DDG: avpkt->size"];
"1000176" -> "1000236"  [label="DDG: ~3"];
"1000162" -> "1000161"  [label="AST: "];
"1000162" -> "1000166"  [label="CFG: "];
"1000163" -> "1000162"  [label="AST: "];
"1000166" -> "1000162"  [label="AST: "];
"1000169" -> "1000162"  [label="CFG: "];
"1000175" -> "1000162"  [label="CFG: "];
"1000162" -> "1000703"  [label="DDG: avpkt->size"];
"1000162" -> "1000703"  [label="DDG: avpkt->size < 8"];
"1000150" -> "1000162"  [label="DDG: avpkt->size"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000151"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000157" -> "1000150"  [label="CFG: "];
"1000164" -> "1000150"  [label="CFG: "];
"1000150" -> "1000703"  [label="DDG: avpkt->size"];
"1000150" -> "1000703"  [label="DDG: !avpkt->size"];
"1000220" -> "1000219"  [label="AST: "];
"1000220" -> "1000222"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000222" -> "1000220"  [label="AST: "];
"1000226" -> "1000220"  [label="CFG: "];
"1000220" -> "1000219"  [label="DDG: s->data"];
"1000212" -> "1000220"  [label="DDG: s->data"];
"1000220" -> "1000231"  [label="DDG: s->data"];
"1000220" -> "1000232"  [label="DDG: s->data"];
"1000220" -> "1000250"  [label="DDG: s->data"];
"1000220" -> "1000254"  [label="DDG: s->data"];
"1000220" -> "1000396"  [label="DDG: s->data"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000218" -> "1000212"  [label="CFG: "];
"1000221" -> "1000212"  [label="CFG: "];
"1000212" -> "1000703"  [label="DDG: !s->data"];
"1000212" -> "1000703"  [label="DDG: s->data"];
"1000409" -> "1000110"  [label="AST: "];
"1000410" -> "1000409"  [label="AST: "];
"1000421" -> "1000409"  [label="CFG: "];
"1000409" -> "1000703"  [label="DDG: FFMIN(s->blocks_per_loop, s->samples)"];
}
