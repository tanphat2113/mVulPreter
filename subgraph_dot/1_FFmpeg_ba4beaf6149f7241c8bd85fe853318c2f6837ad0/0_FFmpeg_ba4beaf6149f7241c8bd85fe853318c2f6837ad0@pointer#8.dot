digraph "0_FFmpeg_ba4beaf6149f7241c8bd85fe853318c2f6837ad0@pointer" {
"1000496" [label="(Call,ff_get_buffer(avctx, frame, 0))"];
"1000188" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000112" [label="(Call,*frame     = data)"];
"1000107" [label="(MethodParameterIn,void *data)"];
"1000493" [label="(Call,(ret = ff_get_buffer(avctx, frame, 0)) < 0)"];
"1000494" [label="(Call,ret = ff_get_buffer(avctx, frame, 0))"];
"1000501" [label="(Return,return ret;)"];
"1000538" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error decoding frame\n\"))"];
"1000493" [label="(Call,(ret = ff_get_buffer(avctx, frame, 0)) < 0)"];
"1000190" [label="(Identifier,AV_LOG_WARNING)"];
"1000496" [label="(Call,ff_get_buffer(avctx, frame, 0))"];
"1000532" [label="(Block,)"];
"1000541" [label="(Literal,\"Error decoding frame\n\")"];
"1000114" [label="(Identifier,data)"];
"1000703" [label="(MethodReturn,static int)"];
"1000285" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Incorrect offset passed\n\"))"];
"1000499" [label="(Literal,0)"];
"1000168" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000195" [label="(Identifier,s)"];
"1000492" [label="(ControlStructure,if ((ret = ff_get_buffer(avctx, frame, 0)) < 0))"];
"1000191" [label="(Literal,\"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\")"];
"1000110" [label="(Block,)"];
"1000187" [label="(Block,)"];
"1000505" [label="(Identifier,s)"];
"1000500" [label="(Literal,0)"];
"1000498" [label="(Identifier,frame)"];
"1000117" [label="(Identifier,buf)"];
"1000501" [label="(Return,return ret;)"];
"1000189" [label="(Identifier,avctx)"];
"1000107" [label="(MethodParameterIn,void *data)"];
"1000384" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error reading frame header\n\"))"];
"1000106" [label="(MethodParameterIn,AVCodecContext *avctx)"];
"1000112" [label="(Call,*frame     = data)"];
"1000494" [label="(Call,ret = ff_get_buffer(avctx, frame, 0))"];
"1000371" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\n\",\n                    nblocks))"];
"1000497" [label="(Identifier,avctx)"];
"1000502" [label="(Identifier,ret)"];
"1000113" [label="(Identifier,frame)"];
"1000538" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Error decoding frame\n\"))"];
"1000539" [label="(Identifier,avctx)"];
"1000543" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000495" [label="(Identifier,ret)"];
"1000188" [label="(Call,av_log(avctx, AV_LOG_WARNING, \"packet size is not a multiple of 4. \"\n                   \"extra bytes at the end will be skipped.\n\"))"];
"1000307" [label="(Call,av_log(avctx, AV_LOG_ERROR, \"Packet is too small\n\"))"];
"1000540" [label="(Identifier,AV_LOG_ERROR)"];
"1000496" -> "1000494"  [label="AST: "];
"1000496" -> "1000499"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000499" -> "1000496"  [label="AST: "];
"1000494" -> "1000496"  [label="CFG: "];
"1000496" -> "1000703"  [label="DDG: "];
"1000496" -> "1000703"  [label="DDG: "];
"1000496" -> "1000493"  [label="DDG: "];
"1000496" -> "1000493"  [label="DDG: "];
"1000496" -> "1000493"  [label="DDG: "];
"1000496" -> "1000494"  [label="DDG: "];
"1000496" -> "1000494"  [label="DDG: "];
"1000496" -> "1000494"  [label="DDG: "];
"1000188" -> "1000496"  [label="DDG: "];
"1000106" -> "1000496"  [label="DDG: "];
"1000112" -> "1000496"  [label="DDG: "];
"1000496" -> "1000538"  [label="DDG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000188" -> "1000191"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000191" -> "1000188"  [label="AST: "];
"1000195" -> "1000188"  [label="CFG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000188" -> "1000703"  [label="DDG: "];
"1000106" -> "1000188"  [label="DDG: "];
"1000188" -> "1000285"  [label="DDG: "];
"1000188" -> "1000307"  [label="DDG: "];
"1000188" -> "1000371"  [label="DDG: "];
"1000188" -> "1000384"  [label="DDG: "];
"1000106" -> "1000105"  [label="AST: "];
"1000106" -> "1000703"  [label="DDG: "];
"1000106" -> "1000168"  [label="DDG: "];
"1000106" -> "1000285"  [label="DDG: "];
"1000106" -> "1000307"  [label="DDG: "];
"1000106" -> "1000371"  [label="DDG: "];
"1000106" -> "1000384"  [label="DDG: "];
"1000106" -> "1000538"  [label="DDG: "];
"1000112" -> "1000110"  [label="AST: "];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000117" -> "1000112"  [label="CFG: "];
"1000112" -> "1000703"  [label="DDG: "];
"1000112" -> "1000703"  [label="DDG: "];
"1000107" -> "1000112"  [label="DDG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000703"  [label="DDG: "];
"1000493" -> "1000492"  [label="AST: "];
"1000493" -> "1000500"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000500" -> "1000493"  [label="AST: "];
"1000502" -> "1000493"  [label="CFG: "];
"1000505" -> "1000493"  [label="CFG: "];
"1000493" -> "1000703"  [label="DDG: "];
"1000494" -> "1000493"  [label="DDG: "];
"1000495" -> "1000494"  [label="AST: "];
"1000500" -> "1000494"  [label="CFG: "];
"1000494" -> "1000703"  [label="DDG: "];
"1000494" -> "1000703"  [label="DDG: "];
"1000494" -> "1000501"  [label="DDG: "];
"1000501" -> "1000492"  [label="AST: "];
"1000501" -> "1000502"  [label="CFG: "];
"1000502" -> "1000501"  [label="AST: "];
"1000703" -> "1000501"  [label="CFG: "];
"1000501" -> "1000703"  [label="DDG: "];
"1000502" -> "1000501"  [label="DDG: "];
"1000538" -> "1000532"  [label="AST: "];
"1000538" -> "1000541"  [label="CFG: "];
"1000539" -> "1000538"  [label="AST: "];
"1000540" -> "1000538"  [label="AST: "];
"1000541" -> "1000538"  [label="AST: "];
"1000543" -> "1000538"  [label="CFG: "];
"1000538" -> "1000703"  [label="DDG: "];
"1000538" -> "1000703"  [label="DDG: "];
"1000538" -> "1000703"  [label="DDG: "];
}
