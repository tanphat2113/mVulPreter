digraph "0_FFmpeg_1e42736b95065c69a7481d0cf55247024f54b660@array" {
"1000179" [label="(Call,AV_RB16(&buf[20]))"];
"1000163" [label="(Call,AV_RB16(&buf[16]))"];
"1000156" [label="(Call,AV_RB16(&buf[14]))"];
"1000175" [label="(Call,c->palette_size = AV_RB16(&buf[20]))"];
"1000191" [label="(Call,c->video        = c->palette + c->palette_size)"];
"1000195" [label="(Call,c->palette + c->palette_size)"];
"1000208" [label="(Call,c->palette_size - 32)"];
"1000206" [label="(Call,buf_size - c->palette_size - 32)"];
"1000202" [label="(Call,c->video_size   = buf_size - c->palette_size - 32)"];
"1000310" [label="(Call,c->video_size < aligned_width * avctx->height * (int64_t)c->bpp / 8)"];
"1000222" [label="(Call,buf_size < c->palette_size + 32)"];
"1000512" [label="(Return,return buf_size;)"];
"1000214" [label="(Call,c->palette_size > 512)"];
"1000224" [label="(Call,c->palette_size + 32)"];
"1000333" [label="(Call,c->palette_size && c->bpp <= 8 && c->format != CHUNKY)"];
"1000330" [label="(Call,!encoding && c->palette_size && c->bpp <= 8 && c->format != CHUNKY)"];
"1000379" [label="(Call,c->palette_size != (1 << (c->bpp - 1)))"];
"1000414" [label="(Call,!c->palette_size)"];
"1000408" [label="(Call,c->format == CHUNKY &&\n               !c->palette_size)"];
"1000402" [label="(Call,c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size)"];
"1000399" [label="(Call,!encoding && c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size)"];
"1000512" [label="(Return,return buf_size;)"];
"1000175" [label="(Call,c->palette_size = AV_RB16(&buf[20]))"];
"1000196" [label="(Call,c->palette)"];
"1000224" [label="(Call,c->palette_size + 32)"];
"1000330" [label="(Call,!encoding && c->palette_size && c->bpp <= 8 && c->format != CHUNKY)"];
"1000220" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000427" [label="(Identifier,avctx)"];
"1000221" [label="(ControlStructure,if (buf_size < c->palette_size + 32))"];
"1000311" [label="(Call,c->video_size)"];
"1000314" [label="(Call,aligned_width * avctx->height * (int64_t)c->bpp / 8)"];
"1000191" [label="(Call,c->video        = c->palette + c->palette_size)"];
"1000186" [label="(Identifier,c)"];
"1000334" [label="(Call,c->palette_size)"];
"1000212" [label="(Literal,32)"];
"1000223" [label="(Identifier,buf_size)"];
"1000513" [label="(Identifier,buf_size)"];
"1000331" [label="(Call,!encoding)"];
"1000215" [label="(Call,c->palette_size)"];
"1000222" [label="(Call,buf_size < c->palette_size + 32)"];
"1000332" [label="(Identifier,encoding)"];
"1000180" [label="(Call,&buf[20])"];
"1000157" [label="(Call,&buf[14])"];
"1000206" [label="(Call,buf_size - c->palette_size - 32)"];
"1000225" [label="(Call,c->palette_size)"];
"1000380" [label="(Call,c->palette_size)"];
"1000204" [label="(Identifier,c)"];
"1000213" [label="(ControlStructure,if (c->palette_size > 512))"];
"1000414" [label="(Call,!c->palette_size)"];
"1000184" [label="(Call,c->palette      = buf + 32)"];
"1000161" [label="(Call,h               = AV_RB16(&buf[16]))"];
"1000156" [label="(Call,AV_RB16(&buf[14]))"];
"1000164" [label="(Call,&buf[16])"];
"1000337" [label="(Call,c->bpp <= 8 && c->format != CHUNKY)"];
"1000309" [label="(ControlStructure,if (c->video_size < aligned_width * avctx->height * (int64_t)c->bpp / 8))"];
"1000214" [label="(Call,c->palette_size > 512)"];
"1000216" [label="(Identifier,c)"];
"1000203" [label="(Call,c->video_size)"];
"1000391" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000230" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000409" [label="(Call,c->format == CHUNKY)"];
"1000133" [label="(Call,buf_size < 32)"];
"1000402" [label="(Call,c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size)"];
"1000207" [label="(Identifier,buf_size)"];
"1000398" [label="(ControlStructure,if (!encoding && c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size))"];
"1000421" [label="(Identifier,avctx)"];
"1000163" [label="(Call,AV_RB16(&buf[16]))"];
"1000514" [label="(MethodReturn,static int)"];
"1000228" [label="(Literal,32)"];
"1000202" [label="(Call,c->video_size   = buf_size - c->palette_size - 32)"];
"1000400" [label="(Call,!encoding)"];
"1000329" [label="(ControlStructure,if (!encoding && c->palette_size && c->bpp <= 8 && c->format != CHUNKY))"];
"1000195" [label="(Call,c->palette + c->palette_size)"];
"1000399" [label="(Call,!encoding && c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size)"];
"1000154" [label="(Call,w               = AV_RB16(&buf[14]))"];
"1000383" [label="(Call,1 << (c->bpp - 1))"];
"1000179" [label="(Call,AV_RB16(&buf[20]))"];
"1000358" [label="(Identifier,encoding)"];
"1000176" [label="(Call,c->palette_size)"];
"1000408" [label="(Call,c->format == CHUNKY &&\n               !c->palette_size)"];
"1000192" [label="(Call,c->video)"];
"1000218" [label="(Literal,512)"];
"1000333" [label="(Call,c->palette_size && c->bpp <= 8 && c->format != CHUNKY)"];
"1000209" [label="(Call,c->palette_size)"];
"1000105" [label="(Block,)"];
"1000234" [label="(Identifier,c)"];
"1000394" [label="(Identifier,avctx)"];
"1000415" [label="(Call,c->palette_size)"];
"1000328" [label="(Identifier,AVERROR_INVALIDDATA)"];
"1000208" [label="(Call,c->palette_size - 32)"];
"1000199" [label="(Call,c->palette_size)"];
"1000379" [label="(Call,c->palette_size != (1 << (c->bpp - 1)))"];
"1000378" [label="(ControlStructure,if (c->palette_size != (1 << (c->bpp - 1))))"];
"1000310" [label="(Call,c->video_size < aligned_width * avctx->height * (int64_t)c->bpp / 8)"];
"1000403" [label="(Call,c->bpp == 24)"];
"1000351" [label="(Identifier,avctx)"];
"1000179" -> "1000175"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000175" -> "1000179"  [label="CFG: "];
"1000179" -> "1000514"  [label="DDG: &buf[20]"];
"1000179" -> "1000175"  [label="DDG: &buf[20]"];
"1000163" -> "1000179"  [label="DDG: &buf[16]"];
"1000156" -> "1000179"  [label="DDG: &buf[14]"];
"1000163" -> "1000161"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000163" -> "1000514"  [label="DDG: &buf[16]"];
"1000163" -> "1000161"  [label="DDG: &buf[16]"];
"1000156" -> "1000163"  [label="DDG: &buf[14]"];
"1000156" -> "1000154"  [label="AST: "];
"1000156" -> "1000157"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000156" -> "1000514"  [label="DDG: &buf[14]"];
"1000156" -> "1000154"  [label="DDG: &buf[14]"];
"1000175" -> "1000105"  [label="AST: "];
"1000176" -> "1000175"  [label="AST: "];
"1000186" -> "1000175"  [label="CFG: "];
"1000175" -> "1000514"  [label="DDG: AV_RB16(&buf[20])"];
"1000175" -> "1000191"  [label="DDG: c->palette_size"];
"1000175" -> "1000195"  [label="DDG: c->palette_size"];
"1000175" -> "1000208"  [label="DDG: c->palette_size"];
"1000191" -> "1000105"  [label="AST: "];
"1000191" -> "1000195"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="AST: "];
"1000204" -> "1000191"  [label="CFG: "];
"1000191" -> "1000514"  [label="DDG: c->palette + c->palette_size"];
"1000191" -> "1000514"  [label="DDG: c->video"];
"1000184" -> "1000191"  [label="DDG: c->palette"];
"1000195" -> "1000199"  [label="CFG: "];
"1000196" -> "1000195"  [label="AST: "];
"1000199" -> "1000195"  [label="AST: "];
"1000195" -> "1000514"  [label="DDG: c->palette"];
"1000184" -> "1000195"  [label="DDG: c->palette"];
"1000208" -> "1000206"  [label="AST: "];
"1000208" -> "1000212"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000212" -> "1000208"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000208" -> "1000206"  [label="DDG: c->palette_size"];
"1000208" -> "1000206"  [label="DDG: 32"];
"1000208" -> "1000214"  [label="DDG: c->palette_size"];
"1000206" -> "1000202"  [label="AST: "];
"1000207" -> "1000206"  [label="AST: "];
"1000202" -> "1000206"  [label="CFG: "];
"1000206" -> "1000514"  [label="DDG: c->palette_size - 32"];
"1000206" -> "1000514"  [label="DDG: buf_size"];
"1000206" -> "1000202"  [label="DDG: buf_size"];
"1000206" -> "1000202"  [label="DDG: c->palette_size - 32"];
"1000133" -> "1000206"  [label="DDG: buf_size"];
"1000206" -> "1000222"  [label="DDG: buf_size"];
"1000202" -> "1000105"  [label="AST: "];
"1000203" -> "1000202"  [label="AST: "];
"1000216" -> "1000202"  [label="CFG: "];
"1000202" -> "1000514"  [label="DDG: buf_size - c->palette_size - 32"];
"1000202" -> "1000514"  [label="DDG: c->video_size"];
"1000202" -> "1000310"  [label="DDG: c->video_size"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000314"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000314" -> "1000310"  [label="AST: "];
"1000328" -> "1000310"  [label="CFG: "];
"1000332" -> "1000310"  [label="CFG: "];
"1000310" -> "1000514"  [label="DDG: c->video_size < aligned_width * avctx->height * (int64_t)c->bpp / 8"];
"1000310" -> "1000514"  [label="DDG: c->video_size"];
"1000310" -> "1000514"  [label="DDG: aligned_width * avctx->height * (int64_t)c->bpp / 8"];
"1000314" -> "1000310"  [label="DDG: aligned_width"];
"1000314" -> "1000310"  [label="DDG: avctx->height * (int64_t)c->bpp / 8"];
"1000222" -> "1000221"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000224" -> "1000222"  [label="AST: "];
"1000230" -> "1000222"  [label="CFG: "];
"1000234" -> "1000222"  [label="CFG: "];
"1000222" -> "1000514"  [label="DDG: buf_size"];
"1000222" -> "1000514"  [label="DDG: buf_size < c->palette_size + 32"];
"1000222" -> "1000514"  [label="DDG: c->palette_size + 32"];
"1000214" -> "1000222"  [label="DDG: c->palette_size"];
"1000222" -> "1000512"  [label="DDG: buf_size"];
"1000512" -> "1000105"  [label="AST: "];
"1000512" -> "1000513"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000514" -> "1000512"  [label="CFG: "];
"1000512" -> "1000514"  [label="DDG: <RET>"];
"1000513" -> "1000512"  [label="DDG: buf_size"];
"1000214" -> "1000213"  [label="AST: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="AST: "];
"1000220" -> "1000214"  [label="CFG: "];
"1000223" -> "1000214"  [label="CFG: "];
"1000214" -> "1000514"  [label="DDG: c->palette_size > 512"];
"1000214" -> "1000514"  [label="DDG: c->palette_size"];
"1000214" -> "1000224"  [label="DDG: c->palette_size"];
"1000214" -> "1000333"  [label="DDG: c->palette_size"];
"1000214" -> "1000379"  [label="DDG: c->palette_size"];
"1000214" -> "1000414"  [label="DDG: c->palette_size"];
"1000224" -> "1000228"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000228" -> "1000224"  [label="AST: "];
"1000224" -> "1000514"  [label="DDG: c->palette_size"];
"1000333" -> "1000330"  [label="AST: "];
"1000333" -> "1000334"  [label="CFG: "];
"1000333" -> "1000337"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000337" -> "1000333"  [label="AST: "];
"1000330" -> "1000333"  [label="CFG: "];
"1000333" -> "1000514"  [label="DDG: c->palette_size"];
"1000333" -> "1000514"  [label="DDG: c->bpp <= 8 && c->format != CHUNKY"];
"1000333" -> "1000330"  [label="DDG: c->palette_size"];
"1000333" -> "1000330"  [label="DDG: c->bpp <= 8 && c->format != CHUNKY"];
"1000337" -> "1000333"  [label="DDG: c->bpp <= 8"];
"1000337" -> "1000333"  [label="DDG: c->format != CHUNKY"];
"1000333" -> "1000379"  [label="DDG: c->palette_size"];
"1000333" -> "1000414"  [label="DDG: c->palette_size"];
"1000330" -> "1000329"  [label="AST: "];
"1000330" -> "1000331"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000351" -> "1000330"  [label="CFG: "];
"1000358" -> "1000330"  [label="CFG: "];
"1000330" -> "1000514"  [label="DDG: !encoding"];
"1000330" -> "1000514"  [label="DDG: c->palette_size && c->bpp <= 8 && c->format != CHUNKY"];
"1000330" -> "1000514"  [label="DDG: !encoding && c->palette_size && c->bpp <= 8 && c->format != CHUNKY"];
"1000331" -> "1000330"  [label="DDG: encoding"];
"1000379" -> "1000378"  [label="AST: "];
"1000379" -> "1000383"  [label="CFG: "];
"1000380" -> "1000379"  [label="AST: "];
"1000383" -> "1000379"  [label="AST: "];
"1000391" -> "1000379"  [label="CFG: "];
"1000394" -> "1000379"  [label="CFG: "];
"1000379" -> "1000514"  [label="DDG: 1 << (c->bpp - 1)"];
"1000379" -> "1000514"  [label="DDG: c->palette_size"];
"1000379" -> "1000514"  [label="DDG: c->palette_size != (1 << (c->bpp - 1))"];
"1000383" -> "1000379"  [label="DDG: 1"];
"1000383" -> "1000379"  [label="DDG: c->bpp - 1"];
"1000414" -> "1000408"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000408" -> "1000414"  [label="CFG: "];
"1000414" -> "1000514"  [label="DDG: c->palette_size"];
"1000414" -> "1000408"  [label="DDG: c->palette_size"];
"1000408" -> "1000402"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000402" -> "1000408"  [label="CFG: "];
"1000408" -> "1000514"  [label="DDG: c->format == CHUNKY"];
"1000408" -> "1000514"  [label="DDG: !c->palette_size"];
"1000408" -> "1000402"  [label="DDG: c->format == CHUNKY"];
"1000408" -> "1000402"  [label="DDG: !c->palette_size"];
"1000409" -> "1000408"  [label="DDG: c->format"];
"1000409" -> "1000408"  [label="DDG: CHUNKY"];
"1000402" -> "1000399"  [label="AST: "];
"1000402" -> "1000403"  [label="CFG: "];
"1000403" -> "1000402"  [label="AST: "];
"1000399" -> "1000402"  [label="CFG: "];
"1000402" -> "1000514"  [label="DDG: c->format == CHUNKY &&\n               !c->palette_size"];
"1000402" -> "1000514"  [label="DDG: c->bpp == 24"];
"1000402" -> "1000399"  [label="DDG: c->bpp == 24"];
"1000402" -> "1000399"  [label="DDG: c->format == CHUNKY &&\n               !c->palette_size"];
"1000403" -> "1000402"  [label="DDG: c->bpp"];
"1000403" -> "1000402"  [label="DDG: 24"];
"1000399" -> "1000398"  [label="AST: "];
"1000399" -> "1000400"  [label="CFG: "];
"1000400" -> "1000399"  [label="AST: "];
"1000421" -> "1000399"  [label="CFG: "];
"1000427" -> "1000399"  [label="CFG: "];
"1000399" -> "1000514"  [label="DDG: c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size"];
"1000399" -> "1000514"  [label="DDG: !encoding"];
"1000399" -> "1000514"  [label="DDG: !encoding && c->bpp == 24 && c->format == CHUNKY &&\n               !c->palette_size"];
"1000400" -> "1000399"  [label="DDG: encoding"];
}
