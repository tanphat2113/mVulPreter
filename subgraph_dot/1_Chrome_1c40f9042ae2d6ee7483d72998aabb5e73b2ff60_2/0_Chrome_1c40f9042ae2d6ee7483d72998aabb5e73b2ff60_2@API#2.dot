digraph "0_Chrome_1c40f9042ae2d6ee7483d72998aabb5e73b2ff60_2@API" {
"1000255" [label="(Call,std::move(maybe_frame_id))"];
"1000239" [label="(Call,maybe_frame_id = frame_id)"];
"1000157" [label="(Call,frame_id = loader && loader->GetFrame()\n                         ? IdentifiersFactory::FrameId(loader->GetFrame())\n                        : \"\")"];
"1000163" [label="(Call,IdentifiersFactory::FrameId(loader->GetFrame()))"];
"1000190" [label="(Call,frame_navigation_initiator_map_.find(frame_id))"];
"1000242" [label="(Call,GetFrontend()->requestWillBeSent(\n      request_id, loader_id, documentURL, std::move(request_info),\n      MonotonicallyIncreasingTime(), CurrentTime(), std::move(initiator_object),\n      BuildObjectForResourceResponse(redirect_response), resource_type,\n      std::move(maybe_frame_id)))"];
"1000159" [label="(Call,loader && loader->GetFrame()\n                         ? IdentifiersFactory::FrameId(loader->GetFrame())\n                        : \"\")"];
"1000246" [label="(Call,std::move(request_info))"];
"1000250" [label="(Call,std::move(initiator_object))"];
"1000158" [label="(Identifier,frame_id)"];
"1000241" [label="(Identifier,frame_id)"];
"1000263" [label="(MethodReturn,void)"];
"1000174" [label="(Call,loader && loader->GetFrame())"];
"1000153" [label="(Call,resources_data_->SetResourceType(request_id, type))"];
"1000107" [label="(Block,)"];
"1000163" [label="(Call,IdentifiersFactory::FrameId(loader->GetFrame()))"];
"1000224" [label="(Call,resource_type = InspectorPageAgent::ResourceTypeJson(type))"];
"1000252" [label="(Call,BuildObjectForResourceResponse(redirect_response))"];
"1000255" [label="(Call,std::move(maybe_frame_id))"];
"1000239" [label="(Call,maybe_frame_id = frame_id)"];
"1000256" [label="(Identifier,maybe_frame_id)"];
"1000191" [label="(Identifier,frame_id)"];
"1000164" [label="(Call,loader->GetFrame())"];
"1000236" [label="(ControlStructure,if (!frame_id.IsEmpty()))"];
"1000254" [label="(Identifier,resource_type)"];
"1000190" [label="(Call,frame_navigation_initiator_map_.find(frame_id))"];
"1000248" [label="(Call,MonotonicallyIncreasingTime())"];
"1000157" [label="(Call,frame_id = loader && loader->GetFrame()\n                         ? IdentifiersFactory::FrameId(loader->GetFrame())\n                        : \"\")"];
"1000139" [label="(Call,resources_data_->SetResourceType(request_id, type))"];
"1000188" [label="(Call,it =\n        frame_navigation_initiator_map_.find(frame_id))"];
"1000244" [label="(Identifier,loader_id)"];
"1000249" [label="(Call,CurrentTime())"];
"1000240" [label="(Identifier,maybe_frame_id)"];
"1000245" [label="(Identifier,documentURL)"];
"1000121" [label="(Call,resources_data_->ResourceCreated(request_id, loader_id, request.Url()))"];
"1000242" [label="(Call,GetFrontend()->requestWillBeSent(\n      request_id, loader_id, documentURL, std::move(request_info),\n      MonotonicallyIncreasingTime(), CurrentTime(), std::move(initiator_object),\n      BuildObjectForResourceResponse(redirect_response), resource_type,\n      std::move(maybe_frame_id)))"];
"1000243" [label="(Identifier,request_id)"];
"1000229" [label="(Call,documentURL =\n      loader ? UrlWithoutFragment(loader->Url()).GetString()\n             : UrlWithoutFragment(execution_context->Url()).GetString())"];
"1000168" [label="(Identifier,std::unique_ptr)"];
"1000259" [label="(Identifier,pending_xhr_replay_data_)"];
"1000255" -> "1000242"  [label="AST: "];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000242" -> "1000255"  [label="CFG: "];
"1000255" -> "1000263"  [label="DDG: "];
"1000255" -> "1000242"  [label="DDG: "];
"1000239" -> "1000255"  [label="DDG: "];
"1000239" -> "1000236"  [label="AST: "];
"1000239" -> "1000241"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="CFG: "];
"1000239" -> "1000263"  [label="DDG: "];
"1000157" -> "1000239"  [label="DDG: "];
"1000190" -> "1000239"  [label="DDG: "];
"1000157" -> "1000107"  [label="AST: "];
"1000157" -> "1000159"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000159" -> "1000157"  [label="AST: "];
"1000168" -> "1000157"  [label="CFG: "];
"1000157" -> "1000263"  [label="DDG: "];
"1000157" -> "1000263"  [label="DDG: "];
"1000163" -> "1000157"  [label="DDG: "];
"1000157" -> "1000190"  [label="DDG: "];
"1000163" -> "1000159"  [label="AST: "];
"1000163" -> "1000164"  [label="CFG: "];
"1000164" -> "1000163"  [label="AST: "];
"1000159" -> "1000163"  [label="CFG: "];
"1000163" -> "1000159"  [label="DDG: "];
"1000163" -> "1000174"  [label="DDG: "];
"1000190" -> "1000188"  [label="AST: "];
"1000190" -> "1000191"  [label="CFG: "];
"1000191" -> "1000190"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000190" -> "1000263"  [label="DDG: "];
"1000190" -> "1000188"  [label="DDG: "];
"1000242" -> "1000107"  [label="AST: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000248" -> "1000242"  [label="AST: "];
"1000249" -> "1000242"  [label="AST: "];
"1000250" -> "1000242"  [label="AST: "];
"1000252" -> "1000242"  [label="AST: "];
"1000254" -> "1000242"  [label="AST: "];
"1000259" -> "1000242"  [label="CFG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000242" -> "1000263"  [label="DDG: "];
"1000139" -> "1000242"  [label="DDG: "];
"1000153" -> "1000242"  [label="DDG: "];
"1000121" -> "1000242"  [label="DDG: "];
"1000121" -> "1000242"  [label="DDG: "];
"1000229" -> "1000242"  [label="DDG: "];
"1000246" -> "1000242"  [label="DDG: "];
"1000250" -> "1000242"  [label="DDG: "];
"1000252" -> "1000242"  [label="DDG: "];
"1000224" -> "1000242"  [label="DDG: "];
}
