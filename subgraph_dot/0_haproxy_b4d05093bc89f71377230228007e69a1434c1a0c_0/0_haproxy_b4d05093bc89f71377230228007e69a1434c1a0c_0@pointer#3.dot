digraph "0_haproxy_b4d05093bc89f71377230228007e69a1434c1a0c_0@pointer" {
"1000240" [label="(Call,msg->msg_state = HTTP_MSG_CHUNK_SIZE)"];
"1000228" [label="(Call,msg->msg_state < HTTP_MSG_CHUNK_SIZE)"];
"1000156" [label="(Call,msg->msg_state < HTTP_MSG_BODY)"];
"1000299" [label="(Call,msg->msg_state == HTTP_MSG_DATA)"];
"1000357" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_SIZE)"];
"1000387" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be))"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000403" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_CRLF)"];
"1000344" [label="(Call,msg->msg_state = HTTP_MSG_CHUNK_CRLF)"];
"1000433" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be))"];
"1000449" [label="(Call,msg->msg_state == HTTP_MSG_TRAILERS)"];
"1000479" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be))"];
"1000496" [label="(Call,old_state = msg->msg_state)"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000554" [label="(Call,msg->msg_state == HTTP_MSG_ERROR)"];
"1000553" [label="(Call,unlikely(msg->msg_state == HTTP_MSG_ERROR))"];
"1000807" [label="(Call,txn->req.msg_state = HTTP_MSG_ERROR)"];
"1000871" [label="(Call,txn->rsp.msg_state < HTTP_MSG_ERROR)"];
"1000892" [label="(Call,txn->req.msg_state = HTTP_MSG_ERROR)"];
"1000986" [label="(Call,txn->rsp.msg_state < HTTP_MSG_ERROR)"];
"1001006" [label="(MethodReturn,int)"];
"1000486" [label="(Identifier,s)"];
"1000232" [label="(Identifier,HTTP_MSG_CHUNK_SIZE)"];
"1000137" [label="(Block,)"];
"1000381" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000487" [label="(Identifier,msg)"];
"1000877" [label="(Identifier,HTTP_MSG_ERROR)"];
"1000498" [label="(Call,msg->msg_state)"];
"1000156" [label="(Call,msg->msg_state < HTTP_MSG_BODY)"];
"1000479" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be))"];
"1000494" [label="(Block,)"];
"1000404" [label="(Call,msg->msg_state)"];
"1000441" [label="(Identifier,msg)"];
"1000146" [label="(Call,*msg = &s->txn.req)"];
"1000402" [label="(ControlStructure,if (msg->msg_state == HTTP_MSG_CHUNK_CRLF))"];
"1000240" [label="(Call,msg->msg_state = HTTP_MSG_CHUNK_SIZE)"];
"1000344" [label="(Call,msg->msg_state = HTTP_MSG_CHUNK_CRLF)"];
"1000228" [label="(Call,msg->msg_state < HTTP_MSG_CHUNK_SIZE)"];
"1000587" [label="(ControlStructure,goto return_bad_req;)"];
"1000241" [label="(Call,msg->msg_state)"];
"1000992" [label="(Identifier,HTTP_MSG_ERROR)"];
"1000893" [label="(Call,txn->req.msg_state)"];
"1000234" [label="(ControlStructure,if (msg->flags & HTTP_MSGF_TE_CHNK))"];
"1000356" [label="(ControlStructure,if (msg->msg_state == HTTP_MSG_CHUNK_SIZE))"];
"1000985" [label="(ControlStructure,if (txn->rsp.msg_state < HTTP_MSG_ERROR))"];
"1000395" [label="(Identifier,msg)"];
"1000379" [label="(Call,session_inc_http_err_ctr(s))"];
"1000581" [label="(Identifier,s)"];
"1000227" [label="(ControlStructure,if (msg->msg_state < HTTP_MSG_CHUNK_SIZE))"];
"1000568" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000503" [label="(Identifier,req)"];
"1000473" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000446" [label="(ControlStructure,goto return_bad_req;)"];
"1000496" [label="(Call,old_state = msg->msg_state)"];
"1000458" [label="(Call,http_forward_trailers(msg))"];
"1000837" [label="(Identifier,HTTP_ERR_400)"];
"1000443" [label="(Call,s->be)"];
"1000453" [label="(Identifier,HTTP_MSG_TRAILERS)"];
"1000457" [label="(Identifier,ret)"];
"1000816" [label="(Identifier,txn)"];
"1000160" [label="(Identifier,HTTP_MSG_BODY)"];
"1000308" [label="(Identifier,msg)"];
"1000492" [label="(ControlStructure,goto return_bad_req;)"];
"1000575" [label="(Call,&s->fe->invalid_req)"];
"1000488" [label="(Identifier,HTTP_MSG_TRAILERS)"];
"1000489" [label="(Call,s->be)"];
"1000433" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be))"];
"1000872" [label="(Call,txn->rsp.msg_state)"];
"1000836" [label="(Identifier,s)"];
"1000451" [label="(Identifier,msg)"];
"1000407" [label="(Identifier,HTTP_MSG_CHUNK_CRLF)"];
"1000244" [label="(Identifier,HTTP_MSG_CHUNK_SIZE)"];
"1000400" [label="(ControlStructure,goto return_bad_req;)"];
"1000365" [label="(Identifier,ret)"];
"1000807" [label="(Call,txn->req.msg_state = HTTP_MSG_ERROR)"];
"1000361" [label="(Identifier,HTTP_MSG_CHUNK_SIZE)"];
"1000558" [label="(Identifier,HTTP_MSG_ERROR)"];
"1000405" [label="(Identifier,msg)"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000425" [label="(Call,session_inc_http_err_ctr(s))"];
"1000296" [label="(Literal,1)"];
"1000987" [label="(Call,txn->rsp.msg_state)"];
"1000348" [label="(Identifier,HTTP_MSG_CHUNK_CRLF)"];
"1000387" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be))"];
"1000497" [label="(Identifier,old_state)"];
"1000870" [label="(ControlStructure,if (txn->rsp.msg_state < HTTP_MSG_ERROR))"];
"1000901" [label="(Identifier,txn)"];
"1000427" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000345" [label="(Call,msg->msg_state)"];
"1000813" [label="(Identifier,HTTP_MSG_ERROR)"];
"1000448" [label="(ControlStructure,if (msg->msg_state == HTTP_MSG_TRAILERS))"];
"1000155" [label="(Call,unlikely(msg->msg_state < HTTP_MSG_BODY))"];
"1000157" [label="(Call,msg->msg_state)"];
"1000303" [label="(Identifier,HTTP_MSG_DATA)"];
"1000840" [label="(Identifier,req)"];
"1000553" [label="(Call,unlikely(msg->msg_state == HTTP_MSG_ERROR))"];
"1000880" [label="(Identifier,s)"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000359" [label="(Identifier,msg)"];
"1000480" [label="(Call,&s->fe->invalid_req)"];
"1000995" [label="(Identifier,s)"];
"1000449" [label="(Call,msg->msg_state == HTTP_MSG_TRAILERS)"];
"1000299" [label="(Call,msg->msg_state == HTTP_MSG_DATA)"];
"1000300" [label="(Call,msg->msg_state)"];
"1000554" [label="(Call,msg->msg_state == HTTP_MSG_ERROR)"];
"1000549" [label="(Call,http_resync_states(s))"];
"1000563" [label="(Identifier,req)"];
"1000338" [label="(ControlStructure,if (msg->flags & HTTP_MSGF_TE_CHNK))"];
"1000358" [label="(Call,msg->msg_state)"];
"1000134" [label="(MethodParameterIn,struct session *s)"];
"1000825" [label="(Block,)"];
"1000394" [label="(Identifier,s)"];
"1000886" [label="(Identifier,s)"];
"1000403" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_CRLF)"];
"1000582" [label="(Identifier,msg)"];
"1000388" [label="(Call,&s->fe->invalid_req)"];
"1000246" [label="(Call,msg->msg_state = HTTP_MSG_DATA)"];
"1000411" [label="(Identifier,ret)"];
"1000552" [label="(ControlStructure,if (unlikely(msg->msg_state == HTTP_MSG_ERROR)))"];
"1000555" [label="(Call,msg->msg_state)"];
"1000584" [label="(Call,s->be)"];
"1000694" [label="(Call,txn->rsp.msg_state < HTTP_MSG_ERROR)"];
"1000871" [label="(Call,txn->rsp.msg_state < HTTP_MSG_ERROR)"];
"1000471" [label="(Call,session_inc_http_err_ctr(s))"];
"1000898" [label="(Identifier,HTTP_MSG_ERROR)"];
"1000589" [label="(Literal,1)"];
"1001001" [label="(Identifier,s)"];
"1000298" [label="(ControlStructure,if (msg->msg_state == HTTP_MSG_DATA))"];
"1000892" [label="(Call,txn->req.msg_state = HTTP_MSG_ERROR)"];
"1000237" [label="(Identifier,msg)"];
"1000396" [label="(Identifier,HTTP_MSG_CHUNK_SIZE)"];
"1000229" [label="(Call,msg->msg_state)"];
"1000255" [label="(Identifier,msg)"];
"1000986" [label="(Call,txn->rsp.msg_state < HTTP_MSG_ERROR)"];
"1000397" [label="(Call,s->be)"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000350" [label="(Call,msg->msg_state = HTTP_MSG_DONE)"];
"1000808" [label="(Call,txn->req.msg_state)"];
"1000434" [label="(Call,&s->fe->invalid_req)"];
"1000450" [label="(Call,msg->msg_state)"];
"1000412" [label="(Call,http_skip_chunk_crlf(msg))"];
"1000440" [label="(Identifier,s)"];
"1000357" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_SIZE)"];
"1000832" [label="(Call,req->prod)"];
"1000442" [label="(Identifier,HTTP_MSG_CHUNK_CRLF)"];
"1000583" [label="(Identifier,old_state)"];
"1000366" [label="(Call,http_parse_chunk_size(msg))"];
"1000240" -> "1000234"  [label="AST: "];
"1000240" -> "1000244"  [label="CFG: "];
"1000241" -> "1000240"  [label="AST: "];
"1000244" -> "1000240"  [label="AST: "];
"1000255" -> "1000240"  [label="CFG: "];
"1000240" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000240" -> "1001006"  [label="DDG: msg->msg_state"];
"1000228" -> "1000240"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000240" -> "1000299"  [label="DDG: msg->msg_state"];
"1000228" -> "1000227"  [label="AST: "];
"1000228" -> "1000232"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000232" -> "1000228"  [label="AST: "];
"1000237" -> "1000228"  [label="CFG: "];
"1000255" -> "1000228"  [label="CFG: "];
"1000228" -> "1001006"  [label="DDG: msg->msg_state < HTTP_MSG_CHUNK_SIZE"];
"1000228" -> "1001006"  [label="DDG: msg->msg_state"];
"1000228" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000156" -> "1000228"  [label="DDG: msg->msg_state"];
"1000228" -> "1000299"  [label="DDG: msg->msg_state"];
"1000228" -> "1000357"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000156" -> "1000155"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1001006"  [label="DDG: msg->msg_state"];
"1000156" -> "1001006"  [label="DDG: HTTP_MSG_BODY"];
"1000156" -> "1000155"  [label="DDG: msg->msg_state"];
"1000156" -> "1000155"  [label="DDG: HTTP_MSG_BODY"];
"1000156" -> "1000299"  [label="DDG: msg->msg_state"];
"1000299" -> "1000298"  [label="AST: "];
"1000299" -> "1000303"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="AST: "];
"1000308" -> "1000299"  [label="CFG: "];
"1000359" -> "1000299"  [label="CFG: "];
"1000299" -> "1001006"  [label="DDG: HTTP_MSG_DATA"];
"1000299" -> "1001006"  [label="DDG: msg->msg_state == HTTP_MSG_DATA"];
"1000299" -> "1001006"  [label="DDG: msg->msg_state"];
"1000350" -> "1000299"  [label="DDG: msg->msg_state"];
"1000403" -> "1000299"  [label="DDG: msg->msg_state"];
"1000449" -> "1000299"  [label="DDG: msg->msg_state"];
"1000357" -> "1000299"  [label="DDG: msg->msg_state"];
"1000246" -> "1000299"  [label="DDG: msg->msg_state"];
"1000344" -> "1000299"  [label="DDG: msg->msg_state"];
"1000299" -> "1000357"  [label="DDG: msg->msg_state"];
"1000357" -> "1000356"  [label="AST: "];
"1000357" -> "1000361"  [label="CFG: "];
"1000358" -> "1000357"  [label="AST: "];
"1000361" -> "1000357"  [label="AST: "];
"1000365" -> "1000357"  [label="CFG: "];
"1000405" -> "1000357"  [label="CFG: "];
"1000357" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000357" -> "1001006"  [label="DDG: msg->msg_state == HTTP_MSG_CHUNK_SIZE"];
"1000357" -> "1001006"  [label="DDG: msg->msg_state"];
"1000357" -> "1000387"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000357" -> "1000403"  [label="DDG: msg->msg_state"];
"1000387" -> "1000381"  [label="AST: "];
"1000387" -> "1000397"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="AST: "];
"1000395" -> "1000387"  [label="AST: "];
"1000396" -> "1000387"  [label="AST: "];
"1000397" -> "1000387"  [label="AST: "];
"1000400" -> "1000387"  [label="CFG: "];
"1000387" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000387" -> "1001006"  [label="DDG: s->be"];
"1000387" -> "1001006"  [label="DDG: s"];
"1000387" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000387" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be)"];
"1000387" -> "1001006"  [label="DDG: msg"];
"1000379" -> "1000387"  [label="DDG: s"];
"1000134" -> "1000387"  [label="DDG: s"];
"1000366" -> "1000387"  [label="DDG: msg"];
"1000387" -> "1000835"  [label="DDG: s"];
"1000835" -> "1000831"  [label="AST: "];
"1000835" -> "1000837"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000837" -> "1000835"  [label="AST: "];
"1000831" -> "1000835"  [label="CFG: "];
"1000835" -> "1001006"  [label="DDG: s"];
"1000835" -> "1001006"  [label="DDG: HTTP_ERR_400"];
"1000835" -> "1000831"  [label="DDG: s"];
"1000835" -> "1000831"  [label="DDG: HTTP_ERR_400"];
"1000549" -> "1000835"  [label="DDG: s"];
"1000479" -> "1000835"  [label="DDG: s"];
"1000471" -> "1000835"  [label="DDG: s"];
"1000433" -> "1000835"  [label="DDG: s"];
"1000574" -> "1000835"  [label="DDG: s"];
"1000379" -> "1000835"  [label="DDG: s"];
"1000425" -> "1000835"  [label="DDG: s"];
"1000134" -> "1000835"  [label="DDG: s"];
"1000831" -> "1000825"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000840" -> "1000831"  [label="CFG: "];
"1000831" -> "1001006"  [label="DDG: http_error_message(s, HTTP_ERR_400)"];
"1000831" -> "1001006"  [label="DDG: req->prod"];
"1000831" -> "1001006"  [label="DDG: stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400))"];
"1000403" -> "1000402"  [label="AST: "];
"1000403" -> "1000407"  [label="CFG: "];
"1000404" -> "1000403"  [label="AST: "];
"1000407" -> "1000403"  [label="AST: "];
"1000411" -> "1000403"  [label="CFG: "];
"1000451" -> "1000403"  [label="CFG: "];
"1000403" -> "1001006"  [label="DDG: msg->msg_state"];
"1000403" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000403" -> "1001006"  [label="DDG: msg->msg_state == HTTP_MSG_CHUNK_CRLF"];
"1000403" -> "1000344"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000403" -> "1000433"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000403" -> "1000449"  [label="DDG: msg->msg_state"];
"1000344" -> "1000338"  [label="AST: "];
"1000344" -> "1000348"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000348" -> "1000344"  [label="AST: "];
"1000296" -> "1000344"  [label="CFG: "];
"1000344" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000344" -> "1001006"  [label="DDG: msg->msg_state"];
"1000433" -> "1000427"  [label="AST: "];
"1000433" -> "1000443"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000440" -> "1000433"  [label="AST: "];
"1000441" -> "1000433"  [label="AST: "];
"1000442" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="AST: "];
"1000446" -> "1000433"  [label="CFG: "];
"1000433" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000433" -> "1001006"  [label="DDG: s->be"];
"1000433" -> "1001006"  [label="DDG: s"];
"1000433" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000433" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be)"];
"1000433" -> "1001006"  [label="DDG: msg"];
"1000425" -> "1000433"  [label="DDG: s"];
"1000134" -> "1000433"  [label="DDG: s"];
"1000412" -> "1000433"  [label="DDG: msg"];
"1000449" -> "1000448"  [label="AST: "];
"1000449" -> "1000453"  [label="CFG: "];
"1000450" -> "1000449"  [label="AST: "];
"1000453" -> "1000449"  [label="AST: "];
"1000457" -> "1000449"  [label="CFG: "];
"1000497" -> "1000449"  [label="CFG: "];
"1000449" -> "1001006"  [label="DDG: msg->msg_state"];
"1000449" -> "1001006"  [label="DDG: msg->msg_state == HTTP_MSG_TRAILERS"];
"1000449" -> "1001006"  [label="DDG: HTTP_MSG_TRAILERS"];
"1000449" -> "1000479"  [label="DDG: HTTP_MSG_TRAILERS"];
"1000449" -> "1000496"  [label="DDG: msg->msg_state"];
"1000449" -> "1000554"  [label="DDG: msg->msg_state"];
"1000479" -> "1000473"  [label="AST: "];
"1000479" -> "1000489"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000486" -> "1000479"  [label="AST: "];
"1000487" -> "1000479"  [label="AST: "];
"1000488" -> "1000479"  [label="AST: "];
"1000489" -> "1000479"  [label="AST: "];
"1000492" -> "1000479"  [label="CFG: "];
"1000479" -> "1001006"  [label="DDG: s"];
"1000479" -> "1001006"  [label="DDG: s->be"];
"1000479" -> "1001006"  [label="DDG: HTTP_MSG_TRAILERS"];
"1000479" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be)"];
"1000479" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000479" -> "1001006"  [label="DDG: msg"];
"1000471" -> "1000479"  [label="DDG: s"];
"1000134" -> "1000479"  [label="DDG: s"];
"1000458" -> "1000479"  [label="DDG: msg"];
"1000496" -> "1000494"  [label="AST: "];
"1000496" -> "1000498"  [label="CFG: "];
"1000497" -> "1000496"  [label="AST: "];
"1000498" -> "1000496"  [label="AST: "];
"1000503" -> "1000496"  [label="CFG: "];
"1000496" -> "1001006"  [label="DDG: msg->msg_state"];
"1000496" -> "1001006"  [label="DDG: old_state"];
"1000496" -> "1000574"  [label="DDG: old_state"];
"1000574" -> "1000568"  [label="AST: "];
"1000574" -> "1000584"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000581" -> "1000574"  [label="AST: "];
"1000582" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="AST: "];
"1000584" -> "1000574"  [label="AST: "];
"1000587" -> "1000574"  [label="CFG: "];
"1000574" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000574" -> "1001006"  [label="DDG: old_state"];
"1000574" -> "1001006"  [label="DDG: s->be"];
"1000574" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be)"];
"1000574" -> "1001006"  [label="DDG: msg"];
"1000574" -> "1001006"  [label="DDG: s"];
"1000549" -> "1000574"  [label="DDG: s"];
"1000134" -> "1000574"  [label="DDG: s"];
"1000458" -> "1000574"  [label="DDG: msg"];
"1000412" -> "1000574"  [label="DDG: msg"];
"1000366" -> "1000574"  [label="DDG: msg"];
"1000146" -> "1000574"  [label="DDG: msg"];
"1000554" -> "1000553"  [label="AST: "];
"1000554" -> "1000558"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000558" -> "1000554"  [label="AST: "];
"1000553" -> "1000554"  [label="CFG: "];
"1000554" -> "1001006"  [label="DDG: msg->msg_state"];
"1000554" -> "1001006"  [label="DDG: HTTP_MSG_ERROR"];
"1000554" -> "1000553"  [label="DDG: msg->msg_state"];
"1000554" -> "1000553"  [label="DDG: HTTP_MSG_ERROR"];
"1000554" -> "1000807"  [label="DDG: HTTP_MSG_ERROR"];
"1000554" -> "1000871"  [label="DDG: HTTP_MSG_ERROR"];
"1000554" -> "1000892"  [label="DDG: HTTP_MSG_ERROR"];
"1000554" -> "1000986"  [label="DDG: HTTP_MSG_ERROR"];
"1000553" -> "1000552"  [label="AST: "];
"1000563" -> "1000553"  [label="CFG: "];
"1000589" -> "1000553"  [label="CFG: "];
"1000553" -> "1001006"  [label="DDG: unlikely(msg->msg_state == HTTP_MSG_ERROR)"];
"1000553" -> "1001006"  [label="DDG: msg->msg_state == HTTP_MSG_ERROR"];
"1000807" -> "1000137"  [label="AST: "];
"1000807" -> "1000813"  [label="CFG: "];
"1000808" -> "1000807"  [label="AST: "];
"1000813" -> "1000807"  [label="AST: "];
"1000816" -> "1000807"  [label="CFG: "];
"1000807" -> "1001006"  [label="DDG: txn->req.msg_state"];
"1000807" -> "1001006"  [label="DDG: HTTP_MSG_ERROR"];
"1000694" -> "1000807"  [label="DDG: HTTP_MSG_ERROR"];
"1000871" -> "1000870"  [label="AST: "];
"1000871" -> "1000877"  [label="CFG: "];
"1000872" -> "1000871"  [label="AST: "];
"1000877" -> "1000871"  [label="AST: "];
"1000880" -> "1000871"  [label="CFG: "];
"1000886" -> "1000871"  [label="CFG: "];
"1000871" -> "1001006"  [label="DDG: txn->rsp.msg_state"];
"1000871" -> "1001006"  [label="DDG: txn->rsp.msg_state < HTTP_MSG_ERROR"];
"1000871" -> "1001006"  [label="DDG: HTTP_MSG_ERROR"];
"1000694" -> "1000871"  [label="DDG: txn->rsp.msg_state"];
"1000694" -> "1000871"  [label="DDG: HTTP_MSG_ERROR"];
"1000892" -> "1000137"  [label="AST: "];
"1000892" -> "1000898"  [label="CFG: "];
"1000893" -> "1000892"  [label="AST: "];
"1000898" -> "1000892"  [label="AST: "];
"1000901" -> "1000892"  [label="CFG: "];
"1000892" -> "1001006"  [label="DDG: txn->req.msg_state"];
"1000892" -> "1001006"  [label="DDG: HTTP_MSG_ERROR"];
"1000986" -> "1000985"  [label="AST: "];
"1000986" -> "1000992"  [label="CFG: "];
"1000987" -> "1000986"  [label="AST: "];
"1000992" -> "1000986"  [label="AST: "];
"1000995" -> "1000986"  [label="CFG: "];
"1001001" -> "1000986"  [label="CFG: "];
"1000986" -> "1001006"  [label="DDG: HTTP_MSG_ERROR"];
"1000986" -> "1001006"  [label="DDG: txn->rsp.msg_state"];
"1000986" -> "1001006"  [label="DDG: txn->rsp.msg_state < HTTP_MSG_ERROR"];
}
