digraph "0_haproxy_b4d05093bc89f71377230228007e69a1434c1a0c_0@pointer" {
"1000366" [label="(Call,http_parse_chunk_size(msg))"];
"1000458" [label="(Call,http_forward_trailers(msg))"];
"1000412" [label="(Call,http_skip_chunk_crlf(msg))"];
"1000366" [label="(Call,http_parse_chunk_size(msg))"];
"1000146" [label="(Call,*msg = &s->txn.req)"];
"1000364" [label="(Call,ret = http_parse_chunk_size(msg))"];
"1000369" [label="(Call,ret == 0)"];
"1000375" [label="(Call,ret < 0)"];
"1000387" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be))"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000456" [label="(Call,ret = http_forward_trailers(msg))"];
"1000461" [label="(Call,ret == 0)"];
"1000467" [label="(Call,ret < 0)"];
"1000479" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be))"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000410" [label="(Call,ret = http_skip_chunk_crlf(msg))"];
"1000415" [label="(Call,ret == 0)"];
"1000421" [label="(Call,ret < 0)"];
"1000433" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be))"];
"1000467" [label="(Call,ret < 0)"];
"1001006" [label="(MethodReturn,int)"];
"1000486" [label="(Identifier,s)"];
"1000464" [label="(ControlStructure,goto missing_data;)"];
"1000462" [label="(Identifier,ret)"];
"1000362" [label="(Block,)"];
"1000422" [label="(Identifier,ret)"];
"1000137" [label="(Block,)"];
"1000381" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000487" [label="(Identifier,msg)"];
"1000380" [label="(Identifier,s)"];
"1000468" [label="(Identifier,ret)"];
"1000479" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be))"];
"1000460" [label="(ControlStructure,if (ret == 0))"];
"1000146" [label="(Call,*msg = &s->txn.req)"];
"1000441" [label="(Identifier,msg)"];
"1000410" [label="(Call,ret = http_skip_chunk_crlf(msg))"];
"1000461" [label="(Call,ret == 0)"];
"1000587" [label="(ControlStructure,goto return_bad_req;)"];
"1000454" [label="(Block,)"];
"1000426" [label="(Identifier,s)"];
"1000463" [label="(Literal,0)"];
"1000395" [label="(Identifier,msg)"];
"1000379" [label="(Call,session_inc_http_err_ctr(s))"];
"1000581" [label="(Identifier,s)"];
"1000456" [label="(Call,ret = http_forward_trailers(msg))"];
"1000568" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000473" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000367" [label="(Identifier,msg)"];
"1000446" [label="(ControlStructure,goto return_bad_req;)"];
"1000371" [label="(Literal,0)"];
"1000496" [label="(Call,old_state = msg->msg_state)"];
"1000458" [label="(Call,http_forward_trailers(msg))"];
"1000837" [label="(Identifier,HTTP_ERR_400)"];
"1000414" [label="(ControlStructure,if (ret == 0))"];
"1000443" [label="(Call,s->be)"];
"1000457" [label="(Identifier,ret)"];
"1000575" [label="(Call,&s->fe->invalid_req)"];
"1000492" [label="(ControlStructure,goto return_bad_req;)"];
"1000488" [label="(Identifier,HTTP_MSG_TRAILERS)"];
"1000375" [label="(Call,ret < 0)"];
"1000489" [label="(Call,s->be)"];
"1000433" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be))"];
"1000836" [label="(Identifier,s)"];
"1000423" [label="(Literal,0)"];
"1000400" [label="(ControlStructure,goto return_bad_req;)"];
"1000365" [label="(Identifier,ret)"];
"1000835" [label="(Call,http_error_message(s, HTTP_ERR_400))"];
"1000425" [label="(Call,session_inc_http_err_ctr(s))"];
"1000296" [label="(Literal,1)"];
"1000387" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be))"];
"1000370" [label="(Identifier,ret)"];
"1000427" [label="(ControlStructure,if (msg->err_pos >= 0))"];
"1000372" [label="(ControlStructure,goto missing_data;)"];
"1000840" [label="(Identifier,req)"];
"1000574" [label="(Call,http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be))"];
"1000480" [label="(Call,&s->fe->invalid_req)"];
"1000148" [label="(Call,&s->txn.req)"];
"1000147" [label="(Identifier,msg)"];
"1000449" [label="(Call,msg->msg_state == HTTP_MSG_TRAILERS)"];
"1000376" [label="(Identifier,ret)"];
"1000421" [label="(Call,ret < 0)"];
"1000549" [label="(Call,http_resync_states(s))"];
"1000368" [label="(ControlStructure,if (ret == 0))"];
"1000134" [label="(MethodParameterIn,struct session *s)"];
"1000408" [label="(Block,)"];
"1000420" [label="(ControlStructure,if (ret < 0))"];
"1000417" [label="(Literal,0)"];
"1000825" [label="(Block,)"];
"1000394" [label="(Identifier,s)"];
"1000158" [label="(Identifier,msg)"];
"1000403" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_CRLF)"];
"1000582" [label="(Identifier,msg)"];
"1000369" [label="(Call,ret == 0)"];
"1000364" [label="(Call,ret = http_parse_chunk_size(msg))"];
"1000388" [label="(Call,&s->fe->invalid_req)"];
"1000413" [label="(Identifier,msg)"];
"1000374" [label="(ControlStructure,if (ret < 0))"];
"1000411" [label="(Identifier,ret)"];
"1000584" [label="(Call,s->be)"];
"1000416" [label="(Identifier,ret)"];
"1000466" [label="(ControlStructure,if (ret < 0))"];
"1000471" [label="(Call,session_inc_http_err_ctr(s))"];
"1000418" [label="(ControlStructure,goto missing_data;)"];
"1000396" [label="(Identifier,HTTP_MSG_CHUNK_SIZE)"];
"1000472" [label="(Identifier,s)"];
"1000377" [label="(Literal,0)"];
"1000397" [label="(Call,s->be)"];
"1000831" [label="(Call,stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400)))"];
"1000434" [label="(Call,&s->fe->invalid_req)"];
"1000412" [label="(Call,http_skip_chunk_crlf(msg))"];
"1000469" [label="(Literal,0)"];
"1000357" [label="(Call,msg->msg_state == HTTP_MSG_CHUNK_SIZE)"];
"1000832" [label="(Call,req->prod)"];
"1000440" [label="(Identifier,s)"];
"1000459" [label="(Identifier,msg)"];
"1000415" [label="(Call,ret == 0)"];
"1000442" [label="(Identifier,HTTP_MSG_CHUNK_CRLF)"];
"1000583" [label="(Identifier,old_state)"];
"1000366" [label="(Call,http_parse_chunk_size(msg))"];
"1000366" -> "1000364"  [label="AST: "];
"1000366" -> "1000367"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000364" -> "1000366"  [label="CFG: "];
"1000366" -> "1001006"  [label="DDG: msg"];
"1000366" -> "1000364"  [label="DDG: msg"];
"1000458" -> "1000366"  [label="DDG: msg"];
"1000412" -> "1000366"  [label="DDG: msg"];
"1000146" -> "1000366"  [label="DDG: msg"];
"1000366" -> "1000387"  [label="DDG: msg"];
"1000366" -> "1000412"  [label="DDG: msg"];
"1000366" -> "1000458"  [label="DDG: msg"];
"1000366" -> "1000574"  [label="DDG: msg"];
"1000458" -> "1000456"  [label="AST: "];
"1000458" -> "1000459"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000456" -> "1000458"  [label="CFG: "];
"1000458" -> "1001006"  [label="DDG: msg"];
"1000458" -> "1000412"  [label="DDG: msg"];
"1000458" -> "1000456"  [label="DDG: msg"];
"1000412" -> "1000458"  [label="DDG: msg"];
"1000146" -> "1000458"  [label="DDG: msg"];
"1000458" -> "1000479"  [label="DDG: msg"];
"1000458" -> "1000574"  [label="DDG: msg"];
"1000412" -> "1000410"  [label="AST: "];
"1000412" -> "1000413"  [label="CFG: "];
"1000413" -> "1000412"  [label="AST: "];
"1000410" -> "1000412"  [label="CFG: "];
"1000412" -> "1001006"  [label="DDG: msg"];
"1000412" -> "1000410"  [label="DDG: msg"];
"1000146" -> "1000412"  [label="DDG: msg"];
"1000412" -> "1000433"  [label="DDG: msg"];
"1000412" -> "1000574"  [label="DDG: msg"];
"1000146" -> "1000137"  [label="AST: "];
"1000146" -> "1000148"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000148" -> "1000146"  [label="AST: "];
"1000158" -> "1000146"  [label="CFG: "];
"1000146" -> "1001006"  [label="DDG: &s->txn.req"];
"1000146" -> "1001006"  [label="DDG: msg"];
"1000146" -> "1000574"  [label="DDG: msg"];
"1000364" -> "1000362"  [label="AST: "];
"1000365" -> "1000364"  [label="AST: "];
"1000370" -> "1000364"  [label="CFG: "];
"1000364" -> "1001006"  [label="DDG: http_parse_chunk_size(msg)"];
"1000364" -> "1000369"  [label="DDG: ret"];
"1000369" -> "1000368"  [label="AST: "];
"1000369" -> "1000371"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000371" -> "1000369"  [label="AST: "];
"1000372" -> "1000369"  [label="CFG: "];
"1000376" -> "1000369"  [label="CFG: "];
"1000369" -> "1001006"  [label="DDG: ret == 0"];
"1000369" -> "1001006"  [label="DDG: ret"];
"1000369" -> "1000375"  [label="DDG: ret"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000377"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="AST: "];
"1000296" -> "1000375"  [label="CFG: "];
"1000380" -> "1000375"  [label="CFG: "];
"1000375" -> "1001006"  [label="DDG: ret"];
"1000375" -> "1001006"  [label="DDG: ret < 0"];
"1000387" -> "1000381"  [label="AST: "];
"1000387" -> "1000397"  [label="CFG: "];
"1000388" -> "1000387"  [label="AST: "];
"1000394" -> "1000387"  [label="AST: "];
"1000395" -> "1000387"  [label="AST: "];
"1000396" -> "1000387"  [label="AST: "];
"1000397" -> "1000387"  [label="AST: "];
"1000400" -> "1000387"  [label="CFG: "];
"1000387" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000387" -> "1001006"  [label="DDG: s->be"];
"1000387" -> "1001006"  [label="DDG: s"];
"1000387" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000387" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_SIZE, s->be)"];
"1000387" -> "1001006"  [label="DDG: msg"];
"1000379" -> "1000387"  [label="DDG: s"];
"1000134" -> "1000387"  [label="DDG: s"];
"1000357" -> "1000387"  [label="DDG: HTTP_MSG_CHUNK_SIZE"];
"1000387" -> "1000835"  [label="DDG: s"];
"1000835" -> "1000831"  [label="AST: "];
"1000835" -> "1000837"  [label="CFG: "];
"1000836" -> "1000835"  [label="AST: "];
"1000837" -> "1000835"  [label="AST: "];
"1000831" -> "1000835"  [label="CFG: "];
"1000835" -> "1001006"  [label="DDG: s"];
"1000835" -> "1001006"  [label="DDG: HTTP_ERR_400"];
"1000835" -> "1000831"  [label="DDG: s"];
"1000835" -> "1000831"  [label="DDG: HTTP_ERR_400"];
"1000549" -> "1000835"  [label="DDG: s"];
"1000479" -> "1000835"  [label="DDG: s"];
"1000471" -> "1000835"  [label="DDG: s"];
"1000433" -> "1000835"  [label="DDG: s"];
"1000574" -> "1000835"  [label="DDG: s"];
"1000379" -> "1000835"  [label="DDG: s"];
"1000425" -> "1000835"  [label="DDG: s"];
"1000134" -> "1000835"  [label="DDG: s"];
"1000831" -> "1000825"  [label="AST: "];
"1000832" -> "1000831"  [label="AST: "];
"1000840" -> "1000831"  [label="CFG: "];
"1000831" -> "1001006"  [label="DDG: http_error_message(s, HTTP_ERR_400)"];
"1000831" -> "1001006"  [label="DDG: req->prod"];
"1000831" -> "1001006"  [label="DDG: stream_int_retnclose(req->prod, http_error_message(s, HTTP_ERR_400))"];
"1000456" -> "1000454"  [label="AST: "];
"1000457" -> "1000456"  [label="AST: "];
"1000462" -> "1000456"  [label="CFG: "];
"1000456" -> "1001006"  [label="DDG: http_forward_trailers(msg)"];
"1000456" -> "1000461"  [label="DDG: ret"];
"1000461" -> "1000460"  [label="AST: "];
"1000461" -> "1000463"  [label="CFG: "];
"1000462" -> "1000461"  [label="AST: "];
"1000463" -> "1000461"  [label="AST: "];
"1000464" -> "1000461"  [label="CFG: "];
"1000468" -> "1000461"  [label="CFG: "];
"1000461" -> "1001006"  [label="DDG: ret == 0"];
"1000461" -> "1001006"  [label="DDG: ret"];
"1000461" -> "1000467"  [label="DDG: ret"];
"1000467" -> "1000466"  [label="AST: "];
"1000467" -> "1000469"  [label="CFG: "];
"1000468" -> "1000467"  [label="AST: "];
"1000469" -> "1000467"  [label="AST: "];
"1000296" -> "1000467"  [label="CFG: "];
"1000472" -> "1000467"  [label="CFG: "];
"1000467" -> "1001006"  [label="DDG: ret"];
"1000467" -> "1001006"  [label="DDG: ret < 0"];
"1000479" -> "1000473"  [label="AST: "];
"1000479" -> "1000489"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000486" -> "1000479"  [label="AST: "];
"1000487" -> "1000479"  [label="AST: "];
"1000488" -> "1000479"  [label="AST: "];
"1000489" -> "1000479"  [label="AST: "];
"1000492" -> "1000479"  [label="CFG: "];
"1000479" -> "1001006"  [label="DDG: s"];
"1000479" -> "1001006"  [label="DDG: s->be"];
"1000479" -> "1001006"  [label="DDG: HTTP_MSG_TRAILERS"];
"1000479" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_TRAILERS, s->be)"];
"1000479" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000479" -> "1001006"  [label="DDG: msg"];
"1000471" -> "1000479"  [label="DDG: s"];
"1000134" -> "1000479"  [label="DDG: s"];
"1000449" -> "1000479"  [label="DDG: HTTP_MSG_TRAILERS"];
"1000574" -> "1000568"  [label="AST: "];
"1000574" -> "1000584"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000581" -> "1000574"  [label="AST: "];
"1000582" -> "1000574"  [label="AST: "];
"1000583" -> "1000574"  [label="AST: "];
"1000584" -> "1000574"  [label="AST: "];
"1000587" -> "1000574"  [label="CFG: "];
"1000574" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000574" -> "1001006"  [label="DDG: old_state"];
"1000574" -> "1001006"  [label="DDG: s->be"];
"1000574" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, old_state, s->be)"];
"1000574" -> "1001006"  [label="DDG: msg"];
"1000574" -> "1001006"  [label="DDG: s"];
"1000549" -> "1000574"  [label="DDG: s"];
"1000134" -> "1000574"  [label="DDG: s"];
"1000496" -> "1000574"  [label="DDG: old_state"];
"1000410" -> "1000408"  [label="AST: "];
"1000411" -> "1000410"  [label="AST: "];
"1000416" -> "1000410"  [label="CFG: "];
"1000410" -> "1001006"  [label="DDG: http_skip_chunk_crlf(msg)"];
"1000410" -> "1000415"  [label="DDG: ret"];
"1000415" -> "1000414"  [label="AST: "];
"1000415" -> "1000417"  [label="CFG: "];
"1000416" -> "1000415"  [label="AST: "];
"1000417" -> "1000415"  [label="AST: "];
"1000418" -> "1000415"  [label="CFG: "];
"1000422" -> "1000415"  [label="CFG: "];
"1000415" -> "1001006"  [label="DDG: ret"];
"1000415" -> "1001006"  [label="DDG: ret == 0"];
"1000415" -> "1000421"  [label="DDG: ret"];
"1000421" -> "1000420"  [label="AST: "];
"1000421" -> "1000423"  [label="CFG: "];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000421"  [label="AST: "];
"1000296" -> "1000421"  [label="CFG: "];
"1000426" -> "1000421"  [label="CFG: "];
"1000421" -> "1001006"  [label="DDG: ret"];
"1000421" -> "1001006"  [label="DDG: ret < 0"];
"1000433" -> "1000427"  [label="AST: "];
"1000433" -> "1000443"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000440" -> "1000433"  [label="AST: "];
"1000441" -> "1000433"  [label="AST: "];
"1000442" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="AST: "];
"1000446" -> "1000433"  [label="CFG: "];
"1000433" -> "1001006"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
"1000433" -> "1001006"  [label="DDG: s->be"];
"1000433" -> "1001006"  [label="DDG: s"];
"1000433" -> "1001006"  [label="DDG: &s->fe->invalid_req"];
"1000433" -> "1001006"  [label="DDG: http_capture_bad_message(&s->fe->invalid_req, s, msg, HTTP_MSG_CHUNK_CRLF, s->be)"];
"1000433" -> "1001006"  [label="DDG: msg"];
"1000425" -> "1000433"  [label="DDG: s"];
"1000134" -> "1000433"  [label="DDG: s"];
"1000403" -> "1000433"  [label="DDG: HTTP_MSG_CHUNK_CRLF"];
}
