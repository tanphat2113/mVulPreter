digraph "0_file_445c8fb0ebff85195be94cd9f7e1df89cade5c7f_0@pointer" {
"1000125" [label="(Call,*interp = \"\")"];
"1000345" [label="(Call,file_printable(ibuf, sizeof(ibuf), interp))"];
"1000342" [label="(Call,file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)))"];
"1000341" [label="(Call,file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)) == -1)"];
"1000349" [label="(Identifier,interp)"];
"1000281" [label="(Call,interp = (const char *)nbuf)"];
"1000127" [label="(Literal,\"\")"];
"1000136" [label="(Identifier,size)"];
"1000107" [label="(MethodParameterIn,struct magic_set *ms)"];
"1000354" [label="(Literal,1)"];
"1000126" [label="(Identifier,interp)"];
"1000346" [label="(Identifier,ibuf)"];
"1000345" [label="(Call,file_printable(ibuf, sizeof(ibuf), interp))"];
"1000347" [label="(Call,sizeof(ibuf))"];
"1000125" [label="(Call,*interp = \"\")"];
"1000343" [label="(Identifier,ms)"];
"1000340" [label="(ControlStructure,if (file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)) == -1))"];
"1000344" [label="(Literal,\", interpreter %s\")"];
"1000327" [label="(Call,file_printf(ms, \", %s linked\", linking_style))"];
"1000341" [label="(Call,file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)) == -1)"];
"1000117" [label="(Block,)"];
"1000350" [label="(Call,-1)"];
"1000287" [label="(Call,interp = \"*empty*\")"];
"1000342" [label="(Call,file_printf(ms, \", interpreter %s\",\n\t\t    file_printable(ibuf, sizeof(ibuf), interp)))"];
"1000357" [label="(MethodReturn,RET)"];
"1000356" [label="(Literal,0)"];
"1000351" [label="(Literal,1)"];
"1000125" -> "1000117"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000126" -> "1000125"  [label="AST: "];
"1000127" -> "1000125"  [label="AST: "];
"1000136" -> "1000125"  [label="CFG: "];
"1000125" -> "1000357"  [label="DDG: "];
"1000125" -> "1000345"  [label="DDG: "];
"1000345" -> "1000342"  [label="AST: "];
"1000345" -> "1000349"  [label="CFG: "];
"1000346" -> "1000345"  [label="AST: "];
"1000347" -> "1000345"  [label="AST: "];
"1000349" -> "1000345"  [label="AST: "];
"1000342" -> "1000345"  [label="CFG: "];
"1000345" -> "1000357"  [label="DDG: "];
"1000345" -> "1000357"  [label="DDG: "];
"1000345" -> "1000342"  [label="DDG: "];
"1000345" -> "1000342"  [label="DDG: "];
"1000281" -> "1000345"  [label="DDG: "];
"1000287" -> "1000345"  [label="DDG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000351" -> "1000342"  [label="CFG: "];
"1000342" -> "1000357"  [label="DDG: "];
"1000342" -> "1000357"  [label="DDG: "];
"1000342" -> "1000341"  [label="DDG: "];
"1000342" -> "1000341"  [label="DDG: "];
"1000342" -> "1000341"  [label="DDG: "];
"1000327" -> "1000342"  [label="DDG: "];
"1000107" -> "1000342"  [label="DDG: "];
"1000341" -> "1000340"  [label="AST: "];
"1000341" -> "1000350"  [label="CFG: "];
"1000350" -> "1000341"  [label="AST: "];
"1000354" -> "1000341"  [label="CFG: "];
"1000356" -> "1000341"  [label="CFG: "];
"1000341" -> "1000357"  [label="DDG: "];
"1000341" -> "1000357"  [label="DDG: "];
"1000341" -> "1000357"  [label="DDG: "];
"1000350" -> "1000341"  [label="DDG: "];
}
