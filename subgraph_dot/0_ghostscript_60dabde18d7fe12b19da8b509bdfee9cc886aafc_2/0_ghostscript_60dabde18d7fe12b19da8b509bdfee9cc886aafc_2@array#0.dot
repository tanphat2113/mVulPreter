digraph "0_ghostscript_60dabde18d7fe12b19da8b509bdfee9cc886aafc_2@array" {
"1000493" [label="(Call,lerp(stops[0].g, stops[1].g, d))"];
"1000475" [label="(Call,lerp(stops[0].r, stops[1].r, d))"];
"1000442" [label="(Call,d = -stops[0].offset / (stops[1].offset - stops[0].offset))"];
"1000444" [label="(Call,-stops[0].offset / (stops[1].offset - stops[0].offset))"];
"1000445" [label="(Call,-stops[0].offset)"];
"1000433" [label="(Call,stops[0].offset < 0)"];
"1000451" [label="(Call,stops[1].offset - stops[0].offset)"];
"1000487" [label="(Call,stops[0].g = lerp(stops[0].g, stops[1].g, d))"];
"1000511" [label="(Call,lerp(stops[0].b, stops[1].b, d))"];
"1000505" [label="(Call,stops[0].b = lerp(stops[0].b, stops[1].b, d))"];
"1000529" [label="(Call,lerp(stops[0].a, stops[1].a, d))"];
"1000523" [label="(Call,stops[0].a = lerp(stops[0].a, stops[1].a, d))"];
"1000703" [label="(Call,stops[0] = stops[1])"];
"1000481" [label="(Call,stops[1].r)"];
"1000444" [label="(Call,-stops[0].offset / (stops[1].offset - stops[0].offset))"];
"1000439" [label="(Literal,0)"];
"1000512" [label="(Call,stops[0].b)"];
"1000750" [label="(MethodReturn,RET)"];
"1000486" [label="(Identifier,d)"];
"1000445" [label="(Call,-stops[0].offset)"];
"1000526" [label="(Identifier,stops)"];
"1000693" [label="(Block,)"];
"1000475" [label="(Call,lerp(stops[0].r, stops[1].r, d))"];
"1000522" [label="(Identifier,d)"];
"1000446" [label="(Call,stops[0].offset)"];
"1000540" [label="(Identifier,d)"];
"1000530" [label="(Call,stops[0].a)"];
"1000545" [label="(Identifier,stops)"];
"1000487" [label="(Call,stops[0].g = lerp(stops[0].g, stops[1].g, d))"];
"1000517" [label="(Call,stops[1].b)"];
"1000499" [label="(Call,stops[1].g)"];
"1000694" [label="(Call,memmove(stops + 1, stops, count * sizeof(struct stop)))"];
"1000505" [label="(Call,stops[0].b = lerp(stops[0].b, stops[1].b, d))"];
"1000443" [label="(Identifier,d)"];
"1000529" [label="(Call,lerp(stops[0].a, stops[1].a, d))"];
"1000504" [label="(Identifier,d)"];
"1000535" [label="(Call,stops[1].a)"];
"1000432" [label="(ControlStructure,if (stops[0].offset < 0))"];
"1000113" [label="(MethodParameterIn,struct stop *stops)"];
"1000457" [label="(Call,stops[0].offset)"];
"1000465" [label="(Identifier,stops)"];
"1000494" [label="(Call,stops[0].g)"];
"1000488" [label="(Call,stops[0].g)"];
"1000452" [label="(Call,stops[1].offset)"];
"1000511" [label="(Call,lerp(stops[0].b, stops[1].b, d))"];
"1000508" [label="(Identifier,stops)"];
"1000707" [label="(Call,stops[1])"];
"1000506" [label="(Call,stops[0].b)"];
"1000433" [label="(Call,stops[0].offset < 0)"];
"1000476" [label="(Call,stops[0].r)"];
"1000451" [label="(Call,stops[1].offset - stops[0].offset)"];
"1000713" [label="(Identifier,stops)"];
"1000454" [label="(Identifier,stops)"];
"1000493" [label="(Call,lerp(stops[0].g, stops[1].g, d))"];
"1000434" [label="(Call,stops[0].offset)"];
"1000704" [label="(Call,stops[0])"];
"1000469" [label="(Call,stops[0].r = lerp(stops[0].r, stops[1].r, d))"];
"1000440" [label="(Block,)"];
"1000524" [label="(Call,stops[0].a)"];
"1000703" [label="(Call,stops[0] = stops[1])"];
"1000442" [label="(Call,d = -stops[0].offset / (stops[1].offset - stops[0].offset))"];
"1000686" [label="(Call,stops[0].offset > 0)"];
"1000523" [label="(Call,stops[0].a = lerp(stops[0].a, stops[1].a, d))"];
"1000493" -> "1000487"  [label="AST: "];
"1000493" -> "1000504"  [label="CFG: "];
"1000494" -> "1000493"  [label="AST: "];
"1000499" -> "1000493"  [label="AST: "];
"1000504" -> "1000493"  [label="AST: "];
"1000487" -> "1000493"  [label="CFG: "];
"1000493" -> "1000750"  [label="DDG: stops[1].g"];
"1000493" -> "1000487"  [label="DDG: stops[0].g"];
"1000493" -> "1000487"  [label="DDG: stops[1].g"];
"1000493" -> "1000487"  [label="DDG: d"];
"1000475" -> "1000493"  [label="DDG: d"];
"1000493" -> "1000511"  [label="DDG: d"];
"1000493" -> "1000703"  [label="DDG: stops[1].g"];
"1000475" -> "1000469"  [label="AST: "];
"1000475" -> "1000486"  [label="CFG: "];
"1000476" -> "1000475"  [label="AST: "];
"1000481" -> "1000475"  [label="AST: "];
"1000486" -> "1000475"  [label="AST: "];
"1000469" -> "1000475"  [label="CFG: "];
"1000475" -> "1000750"  [label="DDG: stops[1].r"];
"1000475" -> "1000469"  [label="DDG: stops[0].r"];
"1000475" -> "1000469"  [label="DDG: stops[1].r"];
"1000475" -> "1000469"  [label="DDG: d"];
"1000442" -> "1000475"  [label="DDG: d"];
"1000475" -> "1000703"  [label="DDG: stops[1].r"];
"1000442" -> "1000440"  [label="AST: "];
"1000442" -> "1000444"  [label="CFG: "];
"1000443" -> "1000442"  [label="AST: "];
"1000444" -> "1000442"  [label="AST: "];
"1000465" -> "1000442"  [label="CFG: "];
"1000442" -> "1000750"  [label="DDG: -stops[0].offset / (stops[1].offset - stops[0].offset)"];
"1000444" -> "1000442"  [label="DDG: -stops[0].offset"];
"1000444" -> "1000442"  [label="DDG: stops[1].offset - stops[0].offset"];
"1000444" -> "1000451"  [label="CFG: "];
"1000445" -> "1000444"  [label="AST: "];
"1000451" -> "1000444"  [label="AST: "];
"1000444" -> "1000750"  [label="DDG: -stops[0].offset"];
"1000444" -> "1000750"  [label="DDG: stops[1].offset - stops[0].offset"];
"1000445" -> "1000444"  [label="DDG: stops[0].offset"];
"1000451" -> "1000444"  [label="DDG: stops[1].offset"];
"1000451" -> "1000444"  [label="DDG: stops[0].offset"];
"1000445" -> "1000446"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000454" -> "1000445"  [label="CFG: "];
"1000433" -> "1000445"  [label="DDG: stops[0].offset"];
"1000445" -> "1000451"  [label="DDG: stops[0].offset"];
"1000433" -> "1000432"  [label="AST: "];
"1000433" -> "1000439"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000439" -> "1000433"  [label="AST: "];
"1000443" -> "1000433"  [label="CFG: "];
"1000545" -> "1000433"  [label="CFG: "];
"1000433" -> "1000750"  [label="DDG: stops[0].offset < 0"];
"1000433" -> "1000686"  [label="DDG: stops[0].offset"];
"1000451" -> "1000457"  [label="CFG: "];
"1000452" -> "1000451"  [label="AST: "];
"1000457" -> "1000451"  [label="AST: "];
"1000451" -> "1000750"  [label="DDG: stops[1].offset"];
"1000451" -> "1000703"  [label="DDG: stops[1].offset"];
"1000487" -> "1000440"  [label="AST: "];
"1000488" -> "1000487"  [label="AST: "];
"1000508" -> "1000487"  [label="CFG: "];
"1000487" -> "1000750"  [label="DDG: stops[0].g"];
"1000487" -> "1000750"  [label="DDG: lerp(stops[0].g, stops[1].g, d)"];
"1000511" -> "1000505"  [label="AST: "];
"1000511" -> "1000522"  [label="CFG: "];
"1000512" -> "1000511"  [label="AST: "];
"1000517" -> "1000511"  [label="AST: "];
"1000522" -> "1000511"  [label="AST: "];
"1000505" -> "1000511"  [label="CFG: "];
"1000511" -> "1000750"  [label="DDG: stops[1].b"];
"1000511" -> "1000505"  [label="DDG: stops[0].b"];
"1000511" -> "1000505"  [label="DDG: stops[1].b"];
"1000511" -> "1000505"  [label="DDG: d"];
"1000511" -> "1000529"  [label="DDG: d"];
"1000511" -> "1000703"  [label="DDG: stops[1].b"];
"1000505" -> "1000440"  [label="AST: "];
"1000506" -> "1000505"  [label="AST: "];
"1000526" -> "1000505"  [label="CFG: "];
"1000505" -> "1000750"  [label="DDG: stops[0].b"];
"1000505" -> "1000750"  [label="DDG: lerp(stops[0].b, stops[1].b, d)"];
"1000529" -> "1000523"  [label="AST: "];
"1000529" -> "1000540"  [label="CFG: "];
"1000530" -> "1000529"  [label="AST: "];
"1000535" -> "1000529"  [label="AST: "];
"1000540" -> "1000529"  [label="AST: "];
"1000523" -> "1000529"  [label="CFG: "];
"1000529" -> "1000750"  [label="DDG: d"];
"1000529" -> "1000750"  [label="DDG: stops[1].a"];
"1000529" -> "1000523"  [label="DDG: stops[0].a"];
"1000529" -> "1000523"  [label="DDG: stops[1].a"];
"1000529" -> "1000523"  [label="DDG: d"];
"1000529" -> "1000703"  [label="DDG: stops[1].a"];
"1000523" -> "1000440"  [label="AST: "];
"1000524" -> "1000523"  [label="AST: "];
"1000545" -> "1000523"  [label="CFG: "];
"1000523" -> "1000750"  [label="DDG: stops[0].a"];
"1000523" -> "1000750"  [label="DDG: lerp(stops[0].a, stops[1].a, d)"];
"1000703" -> "1000693"  [label="AST: "];
"1000703" -> "1000707"  [label="CFG: "];
"1000704" -> "1000703"  [label="AST: "];
"1000707" -> "1000703"  [label="AST: "];
"1000713" -> "1000703"  [label="CFG: "];
"1000703" -> "1000750"  [label="DDG: stops[1]"];
"1000703" -> "1000750"  [label="DDG: stops[0]"];
"1000694" -> "1000703"  [label="DDG: stops"];
"1000113" -> "1000703"  [label="DDG: stops"];
}
