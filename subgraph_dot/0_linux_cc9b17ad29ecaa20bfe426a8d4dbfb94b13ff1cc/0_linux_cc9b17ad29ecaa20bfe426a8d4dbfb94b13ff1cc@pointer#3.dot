digraph "0_linux_cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc@pointer" {
"1000220" [label="(Call,alloc_pages(sk->sk_allocation, 0))"];
"1000218" [label="(Call,page = alloc_pages(sk->sk_allocation, 0))"];
"1000226" [label="(Call,!page)"];
"1000242" [label="(Call,__skb_fill_page_desc(skb, i,\n\t\t\t\t\t\t\tpage, 0,\n\t\t\t\t\t\t\t(data_len >= PAGE_SIZE ?\n\t\t\t\t\t\t\t PAGE_SIZE :\n\t\t\t\t\t\t\t data_len)))"];
"1000214" [label="(Call,i++)"];
"1000211" [label="(Call,i < npages)"];
"1000233" [label="(Call,skb_shinfo(skb)->nr_frags = i)"];
"1000235" [label="(Call,skb_shinfo(skb))"];
"1000239" [label="(Call,kfree_skb(skb))"];
"1000295" [label="(Call,skb_set_owner_w(skb, sk))"];
"1000298" [label="(Return,return skb;)"];
"1000296" [label="(Identifier,skb)"];
"1000226" [label="(Call,!page)"];
"1000236" [label="(Identifier,skb)"];
"1000154" [label="(Call,sock_error(sk))"];
"1000230" [label="(Identifier,err)"];
"1000295" [label="(Call,skb_set_owner_w(skb, sk))"];
"1000105" [label="(MethodParameterIn,unsigned long data_len)"];
"1000208" [label="(Call,i = 0)"];
"1000128" [label="(Call,npages > MAX_SKB_FRAGS)"];
"1000298" [label="(Return,return skb;)"];
"1000216" [label="(Block,)"];
"1000235" [label="(Call,skb_shinfo(skb))"];
"1000247" [label="(Call,data_len >= PAGE_SIZE ?\n\t\t\t\t\t\t\t PAGE_SIZE :\n\t\t\t\t\t\t\t data_len)"];
"1000233" [label="(Call,skb_shinfo(skb)->nr_frags = i)"];
"1000244" [label="(Identifier,i)"];
"1000246" [label="(Literal,0)"];
"1000254" [label="(Identifier,data_len)"];
"1000183" [label="(Call,skb = alloc_skb(header_len, gfp_mask))"];
"1000241" [label="(ControlStructure,goto failure;)"];
"1000213" [label="(Identifier,npages)"];
"1000228" [label="(Block,)"];
"1000103" [label="(MethodParameterIn,struct sock *sk)"];
"1000248" [label="(Call,data_len >= PAGE_SIZE)"];
"1000221" [label="(Call,sk->sk_allocation)"];
"1000256" [label="(ControlStructure,break;)"];
"1000312" [label="(MethodReturn,struct sk_buff *)"];
"1000215" [label="(Identifier,i)"];
"1000203" [label="(Call,skb_shinfo(skb))"];
"1000245" [label="(Identifier,page)"];
"1000243" [label="(Identifier,skb)"];
"1000292" [label="(Call,sock_wait_for_wmem(sk, timeo))"];
"1000212" [label="(Identifier,i)"];
"1000225" [label="(ControlStructure,if (!page))"];
"1000220" [label="(Call,alloc_pages(sk->sk_allocation, 0))"];
"1000207" [label="(ControlStructure,for (i = 0; i < npages; i++))"];
"1000299" [label="(Identifier,skb)"];
"1000239" [label="(Call,kfree_skb(skb))"];
"1000238" [label="(Identifier,i)"];
"1000242" [label="(Call,__skb_fill_page_desc(skb, i,\n\t\t\t\t\t\t\tpage, 0,\n\t\t\t\t\t\t\t(data_len >= PAGE_SIZE ?\n\t\t\t\t\t\t\t PAGE_SIZE :\n\t\t\t\t\t\t\t data_len)))"];
"1000297" [label="(Identifier,sk)"];
"1000234" [label="(Call,skb_shinfo(skb)->nr_frags)"];
"1000108" [label="(Block,)"];
"1000237" [label="(FieldIdentifier,nr_frags)"];
"1000240" [label="(Identifier,skb)"];
"1000224" [label="(Literal,0)"];
"1000219" [label="(Identifier,page)"];
"1000146" [label="(Call,sock_sndtimeo(sk, noblock))"];
"1000218" [label="(Call,page = alloc_pages(sk->sk_allocation, 0))"];
"1000211" [label="(Call,i < npages)"];
"1000214" [label="(Call,i++)"];
"1000227" [label="(Identifier,page)"];
"1000220" -> "1000218"  [label="AST: "];
"1000220" -> "1000224"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000224" -> "1000220"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000220" -> "1000312"  [label="DDG: sk->sk_allocation"];
"1000220" -> "1000218"  [label="DDG: sk->sk_allocation"];
"1000220" -> "1000218"  [label="DDG: 0"];
"1000218" -> "1000216"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000227" -> "1000218"  [label="CFG: "];
"1000218" -> "1000312"  [label="DDG: alloc_pages(sk->sk_allocation, 0)"];
"1000218" -> "1000226"  [label="DDG: page"];
"1000226" -> "1000225"  [label="AST: "];
"1000226" -> "1000227"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="CFG: "];
"1000243" -> "1000226"  [label="CFG: "];
"1000226" -> "1000312"  [label="DDG: page"];
"1000226" -> "1000312"  [label="DDG: !page"];
"1000226" -> "1000242"  [label="DDG: page"];
"1000242" -> "1000216"  [label="AST: "];
"1000242" -> "1000247"  [label="CFG: "];
"1000243" -> "1000242"  [label="AST: "];
"1000244" -> "1000242"  [label="AST: "];
"1000245" -> "1000242"  [label="AST: "];
"1000246" -> "1000242"  [label="AST: "];
"1000247" -> "1000242"  [label="AST: "];
"1000254" -> "1000242"  [label="CFG: "];
"1000242" -> "1000312"  [label="DDG: __skb_fill_page_desc(skb, i,\n\t\t\t\t\t\t\tpage, 0,\n\t\t\t\t\t\t\t(data_len >= PAGE_SIZE ?\n\t\t\t\t\t\t\t PAGE_SIZE :\n\t\t\t\t\t\t\t data_len))"];
"1000242" -> "1000312"  [label="DDG: page"];
"1000242" -> "1000312"  [label="DDG: data_len >= PAGE_SIZE ?\n\t\t\t\t\t\t\t PAGE_SIZE :\n\t\t\t\t\t\t\t data_len"];
"1000242" -> "1000214"  [label="DDG: i"];
"1000242" -> "1000235"  [label="DDG: skb"];
"1000203" -> "1000242"  [label="DDG: skb"];
"1000211" -> "1000242"  [label="DDG: i"];
"1000248" -> "1000242"  [label="DDG: PAGE_SIZE"];
"1000248" -> "1000242"  [label="DDG: data_len"];
"1000105" -> "1000242"  [label="DDG: data_len"];
"1000242" -> "1000295"  [label="DDG: skb"];
"1000214" -> "1000207"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000214" -> "1000211"  [label="DDG: i"];
"1000211" -> "1000207"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000219" -> "1000211"  [label="CFG: "];
"1000256" -> "1000211"  [label="CFG: "];
"1000211" -> "1000312"  [label="DDG: i"];
"1000211" -> "1000312"  [label="DDG: npages"];
"1000211" -> "1000312"  [label="DDG: i < npages"];
"1000208" -> "1000211"  [label="DDG: i"];
"1000128" -> "1000211"  [label="DDG: npages"];
"1000211" -> "1000233"  [label="DDG: i"];
"1000233" -> "1000228"  [label="AST: "];
"1000233" -> "1000238"  [label="CFG: "];
"1000234" -> "1000233"  [label="AST: "];
"1000238" -> "1000233"  [label="AST: "];
"1000240" -> "1000233"  [label="CFG: "];
"1000233" -> "1000312"  [label="DDG: i"];
"1000233" -> "1000312"  [label="DDG: skb_shinfo(skb)->nr_frags"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="CFG: "];
"1000203" -> "1000235"  [label="DDG: skb"];
"1000235" -> "1000239"  [label="DDG: skb"];
"1000239" -> "1000228"  [label="AST: "];
"1000239" -> "1000240"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="CFG: "];
"1000239" -> "1000312"  [label="DDG: kfree_skb(skb)"];
"1000239" -> "1000312"  [label="DDG: skb"];
"1000295" -> "1000108"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="CFG: "];
"1000295" -> "1000312"  [label="DDG: skb"];
"1000295" -> "1000312"  [label="DDG: sk"];
"1000295" -> "1000312"  [label="DDG: skb_set_owner_w(skb, sk)"];
"1000183" -> "1000295"  [label="DDG: skb"];
"1000203" -> "1000295"  [label="DDG: skb"];
"1000292" -> "1000295"  [label="DDG: sk"];
"1000146" -> "1000295"  [label="DDG: sk"];
"1000154" -> "1000295"  [label="DDG: sk"];
"1000103" -> "1000295"  [label="DDG: sk"];
"1000295" -> "1000298"  [label="DDG: skb"];
"1000298" -> "1000108"  [label="AST: "];
"1000298" -> "1000299"  [label="CFG: "];
"1000299" -> "1000298"  [label="AST: "];
"1000312" -> "1000298"  [label="CFG: "];
"1000298" -> "1000312"  [label="DDG: <RET>"];
"1000299" -> "1000298"  [label="DDG: skb"];
}
