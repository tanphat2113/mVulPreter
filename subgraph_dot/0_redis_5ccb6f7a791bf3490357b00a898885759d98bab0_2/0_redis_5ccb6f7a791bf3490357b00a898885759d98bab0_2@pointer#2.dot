digraph "0_redis_5ccb6f7a791bf3490357b00a898885759d98bab0_2@pointer" {
"1000128" [label="(Call,luaL_argerror(L, 0, \"Too many arguments for MessagePack pack.\"))"];
"1000124" [label="(Call,lua_checkstack(L, nargs))"];
"1000109" [label="(Call,lua_gettop(L))"];
"1000104" [label="(MethodParameterIn,lua_State *L)"];
"1000114" [label="(Call,nargs == 0)"];
"1000107" [label="(Call,nargs = lua_gettop(L))"];
"1000127" [label="(Return,return luaL_argerror(L, 0, \"Too many arguments for MessagePack pack.\");)"];
"1000153" [label="(Call,mp_encode_lua_type(L,buf,0))"];
"1000115" [label="(Identifier,nargs)"];
"1000125" [label="(Identifier,L)"];
"1000130" [label="(Literal,0)"];
"1000107" [label="(Call,nargs = lua_gettop(L))"];
"1000114" [label="(Call,nargs == 0)"];
"1000131" [label="(Literal,\"Too many arguments for MessagePack pack.\")"];
"1000123" [label="(Call,!lua_checkstack(L, nargs))"];
"1000110" [label="(Identifier,L)"];
"1000150" [label="(Call,lua_pushvalue(L, i))"];
"1000119" [label="(Identifier,L)"];
"1000124" [label="(Call,lua_checkstack(L, nargs))"];
"1000105" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,lua_State *L)"];
"1000129" [label="(Identifier,L)"];
"1000182" [label="(Call,lua_concat(L, nargs))"];
"1000118" [label="(Call,luaL_argerror(L, 0, \"MessagePack pack needs input.\"))"];
"1000179" [label="(Call,mp_buf_free(L, buf))"];
"1000134" [label="(Call,mp_buf_new(L))"];
"1000157" [label="(Call,lua_pushlstring(L,(char*)buf->b,buf->len))"];
"1000140" [label="(Call,i <= nargs)"];
"1000109" [label="(Call,lua_gettop(L))"];
"1000128" [label="(Call,luaL_argerror(L, 0, \"Too many arguments for MessagePack pack.\"))"];
"1000113" [label="(ControlStructure,if (nargs == 0))"];
"1000116" [label="(Literal,0)"];
"1000127" [label="(Return,return luaL_argerror(L, 0, \"Too many arguments for MessagePack pack.\");)"];
"1000126" [label="(Identifier,nargs)"];
"1000146" [label="(Call,luaL_checkstack(L, 1, \"in function mp_check\"))"];
"1000108" [label="(Identifier,nargs)"];
"1000187" [label="(MethodReturn,int)"];
"1000122" [label="(ControlStructure,if (!lua_checkstack(L, nargs)))"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000131"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000130" -> "1000128"  [label="AST: "];
"1000131" -> "1000128"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000187"  [label="DDG: "];
"1000128" -> "1000187"  [label="DDG: "];
"1000128" -> "1000127"  [label="DDG: "];
"1000124" -> "1000128"  [label="DDG: "];
"1000104" -> "1000128"  [label="DDG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000126"  [label="CFG: "];
"1000125" -> "1000124"  [label="AST: "];
"1000126" -> "1000124"  [label="AST: "];
"1000123" -> "1000124"  [label="CFG: "];
"1000124" -> "1000187"  [label="DDG: "];
"1000124" -> "1000123"  [label="DDG: "];
"1000124" -> "1000123"  [label="DDG: "];
"1000109" -> "1000124"  [label="DDG: "];
"1000104" -> "1000124"  [label="DDG: "];
"1000114" -> "1000124"  [label="DDG: "];
"1000124" -> "1000134"  [label="DDG: "];
"1000124" -> "1000140"  [label="DDG: "];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000110"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000109" -> "1000107"  [label="DDG: "];
"1000104" -> "1000109"  [label="DDG: "];
"1000109" -> "1000118"  [label="DDG: "];
"1000104" -> "1000103"  [label="AST: "];
"1000104" -> "1000187"  [label="DDG: "];
"1000104" -> "1000118"  [label="DDG: "];
"1000104" -> "1000134"  [label="DDG: "];
"1000104" -> "1000146"  [label="DDG: "];
"1000104" -> "1000150"  [label="DDG: "];
"1000104" -> "1000153"  [label="DDG: "];
"1000104" -> "1000157"  [label="DDG: "];
"1000104" -> "1000179"  [label="DDG: "];
"1000104" -> "1000182"  [label="DDG: "];
"1000114" -> "1000113"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000119" -> "1000114"  [label="CFG: "];
"1000125" -> "1000114"  [label="CFG: "];
"1000114" -> "1000187"  [label="DDG: "];
"1000114" -> "1000187"  [label="DDG: "];
"1000107" -> "1000114"  [label="DDG: "];
"1000107" -> "1000105"  [label="AST: "];
"1000108" -> "1000107"  [label="AST: "];
"1000115" -> "1000107"  [label="CFG: "];
"1000107" -> "1000187"  [label="DDG: "];
"1000127" -> "1000122"  [label="AST: "];
"1000187" -> "1000127"  [label="CFG: "];
"1000127" -> "1000187"  [label="DDG: "];
}
