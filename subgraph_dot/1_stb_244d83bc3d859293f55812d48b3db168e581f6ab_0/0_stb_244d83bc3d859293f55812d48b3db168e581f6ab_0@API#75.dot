digraph "0_stb_244d83bc3d859293f55812d48b3db168e581f6ab_0@API" {
"1003278" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003281" [label="(Call,f->blocksize_1/2)"];
"1003221" [label="(Call,f->blocksize_1/2)"];
"1003202" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1000289" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1000293" [label="(Call,1 << log1)"];
"1000277" [label="(Call,log1 = x >> 4)"];
"1000279" [label="(Call,x >> 4)"];
"1000274" [label="(Call,x & 15)"];
"1000265" [label="(Call,x = get8(f))"];
"1000267" [label="(Call,get8(f))"];
"1000263" [label="(Call,get32(f))"];
"1000261" [label="(Call,get32(f))"];
"1000259" [label="(Call,get32(f))"];
"1000248" [label="(Call,get32(f))"];
"1000223" [label="(Call,get8(f))"];
"1000212" [label="(Call,get32(f))"];
"1000194" [label="(Call,getn(f, header, 6))"];
"1000185" [label="(Call,get8(f))"];
"1000126" [label="(Call,start_page(f))"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1003276" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003200" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003198" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003192" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003241" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003250" [label="(Call,f->previous_window[i] == NULL)"];
"1003249" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003257" [label="(Call,f->finalY[i] == NULL)"];
"1003287" [label="(Call,f->floor_buffers[i] == NULL)"];
"1003216" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003214" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003208" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003234" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003232" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003226" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003265" [label="(Call,error(f, VORBIS_outofmem))"];
"1003264" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003274" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003268" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003295" [label="(Call,error(f, VORBIS_outofmem))"];
"1003294" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003300" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003299" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003310" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003309" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003327" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003375" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003373" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003453" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003458" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003486" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003487" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003491" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1003504" [label="(Call,error(f, VORBIS_outofmem))"];
"1003503" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003511" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1003507" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003318" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1002842" [label="(Call,get_bits(f,8))"];
"1003288" [label="(Call,f->floor_buffers[i])"];
"1000195" [label="(Identifier,f)"];
"1002288" [label="(Call,error(f, VORBIS_outofmem))"];
"1003294" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003465" [label="(Identifier,f)"];
"1001151" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1000435" [label="(Call,get_bits(f,8))"];
"1003318" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1000981" [label="(Call,error(f, VORBIS_outofmem))"];
"1002811" [label="(Call,get_bits(f,4))"];
"1001067" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1000268" [label="(Identifier,f)"];
"1000180" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000751" [label="(Call,get_bits(f, 5))"];
"1003249" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1000248" [label="(Call,get32(f))"];
"1003504" [label="(Call,error(f, VORBIS_outofmem))"];
"1003173" [label="(Call,flush_packet(f))"];
"1000546" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002724" [label="(Call,error(f, VORBIS_outofmem))"];
"1002983" [label="(Call,get_bits(f, 4))"];
"1003333" [label="(Call,f->blocksize_1)"];
"1000427" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003217" [label="(Identifier,f)"];
"1000463" [label="(Call,error(f, VORBIS_outofmem))"];
"1002028" [label="(Call,get_bits(f,8))"];
"1003382" [label="(Literal,1)"];
"1000279" [label="(Call,x >> 4)"];
"1001001" [label="(Call,error(f, VORBIS_outofmem))"];
"1003310" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1002764" [label="(Call,get_bits(f,16))"];
"1000126" [label="(Call,start_page(f))"];
"1001297" [label="(Call,error(f, VORBIS_outofmem))"];
"1002388" [label="(Call,get_bits(f,6))"];
"1003373" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1000216" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003514" [label="(Identifier,TRUE)"];
"1000148" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000944" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1003324" [label="(Call,f->blocksize_0)"];
"1003089" [label="(Call,get_bits(f, 6))"];
"1002396" [label="(Call,get_bits(f,8))"];
"1003458" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1000652" [label="(Call,error(f, VORBIS_outofmem))"];
"1000273" [label="(Identifier,log0)"];
"1003506" [label="(Identifier,VORBIS_outofmem)"];
"1000370" [label="(Call,start_packet(f))"];
"1001053" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000338" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003191" [label="(Block,)"];
"1000822" [label="(Call,error(f, VORBIS_outofmem))"];
"1001282" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1003202" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1003227" [label="(Call,f->finalY[i])"];
"1003222" [label="(Call,f->blocksize_1)"];
"1003295" [label="(Call,error(f, VORBIS_outofmem))"];
"1000277" [label="(Call,log1 = x >> 4)"];
"1002000" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001853" [label="(Call,get_bits(f,4))"];
"1003380" [label="(Call,sizeof(float))"];
"1000380" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1000629" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1003511" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1001757" [label="(Call,error(f, VORBIS_outofmem))"];
"1000420" [label="(Call,get8_packet(f))"];
"1001404" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001317" [label="(Call,get_bits(f, c->value_bits))"];
"1000184" [label="(Call,get8(f) != VORBIS_packet_id)"];
"1000264" [label="(Identifier,f)"];
"1003044" [label="(Call,get_bits(f,8))"];
"1002528" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001691" [label="(Call,CHECK(f))"];
"1001184" [label="(Call,get_bits(f, 4))"];
"1001226" [label="(Call,get_bits(f, 4))"];
"1003455" [label="(Call,f->temp_memory_required)"];
"1000643" [label="(Call,setup_malloc(f, c->entries))"];
"1001234" [label="(Call,get_bits(f,1))"];
"1000138" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000185" [label="(Call,get8(f))"];
"1000211" [label="(Call,get32(f) != 0)"];
"1002637" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1001560" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1000895" [label="(Call,CHECK(f))"];
"1002053" [label="(Call,get_bits(f,2))"];
"1003209" [label="(Call,f->previous_window[i])"];
"1000310" [label="(Call,log1 < 6)"];
"1002269" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1003234" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1000927" [label="(Call,error(f, VORBIS_outofmem))"];
"1001591" [label="(Call,CHECK(f))"];
"1003387" [label="(Identifier,max_part_read)"];
"1000445" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000704" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003117" [label="(Call,get_bits(f,1))"];
"1001838" [label="(Call,get_bits(f,6))"];
"1002706" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1000189" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003491" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1001427" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1000204" [label="(Call,vorbis_validate(header))"];
"1003236" [label="(Call,sizeof(int16) * longest_floorlist)"];
"1001381" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1002371" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000196" [label="(Identifier,header)"];
"1001874" [label="(Call,get_bits(f,8))"];
"1003452" [label="(ControlStructure,if (imdct_mem > f->temp_memory_required))"];
"1000219" [label="(Call,f->channels = get8(f))"];
"1000194" [label="(Call,getn(f, header, 6))"];
"1001739" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1003067" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000263" [label="(Call,get32(f))"];
"1001439" [label="(Call,error(f, VORBIS_outofmem))"];
"1003081" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000988" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1003296" [label="(Identifier,f)"];
"1003053" [label="(Call,get_bits(f,8))"];
"1003208" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003271" [label="(Identifier,f)"];
"1003286" [label="(ControlStructure,if (f->floor_buffers[i] == NULL))"];
"1002718" [label="(Call,f->mapping == NULL)"];
"1000262" [label="(Identifier,f)"];
"1002345" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001048" [label="(Call,setup_temp_free(f, values, 0))"];
"1000275" [label="(Identifier,x)"];
"1003309" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1002408" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003290" [label="(Identifier,f)"];
"1000551" [label="(Call,get_bits(f, 8))"];
"1003319" [label="(Call,f->blocksize[0])"];
"1003221" [label="(Call,f->blocksize_1/2)"];
"1003211" [label="(Identifier,f)"];
"1003374" [label="(Identifier,imdct_mem)"];
"1003245" [label="(Identifier,f)"];
"1000508" [label="(Call,CHECK(f))"];
"1001087" [label="(Call,error(f, VORBIS_outofmem))"];
"1002434" [label="(Call,get_bits(f,1))"];
"1003158" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002451" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1002999" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000359" [label="(Call,skip(f, len))"];
"1000168" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000375" [label="(Call,IS_PUSH_MODE(f))"];
"1002061" [label="(Call,get_bits(f,4))"];
"1000533" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003241" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003308" [label="(ControlStructure,if (!init_blocksize(f, 1, f->blocksize_1)))"];
"1000108" [label="(Block,)"];
"1001141" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1003251" [label="(Call,f->previous_window[i])"];
"1003297" [label="(Identifier,VORBIS_outofmem)"];
"1003248" [label="(Identifier,NULL)"];
"1003274" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003485" [label="(ControlStructure,if (f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset))"];
"1001721" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003340" [label="(Identifier,integer_divide_table)"];
"1000343" [label="(Call,start_page(f))"];
"1003124" [label="(Call,get_bits(f,16))"];
"1000282" [label="(Call,f->blocksize_0 = 1 << log0)"];
"1003276" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1001713" [label="(Call,get_bits(f, 16))"];
"1003267" [label="(Identifier,VORBIS_outofmem)"];
"1002799" [label="(Call,error(f, VORBIS_outofmem))"];
"1002939" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000266" [label="(Identifier,x)"];
"1000214" [label="(Literal,0)"];
"1003240" [label="(ControlStructure,if (f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL))"];
"1003375" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003193" [label="(Call,f->channel_buffers[i])"];
"1002439" [label="(Call,get_bits(f,5))"];
"1003515" [label="(MethodReturn,static int)"];
"1000330" [label="(Call,get8(f))"];
"1003300" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1001778" [label="(Call,get_bits(f, 16))"];
"1003447" [label="(Call,f->temp_memory_required = classify_mem)"];
"1001618" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1001729" [label="(Call,get_bits(f, 6))"];
"1002379" [label="(Call,get_bits(f,24))"];
"1001970" [label="(Call,get_bits(f, 2))"];
"1003488" [label="(Call,f->setup_offset)"];
"1001696" [label="(Call,get_bits(f, 6))"];
"1000572" [label="(Call,get_bits(f, 8))"];
"1000284" [label="(Identifier,f)"];
"1001178" [label="(Call,CHECK(f))"];
"1003509" [label="(Identifier,f)"];
"1003266" [label="(Identifier,f)"];
"1002045" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003250" [label="(Call,f->previous_window[i] == NULL)"];
"1001096" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1003243" [label="(Call,f->channel_buffers[i])"];
"1000400" [label="(Call,get8_packet(f))"];
"1000964" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1002549" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1003498" [label="(Call,(unsigned) f->temp_offset)"];
"1000276" [label="(Literal,15)"];
"1001165" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1002572" [label="(Call,error(f, VORBIS_outofmem))"];
"1003301" [label="(Identifier,f)"];
"1003216" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003281" [label="(Call,f->blocksize_1/2)"];
"1003277" [label="(Identifier,f)"];
"1001878" [label="(Call,error(f, VORBIS_feature_not_supported))"];
"1000212" [label="(Call,get32(f))"];
"1001630" [label="(Call,error(f, VORBIS_outofmem))"];
"1000224" [label="(Identifier,f)"];
"1003190" [label="(Identifier,i)"];
"1003257" [label="(Call,f->finalY[i] == NULL)"];
"1002259" [label="(Call,get_bits(f, 6))"];
"1003460" [label="(Identifier,f)"];
"1003327" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1002793" [label="(Call,m->chan == NULL)"];
"1002803" [label="(Call,get_bits(f,1))"];
"1000193" [label="(Call,!getn(f, header, 6))"];
"1003218" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1000909" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1003313" [label="(Call,f->blocksize_1)"];
"1000520" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003453" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1001678" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1001599" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003138" [label="(Call,get_bits(f,8))"];
"1001275" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003282" [label="(Call,f->blocksize_1)"];
"1000269" [label="(Block,)"];
"1001831" [label="(Call,get_bits(f,16))"];
"1001960" [label="(Call,get_bits(f, 3))"];
"1003330" [label="(Identifier,f)"];
"1002359" [label="(Call,get_bits(f, 24))"];
"1003229" [label="(Identifier,f)"];
"1000295" [label="(Identifier,log1)"];
"1000278" [label="(Identifier,log1)"];
"1001904" [label="(Call,get_bits(f, 5))"];
"1000294" [label="(Literal,1)"];
"1003508" [label="(Call,f->first_audio_page_offset)"];
"1000274" [label="(Call,x & 15)"];
"1000325" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003459" [label="(Call,f->temp_memory_required)"];
"1003258" [label="(Call,f->finalY[i])"];
"1003317" [label="(Identifier,FALSE)"];
"1003285" [label="(Literal,2)"];
"1003214" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000197" [label="(Literal,6)"];
"1001210" [label="(Call,get_bits(f, 32))"];
"1003203" [label="(Call,sizeof(float))"];
"1000249" [label="(Identifier,f)"];
"1000244" [label="(Call,f->sample_rate = get32(f))"];
"1000272" [label="(Call,log0 = x & 15)"];
"1003198" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000241" [label="(Call,error(f, VORBIS_too_many_channels))"];
"1000223" [label="(Call,get8(f))"];
"1001572" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000349" [label="(Call,start_packet(f))"];
"1003035" [label="(Call,get_bits(f,8))"];
"1001194" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000810" [label="(Call,setup_malloc(f, c->entries))"];
"1003377" [label="(Call,f->blocksize_1)"];
"1000290" [label="(Call,f->blocksize_1)"];
"1000525" [label="(Call,get_bits(f, 8))"];
"1000299" [label="(Identifier,log0)"];
"1003303" [label="(Call,f->blocksize_0)"];
"1002470" [label="(Call,error(f, VORBIS_outofmem))"];
"1003232" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1000764" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000259" [label="(Call,get32(f))"];
"1001689" [label="(Call,CHECK(f))"];
"1003486" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1000199" [label="(Call,error(f, VORBIS_unexpected_eof))"];
"1000560" [label="(Call,get_bits(f, 8))"];
"1002833" [label="(Call,get_bits(f,1))"];
"1003263" [label="(Identifier,NULL)"];
"1000213" [label="(Identifier,f)"];
"1000127" [label="(Identifier,f)"];
"1001339" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002658" [label="(Call,error(f, VORBIS_outofmem))"];
"1002949" [label="(Call,get_bits(f,2))"];
"1003205" [label="(Call,f->blocksize_1)"];
"1001986" [label="(Call,get_bits(f, 8))"];
"1000666" [label="(Call,get_bits(f,5))"];
"1003371" [label="(Block,)"];
"1003256" [label="(Identifier,NULL)"];
"1000281" [label="(Literal,4)"];
"1003148" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003376" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003278" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003265" [label="(Call,error(f, VORBIS_outofmem))"];
"1000567" [label="(Call,get_bits(f, 8))"];
"1000260" [label="(Identifier,f)"];
"1000280" [label="(Identifier,x)"];
"1003512" [label="(Identifier,f)"];
"1003311" [label="(Identifier,f)"];
"1000618" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000256" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001925" [label="(Call,get_bits(f, 4))"];
"1003268" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1002696" [label="(Call,get_bits(f,6))"];
"1000955" [label="(Call,error(f, VORBIS_outofmem))"];
"1003328" [label="(Call,f->blocksize[1])"];
"1003235" [label="(Identifier,f)"];
"1000207" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003462" [label="(Identifier,imdct_mem)"];
"1002953" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000289" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1003454" [label="(Identifier,imdct_mem)"];
"1003264" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003131" [label="(Call,get_bits(f,16))"];
"1003192" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1002919" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001327" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1000512" [label="(Call,get_bits(f, 8))"];
"1003302" [label="(Literal,0)"];
"1000357" [label="(Call,next_segment(f))"];
"1001790" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003487" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003321" [label="(Identifier,f)"];
"1000538" [label="(Call,get_bits(f, 8))"];
"1000581" [label="(Call,get_bits(f, 8))"];
"1000267" [label="(Call,get8(f))"];
"1002866" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1000592" [label="(Call,get_bits(f,1))"];
"1003201" [label="(Identifier,f)"];
"1003298" [label="(ControlStructure,if (!init_blocksize(f, 0, f->blocksize_0)))"];
"1000688" [label="(Call,get_bits(f, ilog(limit)))"];
"1001218" [label="(Call,get_bits(f, 32))"];
"1003279" [label="(Call,sizeof(float))"];
"1000125" [label="(Call,!start_page(f))"];
"1002333" [label="(Call,get_bits(f, 16))"];
"1003253" [label="(Identifier,f)"];
"1000187" [label="(Identifier,VORBIS_packet_id)"];
"1000158" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000305" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003200" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003312" [label="(Literal,1)"];
"1003492" [label="(Call,sizeof(*f))"];
"1002781" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002129" [label="(Call,get_bits(f, g->rangebits))"];
"1003299" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1000261" [label="(Call,get32(f))"];
"1002882" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1001824" [label="(Call,get_bits(f,16))"];
"1002512" [label="(Call,get_bits(f, 8))"];
"1003225" [label="(Literal,2)"];
"1003507" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003242" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003269" [label="(Call,f->floor_buffers[i])"];
"1001845" [label="(Call,get_bits(f,8))"];
"1000186" [label="(Identifier,f)"];
"1000293" [label="(Call,1 << log1)"];
"1003495" [label="(Call,f->temp_memory_required)"];
"1000833" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1003287" [label="(Call,f->floor_buffers[i] == NULL)"];
"1000739" [label="(Call,get_bits(f,1))"];
"1001116" [label="(Call,error(f, VORBIS_outofmem))"];
"1003503" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002352" [label="(Call,get_bits(f, 24))"];
"1001817" [label="(Call,get_bits(f,8))"];
"1000317" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000231" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003505" [label="(Identifier,f)"];
"1003307" [label="(Identifier,FALSE)"];
"1000265" [label="(Call,x = get8(f))"];
"1003260" [label="(Identifier,f)"];
"1000404" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003226" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003170" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003293" [label="(Identifier,NULL)"];
"1000602" [label="(Call,get_bits(f,1))"];
"1002430" [label="(Call,get_bits(f,3))"];
"1002772" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002903" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003278" -> "1003276"  [label="AST: "];
"1003278" -> "1003281"  [label="CFG: "];
"1003279" -> "1003278"  [label="AST: "];
"1003281" -> "1003278"  [label="AST: "];
"1003276" -> "1003278"  [label="CFG: "];
"1003278" -> "1003515"  [label="DDG: f->blocksize_1/2"];
"1003278" -> "1003276"  [label="DDG: f->blocksize_1/2"];
"1003281" -> "1003278"  [label="DDG: f->blocksize_1"];
"1003281" -> "1003278"  [label="DDG: 2"];
"1003281" -> "1003285"  [label="CFG: "];
"1003282" -> "1003281"  [label="AST: "];
"1003285" -> "1003281"  [label="AST: "];
"1003281" -> "1003515"  [label="DDG: f->blocksize_1"];
"1003281" -> "1003202"  [label="DDG: f->blocksize_1"];
"1003221" -> "1003281"  [label="DDG: f->blocksize_1"];
"1003281" -> "1003310"  [label="DDG: f->blocksize_1"];
"1003221" -> "1003218"  [label="AST: "];
"1003221" -> "1003225"  [label="CFG: "];
"1003222" -> "1003221"  [label="AST: "];
"1003225" -> "1003221"  [label="AST: "];
"1003218" -> "1003221"  [label="CFG: "];
"1003221" -> "1003515"  [label="DDG: f->blocksize_1"];
"1003221" -> "1003218"  [label="DDG: f->blocksize_1"];
"1003221" -> "1003218"  [label="DDG: 2"];
"1003202" -> "1003221"  [label="DDG: f->blocksize_1"];
"1003202" -> "1003200"  [label="AST: "];
"1003202" -> "1003205"  [label="CFG: "];
"1003203" -> "1003202"  [label="AST: "];
"1003205" -> "1003202"  [label="AST: "];
"1003200" -> "1003202"  [label="CFG: "];
"1003202" -> "1003200"  [label="DDG: f->blocksize_1"];
"1000289" -> "1003202"  [label="DDG: f->blocksize_1"];
"1000289" -> "1000269"  [label="AST: "];
"1000289" -> "1000293"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000293" -> "1000289"  [label="AST: "];
"1000299" -> "1000289"  [label="CFG: "];
"1000289" -> "1003515"  [label="DDG: f->blocksize_1"];
"1000289" -> "1003515"  [label="DDG: 1 << log1"];
"1000293" -> "1000289"  [label="DDG: 1"];
"1000293" -> "1000289"  [label="DDG: log1"];
"1000289" -> "1003310"  [label="DDG: f->blocksize_1"];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000293" -> "1003515"  [label="DDG: log1"];
"1000277" -> "1000293"  [label="DDG: log1"];
"1000293" -> "1000310"  [label="DDG: log1"];
"1000277" -> "1000269"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000284" -> "1000277"  [label="CFG: "];
"1000277" -> "1003515"  [label="DDG: x >> 4"];
"1000279" -> "1000277"  [label="DDG: x"];
"1000279" -> "1000277"  [label="DDG: 4"];
"1000279" -> "1000281"  [label="CFG: "];
"1000280" -> "1000279"  [label="AST: "];
"1000281" -> "1000279"  [label="AST: "];
"1000279" -> "1003515"  [label="DDG: x"];
"1000274" -> "1000279"  [label="DDG: x"];
"1000274" -> "1000272"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000276" -> "1000274"  [label="AST: "];
"1000272" -> "1000274"  [label="CFG: "];
"1000274" -> "1000272"  [label="DDG: x"];
"1000274" -> "1000272"  [label="DDG: 15"];
"1000265" -> "1000274"  [label="DDG: x"];
"1000265" -> "1000108"  [label="AST: "];
"1000265" -> "1000267"  [label="CFG: "];
"1000266" -> "1000265"  [label="AST: "];
"1000267" -> "1000265"  [label="AST: "];
"1000273" -> "1000265"  [label="CFG: "];
"1000265" -> "1003515"  [label="DDG: get8(f)"];
"1000267" -> "1000265"  [label="DDG: f"];
"1000267" -> "1000268"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000263" -> "1000267"  [label="DDG: f"];
"1000107" -> "1000267"  [label="DDG: f"];
"1000267" -> "1000305"  [label="DDG: f"];
"1000267" -> "1000317"  [label="DDG: f"];
"1000267" -> "1000325"  [label="DDG: f"];
"1000267" -> "1000330"  [label="DDG: f"];
"1000263" -> "1000108"  [label="AST: "];
"1000263" -> "1000264"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="CFG: "];
"1000263" -> "1003515"  [label="DDG: get32(f)"];
"1000261" -> "1000263"  [label="DDG: f"];
"1000107" -> "1000263"  [label="DDG: f"];
"1000261" -> "1000108"  [label="AST: "];
"1000261" -> "1000262"  [label="CFG: "];
"1000262" -> "1000261"  [label="AST: "];
"1000264" -> "1000261"  [label="CFG: "];
"1000259" -> "1000261"  [label="DDG: f"];
"1000107" -> "1000261"  [label="DDG: f"];
"1000259" -> "1000108"  [label="AST: "];
"1000259" -> "1000260"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="CFG: "];
"1000248" -> "1000259"  [label="DDG: f"];
"1000107" -> "1000259"  [label="DDG: f"];
"1000248" -> "1000244"  [label="AST: "];
"1000248" -> "1000249"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000244" -> "1000248"  [label="CFG: "];
"1000248" -> "1000244"  [label="DDG: f"];
"1000223" -> "1000248"  [label="DDG: f"];
"1000107" -> "1000248"  [label="DDG: f"];
"1000248" -> "1000256"  [label="DDG: f"];
"1000223" -> "1000219"  [label="AST: "];
"1000223" -> "1000224"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000219" -> "1000223"  [label="CFG: "];
"1000223" -> "1000219"  [label="DDG: f"];
"1000212" -> "1000223"  [label="DDG: f"];
"1000107" -> "1000223"  [label="DDG: f"];
"1000223" -> "1000231"  [label="DDG: f"];
"1000223" -> "1000241"  [label="DDG: f"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="CFG: "];
"1000212" -> "1000211"  [label="DDG: f"];
"1000194" -> "1000212"  [label="DDG: f"];
"1000107" -> "1000212"  [label="DDG: f"];
"1000212" -> "1000216"  [label="DDG: f"];
"1000194" -> "1000193"  [label="AST: "];
"1000194" -> "1000197"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000197" -> "1000194"  [label="AST: "];
"1000193" -> "1000194"  [label="CFG: "];
"1000194" -> "1003515"  [label="DDG: header"];
"1000194" -> "1000193"  [label="DDG: f"];
"1000194" -> "1000193"  [label="DDG: header"];
"1000194" -> "1000193"  [label="DDG: 6"];
"1000185" -> "1000194"  [label="DDG: f"];
"1000107" -> "1000194"  [label="DDG: f"];
"1000194" -> "1000199"  [label="DDG: f"];
"1000194" -> "1000204"  [label="DDG: header"];
"1000194" -> "1000207"  [label="DDG: f"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="CFG: "];
"1000185" -> "1000184"  [label="DDG: f"];
"1000126" -> "1000185"  [label="DDG: f"];
"1000107" -> "1000185"  [label="DDG: f"];
"1000185" -> "1000189"  [label="DDG: f"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1003515"  [label="DDG: f"];
"1000126" -> "1000125"  [label="DDG: f"];
"1000107" -> "1000126"  [label="DDG: f"];
"1000126" -> "1000138"  [label="DDG: f"];
"1000126" -> "1000148"  [label="DDG: f"];
"1000126" -> "1000158"  [label="DDG: f"];
"1000126" -> "1000168"  [label="DDG: f"];
"1000126" -> "1000180"  [label="DDG: f"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1003515"  [label="DDG: f"];
"1000107" -> "1000138"  [label="DDG: f"];
"1000107" -> "1000148"  [label="DDG: f"];
"1000107" -> "1000158"  [label="DDG: f"];
"1000107" -> "1000168"  [label="DDG: f"];
"1000107" -> "1000180"  [label="DDG: f"];
"1000107" -> "1000189"  [label="DDG: f"];
"1000107" -> "1000199"  [label="DDG: f"];
"1000107" -> "1000207"  [label="DDG: f"];
"1000107" -> "1000216"  [label="DDG: f"];
"1000107" -> "1000231"  [label="DDG: f"];
"1000107" -> "1000241"  [label="DDG: f"];
"1000107" -> "1000256"  [label="DDG: f"];
"1000107" -> "1000305"  [label="DDG: f"];
"1000107" -> "1000317"  [label="DDG: f"];
"1000107" -> "1000325"  [label="DDG: f"];
"1000107" -> "1000330"  [label="DDG: f"];
"1000107" -> "1000338"  [label="DDG: f"];
"1000107" -> "1000343"  [label="DDG: f"];
"1000107" -> "1000349"  [label="DDG: f"];
"1000107" -> "1000357"  [label="DDG: f"];
"1000107" -> "1000359"  [label="DDG: f"];
"1000107" -> "1000370"  [label="DDG: f"];
"1000107" -> "1000375"  [label="DDG: f"];
"1000107" -> "1000380"  [label="DDG: f"];
"1000107" -> "1000400"  [label="DDG: f"];
"1000107" -> "1000404"  [label="DDG: f"];
"1000107" -> "1000420"  [label="DDG: f"];
"1000107" -> "1000427"  [label="DDG: f"];
"1000107" -> "1000435"  [label="DDG: f"];
"1000107" -> "1000445"  [label="DDG: f"];
"1000107" -> "1000463"  [label="DDG: f"];
"1000107" -> "1000508"  [label="DDG: f"];
"1000107" -> "1000512"  [label="DDG: f"];
"1000107" -> "1000520"  [label="DDG: f"];
"1000107" -> "1000525"  [label="DDG: f"];
"1000107" -> "1000533"  [label="DDG: f"];
"1000107" -> "1000538"  [label="DDG: f"];
"1000107" -> "1000546"  [label="DDG: f"];
"1000107" -> "1000551"  [label="DDG: f"];
"1000107" -> "1000560"  [label="DDG: f"];
"1000107" -> "1000567"  [label="DDG: f"];
"1000107" -> "1000572"  [label="DDG: f"];
"1000107" -> "1000581"  [label="DDG: f"];
"1000107" -> "1000592"  [label="DDG: f"];
"1000107" -> "1000602"  [label="DDG: f"];
"1000107" -> "1000618"  [label="DDG: f"];
"1000107" -> "1000629"  [label="DDG: f"];
"1000107" -> "1000643"  [label="DDG: f"];
"1000107" -> "1000652"  [label="DDG: f"];
"1000107" -> "1000666"  [label="DDG: f"];
"1000107" -> "1000688"  [label="DDG: f"];
"1000107" -> "1000704"  [label="DDG: f"];
"1000107" -> "1000739"  [label="DDG: f"];
"1000107" -> "1000751"  [label="DDG: f"];
"1000107" -> "1000764"  [label="DDG: f"];
"1000107" -> "1000810"  [label="DDG: f"];
"1000107" -> "1000822"  [label="DDG: f"];
"1000107" -> "1000833"  [label="DDG: f"];
"1000107" -> "1000895"  [label="DDG: f"];
"1000107" -> "1000909"  [label="DDG: f"];
"1000107" -> "1000927"  [label="DDG: f"];
"1000107" -> "1000944"  [label="DDG: f"];
"1000107" -> "1000955"  [label="DDG: f"];
"1000107" -> "1000964"  [label="DDG: f"];
"1000107" -> "1000981"  [label="DDG: f"];
"1000107" -> "1000988"  [label="DDG: f"];
"1000107" -> "1001001"  [label="DDG: f"];
"1000107" -> "1001048"  [label="DDG: f"];
"1000107" -> "1001053"  [label="DDG: f"];
"1000107" -> "1001067"  [label="DDG: f"];
"1000107" -> "1001087"  [label="DDG: f"];
"1000107" -> "1001096"  [label="DDG: f"];
"1000107" -> "1001116"  [label="DDG: f"];
"1000107" -> "1001141"  [label="DDG: f"];
"1000107" -> "1001151"  [label="DDG: f"];
"1000107" -> "1001165"  [label="DDG: f"];
"1000107" -> "1001178"  [label="DDG: f"];
"1000107" -> "1001184"  [label="DDG: f"];
"1000107" -> "1001194"  [label="DDG: f"];
"1000107" -> "1001210"  [label="DDG: f"];
"1000107" -> "1001218"  [label="DDG: f"];
"1000107" -> "1001226"  [label="DDG: f"];
"1000107" -> "1001234"  [label="DDG: f"];
"1000107" -> "1001275"  [label="DDG: f"];
"1000107" -> "1001282"  [label="DDG: f"];
"1000107" -> "1001297"  [label="DDG: f"];
"1000107" -> "1001317"  [label="DDG: f"];
"1000107" -> "1001327"  [label="DDG: f"];
"1000107" -> "1001339"  [label="DDG: f"];
"1000107" -> "1001381"  [label="DDG: f"];
"1000107" -> "1001404"  [label="DDG: f"];
"1000107" -> "1001427"  [label="DDG: f"];
"1000107" -> "1001439"  [label="DDG: f"];
"1000107" -> "1001560"  [label="DDG: f"];
"1000107" -> "1001572"  [label="DDG: f"];
"1000107" -> "1001591"  [label="DDG: f"];
"1000107" -> "1001599"  [label="DDG: f"];
"1000107" -> "1001618"  [label="DDG: f"];
"1000107" -> "1001630"  [label="DDG: f"];
"1000107" -> "1001678"  [label="DDG: f"];
"1000107" -> "1001689"  [label="DDG: f"];
"1000107" -> "1001691"  [label="DDG: f"];
"1000107" -> "1001696"  [label="DDG: f"];
"1000107" -> "1001713"  [label="DDG: f"];
"1000107" -> "1001721"  [label="DDG: f"];
"1000107" -> "1001729"  [label="DDG: f"];
"1000107" -> "1001739"  [label="DDG: f"];
"1000107" -> "1001757"  [label="DDG: f"];
"1000107" -> "1001778"  [label="DDG: f"];
"1000107" -> "1001790"  [label="DDG: f"];
"1000107" -> "1001817"  [label="DDG: f"];
"1000107" -> "1001824"  [label="DDG: f"];
"1000107" -> "1001831"  [label="DDG: f"];
"1000107" -> "1001838"  [label="DDG: f"];
"1000107" -> "1001845"  [label="DDG: f"];
"1000107" -> "1001853"  [label="DDG: f"];
"1000107" -> "1001874"  [label="DDG: f"];
"1000107" -> "1001878"  [label="DDG: f"];
"1000107" -> "1001904"  [label="DDG: f"];
"1000107" -> "1001925"  [label="DDG: f"];
"1000107" -> "1001960"  [label="DDG: f"];
"1000107" -> "1001970"  [label="DDG: f"];
"1000107" -> "1001986"  [label="DDG: f"];
"1000107" -> "1002000"  [label="DDG: f"];
"1000107" -> "1002028"  [label="DDG: f"];
"1000107" -> "1002045"  [label="DDG: f"];
"1000107" -> "1002053"  [label="DDG: f"];
"1000107" -> "1002061"  [label="DDG: f"];
"1000107" -> "1002129"  [label="DDG: f"];
"1000107" -> "1002259"  [label="DDG: f"];
"1000107" -> "1002269"  [label="DDG: f"];
"1000107" -> "1002288"  [label="DDG: f"];
"1000107" -> "1002333"  [label="DDG: f"];
"1000107" -> "1002345"  [label="DDG: f"];
"1000107" -> "1002352"  [label="DDG: f"];
"1000107" -> "1002359"  [label="DDG: f"];
"1000107" -> "1002371"  [label="DDG: f"];
"1000107" -> "1002379"  [label="DDG: f"];
"1000107" -> "1002388"  [label="DDG: f"];
"1000107" -> "1002396"  [label="DDG: f"];
"1000107" -> "1002408"  [label="DDG: f"];
"1000107" -> "1002430"  [label="DDG: f"];
"1000107" -> "1002434"  [label="DDG: f"];
"1000107" -> "1002439"  [label="DDG: f"];
"1000107" -> "1002451"  [label="DDG: f"];
"1000107" -> "1002470"  [label="DDG: f"];
"1000107" -> "1002512"  [label="DDG: f"];
"1000107" -> "1002528"  [label="DDG: f"];
"1000107" -> "1002549"  [label="DDG: f"];
"1000107" -> "1002572"  [label="DDG: f"];
"1000107" -> "1002637"  [label="DDG: f"];
"1000107" -> "1002658"  [label="DDG: f"];
"1000107" -> "1002696"  [label="DDG: f"];
"1000107" -> "1002706"  [label="DDG: f"];
"1000107" -> "1002724"  [label="DDG: f"];
"1000107" -> "1002764"  [label="DDG: f"];
"1000107" -> "1002772"  [label="DDG: f"];
"1000107" -> "1002781"  [label="DDG: f"];
"1000107" -> "1002799"  [label="DDG: f"];
"1000107" -> "1002803"  [label="DDG: f"];
"1000107" -> "1002811"  [label="DDG: f"];
"1000107" -> "1002833"  [label="DDG: f"];
"1000107" -> "1002842"  [label="DDG: f"];
"1000107" -> "1002866"  [label="DDG: f"];
"1000107" -> "1002882"  [label="DDG: f"];
"1000107" -> "1002903"  [label="DDG: f"];
"1000107" -> "1002919"  [label="DDG: f"];
"1000107" -> "1002939"  [label="DDG: f"];
"1000107" -> "1002949"  [label="DDG: f"];
"1000107" -> "1002953"  [label="DDG: f"];
"1000107" -> "1002983"  [label="DDG: f"];
"1000107" -> "1002999"  [label="DDG: f"];
"1000107" -> "1003035"  [label="DDG: f"];
"1000107" -> "1003044"  [label="DDG: f"];
"1000107" -> "1003053"  [label="DDG: f"];
"1000107" -> "1003067"  [label="DDG: f"];
"1000107" -> "1003081"  [label="DDG: f"];
"1000107" -> "1003089"  [label="DDG: f"];
"1000107" -> "1003117"  [label="DDG: f"];
"1000107" -> "1003124"  [label="DDG: f"];
"1000107" -> "1003131"  [label="DDG: f"];
"1000107" -> "1003138"  [label="DDG: f"];
"1000107" -> "1003148"  [label="DDG: f"];
"1000107" -> "1003158"  [label="DDG: f"];
"1000107" -> "1003170"  [label="DDG: f"];
"1000107" -> "1003173"  [label="DDG: f"];
"1000107" -> "1003200"  [label="DDG: f"];
"1000107" -> "1003216"  [label="DDG: f"];
"1000107" -> "1003234"  [label="DDG: f"];
"1000107" -> "1003265"  [label="DDG: f"];
"1000107" -> "1003276"  [label="DDG: f"];
"1000107" -> "1003295"  [label="DDG: f"];
"1000107" -> "1003300"  [label="DDG: f"];
"1000107" -> "1003310"  [label="DDG: f"];
"1000107" -> "1003504"  [label="DDG: f"];
"1000107" -> "1003511"  [label="DDG: f"];
"1003276" -> "1003274"  [label="AST: "];
"1003277" -> "1003276"  [label="AST: "];
"1003274" -> "1003276"  [label="CFG: "];
"1003276" -> "1003515"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003276" -> "1003200"  [label="DDG: f"];
"1003276" -> "1003274"  [label="DDG: f"];
"1003276" -> "1003274"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003234" -> "1003276"  [label="DDG: f"];
"1003276" -> "1003295"  [label="DDG: f"];
"1003276" -> "1003300"  [label="DDG: f"];
"1003200" -> "1003198"  [label="AST: "];
"1003201" -> "1003200"  [label="AST: "];
"1003198" -> "1003200"  [label="CFG: "];
"1003200" -> "1003515"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003200" -> "1003198"  [label="DDG: f"];
"1003200" -> "1003198"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003173" -> "1003200"  [label="DDG: f"];
"1003200" -> "1003216"  [label="DDG: f"];
"1003198" -> "1003192"  [label="AST: "];
"1003199" -> "1003198"  [label="AST: "];
"1003192" -> "1003198"  [label="CFG: "];
"1003198" -> "1003515"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003198" -> "1003192"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003192" -> "1003191"  [label="AST: "];
"1003193" -> "1003192"  [label="AST: "];
"1003211" -> "1003192"  [label="CFG: "];
"1003192" -> "1003515"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003192" -> "1003242"  [label="DDG: f->channel_buffers[i]"];
"1003242" -> "1003241"  [label="AST: "];
"1003242" -> "1003248"  [label="CFG: "];
"1003243" -> "1003242"  [label="AST: "];
"1003248" -> "1003242"  [label="AST: "];
"1003253" -> "1003242"  [label="CFG: "];
"1003241" -> "1003242"  [label="CFG: "];
"1003242" -> "1003515"  [label="DDG: f->channel_buffers[i]"];
"1003242" -> "1003515"  [label="DDG: NULL"];
"1003242" -> "1003241"  [label="DDG: f->channel_buffers[i]"];
"1003242" -> "1003241"  [label="DDG: NULL"];
"1003287" -> "1003242"  [label="DDG: NULL"];
"1002793" -> "1003242"  [label="DDG: NULL"];
"1002718" -> "1003242"  [label="DDG: NULL"];
"1003242" -> "1003250"  [label="DDG: NULL"];
"1003242" -> "1003287"  [label="DDG: NULL"];
"1003241" -> "1003240"  [label="AST: "];
"1003241" -> "1003249"  [label="CFG: "];
"1003249" -> "1003241"  [label="AST: "];
"1003266" -> "1003241"  [label="CFG: "];
"1003271" -> "1003241"  [label="CFG: "];
"1003241" -> "1003515"  [label="DDG: f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003241" -> "1003515"  [label="DDG: f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003241" -> "1003515"  [label="DDG: f->channel_buffers[i] == NULL"];
"1003249" -> "1003241"  [label="DDG: f->previous_window[i] == NULL"];
"1003249" -> "1003241"  [label="DDG: f->finalY[i] == NULL"];
"1003250" -> "1003249"  [label="AST: "];
"1003250" -> "1003256"  [label="CFG: "];
"1003251" -> "1003250"  [label="AST: "];
"1003256" -> "1003250"  [label="AST: "];
"1003260" -> "1003250"  [label="CFG: "];
"1003249" -> "1003250"  [label="CFG: "];
"1003250" -> "1003515"  [label="DDG: f->previous_window[i]"];
"1003250" -> "1003515"  [label="DDG: NULL"];
"1003250" -> "1003249"  [label="DDG: f->previous_window[i]"];
"1003250" -> "1003249"  [label="DDG: NULL"];
"1003208" -> "1003250"  [label="DDG: f->previous_window[i]"];
"1003250" -> "1003257"  [label="DDG: NULL"];
"1003250" -> "1003287"  [label="DDG: NULL"];
"1003249" -> "1003257"  [label="CFG: "];
"1003257" -> "1003249"  [label="AST: "];
"1003249" -> "1003515"  [label="DDG: f->previous_window[i] == NULL"];
"1003249" -> "1003515"  [label="DDG: f->finalY[i] == NULL"];
"1003257" -> "1003249"  [label="DDG: f->finalY[i]"];
"1003257" -> "1003249"  [label="DDG: NULL"];
"1003257" -> "1003263"  [label="CFG: "];
"1003258" -> "1003257"  [label="AST: "];
"1003263" -> "1003257"  [label="AST: "];
"1003257" -> "1003515"  [label="DDG: NULL"];
"1003257" -> "1003515"  [label="DDG: f->finalY[i]"];
"1003226" -> "1003257"  [label="DDG: f->finalY[i]"];
"1003257" -> "1003287"  [label="DDG: NULL"];
"1003287" -> "1003286"  [label="AST: "];
"1003287" -> "1003293"  [label="CFG: "];
"1003288" -> "1003287"  [label="AST: "];
"1003293" -> "1003287"  [label="AST: "];
"1003296" -> "1003287"  [label="CFG: "];
"1003190" -> "1003287"  [label="CFG: "];
"1003287" -> "1003515"  [label="DDG: f->floor_buffers[i]"];
"1003287" -> "1003515"  [label="DDG: NULL"];
"1003287" -> "1003515"  [label="DDG: f->floor_buffers[i] == NULL"];
"1003268" -> "1003287"  [label="DDG: f->floor_buffers[i]"];
"1003216" -> "1003214"  [label="AST: "];
"1003216" -> "1003218"  [label="CFG: "];
"1003217" -> "1003216"  [label="AST: "];
"1003218" -> "1003216"  [label="AST: "];
"1003214" -> "1003216"  [label="CFG: "];
"1003216" -> "1003515"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003216" -> "1003214"  [label="DDG: f"];
"1003216" -> "1003214"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003218" -> "1003216"  [label="DDG: f->blocksize_1/2"];
"1003216" -> "1003234"  [label="DDG: f"];
"1003214" -> "1003208"  [label="AST: "];
"1003215" -> "1003214"  [label="AST: "];
"1003208" -> "1003214"  [label="CFG: "];
"1003214" -> "1003515"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003214" -> "1003208"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003208" -> "1003191"  [label="AST: "];
"1003209" -> "1003208"  [label="AST: "];
"1003229" -> "1003208"  [label="CFG: "];
"1003208" -> "1003515"  [label="DDG: f->previous_window[i]"];
"1003208" -> "1003515"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003234" -> "1003232"  [label="AST: "];
"1003234" -> "1003236"  [label="CFG: "];
"1003235" -> "1003234"  [label="AST: "];
"1003236" -> "1003234"  [label="AST: "];
"1003232" -> "1003234"  [label="CFG: "];
"1003234" -> "1003515"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003234" -> "1003232"  [label="DDG: f"];
"1003234" -> "1003232"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003236" -> "1003234"  [label="DDG: longest_floorlist"];
"1003234" -> "1003265"  [label="DDG: f"];
"1003232" -> "1003226"  [label="AST: "];
"1003233" -> "1003232"  [label="AST: "];
"1003226" -> "1003232"  [label="CFG: "];
"1003232" -> "1003515"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003232" -> "1003226"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003226" -> "1003191"  [label="AST: "];
"1003227" -> "1003226"  [label="AST: "];
"1003245" -> "1003226"  [label="CFG: "];
"1003226" -> "1003515"  [label="DDG: f->finalY[i]"];
"1003226" -> "1003515"  [label="DDG: (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003265" -> "1003264"  [label="AST: "];
"1003265" -> "1003267"  [label="CFG: "];
"1003266" -> "1003265"  [label="AST: "];
"1003267" -> "1003265"  [label="AST: "];
"1003264" -> "1003265"  [label="CFG: "];
"1003265" -> "1003515"  [label="DDG: f"];
"1003265" -> "1003515"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003265" -> "1003515"  [label="DDG: VORBIS_outofmem"];
"1003265" -> "1003264"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003264" -> "1003240"  [label="AST: "];
"1003515" -> "1003264"  [label="CFG: "];
"1003264" -> "1003515"  [label="DDG: <RET>"];
"1003274" -> "1003268"  [label="AST: "];
"1003275" -> "1003274"  [label="AST: "];
"1003268" -> "1003274"  [label="CFG: "];
"1003274" -> "1003515"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003274" -> "1003268"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003268" -> "1003191"  [label="AST: "];
"1003269" -> "1003268"  [label="AST: "];
"1003290" -> "1003268"  [label="CFG: "];
"1003268" -> "1003515"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003295" -> "1003294"  [label="AST: "];
"1003295" -> "1003297"  [label="CFG: "];
"1003296" -> "1003295"  [label="AST: "];
"1003297" -> "1003295"  [label="AST: "];
"1003294" -> "1003295"  [label="CFG: "];
"1003295" -> "1003515"  [label="DDG: f"];
"1003295" -> "1003515"  [label="DDG: VORBIS_outofmem"];
"1003295" -> "1003515"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003295" -> "1003294"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003294" -> "1003286"  [label="AST: "];
"1003515" -> "1003294"  [label="CFG: "];
"1003294" -> "1003515"  [label="DDG: <RET>"];
"1003300" -> "1003299"  [label="AST: "];
"1003300" -> "1003303"  [label="CFG: "];
"1003301" -> "1003300"  [label="AST: "];
"1003302" -> "1003300"  [label="AST: "];
"1003303" -> "1003300"  [label="AST: "];
"1003299" -> "1003300"  [label="CFG: "];
"1003300" -> "1003515"  [label="DDG: f->blocksize_0"];
"1003300" -> "1003515"  [label="DDG: f"];
"1003300" -> "1003299"  [label="DDG: f"];
"1003300" -> "1003299"  [label="DDG: 0"];
"1003300" -> "1003299"  [label="DDG: f->blocksize_0"];
"1003173" -> "1003300"  [label="DDG: f"];
"1000282" -> "1003300"  [label="DDG: f->blocksize_0"];
"1003300" -> "1003310"  [label="DDG: f"];
"1003300" -> "1003318"  [label="DDG: f->blocksize_0"];
"1003299" -> "1003298"  [label="AST: "];
"1003307" -> "1003299"  [label="CFG: "];
"1003311" -> "1003299"  [label="CFG: "];
"1003299" -> "1003515"  [label="DDG: !init_blocksize(f, 0, f->blocksize_0)"];
"1003299" -> "1003515"  [label="DDG: init_blocksize(f, 0, f->blocksize_0)"];
"1003310" -> "1003309"  [label="AST: "];
"1003310" -> "1003313"  [label="CFG: "];
"1003311" -> "1003310"  [label="AST: "];
"1003312" -> "1003310"  [label="AST: "];
"1003313" -> "1003310"  [label="AST: "];
"1003309" -> "1003310"  [label="CFG: "];
"1003310" -> "1003515"  [label="DDG: f->blocksize_1"];
"1003310" -> "1003515"  [label="DDG: f"];
"1003310" -> "1003309"  [label="DDG: f"];
"1003310" -> "1003309"  [label="DDG: 1"];
"1003310" -> "1003309"  [label="DDG: f->blocksize_1"];
"1003310" -> "1003327"  [label="DDG: f->blocksize_1"];
"1003310" -> "1003376"  [label="DDG: f->blocksize_1"];
"1003310" -> "1003504"  [label="DDG: f"];
"1003310" -> "1003511"  [label="DDG: f"];
"1003309" -> "1003308"  [label="AST: "];
"1003317" -> "1003309"  [label="CFG: "];
"1003321" -> "1003309"  [label="CFG: "];
"1003309" -> "1003515"  [label="DDG: !init_blocksize(f, 1, f->blocksize_1)"];
"1003309" -> "1003515"  [label="DDG: init_blocksize(f, 1, f->blocksize_1)"];
"1003327" -> "1000108"  [label="AST: "];
"1003327" -> "1003333"  [label="CFG: "];
"1003328" -> "1003327"  [label="AST: "];
"1003333" -> "1003327"  [label="AST: "];
"1003340" -> "1003327"  [label="CFG: "];
"1003327" -> "1003515"  [label="DDG: f->blocksize[1]"];
"1003376" -> "1003375"  [label="AST: "];
"1003376" -> "1003380"  [label="CFG: "];
"1003377" -> "1003376"  [label="AST: "];
"1003380" -> "1003376"  [label="AST: "];
"1003382" -> "1003376"  [label="CFG: "];
"1003376" -> "1003515"  [label="DDG: f->blocksize_1"];
"1003376" -> "1003375"  [label="DDG: f->blocksize_1"];
"1003375" -> "1003373"  [label="AST: "];
"1003375" -> "1003382"  [label="CFG: "];
"1003382" -> "1003375"  [label="AST: "];
"1003373" -> "1003375"  [label="CFG: "];
"1003375" -> "1003515"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003375" -> "1003373"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003375" -> "1003373"  [label="DDG: 1"];
"1003373" -> "1003371"  [label="AST: "];
"1003374" -> "1003373"  [label="AST: "];
"1003387" -> "1003373"  [label="CFG: "];
"1003373" -> "1003515"  [label="DDG: f->blocksize_1 * sizeof(float) >> 1"];
"1003373" -> "1003453"  [label="DDG: imdct_mem"];
"1003453" -> "1003452"  [label="AST: "];
"1003453" -> "1003455"  [label="CFG: "];
"1003454" -> "1003453"  [label="AST: "];
"1003455" -> "1003453"  [label="AST: "];
"1003460" -> "1003453"  [label="CFG: "];
"1003465" -> "1003453"  [label="CFG: "];
"1003453" -> "1003515"  [label="DDG: imdct_mem > f->temp_memory_required"];
"1003453" -> "1003515"  [label="DDG: imdct_mem"];
"1003453" -> "1003515"  [label="DDG: f->temp_memory_required"];
"1003447" -> "1003453"  [label="DDG: f->temp_memory_required"];
"1003453" -> "1003458"  [label="DDG: imdct_mem"];
"1003453" -> "1003486"  [label="DDG: f->temp_memory_required"];
"1003453" -> "1003487"  [label="DDG: f->temp_memory_required"];
"1003453" -> "1003491"  [label="DDG: f->temp_memory_required"];
"1003458" -> "1003452"  [label="AST: "];
"1003458" -> "1003462"  [label="CFG: "];
"1003459" -> "1003458"  [label="AST: "];
"1003462" -> "1003458"  [label="AST: "];
"1003465" -> "1003458"  [label="CFG: "];
"1003458" -> "1003515"  [label="DDG: imdct_mem"];
"1003458" -> "1003515"  [label="DDG: f->temp_memory_required"];
"1003458" -> "1003486"  [label="DDG: f->temp_memory_required"];
"1003458" -> "1003487"  [label="DDG: f->temp_memory_required"];
"1003458" -> "1003491"  [label="DDG: f->temp_memory_required"];
"1003486" -> "1003485"  [label="AST: "];
"1003486" -> "1003498"  [label="CFG: "];
"1003487" -> "1003486"  [label="AST: "];
"1003498" -> "1003486"  [label="AST: "];
"1003505" -> "1003486"  [label="CFG: "];
"1003509" -> "1003486"  [label="CFG: "];
"1003486" -> "1003515"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required"];
"1003486" -> "1003515"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset"];
"1003486" -> "1003515"  [label="DDG: (unsigned) f->temp_offset"];
"1003498" -> "1003486"  [label="DDG: f->temp_offset"];
"1003487" -> "1003491"  [label="CFG: "];
"1003488" -> "1003487"  [label="AST: "];
"1003491" -> "1003487"  [label="AST: "];
"1003499" -> "1003487"  [label="CFG: "];
"1003487" -> "1003515"  [label="DDG: f->setup_offset"];
"1003487" -> "1003515"  [label="DDG: sizeof(*f) + f->temp_memory_required"];
"1003491" -> "1003495"  [label="CFG: "];
"1003492" -> "1003491"  [label="AST: "];
"1003495" -> "1003491"  [label="AST: "];
"1003491" -> "1003515"  [label="DDG: f->temp_memory_required"];
"1003504" -> "1003503"  [label="AST: "];
"1003504" -> "1003506"  [label="CFG: "];
"1003505" -> "1003504"  [label="AST: "];
"1003506" -> "1003504"  [label="AST: "];
"1003503" -> "1003504"  [label="CFG: "];
"1003504" -> "1003515"  [label="DDG: f"];
"1003504" -> "1003515"  [label="DDG: VORBIS_outofmem"];
"1003504" -> "1003515"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003504" -> "1003503"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003503" -> "1003485"  [label="AST: "];
"1003515" -> "1003503"  [label="CFG: "];
"1003503" -> "1003515"  [label="DDG: <RET>"];
"1003511" -> "1003507"  [label="AST: "];
"1003511" -> "1003512"  [label="CFG: "];
"1003512" -> "1003511"  [label="AST: "];
"1003507" -> "1003511"  [label="CFG: "];
"1003511" -> "1003515"  [label="DDG: f"];
"1003511" -> "1003507"  [label="DDG: f"];
"1003507" -> "1000108"  [label="AST: "];
"1003508" -> "1003507"  [label="AST: "];
"1003514" -> "1003507"  [label="CFG: "];
"1003507" -> "1003515"  [label="DDG: f->first_audio_page_offset"];
"1003507" -> "1003515"  [label="DDG: stb_vorbis_get_file_offset(f)"];
"1003318" -> "1000108"  [label="AST: "];
"1003318" -> "1003324"  [label="CFG: "];
"1003319" -> "1003318"  [label="AST: "];
"1003324" -> "1003318"  [label="AST: "];
"1003330" -> "1003318"  [label="CFG: "];
"1003318" -> "1003515"  [label="DDG: f->blocksize_0"];
"1003318" -> "1003515"  [label="DDG: f->blocksize[0]"];
}
