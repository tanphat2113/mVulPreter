digraph "1_savannah_beecf80a6deecbaf5d264d4f864451bde4fe98b8@API" {
"1000968" [label="(Call,field->reader( parser ))"];
"1000746" [label="(Call,cff_parse_num( parser, parser->stack ))"];
"1000968" [label="(Call,field->reader( parser ))"];
"1000755" [label="(Call,cff_parse_fixed( parser, parser->stack ))"];
"1000908" [label="(Call,cff_parse_num( parser, data++ ))"];
"1000764" [label="(Call,cff_parse_fixed_scaled( parser, parser->stack, 3 ))"];
"1000136" [label="(MethodParameterIn,CFF_Parser  parser)"];
"1000651" [label="(Call,parser->top - parser->stack)"];
"1000156" [label="(Call,parser->top    = parser->stack)"];
"1000981" [label="(Call,parser->top = parser->stack)"];
"1000218" [label="(Call,parser->top++)"];
"1000205" [label="(Call,parser->top - parser->stack)"];
"1000405" [label="(Call,parser->top++)"];
"1000392" [label="(Call,parser->top - parser->stack)"];
"1000910" [label="(Call,data++)"];
"1000874" [label="(Call,**  data = parser->stack)"];
"1000203" [label="(Call,(FT_UInt)( parser->top - parser->stack ))"];
"1000202" [label="(Call,(FT_UInt)( parser->top - parser->stack ) >= parser->stackSize)"];
"1000389" [label="(Call,(FT_UInt)( parser->top - parser->stack ) >= parser->stackSize)"];
"1000390" [label="(Call,(FT_UInt)( parser->top - parser->stack ))"];
"1000649" [label="(Call,(FT_UInt)\n                                             ( parser->top - parser->stack ))"];
"1000647" [label="(Call,num_args = (FT_UInt)\n                                             ( parser->top - parser->stack ))"];
"1000732" [label="(Call,num_args < 1)"];
"1000726" [label="(Call,field->kind != cff_kind_delta && num_args < 1)"];
"1000880" [label="(Call,num_args > field->array_max)"];
"1000885" [label="(Call,num_args = field->array_max)"];
"1000895" [label="(Call,(FT_Byte)num_args)"];
"1000892" [label="(Call,*qcount = (FT_Byte)num_args)"];
"1000902" [label="(Call,num_args > 0)"];
"1000960" [label="(Call,num_args--)"];
"1000753" [label="(Call,val = cff_parse_fixed( parser, parser->stack ))"];
"1000804" [label="(Call,*(FT_Long*)q = val)"];
"1000841" [label="(Call,(double)val)"];
"1000840" [label="(Call,(double)val / 65536)"];
"1000851" [label="(Call,(double)val)"];
"1000850" [label="(Call,(double)val / 65536 / 1000)"];
"1000906" [label="(Call,val += cff_parse_num( parser, data++ ))"];
"1000945" [label="(Call,*(FT_Long*)q = val)"];
"1000762" [label="(Call,val = cff_parse_fixed_scaled( parser, parser->stack, 3 ))"];
"1000966" [label="(Call,error = field->reader( parser ))"];
"1000991" [label="(Return,return error;)"];
"1000744" [label="(Call,val = cff_parse_num( parser, parser->stack ))"];
"1000841" [label="(Call,(double)val)"];
"1000764" [label="(Call,cff_parse_fixed_scaled( parser, parser->stack, 3 ))"];
"1000895" [label="(Call,(FT_Byte)num_args)"];
"1000874" [label="(Call,**  data = parser->stack)"];
"1000762" [label="(Call,val = cff_parse_fixed_scaled( parser, parser->stack, 3 ))"];
"1000769" [label="(Literal,3)"];
"1000809" [label="(Identifier,val)"];
"1000763" [label="(Identifier,val)"];
"1000971" [label="(Identifier,error)"];
"1000756" [label="(Identifier,parser)"];
"1000851" [label="(Call,(double)val)"];
"1000734" [label="(Literal,1)"];
"1000404" [label="(Call,*parser->top++)"];
"1000994" [label="(Call,error = FT_THROW( Invalid_Argument ))"];
"1000904" [label="(Literal,0)"];
"1000966" [label="(Call,error = field->reader( parser ))"];
"1000748" [label="(Call,parser->stack)"];
"1000963" [label="(Literal,\"]\n\")"];
"1000905" [label="(Block,)"];
"1000212" [label="(Call,parser->stackSize)"];
"1001000" [label="(Call,error = FT_THROW( Invalid_Argument ))"];
"1000886" [label="(Identifier,num_args)"];
"1000157" [label="(Call,parser->top)"];
"1000940" [label="(Call,(FT_Int)val)"];
"1000875" [label="(Identifier,data)"];
"1000760" [label="(ControlStructure,goto Store_Number;)"];
"1000902" [label="(Call,num_args > 0)"];
"1000804" [label="(Call,*(FT_Long*)q = val)"];
"1000882" [label="(Call,field->array_max)"];
"1000219" [label="(Call,parser->top)"];
"1000837" [label="(Call,FT_TRACE4(( \" %f\n\", (double)val / 65536 )))"];
"1000946" [label="(Call,*(FT_Long*)q)"];
"1000885" [label="(Call,num_args = field->array_max)"];
"1000860" [label="(Block,)"];
"1000755" [label="(Call,cff_parse_fixed( parser, parser->stack ))"];
"1001011" [label="(MethodReturn,RET)"];
"1000393" [label="(Call,parser->top)"];
"1000753" [label="(Call,val = cff_parse_fixed( parser, parser->stack ))"];
"1000757" [label="(Call,parser->stack)"];
"1000992" [label="(Identifier,error)"];
"1000205" [label="(Call,parser->top - parser->stack)"];
"1000649" [label="(Call,(FT_UInt)\n                                             ( parser->top - parser->stack ))"];
"1000407" [label="(Identifier,parser)"];
"1000790" [label="(Call,(FT_Short)val)"];
"1000766" [label="(Call,parser->stack)"];
"1000805" [label="(Call,*(FT_Long*)q)"];
"1000203" [label="(Call,(FT_UInt)( parser->top - parser->stack ))"];
"1000732" [label="(Call,num_args < 1)"];
"1001006" [label="(Call,error = FT_THROW( Invalid_Argument ))"];
"1000981" [label="(Call,parser->top = parser->stack)"];
"1000982" [label="(Call,parser->top)"];
"1000406" [label="(Call,parser->top)"];
"1000202" [label="(Call,(FT_UInt)( parser->top - parser->stack ) >= parser->stackSize)"];
"1000644" [label="(Block,)"];
"1000901" [label="(ControlStructure,while ( num_args > 0 ))"];
"1000770" [label="(JumpTarget,Store_Number:)"];
"1000961" [label="(Identifier,num_args)"];
"1000727" [label="(Call,field->kind != cff_kind_delta)"];
"1000945" [label="(Call,*(FT_Long*)q = val)"];
"1000910" [label="(Call,data++)"];
"1000392" [label="(Call,parser->top - parser->stack)"];
"1000389" [label="(Call,(FT_UInt)( parser->top - parser->stack ) >= parser->stackSize)"];
"1000914" [label="(Identifier,field)"];
"1000879" [label="(ControlStructure,if ( num_args > field->array_max ))"];
"1000139" [label="(Block,)"];
"1000843" [label="(Identifier,val)"];
"1000880" [label="(Call,num_args > field->array_max)"];
"1000898" [label="(Call,val = 0)"];
"1000881" [label="(Identifier,num_args)"];
"1000847" [label="(Call,FT_TRACE4(( \" %f\n\", (double)val / 65536 / 1000 )))"];
"1000662" [label="(Identifier,parser)"];
"1000853" [label="(Identifier,val)"];
"1000775" [label="(Block,)"];
"1000781" [label="(Call,(FT_Byte)val)"];
"1000891" [label="(Literal,\" [\")"];
"1000647" [label="(Call,num_args = (FT_UInt)\n                                             ( parser->top - parser->stack ))"];
"1000213" [label="(Identifier,parser)"];
"1000751" [label="(ControlStructure,goto Store_Number;)"];
"1000907" [label="(Identifier,val)"];
"1000897" [label="(Identifier,num_args)"];
"1000906" [label="(Call,val += cff_parse_num( parser, data++ ))"];
"1000967" [label="(Identifier,error)"];
"1000745" [label="(Identifier,val)"];
"1000991" [label="(Return,return error;)"];
"1000400" [label="(Identifier,parser)"];
"1000215" [label="(ControlStructure,goto Stack_Overflow;)"];
"1000909" [label="(Identifier,parser)"];
"1000651" [label="(Call,parser->top - parser->stack)"];
"1000975" [label="(ControlStructure,if ( field->kind != cff_kind_blend ))"];
"1000652" [label="(Call,parser->top)"];
"1000899" [label="(Identifier,val)"];
"1000968" [label="(Call,field->reader( parser ))"];
"1000217" [label="(Call,*parser->top++)"];
"1000876" [label="(Call,parser->stack)"];
"1000893" [label="(Call,*qcount)"];
"1000220" [label="(Identifier,parser)"];
"1000201" [label="(ControlStructure,if ( (FT_UInt)( parser->top - parser->stack ) >= parser->stackSize ))"];
"1000733" [label="(Identifier,num_args)"];
"1000725" [label="(ControlStructure,if ( field->kind != cff_kind_delta && num_args < 1 ))"];
"1000399" [label="(Call,parser->stackSize)"];
"1000390" [label="(Call,(FT_UInt)( parser->top - parser->stack ))"];
"1000855" [label="(Literal,65536)"];
"1000746" [label="(Call,cff_parse_num( parser, parser->stack ))"];
"1000165" [label="(Identifier,parser)"];
"1000655" [label="(Call,parser->stack)"];
"1000953" [label="(Literal,\" %ld\")"];
"1000648" [label="(Identifier,num_args)"];
"1000850" [label="(Call,(double)val / 65536 / 1000)"];
"1000726" [label="(Call,field->kind != cff_kind_delta && num_args < 1)"];
"1000747" [label="(Identifier,parser)"];
"1000985" [label="(Call,parser->stack)"];
"1000388" [label="(ControlStructure,if ( (FT_UInt)( parser->top - parser->stack ) >= parser->stackSize ))"];
"1000218" [label="(Call,parser->top++)"];
"1000854" [label="(Call,65536 / 1000)"];
"1000206" [label="(Call,parser->top)"];
"1000160" [label="(Call,parser->stack)"];
"1000735" [label="(ControlStructure,goto Stack_Underflow;)"];
"1000960" [label="(Call,num_args--)"];
"1000838" [label="(Block,)"];
"1000754" [label="(Identifier,val)"];
"1000765" [label="(Identifier,parser)"];
"1000969" [label="(Identifier,parser)"];
"1000361" [label="(Call,error = cff_decoder_parse_charstrings( &decoder,\n                                               charstring_base,\n                                               charstring_len,\n                                               1 ))"];
"1000209" [label="(Call,parser->stack)"];
"1000916" [label="(Block,)"];
"1000738" [label="(Identifier,field)"];
"1000908" [label="(Call,cff_parse_num( parser, data++ ))"];
"1000136" [label="(MethodParameterIn,CFF_Parser  parser)"];
"1000844" [label="(Literal,65536)"];
"1000799" [label="(Call,(FT_Int)val)"];
"1000887" [label="(Call,field->array_max)"];
"1000840" [label="(Call,(double)val / 65536)"];
"1000848" [label="(Block,)"];
"1000396" [label="(Call,parser->stack)"];
"1000744" [label="(Call,val = cff_parse_num( parser, parser->stack ))"];
"1000402" [label="(ControlStructure,goto Stack_Overflow;)"];
"1000931" [label="(Call,(FT_Short)val)"];
"1000950" [label="(Identifier,val)"];
"1000989" [label="(Identifier,p)"];
"1000156" [label="(Call,parser->top    = parser->stack)"];
"1000911" [label="(Identifier,data)"];
"1000812" [label="(Identifier,field)"];
"1000922" [label="(Call,(FT_Byte)val)"];
"1000405" [label="(Call,parser->top++)"];
"1000892" [label="(Call,*qcount = (FT_Byte)num_args)"];
"1000740" [label="(Block,)"];
"1000903" [label="(Identifier,num_args)"];
"1000145" [label="(Call,error   = FT_Err_Ok)"];
"1000968" -> "1000966"  [label="AST: "];
"1000968" -> "1000969"  [label="CFG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000966" -> "1000968"  [label="CFG: "];
"1000968" -> "1001011"  [label="DDG: parser"];
"1000968" -> "1000746"  [label="DDG: parser"];
"1000968" -> "1000755"  [label="DDG: parser"];
"1000968" -> "1000764"  [label="DDG: parser"];
"1000968" -> "1000908"  [label="DDG: parser"];
"1000968" -> "1000966"  [label="DDG: parser"];
"1000746" -> "1000968"  [label="DDG: parser"];
"1000755" -> "1000968"  [label="DDG: parser"];
"1000908" -> "1000968"  [label="DDG: parser"];
"1000764" -> "1000968"  [label="DDG: parser"];
"1000136" -> "1000968"  [label="DDG: parser"];
"1000746" -> "1000744"  [label="AST: "];
"1000746" -> "1000748"  [label="CFG: "];
"1000747" -> "1000746"  [label="AST: "];
"1000748" -> "1000746"  [label="AST: "];
"1000744" -> "1000746"  [label="CFG: "];
"1000746" -> "1001011"  [label="DDG: parser->stack"];
"1000746" -> "1001011"  [label="DDG: parser"];
"1000746" -> "1000205"  [label="DDG: parser->stack"];
"1000746" -> "1000392"  [label="DDG: parser->stack"];
"1000746" -> "1000651"  [label="DDG: parser->stack"];
"1000746" -> "1000744"  [label="DDG: parser"];
"1000746" -> "1000744"  [label="DDG: parser->stack"];
"1000755" -> "1000746"  [label="DDG: parser"];
"1000908" -> "1000746"  [label="DDG: parser"];
"1000764" -> "1000746"  [label="DDG: parser"];
"1000136" -> "1000746"  [label="DDG: parser"];
"1000651" -> "1000746"  [label="DDG: parser->stack"];
"1000746" -> "1000755"  [label="DDG: parser"];
"1000746" -> "1000764"  [label="DDG: parser"];
"1000746" -> "1000908"  [label="DDG: parser"];
"1000746" -> "1000981"  [label="DDG: parser->stack"];
"1000755" -> "1000753"  [label="AST: "];
"1000755" -> "1000757"  [label="CFG: "];
"1000756" -> "1000755"  [label="AST: "];
"1000757" -> "1000755"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000755" -> "1001011"  [label="DDG: parser->stack"];
"1000755" -> "1001011"  [label="DDG: parser"];
"1000755" -> "1000205"  [label="DDG: parser->stack"];
"1000755" -> "1000392"  [label="DDG: parser->stack"];
"1000755" -> "1000651"  [label="DDG: parser->stack"];
"1000755" -> "1000753"  [label="DDG: parser"];
"1000755" -> "1000753"  [label="DDG: parser->stack"];
"1000908" -> "1000755"  [label="DDG: parser"];
"1000764" -> "1000755"  [label="DDG: parser"];
"1000136" -> "1000755"  [label="DDG: parser"];
"1000651" -> "1000755"  [label="DDG: parser->stack"];
"1000755" -> "1000764"  [label="DDG: parser"];
"1000755" -> "1000908"  [label="DDG: parser"];
"1000755" -> "1000981"  [label="DDG: parser->stack"];
"1000908" -> "1000906"  [label="AST: "];
"1000908" -> "1000910"  [label="CFG: "];
"1000909" -> "1000908"  [label="AST: "];
"1000910" -> "1000908"  [label="AST: "];
"1000906" -> "1000908"  [label="CFG: "];
"1000908" -> "1001011"  [label="DDG: parser"];
"1000908" -> "1000764"  [label="DDG: parser"];
"1000908" -> "1000906"  [label="DDG: parser"];
"1000764" -> "1000908"  [label="DDG: parser"];
"1000136" -> "1000908"  [label="DDG: parser"];
"1000910" -> "1000908"  [label="DDG: data"];
"1000764" -> "1000762"  [label="AST: "];
"1000764" -> "1000769"  [label="CFG: "];
"1000765" -> "1000764"  [label="AST: "];
"1000766" -> "1000764"  [label="AST: "];
"1000769" -> "1000764"  [label="AST: "];
"1000762" -> "1000764"  [label="CFG: "];
"1000764" -> "1001011"  [label="DDG: parser->stack"];
"1000764" -> "1001011"  [label="DDG: parser"];
"1000764" -> "1000205"  [label="DDG: parser->stack"];
"1000764" -> "1000392"  [label="DDG: parser->stack"];
"1000764" -> "1000651"  [label="DDG: parser->stack"];
"1000764" -> "1000762"  [label="DDG: parser"];
"1000764" -> "1000762"  [label="DDG: parser->stack"];
"1000764" -> "1000762"  [label="DDG: 3"];
"1000136" -> "1000764"  [label="DDG: parser"];
"1000651" -> "1000764"  [label="DDG: parser->stack"];
"1000764" -> "1000981"  [label="DDG: parser->stack"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1001011"  [label="DDG: parser"];
"1000651" -> "1000649"  [label="AST: "];
"1000651" -> "1000655"  [label="CFG: "];
"1000652" -> "1000651"  [label="AST: "];
"1000655" -> "1000651"  [label="AST: "];
"1000649" -> "1000651"  [label="CFG: "];
"1000651" -> "1001011"  [label="DDG: parser->stack"];
"1000651" -> "1001011"  [label="DDG: parser->top"];
"1000651" -> "1000205"  [label="DDG: parser->top"];
"1000651" -> "1000205"  [label="DDG: parser->stack"];
"1000651" -> "1000392"  [label="DDG: parser->top"];
"1000651" -> "1000392"  [label="DDG: parser->stack"];
"1000651" -> "1000649"  [label="DDG: parser->top"];
"1000651" -> "1000649"  [label="DDG: parser->stack"];
"1000156" -> "1000651"  [label="DDG: parser->top"];
"1000981" -> "1000651"  [label="DDG: parser->top"];
"1000218" -> "1000651"  [label="DDG: parser->top"];
"1000405" -> "1000651"  [label="DDG: parser->top"];
"1000392" -> "1000651"  [label="DDG: parser->stack"];
"1000205" -> "1000651"  [label="DDG: parser->stack"];
"1000651" -> "1000874"  [label="DDG: parser->stack"];
"1000651" -> "1000981"  [label="DDG: parser->stack"];
"1000156" -> "1000139"  [label="AST: "];
"1000156" -> "1000160"  [label="CFG: "];
"1000157" -> "1000156"  [label="AST: "];
"1000160" -> "1000156"  [label="AST: "];
"1000165" -> "1000156"  [label="CFG: "];
"1000156" -> "1001011"  [label="DDG: parser->top"];
"1000156" -> "1001011"  [label="DDG: parser->stack"];
"1000156" -> "1000205"  [label="DDG: parser->top"];
"1000156" -> "1000392"  [label="DDG: parser->top"];
"1000981" -> "1000975"  [label="AST: "];
"1000981" -> "1000985"  [label="CFG: "];
"1000982" -> "1000981"  [label="AST: "];
"1000985" -> "1000981"  [label="AST: "];
"1000989" -> "1000981"  [label="CFG: "];
"1000981" -> "1001011"  [label="DDG: parser->top"];
"1000981" -> "1001011"  [label="DDG: parser->stack"];
"1000981" -> "1000205"  [label="DDG: parser->top"];
"1000981" -> "1000392"  [label="DDG: parser->top"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000219"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000218" -> "1001011"  [label="DDG: parser->top"];
"1000218" -> "1000205"  [label="DDG: parser->top"];
"1000205" -> "1000218"  [label="DDG: parser->top"];
"1000218" -> "1000392"  [label="DDG: parser->top"];
"1000205" -> "1000203"  [label="AST: "];
"1000205" -> "1000209"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000209" -> "1000205"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000205" -> "1001011"  [label="DDG: parser->stack"];
"1000205" -> "1001011"  [label="DDG: parser->top"];
"1000205" -> "1000203"  [label="DDG: parser->top"];
"1000205" -> "1000203"  [label="DDG: parser->stack"];
"1000405" -> "1000205"  [label="DDG: parser->top"];
"1000392" -> "1000205"  [label="DDG: parser->stack"];
"1000205" -> "1000392"  [label="DDG: parser->stack"];
"1000405" -> "1000404"  [label="AST: "];
"1000405" -> "1000406"  [label="CFG: "];
"1000406" -> "1000405"  [label="AST: "];
"1000404" -> "1000405"  [label="CFG: "];
"1000405" -> "1001011"  [label="DDG: parser->top"];
"1000405" -> "1000392"  [label="DDG: parser->top"];
"1000392" -> "1000405"  [label="DDG: parser->top"];
"1000392" -> "1000390"  [label="AST: "];
"1000392" -> "1000396"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000396" -> "1000392"  [label="AST: "];
"1000390" -> "1000392"  [label="CFG: "];
"1000392" -> "1001011"  [label="DDG: parser->stack"];
"1000392" -> "1001011"  [label="DDG: parser->top"];
"1000392" -> "1000390"  [label="DDG: parser->top"];
"1000392" -> "1000390"  [label="DDG: parser->stack"];
"1000910" -> "1000911"  [label="CFG: "];
"1000911" -> "1000910"  [label="AST: "];
"1000910" -> "1001011"  [label="DDG: data"];
"1000874" -> "1000910"  [label="DDG: data"];
"1000874" -> "1000860"  [label="AST: "];
"1000874" -> "1000876"  [label="CFG: "];
"1000875" -> "1000874"  [label="AST: "];
"1000876" -> "1000874"  [label="AST: "];
"1000881" -> "1000874"  [label="CFG: "];
"1000874" -> "1001011"  [label="DDG: parser->stack"];
"1000874" -> "1001011"  [label="DDG: data"];
"1000203" -> "1000202"  [label="AST: "];
"1000204" -> "1000203"  [label="AST: "];
"1000213" -> "1000203"  [label="CFG: "];
"1000203" -> "1001011"  [label="DDG: parser->top - parser->stack"];
"1000203" -> "1000202"  [label="DDG: parser->top - parser->stack"];
"1000202" -> "1000201"  [label="AST: "];
"1000202" -> "1000212"  [label="CFG: "];
"1000212" -> "1000202"  [label="AST: "];
"1000215" -> "1000202"  [label="CFG: "];
"1000220" -> "1000202"  [label="CFG: "];
"1000202" -> "1001011"  [label="DDG: (FT_UInt)( parser->top - parser->stack )"];
"1000202" -> "1001011"  [label="DDG: parser->stackSize"];
"1000202" -> "1001011"  [label="DDG: (FT_UInt)( parser->top - parser->stack ) >= parser->stackSize"];
"1000389" -> "1000202"  [label="DDG: parser->stackSize"];
"1000202" -> "1000389"  [label="DDG: parser->stackSize"];
"1000389" -> "1000388"  [label="AST: "];
"1000389" -> "1000399"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000399" -> "1000389"  [label="AST: "];
"1000402" -> "1000389"  [label="CFG: "];
"1000407" -> "1000389"  [label="CFG: "];
"1000389" -> "1001011"  [label="DDG: (FT_UInt)( parser->top - parser->stack ) >= parser->stackSize"];
"1000389" -> "1001011"  [label="DDG: (FT_UInt)( parser->top - parser->stack )"];
"1000389" -> "1001011"  [label="DDG: parser->stackSize"];
"1000390" -> "1000389"  [label="DDG: parser->top - parser->stack"];
"1000391" -> "1000390"  [label="AST: "];
"1000400" -> "1000390"  [label="CFG: "];
"1000390" -> "1001011"  [label="DDG: parser->top - parser->stack"];
"1000649" -> "1000647"  [label="AST: "];
"1000650" -> "1000649"  [label="AST: "];
"1000647" -> "1000649"  [label="CFG: "];
"1000649" -> "1001011"  [label="DDG: parser->top - parser->stack"];
"1000649" -> "1000647"  [label="DDG: parser->top - parser->stack"];
"1000647" -> "1000644"  [label="AST: "];
"1000648" -> "1000647"  [label="AST: "];
"1000662" -> "1000647"  [label="CFG: "];
"1000647" -> "1001011"  [label="DDG: num_args"];
"1000647" -> "1001011"  [label="DDG: (FT_UInt)\n                                             ( parser->top - parser->stack )"];
"1000647" -> "1000732"  [label="DDG: num_args"];
"1000647" -> "1000880"  [label="DDG: num_args"];
"1000647" -> "1000960"  [label="DDG: num_args"];
"1000732" -> "1000726"  [label="AST: "];
"1000732" -> "1000734"  [label="CFG: "];
"1000733" -> "1000732"  [label="AST: "];
"1000734" -> "1000732"  [label="AST: "];
"1000726" -> "1000732"  [label="CFG: "];
"1000732" -> "1001011"  [label="DDG: num_args"];
"1000732" -> "1000726"  [label="DDG: num_args"];
"1000732" -> "1000726"  [label="DDG: 1"];
"1000732" -> "1000880"  [label="DDG: num_args"];
"1000732" -> "1000960"  [label="DDG: num_args"];
"1000726" -> "1000725"  [label="AST: "];
"1000726" -> "1000727"  [label="CFG: "];
"1000727" -> "1000726"  [label="AST: "];
"1000735" -> "1000726"  [label="CFG: "];
"1000738" -> "1000726"  [label="CFG: "];
"1000726" -> "1001011"  [label="DDG: field->kind != cff_kind_delta"];
"1000726" -> "1001011"  [label="DDG: field->kind != cff_kind_delta && num_args < 1"];
"1000726" -> "1001011"  [label="DDG: num_args < 1"];
"1000727" -> "1000726"  [label="DDG: field->kind"];
"1000727" -> "1000726"  [label="DDG: cff_kind_delta"];
"1000880" -> "1000879"  [label="AST: "];
"1000880" -> "1000882"  [label="CFG: "];
"1000881" -> "1000880"  [label="AST: "];
"1000882" -> "1000880"  [label="AST: "];
"1000886" -> "1000880"  [label="CFG: "];
"1000891" -> "1000880"  [label="CFG: "];
"1000880" -> "1001011"  [label="DDG: field->array_max"];
"1000880" -> "1001011"  [label="DDG: num_args > field->array_max"];
"1000880" -> "1000885"  [label="DDG: field->array_max"];
"1000880" -> "1000895"  [label="DDG: num_args"];
"1000885" -> "1000879"  [label="AST: "];
"1000885" -> "1000887"  [label="CFG: "];
"1000886" -> "1000885"  [label="AST: "];
"1000887" -> "1000885"  [label="AST: "];
"1000891" -> "1000885"  [label="CFG: "];
"1000885" -> "1001011"  [label="DDG: field->array_max"];
"1000885" -> "1000895"  [label="DDG: num_args"];
"1000895" -> "1000892"  [label="AST: "];
"1000895" -> "1000897"  [label="CFG: "];
"1000896" -> "1000895"  [label="AST: "];
"1000897" -> "1000895"  [label="AST: "];
"1000892" -> "1000895"  [label="CFG: "];
"1000895" -> "1000892"  [label="DDG: num_args"];
"1000895" -> "1000902"  [label="DDG: num_args"];
"1000892" -> "1000860"  [label="AST: "];
"1000893" -> "1000892"  [label="AST: "];
"1000899" -> "1000892"  [label="CFG: "];
"1000892" -> "1001011"  [label="DDG: *qcount"];
"1000892" -> "1001011"  [label="DDG: (FT_Byte)num_args"];
"1000902" -> "1000901"  [label="AST: "];
"1000902" -> "1000904"  [label="CFG: "];
"1000903" -> "1000902"  [label="AST: "];
"1000904" -> "1000902"  [label="AST: "];
"1000907" -> "1000902"  [label="CFG: "];
"1000963" -> "1000902"  [label="CFG: "];
"1000902" -> "1001011"  [label="DDG: num_args"];
"1000902" -> "1001011"  [label="DDG: num_args > 0"];
"1000960" -> "1000902"  [label="DDG: num_args"];
"1000902" -> "1000960"  [label="DDG: num_args"];
"1000960" -> "1000905"  [label="AST: "];
"1000960" -> "1000961"  [label="CFG: "];
"1000961" -> "1000960"  [label="AST: "];
"1000903" -> "1000960"  [label="CFG: "];
"1000753" -> "1000740"  [label="AST: "];
"1000754" -> "1000753"  [label="AST: "];
"1000760" -> "1000753"  [label="CFG: "];
"1000753" -> "1001011"  [label="DDG: cff_parse_fixed( parser, parser->stack )"];
"1000753" -> "1000804"  [label="DDG: val"];
"1000753" -> "1000841"  [label="DDG: val"];
"1000753" -> "1000851"  [label="DDG: val"];
"1000804" -> "1000775"  [label="AST: "];
"1000804" -> "1000809"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000809" -> "1000804"  [label="AST: "];
"1000812" -> "1000804"  [label="CFG: "];
"1000804" -> "1001011"  [label="DDG: *(FT_Long*)q"];
"1000804" -> "1001011"  [label="DDG: val"];
"1000851" -> "1000804"  [label="DDG: val"];
"1000744" -> "1000804"  [label="DDG: val"];
"1000931" -> "1000804"  [label="DDG: val"];
"1000762" -> "1000804"  [label="DDG: val"];
"1000799" -> "1000804"  [label="DDG: val"];
"1000922" -> "1000804"  [label="DDG: val"];
"1000790" -> "1000804"  [label="DDG: val"];
"1000841" -> "1000804"  [label="DDG: val"];
"1000898" -> "1000804"  [label="DDG: val"];
"1000940" -> "1000804"  [label="DDG: val"];
"1000781" -> "1000804"  [label="DDG: val"];
"1000906" -> "1000804"  [label="DDG: val"];
"1000841" -> "1000840"  [label="AST: "];
"1000841" -> "1000843"  [label="CFG: "];
"1000842" -> "1000841"  [label="AST: "];
"1000843" -> "1000841"  [label="AST: "];
"1000844" -> "1000841"  [label="CFG: "];
"1000841" -> "1001011"  [label="DDG: val"];
"1000841" -> "1000840"  [label="DDG: val"];
"1000790" -> "1000841"  [label="DDG: val"];
"1000851" -> "1000841"  [label="DDG: val"];
"1000931" -> "1000841"  [label="DDG: val"];
"1000799" -> "1000841"  [label="DDG: val"];
"1000922" -> "1000841"  [label="DDG: val"];
"1000898" -> "1000841"  [label="DDG: val"];
"1000940" -> "1000841"  [label="DDG: val"];
"1000781" -> "1000841"  [label="DDG: val"];
"1000906" -> "1000841"  [label="DDG: val"];
"1000744" -> "1000841"  [label="DDG: val"];
"1000762" -> "1000841"  [label="DDG: val"];
"1000841" -> "1000851"  [label="DDG: val"];
"1000841" -> "1000906"  [label="DDG: val"];
"1000841" -> "1000945"  [label="DDG: val"];
"1000840" -> "1000838"  [label="AST: "];
"1000840" -> "1000844"  [label="CFG: "];
"1000844" -> "1000840"  [label="AST: "];
"1000837" -> "1000840"  [label="CFG: "];
"1000840" -> "1001011"  [label="DDG: (double)val / 65536"];
"1000840" -> "1001011"  [label="DDG: (double)val"];
"1000851" -> "1000850"  [label="AST: "];
"1000851" -> "1000853"  [label="CFG: "];
"1000852" -> "1000851"  [label="AST: "];
"1000853" -> "1000851"  [label="AST: "];
"1000855" -> "1000851"  [label="CFG: "];
"1000851" -> "1001011"  [label="DDG: val"];
"1000851" -> "1000850"  [label="DDG: val"];
"1000790" -> "1000851"  [label="DDG: val"];
"1000931" -> "1000851"  [label="DDG: val"];
"1000799" -> "1000851"  [label="DDG: val"];
"1000922" -> "1000851"  [label="DDG: val"];
"1000898" -> "1000851"  [label="DDG: val"];
"1000940" -> "1000851"  [label="DDG: val"];
"1000781" -> "1000851"  [label="DDG: val"];
"1000906" -> "1000851"  [label="DDG: val"];
"1000744" -> "1000851"  [label="DDG: val"];
"1000762" -> "1000851"  [label="DDG: val"];
"1000851" -> "1000906"  [label="DDG: val"];
"1000851" -> "1000945"  [label="DDG: val"];
"1000850" -> "1000848"  [label="AST: "];
"1000850" -> "1000854"  [label="CFG: "];
"1000854" -> "1000850"  [label="AST: "];
"1000847" -> "1000850"  [label="CFG: "];
"1000850" -> "1001011"  [label="DDG: (double)val"];
"1000850" -> "1001011"  [label="DDG: (double)val / 65536 / 1000"];
"1000850" -> "1001011"  [label="DDG: 65536 / 1000"];
"1000854" -> "1000850"  [label="DDG: 65536"];
"1000854" -> "1000850"  [label="DDG: 1000"];
"1000906" -> "1000905"  [label="AST: "];
"1000907" -> "1000906"  [label="AST: "];
"1000914" -> "1000906"  [label="CFG: "];
"1000906" -> "1001011"  [label="DDG: cff_parse_num( parser, data++ )"];
"1000898" -> "1000906"  [label="DDG: val"];
"1000940" -> "1000906"  [label="DDG: val"];
"1000931" -> "1000906"  [label="DDG: val"];
"1000922" -> "1000906"  [label="DDG: val"];
"1000790" -> "1000906"  [label="DDG: val"];
"1000799" -> "1000906"  [label="DDG: val"];
"1000781" -> "1000906"  [label="DDG: val"];
"1000906" -> "1000945"  [label="DDG: val"];
"1000945" -> "1000916"  [label="AST: "];
"1000945" -> "1000950"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000950" -> "1000945"  [label="AST: "];
"1000953" -> "1000945"  [label="CFG: "];
"1000945" -> "1001011"  [label="DDG: val"];
"1000945" -> "1001011"  [label="DDG: *(FT_Long*)q"];
"1000790" -> "1000945"  [label="DDG: val"];
"1000931" -> "1000945"  [label="DDG: val"];
"1000799" -> "1000945"  [label="DDG: val"];
"1000922" -> "1000945"  [label="DDG: val"];
"1000898" -> "1000945"  [label="DDG: val"];
"1000940" -> "1000945"  [label="DDG: val"];
"1000781" -> "1000945"  [label="DDG: val"];
"1000762" -> "1000740"  [label="AST: "];
"1000763" -> "1000762"  [label="AST: "];
"1000770" -> "1000762"  [label="CFG: "];
"1000762" -> "1001011"  [label="DDG: cff_parse_fixed_scaled( parser, parser->stack, 3 )"];
"1000966" -> "1000740"  [label="AST: "];
"1000967" -> "1000966"  [label="AST: "];
"1000971" -> "1000966"  [label="CFG: "];
"1000966" -> "1001011"  [label="DDG: error"];
"1000966" -> "1001011"  [label="DDG: field->reader( parser )"];
"1000966" -> "1000991"  [label="DDG: error"];
"1000991" -> "1000139"  [label="AST: "];
"1000991" -> "1000992"  [label="CFG: "];
"1000992" -> "1000991"  [label="AST: "];
"1001011" -> "1000991"  [label="CFG: "];
"1000991" -> "1001011"  [label="DDG: <RET>"];
"1000992" -> "1000991"  [label="DDG: error"];
"1001006" -> "1000991"  [label="DDG: error"];
"1001000" -> "1000991"  [label="DDG: error"];
"1000145" -> "1000991"  [label="DDG: error"];
"1000994" -> "1000991"  [label="DDG: error"];
"1000361" -> "1000991"  [label="DDG: error"];
"1000744" -> "1000740"  [label="AST: "];
"1000745" -> "1000744"  [label="AST: "];
"1000751" -> "1000744"  [label="CFG: "];
"1000744" -> "1001011"  [label="DDG: cff_parse_num( parser, parser->stack )"];
}
