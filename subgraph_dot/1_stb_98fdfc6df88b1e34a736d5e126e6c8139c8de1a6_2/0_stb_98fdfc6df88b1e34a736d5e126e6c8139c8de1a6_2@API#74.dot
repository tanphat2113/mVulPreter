digraph "0_stb_98fdfc6df88b1e34a736d5e126e6c8139c8de1a6_2@API" {
"1003283" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003286" [label="(Call,f->blocksize_1/2)"];
"1003267" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1003359" [label="(Call,f->blocksize_1/2)"];
"1003340" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1000354" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1000358" [label="(Call,1 << log1)"];
"1000342" [label="(Call,log1 = x >> 4)"];
"1000344" [label="(Call,x >> 4)"];
"1000339" [label="(Call,x & 15)"];
"1000330" [label="(Call,x = get8(f))"];
"1000332" [label="(Call,get8(f))"];
"1000328" [label="(Call,get32(f))"];
"1000326" [label="(Call,get32(f))"];
"1000324" [label="(Call,get32(f))"];
"1000313" [label="(Call,get32(f))"];
"1000288" [label="(Call,get8(f))"];
"1000277" [label="(Call,get32(f))"];
"1000259" [label="(Call,getn(f, header, 6))"];
"1000250" [label="(Call,get8(f))"];
"1000126" [label="(Call,start_page(f))"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1003281" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003279" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003273" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003315" [label="(Call,f->previous_window[i] == NULL)"];
"1003314" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003306" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003322" [label="(Call,f->finalY[i] == NULL)"];
"1003365" [label="(Call,f->floor_buffers[i] == NULL)"];
"1003307" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003333" [label="(Call,memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1))"];
"1003299" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003297" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003291" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003330" [label="(Call,error(f, VORBIS_outofmem))"];
"1003329" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003354" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003265" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003263" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003257" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003352" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003346" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003373" [label="(Call,error(f, VORBIS_outofmem))"];
"1003372" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003378" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003377" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003388" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003387" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003405" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003454" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003453" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003451" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003561" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003566" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003594" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003595" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003599" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1003490" [label="(Call,f->blocksize_1 / 2)"];
"1003488" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1003499" [label="(Call,r->begin < actual_size)"];
"1003496" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003524" [label="(Call,limit_r_end - limit_r_begin)"];
"1003522" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1003530" [label="(Call,n_read / r->part_size)"];
"1003528" [label="(Call,part_read = n_read / r->part_size)"];
"1003536" [label="(Call,part_read > max_part_read)"];
"1003539" [label="(Call,max_part_read = part_read)"];
"1003551" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1003544" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003542" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003555" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003548" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003498" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003512" [label="(Call,r->end   < actual_size)"];
"1003509" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003511" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1003612" [label="(Call,error(f, VORBIS_outofmem))"];
"1003611" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003619" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1003615" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003396" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1002110" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003196" [label="(Call,get_bits(f,16))"];
"1000269" [label="(Call,vorbis_validate(header))"];
"1001152" [label="(Call,error(f, VORBIS_outofmem))"];
"1002051" [label="(Call,get_bits(f, 8))"];
"1003539" [label="(Call,max_part_read = part_read)"];
"1003203" [label="(Call,get_bits(f,8))"];
"1000284" [label="(Call,f->channels = get8(f))"];
"1000500" [label="(Call,get_bits(f,8))"];
"1001243" [label="(Call,CHECK(f))"];
"1000347" [label="(Call,f->blocksize_0 = 1 << log0)"];
"1003418" [label="(Identifier,integer_divide_table)"];
"1003291" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1000573" [label="(Call,CHECK(f))"];
"1003522" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1003510" [label="(Identifier,limit_r_end)"];
"1003544" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1000278" [label="(Identifier,f)"];
"1003517" [label="(Call,r->end)"];
"1003330" [label="(Call,error(f, VORBIS_outofmem))"];
"1001404" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001469" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1002504" [label="(Call,get_bits(f,5))"];
"1003371" [label="(Identifier,NULL)"];
"1003620" [label="(Identifier,f)"];
"1003568" [label="(Identifier,f)"];
"1003109" [label="(Call,get_bits(f,8))"];
"1000424" [label="(Call,skip(f, len))"];
"1002846" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1003356" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003352" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003524" [label="(Call,limit_r_end - limit_r_begin)"];
"1003341" [label="(Call,sizeof(float))"];
"1003255" [label="(Identifier,i)"];
"1003505" [label="(Identifier,r)"];
"1001181" [label="(Call,error(f, VORBIS_outofmem))"];
"1002876" [label="(Call,get_bits(f,4))"];
"1003538" [label="(Identifier,max_part_read)"];
"1003498" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003478" [label="(Block,)"];
"1002858" [label="(Call,m->chan == NULL)"];
"1003146" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003334" [label="(Call,f->channel_buffers[i])"];
"1003528" [label="(Call,part_read = n_read / r->part_size)"];
"1003268" [label="(Call,sizeof(float))"];
"1003381" [label="(Call,f->blocksize_0)"];
"1000277" [label="(Call,get32(f))"];
"1003593" [label="(ControlStructure,if (f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset))"];
"1001275" [label="(Call,get_bits(f, 32))"];
"1000260" [label="(Identifier,f)"];
"1003256" [label="(Block,)"];
"1000395" [label="(Call,get8(f))"];
"1001855" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000898" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1003396" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1003385" [label="(Identifier,FALSE)"];
"1000148" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001918" [label="(Call,get_bits(f,4))"];
"1003613" [label="(Identifier,f)"];
"1000375" [label="(Call,log1 < 6)"];
"1000632" [label="(Call,get_bits(f, 8))"];
"1003526" [label="(Identifier,limit_r_begin)"];
"1001347" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1003523" [label="(Identifier,n_read)"];
"1003500" [label="(Call,r->begin)"];
"1003316" [label="(Call,f->previous_window[i])"];
"1003100" [label="(Call,get_bits(f,8))"];
"1003614" [label="(Identifier,VORBIS_outofmem)"];
"1003378" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1000360" [label="(Identifier,log1)"];
"1001943" [label="(Call,error(f, VORBIS_feature_not_supported))"];
"1002723" [label="(Call,error(f, VORBIS_outofmem))"];
"1003276" [label="(Identifier,f)"];
"1001637" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003520" [label="(Identifier,actual_size)"];
"1000390" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001889" [label="(Call,get_bits(f,16))"];
"1003235" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003331" [label="(Identifier,f)"];
"1003512" [label="(Call,r->end   < actual_size)"];
"1000258" [label="(Call,!getn(f, header, 6))"];
"1003315" [label="(Call,f->previous_window[i] == NULL)"];
"1000346" [label="(Literal,4)"];
"1000281" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001743" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1000276" [label="(Call,get32(f) != 0)"];
"1001206" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1003491" [label="(Call,f->blocksize_1)"];
"1002931" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1001761" [label="(Call,get_bits(f, 6))"];
"1000485" [label="(Call,get8_packet(f))"];
"1001804" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1003561" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003339" [label="(Literal,0)"];
"1000667" [label="(Call,get_bits(f,1))"];
"1003458" [label="(Call,sizeof(float))"];
"1000354" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1000338" [label="(Identifier,log0)"];
"1002194" [label="(Call,get_bits(f, g->rangebits))"];
"1003329" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1001230" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1003360" [label="(Call,f->blocksize_1)"];
"1000236" [label="(Call,get8(f))"];
"1000340" [label="(Identifier,x)"];
"1000625" [label="(Call,get_bits(f, 8))"];
"1003366" [label="(Call,f->floor_buffers[i])"];
"1002093" [label="(Call,get_bits(f,8))"];
"1002947" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1000528" [label="(Call,error(f, VORBIS_outofmem))"];
"1003279" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003336" [label="(Identifier,f)"];
"1003323" [label="(Call,f->finalY[i])"];
"1002025" [label="(Call,get_bits(f, 3))"];
"1002907" [label="(Call,get_bits(f,8))"];
"1001392" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1000585" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000769" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000435" [label="(Call,start_packet(f))"];
"1003516" [label="(Identifier,actual_size)"];
"1002453" [label="(Call,get_bits(f,6))"];
"1003399" [label="(Identifier,f)"];
"1002535" [label="(Call,error(f, VORBIS_outofmem))"];
"1001291" [label="(Call,get_bits(f, 4))"];
"1000262" [label="(Literal,6)"];
"1003388" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003379" [label="(Identifier,f)"];
"1002398" [label="(Call,get_bits(f, 16))"];
"1000289" [label="(Identifier,f)"];
"1003622" [label="(Identifier,TRUE)"];
"1002702" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002324" [label="(Call,get_bits(f, 6))"];
"1003118" [label="(Call,get_bits(f,8))"];
"1003543" [label="(Identifier,classify_mem)"];
"1003018" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000337" [label="(Call,log0 = x & 15)"];
"1000309" [label="(Call,f->sample_rate = get32(f))"];
"1000127" [label="(Identifier,f)"];
"1000333" [label="(Identifier,f)"];
"1003263" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000403" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000329" [label="(Identifier,f)"];
"1000125" [label="(Call,!start_page(f))"];
"1002868" [label="(Call,get_bits(f,1))"];
"1003566" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003453" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1001939" [label="(Call,get_bits(f,8))"];
"1002898" [label="(Call,get_bits(f,1))"];
"1000334" [label="(Block,)"];
"1000261" [label="(Identifier,header)"];
"1000469" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003532" [label="(Call,r->part_size)"];
"1001822" [label="(Call,error(f, VORBIS_outofmem))"];
"1001382" [label="(Call,get_bits(f, c->value_bits))"];
"1003363" [label="(Literal,2)"];
"1000829" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003213" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003497" [label="(Identifier,limit_r_begin)"];
"1003599" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1000250" [label="(Call,get8(f))"];
"1000611" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003300" [label="(Identifier,f)"];
"1001903" [label="(Call,get_bits(f,6))"];
"1001161" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1000414" [label="(Call,start_packet(f))"];
"1001695" [label="(Call,error(f, VORBIS_outofmem))"];
"1000126" [label="(Call,start_page(f))"];
"1000364" [label="(Identifier,log0)"];
"1001969" [label="(Call,get_bits(f, 5))"];
"1000657" [label="(Call,get_bits(f,1))"];
"1002783" [label="(Call,f->mapping == NULL)"];
"1001910" [label="(Call,get_bits(f,8))"];
"1003333" [label="(Call,memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1))"];
"1003552" [label="(Identifier,max_part_read)"];
"1003257" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1001778" [label="(Call,get_bits(f, 16))"];
"1002417" [label="(Call,get_bits(f, 24))"];
"1000341" [label="(Literal,15)"];
"1002614" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1003551" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1002761" [label="(Call,get_bits(f,6))"];
"1000349" [label="(Identifier,f)"];
"1000637" [label="(Call,get_bits(f, 8))"];
"1002436" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001362" [label="(Call,error(f, VORBIS_outofmem))"];
"1002334" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1003274" [label="(Call,f->previous_window[i])"];
"1003406" [label="(Call,f->blocksize[1])"];
"1003064" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002118" [label="(Call,get_bits(f,2))"];
"1001009" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1003460" [label="(Literal,1)"];
"1003189" [label="(Call,get_bits(f,16))"];
"1000342" [label="(Call,log1 = x >> 4)"];
"1003595" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003490" [label="(Call,f->blocksize_1 / 2)"];
"1003513" [label="(Call,r->end)"];
"1000646" [label="(Call,get_bits(f, 8))"];
"1003387" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1000887" [label="(Call,error(f, VORBIS_outofmem))"];
"1003223" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000694" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1000359" [label="(Literal,1)"];
"1002424" [label="(Call,get_bits(f, 24))"];
"1003594" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003372" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003313" [label="(Identifier,NULL)"];
"1003314" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003355" [label="(Identifier,f)"];
"1003310" [label="(Identifier,f)"];
"1000355" [label="(Call,f->blocksize_1)"];
"1003332" [label="(Identifier,VORBIS_outofmem)"];
"1001340" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003368" [label="(Identifier,f)"];
"1003270" [label="(Call,f->blocksize_1)"];
"1000249" [label="(Call,get8(f) != VORBIS_packet_id)"];
"1000344" [label="(Call,x >> 4)"];
"1003530" [label="(Call,n_read / r->part_size)"];
"1003557" [label="(Identifier,f)"];
"1002984" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003511" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1003563" [label="(Call,f->temp_memory_required)"];
"1002771" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1001249" [label="(Call,get_bits(f, 4))"];
"1000370" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000259" [label="(Call,getn(f, header, 6))"];
"1000875" [label="(Call,setup_malloc(f, c->entries))"];
"1000422" [label="(Call,next_segment(f))"];
"1003294" [label="(Identifier,f)"];
"1000804" [label="(Call,get_bits(f,1))"];
"1003132" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000616" [label="(Call,get_bits(f, 8))"];
"1002577" [label="(Call,get_bits(f, 8))"];
"1000343" [label="(Identifier,log1)"];
"1000328" [label="(Call,get32(f))"];
"1000465" [label="(Call,get8_packet(f))"];
"1001754" [label="(Call,CHECK(f))"];
"1000245" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003549" [label="(Call,sizeof(void*))"];
"1003548" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003611" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1000992" [label="(Call,error(f, VORBIS_outofmem))"];
"1002495" [label="(Call,get_bits(f,3))"];
"1000313" [label="(Call,get32(f))"];
"1003386" [label="(ControlStructure,if (!init_blocksize(f, 1, f->blocksize_1)))"];
"1003411" [label="(Call,f->blocksize_1)"];
"1003619" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1000440" [label="(Call,IS_PUSH_MODE(f))"];
"1003518" [label="(Identifier,r)"];
"1003281" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003258" [label="(Call,f->channel_buffers[i])"];
"1003249" [label="(Call,i < f->channels)"];
"1001683" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1003504" [label="(Call,r->begin)"];
"1001046" [label="(Call,error(f, VORBIS_outofmem))"];
"1003606" [label="(Call,(unsigned) f->temp_offset)"];
"1003373" [label="(Call,error(f, VORBIS_outofmem))"];
"1001118" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003612" [label="(Call,error(f, VORBIS_outofmem))"];
"1000708" [label="(Call,setup_malloc(f, c->entries))"];
"1001786" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003347" [label="(Call,f->floor_buffers[i])"];
"1000345" [label="(Identifier,x)"];
"1000288" [label="(Call,get8(f))"];
"1003308" [label="(Call,f->channel_buffers[i])"];
"1000232" [label="(Call,get8(f))"];
"1002428" [label="(Call,r->end < r->begin)"];
"1000683" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003321" [label="(Identifier,NULL)"];
"1003395" [label="(Identifier,FALSE)"];
"1001990" [label="(Call,get_bits(f, 4))"];
"1003354" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1002864" [label="(Call,error(f, VORBIS_outofmem))"];
"1003562" [label="(Identifier,imdct_mem)"];
"1003343" [label="(Call,f->blocksize_1)"];
"1003617" [label="(Identifier,f)"];
"1003541" [label="(Identifier,part_read)"];
"1000731" [label="(Call,get_bits(f,5))"];
"1003267" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1003531" [label="(Identifier,n_read)"];
"1000326" [label="(Call,get32(f))"];
"1002473" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000339" [label="(Call,x & 15)"];
"1003397" [label="(Call,f->blocksize[0])"];
"1003391" [label="(Call,f->blocksize_1)"];
"1003615" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003182" [label="(Call,get_bits(f,1))"];
"1003573" [label="(Identifier,f)"];
"1001066" [label="(Call,error(f, VORBIS_outofmem))"];
"1000272" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003496" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003328" [label="(Identifier,NULL)"];
"1001113" [label="(Call,setup_temp_free(f, values, 0))"];
"1001504" [label="(Call,error(f, VORBIS_outofmem))"];
"1003553" [label="(Call,sizeof(uint8 *))"];
"1002461" [label="(Call,get_bits(f,8))"];
"1003537" [label="(Identifier,part_read)"];
"1000327" [label="(Identifier,f)"];
"1003286" [label="(Call,f->blocksize_1/2)"];
"1000960" [label="(Call,CHECK(f))"];
"1000252" [label="(Identifier,VORBIS_packet_id)"];
"1002837" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003408" [label="(Identifier,f)"];
"1003380" [label="(Literal,0)"];
"1001053" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002444" [label="(Call,get_bits(f,24))"];
"1002516" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1000240" [label="(Call,error(f, VORBIS_ogg_skeleton_not_supported))"];
"1003503" [label="(Identifier,actual_size)"];
"1003555" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003525" [label="(Identifier,limit_r_end)"];
"1001132" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1003390" [label="(Literal,1)"];
"1003477" [label="(Identifier,i)"];
"1001492" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1000577" [label="(Call,get_bits(f, 8))"];
"1003299" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1001756" [label="(Call,CHECK(f))"];
"1000974" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1003284" [label="(Call,sizeof(float))"];
"1001020" [label="(Call,error(f, VORBIS_outofmem))"];
"1000254" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002439" [label="(Call,r->part_size = get_bits(f,24)+1)"];
"1000603" [label="(Call,get_bits(f, 8))"];
"1000321" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001843" [label="(Call,get_bits(f, 16))"];
"1001625" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1000332" [label="(Call,get8(f))"];
"1001896" [label="(Call,get_bits(f,16))"];
"1003499" [label="(Call,r->begin < actual_size)"];
"1000314" [label="(Identifier,f)"];
"1002637" [label="(Call,error(f, VORBIS_outofmem))"];
"1003238" [label="(Call,flush_packet(f))"];
"1001283" [label="(Call,get_bits(f, 32))"];
"1002065" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000108" [label="(Block,)"];
"1003560" [label="(ControlStructure,if (imdct_mem > f->temp_memory_required))"];
"1003325" [label="(Identifier,f)"];
"1003359" [label="(Call,f->blocksize_1/2)"];
"1003535" [label="(ControlStructure,if (part_read > max_part_read))"];
"1003377" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1000331" [label="(Identifier,x)"];
"1003265" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003322" [label="(Call,f->finalY[i] == NULL)"];
"1003567" [label="(Call,f->temp_memory_required)"];
"1003488" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1003349" [label="(Identifier,f)"];
"1003405" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003596" [label="(Call,f->setup_offset)"];
"1003282" [label="(Identifier,f)"];
"1003292" [label="(Call,f->finalY[i])"];
"1003507" [label="(Identifier,actual_size)"];
"1003273" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000445" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1003048" [label="(Call,get_bits(f, 4))"];
"1003556" [label="(Call,f->temp_memory_required)"];
"1003603" [label="(Call,f->temp_memory_required)"];
"1003616" [label="(Call,f->first_audio_page_offset)"];
"1000753" [label="(Call,get_bits(f, ilog(limit)))"];
"1003266" [label="(Identifier,f)"];
"1003290" [label="(Literal,2)"];
"1002035" [label="(Call,get_bits(f, 2))"];
"1000325" [label="(Identifier,f)"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1002789" [label="(Call,error(f, VORBIS_outofmem))"];
"1001446" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1003306" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003464" [label="(Call,max_part_read=0)"];
"1003283" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003540" [label="(Identifier,max_part_read)"];
"1003449" [label="(Block,)"];
"1003004" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000264" [label="(Call,error(f, VORBIS_unexpected_eof))"];
"1000190" [label="(Call,getn(f, header, 6))"];
"1003365" [label="(Call,f->floor_buffers[i] == NULL)"];
"1000358" [label="(Call,1 << log1)"];
"1000138" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003494" [label="(Literal,2)"];
"1003452" [label="(Identifier,imdct_mem)"];
"1001259" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000590" [label="(Call,get_bits(f, 8))"];
"1002126" [label="(Call,get_bits(f,4))"];
"1003305" [label="(ControlStructure,if (f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL))"];
"1003545" [label="(Call,f->channels)"];
"1001029" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1003364" [label="(ControlStructure,if (f->floor_buffers[i] == NULL))"];
"1003570" [label="(Identifier,imdct_mem)"];
"1000251" [label="(Identifier,f)"];
"1003307" [label="(Call,f->channel_buffers[i] == NULL)"];
"1000324" [label="(Call,get32(f))"];
"1003454" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003402" [label="(Call,f->blocksize_0)"];
"1003014" [label="(Call,get_bits(f,2))"];
"1003465" [label="(Identifier,max_part_read)"];
"1000158" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002593" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003375" [label="(Identifier,VORBIS_outofmem)"];
"1003600" [label="(Call,sizeof(*f))"];
"1003489" [label="(Identifier,actual_size)"];
"1000306" [label="(Call,error(f, VORBIS_too_many_channels))"];
"1000330" [label="(Call,x = get8(f))"];
"1002353" [label="(Call,error(f, VORBIS_outofmem))"];
"1000717" [label="(Call,error(f, VORBIS_outofmem))"];
"1000492" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001882" [label="(Call,get_bits(f,8))"];
"1003509" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1001656" [label="(Call,CHECK(f))"];
"1003455" [label="(Call,f->blocksize_1)"];
"1003340" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1003301" [label="(Call,sizeof(int16) * longest_floorlist)"];
"1003287" [label="(Call,f->blocksize_1)"];
"1000382" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001794" [label="(Call,get_bits(f, 6))"];
"1000168" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003318" [label="(Identifier,f)"];
"1002829" [label="(Call,get_bits(f,16))"];
"1003154" [label="(Call,get_bits(f, 6))"];
"1003623" [label="(MethodReturn,static int)"];
"1000296" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000598" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003374" [label="(Identifier,f)"];
"1003542" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1002968" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001216" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1002410" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000279" [label="(Literal,0)"];
"1000408" [label="(Call,start_page(f))"];
"1002499" [label="(Call,get_bits(f,1))"];
"1000816" [label="(Call,get_bits(f, 5))"];
"1001664" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003346" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003536" [label="(Call,part_read > max_part_read)"];
"1003451" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1000510" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1003389" [label="(Identifier,f)"];
"1003559" [label="(Identifier,classify_mem)"];
"1003529" [label="(Identifier,part_read)"];
"1001299" [label="(Call,get_bits(f,1))"];
"1003376" [label="(ControlStructure,if (!init_blocksize(f, 0, f->blocksize_0)))"];
"1003297" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003283" -> "1003281"  [label="AST: "];
"1003283" -> "1003286"  [label="CFG: "];
"1003284" -> "1003283"  [label="AST: "];
"1003286" -> "1003283"  [label="AST: "];
"1003281" -> "1003283"  [label="CFG: "];
"1003283" -> "1003623"  [label="DDG: f->blocksize_1/2"];
"1003283" -> "1003281"  [label="DDG: f->blocksize_1/2"];
"1003286" -> "1003283"  [label="DDG: f->blocksize_1"];
"1003286" -> "1003283"  [label="DDG: 2"];
"1003286" -> "1003290"  [label="CFG: "];
"1003287" -> "1003286"  [label="AST: "];
"1003290" -> "1003286"  [label="AST: "];
"1003286" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003267" -> "1003286"  [label="DDG: f->blocksize_1"];
"1003286" -> "1003340"  [label="DDG: f->blocksize_1"];
"1003267" -> "1003265"  [label="AST: "];
"1003267" -> "1003270"  [label="CFG: "];
"1003268" -> "1003267"  [label="AST: "];
"1003270" -> "1003267"  [label="AST: "];
"1003265" -> "1003267"  [label="CFG: "];
"1003267" -> "1003265"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003267"  [label="DDG: f->blocksize_1"];
"1000354" -> "1003267"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003356"  [label="AST: "];
"1003359" -> "1003363"  [label="CFG: "];
"1003360" -> "1003359"  [label="AST: "];
"1003363" -> "1003359"  [label="AST: "];
"1003356" -> "1003359"  [label="CFG: "];
"1003359" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003356"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003356"  [label="DDG: 2"];
"1003340" -> "1003359"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003388"  [label="DDG: f->blocksize_1"];
"1003340" -> "1003333"  [label="AST: "];
"1003340" -> "1003343"  [label="CFG: "];
"1003341" -> "1003340"  [label="AST: "];
"1003343" -> "1003340"  [label="AST: "];
"1003333" -> "1003340"  [label="CFG: "];
"1003340" -> "1003333"  [label="DDG: f->blocksize_1"];
"1000354" -> "1000334"  [label="AST: "];
"1000354" -> "1000358"  [label="CFG: "];
"1000355" -> "1000354"  [label="AST: "];
"1000358" -> "1000354"  [label="AST: "];
"1000364" -> "1000354"  [label="CFG: "];
"1000354" -> "1003623"  [label="DDG: 1 << log1"];
"1000354" -> "1003623"  [label="DDG: f->blocksize_1"];
"1000358" -> "1000354"  [label="DDG: 1"];
"1000358" -> "1000354"  [label="DDG: log1"];
"1000354" -> "1003388"  [label="DDG: f->blocksize_1"];
"1000358" -> "1000360"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000360" -> "1000358"  [label="AST: "];
"1000358" -> "1003623"  [label="DDG: log1"];
"1000342" -> "1000358"  [label="DDG: log1"];
"1000358" -> "1000375"  [label="DDG: log1"];
"1000342" -> "1000334"  [label="AST: "];
"1000342" -> "1000344"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000344" -> "1000342"  [label="AST: "];
"1000349" -> "1000342"  [label="CFG: "];
"1000342" -> "1003623"  [label="DDG: x >> 4"];
"1000344" -> "1000342"  [label="DDG: x"];
"1000344" -> "1000342"  [label="DDG: 4"];
"1000344" -> "1000346"  [label="CFG: "];
"1000345" -> "1000344"  [label="AST: "];
"1000346" -> "1000344"  [label="AST: "];
"1000344" -> "1003623"  [label="DDG: x"];
"1000339" -> "1000344"  [label="DDG: x"];
"1000339" -> "1000337"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000340" -> "1000339"  [label="AST: "];
"1000341" -> "1000339"  [label="AST: "];
"1000337" -> "1000339"  [label="CFG: "];
"1000339" -> "1000337"  [label="DDG: x"];
"1000339" -> "1000337"  [label="DDG: 15"];
"1000330" -> "1000339"  [label="DDG: x"];
"1000330" -> "1000108"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000331" -> "1000330"  [label="AST: "];
"1000332" -> "1000330"  [label="AST: "];
"1000338" -> "1000330"  [label="CFG: "];
"1000330" -> "1003623"  [label="DDG: get8(f)"];
"1000332" -> "1000330"  [label="DDG: f"];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000328" -> "1000332"  [label="DDG: f"];
"1000107" -> "1000332"  [label="DDG: f"];
"1000332" -> "1000370"  [label="DDG: f"];
"1000332" -> "1000382"  [label="DDG: f"];
"1000332" -> "1000390"  [label="DDG: f"];
"1000332" -> "1000395"  [label="DDG: f"];
"1000328" -> "1000108"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="CFG: "];
"1000328" -> "1003623"  [label="DDG: get32(f)"];
"1000326" -> "1000328"  [label="DDG: f"];
"1000107" -> "1000328"  [label="DDG: f"];
"1000326" -> "1000108"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000324" -> "1000326"  [label="DDG: f"];
"1000107" -> "1000326"  [label="DDG: f"];
"1000324" -> "1000108"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000327" -> "1000324"  [label="CFG: "];
"1000313" -> "1000324"  [label="DDG: f"];
"1000107" -> "1000324"  [label="DDG: f"];
"1000313" -> "1000309"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000309" -> "1000313"  [label="CFG: "];
"1000313" -> "1000309"  [label="DDG: f"];
"1000288" -> "1000313"  [label="DDG: f"];
"1000107" -> "1000313"  [label="DDG: f"];
"1000313" -> "1000321"  [label="DDG: f"];
"1000288" -> "1000284"  [label="AST: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000284" -> "1000288"  [label="CFG: "];
"1000288" -> "1000284"  [label="DDG: f"];
"1000277" -> "1000288"  [label="DDG: f"];
"1000107" -> "1000288"  [label="DDG: f"];
"1000288" -> "1000296"  [label="DDG: f"];
"1000288" -> "1000306"  [label="DDG: f"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="DDG: f"];
"1000259" -> "1000277"  [label="DDG: f"];
"1000107" -> "1000277"  [label="DDG: f"];
"1000277" -> "1000281"  [label="DDG: f"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000262"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1003623"  [label="DDG: header"];
"1000259" -> "1000258"  [label="DDG: f"];
"1000259" -> "1000258"  [label="DDG: header"];
"1000259" -> "1000258"  [label="DDG: 6"];
"1000250" -> "1000259"  [label="DDG: f"];
"1000107" -> "1000259"  [label="DDG: f"];
"1000259" -> "1000264"  [label="DDG: f"];
"1000259" -> "1000269"  [label="DDG: header"];
"1000259" -> "1000272"  [label="DDG: f"];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="DDG: f"];
"1000126" -> "1000250"  [label="DDG: f"];
"1000107" -> "1000250"  [label="DDG: f"];
"1000250" -> "1000254"  [label="DDG: f"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1003623"  [label="DDG: f"];
"1000126" -> "1000125"  [label="DDG: f"];
"1000107" -> "1000126"  [label="DDG: f"];
"1000126" -> "1000138"  [label="DDG: f"];
"1000126" -> "1000148"  [label="DDG: f"];
"1000126" -> "1000158"  [label="DDG: f"];
"1000126" -> "1000168"  [label="DDG: f"];
"1000126" -> "1000190"  [label="DDG: f"];
"1000126" -> "1000240"  [label="DDG: f"];
"1000126" -> "1000245"  [label="DDG: f"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1003623"  [label="DDG: f"];
"1000107" -> "1000138"  [label="DDG: f"];
"1000107" -> "1000148"  [label="DDG: f"];
"1000107" -> "1000158"  [label="DDG: f"];
"1000107" -> "1000168"  [label="DDG: f"];
"1000107" -> "1000190"  [label="DDG: f"];
"1000107" -> "1000232"  [label="DDG: f"];
"1000107" -> "1000236"  [label="DDG: f"];
"1000107" -> "1000240"  [label="DDG: f"];
"1000107" -> "1000245"  [label="DDG: f"];
"1000107" -> "1000254"  [label="DDG: f"];
"1000107" -> "1000264"  [label="DDG: f"];
"1000107" -> "1000272"  [label="DDG: f"];
"1000107" -> "1000281"  [label="DDG: f"];
"1000107" -> "1000296"  [label="DDG: f"];
"1000107" -> "1000306"  [label="DDG: f"];
"1000107" -> "1000321"  [label="DDG: f"];
"1000107" -> "1000370"  [label="DDG: f"];
"1000107" -> "1000382"  [label="DDG: f"];
"1000107" -> "1000390"  [label="DDG: f"];
"1000107" -> "1000395"  [label="DDG: f"];
"1000107" -> "1000403"  [label="DDG: f"];
"1000107" -> "1000408"  [label="DDG: f"];
"1000107" -> "1000414"  [label="DDG: f"];
"1000107" -> "1000422"  [label="DDG: f"];
"1000107" -> "1000424"  [label="DDG: f"];
"1000107" -> "1000435"  [label="DDG: f"];
"1000107" -> "1000440"  [label="DDG: f"];
"1000107" -> "1000445"  [label="DDG: f"];
"1000107" -> "1000465"  [label="DDG: f"];
"1000107" -> "1000469"  [label="DDG: f"];
"1000107" -> "1000485"  [label="DDG: f"];
"1000107" -> "1000492"  [label="DDG: f"];
"1000107" -> "1000500"  [label="DDG: f"];
"1000107" -> "1000510"  [label="DDG: f"];
"1000107" -> "1000528"  [label="DDG: f"];
"1000107" -> "1000573"  [label="DDG: f"];
"1000107" -> "1000577"  [label="DDG: f"];
"1000107" -> "1000585"  [label="DDG: f"];
"1000107" -> "1000590"  [label="DDG: f"];
"1000107" -> "1000598"  [label="DDG: f"];
"1000107" -> "1000603"  [label="DDG: f"];
"1000107" -> "1000611"  [label="DDG: f"];
"1000107" -> "1000616"  [label="DDG: f"];
"1000107" -> "1000625"  [label="DDG: f"];
"1000107" -> "1000632"  [label="DDG: f"];
"1000107" -> "1000637"  [label="DDG: f"];
"1000107" -> "1000646"  [label="DDG: f"];
"1000107" -> "1000657"  [label="DDG: f"];
"1000107" -> "1000667"  [label="DDG: f"];
"1000107" -> "1000683"  [label="DDG: f"];
"1000107" -> "1000694"  [label="DDG: f"];
"1000107" -> "1000708"  [label="DDG: f"];
"1000107" -> "1000717"  [label="DDG: f"];
"1000107" -> "1000731"  [label="DDG: f"];
"1000107" -> "1000753"  [label="DDG: f"];
"1000107" -> "1000769"  [label="DDG: f"];
"1000107" -> "1000804"  [label="DDG: f"];
"1000107" -> "1000816"  [label="DDG: f"];
"1000107" -> "1000829"  [label="DDG: f"];
"1000107" -> "1000875"  [label="DDG: f"];
"1000107" -> "1000887"  [label="DDG: f"];
"1000107" -> "1000898"  [label="DDG: f"];
"1000107" -> "1000960"  [label="DDG: f"];
"1000107" -> "1000974"  [label="DDG: f"];
"1000107" -> "1000992"  [label="DDG: f"];
"1000107" -> "1001009"  [label="DDG: f"];
"1000107" -> "1001020"  [label="DDG: f"];
"1000107" -> "1001029"  [label="DDG: f"];
"1000107" -> "1001046"  [label="DDG: f"];
"1000107" -> "1001053"  [label="DDG: f"];
"1000107" -> "1001066"  [label="DDG: f"];
"1000107" -> "1001113"  [label="DDG: f"];
"1000107" -> "1001118"  [label="DDG: f"];
"1000107" -> "1001132"  [label="DDG: f"];
"1000107" -> "1001152"  [label="DDG: f"];
"1000107" -> "1001161"  [label="DDG: f"];
"1000107" -> "1001181"  [label="DDG: f"];
"1000107" -> "1001206"  [label="DDG: f"];
"1000107" -> "1001216"  [label="DDG: f"];
"1000107" -> "1001230"  [label="DDG: f"];
"1000107" -> "1001243"  [label="DDG: f"];
"1000107" -> "1001249"  [label="DDG: f"];
"1000107" -> "1001259"  [label="DDG: f"];
"1000107" -> "1001275"  [label="DDG: f"];
"1000107" -> "1001283"  [label="DDG: f"];
"1000107" -> "1001291"  [label="DDG: f"];
"1000107" -> "1001299"  [label="DDG: f"];
"1000107" -> "1001340"  [label="DDG: f"];
"1000107" -> "1001347"  [label="DDG: f"];
"1000107" -> "1001362"  [label="DDG: f"];
"1000107" -> "1001382"  [label="DDG: f"];
"1000107" -> "1001392"  [label="DDG: f"];
"1000107" -> "1001404"  [label="DDG: f"];
"1000107" -> "1001446"  [label="DDG: f"];
"1000107" -> "1001469"  [label="DDG: f"];
"1000107" -> "1001492"  [label="DDG: f"];
"1000107" -> "1001504"  [label="DDG: f"];
"1000107" -> "1001625"  [label="DDG: f"];
"1000107" -> "1001637"  [label="DDG: f"];
"1000107" -> "1001656"  [label="DDG: f"];
"1000107" -> "1001664"  [label="DDG: f"];
"1000107" -> "1001683"  [label="DDG: f"];
"1000107" -> "1001695"  [label="DDG: f"];
"1000107" -> "1001743"  [label="DDG: f"];
"1000107" -> "1001754"  [label="DDG: f"];
"1000107" -> "1001756"  [label="DDG: f"];
"1000107" -> "1001761"  [label="DDG: f"];
"1000107" -> "1001778"  [label="DDG: f"];
"1000107" -> "1001786"  [label="DDG: f"];
"1000107" -> "1001794"  [label="DDG: f"];
"1000107" -> "1001804"  [label="DDG: f"];
"1000107" -> "1001822"  [label="DDG: f"];
"1000107" -> "1001843"  [label="DDG: f"];
"1000107" -> "1001855"  [label="DDG: f"];
"1000107" -> "1001882"  [label="DDG: f"];
"1000107" -> "1001889"  [label="DDG: f"];
"1000107" -> "1001896"  [label="DDG: f"];
"1000107" -> "1001903"  [label="DDG: f"];
"1000107" -> "1001910"  [label="DDG: f"];
"1000107" -> "1001918"  [label="DDG: f"];
"1000107" -> "1001939"  [label="DDG: f"];
"1000107" -> "1001943"  [label="DDG: f"];
"1000107" -> "1001969"  [label="DDG: f"];
"1000107" -> "1001990"  [label="DDG: f"];
"1000107" -> "1002025"  [label="DDG: f"];
"1000107" -> "1002035"  [label="DDG: f"];
"1000107" -> "1002051"  [label="DDG: f"];
"1000107" -> "1002065"  [label="DDG: f"];
"1000107" -> "1002093"  [label="DDG: f"];
"1000107" -> "1002110"  [label="DDG: f"];
"1000107" -> "1002118"  [label="DDG: f"];
"1000107" -> "1002126"  [label="DDG: f"];
"1000107" -> "1002194"  [label="DDG: f"];
"1000107" -> "1002324"  [label="DDG: f"];
"1000107" -> "1002334"  [label="DDG: f"];
"1000107" -> "1002353"  [label="DDG: f"];
"1000107" -> "1002398"  [label="DDG: f"];
"1000107" -> "1002410"  [label="DDG: f"];
"1000107" -> "1002417"  [label="DDG: f"];
"1000107" -> "1002424"  [label="DDG: f"];
"1000107" -> "1002436"  [label="DDG: f"];
"1000107" -> "1002444"  [label="DDG: f"];
"1000107" -> "1002453"  [label="DDG: f"];
"1000107" -> "1002461"  [label="DDG: f"];
"1000107" -> "1002473"  [label="DDG: f"];
"1000107" -> "1002495"  [label="DDG: f"];
"1000107" -> "1002499"  [label="DDG: f"];
"1000107" -> "1002504"  [label="DDG: f"];
"1000107" -> "1002516"  [label="DDG: f"];
"1000107" -> "1002535"  [label="DDG: f"];
"1000107" -> "1002577"  [label="DDG: f"];
"1000107" -> "1002593"  [label="DDG: f"];
"1000107" -> "1002614"  [label="DDG: f"];
"1000107" -> "1002637"  [label="DDG: f"];
"1000107" -> "1002702"  [label="DDG: f"];
"1000107" -> "1002723"  [label="DDG: f"];
"1000107" -> "1002761"  [label="DDG: f"];
"1000107" -> "1002771"  [label="DDG: f"];
"1000107" -> "1002789"  [label="DDG: f"];
"1000107" -> "1002829"  [label="DDG: f"];
"1000107" -> "1002837"  [label="DDG: f"];
"1000107" -> "1002846"  [label="DDG: f"];
"1000107" -> "1002864"  [label="DDG: f"];
"1000107" -> "1002868"  [label="DDG: f"];
"1000107" -> "1002876"  [label="DDG: f"];
"1000107" -> "1002898"  [label="DDG: f"];
"1000107" -> "1002907"  [label="DDG: f"];
"1000107" -> "1002931"  [label="DDG: f"];
"1000107" -> "1002947"  [label="DDG: f"];
"1000107" -> "1002968"  [label="DDG: f"];
"1000107" -> "1002984"  [label="DDG: f"];
"1000107" -> "1003004"  [label="DDG: f"];
"1000107" -> "1003014"  [label="DDG: f"];
"1000107" -> "1003018"  [label="DDG: f"];
"1000107" -> "1003048"  [label="DDG: f"];
"1000107" -> "1003064"  [label="DDG: f"];
"1000107" -> "1003100"  [label="DDG: f"];
"1000107" -> "1003109"  [label="DDG: f"];
"1000107" -> "1003118"  [label="DDG: f"];
"1000107" -> "1003132"  [label="DDG: f"];
"1000107" -> "1003146"  [label="DDG: f"];
"1000107" -> "1003154"  [label="DDG: f"];
"1000107" -> "1003182"  [label="DDG: f"];
"1000107" -> "1003189"  [label="DDG: f"];
"1000107" -> "1003196"  [label="DDG: f"];
"1000107" -> "1003203"  [label="DDG: f"];
"1000107" -> "1003213"  [label="DDG: f"];
"1000107" -> "1003223"  [label="DDG: f"];
"1000107" -> "1003235"  [label="DDG: f"];
"1000107" -> "1003238"  [label="DDG: f"];
"1000107" -> "1003265"  [label="DDG: f"];
"1000107" -> "1003281"  [label="DDG: f"];
"1000107" -> "1003299"  [label="DDG: f"];
"1000107" -> "1003330"  [label="DDG: f"];
"1000107" -> "1003354"  [label="DDG: f"];
"1000107" -> "1003373"  [label="DDG: f"];
"1000107" -> "1003378"  [label="DDG: f"];
"1000107" -> "1003388"  [label="DDG: f"];
"1000107" -> "1003612"  [label="DDG: f"];
"1000107" -> "1003619"  [label="DDG: f"];
"1003281" -> "1003279"  [label="AST: "];
"1003282" -> "1003281"  [label="AST: "];
"1003279" -> "1003281"  [label="CFG: "];
"1003281" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003281" -> "1003279"  [label="DDG: f"];
"1003281" -> "1003279"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003265" -> "1003281"  [label="DDG: f"];
"1003281" -> "1003299"  [label="DDG: f"];
"1003279" -> "1003273"  [label="AST: "];
"1003280" -> "1003279"  [label="AST: "];
"1003273" -> "1003279"  [label="CFG: "];
"1003279" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003279" -> "1003273"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003273" -> "1003256"  [label="AST: "];
"1003274" -> "1003273"  [label="AST: "];
"1003294" -> "1003273"  [label="CFG: "];
"1003273" -> "1003623"  [label="DDG: f->previous_window[i]"];
"1003273" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003273" -> "1003315"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003314"  [label="AST: "];
"1003315" -> "1003321"  [label="CFG: "];
"1003316" -> "1003315"  [label="AST: "];
"1003321" -> "1003315"  [label="AST: "];
"1003325" -> "1003315"  [label="CFG: "];
"1003314" -> "1003315"  [label="CFG: "];
"1003315" -> "1003623"  [label="DDG: NULL"];
"1003315" -> "1003623"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003314"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003314"  [label="DDG: NULL"];
"1003307" -> "1003315"  [label="DDG: NULL"];
"1003315" -> "1003322"  [label="DDG: NULL"];
"1003315" -> "1003365"  [label="DDG: NULL"];
"1003314" -> "1003306"  [label="AST: "];
"1003314" -> "1003322"  [label="CFG: "];
"1003322" -> "1003314"  [label="AST: "];
"1003306" -> "1003314"  [label="CFG: "];
"1003314" -> "1003623"  [label="DDG: f->finalY[i] == NULL"];
"1003314" -> "1003623"  [label="DDG: f->previous_window[i] == NULL"];
"1003314" -> "1003306"  [label="DDG: f->previous_window[i] == NULL"];
"1003314" -> "1003306"  [label="DDG: f->finalY[i] == NULL"];
"1003322" -> "1003314"  [label="DDG: f->finalY[i]"];
"1003322" -> "1003314"  [label="DDG: NULL"];
"1003306" -> "1003305"  [label="AST: "];
"1003306" -> "1003307"  [label="CFG: "];
"1003307" -> "1003306"  [label="AST: "];
"1003331" -> "1003306"  [label="CFG: "];
"1003336" -> "1003306"  [label="CFG: "];
"1003306" -> "1003623"  [label="DDG: f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003306" -> "1003623"  [label="DDG: f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003306" -> "1003623"  [label="DDG: f->channel_buffers[i] == NULL"];
"1003307" -> "1003306"  [label="DDG: f->channel_buffers[i]"];
"1003307" -> "1003306"  [label="DDG: NULL"];
"1003322" -> "1003328"  [label="CFG: "];
"1003323" -> "1003322"  [label="AST: "];
"1003328" -> "1003322"  [label="AST: "];
"1003322" -> "1003623"  [label="DDG: NULL"];
"1003322" -> "1003623"  [label="DDG: f->finalY[i]"];
"1003291" -> "1003322"  [label="DDG: f->finalY[i]"];
"1003322" -> "1003365"  [label="DDG: NULL"];
"1003365" -> "1003364"  [label="AST: "];
"1003365" -> "1003371"  [label="CFG: "];
"1003366" -> "1003365"  [label="AST: "];
"1003371" -> "1003365"  [label="AST: "];
"1003374" -> "1003365"  [label="CFG: "];
"1003255" -> "1003365"  [label="CFG: "];
"1003365" -> "1003623"  [label="DDG: f->floor_buffers[i] == NULL"];
"1003365" -> "1003623"  [label="DDG: NULL"];
"1003365" -> "1003623"  [label="DDG: f->floor_buffers[i]"];
"1003365" -> "1003307"  [label="DDG: NULL"];
"1003346" -> "1003365"  [label="DDG: f->floor_buffers[i]"];
"1003307" -> "1003365"  [label="DDG: NULL"];
"1003307" -> "1003313"  [label="CFG: "];
"1003308" -> "1003307"  [label="AST: "];
"1003313" -> "1003307"  [label="AST: "];
"1003318" -> "1003307"  [label="CFG: "];
"1003307" -> "1003623"  [label="DDG: f->channel_buffers[i]"];
"1003307" -> "1003623"  [label="DDG: NULL"];
"1003257" -> "1003307"  [label="DDG: f->channel_buffers[i]"];
"1002783" -> "1003307"  [label="DDG: NULL"];
"1002858" -> "1003307"  [label="DDG: NULL"];
"1003307" -> "1003333"  [label="DDG: f->channel_buffers[i]"];
"1003333" -> "1003256"  [label="AST: "];
"1003334" -> "1003333"  [label="AST: "];
"1003339" -> "1003333"  [label="AST: "];
"1003349" -> "1003333"  [label="CFG: "];
"1003333" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003333" -> "1003623"  [label="DDG: f->channel_buffers[i]"];
"1003333" -> "1003623"  [label="DDG: memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1)"];
"1003299" -> "1003297"  [label="AST: "];
"1003299" -> "1003301"  [label="CFG: "];
"1003300" -> "1003299"  [label="AST: "];
"1003301" -> "1003299"  [label="AST: "];
"1003297" -> "1003299"  [label="CFG: "];
"1003299" -> "1003623"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003299" -> "1003297"  [label="DDG: f"];
"1003299" -> "1003297"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003301" -> "1003299"  [label="DDG: longest_floorlist"];
"1003299" -> "1003330"  [label="DDG: f"];
"1003299" -> "1003354"  [label="DDG: f"];
"1003297" -> "1003291"  [label="AST: "];
"1003298" -> "1003297"  [label="AST: "];
"1003291" -> "1003297"  [label="CFG: "];
"1003297" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003297" -> "1003291"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003291" -> "1003256"  [label="AST: "];
"1003292" -> "1003291"  [label="AST: "];
"1003310" -> "1003291"  [label="CFG: "];
"1003291" -> "1003623"  [label="DDG: f->finalY[i]"];
"1003291" -> "1003623"  [label="DDG: (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003330" -> "1003329"  [label="AST: "];
"1003330" -> "1003332"  [label="CFG: "];
"1003331" -> "1003330"  [label="AST: "];
"1003332" -> "1003330"  [label="AST: "];
"1003329" -> "1003330"  [label="CFG: "];
"1003330" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003330" -> "1003623"  [label="DDG: f"];
"1003330" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003330" -> "1003329"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003329" -> "1003305"  [label="AST: "];
"1003623" -> "1003329"  [label="CFG: "];
"1003329" -> "1003623"  [label="DDG: <RET>"];
"1003354" -> "1003352"  [label="AST: "];
"1003354" -> "1003356"  [label="CFG: "];
"1003355" -> "1003354"  [label="AST: "];
"1003356" -> "1003354"  [label="AST: "];
"1003352" -> "1003354"  [label="CFG: "];
"1003354" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003354" -> "1003265"  [label="DDG: f"];
"1003354" -> "1003352"  [label="DDG: f"];
"1003354" -> "1003352"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003356" -> "1003354"  [label="DDG: f->blocksize_1/2"];
"1003354" -> "1003373"  [label="DDG: f"];
"1003354" -> "1003378"  [label="DDG: f"];
"1003265" -> "1003263"  [label="AST: "];
"1003266" -> "1003265"  [label="AST: "];
"1003263" -> "1003265"  [label="CFG: "];
"1003265" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003265" -> "1003263"  [label="DDG: f"];
"1003265" -> "1003263"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003238" -> "1003265"  [label="DDG: f"];
"1003263" -> "1003257"  [label="AST: "];
"1003264" -> "1003263"  [label="AST: "];
"1003257" -> "1003263"  [label="CFG: "];
"1003263" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003263" -> "1003257"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003257" -> "1003256"  [label="AST: "];
"1003258" -> "1003257"  [label="AST: "];
"1003276" -> "1003257"  [label="CFG: "];
"1003257" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003352" -> "1003346"  [label="AST: "];
"1003353" -> "1003352"  [label="AST: "];
"1003346" -> "1003352"  [label="CFG: "];
"1003352" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003352" -> "1003346"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003346" -> "1003256"  [label="AST: "];
"1003347" -> "1003346"  [label="AST: "];
"1003368" -> "1003346"  [label="CFG: "];
"1003346" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003373" -> "1003372"  [label="AST: "];
"1003373" -> "1003375"  [label="CFG: "];
"1003374" -> "1003373"  [label="AST: "];
"1003375" -> "1003373"  [label="AST: "];
"1003372" -> "1003373"  [label="CFG: "];
"1003373" -> "1003623"  [label="DDG: f"];
"1003373" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003373" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003373" -> "1003372"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003372" -> "1003364"  [label="AST: "];
"1003623" -> "1003372"  [label="CFG: "];
"1003372" -> "1003623"  [label="DDG: <RET>"];
"1003378" -> "1003377"  [label="AST: "];
"1003378" -> "1003381"  [label="CFG: "];
"1003379" -> "1003378"  [label="AST: "];
"1003380" -> "1003378"  [label="AST: "];
"1003381" -> "1003378"  [label="AST: "];
"1003377" -> "1003378"  [label="CFG: "];
"1003378" -> "1003623"  [label="DDG: f"];
"1003378" -> "1003623"  [label="DDG: f->blocksize_0"];
"1003378" -> "1003377"  [label="DDG: f"];
"1003378" -> "1003377"  [label="DDG: 0"];
"1003378" -> "1003377"  [label="DDG: f->blocksize_0"];
"1003238" -> "1003378"  [label="DDG: f"];
"1000347" -> "1003378"  [label="DDG: f->blocksize_0"];
"1003378" -> "1003388"  [label="DDG: f"];
"1003378" -> "1003396"  [label="DDG: f->blocksize_0"];
"1003377" -> "1003376"  [label="AST: "];
"1003385" -> "1003377"  [label="CFG: "];
"1003389" -> "1003377"  [label="CFG: "];
"1003377" -> "1003623"  [label="DDG: !init_blocksize(f, 0, f->blocksize_0)"];
"1003377" -> "1003623"  [label="DDG: init_blocksize(f, 0, f->blocksize_0)"];
"1003388" -> "1003387"  [label="AST: "];
"1003388" -> "1003391"  [label="CFG: "];
"1003389" -> "1003388"  [label="AST: "];
"1003390" -> "1003388"  [label="AST: "];
"1003391" -> "1003388"  [label="AST: "];
"1003387" -> "1003388"  [label="CFG: "];
"1003388" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003623"  [label="DDG: f"];
"1003388" -> "1003387"  [label="DDG: f"];
"1003388" -> "1003387"  [label="DDG: 1"];
"1003388" -> "1003387"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003405"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003454"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003612"  [label="DDG: f"];
"1003388" -> "1003619"  [label="DDG: f"];
"1003387" -> "1003386"  [label="AST: "];
"1003395" -> "1003387"  [label="CFG: "];
"1003399" -> "1003387"  [label="CFG: "];
"1003387" -> "1003623"  [label="DDG: !init_blocksize(f, 1, f->blocksize_1)"];
"1003387" -> "1003623"  [label="DDG: init_blocksize(f, 1, f->blocksize_1)"];
"1003405" -> "1000108"  [label="AST: "];
"1003405" -> "1003411"  [label="CFG: "];
"1003406" -> "1003405"  [label="AST: "];
"1003411" -> "1003405"  [label="AST: "];
"1003418" -> "1003405"  [label="CFG: "];
"1003405" -> "1003623"  [label="DDG: f->blocksize[1]"];
"1003454" -> "1003453"  [label="AST: "];
"1003454" -> "1003458"  [label="CFG: "];
"1003455" -> "1003454"  [label="AST: "];
"1003458" -> "1003454"  [label="AST: "];
"1003460" -> "1003454"  [label="CFG: "];
"1003454" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003454" -> "1003453"  [label="DDG: f->blocksize_1"];
"1003454" -> "1003490"  [label="DDG: f->blocksize_1"];
"1003453" -> "1003451"  [label="AST: "];
"1003453" -> "1003460"  [label="CFG: "];
"1003460" -> "1003453"  [label="AST: "];
"1003451" -> "1003453"  [label="CFG: "];
"1003453" -> "1003623"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003453" -> "1003451"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003453" -> "1003451"  [label="DDG: 1"];
"1003451" -> "1003449"  [label="AST: "];
"1003452" -> "1003451"  [label="AST: "];
"1003465" -> "1003451"  [label="CFG: "];
"1003451" -> "1003623"  [label="DDG: f->blocksize_1 * sizeof(float) >> 1"];
"1003451" -> "1003561"  [label="DDG: imdct_mem"];
"1003561" -> "1003560"  [label="AST: "];
"1003561" -> "1003563"  [label="CFG: "];
"1003562" -> "1003561"  [label="AST: "];
"1003563" -> "1003561"  [label="AST: "];
"1003568" -> "1003561"  [label="CFG: "];
"1003573" -> "1003561"  [label="CFG: "];
"1003561" -> "1003623"  [label="DDG: imdct_mem"];
"1003561" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003623"  [label="DDG: imdct_mem > f->temp_memory_required"];
"1003555" -> "1003561"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003566"  [label="DDG: imdct_mem"];
"1003561" -> "1003594"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003595"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003599"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003560"  [label="AST: "];
"1003566" -> "1003570"  [label="CFG: "];
"1003567" -> "1003566"  [label="AST: "];
"1003570" -> "1003566"  [label="AST: "];
"1003573" -> "1003566"  [label="CFG: "];
"1003566" -> "1003623"  [label="DDG: imdct_mem"];
"1003566" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003594"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003595"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003599"  [label="DDG: f->temp_memory_required"];
"1003594" -> "1003593"  [label="AST: "];
"1003594" -> "1003606"  [label="CFG: "];
"1003595" -> "1003594"  [label="AST: "];
"1003606" -> "1003594"  [label="AST: "];
"1003613" -> "1003594"  [label="CFG: "];
"1003617" -> "1003594"  [label="CFG: "];
"1003594" -> "1003623"  [label="DDG: (unsigned) f->temp_offset"];
"1003594" -> "1003623"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required"];
"1003594" -> "1003623"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset"];
"1003606" -> "1003594"  [label="DDG: f->temp_offset"];
"1003595" -> "1003599"  [label="CFG: "];
"1003596" -> "1003595"  [label="AST: "];
"1003599" -> "1003595"  [label="AST: "];
"1003607" -> "1003595"  [label="CFG: "];
"1003595" -> "1003623"  [label="DDG: sizeof(*f) + f->temp_memory_required"];
"1003595" -> "1003623"  [label="DDG: f->setup_offset"];
"1003599" -> "1003603"  [label="CFG: "];
"1003600" -> "1003599"  [label="AST: "];
"1003603" -> "1003599"  [label="AST: "];
"1003599" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003490" -> "1003488"  [label="AST: "];
"1003490" -> "1003494"  [label="CFG: "];
"1003491" -> "1003490"  [label="AST: "];
"1003494" -> "1003490"  [label="AST: "];
"1003488" -> "1003490"  [label="CFG: "];
"1003490" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003490" -> "1003488"  [label="DDG: f->blocksize_1"];
"1003490" -> "1003488"  [label="DDG: 2"];
"1003488" -> "1003478"  [label="AST: "];
"1003489" -> "1003488"  [label="AST: "];
"1003497" -> "1003488"  [label="CFG: "];
"1003488" -> "1003623"  [label="DDG: f->blocksize_1 / 2"];
"1003488" -> "1003499"  [label="DDG: actual_size"];
"1003499" -> "1003498"  [label="AST: "];
"1003499" -> "1003503"  [label="CFG: "];
"1003500" -> "1003499"  [label="AST: "];
"1003503" -> "1003499"  [label="AST: "];
"1003505" -> "1003499"  [label="CFG: "];
"1003507" -> "1003499"  [label="CFG: "];
"1003499" -> "1003496"  [label="DDG: r->begin"];
"1003499" -> "1003496"  [label="DDG: actual_size"];
"1002428" -> "1003499"  [label="DDG: r->begin"];
"1003499" -> "1003498"  [label="DDG: r->begin"];
"1003499" -> "1003498"  [label="DDG: actual_size"];
"1003499" -> "1003512"  [label="DDG: actual_size"];
"1003496" -> "1003478"  [label="AST: "];
"1003496" -> "1003498"  [label="CFG: "];
"1003497" -> "1003496"  [label="AST: "];
"1003498" -> "1003496"  [label="AST: "];
"1003510" -> "1003496"  [label="CFG: "];
"1003496" -> "1003623"  [label="DDG: r->begin < actual_size ? r->begin : actual_size"];
"1003496" -> "1003524"  [label="DDG: limit_r_begin"];
"1003524" -> "1003522"  [label="AST: "];
"1003524" -> "1003526"  [label="CFG: "];
"1003525" -> "1003524"  [label="AST: "];
"1003526" -> "1003524"  [label="AST: "];
"1003522" -> "1003524"  [label="CFG: "];
"1003524" -> "1003623"  [label="DDG: limit_r_end"];
"1003524" -> "1003623"  [label="DDG: limit_r_begin"];
"1003524" -> "1003522"  [label="DDG: limit_r_end"];
"1003524" -> "1003522"  [label="DDG: limit_r_begin"];
"1003509" -> "1003524"  [label="DDG: limit_r_end"];
"1003522" -> "1003478"  [label="AST: "];
"1003523" -> "1003522"  [label="AST: "];
"1003529" -> "1003522"  [label="CFG: "];
"1003522" -> "1003623"  [label="DDG: limit_r_end - limit_r_begin"];
"1003522" -> "1003530"  [label="DDG: n_read"];
"1003530" -> "1003528"  [label="AST: "];
"1003530" -> "1003532"  [label="CFG: "];
"1003531" -> "1003530"  [label="AST: "];
"1003532" -> "1003530"  [label="AST: "];
"1003528" -> "1003530"  [label="CFG: "];
"1003530" -> "1003623"  [label="DDG: n_read"];
"1003530" -> "1003623"  [label="DDG: r->part_size"];
"1003530" -> "1003528"  [label="DDG: n_read"];
"1003530" -> "1003528"  [label="DDG: r->part_size"];
"1002439" -> "1003530"  [label="DDG: r->part_size"];
"1003528" -> "1003478"  [label="AST: "];
"1003529" -> "1003528"  [label="AST: "];
"1003537" -> "1003528"  [label="CFG: "];
"1003528" -> "1003623"  [label="DDG: n_read / r->part_size"];
"1003528" -> "1003536"  [label="DDG: part_read"];
"1003536" -> "1003535"  [label="AST: "];
"1003536" -> "1003538"  [label="CFG: "];
"1003537" -> "1003536"  [label="AST: "];
"1003538" -> "1003536"  [label="AST: "];
"1003540" -> "1003536"  [label="CFG: "];
"1003477" -> "1003536"  [label="CFG: "];
"1003536" -> "1003623"  [label="DDG: part_read"];
"1003536" -> "1003623"  [label="DDG: part_read > max_part_read"];
"1003539" -> "1003536"  [label="DDG: max_part_read"];
"1003464" -> "1003536"  [label="DDG: max_part_read"];
"1003536" -> "1003539"  [label="DDG: part_read"];
"1003536" -> "1003551"  [label="DDG: max_part_read"];
"1003539" -> "1003535"  [label="AST: "];
"1003539" -> "1003541"  [label="CFG: "];
"1003540" -> "1003539"  [label="AST: "];
"1003541" -> "1003539"  [label="AST: "];
"1003477" -> "1003539"  [label="CFG: "];
"1003539" -> "1003623"  [label="DDG: part_read"];
"1003539" -> "1003551"  [label="DDG: max_part_read"];
"1003551" -> "1003548"  [label="AST: "];
"1003551" -> "1003553"  [label="CFG: "];
"1003552" -> "1003551"  [label="AST: "];
"1003553" -> "1003551"  [label="AST: "];
"1003548" -> "1003551"  [label="CFG: "];
"1003551" -> "1003623"  [label="DDG: max_part_read"];
"1003551" -> "1003544"  [label="DDG: max_part_read"];
"1003551" -> "1003548"  [label="DDG: max_part_read"];
"1003464" -> "1003551"  [label="DDG: max_part_read"];
"1003544" -> "1003542"  [label="AST: "];
"1003544" -> "1003548"  [label="CFG: "];
"1003545" -> "1003544"  [label="AST: "];
"1003548" -> "1003544"  [label="AST: "];
"1003542" -> "1003544"  [label="CFG: "];
"1003544" -> "1003623"  [label="DDG: f->channels"];
"1003544" -> "1003623"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003544" -> "1003542"  [label="DDG: f->channels"];
"1003544" -> "1003542"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003249" -> "1003544"  [label="DDG: f->channels"];
"1003542" -> "1003449"  [label="AST: "];
"1003543" -> "1003542"  [label="AST: "];
"1003557" -> "1003542"  [label="CFG: "];
"1003542" -> "1003623"  [label="DDG: f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003542" -> "1003555"  [label="DDG: classify_mem"];
"1003555" -> "1003449"  [label="AST: "];
"1003555" -> "1003559"  [label="CFG: "];
"1003556" -> "1003555"  [label="AST: "];
"1003559" -> "1003555"  [label="AST: "];
"1003562" -> "1003555"  [label="CFG: "];
"1003555" -> "1003623"  [label="DDG: classify_mem"];
"1003549" -> "1003548"  [label="AST: "];
"1003548" -> "1003623"  [label="DDG: max_part_read * sizeof(uint8 *)"];
"1003498" -> "1003504"  [label="CFG: "];
"1003498" -> "1003507"  [label="CFG: "];
"1003504" -> "1003498"  [label="AST: "];
"1003507" -> "1003498"  [label="AST: "];
"1003498" -> "1003623"  [label="DDG: r->begin < actual_size"];
"1003498" -> "1003623"  [label="DDG: r->begin"];
"1003512" -> "1003511"  [label="AST: "];
"1003512" -> "1003516"  [label="CFG: "];
"1003513" -> "1003512"  [label="AST: "];
"1003516" -> "1003512"  [label="AST: "];
"1003518" -> "1003512"  [label="CFG: "];
"1003520" -> "1003512"  [label="CFG: "];
"1003512" -> "1003509"  [label="DDG: r->end"];
"1003512" -> "1003509"  [label="DDG: actual_size"];
"1002428" -> "1003512"  [label="DDG: r->end"];
"1003512" -> "1003511"  [label="DDG: r->end"];
"1003512" -> "1003511"  [label="DDG: actual_size"];
"1003509" -> "1003478"  [label="AST: "];
"1003509" -> "1003511"  [label="CFG: "];
"1003510" -> "1003509"  [label="AST: "];
"1003511" -> "1003509"  [label="AST: "];
"1003523" -> "1003509"  [label="CFG: "];
"1003509" -> "1003623"  [label="DDG: r->end   < actual_size ? r->end   : actual_size"];
"1003511" -> "1003517"  [label="CFG: "];
"1003511" -> "1003520"  [label="CFG: "];
"1003517" -> "1003511"  [label="AST: "];
"1003520" -> "1003511"  [label="AST: "];
"1003511" -> "1003623"  [label="DDG: r->end"];
"1003511" -> "1003623"  [label="DDG: actual_size"];
"1003511" -> "1003623"  [label="DDG: r->end   < actual_size"];
"1003612" -> "1003611"  [label="AST: "];
"1003612" -> "1003614"  [label="CFG: "];
"1003613" -> "1003612"  [label="AST: "];
"1003614" -> "1003612"  [label="AST: "];
"1003611" -> "1003612"  [label="CFG: "];
"1003612" -> "1003623"  [label="DDG: f"];
"1003612" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003612" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003612" -> "1003611"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003611" -> "1003593"  [label="AST: "];
"1003623" -> "1003611"  [label="CFG: "];
"1003611" -> "1003623"  [label="DDG: <RET>"];
"1003619" -> "1003615"  [label="AST: "];
"1003619" -> "1003620"  [label="CFG: "];
"1003620" -> "1003619"  [label="AST: "];
"1003615" -> "1003619"  [label="CFG: "];
"1003619" -> "1003623"  [label="DDG: f"];
"1003619" -> "1003615"  [label="DDG: f"];
"1003615" -> "1000108"  [label="AST: "];
"1003616" -> "1003615"  [label="AST: "];
"1003622" -> "1003615"  [label="CFG: "];
"1003615" -> "1003623"  [label="DDG: stb_vorbis_get_file_offset(f)"];
"1003615" -> "1003623"  [label="DDG: f->first_audio_page_offset"];
"1003396" -> "1000108"  [label="AST: "];
"1003396" -> "1003402"  [label="CFG: "];
"1003397" -> "1003396"  [label="AST: "];
"1003402" -> "1003396"  [label="AST: "];
"1003408" -> "1003396"  [label="CFG: "];
"1003396" -> "1003623"  [label="DDG: f->blocksize[0]"];
"1003396" -> "1003623"  [label="DDG: f->blocksize_0"];
}
