digraph "0_stb_98fdfc6df88b1e34a736d5e126e6c8139c8de1a6_2@API" {
"1002771" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002761" [label="(Call,get_bits(f,6))"];
"1002702" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1002614" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002516" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1002461" [label="(Call,get_bits(f,8))"];
"1002453" [label="(Call,get_bits(f,6))"];
"1002444" [label="(Call,get_bits(f,24))"];
"1002424" [label="(Call,get_bits(f, 24))"];
"1002417" [label="(Call,get_bits(f, 24))"];
"1002398" [label="(Call,get_bits(f, 16))"];
"1002334" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1002324" [label="(Call,get_bits(f, 6))"];
"1001804" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1001794" [label="(Call,get_bits(f, 6))"];
"1001761" [label="(Call,get_bits(f, 6))"];
"1000510" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000500" [label="(Call,get_bits(f,8))"];
"1000485" [label="(Call,get8_packet(f))"];
"1000465" [label="(Call,get8_packet(f))"];
"1000445" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1000440" [label="(Call,IS_PUSH_MODE(f))"];
"1000435" [label="(Call,start_packet(f))"];
"1000424" [label="(Call,skip(f, len))"];
"1000422" [label="(Call,next_segment(f))"];
"1000414" [label="(Call,start_packet(f))"];
"1000408" [label="(Call,start_page(f))"];
"1000395" [label="(Call,get8(f))"];
"1000332" [label="(Call,get8(f))"];
"1000328" [label="(Call,get32(f))"];
"1000326" [label="(Call,get32(f))"];
"1000324" [label="(Call,get32(f))"];
"1000313" [label="(Call,get32(f))"];
"1000288" [label="(Call,get8(f))"];
"1000277" [label="(Call,get32(f))"];
"1000259" [label="(Call,getn(f, header, 6))"];
"1000250" [label="(Call,get8(f))"];
"1000126" [label="(Call,start_page(f))"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1000420" [label="(Call,len = next_segment(f))"];
"1000512" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1000495" [label="(Call,f->codebook_count = get_bits(f,8) + 1)"];
"1001756" [label="(Call,CHECK(f))"];
"1001754" [label="(Call,CHECK(f))"];
"1001743" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1001382" [label="(Call,get_bits(f, c->value_bits))"];
"1001347" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001299" [label="(Call,get_bits(f,1))"];
"1001291" [label="(Call,get_bits(f, 4))"];
"1001283" [label="(Call,get_bits(f, 32))"];
"1001275" [label="(Call,get_bits(f, 32))"];
"1001249" [label="(Call,get_bits(f, 4))"];
"1001243" [label="(Call,CHECK(f))"];
"1000974" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000960" [label="(Call,CHECK(f))"];
"1000804" [label="(Call,get_bits(f,1))"];
"1000708" [label="(Call,setup_malloc(f, c->entries))"];
"1000667" [label="(Call,get_bits(f,1))"];
"1000657" [label="(Call,get_bits(f,1))"];
"1000646" [label="(Call,get_bits(f, 8))"];
"1000637" [label="(Call,get_bits(f, 8))"];
"1000632" [label="(Call,get_bits(f, 8))"];
"1000625" [label="(Call,get_bits(f, 8))"];
"1000616" [label="(Call,get_bits(f, 8))"];
"1000603" [label="(Call,get_bits(f, 8))"];
"1000590" [label="(Call,get_bits(f, 8))"];
"1000577" [label="(Call,get_bits(f, 8))"];
"1000573" [label="(Call,CHECK(f))"];
"1000640" [label="(Call,c->entries = (get_bits(f, 8)<<16) + (y<<8) + x)"];
"1000645" [label="(Call,get_bits(f, 8)<<16)"];
"1000651" [label="(Call,y<<8)"];
"1000635" [label="(Call,y = get_bits(f, 8))"];
"1000630" [label="(Call,x = get_bits(f, 8))"];
"1000677" [label="(Call,c->entries != 0)"];
"1000694" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1000816" [label="(Call,get_bits(f, 5))"];
"1000753" [label="(Call,get_bits(f, ilog(limit)))"];
"1000731" [label="(Call,get_bits(f,5))"];
"1000755" [label="(Call,ilog(limit))"];
"1000743" [label="(Call,limit = c->entries - current_entry)"];
"1000745" [label="(Call,c->entries - current_entry)"];
"1000736" [label="(Call,current_entry < c->entries)"];
"1000724" [label="(Call,current_entry = 0)"];
"1000778" [label="(Call,current_entry += n)"];
"1000772" [label="(Call,memset(lengths + current_entry, current_length, n))"];
"1000714" [label="(Call,!lengths)"];
"1000823" [label="(Call,lengths[j] == 32)"];
"1000811" [label="(Call,lengths[j] = get_bits(f, 5) + 1)"];
"1000940" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1000945" [label="(Call,lengths[j] != NO_CODE)"];
"1000904" [label="(Call,lengths = c->codeword_lengths)"];
"1000890" [label="(Call,memcpy(c->codeword_lengths, lengths, c->entries))"];
"1000881" [label="(Call,c->codeword_lengths == NULL)"];
"1000869" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000873" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1000875" [label="(Call,setup_malloc(f, c->entries))"];
"1000853" [label="(Call,c->entries > (int) f->setup_temp_memory_required)"];
"1000789" [label="(Call,j < c->entries)"];
"1000794" [label="(Call,++j)"];
"1000786" [label="(Call,j=0)"];
"1000846" [label="(Call,c->entries >> 2)"];
"1000857" [label="(Call,(int) f->setup_temp_memory_required)"];
"1001089" [label="(Call,size > f->setup_temp_memory_required)"];
"1001069" [label="(Call,size = c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1000931" [label="(Call,j < c->entries)"];
"1000936" [label="(Call,++j)"];
"1000928" [label="(Call,j=0)"];
"1000898" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1000834" [label="(Call,lengths[j] = NO_CODE)"];
"1001075" [label="(Call,(sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1000952" [label="(Call,c->sorted_entries = sorted_count)"];
"1000919" [label="(Call,sorted_count = total)"];
"1000561" [label="(Call,total=0)"];
"1000844" [label="(Call,total >= c->entries >> 2)"];
"1000820" [label="(Call,++total)"];
"1000924" [label="(Call,sorted_count = 0)"];
"1000950" [label="(Call,++sorted_count)"];
"1001055" [label="(Call,sizeof(*values) * c->sorted_entries)"];
"1001031" [label="(Call,sizeof(*c->codewords) * c->sorted_entries)"];
"1001009" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1000862" [label="(Call,f->setup_temp_memory_required = c->entries)"];
"1001094" [label="(Call,f->setup_temp_memory_required = size)"];
"1001175" [label="(Call,c->sorted_values == NULL)"];
"1001155" [label="(Call,c->sorted_values    = ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001159" [label="(Call,( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001161" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001132" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001053" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1001029" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001134" [label="(Call,sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001163" [label="(Call,sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001188" [label="(Call,c->sorted_values[-1] = -1)"];
"1001195" [label="(Call,-1)"];
"1001146" [label="(Call,c->sorted_codewords == NULL)"];
"1001126" [label="(Call,c->sorted_codewords = (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001130" [label="(Call,(uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001358" [label="(Call,mults == NULL)"];
"1001573" [label="(Call,mults[off]*c->delta_value)"];
"1001278" [label="(Call,c->delta_value = float32_unpack(get_bits(f, 32)))"];
"1001282" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1001407" [label="(Call,mults[j] = q)"];
"1001388" [label="(Call,q == EOP)"];
"1001380" [label="(Call,q = get_bits(f, c->value_bits))"];
"1001343" [label="(Call,mults = (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001345" [label="(Call,(uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001716" [label="(Call,mults[j] * c->delta_value)"];
"1001677" [label="(Call,c->multiplicands == NULL)"];
"1001728" [label="(Call,c->multiplicands[j] = val)"];
"1001713" [label="(Call,val = mults[j] * c->delta_value + c->minimum_value + last)"];
"1001270" [label="(Call,c->minimum_value = float32_unpack(get_bits(f, 32)))"];
"1001274" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1001653" [label="(Call,last=0)"];
"1001739" [label="(Call,last = val)"];
"1001658" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001662" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001664" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1001656" [label="(Call,CHECK(f))"];
"1001666" [label="(Call,sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001371" [label="(Call,(int) c->lookup_values)"];
"1001349" [label="(Call,sizeof(mults[0]) * c->lookup_values)"];
"1001334" [label="(Call,c->lookup_values == 0)"];
"1001309" [label="(Call,c->lookup_values = lookup1_values(c->entries, c->dimensions))"];
"1001313" [label="(Call,lookup1_values(c->entries, c->dimensions))"];
"1001230" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001216" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1001206" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1001101" [label="(Call,compute_codewords(c, lengths, c->entries, values))"];
"1000566" [label="(Call,*c = f->codebooks+i)"];
"1000531" [label="(Call,memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count))"];
"1000522" [label="(Call,f->codebooks == NULL)"];
"1000504" [label="(Call,f->codebooks = (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000508" [label="(Call,(Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000536" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1000549" [label="(Call,i < f->codebook_count)"];
"1000554" [label="(Call,++i)"];
"1000546" [label="(Call,i=0)"];
"1000976" [label="(Call,sizeof(c->codewords[0]) * c->entries)"];
"1001063" [label="(Call,!values)"];
"1001049" [label="(Call,values = (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1001051" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1000957" [label="(Call,values = NULL)"];
"1001486" [label="(Call,c->multiplicands == NULL)"];
"1001463" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001467" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001469" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1001471" [label="(Call,sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001478" [label="(Call,c->entries        * c->dimensions)"];
"1001326" [label="(Call,c->entries * c->dimensions)"];
"1000672" [label="(Call,c->dimensions == 0)"];
"1000619" [label="(Call,c->dimensions = (get_bits(f, 8)<<8) + x)"];
"1000624" [label="(Call,get_bits(f, 8)<<8)"];
"1000614" [label="(Call,x = get_bits(f, 8))"];
"1001585" [label="(Call,c->multiplicands[j*c->dimensions + k] = val)"];
"1001570" [label="(Call,val = mults[off]*c->delta_value + c->minimum_value + last)"];
"1001427" [label="(Call,last=0)"];
"1001602" [label="(Call,last = val)"];
"1001440" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001444" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001446" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1001448" [label="(Call,sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001455" [label="(Call,c->sorted_entries * c->dimensions)"];
"1001434" [label="(Call,c->sorted_entries == 0)"];
"1001221" [label="(Call,sizeof(*c->codewords)*c->sorted_entries)"];
"1001209" [label="(Call,sizeof(*values)*c->sorted_entries)"];
"1001197" [label="(Call,compute_sorted_huffman(c, lengths, values))"];
"1000987" [label="(Call,!c->codewords)"];
"1000968" [label="(Call,c->codewords = (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000972" [label="(Call,(uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1001041" [label="(Call,!c->codewords)"];
"1001023" [label="(Call,c->codewords = (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001027" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1001236" [label="(Call,c->codewords = NULL)"];
"1001322" [label="(Call,c->lookup_values = c->entries * c->dimensions)"];
"1000690" [label="(Call,lengths = (uint8 *) setup_temp_malloc(f, c->entries))"];
"1000692" [label="(Call,(uint8 *) setup_temp_malloc(f, c->entries))"];
"1000700" [label="(Call,lengths = c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000702" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1000706" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1000728" [label="(Call,current_length = get_bits(f,5) + 1)"];
"1000781" [label="(Call,++current_length)"];
"1000751" [label="(Call,n = get_bits(f, ilog(limit)))"];
"1000762" [label="(Call,(int) c->entries)"];
"1001286" [label="(Call,c->value_bits = get_bits(f, 4)+1)"];
"1001746" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1001704" [label="(Call,(int) c->lookup_values)"];
"1001557" [label="(Call,(z / div) % c->lookup_values)"];
"1001558" [label="(Call,z / div)"];
"1001528" [label="(Call,z = sparse ? c->sorted_values[j] : j)"];
"1001521" [label="(Call,j < len)"];
"1001524" [label="(Call,++j)"];
"1001591" [label="(Call,j*c->dimensions)"];
"1001546" [label="(Call,k < c->dimensions)"];
"1001543" [label="(Call,k=0)"];
"1001551" [label="(Call,++k)"];
"1001606" [label="(Call,k+1 < c->dimensions)"];
"1001518" [label="(Call,j=0)"];
"1001507" [label="(Call,len = sparse ? c->sorted_entries : c->entries)"];
"1001640" [label="(Call,div *= c->lookup_values)"];
"1001619" [label="(Call,(unsigned int) c->lookup_values)"];
"1001615" [label="(Call,div > UINT_MAX / (unsigned int) c->lookup_values)"];
"1001617" [label="(Call,UINT_MAX / (unsigned int) c->lookup_values)"];
"1001539" [label="(Call,div=1)"];
"1001778" [label="(Call,get_bits(f, 16))"];
"1001806" [label="(Call,f->floor_count * sizeof(*f->floor_config))"];
"1001789" [label="(Call,f->floor_count = get_bits(f, 6)+1)"];
"1002194" [label="(Call,get_bits(f, g->rangebits))"];
"1002126" [label="(Call,get_bits(f,4))"];
"1002118" [label="(Call,get_bits(f,2))"];
"1002035" [label="(Call,get_bits(f, 2))"];
"1002025" [label="(Call,get_bits(f, 3))"];
"1002093" [label="(Call,get_bits(f,8))"];
"1002051" [label="(Call,get_bits(f, 8))"];
"1001990" [label="(Call,get_bits(f, 4))"];
"1001969" [label="(Call,get_bits(f, 5))"];
"1001843" [label="(Call,get_bits(f, 16))"];
"1002142" [label="(Call,1 << g->rangebits)"];
"1002122" [label="(Call,g->rangebits = get_bits(f,4))"];
"1002336" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1002319" [label="(Call,f->residue_count = get_bits(f, 6)+1)"];
"1002504" [label="(Call,get_bits(f,5))"];
"1002499" [label="(Call,get_bits(f,1))"];
"1002495" [label="(Call,get_bits(f,3))"];
"1002518" [label="(Call,sizeof(r->residue_books[0]) * r->classifications)"];
"1002480" [label="(Call,j < r->classifications)"];
"1002477" [label="(Call,j=0)"];
"1002485" [label="(Call,++j)"];
"1002448" [label="(Call,r->classifications = get_bits(f,6)+1)"];
"1002577" [label="(Call,get_bits(f, 8))"];
"1002616" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002664" [label="(Call,j < f->codebooks[r->classbook].entries)"];
"1002675" [label="(Call,++j)"];
"1002661" [label="(Call,j=0)"];
"1002645" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1002704" [label="(Call,sizeof(r->classdata[j][0]) * classwords)"];
"1002679" [label="(Call,classwords = f->codebooks[r->classbook].dimensions)"];
"1002773" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1002756" [label="(Call,f->mapping_count = get_bits(f,6)+1)"];
"1002769" [label="(Call,(Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002765" [label="(Call,f->mapping = (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002783" [label="(Call,f->mapping == NULL)"];
"1002792" [label="(Call,memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping)))"];
"1002819" [label="(Call,*m = f->mapping + i)"];
"1002821" [label="(Call,f->mapping + i)"];
"1002858" [label="(Call,m->chan == NULL)"];
"1003307" [label="(Call,f->channel_buffers[i] == NULL)"];
"1003306" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003315" [label="(Call,f->previous_window[i] == NULL)"];
"1003314" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003322" [label="(Call,f->finalY[i] == NULL)"];
"1003365" [label="(Call,f->floor_buffers[i] == NULL)"];
"1003333" [label="(Call,memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1))"];
"1002789" [label="(Call,error(f, VORBIS_outofmem))"];
"1002788" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002829" [label="(Call,get_bits(f,16))"];
"1002827" [label="(Call,mapping_type = get_bits(f,16))"];
"1002833" [label="(Call,mapping_type != 0)"];
"1002837" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002836" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002846" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002844" [label="(Call,(MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002840" [label="(Call,m->chan = (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002864" [label="(Call,error(f, VORBIS_outofmem))"];
"1002863" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002868" [label="(Call,get_bits(f,1))"];
"1002876" [label="(Call,get_bits(f,4))"];
"1002871" [label="(Call,m->submaps = get_bits(f,4)+1)"];
"1002887" [label="(Call,m->submaps > max_submaps)"];
"1002892" [label="(Call,max_submaps = m->submaps)"];
"1003022" [label="(Call,m->submaps > 1)"];
"1003052" [label="(Call,m->chan[j].mux >= m->submaps)"];
"1003092" [label="(Call,j < m->submaps)"];
"1003097" [label="(Call,++j)"];
"1002875" [label="(Call,get_bits(f,4)+1)"];
"1002898" [label="(Call,get_bits(f,1))"];
"1002907" [label="(Call,get_bits(f,8))"];
"1002902" [label="(Call,m->coupling_steps = get_bits(f,8)+1)"];
"1002915" [label="(Call,k < m->coupling_steps)"];
"1002920" [label="(Call,++k)"];
"1002906" [label="(Call,get_bits(f,8)+1)"];
"1002931" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1002923" [label="(Call,m->chan[k].magnitude = get_bits(f, ilog(f->channels-1)))"];
"1002956" [label="(Call,m->chan[k].magnitude >= f->channels)"];
"1002972" [label="(Call,m->chan[k].angle     >= f->channels)"];
"1002934" [label="(Call,f->channels-1)"];
"1002933" [label="(Call,ilog(f->channels-1))"];
"1002950" [label="(Call,f->channels-1)"];
"1002949" [label="(Call,ilog(f->channels-1))"];
"1002947" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1002939" [label="(Call,m->chan[k].angle = get_bits(f, ilog(f->channels-1)))"];
"1002968" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002967" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002984" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002983" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003004" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003003" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003014" [label="(Call,get_bits(f,2))"];
"1003018" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003017" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003048" [label="(Call,get_bits(f, 4))"];
"1003040" [label="(Call,m->chan[j].mux = get_bits(f, 4))"];
"1003064" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003063" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003100" [label="(Call,get_bits(f,8))"];
"1003109" [label="(Call,get_bits(f,8))"];
"1003103" [label="(Call,m->submap_floor[j] = get_bits(f,8))"];
"1003122" [label="(Call,m->submap_floor[j] >= f->floor_count)"];
"1003118" [label="(Call,get_bits(f,8))"];
"1003112" [label="(Call,m->submap_residue[j] = get_bits(f,8))"];
"1003136" [label="(Call,m->submap_residue[j] >= f->residue_count)"];
"1003471" [label="(Call,i < f->residue_count)"];
"1003476" [label="(Call,++i)"];
"1003480" [label="(Call,*r = f->residue_config + i)"];
"1003482" [label="(Call,f->residue_config + i)"];
"1003132" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003131" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003146" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003145" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003154" [label="(Call,get_bits(f, 6))"];
"1003149" [label="(Call,f->mode_count = get_bits(f, 6)+1)"];
"1003162" [label="(Call,i < f->mode_count)"];
"1003167" [label="(Call,++i)"];
"1003171" [label="(Call,*m = f->mode_config+i)"];
"1003173" [label="(Call,f->mode_config+i)"];
"1003153" [label="(Call,get_bits(f, 6)+1)"];
"1003182" [label="(Call,get_bits(f,1))"];
"1003178" [label="(Call,m->blockflag = get_bits(f,1))"];
"1003189" [label="(Call,get_bits(f,16))"];
"1003185" [label="(Call,m->windowtype = get_bits(f,16))"];
"1003207" [label="(Call,m->windowtype != 0)"];
"1003196" [label="(Call,get_bits(f,16))"];
"1003192" [label="(Call,m->transformtype = get_bits(f,16))"];
"1003217" [label="(Call,m->transformtype != 0)"];
"1003203" [label="(Call,get_bits(f,8))"];
"1003199" [label="(Call,m->mapping = get_bits(f,8))"];
"1003227" [label="(Call,m->mapping >= f->mapping_count)"];
"1003213" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003212" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003223" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003222" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003235" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003234" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003238" [label="(Call,flush_packet(f))"];
"1003265" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003263" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003257" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1003281" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003279" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003273" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003299" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003297" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003291" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1003330" [label="(Call,error(f, VORBIS_outofmem))"];
"1003329" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003354" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003352" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003346" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003373" [label="(Call,error(f, VORBIS_outofmem))"];
"1003372" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003378" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1003377" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003388" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1003387" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003405" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1003454" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1003453" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1003451" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003561" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1003566" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003594" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1003595" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1003599" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1003490" [label="(Call,f->blocksize_1 / 2)"];
"1003488" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1003499" [label="(Call,r->begin < actual_size)"];
"1003496" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003524" [label="(Call,limit_r_end - limit_r_begin)"];
"1003522" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1003530" [label="(Call,n_read / r->part_size)"];
"1003528" [label="(Call,part_read = n_read / r->part_size)"];
"1003536" [label="(Call,part_read > max_part_read)"];
"1003539" [label="(Call,max_part_read = part_read)"];
"1003551" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1003544" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003542" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1003555" [label="(Call,f->temp_memory_required = classify_mem)"];
"1003548" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003498" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003512" [label="(Call,r->end   < actual_size)"];
"1003509" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1003511" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1003612" [label="(Call,error(f, VORBIS_outofmem))"];
"1003611" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1003619" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1003615" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003396" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1002988" [label="(Call,m->chan[k].magnitude == m->chan[k].angle)"];
"1003032" [label="(Call,j < f->channels)"];
"1002848" [label="(Call,f->channels * sizeof(*m->chan))"];
"1003072" [label="(Call,j < f->channels)"];
"1003077" [label="(Call,++j)"];
"1003249" [label="(Call,i < f->channels)"];
"1003254" [label="(Call,++i)"];
"1003037" [label="(Call,++j)"];
"1002110" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002498" [label="(ControlStructure,if (get_bits(f,1)))"];
"1002476" [label="(ControlStructure,for (j=0; j < r->classifications; ++j))"];
"1001518" [label="(Call,j=0)"];
"1003196" [label="(Call,get_bits(f,16))"];
"1000269" [label="(Call,vorbis_validate(header))"];
"1000895" [label="(Call,c->entries)"];
"1001333" [label="(ControlStructure,if (c->lookup_values == 0))"];
"1000762" [label="(Call,(int) c->entries)"];
"1003291" [label="(Call,f->finalY[i]          = (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1001177" [label="(Identifier,c)"];
"1000495" [label="(Call,f->codebook_count = get_bits(f,8) + 1)"];
"1003510" [label="(Identifier,limit_r_end)"];
"1003544" [label="(Call,f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1001408" [label="(Call,mults[j])"];
"1000278" [label="(Identifier,f)"];
"1002337" [label="(Call,f->residue_count)"];
"1000894" [label="(Identifier,lengths)"];
"1002420" [label="(Call,r->end = get_bits(f, 24))"];
"1000618" [label="(Literal,8)"];
"1001404" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001343" [label="(Call,mults = (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1002833" [label="(Call,mapping_type != 0)"];
"1000877" [label="(Call,c->entries)"];
"1003620" [label="(Identifier,f)"];
"1003211" [label="(Literal,0)"];
"1002846" [label="(Call,setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1001700" [label="(Identifier,j)"];
"1000819" [label="(Literal,1)"];
"1002640" [label="(Call,memset(r->classdata, 0, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002493" [label="(Call,low_bits=get_bits(f,3))"];
"1003255" [label="(Identifier,i)"];
"1001085" [label="(Call,c->sorted_entries)"];
"1000529" [label="(Identifier,f)"];
"1001741" [label="(Identifier,val)"];
"1002858" [label="(Call,m->chan == NULL)"];
"1000929" [label="(Identifier,j)"];
"1001395" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1003015" [label="(Identifier,f)"];
"1001455" [label="(Call,c->sorted_entries * c->dimensions)"];
"1002320" [label="(Call,f->residue_count)"];
"1001758" [label="(Call,x = get_bits(f, 6) + 1)"];
"1001806" [label="(Call,f->floor_count * sizeof(*f->floor_config))"];
"1002899" [label="(Identifier,f)"];
"1000650" [label="(Call,(y<<8) + x)"];
"1001047" [label="(Identifier,f)"];
"1003044" [label="(Identifier,m)"];
"1000923" [label="(Block,)"];
"1000988" [label="(Call,c->codewords)"];
"1001666" [label="(Call,sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1003128" [label="(Call,f->floor_count)"];
"1000260" [label="(Identifier,f)"];
"1002934" [label="(Call,f->channels-1)"];
"1000630" [label="(Call,x = get_bits(f, 8))"];
"1000898" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001159" [label="(Call,( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001710" [label="(Identifier,j)"];
"1000563" [label="(Literal,0)"];
"1000148" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1001796" [label="(Literal,6)"];
"1003137" [label="(Call,m->submap_residue[j])"];
"1003199" [label="(Call,m->mapping = get_bits(f,8))"];
"1000975" [label="(Identifier,f)"];
"1001278" [label="(Call,c->delta_value = float32_unpack(get_bits(f, 32)))"];
"1001336" [label="(Identifier,c)"];
"1001970" [label="(Identifier,f)"];
"1002723" [label="(Call,error(f, VORBIS_outofmem))"];
"1003276" [label="(Identifier,f)"];
"1002531" [label="(Identifier,r)"];
"1002765" [label="(Call,f->mapping = (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1000258" [label="(Call,!getn(f, header, 6))"];
"1001251" [label="(Literal,4)"];
"1002865" [label="(Identifier,f)"];
"1000276" [label="(Call,get32(f) != 0)"];
"1000726" [label="(Literal,0)"];
"1000852" [label="(ControlStructure,if (c->entries > (int) f->setup_temp_memory_required))"];
"1001804" [label="(Call,setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1003339" [label="(Literal,0)"];
"1000996" [label="(Block,)"];
"1001186" [label="(Identifier,c)"];
"1000673" [label="(Call,c->dimensions)"];
"1003088" [label="(ControlStructure,for (j=0; j < m->submaps; ++j))"];
"1003051" [label="(ControlStructure,if (m->chan[j].mux >= m->submaps))"];
"1002502" [label="(Call,high_bits = get_bits(f,5))"];
"1001651" [label="(Block,)"];
"1001617" [label="(Call,UINT_MAX / (unsigned int) c->lookup_values)"];
"1001175" [label="(Call,c->sorted_values == NULL)"];
"1000625" [label="(Call,get_bits(f, 8))"];
"1003366" [label="(Call,f->floor_buffers[i])"];
"1001678" [label="(Call,c->multiplicands)"];
"1001490" [label="(Identifier,NULL)"];
"1001341" [label="(Identifier,f)"];
"1002500" [label="(Identifier,f)"];
"1001357" [label="(ControlStructure,if (mults == NULL))"];
"1001294" [label="(Literal,1)"];
"1003158" [label="(ControlStructure,for (i=0; i < f->mode_count; ++i))"];
"1001816" [label="(Call,f->floor_config == NULL)"];
"1000547" [label="(Identifier,i)"];
"1001101" [label="(Call,compute_codewords(c, lengths, c->entries, values))"];
"1000518" [label="(Call,f->codebook_count)"];
"1001310" [label="(Call,c->lookup_values)"];
"1001807" [label="(Call,f->floor_count)"];
"1000309" [label="(Call,f->sample_rate = get32(f))"];
"1000127" [label="(Identifier,f)"];
"1000760" [label="(Identifier,current_entry)"];
"1003032" [label="(Call,j < f->channels)"];
"1001779" [label="(Identifier,f)"];
"1001431" [label="(Identifier,sparse)"];
"1002615" [label="(Identifier,f)"];
"1001182" [label="(Identifier,f)"];
"1001947" [label="(Block,)"];
"1002950" [label="(Call,f->channels-1)"];
"1000626" [label="(Identifier,f)"];
"1000501" [label="(Identifier,f)"];
"1003453" [label="(Call,f->blocksize_1 * sizeof(float) >> 1)"];
"1001051" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002816" [label="(Identifier,i)"];
"1000790" [label="(Identifier,j)"];
"1002766" [label="(Call,f->mapping)"];
"1002916" [label="(Identifier,k)"];
"1000822" [label="(ControlStructure,if (lengths[j] == 32))"];
"1001232" [label="(Identifier,lengths)"];
"1001363" [label="(Identifier,f)"];
"1001572" [label="(Call,mults[off]*c->delta_value + c->minimum_value + last)"];
"1001762" [label="(Identifier,f)"];
"1000261" [label="(Identifier,header)"];
"1003571" [label="(Call,f->first_decode = TRUE)"];
"1001288" [label="(Identifier,c)"];
"1001213" [label="(Call,c->sorted_entries)"];
"1001598" [label="(ControlStructure,if (c->sequence_p))"];
"1000526" [label="(Identifier,NULL)"];
"1000942" [label="(Identifier,lengths)"];
"1002992" [label="(Identifier,m)"];
"1003171" [label="(Call,*m = f->mode_config+i)"];
"1000686" [label="(ControlStructure,if (c->sparse))"];
"1002519" [label="(Call,sizeof(r->residue_books[0]))"];
"1001161" [label="(Call,setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1001695" [label="(Call,error(f, VORBIS_outofmem))"];
"1001539" [label="(Call,div=1)"];
"1000546" [label="(Call,i=0)"];
"1000657" [label="(Call,get_bits(f,1))"];
"1001384" [label="(Call,c->value_bits)"];
"1000512" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1001010" [label="(Identifier,f)"];
"1000651" [label="(Call,y<<8)"];
"1002503" [label="(Identifier,high_bits)"];
"1001558" [label="(Call,z / div)"];
"1003257" [label="(Call,f->channel_buffers[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1002614" [label="(Call,setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1002327" [label="(Literal,1)"];
"1000639" [label="(Literal,8)"];
"1003551" [label="(Call,max_part_read * sizeof(uint8 *))"];
"1002325" [label="(Identifier,f)"];
"1002029" [label="(Call,g->class_subclasses[j] = get_bits(f, 2))"];
"1003242" [label="(Identifier,f)"];
"1000823" [label="(Call,lengths[j] == 32)"];
"1000648" [label="(Literal,8)"];
"1001362" [label="(Call,error(f, VORBIS_outofmem))"];
"1003102" [label="(Literal,8)"];
"1000496" [label="(Call,f->codebook_count)"];
"1003064" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002486" [label="(Identifier,j)"];
"1003193" [label="(Call,m->transformtype)"];
"1003149" [label="(Call,f->mode_count = get_bits(f, 6)+1)"];
"1003189" [label="(Call,get_bits(f,16))"];
"1002772" [label="(Identifier,f)"];
"1003387" [label="(Call,!init_blocksize(f, 1, f->blocksize_1))"];
"1003223" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001444" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1002375" [label="(Call,i < f->residue_count)"];
"1003113" [label="(Call,m->submap_residue[j])"];
"1003481" [label="(Identifier,r)"];
"1002902" [label="(Call,m->coupling_steps = get_bits(f,8)+1)"];
"1001524" [label="(Call,++j)"];
"1002479" [label="(Literal,0)"];
"1003172" [label="(Identifier,m)"];
"1002663" [label="(Literal,0)"];
"1001523" [label="(Identifier,len)"];
"1003355" [label="(Identifier,f)"];
"1000679" [label="(Identifier,c)"];
"1001560" [label="(Identifier,div)"];
"1001679" [label="(Identifier,c)"];
"1001544" [label="(Identifier,k)"];
"1003037" [label="(Call,++j)"];
"1000926" [label="(Literal,0)"];
"1001037" [label="(Call,c->sorted_entries)"];
"1001615" [label="(Call,div > UINT_MAX / (unsigned int) c->lookup_values)"];
"1003530" [label="(Call,n_read / r->part_size)"];
"1001210" [label="(Call,sizeof(*values))"];
"1000499" [label="(Call,get_bits(f,8) + 1)"];
"1003038" [label="(Identifier,j)"];
"1002501" [label="(Literal,1)"];
"1001249" [label="(Call,get_bits(f, 4))"];
"1002860" [label="(Identifier,m)"];
"1000259" [label="(Call,getn(f, header, 6))"];
"1002892" [label="(Call,max_submaps = m->submaps)"];
"1000883" [label="(Identifier,c)"];
"1001713" [label="(Call,val = mults[j] * c->delta_value + c->minimum_value + last)"];
"1000743" [label="(Call,limit = c->entries - current_entry)"];
"1001731" [label="(Identifier,c)"];
"1003132" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001095" [label="(Call,f->setup_temp_memory_required)"];
"1001439" [label="(ControlStructure,goto skip;)"];
"1003104" [label="(Call,m->submap_floor[j])"];
"1001011" [label="(Call,c->sorted_entries)"];
"1001606" [label="(Call,k+1 < c->dimensions)"];
"1002956" [label="(Call,m->chan[k].magnitude >= f->channels)"];
"1001522" [label="(Identifier,j)"];
"1003518" [label="(Identifier,r)"];
"1000462" [label="(Call,crc32_init())"];
"1000788" [label="(Literal,0)"];
"1000621" [label="(Identifier,c)"];
"1002676" [label="(Identifier,j)"];
"1002691" [label="(Call,temp = j)"];
"1003249" [label="(Call,i < f->channels)"];
"1001094" [label="(Call,f->setup_temp_memory_required = size)"];
"1003504" [label="(Call,r->begin)"];
"1001046" [label="(Call,error(f, VORBIS_outofmem))"];
"1003606" [label="(Call,(unsigned) f->temp_offset)"];
"1001789" [label="(Call,f->floor_count = get_bits(f, 6)+1)"];
"1001280" [label="(Identifier,c)"];
"1001542" [label="(ControlStructure,for (k=0; k < c->dimensions; ++k))"];
"1000708" [label="(Call,setup_malloc(f, c->entries))"];
"1001070" [label="(Identifier,size)"];
"1000288" [label="(Call,get8(f))"];
"1000880" [label="(ControlStructure,if (c->codeword_lengths == NULL))"];
"1002428" [label="(Call,r->end < r->begin)"];
"1000683" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001090" [label="(Identifier,size)"];
"1003354" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1001547" [label="(Identifier,k)"];
"1002052" [label="(Identifier,f)"];
"1003617" [label="(Identifier,f)"];
"1000827" [label="(Literal,32)"];
"1003621" [label="(Return,return TRUE;)"];
"1002756" [label="(Call,f->mapping_count = get_bits(f,6)+1)"];
"1000778" [label="(Call,current_entry += n)"];
"1003098" [label="(Identifier,j)"];
"1002679" [label="(Call,classwords = f->codebooks[r->classbook].dimensions)"];
"1003573" [label="(Identifier,f)"];
"1002664" [label="(Call,j < f->codebooks[r->classbook].entries)"];
"1001066" [label="(Call,error(f, VORBIS_outofmem))"];
"1002400" [label="(Literal,16)"];
"1003496" [label="(Call,limit_r_begin = r->begin < actual_size ? r->begin : actual_size)"];
"1003163" [label="(Identifier,i)"];
"1000706" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1001504" [label="(Call,error(f, VORBIS_outofmem))"];
"1000655" [label="(Call,ordered = get_bits(f,1))"];
"1000949" [label="(Identifier,NO_CODE)"];
"1002461" [label="(Call,get_bits(f,8))"];
"1002908" [label="(Identifier,f)"];
"1003198" [label="(Literal,16)"];
"1001145" [label="(ControlStructure,if (c->sorted_codewords == NULL))"];
"1003380" [label="(Literal,0)"];
"1001359" [label="(Identifier,mults)"];
"1000691" [label="(Identifier,lengths)"];
"1003239" [label="(Identifier,f)"];
"1000396" [label="(Identifier,f)"];
"1000669" [label="(Literal,1)"];
"1000578" [label="(Identifier,f)"];
"1001610" [label="(Call,c->dimensions)"];
"1003477" [label="(Identifier,i)"];
"1001492" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1002906" [label="(Call,get_bits(f,8)+1)"];
"1003097" [label="(Call,++j)"];
"1002985" [label="(Identifier,f)"];
"1001157" [label="(Identifier,c)"];
"1002677" [label="(Block,)"];
"1001625" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1001735" [label="(ControlStructure,if (c->sequence_p))"];
"1002713" [label="(Identifier,classwords)"];
"1003155" [label="(Identifier,f)"];
"1001530" [label="(Call,sparse ? c->sorted_values[j] : j)"];
"1003238" [label="(Call,flush_packet(f))"];
"1001283" [label="(Call,get_bits(f, 32))"];
"1000108" [label="(Block,)"];
"1003090" [label="(Identifier,j)"];
"1001040" [label="(ControlStructure,if (!c->codewords))"];
"1003560" [label="(ControlStructure,if (imdct_mem > f->temp_memory_required))"];
"1002497" [label="(Literal,3)"];
"1000486" [label="(Identifier,f)"];
"1003377" [label="(Call,!init_blocksize(f, 0, f->blocksize_0))"];
"1003322" [label="(Call,f->finalY[i] == NULL)"];
"1000605" [label="(Literal,8)"];
"1003229" [label="(Identifier,m)"];
"1002875" [label="(Call,get_bits(f,4)+1)"];
"1001387" [label="(ControlStructure,if (q == EOP))"];
"1000951" [label="(Identifier,sorted_count)"];
"1003349" [label="(Identifier,f)"];
"1003405" [label="(Call,f->blocksize[1] = f->blocksize_1)"];
"1002920" [label="(Call,++k)"];
"1002971" [label="(ControlStructure,if (m->chan[k].angle     >= f->channels))"];
"1000445" [label="(Call,is_whole_packet_present(f, TRUE))"];
"1002964" [label="(Call,f->channels)"];
"1001613" [label="(Block,)"];
"1003603" [label="(Call,f->temp_memory_required)"];
"1001059" [label="(Call,c->sorted_entries)"];
"1002447" [label="(Literal,1)"];
"1002909" [label="(Literal,8)"];
"1000676" [label="(Literal,0)"];
"1002035" [label="(Call,get_bits(f, 2))"];
"1000325" [label="(Identifier,f)"];
"1000925" [label="(Identifier,sorted_count)"];
"1002873" [label="(Identifier,m)"];
"1002789" [label="(Call,error(f, VORBIS_outofmem))"];
"1000703" [label="(Call,c->codeword_lengths)"];
"1001002" [label="(Block,)"];
"1001155" [label="(Call,c->sorted_values    = ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1)))"];
"1002794" [label="(Identifier,f)"];
"1003306" [label="(Call,f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1000466" [label="(Identifier,f)"];
"1003449" [label="(Block,)"];
"1002870" [label="(Literal,1)"];
"1003106" [label="(Identifier,m)"];
"1000918" [label="(Block,)"];
"1002128" [label="(Literal,4)"];
"1003365" [label="(Call,f->floor_buffers[i] == NULL)"];
"1002660" [label="(ControlStructure,for (j=0; j < f->codebooks[r->classbook].entries; ++j))"];
"1000737" [label="(Identifier,current_entry)"];
"1003103" [label="(Call,m->submap_floor[j] = get_bits(f,8))"];
"1002910" [label="(Literal,1)"];
"1003494" [label="(Literal,2)"];
"1003452" [label="(Identifier,imdct_mem)"];
"1002448" [label="(Call,r->classifications = get_bits(f,6)+1)"];
"1000815" [label="(Call,get_bits(f, 5) + 1)"];
"1001677" [label="(Call,c->multiplicands == NULL)"];
"1000786" [label="(Call,j=0)"];
"1003078" [label="(Identifier,j)"];
"1002126" [label="(Call,get_bits(f,4))"];
"1002382" [label="(Block,)"];
"1001557" [label="(Call,(z / div) % c->lookup_values)"];
"1003364" [label="(ControlStructure,if (f->floor_buffers[i] == NULL))"];
"1003570" [label="(Identifier,imdct_mem)"];
"1001301" [label="(Literal,1)"];
"1001279" [label="(Call,c->delta_value)"];
"1001024" [label="(Call,c->codewords)"];
"1003177" [label="(Identifier,i)"];
"1001441" [label="(Call,c->multiplicands)"];
"1003005" [label="(Identifier,f)"];
"1002680" [label="(Identifier,classwords)"];
"1001528" [label="(Call,z = sparse ? c->sorted_values[j] : j)"];
"1003489" [label="(Identifier,actual_size)"];
"1000664" [label="(Call,ordered ? 0 : get_bits(f,1))"];
"1000721" [label="(Identifier,ordered)"];
"1003204" [label="(Identifier,f)"];
"1002822" [label="(Call,f->mapping)"];
"1003221" [label="(Literal,0)"];
"1000492" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001438" [label="(Literal,0)"];
"1001164" [label="(Call,sizeof(*c->sorted_values   ))"];
"1001508" [label="(Identifier,len)"];
"1001604" [label="(Identifier,val)"];
"1003340" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1000733" [label="(Literal,5)"];
"1002579" [label="(Literal,8)"];
"1001042" [label="(Call,c->codewords)"];
"1001247" [label="(Identifier,c)"];
"1002849" [label="(Call,f->channels)"];
"1002891" [label="(Identifier,max_submaps)"];
"1002943" [label="(Identifier,m)"];
"1001845" [label="(Literal,16)"];
"1001723" [label="(Call,c->minimum_value + last)"];
"1001027" [label="(Call,(uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1000296" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000598" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000415" [label="(Identifier,f)"];
"1000562" [label="(Identifier,total)"];
"1002462" [label="(Identifier,f)"];
"1003006" [label="(Identifier,VORBIS_invalid_setup)"];
"1000279" [label="(Literal,0)"];
"1000579" [label="(Literal,8)"];
"1001314" [label="(Call,c->entries)"];
"1001664" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003060" [label="(Call,m->submaps)"];
"1002842" [label="(Identifier,m)"];
"1003209" [label="(Identifier,m)"];
"1000510" [label="(Call,setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000467" [label="(Identifier,VORBIS_packet_setup)"];
"1000950" [label="(Call,++sorted_count)"];
"1003218" [label="(Call,m->transformtype)"];
"1003559" [label="(Identifier,classify_mem)"];
"1001432" [label="(Block,)"];
"1000421" [label="(Identifier,len)"];
"1001150" [label="(Identifier,NULL)"];
"1003376" [label="(ControlStructure,if (!init_blocksize(f, 0, f->blocksize_0)))"];
"1000810" [label="(Block,)"];
"1001049" [label="(Call,values = (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1002844" [label="(Call,(MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002645" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1000568" [label="(Call,f->codebooks+i)"];
"1001381" [label="(Identifier,q)"];
"1003539" [label="(Call,max_part_read = part_read)"];
"1003203" [label="(Call,get_bits(f,8))"];
"1000284" [label="(Call,f->channels = get8(f))"];
"1000347" [label="(Call,f->blocksize_0 = 1 << log0)"];
"1000554" [label="(Call,++i)"];
"1003418" [label="(Identifier,integer_divide_table)"];
"1001746" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1000921" [label="(Identifier,total)"];
"1000690" [label="(Call,lengths = (uint8 *) setup_temp_malloc(f, c->entries))"];
"1000521" [label="(ControlStructure,if (f->codebooks == NULL))"];
"1001616" [label="(Identifier,div)"];
"1002646" [label="(Call,sizeof(*r->classdata))"];
"1003517" [label="(Call,r->end)"];
"1001660" [label="(Identifier,c)"];
"1000930" [label="(Literal,0)"];
"1000628" [label="(Literal,8)"];
"1003568" [label="(Identifier,f)"];
"1003356" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1001991" [label="(Identifier,f)"];
"1002665" [label="(Identifier,j)"];
"1001744" [label="(Identifier,f)"];
"1003471" [label="(Call,i < f->residue_count)"];
"1000393" [label="(Call,x = get8(f))"];
"1002940" [label="(Call,m->chan[k].angle)"];
"1001725" [label="(Identifier,c)"];
"1002769" [label="(Call,(Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1003498" [label="(Call,r->begin < actual_size ? r->begin : actual_size)"];
"1003538" [label="(Identifier,max_part_read)"];
"1003478" [label="(Block,)"];
"1000642" [label="(Identifier,c)"];
"1000741" [label="(Block,)"];
"1003250" [label="(Identifier,i)"];
"1000551" [label="(Call,f->codebook_count)"];
"1003334" [label="(Call,f->channel_buffers[i])"];
"1003236" [label="(Identifier,f)"];
"1002840" [label="(Call,m->chan = (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan)))"];
"1002894" [label="(Call,m->submaps)"];
"1003139" [label="(Identifier,m)"];
"1002335" [label="(Identifier,f)"];
"1001525" [label="(Identifier,j)"];
"1001217" [label="(Identifier,f)"];
"1000724" [label="(Call,current_entry = 0)"];
"1003381" [label="(Call,f->blocksize_0)"];
"1001317" [label="(Call,c->dimensions)"];
"1001275" [label="(Call,get_bits(f, 32))"];
"1003101" [label="(Identifier,f)"];
"1000749" [label="(Identifier,current_entry)"];
"1000954" [label="(Identifier,c)"];
"1001855" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001163" [label="(Call,sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1002879" [label="(Literal,1)"];
"1001140" [label="(Call,c->sorted_entries+1)"];
"1002955" [label="(ControlStructure,if (m->chan[k].magnitude >= f->channels))"];
"1001591" [label="(Call,j*c->dimensions)"];
"1003613" [label="(Identifier,f)"];
"1000965" [label="(Identifier,c)"];
"1000842" [label="(Identifier,c)"];
"1000632" [label="(Call,get_bits(f, 8))"];
"1001347" [label="(Call,setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001388" [label="(Call,q == EOP)"];
"1001714" [label="(Identifier,val)"];
"1003500" [label="(Call,r->begin)"];
"1001462" [label="(ControlStructure,else)"];
"1003316" [label="(Call,f->previous_window[i])"];
"1003100" [label="(Call,get_bits(f,8))"];
"1001602" [label="(Call,last = val)"];
"1001103" [label="(Identifier,lengths)"];
"1003121" [label="(ControlStructure,if (m->submap_floor[j] >= f->floor_count))"];
"1001147" [label="(Call,c->sorted_codewords)"];
"1003022" [label="(Call,m->submaps > 1)"];
"1003520" [label="(Identifier,actual_size)"];
"1003235" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002127" [label="(Identifier,f)"];
"1001555" [label="(Call,off = (z / div) % c->lookup_values)"];
"1001596" [label="(Identifier,k)"];
"1000281" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000850" [label="(Literal,2)"];
"1003491" [label="(Call,f->blocksize_1)"];
"1000835" [label="(Call,lengths[j])"];
"1001293" [label="(Literal,4)"];
"1002481" [label="(Identifier,j)"];
"1002098" [label="(Call,g->subclass_books[j][k] >= f->codebook_count)"];
"1000969" [label="(Call,c->codewords)"];
"1003214" [label="(Identifier,f)"];
"1001176" [label="(Call,c->sorted_values)"];
"1001162" [label="(Identifier,f)"];
"1000977" [label="(Call,sizeof(c->codewords[0]))"];
"1002093" [label="(Call,get_bits(f,8))"];
"1002947" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1003110" [label="(Identifier,f)"];
"1000892" [label="(Identifier,c)"];
"1000702" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1002972" [label="(Call,m->chan[k].angle     >= f->channels)"];
"1001392" [label="(Call,setup_temp_free(f,mults,sizeof(mults[0])*c->lookup_values))"];
"1003197" [label="(Identifier,f)"];
"1002453" [label="(Call,get_bits(f,6))"];
"1000659" [label="(Literal,1)"];
"1001571" [label="(Identifier,val)"];
"1002915" [label="(Call,k < m->coupling_steps)"];
"1003388" [label="(Call,init_blocksize(f, 1, f->blocksize_1))"];
"1001313" [label="(Call,lookup1_values(c->entries, c->dimensions))"];
"1003125" [label="(Identifier,m)"];
"1000873" [label="(Call,(uint8 *) setup_malloc(f, c->entries))"];
"1001720" [label="(Call,c->delta_value)"];
"1002398" [label="(Call,get_bits(f, 16))"];
"1000787" [label="(Identifier,j)"];
"1003622" [label="(Identifier,TRUE)"];
"1003133" [label="(Identifier,f)"];
"1002117" [label="(Call,get_bits(f,2)+1)"];
"1000987" [label="(Call,!c->codewords)"];
"1001295" [label="(Call,c->sequence_p = get_bits(f,1))"];
"1002702" [label="(Call,setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1003164" [label="(Call,f->mode_count)"];
"1001686" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1003217" [label="(Call,m->transformtype != 0)"];
"1003179" [label="(Call,m->blockflag)"];
"1001541" [label="(Literal,1)"];
"1002661" [label="(Call,j=0)"];
"1000333" [label="(Identifier,f)"];
"1002980" [label="(Call,f->channels)"];
"1000561" [label="(Call,total=0)"];
"1001478" [label="(Call,c->entries        * c->dimensions)"];
"1001334" [label="(Call,c->lookup_values == 0)"];
"1003150" [label="(Call,f->mode_count)"];
"1001378" [label="(Block,)"];
"1001274" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1000403" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003072" [label="(Call,j < f->channels)"];
"1003566" [label="(Call,f->temp_memory_required = imdct_mem)"];
"1003206" [label="(ControlStructure,if (m->windowtype != 0))"];
"1001428" [label="(Identifier,last)"];
"1003066" [label="(Identifier,VORBIS_invalid_setup)"];
"1002760" [label="(Call,get_bits(f,6)+1)"];
"1000555" [label="(Identifier,i)"];
"1001373" [label="(Call,c->lookup_values)"];
"1000617" [label="(Identifier,f)"];
"1001618" [label="(Identifier,UINT_MAX)"];
"1001545" [label="(Literal,0)"];
"1003013" [label="(ControlStructure,if (get_bits(f,2)))"];
"1001240" [label="(Identifier,NULL)"];
"1002413" [label="(Call,r->begin = get_bits(f, 24))"];
"1000829" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003300" [label="(Identifier,f)"];
"1000126" [label="(Call,start_page(f))"];
"1002897" [label="(ControlStructure,if (get_bits(f,1)))"];
"1002426" [label="(Literal,24)"];
"1000426" [label="(Identifier,len)"];
"1002783" [label="(Call,f->mapping == NULL)"];
"1001031" [label="(Call,sizeof(*c->codewords) * c->sorted_entries)"];
"1000967" [label="(Block,)"];
"1001592" [label="(Identifier,j)"];
"1003056" [label="(Identifier,m)"];
"1002529" [label="(Call,r->residue_books == NULL)"];
"1000968" [label="(Call,c->codewords = (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1002347" [label="(Call,f->residue_config == NULL)"];
"1002417" [label="(Call,get_bits(f, 24))"];
"1002867" [label="(ControlStructure,if (get_bits(f,1)))"];
"1002764" [label="(Literal,1)"];
"1001107" [label="(Identifier,values)"];
"1001642" [label="(Call,c->lookup_values)"];
"1000592" [label="(Literal,8)"];
"1002675" [label="(Call,++j)"];
"1003274" [label="(Call,f->previous_window[i])"];
"1003406" [label="(Call,f->blocksize[1])"];
"1000754" [label="(Identifier,f)"];
"1003460" [label="(Literal,1)"];
"1001075" [label="(Call,(sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1003513" [label="(Call,r->end)"];
"1001345" [label="(Call,(uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values))"];
"1001574" [label="(Call,mults[off])"];
"1002445" [label="(Identifier,f)"];
"1002951" [label="(Call,f->channels)"];
"1000439" [label="(ControlStructure,if (IS_PUSH_MODE(f)))"];
"1003372" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002715" [label="(Call,r->classdata[j] == NULL)"];
"1001665" [label="(Identifier,f)"];
"1002119" [label="(Identifier,f)"];
"1003310" [label="(Identifier,f)"];
"1000952" [label="(Call,c->sorted_entries = sorted_count)"];
"1003237" [label="(Identifier,VORBIS_invalid_setup)"];
"1001277" [label="(Literal,32)"];
"1001607" [label="(Call,k+1)"];
"1003157" [label="(Literal,1)"];
"1000734" [label="(Literal,1)"];
"1002617" [label="(Call,sizeof(*r->classdata))"];
"1000413" [label="(Call,!start_packet(f))"];
"1003511" [label="(Call,r->end   < actual_size ? r->end   : actual_size)"];
"1003563" [label="(Call,f->temp_memory_required)"];
"1002771" [label="(Call,setup_malloc(f, f->mapping_count * sizeof(*f->mapping)))"];
"1002704" [label="(Call,sizeof(r->classdata[j][0]) * classwords)"];
"1000825" [label="(Identifier,lengths)"];
"1000567" [label="(Identifier,c)"];
"1001582" [label="(Identifier,c)"];
"1002612" [label="(Call,(uint8 **) setup_malloc(f, sizeof(*r->classdata) * f->codebooks[r->classbook].entries))"];
"1000777" [label="(Identifier,n)"];
"1001795" [label="(Identifier,f)"];
"1003294" [label="(Identifier,f)"];
"1001434" [label="(Call,c->sorted_entries == 0)"];
"1003260" [label="(Identifier,f)"];
"1000936" [label="(Call,++j)"];
"1000759" [label="(Call,current_entry + n)"];
"1002319" [label="(Call,f->residue_count = get_bits(f, 6)+1)"];
"1000616" [label="(Call,get_bits(f, 8))"];
"1002454" [label="(Identifier,f)"];
"1000465" [label="(Call,get8_packet(f))"];
"1000245" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003549" [label="(Call,sizeof(void*))"];
"1000834" [label="(Call,lengths[j] = NO_CODE)"];
"1001056" [label="(Call,sizeof(*values))"];
"1002495" [label="(Call,get_bits(f,3))"];
"1003411" [label="(Call,f->blocksize_1)"];
"1001467" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1003619" [label="(Call,stb_vorbis_get_file_offset(f))"];
"1000634" [label="(Literal,8)"];
"1001207" [label="(Identifier,f)"];
"1000440" [label="(Call,IS_PUSH_MODE(f))"];
"1003183" [label="(Identifier,f)"];
"1002622" [label="(Call,f->codebooks[r->classbook].entries)"];
"1002037" [label="(Literal,2)"];
"1001553" [label="(Block,)"];
"1003021" [label="(ControlStructure,if (m->submaps > 1))"];
"1003373" [label="(Call,error(f, VORBIS_outofmem))"];
"1002425" [label="(Identifier,f)"];
"1001829" [label="(Call,i < f->floor_count)"];
"1001780" [label="(Literal,16)"];
"1001427" [label="(Call,last=0)"];
"1002872" [label="(Call,m->submaps)"];
"1002777" [label="(Call,sizeof(*f->mapping))"];
"1001153" [label="(Identifier,f)"];
"1003017" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002819" [label="(Call,*m = f->mapping + i)"];
"1000601" [label="(Call,x = get_bits(f, 8))"];
"1003178" [label="(Call,m->blockflag = get_bits(f,1))"];
"1000575" [label="(Call,x = get_bits(f, 8))"];
"1001282" [label="(Call,float32_unpack(get_bits(f, 32)))"];
"1003321" [label="(Identifier,NULL)"];
"1002055" [label="(Call,g->class_masterbooks[j] >= f->codebook_count)"];
"1002026" [label="(Identifier,f)"];
"1003395" [label="(Identifier,FALSE)"];
"1002465" [label="(Call,r->classbook >= f->codebook_count)"];
"1002700" [label="(Call,(uint8 *) setup_malloc(f, sizeof(r->classdata[j][0]) * classwords))"];
"1000326" [label="(Call,get32(f))"];
"1001071" [label="(Call,c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1003397" [label="(Call,f->blocksize[0])"];
"1000899" [label="(Identifier,f)"];
"1000619" [label="(Call,c->dimensions = (get_bits(f, 8)<<8) + x)"];
"1000623" [label="(Call,(get_bits(f, 8)<<8) + x)"];
"1001739" [label="(Call,last = val)"];
"1003615" [label="(Call,f->first_audio_page_offset = stb_vorbis_get_file_offset(f))"];
"1003182" [label="(Call,get_bits(f,1))"];
"1001605" [label="(ControlStructure,if (k+1 < c->dimensions))"];
"1002787" [label="(Identifier,NULL)"];
"1000653" [label="(Literal,8)"];
"1000746" [label="(Call,c->entries)"];
"1003553" [label="(Call,sizeof(uint8 *))"];
"1000953" [label="(Call,c->sorted_entries)"];
"1002866" [label="(Identifier,VORBIS_outofmem)"];
"1002784" [label="(Call,f->mapping)"];
"1002927" [label="(Identifier,m)"];
"1001509" [label="(Call,sparse ? c->sorted_entries : c->entries)"];
"1000938" [label="(ControlStructure,if (lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH && lengths[j] != NO_CODE))"];
"1001323" [label="(Call,c->lookup_values)"];
"1000327" [label="(Identifier,f)"];
"1001590" [label="(Call,j*c->dimensions + k)"];
"1000960" [label="(Call,CHECK(f))"];
"1000795" [label="(Identifier,j)"];
"1000252" [label="(Identifier,VORBIS_packet_id)"];
"1002837" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001586" [label="(Call,c->multiplicands[j*c->dimensions + k])"];
"1003115" [label="(Identifier,m)"];
"1001053" [label="(Call,setup_temp_malloc(f, sizeof(*values) * c->sorted_entries))"];
"1003173" [label="(Call,f->mode_config+i)"];
"1002917" [label="(Call,m->coupling_steps)"];
"1000931" [label="(Call,j < c->entries)"];
"1002903" [label="(Call,m->coupling_steps)"];
"1001409" [label="(Identifier,mults)"];
"1002392" [label="(Call,f->residue_types[i] = get_bits(f, 16))"];
"1001486" [label="(Call,c->multiplicands == NULL)"];
"1003028" [label="(ControlStructure,for (j=0; j < f->channels; ++j))"];
"1000714" [label="(Call,!lengths)"];
"1001580" [label="(Call,c->minimum_value + last)"];
"1000577" [label="(Call,get_bits(f, 8))"];
"1001756" [label="(Call,CHECK(f))"];
"1000974" [label="(Call,setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1001837" [label="(Call,f->floor_types[i] = get_bits(f, 16))"];
"1000845" [label="(Identifier,total)"];
"1001843" [label="(Call,get_bits(f, 16))"];
"1002987" [label="(ControlStructure,if (m->chan[k].magnitude == m->chan[k].angle))"];
"1000332" [label="(Call,get8(f))"];
"1001896" [label="(Call,get_bits(f,16))"];
"1002757" [label="(Call,f->mapping_count)"];
"1000481" [label="(Call,header[i] = get8_packet(f))"];
"1001540" [label="(Identifier,div)"];
"1003359" [label="(Call,f->blocksize_1/2)"];
"1000545" [label="(ControlStructure,for (i=0; i < f->codebook_count; ++i))"];
"1001570" [label="(Call,val = mults[off]*c->delta_value + c->minimum_value + last)"];
"1003567" [label="(Call,f->temp_memory_required)"];
"1002361" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1003033" [label="(Identifier,j)"];
"1001485" [label="(ControlStructure,if (c->multiplicands == NULL))"];
"1002797" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1003282" [label="(Identifier,f)"];
"1000550" [label="(Identifier,i)"];
"1000972" [label="(Call,(uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries))"];
"1000773" [label="(Call,lengths + current_entry)"];
"1000755" [label="(Call,ilog(limit))"];
"1001577" [label="(Call,c->delta_value)"];
"1000446" [label="(Identifier,f)"];
"1000959" [label="(Identifier,NULL)"];
"1001482" [label="(Call,c->dimensions)"];
"1002449" [label="(Call,r->classifications)"];
"1001184" [label="(Call,++c->sorted_values)"];
"1001446" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1003464" [label="(Call,max_part_read=0)"];
"1003480" [label="(Call,*r = f->residue_config + i)"];
"1001711" [label="(Block,)"];
"1001259" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001367" [label="(Identifier,j)"];
"1001174" [label="(ControlStructure,if (c->sorted_values == NULL))"];
"1003041" [label="(Call,m->chan[j].mux)"];
"1002455" [label="(Literal,6)"];
"1001146" [label="(Call,c->sorted_codewords == NULL)"];
"1001284" [label="(Identifier,f)"];
"1001227" [label="(Call,c->sorted_entries)"];
"1003307" [label="(Call,f->channel_buffers[i] == NULL)"];
"1000658" [label="(Identifier,f)"];
"1001276" [label="(Identifier,f)"];
"1003465" [label="(Identifier,max_part_read)"];
"1001658" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003375" [label="(Identifier,VORBIS_outofmem)"];
"1000306" [label="(Call,error(f, VORBIS_too_many_channels))"];
"1003093" [label="(Identifier,j)"];
"1000640" [label="(Call,c->entries = (get_bits(f, 8)<<16) + (y<<8) + x)"];
"1001704" [label="(Call,(int) c->lookup_values)"];
"1000423" [label="(Identifier,f)"];
"1001656" [label="(Call,CHECK(f))"];
"1000876" [label="(Identifier,f)"];
"1000420" [label="(Call,len = next_segment(f))"];
"1003301" [label="(Call,sizeof(int16) * longest_floorlist)"];
"1000993" [label="(Identifier,f)"];
"1000382" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002092" [label="(Call,get_bits(f,8)-1)"];
"1001169" [label="(Call,c->sorted_entries+1)"];
"1001327" [label="(Call,c->entries)"];
"1003052" [label="(Call,m->chan[j].mux >= m->submaps)"];
"1003026" [label="(Literal,1)"];
"1002911" [label="(ControlStructure,for (k=0; k < m->coupling_steps; ++k))"];
"1003623" [label="(MethodReturn,static int)"];
"1002796" [label="(Literal,0)"];
"1003374" [label="(Identifier,f)"];
"1002932" [label="(Identifier,f)"];
"1002968" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001309" [label="(Call,c->lookup_values = lookup1_values(c->entries, c->dimensions))"];
"1002121" [label="(Literal,1)"];
"1001797" [label="(Literal,1)"];
"1002923" [label="(Call,m->chan[k].magnitude = get_bits(f, ilog(f->channels-1)))"];
"1001805" [label="(Identifier,f)"];
"1000816" [label="(Call,get_bits(f, 5))"];
"1000928" [label="(Call,j=0)"];
"1003536" [label="(Call,part_read > max_part_read)"];
"1003168" [label="(Identifier,i)"];
"1001729" [label="(Call,c->multiplicands[j])"];
"1000821" [label="(Identifier,total)"];
"1000911" [label="(Identifier,c)"];
"1000699" [label="(ControlStructure,else)"];
"1001054" [label="(Identifier,f)"];
"1001573" [label="(Call,mults[off]*c->delta_value)"];
"1002832" [label="(ControlStructure,if (mapping_type != 0))"];
"1001152" [label="(Call,error(f, VORBIS_outofmem))"];
"1001238" [label="(Identifier,c)"];
"1002893" [label="(Identifier,max_submaps)"];
"1000920" [label="(Identifier,sorted_count)"];
"1001243" [label="(Call,CHECK(f))"];
"1001965" [label="(Call,g->partitions = get_bits(f, 5))"];
"1001543" [label="(Call,k=0)"];
"1000851" [label="(Block,)"];
"1001089" [label="(Call,size > f->setup_temp_memory_required)"];
"1003219" [label="(Identifier,m)"];
"1001231" [label="(Identifier,f)"];
"1001759" [label="(Identifier,x)"];
"1002913" [label="(Identifier,k)"];
"1003330" [label="(Call,error(f, VORBIS_outofmem))"];
"1001237" [label="(Call,c->codewords)"];
"1002504" [label="(Call,get_bits(f,5))"];
"1000940" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1000730" [label="(Call,get_bits(f,5) + 1)"];
"1000718" [label="(Identifier,f)"];
"1001479" [label="(Call,c->entries)"];
"1001290" [label="(Call,get_bits(f, 4)+1)"];
"1000882" [label="(Call,c->codeword_lengths)"];
"1002505" [label="(Identifier,f)"];
"1002186" [label="(Call,g->Xlist[g->values] = get_bits(f, g->rangebits))"];
"1003352" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1003524" [label="(Call,limit_r_end - limit_r_begin)"];
"1000885" [label="(Identifier,NULL)"];
"1000536" [label="(Call,sizeof(*f->codebooks) * f->codebook_count)"];
"1002876" [label="(Call,get_bits(f,4))"];
"1002478" [label="(Identifier,j)"];
"1000635" [label="(Call,y = get_bits(f, 8))"];
"1000649" [label="(Literal,16)"];
"1000944" [label="(Identifier,STB_VORBIS_FAST_HUFFMAN_LENGTH)"];
"1002839" [label="(Identifier,VORBIS_invalid_setup)"];
"1001495" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1002817" [label="(Block,)"];
"1003528" [label="(Call,part_read = n_read / r->part_size)"];
"1001793" [label="(Call,get_bits(f, 6)+1)"];
"1001189" [label="(Call,c->sorted_values[-1])"];
"1000818" [label="(Literal,5)"];
"1001529" [label="(Identifier,z)"];
"1001380" [label="(Call,q = get_bits(f, c->value_bits))"];
"1000277" [label="(Call,get32(f))"];
"1001519" [label="(Identifier,j)"];
"1002793" [label="(Call,f->mapping)"];
"1001641" [label="(Identifier,div)"];
"1002332" [label="(Call,(Residue *) setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1002525" [label="(Call,r->classifications)"];
"1000395" [label="(Call,get8(f))"];
"1002788" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002517" [label="(Identifier,f)"];
"1003396" [label="(Call,f->blocksize[0] = f->blocksize_0)"];
"1001918" [label="(Call,get_bits(f,4))"];
"1000781" [label="(Call,++current_length)"];
"1000891" [label="(Call,c->codeword_lengths)"];
"1002463" [label="(Literal,8)"];
"1003526" [label="(Identifier,limit_r_begin)"];
"1003024" [label="(Identifier,m)"];
"1003523" [label="(Identifier,n_read)"];
"1000776" [label="(Identifier,current_length)"];
"1000652" [label="(Identifier,y)"];
"1003378" [label="(Call,init_blocksize(f, 0, f->blocksize_0))"];
"1001487" [label="(Call,c->multiplicands)"];
"1001943" [label="(Call,error(f, VORBIS_feature_not_supported))"];
"1002888" [label="(Call,m->submaps)"];
"1003472" [label="(Identifier,i)"];
"1003331" [label="(Identifier,f)"];
"1003512" [label="(Call,r->end   < actual_size)"];
"1000729" [label="(Identifier,current_length)"];
"1002480" [label="(Call,j < r->classifications)"];
"1001517" [label="(ControlStructure,for (j=0; j < len; ++j))"];
"1000715" [label="(Identifier,lengths)"];
"1002931" [label="(Call,get_bits(f, ilog(f->channels-1)))"];
"1003131" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001761" [label="(Call,get_bits(f, 6))"];
"1003561" [label="(Call,imdct_mem > f->temp_memory_required)"];
"1001230" [label="(Call,setup_temp_free(f, lengths, c->entries))"];
"1001088" [label="(ControlStructure,if (size > f->setup_temp_memory_required))"];
"1003245" [label="(ControlStructure,for (i=0; i < f->channels; ++i))"];
"1001348" [label="(Identifier,f)"];
"1003174" [label="(Call,f->mode_config)"];
"1000812" [label="(Call,lengths[j])"];
"1002651" [label="(Call,f->codebooks[r->classbook].entries)"];
"1001628" [label="(Call,sizeof(mults[0])*c->lookup_values)"];
"1001236" [label="(Call,c->codewords = NULL)"];
"1002907" [label="(Call,get_bits(f,8))"];
"1000585" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000435" [label="(Call,start_packet(f))"];
"1001055" [label="(Call,sizeof(*values) * c->sorted_entries)"];
"1003399" [label="(Identifier,f)"];
"1000890" [label="(Call,memcpy(c->codeword_lengths, lengths, c->entries))"];
"1000924" [label="(Call,sorted_count = 0)"];
"1002666" [label="(Call,f->codebooks[r->classbook].entries)"];
"1000722" [label="(Block,)"];
"1001291" [label="(Call,get_bits(f, 4))"];
"1000262" [label="(Literal,6)"];
"1003148" [label="(Identifier,VORBIS_invalid_setup)"];
"1001640" [label="(Call,div *= c->lookup_values)"];
"1001390" [label="(Identifier,EOP)"];
"1003379" [label="(Identifier,f)"];
"1002324" [label="(Call,get_bits(f, 6))"];
"1003118" [label="(Call,get_bits(f,8))"];
"1003018" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003142" [label="(Call,f->residue_count)"];
"1000604" [label="(Identifier,f)"];
"1000800" [label="(Call,c->sparse ? get_bits(f,1) : 1)"];
"1002518" [label="(Call,sizeof(r->residue_books[0]) * r->classifications)"];
"1002096" [label="(Literal,1)"];
"1001681" [label="(Identifier,NULL)"];
"1001200" [label="(Identifier,values)"];
"1002136" [label="(Call,g->Xlist[1] = 1 << g->rangebits)"];
"1000329" [label="(Identifier,f)"];
"1002340" [label="(Call,sizeof(f->residue_config[0]))"];
"1000125" [label="(Call,!start_page(f))"];
"1001208" [label="(Identifier,values)"];
"1002419" [label="(Literal,24)"];
"1002868" [label="(Call,get_bits(f,1))"];
"1000407" [label="(Call,!start_page(f))"];
"1001389" [label="(Identifier,q)"];
"1001287" [label="(Call,c->value_bits)"];
"1000469" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001507" [label="(Call,len = sparse ? c->sorted_entries : c->entries)"];
"1001032" [label="(Call,sizeof(*c->codewords))"];
"1002457" [label="(Call,r->classbook = get_bits(f,8))"];
"1001382" [label="(Call,get_bits(f, c->value_bits))"];
"1001546" [label="(Call,k < c->dimensions)"];
"1003497" [label="(Identifier,limit_r_begin)"];
"1000117" [label="(Call,max_submaps = 0)"];
"1000611" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000945" [label="(Call,lengths[j] != NO_CODE)"];
"1001740" [label="(Identifier,last)"];
"1001800" [label="(Identifier,f)"];
"1000782" [label="(Identifier,current_length)"];
"1000866" [label="(Call,c->entries)"];
"1001188" [label="(Call,c->sorted_values[-1] = -1)"];
"1000881" [label="(Call,c->codeword_lengths == NULL)"];
"1002762" [label="(Identifier,f)"];
"1001358" [label="(Call,mults == NULL)"];
"1002143" [label="(Literal,1)"];
"1001910" [label="(Call,get_bits(f,8))"];
"1000656" [label="(Identifier,ordered)"];
"1002729" [label="(Call,classwords-1)"];
"1000668" [label="(Identifier,f)"];
"1002542" [label="(Call,j < r->classifications)"];
"1002820" [label="(Identifier,m)"];
"1001757" [label="(Identifier,f)"];
"1001778" [label="(Call,get_bits(f, 16))"];
"1000695" [label="(Identifier,f)"];
"1001984" [label="(Call,g->partition_class_list[j] = get_bits(f, 4))"];
"1002761" [label="(Call,get_bits(f,6))"];
"1000857" [label="(Call,(int) f->setup_temp_memory_required)"];
"1000637" [label="(Call,get_bits(f, 8))"];
"1000531" [label="(Call,memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count))"];
"1002356" [label="(Call,memset(f->residue_config, 0, f->residue_count * sizeof(f->residue_config[0])))"];
"1003068" [label="(ControlStructure,for (j=0; j < f->channels; ++j))"];
"1002836" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003190" [label="(Identifier,f)"];
"1002436" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001205" [label="(Block,)"];
"1000436" [label="(Identifier,f)"];
"1001270" [label="(Call,c->minimum_value = float32_unpack(get_bits(f, 32)))"];
"1002887" [label="(Call,m->submaps > max_submaps)"];
"1001292" [label="(Identifier,f)"];
"1002334" [label="(Call,setup_malloc(f, f->residue_count * sizeof(f->residue_config[0])))"];
"1000464" [label="(Call,get8_packet(f) != VORBIS_packet_setup)"];
"1002118" [label="(Call,get_bits(f,2))"];
"1000752" [label="(Identifier,n)"];
"1000425" [label="(Identifier,f)"];
"1000447" [label="(Identifier,TRUE)"];
"1000956" [label="(Identifier,sorted_count)"];
"1003490" [label="(Call,f->blocksize_1 / 2)"];
"1001456" [label="(Call,c->sorted_entries)"];
"1000503" [label="(Literal,1)"];
"1000646" [label="(Call,get_bits(f, 8))"];
"1000574" [label="(Identifier,f)"];
"1000744" [label="(Identifier,limit)"];
"1003212" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1002424" [label="(Call,get_bits(f, 24))"];
"1001659" [label="(Call,c->multiplicands)"];
"1003135" [label="(ControlStructure,if (m->submap_residue[j] >= f->residue_count))"];
"1001702" [label="(Call,j < (int) c->lookup_values)"];
"1000830" [label="(Identifier,f)"];
"1002821" [label="(Call,f->mapping + i)"];
"1003194" [label="(Identifier,m)"];
"1002446" [label="(Literal,24)"];
"1002924" [label="(Call,m->chan[k].magnitude)"];
"1001763" [label="(Literal,6)"];
"1001717" [label="(Call,mults[j])"];
"1003069" [label="(Call,j=0)"];
"1000636" [label="(Identifier,y)"];
"1000249" [label="(Call,get8(f) != VORBIS_packet_id)"];
"1003473" [label="(Call,f->residue_count)"];
"1002996" [label="(Call,m->chan[k].angle)"];
"1003160" [label="(Identifier,i)"];
"1001222" [label="(Call,sizeof(*c->codewords))"];
"1000794" [label="(Call,++j)"];
"1001614" [label="(ControlStructure,if (div > UINT_MAX / (unsigned int) c->lookup_values))"];
"1002877" [label="(Identifier,f)"];
"1000958" [label="(Identifier,values)"];
"1000370" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002132" [label="(Identifier,g)"];
"1002578" [label="(Identifier,f)"];
"1000875" [label="(Call,setup_malloc(f, c->entries))"];
"1000422" [label="(Call,next_segment(f))"];
"1000804" [label="(Call,get_bits(f,1))"];
"1001459" [label="(Call,c->dimensions)"];
"1003215" [label="(Identifier,VORBIS_invalid_setup)"];
"1003548" [label="(Call,sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003226" [label="(ControlStructure,if (m->mapping >= f->mapping_count))"];
"1001810" [label="(Call,sizeof(*f->floor_config))"];
"1003049" [label="(Identifier,f)"];
"1003083" [label="(Identifier,m)"];
"1000434" [label="(Call,!start_packet(f))"];
"1000313" [label="(Call,get32(f))"];
"1003386" [label="(ControlStructure,if (!init_blocksize(f, 1, f->blocksize_1)))"];
"1002878" [label="(Literal,4)"];
"1003030" [label="(Identifier,j)"];
"1000692" [label="(Call,(uint8 *) setup_temp_malloc(f, c->entries))"];
"1003180" [label="(Identifier,m)"];
"1003281" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000713" [label="(ControlStructure,if (!lengths))"];
"1001683" [label="(Call,setup_temp_free(f, mults,sizeof(mults[0])*c->lookup_values))"];
"1000644" [label="(Call,(get_bits(f, 8)<<16) + (y<<8) + x)"];
"1000901" [label="(Call,c->entries)"];
"1002862" [label="(Identifier,NULL)"];
"1002791" [label="(Identifier,VORBIS_outofmem)"];
"1001418" [label="(Block,)"];
"1002477" [label="(Call,j=0)"];
"1003089" [label="(Call,j=0)"];
"1000504" [label="(Call,f->codebooks = (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1001548" [label="(Call,c->dimensions)"];
"1003347" [label="(Call,f->floor_buffers[i])"];
"1003308" [label="(Call,f->channel_buffers[i])"];
"1000232" [label="(Call,get8(f))"];
"1001007" [label="(Call,(uint8 *) setup_malloc(f, c->sorted_entries))"];
"1002871" [label="(Call,m->submaps = get_bits(f,4)+1)"];
"1001130" [label="(Call,(uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1000736" [label="(Call,current_entry < c->entries)"];
"1000847" [label="(Call,c->entries)"];
"1003159" [label="(Call,i=0)"];
"1001471" [label="(Call,sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001447" [label="(Identifier,f)"];
"1001747" [label="(Call,sizeof(mults[0]))"];
"1002506" [label="(Literal,5)"];
"1002864" [label="(Call,error(f, VORBIS_outofmem))"];
"1003205" [label="(Literal,8)"];
"1003070" [label="(Identifier,j)"];
"1003541" [label="(Identifier,part_read)"];
"1000824" [label="(Call,lengths[j])"];
"1002933" [label="(Call,ilog(f->channels-1))"];
"1003531" [label="(Identifier,n_read)"];
"1002782" [label="(ControlStructure,if (f->mapping == NULL))"];
"1001673" [label="(Call,c->lookup_values)"];
"1003119" [label="(Identifier,f)"];
"1002988" [label="(Call,m->chan[k].magnitude == m->chan[k].angle)"];
"1000272" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003328" [label="(Identifier,NULL)"];
"1001113" [label="(Call,setup_temp_free(f, values, 0))"];
"1000933" [label="(Call,c->entries)"];
"1000513" [label="(Call,sizeof(*f->codebooks))"];
"1002808" [label="(Identifier,i)"];
"1003537" [label="(Identifier,part_read)"];
"1003023" [label="(Call,m->submaps)"];
"1000502" [label="(Literal,8)"];
"1000983" [label="(Call,c->entries)"];
"1001585" [label="(Call,c->multiplicands[j*c->dimensions + k] = val)"];
"1003186" [label="(Call,m->windowtype)"];
"1002869" [label="(Identifier,f)"];
"1001551" [label="(Call,++k)"];
"1002444" [label="(Call,get_bits(f,24))"];
"1002516" [label="(Call,setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications))"];
"1000799" [label="(Identifier,present)"];
"1000817" [label="(Identifier,f)"];
"1003525" [label="(Identifier,limit_r_end)"];
"1003555" [label="(Call,f->temp_memory_required = classify_mem)"];
"1001132" [label="(Call,setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1001472" [label="(Call,sizeof(c->multiplicands[0]))"];
"1000409" [label="(Identifier,f)"];
"1001069" [label="(Call,size = c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries)"];
"1000941" [label="(Call,lengths[j])"];
"1000254" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002439" [label="(Call,r->part_size = get_bits(f,24)+1)"];
"1000603" [label="(Call,get_bits(f, 8))"];
"1001429" [label="(Literal,0)"];
"1000756" [label="(Identifier,limit)"];
"1000314" [label="(Identifier,f)"];
"1003535" [label="(ControlStructure,if (part_read > max_part_read))"];
"1001244" [label="(Identifier,f)"];
"1000331" [label="(Identifier,x)"];
"1000900" [label="(Identifier,lengths)"];
"1003039" [label="(Block,)"];
"1003010" [label="(Identifier,m)"];
"1003003" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001764" [label="(Literal,1)"];
"1003488" [label="(Call,actual_size = f->blocksize_1 / 2)"];
"1001734" [label="(Identifier,val)"];
"1001050" [label="(Identifier,values)"];
"1003111" [label="(Literal,8)"];
"1000864" [label="(Identifier,f)"];
"1002381" [label="(Identifier,i)"];
"1001684" [label="(Identifier,f)"];
"1000888" [label="(Identifier,f)"];
"1003228" [label="(Call,m->mapping)"];
"1001197" [label="(Call,compute_sorted_huffman(c, lengths, values))"];
"1003596" [label="(Call,f->setup_offset)"];
"1002921" [label="(Identifier,k)"];
"1003273" [label="(Call,f->previous_window[i] = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1001300" [label="(Identifier,f)"];
"1003048" [label="(Call,get_bits(f, 4))"];
"1000957" [label="(Call,values = NULL)"];
"1002848" [label="(Call,f->channels * sizeof(*m->chan))"];
"1002616" [label="(Call,sizeof(*r->classdata) * f->codebooks[r->classbook].entries)"];
"1000753" [label="(Call,get_bits(f, ilog(limit)))"];
"1001411" [label="(Identifier,q)"];
"1003266" [label="(Identifier,f)"];
"1002886" [label="(ControlStructure,if (m->submaps > max_submaps))"];
"1002452" [label="(Call,get_bits(f,6)+1)"];
"1000107" [label="(MethodParameterIn,vorb *f)"];
"1003283" [label="(Call,sizeof(float) * f->blocksize_1/2)"];
"1003540" [label="(Identifier,max_part_read)"];
"1002954" [label="(Literal,1)"];
"1003004" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001463" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1000264" [label="(Call,error(f, VORBIS_unexpected_eof))"];
"1001526" [label="(Block,)"];
"1001435" [label="(Call,c->sorted_entries)"];
"1000590" [label="(Call,get_bits(f, 8))"];
"1000961" [label="(Identifier,f)"];
"1000779" [label="(Identifier,current_entry)"];
"1001597" [label="(Identifier,val)"];
"1003545" [label="(Call,f->channels)"];
"1002053" [label="(Literal,8)"];
"1003192" [label="(Call,m->transformtype = get_bits(f,16))"];
"1001715" [label="(Call,mults[j] * c->delta_value + c->minimum_value + last)"];
"1000251" [label="(Identifier,f)"];
"1003065" [label="(Identifier,f)"];
"1000324" [label="(Call,get32(f))"];
"1003402" [label="(Call,f->blocksize_0)"];
"1003191" [label="(Literal,16)"];
"1000158" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1002593" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001148" [label="(Identifier,c)"];
"1001350" [label="(Call,sizeof(mults[0]))"];
"1000745" [label="(Call,c->entries - current_entry)"];
"1000906" [label="(Call,c->codeword_lengths)"];
"1002922" [label="(Block,)"];
"1000947" [label="(Identifier,lengths)"];
"1000785" [label="(ControlStructure,for (j=0; j < c->entries; ++j))"];
"1002443" [label="(Call,get_bits(f,24)+1)"];
"1001521" [label="(Call,j < len)"];
"1002353" [label="(Call,error(f, VORBIS_outofmem))"];
"1002024" [label="(Call,get_bits(f, 3)+1)"];
"1000537" [label="(Call,sizeof(*f->codebooks))"];
"1000717" [label="(Call,error(f, VORBIS_outofmem))"];
"1001882" [label="(Call,get_bits(f,8))"];
"1000549" [label="(Call,i < f->codebook_count)"];
"1000548" [label="(Literal,0)"];
"1001196" [label="(Literal,1)"];
"1001667" [label="(Call,sizeof(c->multiplicands[0]))"];
"1001393" [label="(Identifier,f)"];
"1003455" [label="(Call,f->blocksize_1)"];
"1002144" [label="(Call,g->rangebits)"];
"1001794" [label="(Call,get_bits(f, 6))"];
"1003318" [label="(Identifier,f)"];
"1000772" [label="(Call,memset(lengths + current_entry, current_length, n))"];
"1002829" [label="(Call,get_bits(f,16))"];
"1001156" [label="(Call,c->sorted_values)"];
"1003154" [label="(Call,get_bits(f, 6))"];
"1000798" [label="(Call,present = c->sparse ? get_bits(f,1) : 1)"];
"1000671" [label="(Call,c->dimensions == 0 && c->entries != 0)"];
"1001608" [label="(Identifier,k)"];
"1002122" [label="(Call,g->rangebits = get_bits(f,4))"];
"1003169" [label="(Block,)"];
"1003542" [label="(Call,classify_mem = f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *)))"];
"1000838" [label="(Identifier,NO_CODE)"];
"1001067" [label="(Identifier,f)"];
"1001135" [label="(Call,sizeof(*c->sorted_codewords))"];
"1002410" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000408" [label="(Call,start_page(f))"];
"1003346" [label="(Call,f->floor_buffers[i]   = (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000506" [label="(Identifier,f)"];
"1001654" [label="(Identifier,last)"];
"1000844" [label="(Call,total >= c->entries >> 2)"];
"1000840" [label="(Call,c->sparse && total >= c->entries >> 2)"];
"1001790" [label="(Call,f->floor_count)"];
"1002120" [label="(Literal,2)"];
"1000806" [label="(Literal,1)"];
"1001299" [label="(Call,get_bits(f,1))"];
"1002841" [label="(Call,m->chan)"];
"1002051" [label="(Call,get_bits(f, 8))"];
"1001552" [label="(Identifier,k)"];
"1001442" [label="(Identifier,c)"];
"1000660" [label="(Call,c->sparse = ordered ? 0 : get_bits(f,1))"];
"1000500" [label="(Call,get_bits(f,8))"];
"1000728" [label="(Call,current_length = get_bits(f,5) + 1)"];
"1000573" [label="(Call,CHECK(f))"];
"1001433" [label="(ControlStructure,if (c->sorted_entries == 0))"];
"1003522" [label="(Call,n_read = limit_r_end - limit_r_begin)"];
"1001562" [label="(Identifier,c)"];
"1001250" [label="(Identifier,f)"];
"1002763" [label="(Literal,6)"];
"1000522" [label="(Call,f->codebooks == NULL)"];
"1000927" [label="(ControlStructure,for (j=0; j < c->entries; ++j))"];
"1000641" [label="(Call,c->entries)"];
"1001469" [label="(Call,setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions))"];
"1003371" [label="(Identifier,NULL)"];
"1002830" [label="(Identifier,f)"];
"1003109" [label="(Call,get_bits(f,8))"];
"1000424" [label="(Call,skip(f, len))"];
"1001233" [label="(Call,c->entries)"];
"1001091" [label="(Call,f->setup_temp_memory_required)"];
"1001023" [label="(Call,c->codewords = (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1003200" [label="(Call,m->mapping)"];
"1002838" [label="(Identifier,f)"];
"1003505" [label="(Identifier,r)"];
"1001181" [label="(Call,error(f, VORBIS_outofmem))"];
"1002196" [label="(Call,g->rangebits)"];
"1000508" [label="(Call,(Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count))"];
"1000758" [label="(Call,current_entry + n > (int) c->entries)"];
"1001588" [label="(Identifier,c)"];
"1003146" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000805" [label="(Identifier,f)"];
"1003208" [label="(Call,m->windowtype)"];
"1003227" [label="(Call,m->mapping >= f->mapping_count)"];
"1002983" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000533" [label="(Identifier,f)"];
"1001488" [label="(Identifier,c)"];
"1002949" [label="(Call,ilog(f->channels-1))"];
"1002028" [label="(Literal,1)"];
"1002831" [label="(Literal,16)"];
"1000535" [label="(Literal,0)"];
"1003593" [label="(ControlStructure,if (f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset))"];
"1002957" [label="(Call,m->chan[k].magnitude)"];
"1003251" [label="(Call,f->channels)"];
"1000441" [label="(Identifier,f)"];
"1002967" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003256" [label="(Block,)"];
"1002847" [label="(Identifier,f)"];
"1000919" [label="(Call,sorted_count = total)"];
"1002938" [label="(Literal,1)"];
"1003385" [label="(Identifier,FALSE)"];
"1000444" [label="(Call,!is_whole_packet_present(f, TRUE))"];
"1001565" [label="(Call,val = mults[off])"];
"1000751" [label="(Call,n = get_bits(f, ilog(limit)))"];
"1002852" [label="(Call,sizeof(*m->chan))"];
"1003120" [label="(Literal,8)"];
"1003224" [label="(Identifier,f)"];
"1002881" [label="(Call,m->submaps = 1)"];
"1002094" [label="(Identifier,f)"];
"1001203" [label="(Identifier,c)"];
"1003614" [label="(Identifier,VORBIS_outofmem)"];
"1000725" [label="(Identifier,current_entry)"];
"1000627" [label="(Literal,8)"];
"1003231" [label="(Call,f->mapping_count)"];
"1001637" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000390" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001889" [label="(Call,get_bits(f,16))"];
"1002792" [label="(Call,memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping)))"];
"1001992" [label="(Literal,4)"];
"1003315" [label="(Call,f->previous_window[i] == NULL)"];
"1001743" [label="(Call,setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values))"];
"1001206" [label="(Call,setup_temp_free(f, values, sizeof(*values)*c->sorted_entries))"];
"1001470" [label="(Identifier,f)"];
"1003254" [label="(Call,++i)"];
"1001449" [label="(Call,sizeof(c->multiplicands[0]))"];
"1000485" [label="(Call,get8_packet(f))"];
"1000854" [label="(Call,c->entries)"];
"1000654" [label="(Identifier,x)"];
"1003486" [label="(Identifier,i)"];
"1001338" [label="(Literal,0)"];
"1001493" [label="(Identifier,f)"];
"1001377" [label="(Identifier,j)"];
"1003123" [label="(Call,m->submap_floor[j])"];
"1000667" [label="(Call,get_bits(f,1))"];
"1000939" [label="(Call,lengths[j] > STB_VORBIS_FAST_HUFFMAN_LENGTH && lengths[j] != NO_CODE)"];
"1000354" [label="(Call,f->blocksize_1 = 1 << log1)"];
"1003458" [label="(Call,sizeof(float))"];
"1002194" [label="(Call,get_bits(f, g->rangebits))"];
"1002459" [label="(Identifier,r)"];
"1001662" [label="(Call,(codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values))"];
"1003034" [label="(Call,f->channels)"];
"1003329" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1002835" [label="(Literal,0)"];
"1000236" [label="(Call,get8(f))"];
"1003077" [label="(Call,++j)"];
"1001464" [label="(Call,c->multiplicands)"];
"1000528" [label="(Call,error(f, VORBIS_outofmem))"];
"1003279" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2))"];
"1000870" [label="(Call,c->codeword_lengths)"];
"1003336" [label="(Identifier,f)"];
"1003323" [label="(Call,f->finalY[i])"];
"1001179" [label="(Identifier,NULL)"];
"1002025" [label="(Call,get_bits(f, 3))"];
"1002113" [label="(Call,g->floor1_multiplier = get_bits(f,2)+1)"];
"1000764" [label="(Call,c->entries)"];
"1000769" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003516" [label="(Identifier,actual_size)"];
"1000629" [label="(Identifier,x)"];
"1001286" [label="(Call,c->value_bits = get_bits(f, 4)+1)"];
"1001062" [label="(ControlStructure,if (!values))"];
"1002535" [label="(Call,error(f, VORBIS_outofmem))"];
"1003467" [label="(ControlStructure,for (i=0; i < f->residue_count; ++i))"];
"1002490" [label="(Identifier,high_bits)"];
"1001043" [label="(Identifier,c)"];
"1002989" [label="(Call,m->chan[k].magnitude)"];
"1002045" [label="(Call,g->class_masterbooks[j] = get_bits(f, 8))"];
"1000859" [label="(Call,f->setup_temp_memory_required)"];
"1000289" [label="(Identifier,f)"];
"1001971" [label="(Literal,5)"];
"1002825" [label="(Identifier,i)"];
"1002036" [label="(Identifier,f)"];
"1001653" [label="(Call,last=0)"];
"1003543" [label="(Identifier,classify_mem)"];
"1000620" [label="(Call,c->dimensions)"];
"1001198" [label="(Identifier,c)"];
"1001076" [label="(Call,sizeof(*c->codewords) + sizeof(*values))"];
"1003162" [label="(Call,i < f->mode_count)"];
"1003263" [label="(Call,(float *) setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000946" [label="(Call,lengths[j])"];
"1001383" [label="(Identifier,f)"];
"1001349" [label="(Call,sizeof(mults[0]) * c->lookup_values)"];
"1001440" [label="(Call,c->multiplicands = (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions))"];
"1000846" [label="(Call,c->entries >> 2)"];
"1002970" [label="(Identifier,VORBIS_invalid_setup)"];
"1003234" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001939" [label="(Call,get_bits(f,8))"];
"1002399" [label="(Identifier,f)"];
"1002326" [label="(Literal,6)"];
"1002898" [label="(Call,get_bits(f,1))"];
"1001242" [label="(Identifier,c)"];
"1000732" [label="(Identifier,f)"];
"1002509" [label="(Identifier,residue_cascade)"];
"1000633" [label="(Identifier,f)"];
"1003185" [label="(Call,m->windowtype = get_bits(f,16))"];
"1003532" [label="(Call,r->part_size)"];
"1001745" [label="(Identifier,mults)"];
"1001822" [label="(Call,error(f, VORBIS_outofmem))"];
"1002456" [label="(Literal,1)"];
"1001104" [label="(Call,c->entries)"];
"1003213" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003599" [label="(Call,sizeof(*f) + f->temp_memory_required)"];
"1000250" [label="(Call,get8(f))"];
"1000678" [label="(Call,c->entries)"];
"1000532" [label="(Call,f->codebooks)"];
"1003216" [label="(ControlStructure,if (m->transformtype != 0))"];
"1001903" [label="(Call,get_bits(f,6))"];
"1000414" [label="(Call,start_packet(f))"];
"1001619" [label="(Call,(unsigned int) c->lookup_values)"];
"1002330" [label="(Identifier,f)"];
"1000853" [label="(Call,c->entries > (int) f->setup_temp_memory_required)"];
"1000647" [label="(Identifier,f)"];
"1000542" [label="(Call,f->codebook_count)"];
"1000588" [label="(Call,x = get_bits(f, 8))"];
"1002142" [label="(Call,1 << g->rangebits)"];
"1001969" [label="(Call,get_bits(f, 5))"];
"1000566" [label="(Call,*c = f->codebooks+i)"];
"1003333" [label="(Call,memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1))"];
"1003153" [label="(Call,get_bits(f, 6)+1)"];
"1003552" [label="(Identifier,max_part_read)"];
"1000511" [label="(Identifier,f)"];
"1001134" [label="(Call,sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1002900" [label="(Literal,1)"];
"1001369" [label="(Call,j < (int) c->lookup_values)"];
"1002774" [label="(Call,f->mapping_count)"];
"1002960" [label="(Identifier,m)"];
"1000701" [label="(Identifier,lengths)"];
"1001751" [label="(Call,c->lookup_values)"];
"1000300" [label="(Call,f->channels > STB_VORBIS_MAX_CHANNELS)"];
"1000976" [label="(Call,sizeof(c->codewords[0]) * c->entries)"];
"1002948" [label="(Identifier,f)"];
"1000591" [label="(Identifier,f)"];
"1001326" [label="(Call,c->entries * c->dimensions)"];
"1001520" [label="(Literal,0)"];
"1003073" [label="(Identifier,j)"];
"1001407" [label="(Call,mults[j] = q)"];
"1001009" [label="(Call,setup_malloc(f, c->sorted_entries))"];
"1000780" [label="(Identifier,n)"];
"1003595" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required)"];
"1002496" [label="(Identifier,f)"];
"1001271" [label="(Call,c->minimum_value)"];
"1000887" [label="(Call,error(f, VORBIS_outofmem))"];
"1003092" [label="(Call,j < m->submaps)"];
"1000989" [label="(Identifier,c)"];
"1000694" [label="(Call,setup_temp_malloc(f, c->entries))"];
"1003594" [label="(Call,f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset)"];
"1002705" [label="(Call,sizeof(r->classdata[j][0]))"];
"1003483" [label="(Call,f->residue_config)"];
"1001716" [label="(Call,mults[j] * c->delta_value)"];
"1002773" [label="(Call,f->mapping_count * sizeof(*f->mapping))"];
"1002834" [label="(Identifier,mapping_type)"];
"1003313" [label="(Identifier,NULL)"];
"1003314" [label="(Call,f->previous_window[i] == NULL || f->finalY[i] == NULL)"];
"1003332" [label="(Identifier,VORBIS_outofmem)"];
"1001268" [label="(Block,)"];
"1002095" [label="(Literal,8)"];
"1002859" [label="(Call,m->chan)"];
"1001340" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003368" [label="(Identifier,f)"];
"1003063" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1000672" [label="(Call,c->dimensions == 0)"];
"1003122" [label="(Call,m->submap_floor[j] >= f->floor_count)"];
"1000833" [label="(Block,)"];
"1000524" [label="(Identifier,f)"];
"1003184" [label="(Literal,1)"];
"1003557" [label="(Identifier,f)"];
"1000709" [label="(Identifier,f)"];
"1000614" [label="(Call,x = get_bits(f, 8))"];
"1000904" [label="(Call,lengths = c->codeword_lengths)"];
"1001096" [label="(Identifier,f)"];
"1001647" [label="(Identifier,c)"];
"1003145" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1001728" [label="(Call,c->multiplicands[j] = val)"];
"1002984" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1002018" [label="(Call,g->class_dimensions[j] = get_bits(f, 3)+1)"];
"1000905" [label="(Identifier,lengths)"];
"1001621" [label="(Call,c->lookup_values)"];
"1001354" [label="(Call,c->lookup_values)"];
"1003050" [label="(Literal,4)"];
"1001657" [label="(Identifier,f)"];
"1003201" [label="(Identifier,m)"];
"1001360" [label="(Identifier,NULL)"];
"1002692" [label="(Identifier,temp)"];
"1003053" [label="(Call,m->chan[j].mux)"];
"1002577" [label="(Call,get_bits(f, 8))"];
"1000328" [label="(Call,get32(f))"];
"1001754" [label="(Call,CHECK(f))"];
"1001755" [label="(Identifier,f)"];
"1000505" [label="(Call,f->codebooks)"];
"1000871" [label="(Identifier,c)"];
"1002767" [label="(Identifier,f)"];
"1001125" [label="(Block,)"];
"1001245" [label="(Call,c->lookup_type = get_bits(f, 4))"];
"1001285" [label="(Literal,32)"];
"1003136" [label="(Call,m->submap_residue[j] >= f->residue_count)"];
"1003476" [label="(Call,++i)"];
"1003611" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1000992" [label="(Call,error(f, VORBIS_outofmem))"];
"1001335" [label="(Call,c->lookup_values)"];
"1000419" [label="(Block,)"];
"1001600" [label="(Identifier,c)"];
"1000986" [label="(ControlStructure,if (!c->codewords))"];
"1000429" [label="(Identifier,f)"];
"1002986" [label="(Identifier,VORBIS_invalid_setup)"];
"1003258" [label="(Call,f->channel_buffers[i])"];
"1000576" [label="(Identifier,x)"];
"1001676" [label="(ControlStructure,if (c->multiplicands == NULL))"];
"1001118" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003612" [label="(Call,error(f, VORBIS_outofmem))"];
"1003040" [label="(Call,m->chan[j].mux = get_bits(f, 4))"];
"1002863" [label="(Return,return error(f, VORBIS_outofmem);)"];
"1001102" [label="(Identifier,c)"];
"1001786" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1001126" [label="(Call,c->sorted_codewords = (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1)))"];
"1002323" [label="(Call,get_bits(f, 6)+1)"];
"1001448" [label="(Call,sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001556" [label="(Identifier,off)"];
"1000615" [label="(Identifier,x)"];
"1001308" [label="(Block,)"];
"1001064" [label="(Identifier,values)"];
"1001990" [label="(Call,get_bits(f, 4))"];
"1000862" [label="(Call,f->setup_temp_memory_required = c->entries)"];
"1003562" [label="(Identifier,imdct_mem)"];
"1001344" [label="(Identifier,mults)"];
"1000731" [label="(Call,get_bits(f,5))"];
"1001133" [label="(Identifier,f)"];
"1002857" [label="(ControlStructure,if (m->chan == NULL))"];
"1003267" [label="(Call,sizeof(float) * f->blocksize_1)"];
"1002473" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1000523" [label="(Call,f->codebooks)"];
"1002828" [label="(Identifier,mapping_type)"];
"1003391" [label="(Call,f->blocksize_1)"];
"1000789" [label="(Call,j < c->entries)"];
"1000556" [label="(Block,)"];
"1000681" [label="(Literal,0)"];
"1002901" [label="(Block,)"];
"1003147" [label="(Identifier,f)"];
"1002973" [label="(Call,m->chan[k].angle)"];
"1003016" [label="(Literal,2)"];
"1003134" [label="(Identifier,VORBIS_invalid_setup)"];
"1001802" [label="(Call,(Floor *)  setup_malloc(f, f->floor_count * sizeof(*f->floor_config)))"];
"1003187" [label="(Identifier,m)"];
"1003468" [label="(Call,i=0)"];
"1000937" [label="(Identifier,j)"];
"1003094" [label="(Call,m->submaps)"];
"1001776" [label="(Call,z = get_bits(f, 16))"];
"1000735" [label="(ControlStructure,while (current_entry < c->entries))"];
"1001195" [label="(Call,-1)"];
"1001603" [label="(Identifier,last)"];
"1000677" [label="(Call,c->entries != 0)"];
"1002939" [label="(Call,m->chan[k].angle = get_bits(f, ilog(f->channels-1)))"];
"1001030" [label="(Identifier,f)"];
"1001371" [label="(Call,(int) c->lookup_values)"];
"1003408" [label="(Identifier,f)"];
"1000738" [label="(Call,c->entries)"];
"1000820" [label="(Call,++total)"];
"1002790" [label="(Identifier,f)"];
"1000240" [label="(Call,error(f, VORBIS_ogg_skeleton_not_supported))"];
"1000700" [label="(Call,lengths = c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1003503" [label="(Identifier,actual_size)"];
"1000791" [label="(Call,c->entries)"];
"1003390" [label="(Literal,1)"];
"1001209" [label="(Call,sizeof(*values)*c->sorted_entries)"];
"1001221" [label="(Call,sizeof(*c->codewords)*c->sorted_entries)"];
"1002889" [label="(Identifier,m)"];
"1003299" [label="(Call,setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1002569" [label="(Call,r->residue_books[j][k] = get_bits(f, 8))"];
"1001063" [label="(Call,!values)"];
"1001020" [label="(Call,error(f, VORBIS_outofmem))"];
"1000321" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003499" [label="(Call,r->begin < actual_size)"];
"1002827" [label="(Call,mapping_type = get_bits(f,16))"];
"1002336" [label="(Call,f->residue_count * sizeof(f->residue_config[0]))"];
"1002637" [label="(Call,error(f, VORBIS_outofmem))"];
"1002810" [label="(Call,i < f->mapping_count)"];
"1002065" [label="(Call,error(f, VORBIS_invalid_setup))"];
"1003325" [label="(Identifier,f)"];
"1001330" [label="(Call,c->dimensions)"];
"1002027" [label="(Literal,3)"];
"1003265" [label="(Call,setup_malloc(f, sizeof(float) * f->blocksize_1))"];
"1000645" [label="(Call,get_bits(f, 8)<<16)"];
"1001626" [label="(Identifier,f)"];
"1003207" [label="(Call,m->windowtype != 0)"];
"1000869" [label="(Call,c->codeword_lengths = (uint8 *) setup_malloc(f, c->entries))"];
"1002123" [label="(Call,g->rangebits)"];
"1001322" [label="(Call,c->lookup_values = c->entries * c->dimensions)"];
"1001241" [label="(Call,compute_accelerated_huffman(c))"];
"1001199" [label="(Identifier,lengths)"];
"1003292" [label="(Call,f->finalY[i])"];
"1003507" [label="(Identifier,actual_size)"];
"1001655" [label="(Literal,0)"];
"1003556" [label="(Call,f->temp_memory_required)"];
"1002195" [label="(Identifier,f)"];
"1001127" [label="(Call,c->sorted_codewords)"];
"1001737" [label="(Identifier,c)"];
"1003246" [label="(Call,i=0)"];
"1003616" [label="(Call,f->first_audio_page_offset)"];
"1002418" [label="(Identifier,f)"];
"1000638" [label="(Identifier,f)"];
"1002969" [label="(Identifier,f)"];
"1002482" [label="(Call,r->classifications)"];
"1003112" [label="(Call,m->submap_residue[j] = get_bits(f,8))"];
"1000190" [label="(Call,getn(f, header, 6))"];
"1000138" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1000710" [label="(Call,c->entries)"];
"1002703" [label="(Identifier,f)"];
"1001100" [label="(Call,!compute_codewords(c, lengths, c->entries, values))"];
"1001706" [label="(Call,c->lookup_values)"];
"1001561" [label="(Call,c->lookup_values)"];
"1003305" [label="(ControlStructure,if (f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL))"];
"1000863" [label="(Call,f->setup_temp_memory_required)"];
"1002485" [label="(Call,++j)"];
"1001029" [label="(Call,setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries))"];
"1003454" [label="(Call,f->blocksize_1 * sizeof(float))"];
"1001098" [label="(Identifier,size)"];
"1000932" [label="(Identifier,j)"];
"1001760" [label="(Call,get_bits(f, 6) + 1)"];
"1001297" [label="(Identifier,c)"];
"1003029" [label="(Call,j=0)"];
"1003014" [label="(Call,get_bits(f,2))"];
"1002904" [label="(Identifier,m)"];
"1003600" [label="(Call,sizeof(*f))"];
"1000330" [label="(Call,x = get8(f))"];
"1001218" [label="(Call,c->codewords)"];
"1000631" [label="(Identifier,x)"];
"1003074" [label="(Call,f->channels)"];
"1003509" [label="(Call,limit_r_end   = r->end   < actual_size ? r->end   : actual_size)"];
"1002662" [label="(Identifier,j)"];
"1003156" [label="(Literal,6)"];
"1002681" [label="(Call,f->codebooks[r->classbook].dimensions)"];
"1001593" [label="(Call,c->dimensions)"];
"1000168" [label="(Call,error(f, VORBIS_invalid_first_page))"];
"1003482" [label="(Call,f->residue_config + i)"];
"1003020" [label="(Identifier,VORBIS_invalid_setup)"];
"1001321" [label="(Block,)"];
"1003167" [label="(Call,++i)"];
"1003222" [label="(Return,return error(f, VORBIS_invalid_setup);)"];
"1003225" [label="(Identifier,VORBIS_invalid_setup)"];
"1001041" [label="(Call,!c->codewords)"];
"1003099" [label="(Block,)"];
"1001559" [label="(Identifier,z)"];
"1001216" [label="(Call,setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries))"];
"1002499" [label="(Call,get_bits(f,1))"];
"1001844" [label="(Identifier,f)"];
"1000811" [label="(Call,lengths[j] = get_bits(f, 5) + 1)"];
"1002935" [label="(Call,f->channels)"];
"1002912" [label="(Call,k=0)"];
"1002883" [label="(Identifier,m)"];
"1003451" [label="(Call,imdct_mem = (f->blocksize_1 * sizeof(float) >> 1))"];
"1003389" [label="(Identifier,f)"];
"1003019" [label="(Identifier,f)"];
"1002785" [label="(Identifier,f)"];
"1002976" [label="(Identifier,m)"];
"1000696" [label="(Call,c->entries)"];
"1003529" [label="(Identifier,part_read)"];
"1003297" [label="(Call,(int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist))"];
"1000624" [label="(Call,get_bits(f, 8)<<8)"];
"1002771" -> "1002769"  [label="AST: "];
"1002771" -> "1002773"  [label="CFG: "];
"1002772" -> "1002771"  [label="AST: "];
"1002773" -> "1002771"  [label="AST: "];
"1002769" -> "1002771"  [label="CFG: "];
"1002771" -> "1003623"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002771" -> "1002769"  [label="DDG: f"];
"1002771" -> "1002769"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002761" -> "1002771"  [label="DDG: f"];
"1000107" -> "1002771"  [label="DDG: f"];
"1002773" -> "1002771"  [label="DDG: f->mapping_count"];
"1002771" -> "1002789"  [label="DDG: f"];
"1002771" -> "1002829"  [label="DDG: f"];
"1002771" -> "1003154"  [label="DDG: f"];
"1002761" -> "1002760"  [label="AST: "];
"1002761" -> "1002763"  [label="CFG: "];
"1002762" -> "1002761"  [label="AST: "];
"1002763" -> "1002761"  [label="AST: "];
"1002764" -> "1002761"  [label="CFG: "];
"1002761" -> "1002756"  [label="DDG: f"];
"1002761" -> "1002756"  [label="DDG: 6"];
"1002761" -> "1002760"  [label="DDG: f"];
"1002761" -> "1002760"  [label="DDG: 6"];
"1002702" -> "1002761"  [label="DDG: f"];
"1002614" -> "1002761"  [label="DDG: f"];
"1002334" -> "1002761"  [label="DDG: f"];
"1000107" -> "1002761"  [label="DDG: f"];
"1002702" -> "1002700"  [label="AST: "];
"1002702" -> "1002704"  [label="CFG: "];
"1002703" -> "1002702"  [label="AST: "];
"1002704" -> "1002702"  [label="AST: "];
"1002700" -> "1002702"  [label="CFG: "];
"1002702" -> "1003623"  [label="DDG: sizeof(r->classdata[j][0]) * classwords"];
"1002702" -> "1002398"  [label="DDG: f"];
"1002702" -> "1002700"  [label="DDG: f"];
"1002702" -> "1002700"  [label="DDG: sizeof(r->classdata[j][0]) * classwords"];
"1002614" -> "1002702"  [label="DDG: f"];
"1000107" -> "1002702"  [label="DDG: f"];
"1002704" -> "1002702"  [label="DDG: classwords"];
"1002702" -> "1002723"  [label="DDG: f"];
"1002614" -> "1002612"  [label="AST: "];
"1002614" -> "1002616"  [label="CFG: "];
"1002615" -> "1002614"  [label="AST: "];
"1002616" -> "1002614"  [label="AST: "];
"1002612" -> "1002614"  [label="CFG: "];
"1002614" -> "1003623"  [label="DDG: sizeof(*r->classdata) * f->codebooks[r->classbook].entries"];
"1002614" -> "1002398"  [label="DDG: f"];
"1002614" -> "1002612"  [label="DDG: f"];
"1002614" -> "1002612"  [label="DDG: sizeof(*r->classdata) * f->codebooks[r->classbook].entries"];
"1002516" -> "1002614"  [label="DDG: f"];
"1002577" -> "1002614"  [label="DDG: f"];
"1000107" -> "1002614"  [label="DDG: f"];
"1002616" -> "1002614"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002614" -> "1002637"  [label="DDG: f"];
"1002516" -> "1002382"  [label="AST: "];
"1002516" -> "1002518"  [label="CFG: "];
"1002517" -> "1002516"  [label="AST: "];
"1002518" -> "1002516"  [label="AST: "];
"1002531" -> "1002516"  [label="CFG: "];
"1002516" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(r->residue_books[0]) * r->classifications)"];
"1002516" -> "1003623"  [label="DDG: sizeof(r->residue_books[0]) * r->classifications"];
"1002461" -> "1002516"  [label="DDG: f"];
"1002504" -> "1002516"  [label="DDG: f"];
"1002499" -> "1002516"  [label="DDG: f"];
"1000107" -> "1002516"  [label="DDG: f"];
"1002518" -> "1002516"  [label="DDG: r->classifications"];
"1002516" -> "1002535"  [label="DDG: f"];
"1002516" -> "1002577"  [label="DDG: f"];
"1002461" -> "1002457"  [label="AST: "];
"1002461" -> "1002463"  [label="CFG: "];
"1002462" -> "1002461"  [label="AST: "];
"1002463" -> "1002461"  [label="AST: "];
"1002457" -> "1002461"  [label="CFG: "];
"1002461" -> "1002457"  [label="DDG: f"];
"1002461" -> "1002457"  [label="DDG: 8"];
"1002453" -> "1002461"  [label="DDG: f"];
"1000107" -> "1002461"  [label="DDG: f"];
"1002461" -> "1002473"  [label="DDG: f"];
"1002461" -> "1002495"  [label="DDG: f"];
"1002453" -> "1002452"  [label="AST: "];
"1002453" -> "1002455"  [label="CFG: "];
"1002454" -> "1002453"  [label="AST: "];
"1002455" -> "1002453"  [label="AST: "];
"1002456" -> "1002453"  [label="CFG: "];
"1002453" -> "1002448"  [label="DDG: f"];
"1002453" -> "1002448"  [label="DDG: 6"];
"1002453" -> "1002452"  [label="DDG: f"];
"1002453" -> "1002452"  [label="DDG: 6"];
"1002444" -> "1002453"  [label="DDG: f"];
"1000107" -> "1002453"  [label="DDG: f"];
"1002444" -> "1002443"  [label="AST: "];
"1002444" -> "1002446"  [label="CFG: "];
"1002445" -> "1002444"  [label="AST: "];
"1002446" -> "1002444"  [label="AST: "];
"1002447" -> "1002444"  [label="CFG: "];
"1002444" -> "1002439"  [label="DDG: f"];
"1002444" -> "1002439"  [label="DDG: 24"];
"1002444" -> "1002443"  [label="DDG: f"];
"1002444" -> "1002443"  [label="DDG: 24"];
"1002424" -> "1002444"  [label="DDG: f"];
"1000107" -> "1002444"  [label="DDG: f"];
"1002424" -> "1002420"  [label="AST: "];
"1002424" -> "1002426"  [label="CFG: "];
"1002425" -> "1002424"  [label="AST: "];
"1002426" -> "1002424"  [label="AST: "];
"1002420" -> "1002424"  [label="CFG: "];
"1002424" -> "1002420"  [label="DDG: f"];
"1002424" -> "1002420"  [label="DDG: 24"];
"1002417" -> "1002424"  [label="DDG: f"];
"1000107" -> "1002424"  [label="DDG: f"];
"1002424" -> "1002436"  [label="DDG: f"];
"1002417" -> "1002413"  [label="AST: "];
"1002417" -> "1002419"  [label="CFG: "];
"1002418" -> "1002417"  [label="AST: "];
"1002419" -> "1002417"  [label="AST: "];
"1002413" -> "1002417"  [label="CFG: "];
"1002417" -> "1002413"  [label="DDG: f"];
"1002417" -> "1002413"  [label="DDG: 24"];
"1002398" -> "1002417"  [label="DDG: f"];
"1000107" -> "1002417"  [label="DDG: f"];
"1002398" -> "1002392"  [label="AST: "];
"1002398" -> "1002400"  [label="CFG: "];
"1002399" -> "1002398"  [label="AST: "];
"1002400" -> "1002398"  [label="AST: "];
"1002392" -> "1002398"  [label="CFG: "];
"1002398" -> "1002392"  [label="DDG: f"];
"1002398" -> "1002392"  [label="DDG: 16"];
"1002334" -> "1002398"  [label="DDG: f"];
"1000107" -> "1002398"  [label="DDG: f"];
"1002398" -> "1002410"  [label="DDG: f"];
"1002334" -> "1002332"  [label="AST: "];
"1002334" -> "1002336"  [label="CFG: "];
"1002335" -> "1002334"  [label="AST: "];
"1002336" -> "1002334"  [label="AST: "];
"1002332" -> "1002334"  [label="CFG: "];
"1002334" -> "1003623"  [label="DDG: f->residue_count * sizeof(f->residue_config[0])"];
"1002334" -> "1002332"  [label="DDG: f"];
"1002334" -> "1002332"  [label="DDG: f->residue_count * sizeof(f->residue_config[0])"];
"1002324" -> "1002334"  [label="DDG: f"];
"1000107" -> "1002334"  [label="DDG: f"];
"1002336" -> "1002334"  [label="DDG: f->residue_count"];
"1002334" -> "1002353"  [label="DDG: f"];
"1002324" -> "1002323"  [label="AST: "];
"1002324" -> "1002326"  [label="CFG: "];
"1002325" -> "1002324"  [label="AST: "];
"1002326" -> "1002324"  [label="AST: "];
"1002327" -> "1002324"  [label="CFG: "];
"1002324" -> "1002319"  [label="DDG: f"];
"1002324" -> "1002319"  [label="DDG: 6"];
"1002324" -> "1002323"  [label="DDG: f"];
"1002324" -> "1002323"  [label="DDG: 6"];
"1001804" -> "1002324"  [label="DDG: f"];
"1002194" -> "1002324"  [label="DDG: f"];
"1002126" -> "1002324"  [label="DDG: f"];
"1000107" -> "1002324"  [label="DDG: f"];
"1001804" -> "1001802"  [label="AST: "];
"1001804" -> "1001806"  [label="CFG: "];
"1001805" -> "1001804"  [label="AST: "];
"1001806" -> "1001804"  [label="AST: "];
"1001802" -> "1001804"  [label="CFG: "];
"1001804" -> "1003623"  [label="DDG: f->floor_count * sizeof(*f->floor_config)"];
"1001804" -> "1001802"  [label="DDG: f"];
"1001804" -> "1001802"  [label="DDG: f->floor_count * sizeof(*f->floor_config)"];
"1001794" -> "1001804"  [label="DDG: f"];
"1000107" -> "1001804"  [label="DDG: f"];
"1001806" -> "1001804"  [label="DDG: f->floor_count"];
"1001804" -> "1001822"  [label="DDG: f"];
"1001804" -> "1001843"  [label="DDG: f"];
"1001794" -> "1001793"  [label="AST: "];
"1001794" -> "1001796"  [label="CFG: "];
"1001795" -> "1001794"  [label="AST: "];
"1001796" -> "1001794"  [label="AST: "];
"1001797" -> "1001794"  [label="CFG: "];
"1001794" -> "1001789"  [label="DDG: f"];
"1001794" -> "1001789"  [label="DDG: 6"];
"1001794" -> "1001793"  [label="DDG: f"];
"1001794" -> "1001793"  [label="DDG: 6"];
"1001761" -> "1001794"  [label="DDG: f"];
"1001778" -> "1001794"  [label="DDG: f"];
"1000107" -> "1001794"  [label="DDG: f"];
"1001761" -> "1001760"  [label="AST: "];
"1001761" -> "1001763"  [label="CFG: "];
"1001762" -> "1001761"  [label="AST: "];
"1001763" -> "1001761"  [label="AST: "];
"1001764" -> "1001761"  [label="CFG: "];
"1001761" -> "1001758"  [label="DDG: f"];
"1001761" -> "1001758"  [label="DDG: 6"];
"1001761" -> "1001760"  [label="DDG: f"];
"1001761" -> "1001760"  [label="DDG: 6"];
"1000510" -> "1001761"  [label="DDG: f"];
"1001756" -> "1001761"  [label="DDG: f"];
"1000107" -> "1001761"  [label="DDG: f"];
"1001761" -> "1001778"  [label="DDG: f"];
"1000510" -> "1000508"  [label="AST: "];
"1000510" -> "1000512"  [label="CFG: "];
"1000511" -> "1000510"  [label="AST: "];
"1000512" -> "1000510"  [label="AST: "];
"1000508" -> "1000510"  [label="CFG: "];
"1000510" -> "1003623"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000510" -> "1000508"  [label="DDG: f"];
"1000510" -> "1000508"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000500" -> "1000510"  [label="DDG: f"];
"1000107" -> "1000510"  [label="DDG: f"];
"1000512" -> "1000510"  [label="DDG: f->codebook_count"];
"1000510" -> "1000528"  [label="DDG: f"];
"1000510" -> "1000573"  [label="DDG: f"];
"1000500" -> "1000499"  [label="AST: "];
"1000500" -> "1000502"  [label="CFG: "];
"1000501" -> "1000500"  [label="AST: "];
"1000502" -> "1000500"  [label="AST: "];
"1000503" -> "1000500"  [label="CFG: "];
"1000500" -> "1000495"  [label="DDG: f"];
"1000500" -> "1000495"  [label="DDG: 8"];
"1000500" -> "1000499"  [label="DDG: f"];
"1000500" -> "1000499"  [label="DDG: 8"];
"1000485" -> "1000500"  [label="DDG: f"];
"1000465" -> "1000500"  [label="DDG: f"];
"1000107" -> "1000500"  [label="DDG: f"];
"1000485" -> "1000481"  [label="AST: "];
"1000485" -> "1000486"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000481" -> "1000485"  [label="CFG: "];
"1000485" -> "1000481"  [label="DDG: f"];
"1000465" -> "1000485"  [label="DDG: f"];
"1000107" -> "1000485"  [label="DDG: f"];
"1000485" -> "1000492"  [label="DDG: f"];
"1000465" -> "1000464"  [label="AST: "];
"1000465" -> "1000466"  [label="CFG: "];
"1000466" -> "1000465"  [label="AST: "];
"1000467" -> "1000465"  [label="CFG: "];
"1000465" -> "1000464"  [label="DDG: f"];
"1000445" -> "1000465"  [label="DDG: f"];
"1000440" -> "1000465"  [label="DDG: f"];
"1000107" -> "1000465"  [label="DDG: f"];
"1000465" -> "1000469"  [label="DDG: f"];
"1000465" -> "1000492"  [label="DDG: f"];
"1000445" -> "1000444"  [label="AST: "];
"1000445" -> "1000447"  [label="CFG: "];
"1000446" -> "1000445"  [label="AST: "];
"1000447" -> "1000445"  [label="AST: "];
"1000444" -> "1000445"  [label="CFG: "];
"1000445" -> "1003623"  [label="DDG: f"];
"1000445" -> "1003623"  [label="DDG: TRUE"];
"1000445" -> "1000444"  [label="DDG: f"];
"1000445" -> "1000444"  [label="DDG: TRUE"];
"1000440" -> "1000445"  [label="DDG: f"];
"1000107" -> "1000445"  [label="DDG: f"];
"1000445" -> "1003571"  [label="DDG: TRUE"];
"1000445" -> "1003621"  [label="DDG: TRUE"];
"1000440" -> "1000439"  [label="AST: "];
"1000440" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="AST: "];
"1000446" -> "1000440"  [label="CFG: "];
"1000462" -> "1000440"  [label="CFG: "];
"1000440" -> "1003623"  [label="DDG: IS_PUSH_MODE(f)"];
"1000435" -> "1000440"  [label="DDG: f"];
"1000107" -> "1000440"  [label="DDG: f"];
"1000435" -> "1000434"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000434" -> "1000435"  [label="CFG: "];
"1000435" -> "1003623"  [label="DDG: f"];
"1000435" -> "1000434"  [label="DDG: f"];
"1000424" -> "1000435"  [label="DDG: f"];
"1000107" -> "1000435"  [label="DDG: f"];
"1000424" -> "1000419"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000429" -> "1000424"  [label="CFG: "];
"1000424" -> "1003623"  [label="DDG: len"];
"1000424" -> "1003623"  [label="DDG: skip(f, len)"];
"1000424" -> "1000422"  [label="DDG: f"];
"1000422" -> "1000424"  [label="DDG: f"];
"1000107" -> "1000424"  [label="DDG: f"];
"1000420" -> "1000424"  [label="DDG: len"];
"1000422" -> "1000420"  [label="AST: "];
"1000422" -> "1000423"  [label="CFG: "];
"1000423" -> "1000422"  [label="AST: "];
"1000420" -> "1000422"  [label="CFG: "];
"1000422" -> "1000420"  [label="DDG: f"];
"1000414" -> "1000422"  [label="DDG: f"];
"1000107" -> "1000422"  [label="DDG: f"];
"1000414" -> "1000413"  [label="AST: "];
"1000414" -> "1000415"  [label="CFG: "];
"1000415" -> "1000414"  [label="AST: "];
"1000413" -> "1000414"  [label="CFG: "];
"1000414" -> "1003623"  [label="DDG: f"];
"1000414" -> "1000413"  [label="DDG: f"];
"1000408" -> "1000414"  [label="DDG: f"];
"1000107" -> "1000414"  [label="DDG: f"];
"1000408" -> "1000407"  [label="AST: "];
"1000408" -> "1000409"  [label="CFG: "];
"1000409" -> "1000408"  [label="AST: "];
"1000407" -> "1000408"  [label="CFG: "];
"1000408" -> "1003623"  [label="DDG: f"];
"1000408" -> "1000407"  [label="DDG: f"];
"1000395" -> "1000408"  [label="DDG: f"];
"1000107" -> "1000408"  [label="DDG: f"];
"1000395" -> "1000393"  [label="AST: "];
"1000395" -> "1000396"  [label="CFG: "];
"1000396" -> "1000395"  [label="AST: "];
"1000393" -> "1000395"  [label="CFG: "];
"1000395" -> "1000393"  [label="DDG: f"];
"1000332" -> "1000395"  [label="DDG: f"];
"1000107" -> "1000395"  [label="DDG: f"];
"1000395" -> "1000403"  [label="DDG: f"];
"1000332" -> "1000330"  [label="AST: "];
"1000332" -> "1000333"  [label="CFG: "];
"1000333" -> "1000332"  [label="AST: "];
"1000330" -> "1000332"  [label="CFG: "];
"1000332" -> "1000330"  [label="DDG: f"];
"1000328" -> "1000332"  [label="DDG: f"];
"1000107" -> "1000332"  [label="DDG: f"];
"1000332" -> "1000370"  [label="DDG: f"];
"1000332" -> "1000382"  [label="DDG: f"];
"1000332" -> "1000390"  [label="DDG: f"];
"1000328" -> "1000108"  [label="AST: "];
"1000328" -> "1000329"  [label="CFG: "];
"1000329" -> "1000328"  [label="AST: "];
"1000331" -> "1000328"  [label="CFG: "];
"1000328" -> "1003623"  [label="DDG: get32(f)"];
"1000326" -> "1000328"  [label="DDG: f"];
"1000107" -> "1000328"  [label="DDG: f"];
"1000326" -> "1000108"  [label="AST: "];
"1000326" -> "1000327"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000324" -> "1000326"  [label="DDG: f"];
"1000107" -> "1000326"  [label="DDG: f"];
"1000324" -> "1000108"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000327" -> "1000324"  [label="CFG: "];
"1000313" -> "1000324"  [label="DDG: f"];
"1000107" -> "1000324"  [label="DDG: f"];
"1000313" -> "1000309"  [label="AST: "];
"1000313" -> "1000314"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000309" -> "1000313"  [label="CFG: "];
"1000313" -> "1000309"  [label="DDG: f"];
"1000288" -> "1000313"  [label="DDG: f"];
"1000107" -> "1000313"  [label="DDG: f"];
"1000313" -> "1000321"  [label="DDG: f"];
"1000288" -> "1000284"  [label="AST: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000284" -> "1000288"  [label="CFG: "];
"1000288" -> "1000284"  [label="DDG: f"];
"1000277" -> "1000288"  [label="DDG: f"];
"1000107" -> "1000288"  [label="DDG: f"];
"1000288" -> "1000296"  [label="DDG: f"];
"1000288" -> "1000306"  [label="DDG: f"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000278"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="CFG: "];
"1000277" -> "1000276"  [label="DDG: f"];
"1000259" -> "1000277"  [label="DDG: f"];
"1000107" -> "1000277"  [label="DDG: f"];
"1000277" -> "1000281"  [label="DDG: f"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000262"  [label="CFG: "];
"1000260" -> "1000259"  [label="AST: "];
"1000261" -> "1000259"  [label="AST: "];
"1000262" -> "1000259"  [label="AST: "];
"1000258" -> "1000259"  [label="CFG: "];
"1000259" -> "1003623"  [label="DDG: header"];
"1000259" -> "1000258"  [label="DDG: f"];
"1000259" -> "1000258"  [label="DDG: header"];
"1000259" -> "1000258"  [label="DDG: 6"];
"1000250" -> "1000259"  [label="DDG: f"];
"1000107" -> "1000259"  [label="DDG: f"];
"1000259" -> "1000264"  [label="DDG: f"];
"1000259" -> "1000269"  [label="DDG: header"];
"1000259" -> "1000272"  [label="DDG: f"];
"1000250" -> "1000249"  [label="AST: "];
"1000250" -> "1000251"  [label="CFG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000252" -> "1000250"  [label="CFG: "];
"1000250" -> "1000249"  [label="DDG: f"];
"1000126" -> "1000250"  [label="DDG: f"];
"1000107" -> "1000250"  [label="DDG: f"];
"1000250" -> "1000254"  [label="DDG: f"];
"1000126" -> "1000125"  [label="AST: "];
"1000126" -> "1000127"  [label="CFG: "];
"1000127" -> "1000126"  [label="AST: "];
"1000125" -> "1000126"  [label="CFG: "];
"1000126" -> "1003623"  [label="DDG: f"];
"1000126" -> "1000125"  [label="DDG: f"];
"1000107" -> "1000126"  [label="DDG: f"];
"1000126" -> "1000138"  [label="DDG: f"];
"1000126" -> "1000148"  [label="DDG: f"];
"1000126" -> "1000158"  [label="DDG: f"];
"1000126" -> "1000168"  [label="DDG: f"];
"1000126" -> "1000190"  [label="DDG: f"];
"1000126" -> "1000240"  [label="DDG: f"];
"1000126" -> "1000245"  [label="DDG: f"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1003623"  [label="DDG: f"];
"1000107" -> "1000138"  [label="DDG: f"];
"1000107" -> "1000148"  [label="DDG: f"];
"1000107" -> "1000158"  [label="DDG: f"];
"1000107" -> "1000168"  [label="DDG: f"];
"1000107" -> "1000190"  [label="DDG: f"];
"1000107" -> "1000232"  [label="DDG: f"];
"1000107" -> "1000236"  [label="DDG: f"];
"1000107" -> "1000240"  [label="DDG: f"];
"1000107" -> "1000245"  [label="DDG: f"];
"1000107" -> "1000254"  [label="DDG: f"];
"1000107" -> "1000264"  [label="DDG: f"];
"1000107" -> "1000272"  [label="DDG: f"];
"1000107" -> "1000281"  [label="DDG: f"];
"1000107" -> "1000296"  [label="DDG: f"];
"1000107" -> "1000306"  [label="DDG: f"];
"1000107" -> "1000321"  [label="DDG: f"];
"1000107" -> "1000370"  [label="DDG: f"];
"1000107" -> "1000382"  [label="DDG: f"];
"1000107" -> "1000390"  [label="DDG: f"];
"1000107" -> "1000403"  [label="DDG: f"];
"1000107" -> "1000469"  [label="DDG: f"];
"1000107" -> "1000492"  [label="DDG: f"];
"1000107" -> "1000528"  [label="DDG: f"];
"1000107" -> "1000573"  [label="DDG: f"];
"1000107" -> "1000577"  [label="DDG: f"];
"1000107" -> "1000585"  [label="DDG: f"];
"1000107" -> "1000590"  [label="DDG: f"];
"1000107" -> "1000598"  [label="DDG: f"];
"1000107" -> "1000603"  [label="DDG: f"];
"1000107" -> "1000611"  [label="DDG: f"];
"1000107" -> "1000616"  [label="DDG: f"];
"1000107" -> "1000625"  [label="DDG: f"];
"1000107" -> "1000632"  [label="DDG: f"];
"1000107" -> "1000637"  [label="DDG: f"];
"1000107" -> "1000646"  [label="DDG: f"];
"1000107" -> "1000657"  [label="DDG: f"];
"1000107" -> "1000667"  [label="DDG: f"];
"1000107" -> "1000683"  [label="DDG: f"];
"1000107" -> "1000694"  [label="DDG: f"];
"1000107" -> "1000708"  [label="DDG: f"];
"1000107" -> "1000717"  [label="DDG: f"];
"1000107" -> "1000731"  [label="DDG: f"];
"1000107" -> "1000753"  [label="DDG: f"];
"1000107" -> "1000769"  [label="DDG: f"];
"1000107" -> "1000804"  [label="DDG: f"];
"1000107" -> "1000816"  [label="DDG: f"];
"1000107" -> "1000829"  [label="DDG: f"];
"1000107" -> "1000875"  [label="DDG: f"];
"1000107" -> "1000887"  [label="DDG: f"];
"1000107" -> "1000898"  [label="DDG: f"];
"1000107" -> "1000960"  [label="DDG: f"];
"1000107" -> "1000974"  [label="DDG: f"];
"1000107" -> "1000992"  [label="DDG: f"];
"1000107" -> "1001009"  [label="DDG: f"];
"1000107" -> "1001020"  [label="DDG: f"];
"1000107" -> "1001029"  [label="DDG: f"];
"1000107" -> "1001046"  [label="DDG: f"];
"1000107" -> "1001053"  [label="DDG: f"];
"1000107" -> "1001066"  [label="DDG: f"];
"1000107" -> "1001113"  [label="DDG: f"];
"1000107" -> "1001118"  [label="DDG: f"];
"1000107" -> "1001132"  [label="DDG: f"];
"1000107" -> "1001152"  [label="DDG: f"];
"1000107" -> "1001161"  [label="DDG: f"];
"1000107" -> "1001181"  [label="DDG: f"];
"1000107" -> "1001206"  [label="DDG: f"];
"1000107" -> "1001216"  [label="DDG: f"];
"1000107" -> "1001230"  [label="DDG: f"];
"1000107" -> "1001243"  [label="DDG: f"];
"1000107" -> "1001249"  [label="DDG: f"];
"1000107" -> "1001259"  [label="DDG: f"];
"1000107" -> "1001275"  [label="DDG: f"];
"1000107" -> "1001283"  [label="DDG: f"];
"1000107" -> "1001291"  [label="DDG: f"];
"1000107" -> "1001299"  [label="DDG: f"];
"1000107" -> "1001340"  [label="DDG: f"];
"1000107" -> "1001347"  [label="DDG: f"];
"1000107" -> "1001362"  [label="DDG: f"];
"1000107" -> "1001382"  [label="DDG: f"];
"1000107" -> "1001392"  [label="DDG: f"];
"1000107" -> "1001404"  [label="DDG: f"];
"1000107" -> "1001446"  [label="DDG: f"];
"1000107" -> "1001469"  [label="DDG: f"];
"1000107" -> "1001492"  [label="DDG: f"];
"1000107" -> "1001504"  [label="DDG: f"];
"1000107" -> "1001625"  [label="DDG: f"];
"1000107" -> "1001637"  [label="DDG: f"];
"1000107" -> "1001656"  [label="DDG: f"];
"1000107" -> "1001664"  [label="DDG: f"];
"1000107" -> "1001683"  [label="DDG: f"];
"1000107" -> "1001695"  [label="DDG: f"];
"1000107" -> "1001743"  [label="DDG: f"];
"1000107" -> "1001754"  [label="DDG: f"];
"1000107" -> "1001756"  [label="DDG: f"];
"1000107" -> "1001778"  [label="DDG: f"];
"1000107" -> "1001786"  [label="DDG: f"];
"1000107" -> "1001822"  [label="DDG: f"];
"1000107" -> "1001843"  [label="DDG: f"];
"1000107" -> "1001855"  [label="DDG: f"];
"1000107" -> "1001882"  [label="DDG: f"];
"1000107" -> "1001889"  [label="DDG: f"];
"1000107" -> "1001896"  [label="DDG: f"];
"1000107" -> "1001903"  [label="DDG: f"];
"1000107" -> "1001910"  [label="DDG: f"];
"1000107" -> "1001918"  [label="DDG: f"];
"1000107" -> "1001939"  [label="DDG: f"];
"1000107" -> "1001943"  [label="DDG: f"];
"1000107" -> "1001969"  [label="DDG: f"];
"1000107" -> "1001990"  [label="DDG: f"];
"1000107" -> "1002025"  [label="DDG: f"];
"1000107" -> "1002035"  [label="DDG: f"];
"1000107" -> "1002051"  [label="DDG: f"];
"1000107" -> "1002065"  [label="DDG: f"];
"1000107" -> "1002093"  [label="DDG: f"];
"1000107" -> "1002110"  [label="DDG: f"];
"1000107" -> "1002118"  [label="DDG: f"];
"1000107" -> "1002126"  [label="DDG: f"];
"1000107" -> "1002194"  [label="DDG: f"];
"1000107" -> "1002353"  [label="DDG: f"];
"1000107" -> "1002410"  [label="DDG: f"];
"1000107" -> "1002436"  [label="DDG: f"];
"1000107" -> "1002473"  [label="DDG: f"];
"1000107" -> "1002495"  [label="DDG: f"];
"1000107" -> "1002499"  [label="DDG: f"];
"1000107" -> "1002504"  [label="DDG: f"];
"1000107" -> "1002535"  [label="DDG: f"];
"1000107" -> "1002577"  [label="DDG: f"];
"1000107" -> "1002593"  [label="DDG: f"];
"1000107" -> "1002637"  [label="DDG: f"];
"1000107" -> "1002723"  [label="DDG: f"];
"1000107" -> "1002789"  [label="DDG: f"];
"1000107" -> "1002829"  [label="DDG: f"];
"1000107" -> "1002837"  [label="DDG: f"];
"1000107" -> "1002846"  [label="DDG: f"];
"1000107" -> "1002864"  [label="DDG: f"];
"1000107" -> "1002868"  [label="DDG: f"];
"1000107" -> "1002876"  [label="DDG: f"];
"1000107" -> "1002898"  [label="DDG: f"];
"1000107" -> "1002907"  [label="DDG: f"];
"1000107" -> "1002931"  [label="DDG: f"];
"1000107" -> "1002947"  [label="DDG: f"];
"1000107" -> "1002968"  [label="DDG: f"];
"1000107" -> "1002984"  [label="DDG: f"];
"1000107" -> "1003004"  [label="DDG: f"];
"1000107" -> "1003014"  [label="DDG: f"];
"1000107" -> "1003018"  [label="DDG: f"];
"1000107" -> "1003048"  [label="DDG: f"];
"1000107" -> "1003064"  [label="DDG: f"];
"1000107" -> "1003100"  [label="DDG: f"];
"1000107" -> "1003109"  [label="DDG: f"];
"1000107" -> "1003118"  [label="DDG: f"];
"1000107" -> "1003132"  [label="DDG: f"];
"1000107" -> "1003146"  [label="DDG: f"];
"1000107" -> "1003154"  [label="DDG: f"];
"1000107" -> "1003182"  [label="DDG: f"];
"1000107" -> "1003189"  [label="DDG: f"];
"1000107" -> "1003196"  [label="DDG: f"];
"1000107" -> "1003203"  [label="DDG: f"];
"1000107" -> "1003213"  [label="DDG: f"];
"1000107" -> "1003223"  [label="DDG: f"];
"1000107" -> "1003235"  [label="DDG: f"];
"1000107" -> "1003238"  [label="DDG: f"];
"1000107" -> "1003265"  [label="DDG: f"];
"1000107" -> "1003281"  [label="DDG: f"];
"1000107" -> "1003299"  [label="DDG: f"];
"1000107" -> "1003330"  [label="DDG: f"];
"1000107" -> "1003354"  [label="DDG: f"];
"1000107" -> "1003373"  [label="DDG: f"];
"1000107" -> "1003378"  [label="DDG: f"];
"1000107" -> "1003388"  [label="DDG: f"];
"1000107" -> "1003612"  [label="DDG: f"];
"1000107" -> "1003619"  [label="DDG: f"];
"1000420" -> "1000419"  [label="AST: "];
"1000421" -> "1000420"  [label="AST: "];
"1000425" -> "1000420"  [label="CFG: "];
"1000420" -> "1003623"  [label="DDG: next_segment(f)"];
"1000512" -> "1000518"  [label="CFG: "];
"1000513" -> "1000512"  [label="AST: "];
"1000518" -> "1000512"  [label="AST: "];
"1000512" -> "1003623"  [label="DDG: f->codebook_count"];
"1000495" -> "1000512"  [label="DDG: f->codebook_count"];
"1000512" -> "1000536"  [label="DDG: f->codebook_count"];
"1000495" -> "1000108"  [label="AST: "];
"1000495" -> "1000499"  [label="CFG: "];
"1000496" -> "1000495"  [label="AST: "];
"1000499" -> "1000495"  [label="AST: "];
"1000506" -> "1000495"  [label="CFG: "];
"1000495" -> "1003623"  [label="DDG: get_bits(f,8) + 1"];
"1001756" -> "1000556"  [label="AST: "];
"1001756" -> "1001757"  [label="CFG: "];
"1001757" -> "1001756"  [label="AST: "];
"1000555" -> "1001756"  [label="CFG: "];
"1001756" -> "1003623"  [label="DDG: CHECK(f)"];
"1001756" -> "1000573"  [label="DDG: f"];
"1001754" -> "1001756"  [label="DDG: f"];
"1001249" -> "1001756"  [label="DDG: f"];
"1001754" -> "1001268"  [label="AST: "];
"1001754" -> "1001755"  [label="CFG: "];
"1001755" -> "1001754"  [label="AST: "];
"1001757" -> "1001754"  [label="CFG: "];
"1001743" -> "1001754"  [label="DDG: f"];
"1001743" -> "1001268"  [label="AST: "];
"1001743" -> "1001746"  [label="CFG: "];
"1001744" -> "1001743"  [label="AST: "];
"1001745" -> "1001743"  [label="AST: "];
"1001746" -> "1001743"  [label="AST: "];
"1001755" -> "1001743"  [label="CFG: "];
"1001743" -> "1003623"  [label="DDG: setup_temp_free(f, mults, sizeof(mults[0])*c->lookup_values)"];
"1001743" -> "1003623"  [label="DDG: sizeof(mults[0])*c->lookup_values"];
"1001743" -> "1003623"  [label="DDG: mults"];
"1001382" -> "1001743"  [label="DDG: f"];
"1001347" -> "1001743"  [label="DDG: f"];
"1001469" -> "1001743"  [label="DDG: f"];
"1001664" -> "1001743"  [label="DDG: f"];
"1001446" -> "1001743"  [label="DDG: f"];
"1001573" -> "1001743"  [label="DDG: mults[off]"];
"1001358" -> "1001743"  [label="DDG: mults"];
"1001407" -> "1001743"  [label="DDG: mults[j]"];
"1001716" -> "1001743"  [label="DDG: mults[j]"];
"1001746" -> "1001743"  [label="DDG: c->lookup_values"];
"1001382" -> "1001380"  [label="AST: "];
"1001382" -> "1001384"  [label="CFG: "];
"1001383" -> "1001382"  [label="AST: "];
"1001384" -> "1001382"  [label="AST: "];
"1001380" -> "1001382"  [label="CFG: "];
"1001382" -> "1003623"  [label="DDG: c->value_bits"];
"1001382" -> "1001380"  [label="DDG: f"];
"1001382" -> "1001380"  [label="DDG: c->value_bits"];
"1001347" -> "1001382"  [label="DDG: f"];
"1001286" -> "1001382"  [label="DDG: c->value_bits"];
"1001382" -> "1001392"  [label="DDG: f"];
"1001382" -> "1001446"  [label="DDG: f"];
"1001382" -> "1001469"  [label="DDG: f"];
"1001382" -> "1001656"  [label="DDG: f"];
"1001347" -> "1001345"  [label="AST: "];
"1001347" -> "1001349"  [label="CFG: "];
"1001348" -> "1001347"  [label="AST: "];
"1001349" -> "1001347"  [label="AST: "];
"1001345" -> "1001347"  [label="CFG: "];
"1001347" -> "1003623"  [label="DDG: sizeof(mults[0]) * c->lookup_values"];
"1001347" -> "1001345"  [label="DDG: f"];
"1001347" -> "1001345"  [label="DDG: sizeof(mults[0]) * c->lookup_values"];
"1001299" -> "1001347"  [label="DDG: f"];
"1001349" -> "1001347"  [label="DDG: c->lookup_values"];
"1001347" -> "1001362"  [label="DDG: f"];
"1001347" -> "1001446"  [label="DDG: f"];
"1001347" -> "1001469"  [label="DDG: f"];
"1001347" -> "1001656"  [label="DDG: f"];
"1001299" -> "1001295"  [label="AST: "];
"1001299" -> "1001301"  [label="CFG: "];
"1001300" -> "1001299"  [label="AST: "];
"1001301" -> "1001299"  [label="AST: "];
"1001295" -> "1001299"  [label="CFG: "];
"1001299" -> "1001295"  [label="DDG: f"];
"1001299" -> "1001295"  [label="DDG: 1"];
"1001291" -> "1001299"  [label="DDG: f"];
"1001299" -> "1001340"  [label="DDG: f"];
"1001291" -> "1001290"  [label="AST: "];
"1001291" -> "1001293"  [label="CFG: "];
"1001292" -> "1001291"  [label="AST: "];
"1001293" -> "1001291"  [label="AST: "];
"1001294" -> "1001291"  [label="CFG: "];
"1001291" -> "1001286"  [label="DDG: f"];
"1001291" -> "1001286"  [label="DDG: 4"];
"1001291" -> "1001290"  [label="DDG: f"];
"1001291" -> "1001290"  [label="DDG: 4"];
"1001283" -> "1001291"  [label="DDG: f"];
"1001283" -> "1001282"  [label="AST: "];
"1001283" -> "1001285"  [label="CFG: "];
"1001284" -> "1001283"  [label="AST: "];
"1001285" -> "1001283"  [label="AST: "];
"1001282" -> "1001283"  [label="CFG: "];
"1001283" -> "1001282"  [label="DDG: f"];
"1001283" -> "1001282"  [label="DDG: 32"];
"1001275" -> "1001283"  [label="DDG: f"];
"1001275" -> "1001274"  [label="AST: "];
"1001275" -> "1001277"  [label="CFG: "];
"1001276" -> "1001275"  [label="AST: "];
"1001277" -> "1001275"  [label="AST: "];
"1001274" -> "1001275"  [label="CFG: "];
"1001275" -> "1001274"  [label="DDG: f"];
"1001275" -> "1001274"  [label="DDG: 32"];
"1001249" -> "1001275"  [label="DDG: f"];
"1001249" -> "1001245"  [label="AST: "];
"1001249" -> "1001251"  [label="CFG: "];
"1001250" -> "1001249"  [label="AST: "];
"1001251" -> "1001249"  [label="AST: "];
"1001245" -> "1001249"  [label="CFG: "];
"1001249" -> "1001245"  [label="DDG: f"];
"1001249" -> "1001245"  [label="DDG: 4"];
"1001243" -> "1001249"  [label="DDG: f"];
"1001249" -> "1001259"  [label="DDG: f"];
"1001243" -> "1000556"  [label="AST: "];
"1001243" -> "1001244"  [label="CFG: "];
"1001244" -> "1001243"  [label="AST: "];
"1001247" -> "1001243"  [label="CFG: "];
"1001243" -> "1003623"  [label="DDG: CHECK(f)"];
"1000974" -> "1001243"  [label="DDG: f"];
"1000960" -> "1001243"  [label="DDG: f"];
"1001053" -> "1001243"  [label="DDG: f"];
"1001161" -> "1001243"  [label="DDG: f"];
"1001230" -> "1001243"  [label="DDG: f"];
"1000974" -> "1000972"  [label="AST: "];
"1000974" -> "1000976"  [label="CFG: "];
"1000975" -> "1000974"  [label="AST: "];
"1000976" -> "1000974"  [label="AST: "];
"1000972" -> "1000974"  [label="CFG: "];
"1000974" -> "1003623"  [label="DDG: sizeof(c->codewords[0]) * c->entries"];
"1000974" -> "1000972"  [label="DDG: f"];
"1000974" -> "1000972"  [label="DDG: sizeof(c->codewords[0]) * c->entries"];
"1000960" -> "1000974"  [label="DDG: f"];
"1000976" -> "1000974"  [label="DDG: c->entries"];
"1000974" -> "1000992"  [label="DDG: f"];
"1000974" -> "1001113"  [label="DDG: f"];
"1000974" -> "1001118"  [label="DDG: f"];
"1000974" -> "1001132"  [label="DDG: f"];
"1000974" -> "1001206"  [label="DDG: f"];
"1000960" -> "1000556"  [label="AST: "];
"1000960" -> "1000961"  [label="CFG: "];
"1000961" -> "1000960"  [label="AST: "];
"1000965" -> "1000960"  [label="CFG: "];
"1000960" -> "1003623"  [label="DDG: CHECK(f)"];
"1000804" -> "1000960"  [label="DDG: f"];
"1000753" -> "1000960"  [label="DDG: f"];
"1000708" -> "1000960"  [label="DDG: f"];
"1000816" -> "1000960"  [label="DDG: f"];
"1000731" -> "1000960"  [label="DDG: f"];
"1000898" -> "1000960"  [label="DDG: f"];
"1000694" -> "1000960"  [label="DDG: f"];
"1000960" -> "1001009"  [label="DDG: f"];
"1000960" -> "1001113"  [label="DDG: f"];
"1000960" -> "1001118"  [label="DDG: f"];
"1000960" -> "1001132"  [label="DDG: f"];
"1000960" -> "1001206"  [label="DDG: f"];
"1000804" -> "1000800"  [label="AST: "];
"1000804" -> "1000806"  [label="CFG: "];
"1000805" -> "1000804"  [label="AST: "];
"1000806" -> "1000804"  [label="AST: "];
"1000800" -> "1000804"  [label="CFG: "];
"1000804" -> "1000798"  [label="DDG: f"];
"1000804" -> "1000798"  [label="DDG: 1"];
"1000804" -> "1000800"  [label="DDG: f"];
"1000804" -> "1000800"  [label="DDG: 1"];
"1000708" -> "1000804"  [label="DDG: f"];
"1000694" -> "1000804"  [label="DDG: f"];
"1000816" -> "1000804"  [label="DDG: f"];
"1000804" -> "1000816"  [label="DDG: f"];
"1000804" -> "1000875"  [label="DDG: f"];
"1000708" -> "1000706"  [label="AST: "];
"1000708" -> "1000710"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000710" -> "1000708"  [label="AST: "];
"1000706" -> "1000708"  [label="CFG: "];
"1000708" -> "1003623"  [label="DDG: c->entries"];
"1000708" -> "1000706"  [label="DDG: f"];
"1000708" -> "1000706"  [label="DDG: c->entries"];
"1000667" -> "1000708"  [label="DDG: f"];
"1000657" -> "1000708"  [label="DDG: f"];
"1000640" -> "1000708"  [label="DDG: c->entries"];
"1000677" -> "1000708"  [label="DDG: c->entries"];
"1000708" -> "1000717"  [label="DDG: f"];
"1000708" -> "1000731"  [label="DDG: f"];
"1000708" -> "1000736"  [label="DDG: c->entries"];
"1000708" -> "1000789"  [label="DDG: c->entries"];
"1000708" -> "1000816"  [label="DDG: f"];
"1000708" -> "1000875"  [label="DDG: f"];
"1000667" -> "1000664"  [label="AST: "];
"1000667" -> "1000669"  [label="CFG: "];
"1000668" -> "1000667"  [label="AST: "];
"1000669" -> "1000667"  [label="AST: "];
"1000664" -> "1000667"  [label="CFG: "];
"1000667" -> "1000660"  [label="DDG: f"];
"1000667" -> "1000660"  [label="DDG: 1"];
"1000667" -> "1000664"  [label="DDG: f"];
"1000667" -> "1000664"  [label="DDG: 1"];
"1000657" -> "1000667"  [label="DDG: f"];
"1000667" -> "1000683"  [label="DDG: f"];
"1000667" -> "1000694"  [label="DDG: f"];
"1000667" -> "1000798"  [label="DDG: f"];
"1000667" -> "1000798"  [label="DDG: 1"];
"1000667" -> "1000800"  [label="DDG: f"];
"1000667" -> "1000800"  [label="DDG: 1"];
"1000657" -> "1000655"  [label="AST: "];
"1000657" -> "1000659"  [label="CFG: "];
"1000658" -> "1000657"  [label="AST: "];
"1000659" -> "1000657"  [label="AST: "];
"1000655" -> "1000657"  [label="CFG: "];
"1000657" -> "1000655"  [label="DDG: f"];
"1000657" -> "1000655"  [label="DDG: 1"];
"1000646" -> "1000657"  [label="DDG: f"];
"1000657" -> "1000660"  [label="DDG: f"];
"1000657" -> "1000660"  [label="DDG: 1"];
"1000657" -> "1000664"  [label="DDG: f"];
"1000657" -> "1000664"  [label="DDG: 1"];
"1000657" -> "1000683"  [label="DDG: f"];
"1000657" -> "1000694"  [label="DDG: f"];
"1000657" -> "1000798"  [label="DDG: f"];
"1000657" -> "1000798"  [label="DDG: 1"];
"1000657" -> "1000800"  [label="DDG: f"];
"1000657" -> "1000800"  [label="DDG: 1"];
"1000646" -> "1000645"  [label="AST: "];
"1000646" -> "1000648"  [label="CFG: "];
"1000647" -> "1000646"  [label="AST: "];
"1000648" -> "1000646"  [label="AST: "];
"1000649" -> "1000646"  [label="CFG: "];
"1000646" -> "1000645"  [label="DDG: f"];
"1000646" -> "1000645"  [label="DDG: 8"];
"1000637" -> "1000646"  [label="DDG: f"];
"1000637" -> "1000635"  [label="AST: "];
"1000637" -> "1000639"  [label="CFG: "];
"1000638" -> "1000637"  [label="AST: "];
"1000639" -> "1000637"  [label="AST: "];
"1000635" -> "1000637"  [label="CFG: "];
"1000637" -> "1000635"  [label="DDG: f"];
"1000637" -> "1000635"  [label="DDG: 8"];
"1000632" -> "1000637"  [label="DDG: f"];
"1000632" -> "1000630"  [label="AST: "];
"1000632" -> "1000634"  [label="CFG: "];
"1000633" -> "1000632"  [label="AST: "];
"1000634" -> "1000632"  [label="AST: "];
"1000630" -> "1000632"  [label="CFG: "];
"1000632" -> "1000630"  [label="DDG: f"];
"1000632" -> "1000630"  [label="DDG: 8"];
"1000625" -> "1000632"  [label="DDG: f"];
"1000625" -> "1000624"  [label="AST: "];
"1000625" -> "1000627"  [label="CFG: "];
"1000626" -> "1000625"  [label="AST: "];
"1000627" -> "1000625"  [label="AST: "];
"1000628" -> "1000625"  [label="CFG: "];
"1000625" -> "1000624"  [label="DDG: f"];
"1000625" -> "1000624"  [label="DDG: 8"];
"1000616" -> "1000625"  [label="DDG: f"];
"1000616" -> "1000614"  [label="AST: "];
"1000616" -> "1000618"  [label="CFG: "];
"1000617" -> "1000616"  [label="AST: "];
"1000618" -> "1000616"  [label="AST: "];
"1000614" -> "1000616"  [label="CFG: "];
"1000616" -> "1000614"  [label="DDG: f"];
"1000616" -> "1000614"  [label="DDG: 8"];
"1000603" -> "1000616"  [label="DDG: f"];
"1000603" -> "1000601"  [label="AST: "];
"1000603" -> "1000605"  [label="CFG: "];
"1000604" -> "1000603"  [label="AST: "];
"1000605" -> "1000603"  [label="AST: "];
"1000601" -> "1000603"  [label="CFG: "];
"1000603" -> "1000601"  [label="DDG: f"];
"1000603" -> "1000601"  [label="DDG: 8"];
"1000590" -> "1000603"  [label="DDG: f"];
"1000603" -> "1000611"  [label="DDG: f"];
"1000590" -> "1000588"  [label="AST: "];
"1000590" -> "1000592"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000592" -> "1000590"  [label="AST: "];
"1000588" -> "1000590"  [label="CFG: "];
"1000590" -> "1000588"  [label="DDG: f"];
"1000590" -> "1000588"  [label="DDG: 8"];
"1000577" -> "1000590"  [label="DDG: f"];
"1000590" -> "1000598"  [label="DDG: f"];
"1000577" -> "1000575"  [label="AST: "];
"1000577" -> "1000579"  [label="CFG: "];
"1000578" -> "1000577"  [label="AST: "];
"1000579" -> "1000577"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000577" -> "1000575"  [label="DDG: f"];
"1000577" -> "1000575"  [label="DDG: 8"];
"1000573" -> "1000577"  [label="DDG: f"];
"1000577" -> "1000585"  [label="DDG: f"];
"1000573" -> "1000556"  [label="AST: "];
"1000573" -> "1000574"  [label="CFG: "];
"1000574" -> "1000573"  [label="AST: "];
"1000576" -> "1000573"  [label="CFG: "];
"1000573" -> "1003623"  [label="DDG: CHECK(f)"];
"1000640" -> "1000556"  [label="AST: "];
"1000640" -> "1000644"  [label="CFG: "];
"1000641" -> "1000640"  [label="AST: "];
"1000644" -> "1000640"  [label="AST: "];
"1000656" -> "1000640"  [label="CFG: "];
"1000640" -> "1003623"  [label="DDG: c->entries"];
"1000640" -> "1003623"  [label="DDG: (get_bits(f, 8)<<16) + (y<<8) + x"];
"1000645" -> "1000640"  [label="DDG: get_bits(f, 8)"];
"1000645" -> "1000640"  [label="DDG: 16"];
"1000651" -> "1000640"  [label="DDG: y"];
"1000651" -> "1000640"  [label="DDG: 8"];
"1000630" -> "1000640"  [label="DDG: x"];
"1000640" -> "1000677"  [label="DDG: c->entries"];
"1000640" -> "1000694"  [label="DDG: c->entries"];
"1000645" -> "1000644"  [label="AST: "];
"1000645" -> "1000649"  [label="CFG: "];
"1000649" -> "1000645"  [label="AST: "];
"1000652" -> "1000645"  [label="CFG: "];
"1000645" -> "1003623"  [label="DDG: get_bits(f, 8)"];
"1000645" -> "1000644"  [label="DDG: get_bits(f, 8)"];
"1000645" -> "1000644"  [label="DDG: 16"];
"1000651" -> "1000650"  [label="AST: "];
"1000651" -> "1000653"  [label="CFG: "];
"1000652" -> "1000651"  [label="AST: "];
"1000653" -> "1000651"  [label="AST: "];
"1000654" -> "1000651"  [label="CFG: "];
"1000651" -> "1003623"  [label="DDG: y"];
"1000651" -> "1000644"  [label="DDG: y"];
"1000651" -> "1000644"  [label="DDG: 8"];
"1000651" -> "1000650"  [label="DDG: y"];
"1000651" -> "1000650"  [label="DDG: 8"];
"1000635" -> "1000651"  [label="DDG: y"];
"1000635" -> "1000556"  [label="AST: "];
"1000636" -> "1000635"  [label="AST: "];
"1000642" -> "1000635"  [label="CFG: "];
"1000630" -> "1000556"  [label="AST: "];
"1000631" -> "1000630"  [label="AST: "];
"1000636" -> "1000630"  [label="CFG: "];
"1000630" -> "1000644"  [label="DDG: x"];
"1000630" -> "1000650"  [label="DDG: x"];
"1000677" -> "1000671"  [label="AST: "];
"1000677" -> "1000681"  [label="CFG: "];
"1000678" -> "1000677"  [label="AST: "];
"1000681" -> "1000677"  [label="AST: "];
"1000671" -> "1000677"  [label="CFG: "];
"1000677" -> "1003623"  [label="DDG: c->entries"];
"1000677" -> "1000671"  [label="DDG: c->entries"];
"1000677" -> "1000671"  [label="DDG: 0"];
"1000677" -> "1000694"  [label="DDG: c->entries"];
"1000694" -> "1000692"  [label="AST: "];
"1000694" -> "1000696"  [label="CFG: "];
"1000695" -> "1000694"  [label="AST: "];
"1000696" -> "1000694"  [label="AST: "];
"1000692" -> "1000694"  [label="CFG: "];
"1000694" -> "1003623"  [label="DDG: c->entries"];
"1000694" -> "1000692"  [label="DDG: f"];
"1000694" -> "1000692"  [label="DDG: c->entries"];
"1000694" -> "1000717"  [label="DDG: f"];
"1000694" -> "1000731"  [label="DDG: f"];
"1000694" -> "1000736"  [label="DDG: c->entries"];
"1000694" -> "1000789"  [label="DDG: c->entries"];
"1000694" -> "1000816"  [label="DDG: f"];
"1000694" -> "1000875"  [label="DDG: f"];
"1000816" -> "1000815"  [label="AST: "];
"1000816" -> "1000818"  [label="CFG: "];
"1000817" -> "1000816"  [label="AST: "];
"1000818" -> "1000816"  [label="AST: "];
"1000819" -> "1000816"  [label="CFG: "];
"1000816" -> "1000811"  [label="DDG: f"];
"1000816" -> "1000811"  [label="DDG: 5"];
"1000816" -> "1000815"  [label="DDG: f"];
"1000816" -> "1000815"  [label="DDG: 5"];
"1000816" -> "1000829"  [label="DDG: f"];
"1000816" -> "1000875"  [label="DDG: f"];
"1000753" -> "1000751"  [label="AST: "];
"1000753" -> "1000755"  [label="CFG: "];
"1000754" -> "1000753"  [label="AST: "];
"1000755" -> "1000753"  [label="AST: "];
"1000751" -> "1000753"  [label="CFG: "];
"1000753" -> "1003623"  [label="DDG: ilog(limit)"];
"1000753" -> "1000751"  [label="DDG: f"];
"1000753" -> "1000751"  [label="DDG: ilog(limit)"];
"1000731" -> "1000753"  [label="DDG: f"];
"1000755" -> "1000753"  [label="DDG: limit"];
"1000753" -> "1000769"  [label="DDG: f"];
"1000753" -> "1000875"  [label="DDG: f"];
"1000731" -> "1000730"  [label="AST: "];
"1000731" -> "1000733"  [label="CFG: "];
"1000732" -> "1000731"  [label="AST: "];
"1000733" -> "1000731"  [label="AST: "];
"1000734" -> "1000731"  [label="CFG: "];
"1000731" -> "1000728"  [label="DDG: f"];
"1000731" -> "1000728"  [label="DDG: 5"];
"1000731" -> "1000730"  [label="DDG: f"];
"1000731" -> "1000730"  [label="DDG: 5"];
"1000731" -> "1000875"  [label="DDG: f"];
"1000755" -> "1000756"  [label="CFG: "];
"1000756" -> "1000755"  [label="AST: "];
"1000755" -> "1003623"  [label="DDG: limit"];
"1000743" -> "1000755"  [label="DDG: limit"];
"1000743" -> "1000741"  [label="AST: "];
"1000743" -> "1000745"  [label="CFG: "];
"1000744" -> "1000743"  [label="AST: "];
"1000745" -> "1000743"  [label="AST: "];
"1000752" -> "1000743"  [label="CFG: "];
"1000743" -> "1003623"  [label="DDG: c->entries - current_entry"];
"1000745" -> "1000743"  [label="DDG: c->entries"];
"1000745" -> "1000743"  [label="DDG: current_entry"];
"1000745" -> "1000749"  [label="CFG: "];
"1000746" -> "1000745"  [label="AST: "];
"1000749" -> "1000745"  [label="AST: "];
"1000736" -> "1000745"  [label="DDG: c->entries"];
"1000736" -> "1000745"  [label="DDG: current_entry"];
"1000745" -> "1000758"  [label="DDG: current_entry"];
"1000745" -> "1000759"  [label="DDG: current_entry"];
"1000745" -> "1000762"  [label="DDG: c->entries"];
"1000745" -> "1000772"  [label="DDG: current_entry"];
"1000745" -> "1000773"  [label="DDG: current_entry"];
"1000745" -> "1000778"  [label="DDG: current_entry"];
"1000736" -> "1000735"  [label="AST: "];
"1000736" -> "1000738"  [label="CFG: "];
"1000737" -> "1000736"  [label="AST: "];
"1000738" -> "1000736"  [label="AST: "];
"1000744" -> "1000736"  [label="CFG: "];
"1000842" -> "1000736"  [label="CFG: "];
"1000736" -> "1003623"  [label="DDG: c->entries"];
"1000736" -> "1003623"  [label="DDG: current_entry"];
"1000736" -> "1003623"  [label="DDG: current_entry < c->entries"];
"1000724" -> "1000736"  [label="DDG: current_entry"];
"1000778" -> "1000736"  [label="DDG: current_entry"];
"1000762" -> "1000736"  [label="DDG: c->entries"];
"1000736" -> "1000846"  [label="DDG: c->entries"];
"1000736" -> "1000853"  [label="DDG: c->entries"];
"1000736" -> "1000931"  [label="DDG: c->entries"];
"1000736" -> "1000976"  [label="DDG: c->entries"];
"1000736" -> "1001069"  [label="DDG: c->entries"];
"1000736" -> "1001071"  [label="DDG: c->entries"];
"1000736" -> "1001101"  [label="DDG: c->entries"];
"1000724" -> "1000722"  [label="AST: "];
"1000724" -> "1000726"  [label="CFG: "];
"1000725" -> "1000724"  [label="AST: "];
"1000726" -> "1000724"  [label="AST: "];
"1000729" -> "1000724"  [label="CFG: "];
"1000778" -> "1000741"  [label="AST: "];
"1000778" -> "1000780"  [label="CFG: "];
"1000779" -> "1000778"  [label="AST: "];
"1000780" -> "1000778"  [label="AST: "];
"1000782" -> "1000778"  [label="CFG: "];
"1000778" -> "1003623"  [label="DDG: n"];
"1000772" -> "1000778"  [label="DDG: n"];
"1000772" -> "1000741"  [label="AST: "];
"1000772" -> "1000777"  [label="CFG: "];
"1000773" -> "1000772"  [label="AST: "];
"1000776" -> "1000772"  [label="AST: "];
"1000777" -> "1000772"  [label="AST: "];
"1000779" -> "1000772"  [label="CFG: "];
"1000772" -> "1003623"  [label="DDG: lengths + current_entry"];
"1000772" -> "1003623"  [label="DDG: memset(lengths + current_entry, current_length, n)"];
"1000714" -> "1000772"  [label="DDG: lengths"];
"1000823" -> "1000772"  [label="DDG: lengths[j]"];
"1000945" -> "1000772"  [label="DDG: lengths[j]"];
"1000940" -> "1000772"  [label="DDG: lengths[j]"];
"1000834" -> "1000772"  [label="DDG: lengths[j]"];
"1000728" -> "1000772"  [label="DDG: current_length"];
"1000781" -> "1000772"  [label="DDG: current_length"];
"1000751" -> "1000772"  [label="DDG: n"];
"1000772" -> "1000781"  [label="DDG: current_length"];
"1000714" -> "1000713"  [label="AST: "];
"1000714" -> "1000715"  [label="CFG: "];
"1000715" -> "1000714"  [label="AST: "];
"1000718" -> "1000714"  [label="CFG: "];
"1000721" -> "1000714"  [label="CFG: "];
"1000714" -> "1003623"  [label="DDG: !lengths"];
"1000714" -> "1003623"  [label="DDG: lengths"];
"1000823" -> "1000714"  [label="DDG: lengths[j]"];
"1000940" -> "1000714"  [label="DDG: lengths[j]"];
"1000834" -> "1000714"  [label="DDG: lengths[j]"];
"1000690" -> "1000714"  [label="DDG: lengths"];
"1000945" -> "1000714"  [label="DDG: lengths[j]"];
"1000700" -> "1000714"  [label="DDG: lengths"];
"1000714" -> "1000773"  [label="DDG: lengths"];
"1000714" -> "1000823"  [label="DDG: lengths"];
"1000714" -> "1000890"  [label="DDG: lengths"];
"1000714" -> "1000940"  [label="DDG: lengths"];
"1000714" -> "1000945"  [label="DDG: lengths"];
"1000714" -> "1001101"  [label="DDG: lengths"];
"1000823" -> "1000822"  [label="AST: "];
"1000823" -> "1000827"  [label="CFG: "];
"1000824" -> "1000823"  [label="AST: "];
"1000827" -> "1000823"  [label="AST: "];
"1000830" -> "1000823"  [label="CFG: "];
"1000795" -> "1000823"  [label="CFG: "];
"1000823" -> "1003623"  [label="DDG: lengths[j]"];
"1000823" -> "1003623"  [label="DDG: lengths[j] == 32"];
"1000823" -> "1000773"  [label="DDG: lengths[j]"];
"1000811" -> "1000823"  [label="DDG: lengths[j]"];
"1000823" -> "1000890"  [label="DDG: lengths[j]"];
"1000823" -> "1000898"  [label="DDG: lengths[j]"];
"1000823" -> "1000940"  [label="DDG: lengths[j]"];
"1000823" -> "1000945"  [label="DDG: lengths[j]"];
"1000823" -> "1001101"  [label="DDG: lengths[j]"];
"1000823" -> "1001197"  [label="DDG: lengths[j]"];
"1000823" -> "1001230"  [label="DDG: lengths[j]"];
"1000811" -> "1000810"  [label="AST: "];
"1000811" -> "1000815"  [label="CFG: "];
"1000812" -> "1000811"  [label="AST: "];
"1000815" -> "1000811"  [label="AST: "];
"1000821" -> "1000811"  [label="CFG: "];
"1000811" -> "1003623"  [label="DDG: get_bits(f, 5) + 1"];
"1000940" -> "1000939"  [label="AST: "];
"1000940" -> "1000944"  [label="CFG: "];
"1000941" -> "1000940"  [label="AST: "];
"1000944" -> "1000940"  [label="AST: "];
"1000947" -> "1000940"  [label="CFG: "];
"1000939" -> "1000940"  [label="CFG: "];
"1000940" -> "1003623"  [label="DDG: lengths[j]"];
"1000940" -> "1003623"  [label="DDG: STB_VORBIS_FAST_HUFFMAN_LENGTH"];
"1000940" -> "1000773"  [label="DDG: lengths[j]"];
"1000940" -> "1000890"  [label="DDG: lengths[j]"];
"1000940" -> "1000898"  [label="DDG: lengths[j]"];
"1000940" -> "1000939"  [label="DDG: lengths[j]"];
"1000940" -> "1000939"  [label="DDG: STB_VORBIS_FAST_HUFFMAN_LENGTH"];
"1000945" -> "1000940"  [label="DDG: lengths[j]"];
"1000834" -> "1000940"  [label="DDG: lengths[j]"];
"1000904" -> "1000940"  [label="DDG: lengths"];
"1000940" -> "1000945"  [label="DDG: lengths[j]"];
"1000940" -> "1001101"  [label="DDG: lengths[j]"];
"1000940" -> "1001197"  [label="DDG: lengths[j]"];
"1000940" -> "1001230"  [label="DDG: lengths[j]"];
"1000945" -> "1000939"  [label="AST: "];
"1000945" -> "1000949"  [label="CFG: "];
"1000946" -> "1000945"  [label="AST: "];
"1000949" -> "1000945"  [label="AST: "];
"1000939" -> "1000945"  [label="CFG: "];
"1000945" -> "1003623"  [label="DDG: lengths[j]"];
"1000945" -> "1003623"  [label="DDG: NO_CODE"];
"1000945" -> "1000773"  [label="DDG: lengths[j]"];
"1000945" -> "1000834"  [label="DDG: NO_CODE"];
"1000945" -> "1000890"  [label="DDG: lengths[j]"];
"1000945" -> "1000898"  [label="DDG: lengths[j]"];
"1000945" -> "1000939"  [label="DDG: lengths[j]"];
"1000945" -> "1000939"  [label="DDG: NO_CODE"];
"1000904" -> "1000945"  [label="DDG: lengths"];
"1000834" -> "1000945"  [label="DDG: lengths[j]"];
"1000945" -> "1001101"  [label="DDG: lengths[j]"];
"1000945" -> "1001197"  [label="DDG: lengths[j]"];
"1000945" -> "1001230"  [label="DDG: lengths[j]"];
"1000904" -> "1000851"  [label="AST: "];
"1000904" -> "1000906"  [label="CFG: "];
"1000905" -> "1000904"  [label="AST: "];
"1000906" -> "1000904"  [label="AST: "];
"1000911" -> "1000904"  [label="CFG: "];
"1000904" -> "1003623"  [label="DDG: lengths"];
"1000904" -> "1003623"  [label="DDG: c->codeword_lengths"];
"1000890" -> "1000904"  [label="DDG: c->codeword_lengths"];
"1000904" -> "1001101"  [label="DDG: lengths"];
"1000890" -> "1000851"  [label="AST: "];
"1000890" -> "1000895"  [label="CFG: "];
"1000891" -> "1000890"  [label="AST: "];
"1000894" -> "1000890"  [label="AST: "];
"1000895" -> "1000890"  [label="AST: "];
"1000899" -> "1000890"  [label="CFG: "];
"1000890" -> "1003623"  [label="DDG: memcpy(c->codeword_lengths, lengths, c->entries)"];
"1000881" -> "1000890"  [label="DDG: c->codeword_lengths"];
"1000834" -> "1000890"  [label="DDG: lengths[j]"];
"1000875" -> "1000890"  [label="DDG: c->entries"];
"1000890" -> "1000898"  [label="DDG: lengths"];
"1000890" -> "1000898"  [label="DDG: c->entries"];
"1000881" -> "1000880"  [label="AST: "];
"1000881" -> "1000885"  [label="CFG: "];
"1000882" -> "1000881"  [label="AST: "];
"1000885" -> "1000881"  [label="AST: "];
"1000888" -> "1000881"  [label="CFG: "];
"1000892" -> "1000881"  [label="CFG: "];
"1000881" -> "1003623"  [label="DDG: c->codeword_lengths == NULL"];
"1000881" -> "1003623"  [label="DDG: NULL"];
"1000881" -> "1003623"  [label="DDG: c->codeword_lengths"];
"1000869" -> "1000881"  [label="DDG: c->codeword_lengths"];
"1001175" -> "1000881"  [label="DDG: NULL"];
"1001358" -> "1000881"  [label="DDG: NULL"];
"1001677" -> "1000881"  [label="DDG: NULL"];
"1000522" -> "1000881"  [label="DDG: NULL"];
"1001486" -> "1000881"  [label="DDG: NULL"];
"1000881" -> "1000957"  [label="DDG: NULL"];
"1000881" -> "1001146"  [label="DDG: NULL"];
"1000881" -> "1001358"  [label="DDG: NULL"];
"1000881" -> "1001816"  [label="DDG: NULL"];
"1000869" -> "1000851"  [label="AST: "];
"1000869" -> "1000873"  [label="CFG: "];
"1000870" -> "1000869"  [label="AST: "];
"1000873" -> "1000869"  [label="AST: "];
"1000883" -> "1000869"  [label="CFG: "];
"1000869" -> "1003623"  [label="DDG: (uint8 *) setup_malloc(f, c->entries)"];
"1000873" -> "1000869"  [label="DDG: setup_malloc(f, c->entries)"];
"1000873" -> "1000875"  [label="CFG: "];
"1000874" -> "1000873"  [label="AST: "];
"1000875" -> "1000873"  [label="AST: "];
"1000873" -> "1003623"  [label="DDG: setup_malloc(f, c->entries)"];
"1000875" -> "1000873"  [label="DDG: f"];
"1000875" -> "1000873"  [label="DDG: c->entries"];
"1000875" -> "1000877"  [label="CFG: "];
"1000876" -> "1000875"  [label="AST: "];
"1000877" -> "1000875"  [label="AST: "];
"1000875" -> "1003623"  [label="DDG: c->entries"];
"1000853" -> "1000875"  [label="DDG: c->entries"];
"1000875" -> "1000887"  [label="DDG: f"];
"1000875" -> "1000898"  [label="DDG: f"];
"1000853" -> "1000852"  [label="AST: "];
"1000853" -> "1000857"  [label="CFG: "];
"1000854" -> "1000853"  [label="AST: "];
"1000857" -> "1000853"  [label="AST: "];
"1000864" -> "1000853"  [label="CFG: "];
"1000871" -> "1000853"  [label="CFG: "];
"1000853" -> "1003623"  [label="DDG: (int) f->setup_temp_memory_required"];
"1000853" -> "1003623"  [label="DDG: c->entries > (int) f->setup_temp_memory_required"];
"1000789" -> "1000853"  [label="DDG: c->entries"];
"1000846" -> "1000853"  [label="DDG: c->entries"];
"1000857" -> "1000853"  [label="DDG: f->setup_temp_memory_required"];
"1000853" -> "1000862"  [label="DDG: c->entries"];
"1000789" -> "1000785"  [label="AST: "];
"1000789" -> "1000791"  [label="CFG: "];
"1000790" -> "1000789"  [label="AST: "];
"1000791" -> "1000789"  [label="AST: "];
"1000799" -> "1000789"  [label="CFG: "];
"1000842" -> "1000789"  [label="CFG: "];
"1000789" -> "1003623"  [label="DDG: c->entries"];
"1000789" -> "1003623"  [label="DDG: j < c->entries"];
"1000789" -> "1003623"  [label="DDG: j"];
"1000794" -> "1000789"  [label="DDG: j"];
"1000786" -> "1000789"  [label="DDG: j"];
"1000789" -> "1000794"  [label="DDG: j"];
"1000789" -> "1000846"  [label="DDG: c->entries"];
"1000789" -> "1000931"  [label="DDG: c->entries"];
"1000789" -> "1000976"  [label="DDG: c->entries"];
"1000789" -> "1001069"  [label="DDG: c->entries"];
"1000789" -> "1001071"  [label="DDG: c->entries"];
"1000789" -> "1001101"  [label="DDG: c->entries"];
"1000794" -> "1000785"  [label="AST: "];
"1000794" -> "1000795"  [label="CFG: "];
"1000795" -> "1000794"  [label="AST: "];
"1000790" -> "1000794"  [label="CFG: "];
"1000786" -> "1000785"  [label="AST: "];
"1000786" -> "1000788"  [label="CFG: "];
"1000787" -> "1000786"  [label="AST: "];
"1000788" -> "1000786"  [label="AST: "];
"1000790" -> "1000786"  [label="CFG: "];
"1000846" -> "1000844"  [label="AST: "];
"1000846" -> "1000850"  [label="CFG: "];
"1000847" -> "1000846"  [label="AST: "];
"1000850" -> "1000846"  [label="AST: "];
"1000844" -> "1000846"  [label="CFG: "];
"1000846" -> "1003623"  [label="DDG: c->entries"];
"1000846" -> "1000844"  [label="DDG: c->entries"];
"1000846" -> "1000844"  [label="DDG: 2"];
"1000846" -> "1000931"  [label="DDG: c->entries"];
"1000846" -> "1000976"  [label="DDG: c->entries"];
"1000846" -> "1001069"  [label="DDG: c->entries"];
"1000846" -> "1001071"  [label="DDG: c->entries"];
"1000846" -> "1001101"  [label="DDG: c->entries"];
"1000857" -> "1000859"  [label="CFG: "];
"1000858" -> "1000857"  [label="AST: "];
"1000859" -> "1000857"  [label="AST: "];
"1000857" -> "1003623"  [label="DDG: f->setup_temp_memory_required"];
"1001089" -> "1000857"  [label="DDG: f->setup_temp_memory_required"];
"1000862" -> "1000857"  [label="DDG: f->setup_temp_memory_required"];
"1001094" -> "1000857"  [label="DDG: f->setup_temp_memory_required"];
"1000857" -> "1001089"  [label="DDG: f->setup_temp_memory_required"];
"1001089" -> "1001088"  [label="AST: "];
"1001089" -> "1001091"  [label="CFG: "];
"1001090" -> "1001089"  [label="AST: "];
"1001091" -> "1001089"  [label="AST: "];
"1001096" -> "1001089"  [label="CFG: "];
"1001102" -> "1001089"  [label="CFG: "];
"1001089" -> "1003623"  [label="DDG: f->setup_temp_memory_required"];
"1001089" -> "1003623"  [label="DDG: size > f->setup_temp_memory_required"];
"1001089" -> "1003623"  [label="DDG: size"];
"1001069" -> "1001089"  [label="DDG: size"];
"1000862" -> "1001089"  [label="DDG: f->setup_temp_memory_required"];
"1001094" -> "1001089"  [label="DDG: f->setup_temp_memory_required"];
"1001089" -> "1001094"  [label="DDG: size"];
"1001069" -> "1000996"  [label="AST: "];
"1001069" -> "1001071"  [label="CFG: "];
"1001070" -> "1001069"  [label="AST: "];
"1001071" -> "1001069"  [label="AST: "];
"1001090" -> "1001069"  [label="CFG: "];
"1001069" -> "1003623"  [label="DDG: c->entries + (sizeof(*c->codewords) + sizeof(*values)) * c->sorted_entries"];
"1000931" -> "1001069"  [label="DDG: c->entries"];
"1000898" -> "1001069"  [label="DDG: c->entries"];
"1001075" -> "1001069"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001075" -> "1001069"  [label="DDG: c->sorted_entries"];
"1000931" -> "1000927"  [label="AST: "];
"1000931" -> "1000933"  [label="CFG: "];
"1000932" -> "1000931"  [label="AST: "];
"1000933" -> "1000931"  [label="AST: "];
"1000942" -> "1000931"  [label="CFG: "];
"1000954" -> "1000931"  [label="CFG: "];
"1000931" -> "1003623"  [label="DDG: c->entries"];
"1000931" -> "1003623"  [label="DDG: j"];
"1000931" -> "1003623"  [label="DDG: j < c->entries"];
"1000936" -> "1000931"  [label="DDG: j"];
"1000928" -> "1000931"  [label="DDG: j"];
"1000898" -> "1000931"  [label="DDG: c->entries"];
"1000931" -> "1000936"  [label="DDG: j"];
"1000931" -> "1000976"  [label="DDG: c->entries"];
"1000931" -> "1001071"  [label="DDG: c->entries"];
"1000931" -> "1001101"  [label="DDG: c->entries"];
"1000936" -> "1000927"  [label="AST: "];
"1000936" -> "1000937"  [label="CFG: "];
"1000937" -> "1000936"  [label="AST: "];
"1000932" -> "1000936"  [label="CFG: "];
"1000928" -> "1000927"  [label="AST: "];
"1000928" -> "1000930"  [label="CFG: "];
"1000929" -> "1000928"  [label="AST: "];
"1000930" -> "1000928"  [label="AST: "];
"1000932" -> "1000928"  [label="CFG: "];
"1000898" -> "1000851"  [label="AST: "];
"1000898" -> "1000901"  [label="CFG: "];
"1000899" -> "1000898"  [label="AST: "];
"1000900" -> "1000898"  [label="AST: "];
"1000901" -> "1000898"  [label="AST: "];
"1000905" -> "1000898"  [label="CFG: "];
"1000898" -> "1003623"  [label="DDG: setup_temp_free(f, lengths, c->entries)"];
"1000898" -> "1003623"  [label="DDG: c->entries"];
"1000834" -> "1000898"  [label="DDG: lengths[j]"];
"1000898" -> "1000976"  [label="DDG: c->entries"];
"1000898" -> "1001071"  [label="DDG: c->entries"];
"1000898" -> "1001101"  [label="DDG: c->entries"];
"1000834" -> "1000833"  [label="AST: "];
"1000834" -> "1000838"  [label="CFG: "];
"1000835" -> "1000834"  [label="AST: "];
"1000838" -> "1000834"  [label="AST: "];
"1000795" -> "1000834"  [label="CFG: "];
"1000834" -> "1003623"  [label="DDG: NO_CODE"];
"1000834" -> "1003623"  [label="DDG: lengths[j]"];
"1000834" -> "1000773"  [label="DDG: lengths[j]"];
"1000834" -> "1001101"  [label="DDG: lengths[j]"];
"1000834" -> "1001197"  [label="DDG: lengths[j]"];
"1000834" -> "1001230"  [label="DDG: lengths[j]"];
"1001075" -> "1001071"  [label="AST: "];
"1001075" -> "1001085"  [label="CFG: "];
"1001076" -> "1001075"  [label="AST: "];
"1001085" -> "1001075"  [label="AST: "];
"1001071" -> "1001075"  [label="CFG: "];
"1001075" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001075" -> "1003623"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001075" -> "1001071"  [label="DDG: sizeof(*c->codewords) + sizeof(*values)"];
"1001075" -> "1001071"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001075"  [label="DDG: c->sorted_entries"];
"1001055" -> "1001075"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001134"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001140"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001163"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001169"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001209"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001434"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001507"  [label="DDG: c->sorted_entries"];
"1001075" -> "1001509"  [label="DDG: c->sorted_entries"];
"1000952" -> "1000556"  [label="AST: "];
"1000952" -> "1000956"  [label="CFG: "];
"1000953" -> "1000952"  [label="AST: "];
"1000956" -> "1000952"  [label="AST: "];
"1000958" -> "1000952"  [label="CFG: "];
"1000952" -> "1003623"  [label="DDG: c->sorted_entries"];
"1000952" -> "1003623"  [label="DDG: sorted_count"];
"1000919" -> "1000952"  [label="DDG: sorted_count"];
"1000924" -> "1000952"  [label="DDG: sorted_count"];
"1000950" -> "1000952"  [label="DDG: sorted_count"];
"1000952" -> "1001009"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001134"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001140"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001163"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001169"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001209"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001434"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001507"  [label="DDG: c->sorted_entries"];
"1000952" -> "1001509"  [label="DDG: c->sorted_entries"];
"1000919" -> "1000918"  [label="AST: "];
"1000919" -> "1000921"  [label="CFG: "];
"1000920" -> "1000919"  [label="AST: "];
"1000921" -> "1000919"  [label="AST: "];
"1000954" -> "1000919"  [label="CFG: "];
"1000919" -> "1003623"  [label="DDG: total"];
"1000561" -> "1000919"  [label="DDG: total"];
"1000844" -> "1000919"  [label="DDG: total"];
"1000820" -> "1000919"  [label="DDG: total"];
"1000561" -> "1000556"  [label="AST: "];
"1000561" -> "1000563"  [label="CFG: "];
"1000562" -> "1000561"  [label="AST: "];
"1000563" -> "1000561"  [label="AST: "];
"1000567" -> "1000561"  [label="CFG: "];
"1000561" -> "1003623"  [label="DDG: total"];
"1000561" -> "1000820"  [label="DDG: total"];
"1000561" -> "1000844"  [label="DDG: total"];
"1000844" -> "1000840"  [label="AST: "];
"1000845" -> "1000844"  [label="AST: "];
"1000840" -> "1000844"  [label="CFG: "];
"1000844" -> "1003623"  [label="DDG: c->entries >> 2"];
"1000844" -> "1003623"  [label="DDG: total"];
"1000844" -> "1000840"  [label="DDG: total"];
"1000844" -> "1000840"  [label="DDG: c->entries >> 2"];
"1000820" -> "1000844"  [label="DDG: total"];
"1000820" -> "1000810"  [label="AST: "];
"1000820" -> "1000821"  [label="CFG: "];
"1000821" -> "1000820"  [label="AST: "];
"1000825" -> "1000820"  [label="CFG: "];
"1000820" -> "1003623"  [label="DDG: total"];
"1000924" -> "1000923"  [label="AST: "];
"1000924" -> "1000926"  [label="CFG: "];
"1000925" -> "1000924"  [label="AST: "];
"1000926" -> "1000924"  [label="AST: "];
"1000929" -> "1000924"  [label="CFG: "];
"1000924" -> "1000950"  [label="DDG: sorted_count"];
"1000950" -> "1000938"  [label="AST: "];
"1000950" -> "1000951"  [label="CFG: "];
"1000951" -> "1000950"  [label="AST: "];
"1000937" -> "1000950"  [label="CFG: "];
"1001055" -> "1001053"  [label="AST: "];
"1001055" -> "1001059"  [label="CFG: "];
"1001056" -> "1001055"  [label="AST: "];
"1001059" -> "1001055"  [label="AST: "];
"1001053" -> "1001055"  [label="CFG: "];
"1001055" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001055" -> "1001053"  [label="DDG: c->sorted_entries"];
"1001031" -> "1001055"  [label="DDG: c->sorted_entries"];
"1001031" -> "1001029"  [label="AST: "];
"1001031" -> "1001037"  [label="CFG: "];
"1001032" -> "1001031"  [label="AST: "];
"1001037" -> "1001031"  [label="AST: "];
"1001029" -> "1001031"  [label="CFG: "];
"1001031" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001031" -> "1001029"  [label="DDG: c->sorted_entries"];
"1001009" -> "1001031"  [label="DDG: c->sorted_entries"];
"1001009" -> "1001007"  [label="AST: "];
"1001009" -> "1001011"  [label="CFG: "];
"1001010" -> "1001009"  [label="AST: "];
"1001011" -> "1001009"  [label="AST: "];
"1001007" -> "1001009"  [label="CFG: "];
"1001009" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001009" -> "1001007"  [label="DDG: f"];
"1001009" -> "1001007"  [label="DDG: c->sorted_entries"];
"1001009" -> "1001020"  [label="DDG: f"];
"1001009" -> "1001029"  [label="DDG: f"];
"1000862" -> "1000852"  [label="AST: "];
"1000862" -> "1000866"  [label="CFG: "];
"1000863" -> "1000862"  [label="AST: "];
"1000866" -> "1000862"  [label="AST: "];
"1000871" -> "1000862"  [label="CFG: "];
"1000862" -> "1003623"  [label="DDG: f->setup_temp_memory_required"];
"1001094" -> "1001088"  [label="AST: "];
"1001094" -> "1001098"  [label="CFG: "];
"1001095" -> "1001094"  [label="AST: "];
"1001098" -> "1001094"  [label="AST: "];
"1001102" -> "1001094"  [label="CFG: "];
"1001094" -> "1003623"  [label="DDG: size"];
"1001094" -> "1003623"  [label="DDG: f->setup_temp_memory_required"];
"1001175" -> "1001174"  [label="AST: "];
"1001175" -> "1001179"  [label="CFG: "];
"1001176" -> "1001175"  [label="AST: "];
"1001179" -> "1001175"  [label="AST: "];
"1001182" -> "1001175"  [label="CFG: "];
"1001186" -> "1001175"  [label="CFG: "];
"1001175" -> "1003623"  [label="DDG: c->sorted_values"];
"1001175" -> "1003623"  [label="DDG: NULL"];
"1001175" -> "1003623"  [label="DDG: c->sorted_values == NULL"];
"1001175" -> "1000957"  [label="DDG: NULL"];
"1001175" -> "1001146"  [label="DDG: NULL"];
"1001155" -> "1001175"  [label="DDG: c->sorted_values"];
"1001188" -> "1001175"  [label="DDG: c->sorted_values[-1]"];
"1001146" -> "1001175"  [label="DDG: NULL"];
"1001175" -> "1001184"  [label="DDG: c->sorted_values"];
"1001175" -> "1001236"  [label="DDG: NULL"];
"1001175" -> "1001358"  [label="DDG: NULL"];
"1001175" -> "1001816"  [label="DDG: NULL"];
"1001155" -> "1001125"  [label="AST: "];
"1001155" -> "1001159"  [label="CFG: "];
"1001156" -> "1001155"  [label="AST: "];
"1001159" -> "1001155"  [label="AST: "];
"1001177" -> "1001155"  [label="CFG: "];
"1001155" -> "1003623"  [label="DDG: ( int   *) setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001159" -> "1001155"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001159" -> "1001161"  [label="CFG: "];
"1001160" -> "1001159"  [label="AST: "];
"1001161" -> "1001159"  [label="AST: "];
"1001159" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_values   ) * (c->sorted_entries+1))"];
"1001161" -> "1001159"  [label="DDG: f"];
"1001161" -> "1001159"  [label="DDG: sizeof(*c->sorted_values   ) * (c->sorted_entries+1)"];
"1001161" -> "1001163"  [label="CFG: "];
"1001162" -> "1001161"  [label="AST: "];
"1001163" -> "1001161"  [label="AST: "];
"1001161" -> "1003623"  [label="DDG: sizeof(*c->sorted_values   ) * (c->sorted_entries+1)"];
"1001132" -> "1001161"  [label="DDG: f"];
"1001163" -> "1001161"  [label="DDG: c->sorted_entries+1"];
"1001161" -> "1001181"  [label="DDG: f"];
"1001161" -> "1001206"  [label="DDG: f"];
"1001132" -> "1001130"  [label="AST: "];
"1001132" -> "1001134"  [label="CFG: "];
"1001133" -> "1001132"  [label="AST: "];
"1001134" -> "1001132"  [label="AST: "];
"1001130" -> "1001132"  [label="CFG: "];
"1001132" -> "1003623"  [label="DDG: sizeof(*c->sorted_codewords) * (c->sorted_entries+1)"];
"1001132" -> "1001130"  [label="DDG: f"];
"1001132" -> "1001130"  [label="DDG: sizeof(*c->sorted_codewords) * (c->sorted_entries+1)"];
"1001053" -> "1001132"  [label="DDG: f"];
"1001134" -> "1001132"  [label="DDG: c->sorted_entries+1"];
"1001132" -> "1001152"  [label="DDG: f"];
"1001053" -> "1001051"  [label="AST: "];
"1001054" -> "1001053"  [label="AST: "];
"1001051" -> "1001053"  [label="CFG: "];
"1001053" -> "1003623"  [label="DDG: sizeof(*values) * c->sorted_entries"];
"1001053" -> "1001051"  [label="DDG: f"];
"1001053" -> "1001051"  [label="DDG: sizeof(*values) * c->sorted_entries"];
"1001029" -> "1001053"  [label="DDG: f"];
"1001053" -> "1001066"  [label="DDG: f"];
"1001053" -> "1001113"  [label="DDG: f"];
"1001053" -> "1001118"  [label="DDG: f"];
"1001053" -> "1001206"  [label="DDG: f"];
"1001029" -> "1001027"  [label="AST: "];
"1001030" -> "1001029"  [label="AST: "];
"1001027" -> "1001029"  [label="CFG: "];
"1001029" -> "1003623"  [label="DDG: sizeof(*c->codewords) * c->sorted_entries"];
"1001029" -> "1001027"  [label="DDG: f"];
"1001029" -> "1001027"  [label="DDG: sizeof(*c->codewords) * c->sorted_entries"];
"1001029" -> "1001046"  [label="DDG: f"];
"1001134" -> "1001140"  [label="CFG: "];
"1001135" -> "1001134"  [label="AST: "];
"1001140" -> "1001134"  [label="AST: "];
"1001134" -> "1003623"  [label="DDG: c->sorted_entries+1"];
"1001163" -> "1001169"  [label="CFG: "];
"1001164" -> "1001163"  [label="AST: "];
"1001169" -> "1001163"  [label="AST: "];
"1001163" -> "1003623"  [label="DDG: c->sorted_entries+1"];
"1001188" -> "1001125"  [label="AST: "];
"1001188" -> "1001195"  [label="CFG: "];
"1001189" -> "1001188"  [label="AST: "];
"1001195" -> "1001188"  [label="AST: "];
"1001198" -> "1001188"  [label="CFG: "];
"1001188" -> "1003623"  [label="DDG: c->sorted_values[-1]"];
"1001188" -> "1003623"  [label="DDG: -1"];
"1001188" -> "1001184"  [label="DDG: c->sorted_values[-1]"];
"1001195" -> "1001188"  [label="DDG: 1"];
"1001195" -> "1001196"  [label="CFG: "];
"1001196" -> "1001195"  [label="AST: "];
"1001146" -> "1001145"  [label="AST: "];
"1001146" -> "1001150"  [label="CFG: "];
"1001147" -> "1001146"  [label="AST: "];
"1001150" -> "1001146"  [label="AST: "];
"1001153" -> "1001146"  [label="CFG: "];
"1001157" -> "1001146"  [label="CFG: "];
"1001146" -> "1003623"  [label="DDG: c->sorted_codewords == NULL"];
"1001146" -> "1003623"  [label="DDG: NULL"];
"1001146" -> "1003623"  [label="DDG: c->sorted_codewords"];
"1001126" -> "1001146"  [label="DDG: c->sorted_codewords"];
"1001358" -> "1001146"  [label="DDG: NULL"];
"1001677" -> "1001146"  [label="DDG: NULL"];
"1000522" -> "1001146"  [label="DDG: NULL"];
"1001486" -> "1001146"  [label="DDG: NULL"];
"1001126" -> "1001125"  [label="AST: "];
"1001126" -> "1001130"  [label="CFG: "];
"1001127" -> "1001126"  [label="AST: "];
"1001130" -> "1001126"  [label="AST: "];
"1001148" -> "1001126"  [label="CFG: "];
"1001126" -> "1003623"  [label="DDG: (uint32 *) setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001130" -> "1001126"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001131" -> "1001130"  [label="AST: "];
"1001130" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(*c->sorted_codewords) * (c->sorted_entries+1))"];
"1001358" -> "1001357"  [label="AST: "];
"1001358" -> "1001360"  [label="CFG: "];
"1001359" -> "1001358"  [label="AST: "];
"1001360" -> "1001358"  [label="AST: "];
"1001363" -> "1001358"  [label="CFG: "];
"1001367" -> "1001358"  [label="CFG: "];
"1001358" -> "1003623"  [label="DDG: mults"];
"1001358" -> "1003623"  [label="DDG: NULL"];
"1001358" -> "1003623"  [label="DDG: mults == NULL"];
"1001358" -> "1000957"  [label="DDG: NULL"];
"1001573" -> "1001358"  [label="DDG: mults[off]"];
"1001407" -> "1001358"  [label="DDG: mults[j]"];
"1001343" -> "1001358"  [label="DDG: mults"];
"1001716" -> "1001358"  [label="DDG: mults[j]"];
"1001677" -> "1001358"  [label="DDG: NULL"];
"1000522" -> "1001358"  [label="DDG: NULL"];
"1001486" -> "1001358"  [label="DDG: NULL"];
"1001358" -> "1001392"  [label="DDG: mults"];
"1001358" -> "1001486"  [label="DDG: NULL"];
"1001358" -> "1001492"  [label="DDG: mults"];
"1001358" -> "1001565"  [label="DDG: mults"];
"1001358" -> "1001573"  [label="DDG: mults"];
"1001358" -> "1001625"  [label="DDG: mults"];
"1001358" -> "1001677"  [label="DDG: NULL"];
"1001358" -> "1001683"  [label="DDG: mults"];
"1001358" -> "1001716"  [label="DDG: mults"];
"1001358" -> "1001816"  [label="DDG: NULL"];
"1001573" -> "1001572"  [label="AST: "];
"1001573" -> "1001577"  [label="CFG: "];
"1001574" -> "1001573"  [label="AST: "];
"1001577" -> "1001573"  [label="AST: "];
"1001582" -> "1001573"  [label="CFG: "];
"1001573" -> "1003623"  [label="DDG: mults[off]"];
"1001573" -> "1003623"  [label="DDG: c->delta_value"];
"1001573" -> "1001392"  [label="DDG: mults[off]"];
"1001573" -> "1001492"  [label="DDG: mults[off]"];
"1001573" -> "1001565"  [label="DDG: mults[off]"];
"1001573" -> "1001570"  [label="DDG: mults[off]"];
"1001573" -> "1001570"  [label="DDG: c->delta_value"];
"1001573" -> "1001572"  [label="DDG: mults[off]"];
"1001573" -> "1001572"  [label="DDG: c->delta_value"];
"1001278" -> "1001573"  [label="DDG: c->delta_value"];
"1001573" -> "1001625"  [label="DDG: mults[off]"];
"1001573" -> "1001683"  [label="DDG: mults[off]"];
"1001278" -> "1001268"  [label="AST: "];
"1001278" -> "1001282"  [label="CFG: "];
"1001279" -> "1001278"  [label="AST: "];
"1001282" -> "1001278"  [label="AST: "];
"1001288" -> "1001278"  [label="CFG: "];
"1001278" -> "1003623"  [label="DDG: float32_unpack(get_bits(f, 32))"];
"1001278" -> "1003623"  [label="DDG: c->delta_value"];
"1001282" -> "1001278"  [label="DDG: get_bits(f, 32)"];
"1001278" -> "1001716"  [label="DDG: c->delta_value"];
"1001282" -> "1003623"  [label="DDG: get_bits(f, 32)"];
"1001407" -> "1001378"  [label="AST: "];
"1001407" -> "1001411"  [label="CFG: "];
"1001408" -> "1001407"  [label="AST: "];
"1001411" -> "1001407"  [label="AST: "];
"1001377" -> "1001407"  [label="CFG: "];
"1001407" -> "1003623"  [label="DDG: q"];
"1001407" -> "1003623"  [label="DDG: mults[j]"];
"1001407" -> "1001392"  [label="DDG: mults[j]"];
"1001388" -> "1001407"  [label="DDG: q"];
"1001407" -> "1001492"  [label="DDG: mults[j]"];
"1001407" -> "1001625"  [label="DDG: mults[j]"];
"1001407" -> "1001683"  [label="DDG: mults[j]"];
"1001407" -> "1001716"  [label="DDG: mults[j]"];
"1001388" -> "1001387"  [label="AST: "];
"1001388" -> "1001390"  [label="CFG: "];
"1001389" -> "1001388"  [label="AST: "];
"1001390" -> "1001388"  [label="AST: "];
"1001393" -> "1001388"  [label="CFG: "];
"1001409" -> "1001388"  [label="CFG: "];
"1001388" -> "1003623"  [label="DDG: q == EOP"];
"1001388" -> "1003623"  [label="DDG: q"];
"1001388" -> "1003623"  [label="DDG: EOP"];
"1001380" -> "1001388"  [label="DDG: q"];
"1001380" -> "1001378"  [label="AST: "];
"1001381" -> "1001380"  [label="AST: "];
"1001389" -> "1001380"  [label="CFG: "];
"1001380" -> "1003623"  [label="DDG: get_bits(f, c->value_bits)"];
"1001343" -> "1001268"  [label="AST: "];
"1001343" -> "1001345"  [label="CFG: "];
"1001344" -> "1001343"  [label="AST: "];
"1001345" -> "1001343"  [label="AST: "];
"1001359" -> "1001343"  [label="CFG: "];
"1001343" -> "1003623"  [label="DDG: (uint16 *) setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001345" -> "1001343"  [label="DDG: setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001346" -> "1001345"  [label="AST: "];
"1001345" -> "1003623"  [label="DDG: setup_temp_malloc(f, sizeof(mults[0]) * c->lookup_values)"];
"1001716" -> "1001715"  [label="AST: "];
"1001716" -> "1001720"  [label="CFG: "];
"1001717" -> "1001716"  [label="AST: "];
"1001720" -> "1001716"  [label="AST: "];
"1001725" -> "1001716"  [label="CFG: "];
"1001716" -> "1003623"  [label="DDG: c->delta_value"];
"1001716" -> "1003623"  [label="DDG: mults[j]"];
"1001716" -> "1001392"  [label="DDG: mults[j]"];
"1001716" -> "1001492"  [label="DDG: mults[j]"];
"1001716" -> "1001625"  [label="DDG: mults[j]"];
"1001716" -> "1001683"  [label="DDG: mults[j]"];
"1001716" -> "1001713"  [label="DDG: mults[j]"];
"1001716" -> "1001713"  [label="DDG: c->delta_value"];
"1001716" -> "1001715"  [label="DDG: mults[j]"];
"1001716" -> "1001715"  [label="DDG: c->delta_value"];
"1001677" -> "1001676"  [label="AST: "];
"1001677" -> "1001681"  [label="CFG: "];
"1001678" -> "1001677"  [label="AST: "];
"1001681" -> "1001677"  [label="AST: "];
"1001684" -> "1001677"  [label="CFG: "];
"1001700" -> "1001677"  [label="CFG: "];
"1001677" -> "1003623"  [label="DDG: c->multiplicands"];
"1001677" -> "1003623"  [label="DDG: NULL"];
"1001677" -> "1003623"  [label="DDG: c->multiplicands == NULL"];
"1001677" -> "1000957"  [label="DDG: NULL"];
"1001728" -> "1001677"  [label="DDG: c->multiplicands[j]"];
"1001658" -> "1001677"  [label="DDG: c->multiplicands"];
"1001585" -> "1001677"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001677" -> "1001816"  [label="DDG: NULL"];
"1001728" -> "1001711"  [label="AST: "];
"1001728" -> "1001734"  [label="CFG: "];
"1001729" -> "1001728"  [label="AST: "];
"1001734" -> "1001728"  [label="AST: "];
"1001737" -> "1001728"  [label="CFG: "];
"1001728" -> "1003623"  [label="DDG: c->multiplicands[j]"];
"1001728" -> "1003623"  [label="DDG: val"];
"1001728" -> "1001486"  [label="DDG: c->multiplicands[j]"];
"1001713" -> "1001728"  [label="DDG: val"];
"1001713" -> "1001711"  [label="AST: "];
"1001713" -> "1001715"  [label="CFG: "];
"1001714" -> "1001713"  [label="AST: "];
"1001715" -> "1001713"  [label="AST: "];
"1001731" -> "1001713"  [label="CFG: "];
"1001713" -> "1003623"  [label="DDG: mults[j] * c->delta_value + c->minimum_value + last"];
"1001270" -> "1001713"  [label="DDG: c->minimum_value"];
"1001653" -> "1001713"  [label="DDG: last"];
"1001739" -> "1001713"  [label="DDG: last"];
"1001713" -> "1001739"  [label="DDG: val"];
"1001270" -> "1001268"  [label="AST: "];
"1001270" -> "1001274"  [label="CFG: "];
"1001271" -> "1001270"  [label="AST: "];
"1001274" -> "1001270"  [label="AST: "];
"1001280" -> "1001270"  [label="CFG: "];
"1001270" -> "1003623"  [label="DDG: c->minimum_value"];
"1001274" -> "1001270"  [label="DDG: get_bits(f, 32)"];
"1001270" -> "1001570"  [label="DDG: c->minimum_value"];
"1001270" -> "1001572"  [label="DDG: c->minimum_value"];
"1001270" -> "1001580"  [label="DDG: c->minimum_value"];
"1001270" -> "1001715"  [label="DDG: c->minimum_value"];
"1001270" -> "1001723"  [label="DDG: c->minimum_value"];
"1001653" -> "1001651"  [label="AST: "];
"1001653" -> "1001655"  [label="CFG: "];
"1001654" -> "1001653"  [label="AST: "];
"1001655" -> "1001653"  [label="AST: "];
"1001657" -> "1001653"  [label="CFG: "];
"1001653" -> "1003623"  [label="DDG: last"];
"1001653" -> "1001715"  [label="DDG: last"];
"1001653" -> "1001723"  [label="DDG: last"];
"1001739" -> "1001735"  [label="AST: "];
"1001739" -> "1001741"  [label="CFG: "];
"1001740" -> "1001739"  [label="AST: "];
"1001741" -> "1001739"  [label="AST: "];
"1001710" -> "1001739"  [label="CFG: "];
"1001739" -> "1003623"  [label="DDG: val"];
"1001739" -> "1003623"  [label="DDG: last"];
"1001739" -> "1001715"  [label="DDG: last"];
"1001739" -> "1001723"  [label="DDG: last"];
"1001658" -> "1001651"  [label="AST: "];
"1001658" -> "1001662"  [label="CFG: "];
"1001659" -> "1001658"  [label="AST: "];
"1001662" -> "1001658"  [label="AST: "];
"1001679" -> "1001658"  [label="CFG: "];
"1001658" -> "1003623"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001662" -> "1001658"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001662" -> "1001664"  [label="CFG: "];
"1001663" -> "1001662"  [label="AST: "];
"1001664" -> "1001662"  [label="AST: "];
"1001662" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->lookup_values)"];
"1001664" -> "1001662"  [label="DDG: f"];
"1001664" -> "1001662"  [label="DDG: sizeof(c->multiplicands[0]) * c->lookup_values"];
"1001664" -> "1001666"  [label="CFG: "];
"1001665" -> "1001664"  [label="AST: "];
"1001666" -> "1001664"  [label="AST: "];
"1001664" -> "1003623"  [label="DDG: sizeof(c->multiplicands[0]) * c->lookup_values"];
"1001656" -> "1001664"  [label="DDG: f"];
"1001666" -> "1001664"  [label="DDG: c->lookup_values"];
"1001664" -> "1001683"  [label="DDG: f"];
"1001656" -> "1001651"  [label="AST: "];
"1001656" -> "1001657"  [label="CFG: "];
"1001657" -> "1001656"  [label="AST: "];
"1001660" -> "1001656"  [label="CFG: "];
"1001656" -> "1003623"  [label="DDG: CHECK(f)"];
"1001666" -> "1001673"  [label="CFG: "];
"1001667" -> "1001666"  [label="AST: "];
"1001673" -> "1001666"  [label="AST: "];
"1001371" -> "1001666"  [label="DDG: c->lookup_values"];
"1001666" -> "1001686"  [label="DDG: c->lookup_values"];
"1001666" -> "1001704"  [label="DDG: c->lookup_values"];
"1001371" -> "1001369"  [label="AST: "];
"1001371" -> "1001373"  [label="CFG: "];
"1001372" -> "1001371"  [label="AST: "];
"1001373" -> "1001371"  [label="AST: "];
"1001369" -> "1001371"  [label="CFG: "];
"1001371" -> "1001369"  [label="DDG: c->lookup_values"];
"1001349" -> "1001371"  [label="DDG: c->lookup_values"];
"1001371" -> "1001395"  [label="DDG: c->lookup_values"];
"1001371" -> "1001495"  [label="DDG: c->lookup_values"];
"1001371" -> "1001557"  [label="DDG: c->lookup_values"];
"1001371" -> "1001746"  [label="DDG: c->lookup_values"];
"1001349" -> "1001354"  [label="CFG: "];
"1001350" -> "1001349"  [label="AST: "];
"1001354" -> "1001349"  [label="AST: "];
"1001349" -> "1003623"  [label="DDG: c->lookup_values"];
"1001334" -> "1001349"  [label="DDG: c->lookup_values"];
"1001334" -> "1001333"  [label="AST: "];
"1001334" -> "1001338"  [label="CFG: "];
"1001335" -> "1001334"  [label="AST: "];
"1001338" -> "1001334"  [label="AST: "];
"1001341" -> "1001334"  [label="CFG: "];
"1001344" -> "1001334"  [label="CFG: "];
"1001334" -> "1003623"  [label="DDG: c->lookup_values"];
"1001334" -> "1003623"  [label="DDG: c->lookup_values == 0"];
"1001309" -> "1001334"  [label="DDG: c->lookup_values"];
"1001322" -> "1001334"  [label="DDG: c->lookup_values"];
"1001309" -> "1001308"  [label="AST: "];
"1001309" -> "1001313"  [label="CFG: "];
"1001310" -> "1001309"  [label="AST: "];
"1001313" -> "1001309"  [label="AST: "];
"1001336" -> "1001309"  [label="CFG: "];
"1001309" -> "1003623"  [label="DDG: lookup1_values(c->entries, c->dimensions)"];
"1001313" -> "1001309"  [label="DDG: c->entries"];
"1001313" -> "1001309"  [label="DDG: c->dimensions"];
"1001313" -> "1001317"  [label="CFG: "];
"1001314" -> "1001313"  [label="AST: "];
"1001317" -> "1001313"  [label="AST: "];
"1001313" -> "1003623"  [label="DDG: c->dimensions"];
"1001313" -> "1003623"  [label="DDG: c->entries"];
"1001230" -> "1001313"  [label="DDG: c->entries"];
"1001101" -> "1001313"  [label="DDG: c->entries"];
"1000672" -> "1001313"  [label="DDG: c->dimensions"];
"1001313" -> "1001455"  [label="DDG: c->dimensions"];
"1001313" -> "1001478"  [label="DDG: c->entries"];
"1001313" -> "1001478"  [label="DDG: c->dimensions"];
"1001313" -> "1001507"  [label="DDG: c->entries"];
"1001313" -> "1001509"  [label="DDG: c->entries"];
"1001230" -> "1001205"  [label="AST: "];
"1001230" -> "1001233"  [label="CFG: "];
"1001231" -> "1001230"  [label="AST: "];
"1001232" -> "1001230"  [label="AST: "];
"1001233" -> "1001230"  [label="AST: "];
"1001238" -> "1001230"  [label="CFG: "];
"1001230" -> "1003623"  [label="DDG: lengths"];
"1001230" -> "1003623"  [label="DDG: c->entries"];
"1001230" -> "1003623"  [label="DDG: setup_temp_free(f, lengths, c->entries)"];
"1001216" -> "1001230"  [label="DDG: f"];
"1001197" -> "1001230"  [label="DDG: lengths"];
"1001101" -> "1001230"  [label="DDG: lengths"];
"1001101" -> "1001230"  [label="DDG: c->entries"];
"1001230" -> "1001326"  [label="DDG: c->entries"];
"1001216" -> "1001205"  [label="AST: "];
"1001216" -> "1001221"  [label="CFG: "];
"1001217" -> "1001216"  [label="AST: "];
"1001218" -> "1001216"  [label="AST: "];
"1001221" -> "1001216"  [label="AST: "];
"1001231" -> "1001216"  [label="CFG: "];
"1001216" -> "1003623"  [label="DDG: sizeof(*c->codewords)*c->sorted_entries"];
"1001216" -> "1003623"  [label="DDG: setup_temp_free(f, c->codewords, sizeof(*c->codewords)*c->sorted_entries)"];
"1001206" -> "1001216"  [label="DDG: f"];
"1000987" -> "1001216"  [label="DDG: c->codewords"];
"1001041" -> "1001216"  [label="DDG: c->codewords"];
"1001236" -> "1001216"  [label="DDG: c->codewords"];
"1001221" -> "1001216"  [label="DDG: c->sorted_entries"];
"1001206" -> "1001205"  [label="AST: "];
"1001206" -> "1001209"  [label="CFG: "];
"1001207" -> "1001206"  [label="AST: "];
"1001208" -> "1001206"  [label="AST: "];
"1001209" -> "1001206"  [label="AST: "];
"1001217" -> "1001206"  [label="CFG: "];
"1001206" -> "1003623"  [label="DDG: sizeof(*values)*c->sorted_entries"];
"1001206" -> "1003623"  [label="DDG: values"];
"1001206" -> "1003623"  [label="DDG: setup_temp_free(f, values, sizeof(*values)*c->sorted_entries)"];
"1001101" -> "1001206"  [label="DDG: values"];
"1001197" -> "1001206"  [label="DDG: values"];
"1001209" -> "1001206"  [label="DDG: c->sorted_entries"];
"1001101" -> "1001100"  [label="AST: "];
"1001101" -> "1001107"  [label="CFG: "];
"1001102" -> "1001101"  [label="AST: "];
"1001103" -> "1001101"  [label="AST: "];
"1001104" -> "1001101"  [label="AST: "];
"1001107" -> "1001101"  [label="AST: "];
"1001100" -> "1001101"  [label="CFG: "];
"1001101" -> "1003623"  [label="DDG: c->entries"];
"1001101" -> "1003623"  [label="DDG: lengths"];
"1001101" -> "1003623"  [label="DDG: values"];
"1001101" -> "1003623"  [label="DDG: c"];
"1001101" -> "1001100"  [label="DDG: c"];
"1001101" -> "1001100"  [label="DDG: lengths"];
"1001101" -> "1001100"  [label="DDG: c->entries"];
"1001101" -> "1001100"  [label="DDG: values"];
"1000566" -> "1001101"  [label="DDG: c"];
"1000976" -> "1001101"  [label="DDG: c->entries"];
"1001063" -> "1001101"  [label="DDG: values"];
"1000957" -> "1001101"  [label="DDG: values"];
"1001101" -> "1001113"  [label="DDG: values"];
"1001101" -> "1001197"  [label="DDG: c"];
"1001101" -> "1001197"  [label="DDG: lengths"];
"1001101" -> "1001197"  [label="DDG: values"];
"1001101" -> "1001241"  [label="DDG: c"];
"1001101" -> "1001326"  [label="DDG: c->entries"];
"1000566" -> "1000556"  [label="AST: "];
"1000566" -> "1000568"  [label="CFG: "];
"1000567" -> "1000566"  [label="AST: "];
"1000568" -> "1000566"  [label="AST: "];
"1000574" -> "1000566"  [label="CFG: "];
"1000566" -> "1003623"  [label="DDG: f->codebooks+i"];
"1000566" -> "1003623"  [label="DDG: c"];
"1000531" -> "1000566"  [label="DDG: f->codebooks"];
"1000549" -> "1000566"  [label="DDG: i"];
"1000531" -> "1000108"  [label="AST: "];
"1000531" -> "1000536"  [label="CFG: "];
"1000532" -> "1000531"  [label="AST: "];
"1000535" -> "1000531"  [label="AST: "];
"1000536" -> "1000531"  [label="AST: "];
"1000547" -> "1000531"  [label="CFG: "];
"1000531" -> "1003623"  [label="DDG: memset(f->codebooks, 0, sizeof(*f->codebooks) * f->codebook_count)"];
"1000531" -> "1003623"  [label="DDG: sizeof(*f->codebooks) * f->codebook_count"];
"1000531" -> "1003623"  [label="DDG: f->codebooks"];
"1000522" -> "1000531"  [label="DDG: f->codebooks"];
"1000536" -> "1000531"  [label="DDG: f->codebook_count"];
"1000531" -> "1000568"  [label="DDG: f->codebooks"];
"1000522" -> "1000521"  [label="AST: "];
"1000522" -> "1000526"  [label="CFG: "];
"1000523" -> "1000522"  [label="AST: "];
"1000526" -> "1000522"  [label="AST: "];
"1000529" -> "1000522"  [label="CFG: "];
"1000533" -> "1000522"  [label="CFG: "];
"1000522" -> "1003623"  [label="DDG: f->codebooks == NULL"];
"1000522" -> "1003623"  [label="DDG: NULL"];
"1000522" -> "1003623"  [label="DDG: f->codebooks"];
"1000504" -> "1000522"  [label="DDG: f->codebooks"];
"1000522" -> "1000957"  [label="DDG: NULL"];
"1000522" -> "1001816"  [label="DDG: NULL"];
"1000504" -> "1000108"  [label="AST: "];
"1000504" -> "1000508"  [label="CFG: "];
"1000505" -> "1000504"  [label="AST: "];
"1000508" -> "1000504"  [label="AST: "];
"1000524" -> "1000504"  [label="CFG: "];
"1000504" -> "1003623"  [label="DDG: (Codebook *) setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000508" -> "1000504"  [label="DDG: setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000509" -> "1000508"  [label="AST: "];
"1000508" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(*f->codebooks) * f->codebook_count)"];
"1000536" -> "1000542"  [label="CFG: "];
"1000537" -> "1000536"  [label="AST: "];
"1000542" -> "1000536"  [label="AST: "];
"1000536" -> "1000549"  [label="DDG: f->codebook_count"];
"1000549" -> "1000545"  [label="AST: "];
"1000549" -> "1000551"  [label="CFG: "];
"1000550" -> "1000549"  [label="AST: "];
"1000551" -> "1000549"  [label="AST: "];
"1000562" -> "1000549"  [label="CFG: "];
"1001759" -> "1000549"  [label="CFG: "];
"1000549" -> "1003623"  [label="DDG: f->codebook_count"];
"1000549" -> "1003623"  [label="DDG: i < f->codebook_count"];
"1000554" -> "1000549"  [label="DDG: i"];
"1000546" -> "1000549"  [label="DDG: i"];
"1000549" -> "1000554"  [label="DDG: i"];
"1000549" -> "1000568"  [label="DDG: i"];
"1000549" -> "1002055"  [label="DDG: f->codebook_count"];
"1000549" -> "1002098"  [label="DDG: f->codebook_count"];
"1000549" -> "1002465"  [label="DDG: f->codebook_count"];
"1000554" -> "1000545"  [label="AST: "];
"1000554" -> "1000555"  [label="CFG: "];
"1000555" -> "1000554"  [label="AST: "];
"1000550" -> "1000554"  [label="CFG: "];
"1000546" -> "1000545"  [label="AST: "];
"1000546" -> "1000548"  [label="CFG: "];
"1000547" -> "1000546"  [label="AST: "];
"1000548" -> "1000546"  [label="AST: "];
"1000550" -> "1000546"  [label="CFG: "];
"1000976" -> "1000983"  [label="CFG: "];
"1000977" -> "1000976"  [label="AST: "];
"1000983" -> "1000976"  [label="AST: "];
"1000976" -> "1003623"  [label="DDG: c->entries"];
"1001063" -> "1001062"  [label="AST: "];
"1001063" -> "1001064"  [label="CFG: "];
"1001064" -> "1001063"  [label="AST: "];
"1001067" -> "1001063"  [label="CFG: "];
"1001070" -> "1001063"  [label="CFG: "];
"1001063" -> "1003623"  [label="DDG: values"];
"1001063" -> "1003623"  [label="DDG: !values"];
"1001049" -> "1001063"  [label="DDG: values"];
"1001049" -> "1001002"  [label="AST: "];
"1001049" -> "1001051"  [label="CFG: "];
"1001050" -> "1001049"  [label="AST: "];
"1001051" -> "1001049"  [label="AST: "];
"1001064" -> "1001049"  [label="CFG: "];
"1001049" -> "1003623"  [label="DDG: (uint32 *) setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1001051" -> "1001049"  [label="DDG: setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1001052" -> "1001051"  [label="AST: "];
"1001051" -> "1003623"  [label="DDG: setup_temp_malloc(f, sizeof(*values) * c->sorted_entries)"];
"1000957" -> "1000556"  [label="AST: "];
"1000957" -> "1000959"  [label="CFG: "];
"1000958" -> "1000957"  [label="AST: "];
"1000959" -> "1000957"  [label="AST: "];
"1000961" -> "1000957"  [label="CFG: "];
"1000957" -> "1003623"  [label="DDG: values"];
"1000957" -> "1003623"  [label="DDG: NULL"];
"1001486" -> "1000957"  [label="DDG: NULL"];
"1001486" -> "1001485"  [label="AST: "];
"1001486" -> "1001490"  [label="CFG: "];
"1001487" -> "1001486"  [label="AST: "];
"1001490" -> "1001486"  [label="AST: "];
"1001493" -> "1001486"  [label="CFG: "];
"1001508" -> "1001486"  [label="CFG: "];
"1001486" -> "1003623"  [label="DDG: c->multiplicands"];
"1001486" -> "1003623"  [label="DDG: c->multiplicands == NULL"];
"1001486" -> "1003623"  [label="DDG: NULL"];
"1001463" -> "1001486"  [label="DDG: c->multiplicands"];
"1001585" -> "1001486"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001440" -> "1001486"  [label="DDG: c->multiplicands"];
"1001486" -> "1001816"  [label="DDG: NULL"];
"1001463" -> "1001462"  [label="AST: "];
"1001463" -> "1001467"  [label="CFG: "];
"1001464" -> "1001463"  [label="AST: "];
"1001467" -> "1001463"  [label="AST: "];
"1001488" -> "1001463"  [label="CFG: "];
"1001463" -> "1003623"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001467" -> "1001463"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001467" -> "1001469"  [label="CFG: "];
"1001468" -> "1001467"  [label="AST: "];
"1001469" -> "1001467"  [label="AST: "];
"1001467" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->entries        * c->dimensions)"];
"1001469" -> "1001467"  [label="DDG: f"];
"1001469" -> "1001467"  [label="DDG: sizeof(c->multiplicands[0]) * c->entries        * c->dimensions"];
"1001469" -> "1001471"  [label="CFG: "];
"1001470" -> "1001469"  [label="AST: "];
"1001471" -> "1001469"  [label="AST: "];
"1001469" -> "1003623"  [label="DDG: sizeof(c->multiplicands[0]) * c->entries        * c->dimensions"];
"1001471" -> "1001469"  [label="DDG: c->entries        * c->dimensions"];
"1001469" -> "1001492"  [label="DDG: f"];
"1001469" -> "1001625"  [label="DDG: f"];
"1001471" -> "1001478"  [label="CFG: "];
"1001472" -> "1001471"  [label="AST: "];
"1001478" -> "1001471"  [label="AST: "];
"1001471" -> "1003623"  [label="DDG: c->entries        * c->dimensions"];
"1001478" -> "1001471"  [label="DDG: c->entries"];
"1001478" -> "1001471"  [label="DDG: c->dimensions"];
"1001478" -> "1001482"  [label="CFG: "];
"1001479" -> "1001478"  [label="AST: "];
"1001482" -> "1001478"  [label="AST: "];
"1001478" -> "1003623"  [label="DDG: c->entries"];
"1001478" -> "1003623"  [label="DDG: c->dimensions"];
"1001326" -> "1001478"  [label="DDG: c->entries"];
"1001326" -> "1001478"  [label="DDG: c->dimensions"];
"1001478" -> "1001507"  [label="DDG: c->entries"];
"1001478" -> "1001509"  [label="DDG: c->entries"];
"1001478" -> "1001546"  [label="DDG: c->dimensions"];
"1001326" -> "1001322"  [label="AST: "];
"1001326" -> "1001330"  [label="CFG: "];
"1001327" -> "1001326"  [label="AST: "];
"1001330" -> "1001326"  [label="AST: "];
"1001322" -> "1001326"  [label="CFG: "];
"1001326" -> "1003623"  [label="DDG: c->dimensions"];
"1001326" -> "1003623"  [label="DDG: c->entries"];
"1001326" -> "1001322"  [label="DDG: c->entries"];
"1001326" -> "1001322"  [label="DDG: c->dimensions"];
"1000672" -> "1001326"  [label="DDG: c->dimensions"];
"1001326" -> "1001455"  [label="DDG: c->dimensions"];
"1001326" -> "1001507"  [label="DDG: c->entries"];
"1001326" -> "1001509"  [label="DDG: c->entries"];
"1000672" -> "1000671"  [label="AST: "];
"1000672" -> "1000676"  [label="CFG: "];
"1000673" -> "1000672"  [label="AST: "];
"1000676" -> "1000672"  [label="AST: "];
"1000679" -> "1000672"  [label="CFG: "];
"1000671" -> "1000672"  [label="CFG: "];
"1000672" -> "1003623"  [label="DDG: c->dimensions"];
"1000672" -> "1000671"  [label="DDG: c->dimensions"];
"1000672" -> "1000671"  [label="DDG: 0"];
"1000619" -> "1000672"  [label="DDG: c->dimensions"];
"1000619" -> "1000556"  [label="AST: "];
"1000619" -> "1000623"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000623" -> "1000619"  [label="AST: "];
"1000631" -> "1000619"  [label="CFG: "];
"1000619" -> "1003623"  [label="DDG: (get_bits(f, 8)<<8) + x"];
"1000624" -> "1000619"  [label="DDG: get_bits(f, 8)"];
"1000624" -> "1000619"  [label="DDG: 8"];
"1000614" -> "1000619"  [label="DDG: x"];
"1000624" -> "1000623"  [label="AST: "];
"1000624" -> "1000628"  [label="CFG: "];
"1000628" -> "1000624"  [label="AST: "];
"1000629" -> "1000624"  [label="CFG: "];
"1000624" -> "1000623"  [label="DDG: get_bits(f, 8)"];
"1000624" -> "1000623"  [label="DDG: 8"];
"1000614" -> "1000556"  [label="AST: "];
"1000615" -> "1000614"  [label="AST: "];
"1000621" -> "1000614"  [label="CFG: "];
"1000614" -> "1000623"  [label="DDG: x"];
"1001585" -> "1001553"  [label="AST: "];
"1001585" -> "1001597"  [label="CFG: "];
"1001586" -> "1001585"  [label="AST: "];
"1001597" -> "1001585"  [label="AST: "];
"1001600" -> "1001585"  [label="CFG: "];
"1001585" -> "1003623"  [label="DDG: val"];
"1001585" -> "1003623"  [label="DDG: c->multiplicands[j*c->dimensions + k]"];
"1001570" -> "1001585"  [label="DDG: val"];
"1001570" -> "1001553"  [label="AST: "];
"1001570" -> "1001572"  [label="CFG: "];
"1001571" -> "1001570"  [label="AST: "];
"1001572" -> "1001570"  [label="AST: "];
"1001588" -> "1001570"  [label="CFG: "];
"1001570" -> "1003623"  [label="DDG: mults[off]*c->delta_value + c->minimum_value + last"];
"1001427" -> "1001570"  [label="DDG: last"];
"1001602" -> "1001570"  [label="DDG: last"];
"1001570" -> "1001602"  [label="DDG: val"];
"1001427" -> "1001418"  [label="AST: "];
"1001427" -> "1001429"  [label="CFG: "];
"1001428" -> "1001427"  [label="AST: "];
"1001429" -> "1001427"  [label="AST: "];
"1001431" -> "1001427"  [label="CFG: "];
"1001427" -> "1003623"  [label="DDG: last"];
"1001427" -> "1001572"  [label="DDG: last"];
"1001427" -> "1001580"  [label="DDG: last"];
"1001602" -> "1001598"  [label="AST: "];
"1001602" -> "1001604"  [label="CFG: "];
"1001603" -> "1001602"  [label="AST: "];
"1001604" -> "1001602"  [label="AST: "];
"1001608" -> "1001602"  [label="CFG: "];
"1001602" -> "1003623"  [label="DDG: val"];
"1001602" -> "1003623"  [label="DDG: last"];
"1001602" -> "1001572"  [label="DDG: last"];
"1001602" -> "1001580"  [label="DDG: last"];
"1001440" -> "1001432"  [label="AST: "];
"1001440" -> "1001444"  [label="CFG: "];
"1001441" -> "1001440"  [label="AST: "];
"1001444" -> "1001440"  [label="AST: "];
"1001488" -> "1001440"  [label="CFG: "];
"1001440" -> "1003623"  [label="DDG: (codetype *) setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001444" -> "1001440"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001444" -> "1001446"  [label="CFG: "];
"1001445" -> "1001444"  [label="AST: "];
"1001446" -> "1001444"  [label="AST: "];
"1001444" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions)"];
"1001446" -> "1001444"  [label="DDG: f"];
"1001446" -> "1001444"  [label="DDG: sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions"];
"1001446" -> "1001448"  [label="CFG: "];
"1001447" -> "1001446"  [label="AST: "];
"1001448" -> "1001446"  [label="AST: "];
"1001446" -> "1003623"  [label="DDG: sizeof(c->multiplicands[0]) * c->sorted_entries * c->dimensions"];
"1001448" -> "1001446"  [label="DDG: c->sorted_entries * c->dimensions"];
"1001446" -> "1001492"  [label="DDG: f"];
"1001446" -> "1001625"  [label="DDG: f"];
"1001448" -> "1001455"  [label="CFG: "];
"1001449" -> "1001448"  [label="AST: "];
"1001455" -> "1001448"  [label="AST: "];
"1001448" -> "1003623"  [label="DDG: c->sorted_entries * c->dimensions"];
"1001455" -> "1001448"  [label="DDG: c->sorted_entries"];
"1001455" -> "1001448"  [label="DDG: c->dimensions"];
"1001455" -> "1001459"  [label="CFG: "];
"1001456" -> "1001455"  [label="AST: "];
"1001459" -> "1001455"  [label="AST: "];
"1001455" -> "1003623"  [label="DDG: c->dimensions"];
"1001455" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001434" -> "1001455"  [label="DDG: c->sorted_entries"];
"1001455" -> "1001507"  [label="DDG: c->sorted_entries"];
"1001455" -> "1001509"  [label="DDG: c->sorted_entries"];
"1001455" -> "1001546"  [label="DDG: c->dimensions"];
"1001434" -> "1001433"  [label="AST: "];
"1001434" -> "1001438"  [label="CFG: "];
"1001435" -> "1001434"  [label="AST: "];
"1001438" -> "1001434"  [label="AST: "];
"1001439" -> "1001434"  [label="CFG: "];
"1001442" -> "1001434"  [label="CFG: "];
"1001434" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001434" -> "1003623"  [label="DDG: c->sorted_entries == 0"];
"1001221" -> "1001434"  [label="DDG: c->sorted_entries"];
"1001221" -> "1001227"  [label="CFG: "];
"1001222" -> "1001221"  [label="AST: "];
"1001227" -> "1001221"  [label="AST: "];
"1001221" -> "1003623"  [label="DDG: c->sorted_entries"];
"1001209" -> "1001221"  [label="DDG: c->sorted_entries"];
"1001221" -> "1001507"  [label="DDG: c->sorted_entries"];
"1001221" -> "1001509"  [label="DDG: c->sorted_entries"];
"1001209" -> "1001213"  [label="CFG: "];
"1001210" -> "1001209"  [label="AST: "];
"1001213" -> "1001209"  [label="AST: "];
"1001197" -> "1001125"  [label="AST: "];
"1001197" -> "1001200"  [label="CFG: "];
"1001198" -> "1001197"  [label="AST: "];
"1001199" -> "1001197"  [label="AST: "];
"1001200" -> "1001197"  [label="AST: "];
"1001203" -> "1001197"  [label="CFG: "];
"1001197" -> "1003623"  [label="DDG: lengths"];
"1001197" -> "1003623"  [label="DDG: compute_sorted_huffman(c, lengths, values)"];
"1001197" -> "1003623"  [label="DDG: values"];
"1001197" -> "1001241"  [label="DDG: c"];
"1000987" -> "1000986"  [label="AST: "];
"1000987" -> "1000988"  [label="CFG: "];
"1000988" -> "1000987"  [label="AST: "];
"1000993" -> "1000987"  [label="CFG: "];
"1001102" -> "1000987"  [label="CFG: "];
"1000987" -> "1003623"  [label="DDG: c->codewords"];
"1000987" -> "1003623"  [label="DDG: !c->codewords"];
"1000968" -> "1000987"  [label="DDG: c->codewords"];
"1000968" -> "1000967"  [label="AST: "];
"1000968" -> "1000972"  [label="CFG: "];
"1000969" -> "1000968"  [label="AST: "];
"1000972" -> "1000968"  [label="AST: "];
"1000989" -> "1000968"  [label="CFG: "];
"1000968" -> "1003623"  [label="DDG: (uint32 *) setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1000972" -> "1000968"  [label="DDG: setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1000973" -> "1000972"  [label="AST: "];
"1000972" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(c->codewords[0]) * c->entries)"];
"1001041" -> "1001040"  [label="AST: "];
"1001041" -> "1001042"  [label="CFG: "];
"1001042" -> "1001041"  [label="AST: "];
"1001047" -> "1001041"  [label="CFG: "];
"1001050" -> "1001041"  [label="CFG: "];
"1001041" -> "1003623"  [label="DDG: !c->codewords"];
"1001041" -> "1003623"  [label="DDG: c->codewords"];
"1001023" -> "1001041"  [label="DDG: c->codewords"];
"1001023" -> "1001002"  [label="AST: "];
"1001023" -> "1001027"  [label="CFG: "];
"1001024" -> "1001023"  [label="AST: "];
"1001027" -> "1001023"  [label="AST: "];
"1001043" -> "1001023"  [label="CFG: "];
"1001023" -> "1003623"  [label="DDG: (uint32 *) setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1001027" -> "1001023"  [label="DDG: setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1001028" -> "1001027"  [label="AST: "];
"1001027" -> "1003623"  [label="DDG: setup_temp_malloc(f, sizeof(*c->codewords) * c->sorted_entries)"];
"1001236" -> "1001205"  [label="AST: "];
"1001236" -> "1001240"  [label="CFG: "];
"1001237" -> "1001236"  [label="AST: "];
"1001240" -> "1001236"  [label="AST: "];
"1001242" -> "1001236"  [label="CFG: "];
"1001236" -> "1003623"  [label="DDG: c->codewords"];
"1001236" -> "1003623"  [label="DDG: NULL"];
"1001322" -> "1001321"  [label="AST: "];
"1001323" -> "1001322"  [label="AST: "];
"1001336" -> "1001322"  [label="CFG: "];
"1001322" -> "1003623"  [label="DDG: c->entries * c->dimensions"];
"1000690" -> "1000686"  [label="AST: "];
"1000690" -> "1000692"  [label="CFG: "];
"1000691" -> "1000690"  [label="AST: "];
"1000692" -> "1000690"  [label="AST: "];
"1000715" -> "1000690"  [label="CFG: "];
"1000690" -> "1003623"  [label="DDG: (uint8 *) setup_temp_malloc(f, c->entries)"];
"1000692" -> "1000690"  [label="DDG: setup_temp_malloc(f, c->entries)"];
"1000693" -> "1000692"  [label="AST: "];
"1000692" -> "1003623"  [label="DDG: setup_temp_malloc(f, c->entries)"];
"1000700" -> "1000699"  [label="AST: "];
"1000700" -> "1000702"  [label="CFG: "];
"1000701" -> "1000700"  [label="AST: "];
"1000702" -> "1000700"  [label="AST: "];
"1000715" -> "1000700"  [label="CFG: "];
"1000702" -> "1000700"  [label="DDG: c->codeword_lengths"];
"1000706" -> "1000700"  [label="DDG: setup_malloc(f, c->entries)"];
"1000702" -> "1000706"  [label="CFG: "];
"1000703" -> "1000702"  [label="AST: "];
"1000706" -> "1000702"  [label="AST: "];
"1000702" -> "1003623"  [label="DDG: (uint8 *) setup_malloc(f, c->entries)"];
"1000702" -> "1003623"  [label="DDG: c->codeword_lengths"];
"1000706" -> "1000702"  [label="DDG: setup_malloc(f, c->entries)"];
"1000707" -> "1000706"  [label="AST: "];
"1000706" -> "1003623"  [label="DDG: setup_malloc(f, c->entries)"];
"1000728" -> "1000722"  [label="AST: "];
"1000728" -> "1000730"  [label="CFG: "];
"1000729" -> "1000728"  [label="AST: "];
"1000730" -> "1000728"  [label="AST: "];
"1000737" -> "1000728"  [label="CFG: "];
"1000728" -> "1003623"  [label="DDG: get_bits(f,5) + 1"];
"1000728" -> "1003623"  [label="DDG: current_length"];
"1000781" -> "1000741"  [label="AST: "];
"1000781" -> "1000782"  [label="CFG: "];
"1000782" -> "1000781"  [label="AST: "];
"1000737" -> "1000781"  [label="CFG: "];
"1000781" -> "1003623"  [label="DDG: current_length"];
"1000751" -> "1000741"  [label="AST: "];
"1000752" -> "1000751"  [label="AST: "];
"1000760" -> "1000751"  [label="CFG: "];
"1000751" -> "1003623"  [label="DDG: get_bits(f, ilog(limit))"];
"1000751" -> "1000758"  [label="DDG: n"];
"1000751" -> "1000759"  [label="DDG: n"];
"1000762" -> "1000758"  [label="AST: "];
"1000762" -> "1000764"  [label="CFG: "];
"1000763" -> "1000762"  [label="AST: "];
"1000764" -> "1000762"  [label="AST: "];
"1000758" -> "1000762"  [label="CFG: "];
"1000762" -> "1003623"  [label="DDG: c->entries"];
"1000762" -> "1000758"  [label="DDG: c->entries"];
"1001286" -> "1001268"  [label="AST: "];
"1001286" -> "1001290"  [label="CFG: "];
"1001287" -> "1001286"  [label="AST: "];
"1001290" -> "1001286"  [label="AST: "];
"1001297" -> "1001286"  [label="CFG: "];
"1001286" -> "1003623"  [label="DDG: get_bits(f, 4)+1"];
"1001286" -> "1003623"  [label="DDG: c->value_bits"];
"1001746" -> "1001751"  [label="CFG: "];
"1001747" -> "1001746"  [label="AST: "];
"1001751" -> "1001746"  [label="AST: "];
"1001746" -> "1003623"  [label="DDG: c->lookup_values"];
"1001704" -> "1001746"  [label="DDG: c->lookup_values"];
"1001557" -> "1001746"  [label="DDG: c->lookup_values"];
"1001619" -> "1001746"  [label="DDG: c->lookup_values"];
"1001704" -> "1001702"  [label="AST: "];
"1001704" -> "1001706"  [label="CFG: "];
"1001705" -> "1001704"  [label="AST: "];
"1001706" -> "1001704"  [label="AST: "];
"1001702" -> "1001704"  [label="CFG: "];
"1001704" -> "1001702"  [label="DDG: c->lookup_values"];
"1001557" -> "1001555"  [label="AST: "];
"1001557" -> "1001561"  [label="CFG: "];
"1001558" -> "1001557"  [label="AST: "];
"1001561" -> "1001557"  [label="AST: "];
"1001555" -> "1001557"  [label="CFG: "];
"1001557" -> "1003623"  [label="DDG: z / div"];
"1001557" -> "1001555"  [label="DDG: z / div"];
"1001557" -> "1001555"  [label="DDG: c->lookup_values"];
"1001558" -> "1001557"  [label="DDG: z"];
"1001558" -> "1001557"  [label="DDG: div"];
"1001619" -> "1001557"  [label="DDG: c->lookup_values"];
"1001557" -> "1001619"  [label="DDG: c->lookup_values"];
"1001558" -> "1001560"  [label="CFG: "];
"1001559" -> "1001558"  [label="AST: "];
"1001560" -> "1001558"  [label="AST: "];
"1001562" -> "1001558"  [label="CFG: "];
"1001558" -> "1003623"  [label="DDG: z"];
"1001558" -> "1003623"  [label="DDG: div"];
"1001528" -> "1001558"  [label="DDG: z"];
"1001640" -> "1001558"  [label="DDG: div"];
"1001539" -> "1001558"  [label="DDG: div"];
"1001558" -> "1001615"  [label="DDG: div"];
"1001528" -> "1001526"  [label="AST: "];
"1001528" -> "1001530"  [label="CFG: "];
"1001529" -> "1001528"  [label="AST: "];
"1001530" -> "1001528"  [label="AST: "];
"1001540" -> "1001528"  [label="CFG: "];
"1001528" -> "1003623"  [label="DDG: sparse ? c->sorted_values[j] : j"];
"1001528" -> "1003623"  [label="DDG: z"];
"1001521" -> "1001528"  [label="DDG: j"];
"1001521" -> "1001517"  [label="AST: "];
"1001521" -> "1001523"  [label="CFG: "];
"1001522" -> "1001521"  [label="AST: "];
"1001523" -> "1001521"  [label="AST: "];
"1001529" -> "1001521"  [label="CFG: "];
"1001647" -> "1001521"  [label="CFG: "];
"1001521" -> "1003623"  [label="DDG: j < len"];
"1001521" -> "1003623"  [label="DDG: j"];
"1001521" -> "1003623"  [label="DDG: len"];
"1001524" -> "1001521"  [label="DDG: j"];
"1001518" -> "1001521"  [label="DDG: j"];
"1001507" -> "1001521"  [label="DDG: len"];
"1001521" -> "1001524"  [label="DDG: j"];
"1001521" -> "1001530"  [label="DDG: j"];
"1001521" -> "1001591"  [label="DDG: j"];
"1001524" -> "1001517"  [label="AST: "];
"1001524" -> "1001525"  [label="CFG: "];
"1001525" -> "1001524"  [label="AST: "];
"1001522" -> "1001524"  [label="CFG: "];
"1001591" -> "1001524"  [label="DDG: j"];
"1001591" -> "1001590"  [label="AST: "];
"1001591" -> "1001593"  [label="CFG: "];
"1001592" -> "1001591"  [label="AST: "];
"1001593" -> "1001591"  [label="AST: "];
"1001596" -> "1001591"  [label="CFG: "];
"1001591" -> "1003623"  [label="DDG: j"];
"1001591" -> "1001590"  [label="DDG: j"];
"1001591" -> "1001590"  [label="DDG: c->dimensions"];
"1001546" -> "1001591"  [label="DDG: c->dimensions"];
"1001591" -> "1001606"  [label="DDG: c->dimensions"];
"1001546" -> "1001542"  [label="AST: "];
"1001546" -> "1001548"  [label="CFG: "];
"1001547" -> "1001546"  [label="AST: "];
"1001548" -> "1001546"  [label="AST: "];
"1001556" -> "1001546"  [label="CFG: "];
"1001525" -> "1001546"  [label="CFG: "];
"1001546" -> "1003623"  [label="DDG: k"];
"1001546" -> "1003623"  [label="DDG: k < c->dimensions"];
"1001546" -> "1003623"  [label="DDG: c->dimensions"];
"1001543" -> "1001546"  [label="DDG: k"];
"1001551" -> "1001546"  [label="DDG: k"];
"1001606" -> "1001546"  [label="DDG: c->dimensions"];
"1001546" -> "1001551"  [label="DDG: k"];
"1001546" -> "1001590"  [label="DDG: k"];
"1001546" -> "1001606"  [label="DDG: k"];
"1001546" -> "1001607"  [label="DDG: k"];
"1001543" -> "1001542"  [label="AST: "];
"1001543" -> "1001545"  [label="CFG: "];
"1001544" -> "1001543"  [label="AST: "];
"1001545" -> "1001543"  [label="AST: "];
"1001547" -> "1001543"  [label="CFG: "];
"1001551" -> "1001542"  [label="AST: "];
"1001551" -> "1001552"  [label="CFG: "];
"1001552" -> "1001551"  [label="AST: "];
"1001547" -> "1001551"  [label="CFG: "];
"1001606" -> "1001605"  [label="AST: "];
"1001606" -> "1001610"  [label="CFG: "];
"1001607" -> "1001606"  [label="AST: "];
"1001610" -> "1001606"  [label="AST: "];
"1001616" -> "1001606"  [label="CFG: "];
"1001552" -> "1001606"  [label="CFG: "];
"1001606" -> "1003623"  [label="DDG: k+1"];
"1001606" -> "1003623"  [label="DDG: c->dimensions"];
"1001606" -> "1003623"  [label="DDG: k+1 < c->dimensions"];
"1001518" -> "1001517"  [label="AST: "];
"1001518" -> "1001520"  [label="CFG: "];
"1001519" -> "1001518"  [label="AST: "];
"1001520" -> "1001518"  [label="AST: "];
"1001522" -> "1001518"  [label="CFG: "];
"1001507" -> "1001418"  [label="AST: "];
"1001507" -> "1001509"  [label="CFG: "];
"1001508" -> "1001507"  [label="AST: "];
"1001509" -> "1001507"  [label="AST: "];
"1001519" -> "1001507"  [label="CFG: "];
"1001507" -> "1003623"  [label="DDG: sparse ? c->sorted_entries : c->entries"];
"1001640" -> "1001613"  [label="AST: "];
"1001640" -> "1001642"  [label="CFG: "];
"1001641" -> "1001640"  [label="AST: "];
"1001642" -> "1001640"  [label="AST: "];
"1001552" -> "1001640"  [label="CFG: "];
"1001640" -> "1003623"  [label="DDG: div"];
"1001619" -> "1001640"  [label="DDG: c->lookup_values"];
"1001615" -> "1001640"  [label="DDG: div"];
"1001619" -> "1001617"  [label="AST: "];
"1001619" -> "1001621"  [label="CFG: "];
"1001620" -> "1001619"  [label="AST: "];
"1001621" -> "1001619"  [label="AST: "];
"1001617" -> "1001619"  [label="CFG: "];
"1001619" -> "1001617"  [label="DDG: c->lookup_values"];
"1001619" -> "1001628"  [label="DDG: c->lookup_values"];
"1001615" -> "1001614"  [label="AST: "];
"1001615" -> "1001617"  [label="CFG: "];
"1001616" -> "1001615"  [label="AST: "];
"1001617" -> "1001615"  [label="AST: "];
"1001626" -> "1001615"  [label="CFG: "];
"1001641" -> "1001615"  [label="CFG: "];
"1001615" -> "1003623"  [label="DDG: div > UINT_MAX / (unsigned int) c->lookup_values"];
"1001615" -> "1003623"  [label="DDG: div"];
"1001615" -> "1003623"  [label="DDG: UINT_MAX / (unsigned int) c->lookup_values"];
"1001617" -> "1001615"  [label="DDG: UINT_MAX"];
"1001617" -> "1001615"  [label="DDG: (unsigned int) c->lookup_values"];
"1001618" -> "1001617"  [label="AST: "];
"1001617" -> "1003623"  [label="DDG: (unsigned int) c->lookup_values"];
"1001617" -> "1003623"  [label="DDG: UINT_MAX"];
"1001539" -> "1001526"  [label="AST: "];
"1001539" -> "1001541"  [label="CFG: "];
"1001540" -> "1001539"  [label="AST: "];
"1001541" -> "1001539"  [label="AST: "];
"1001544" -> "1001539"  [label="CFG: "];
"1001539" -> "1003623"  [label="DDG: div"];
"1001778" -> "1001776"  [label="AST: "];
"1001778" -> "1001780"  [label="CFG: "];
"1001779" -> "1001778"  [label="AST: "];
"1001780" -> "1001778"  [label="AST: "];
"1001776" -> "1001778"  [label="CFG: "];
"1001778" -> "1001776"  [label="DDG: f"];
"1001778" -> "1001776"  [label="DDG: 16"];
"1001778" -> "1001786"  [label="DDG: f"];
"1001806" -> "1001810"  [label="CFG: "];
"1001807" -> "1001806"  [label="AST: "];
"1001810" -> "1001806"  [label="AST: "];
"1001806" -> "1003623"  [label="DDG: f->floor_count"];
"1001789" -> "1001806"  [label="DDG: f->floor_count"];
"1001806" -> "1001829"  [label="DDG: f->floor_count"];
"1001789" -> "1000108"  [label="AST: "];
"1001789" -> "1001793"  [label="CFG: "];
"1001790" -> "1001789"  [label="AST: "];
"1001793" -> "1001789"  [label="AST: "];
"1001800" -> "1001789"  [label="CFG: "];
"1001789" -> "1003623"  [label="DDG: get_bits(f, 6)+1"];
"1002194" -> "1002186"  [label="AST: "];
"1002194" -> "1002196"  [label="CFG: "];
"1002195" -> "1002194"  [label="AST: "];
"1002196" -> "1002194"  [label="AST: "];
"1002186" -> "1002194"  [label="CFG: "];
"1002194" -> "1003623"  [label="DDG: g->rangebits"];
"1002194" -> "1001843"  [label="DDG: f"];
"1002194" -> "1002186"  [label="DDG: f"];
"1002194" -> "1002186"  [label="DDG: g->rangebits"];
"1002126" -> "1002194"  [label="DDG: f"];
"1002142" -> "1002194"  [label="DDG: g->rangebits"];
"1002126" -> "1002122"  [label="AST: "];
"1002126" -> "1002128"  [label="CFG: "];
"1002127" -> "1002126"  [label="AST: "];
"1002128" -> "1002126"  [label="AST: "];
"1002122" -> "1002126"  [label="CFG: "];
"1002126" -> "1001843"  [label="DDG: f"];
"1002126" -> "1002122"  [label="DDG: f"];
"1002126" -> "1002122"  [label="DDG: 4"];
"1002118" -> "1002126"  [label="DDG: f"];
"1002118" -> "1002117"  [label="AST: "];
"1002118" -> "1002120"  [label="CFG: "];
"1002119" -> "1002118"  [label="AST: "];
"1002120" -> "1002118"  [label="AST: "];
"1002121" -> "1002118"  [label="CFG: "];
"1002118" -> "1002113"  [label="DDG: f"];
"1002118" -> "1002113"  [label="DDG: 2"];
"1002118" -> "1002117"  [label="DDG: f"];
"1002118" -> "1002117"  [label="DDG: 2"];
"1002035" -> "1002118"  [label="DDG: f"];
"1002093" -> "1002118"  [label="DDG: f"];
"1002051" -> "1002118"  [label="DDG: f"];
"1001990" -> "1002118"  [label="DDG: f"];
"1001969" -> "1002118"  [label="DDG: f"];
"1002035" -> "1002029"  [label="AST: "];
"1002035" -> "1002037"  [label="CFG: "];
"1002036" -> "1002035"  [label="AST: "];
"1002037" -> "1002035"  [label="AST: "];
"1002029" -> "1002035"  [label="CFG: "];
"1002035" -> "1002025"  [label="DDG: f"];
"1002035" -> "1002029"  [label="DDG: f"];
"1002035" -> "1002029"  [label="DDG: 2"];
"1002025" -> "1002035"  [label="DDG: f"];
"1002035" -> "1002051"  [label="DDG: f"];
"1002035" -> "1002093"  [label="DDG: f"];
"1002025" -> "1002024"  [label="AST: "];
"1002025" -> "1002027"  [label="CFG: "];
"1002026" -> "1002025"  [label="AST: "];
"1002027" -> "1002025"  [label="AST: "];
"1002028" -> "1002025"  [label="CFG: "];
"1002025" -> "1002018"  [label="DDG: f"];
"1002025" -> "1002018"  [label="DDG: 3"];
"1002025" -> "1002024"  [label="DDG: f"];
"1002025" -> "1002024"  [label="DDG: 3"];
"1002093" -> "1002025"  [label="DDG: f"];
"1002051" -> "1002025"  [label="DDG: f"];
"1001990" -> "1002025"  [label="DDG: f"];
"1001969" -> "1002025"  [label="DDG: f"];
"1002093" -> "1002092"  [label="AST: "];
"1002093" -> "1002095"  [label="CFG: "];
"1002094" -> "1002093"  [label="AST: "];
"1002095" -> "1002093"  [label="AST: "];
"1002096" -> "1002093"  [label="CFG: "];
"1002093" -> "1002092"  [label="DDG: f"];
"1002093" -> "1002092"  [label="DDG: 8"];
"1002051" -> "1002093"  [label="DDG: f"];
"1002093" -> "1002110"  [label="DDG: f"];
"1002051" -> "1002045"  [label="AST: "];
"1002051" -> "1002053"  [label="CFG: "];
"1002052" -> "1002051"  [label="AST: "];
"1002053" -> "1002051"  [label="AST: "];
"1002045" -> "1002051"  [label="CFG: "];
"1002051" -> "1002045"  [label="DDG: f"];
"1002051" -> "1002045"  [label="DDG: 8"];
"1002051" -> "1002065"  [label="DDG: f"];
"1001990" -> "1001984"  [label="AST: "];
"1001990" -> "1001992"  [label="CFG: "];
"1001991" -> "1001990"  [label="AST: "];
"1001992" -> "1001990"  [label="AST: "];
"1001984" -> "1001990"  [label="CFG: "];
"1001990" -> "1001984"  [label="DDG: f"];
"1001990" -> "1001984"  [label="DDG: 4"];
"1001969" -> "1001990"  [label="DDG: f"];
"1001969" -> "1001965"  [label="AST: "];
"1001969" -> "1001971"  [label="CFG: "];
"1001970" -> "1001969"  [label="AST: "];
"1001971" -> "1001969"  [label="AST: "];
"1001965" -> "1001969"  [label="CFG: "];
"1001969" -> "1001965"  [label="DDG: f"];
"1001969" -> "1001965"  [label="DDG: 5"];
"1001843" -> "1001969"  [label="DDG: f"];
"1001843" -> "1001837"  [label="AST: "];
"1001843" -> "1001845"  [label="CFG: "];
"1001844" -> "1001843"  [label="AST: "];
"1001845" -> "1001843"  [label="AST: "];
"1001837" -> "1001843"  [label="CFG: "];
"1001843" -> "1001837"  [label="DDG: f"];
"1001843" -> "1001837"  [label="DDG: 16"];
"1001843" -> "1001855"  [label="DDG: f"];
"1001843" -> "1001882"  [label="DDG: f"];
"1002142" -> "1002136"  [label="AST: "];
"1002142" -> "1002144"  [label="CFG: "];
"1002143" -> "1002142"  [label="AST: "];
"1002144" -> "1002142"  [label="AST: "];
"1002136" -> "1002142"  [label="CFG: "];
"1002142" -> "1003623"  [label="DDG: g->rangebits"];
"1002142" -> "1002136"  [label="DDG: 1"];
"1002142" -> "1002136"  [label="DDG: g->rangebits"];
"1002122" -> "1002142"  [label="DDG: g->rangebits"];
"1002122" -> "1001947"  [label="AST: "];
"1002123" -> "1002122"  [label="AST: "];
"1002132" -> "1002122"  [label="CFG: "];
"1002122" -> "1003623"  [label="DDG: get_bits(f,4)"];
"1002336" -> "1002340"  [label="CFG: "];
"1002337" -> "1002336"  [label="AST: "];
"1002340" -> "1002336"  [label="AST: "];
"1002336" -> "1003623"  [label="DDG: f->residue_count"];
"1002319" -> "1002336"  [label="DDG: f->residue_count"];
"1002336" -> "1002361"  [label="DDG: f->residue_count"];
"1002319" -> "1000108"  [label="AST: "];
"1002319" -> "1002323"  [label="CFG: "];
"1002320" -> "1002319"  [label="AST: "];
"1002323" -> "1002319"  [label="AST: "];
"1002330" -> "1002319"  [label="CFG: "];
"1002319" -> "1003623"  [label="DDG: get_bits(f, 6)+1"];
"1002504" -> "1002502"  [label="AST: "];
"1002504" -> "1002506"  [label="CFG: "];
"1002505" -> "1002504"  [label="AST: "];
"1002506" -> "1002504"  [label="AST: "];
"1002502" -> "1002504"  [label="CFG: "];
"1002504" -> "1002495"  [label="DDG: f"];
"1002504" -> "1002502"  [label="DDG: f"];
"1002504" -> "1002502"  [label="DDG: 5"];
"1002499" -> "1002504"  [label="DDG: f"];
"1002499" -> "1002498"  [label="AST: "];
"1002499" -> "1002501"  [label="CFG: "];
"1002500" -> "1002499"  [label="AST: "];
"1002501" -> "1002499"  [label="AST: "];
"1002503" -> "1002499"  [label="CFG: "];
"1002509" -> "1002499"  [label="CFG: "];
"1002499" -> "1003623"  [label="DDG: get_bits(f,1)"];
"1002499" -> "1002495"  [label="DDG: f"];
"1002495" -> "1002499"  [label="DDG: f"];
"1002495" -> "1002493"  [label="AST: "];
"1002495" -> "1002497"  [label="CFG: "];
"1002496" -> "1002495"  [label="AST: "];
"1002497" -> "1002495"  [label="AST: "];
"1002493" -> "1002495"  [label="CFG: "];
"1002495" -> "1002493"  [label="DDG: f"];
"1002495" -> "1002493"  [label="DDG: 3"];
"1002518" -> "1002525"  [label="CFG: "];
"1002519" -> "1002518"  [label="AST: "];
"1002525" -> "1002518"  [label="AST: "];
"1002518" -> "1003623"  [label="DDG: r->classifications"];
"1002480" -> "1002518"  [label="DDG: r->classifications"];
"1002518" -> "1002542"  [label="DDG: r->classifications"];
"1002480" -> "1002476"  [label="AST: "];
"1002480" -> "1002482"  [label="CFG: "];
"1002481" -> "1002480"  [label="AST: "];
"1002482" -> "1002480"  [label="AST: "];
"1002490" -> "1002480"  [label="CFG: "];
"1002517" -> "1002480"  [label="CFG: "];
"1002480" -> "1003623"  [label="DDG: j < r->classifications"];
"1002480" -> "1003623"  [label="DDG: j"];
"1002477" -> "1002480"  [label="DDG: j"];
"1002485" -> "1002480"  [label="DDG: j"];
"1002448" -> "1002480"  [label="DDG: r->classifications"];
"1002480" -> "1002485"  [label="DDG: j"];
"1002477" -> "1002476"  [label="AST: "];
"1002477" -> "1002479"  [label="CFG: "];
"1002478" -> "1002477"  [label="AST: "];
"1002479" -> "1002477"  [label="AST: "];
"1002481" -> "1002477"  [label="CFG: "];
"1002485" -> "1002476"  [label="AST: "];
"1002485" -> "1002486"  [label="CFG: "];
"1002486" -> "1002485"  [label="AST: "];
"1002481" -> "1002485"  [label="CFG: "];
"1002448" -> "1002382"  [label="AST: "];
"1002448" -> "1002452"  [label="CFG: "];
"1002449" -> "1002448"  [label="AST: "];
"1002452" -> "1002448"  [label="AST: "];
"1002459" -> "1002448"  [label="CFG: "];
"1002448" -> "1003623"  [label="DDG: r->classifications"];
"1002448" -> "1003623"  [label="DDG: get_bits(f,6)+1"];
"1002577" -> "1002569"  [label="AST: "];
"1002577" -> "1002579"  [label="CFG: "];
"1002578" -> "1002577"  [label="AST: "];
"1002579" -> "1002577"  [label="AST: "];
"1002569" -> "1002577"  [label="CFG: "];
"1002577" -> "1002569"  [label="DDG: f"];
"1002577" -> "1002569"  [label="DDG: 8"];
"1002577" -> "1002593"  [label="DDG: f"];
"1002616" -> "1002622"  [label="CFG: "];
"1002617" -> "1002616"  [label="AST: "];
"1002622" -> "1002616"  [label="AST: "];
"1002616" -> "1003623"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002664" -> "1002616"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002616" -> "1002645"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002664" -> "1002660"  [label="AST: "];
"1002664" -> "1002666"  [label="CFG: "];
"1002665" -> "1002664"  [label="AST: "];
"1002666" -> "1002664"  [label="AST: "];
"1002680" -> "1002664"  [label="CFG: "];
"1002381" -> "1002664"  [label="CFG: "];
"1002664" -> "1003623"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002664" -> "1003623"  [label="DDG: j < f->codebooks[r->classbook].entries"];
"1002664" -> "1003623"  [label="DDG: j"];
"1002675" -> "1002664"  [label="DDG: j"];
"1002661" -> "1002664"  [label="DDG: j"];
"1002645" -> "1002664"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002664" -> "1002675"  [label="DDG: j"];
"1002664" -> "1002691"  [label="DDG: j"];
"1002675" -> "1002660"  [label="AST: "];
"1002675" -> "1002676"  [label="CFG: "];
"1002676" -> "1002675"  [label="AST: "];
"1002665" -> "1002675"  [label="CFG: "];
"1002661" -> "1002660"  [label="AST: "];
"1002661" -> "1002663"  [label="CFG: "];
"1002662" -> "1002661"  [label="AST: "];
"1002663" -> "1002661"  [label="AST: "];
"1002665" -> "1002661"  [label="CFG: "];
"1002645" -> "1002640"  [label="AST: "];
"1002645" -> "1002651"  [label="CFG: "];
"1002646" -> "1002645"  [label="AST: "];
"1002651" -> "1002645"  [label="AST: "];
"1002640" -> "1002645"  [label="CFG: "];
"1002645" -> "1002640"  [label="DDG: f->codebooks[r->classbook].entries"];
"1002704" -> "1002713"  [label="CFG: "];
"1002705" -> "1002704"  [label="AST: "];
"1002713" -> "1002704"  [label="AST: "];
"1002704" -> "1003623"  [label="DDG: classwords"];
"1002679" -> "1002704"  [label="DDG: classwords"];
"1002704" -> "1002729"  [label="DDG: classwords"];
"1002679" -> "1002677"  [label="AST: "];
"1002679" -> "1002681"  [label="CFG: "];
"1002680" -> "1002679"  [label="AST: "];
"1002681" -> "1002679"  [label="AST: "];
"1002692" -> "1002679"  [label="CFG: "];
"1002679" -> "1003623"  [label="DDG: f->codebooks[r->classbook].dimensions"];
"1002773" -> "1002777"  [label="CFG: "];
"1002774" -> "1002773"  [label="AST: "];
"1002777" -> "1002773"  [label="AST: "];
"1002773" -> "1003623"  [label="DDG: f->mapping_count"];
"1002756" -> "1002773"  [label="DDG: f->mapping_count"];
"1002773" -> "1002797"  [label="DDG: f->mapping_count"];
"1002756" -> "1000108"  [label="AST: "];
"1002756" -> "1002760"  [label="CFG: "];
"1002757" -> "1002756"  [label="AST: "];
"1002760" -> "1002756"  [label="AST: "];
"1002767" -> "1002756"  [label="CFG: "];
"1002756" -> "1003623"  [label="DDG: get_bits(f,6)+1"];
"1002769" -> "1002765"  [label="AST: "];
"1002770" -> "1002769"  [label="AST: "];
"1002765" -> "1002769"  [label="CFG: "];
"1002769" -> "1003623"  [label="DDG: setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002769" -> "1002765"  [label="DDG: setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002765" -> "1000108"  [label="AST: "];
"1002766" -> "1002765"  [label="AST: "];
"1002785" -> "1002765"  [label="CFG: "];
"1002765" -> "1003623"  [label="DDG: (Mapping *) setup_malloc(f, f->mapping_count * sizeof(*f->mapping))"];
"1002765" -> "1002783"  [label="DDG: f->mapping"];
"1002783" -> "1002782"  [label="AST: "];
"1002783" -> "1002787"  [label="CFG: "];
"1002784" -> "1002783"  [label="AST: "];
"1002787" -> "1002783"  [label="AST: "];
"1002790" -> "1002783"  [label="CFG: "];
"1002794" -> "1002783"  [label="CFG: "];
"1002783" -> "1003623"  [label="DDG: NULL"];
"1002783" -> "1003623"  [label="DDG: f->mapping"];
"1002783" -> "1003623"  [label="DDG: f->mapping == NULL"];
"1002529" -> "1002783"  [label="DDG: NULL"];
"1002347" -> "1002783"  [label="DDG: NULL"];
"1002715" -> "1002783"  [label="DDG: NULL"];
"1002783" -> "1002792"  [label="DDG: f->mapping"];
"1002783" -> "1002858"  [label="DDG: NULL"];
"1002783" -> "1003307"  [label="DDG: NULL"];
"1002792" -> "1000108"  [label="AST: "];
"1002792" -> "1002797"  [label="CFG: "];
"1002793" -> "1002792"  [label="AST: "];
"1002796" -> "1002792"  [label="AST: "];
"1002797" -> "1002792"  [label="AST: "];
"1002808" -> "1002792"  [label="CFG: "];
"1002792" -> "1003623"  [label="DDG: f->mapping"];
"1002792" -> "1003623"  [label="DDG: f->mapping_count * sizeof(*f->mapping)"];
"1002792" -> "1003623"  [label="DDG: memset(f->mapping, 0, f->mapping_count * sizeof(*f->mapping))"];
"1002797" -> "1002792"  [label="DDG: f->mapping_count"];
"1002792" -> "1002819"  [label="DDG: f->mapping"];
"1002792" -> "1002821"  [label="DDG: f->mapping"];
"1002819" -> "1002817"  [label="AST: "];
"1002819" -> "1002821"  [label="CFG: "];
"1002820" -> "1002819"  [label="AST: "];
"1002821" -> "1002819"  [label="AST: "];
"1002828" -> "1002819"  [label="CFG: "];
"1002819" -> "1003623"  [label="DDG: m"];
"1002819" -> "1003623"  [label="DDG: f->mapping + i"];
"1002810" -> "1002819"  [label="DDG: i"];
"1002821" -> "1002825"  [label="CFG: "];
"1002822" -> "1002821"  [label="AST: "];
"1002825" -> "1002821"  [label="AST: "];
"1002821" -> "1003623"  [label="DDG: i"];
"1002821" -> "1003623"  [label="DDG: f->mapping"];
"1002810" -> "1002821"  [label="DDG: i"];
"1002858" -> "1002857"  [label="AST: "];
"1002858" -> "1002862"  [label="CFG: "];
"1002859" -> "1002858"  [label="AST: "];
"1002862" -> "1002858"  [label="AST: "];
"1002865" -> "1002858"  [label="CFG: "];
"1002869" -> "1002858"  [label="CFG: "];
"1002858" -> "1003623"  [label="DDG: m->chan == NULL"];
"1002858" -> "1003623"  [label="DDG: NULL"];
"1002858" -> "1003623"  [label="DDG: m->chan"];
"1002840" -> "1002858"  [label="DDG: m->chan"];
"1002858" -> "1003307"  [label="DDG: NULL"];
"1003307" -> "1003306"  [label="AST: "];
"1003307" -> "1003313"  [label="CFG: "];
"1003308" -> "1003307"  [label="AST: "];
"1003313" -> "1003307"  [label="AST: "];
"1003318" -> "1003307"  [label="CFG: "];
"1003306" -> "1003307"  [label="CFG: "];
"1003307" -> "1003623"  [label="DDG: f->channel_buffers[i]"];
"1003307" -> "1003623"  [label="DDG: NULL"];
"1003307" -> "1003306"  [label="DDG: f->channel_buffers[i]"];
"1003307" -> "1003306"  [label="DDG: NULL"];
"1003257" -> "1003307"  [label="DDG: f->channel_buffers[i]"];
"1003365" -> "1003307"  [label="DDG: NULL"];
"1003307" -> "1003315"  [label="DDG: NULL"];
"1003307" -> "1003333"  [label="DDG: f->channel_buffers[i]"];
"1003307" -> "1003365"  [label="DDG: NULL"];
"1003306" -> "1003305"  [label="AST: "];
"1003306" -> "1003314"  [label="CFG: "];
"1003314" -> "1003306"  [label="AST: "];
"1003331" -> "1003306"  [label="CFG: "];
"1003336" -> "1003306"  [label="CFG: "];
"1003306" -> "1003623"  [label="DDG: f->channel_buffers[i] == NULL || f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003306" -> "1003623"  [label="DDG: f->previous_window[i] == NULL || f->finalY[i] == NULL"];
"1003306" -> "1003623"  [label="DDG: f->channel_buffers[i] == NULL"];
"1003314" -> "1003306"  [label="DDG: f->previous_window[i] == NULL"];
"1003314" -> "1003306"  [label="DDG: f->finalY[i] == NULL"];
"1003315" -> "1003314"  [label="AST: "];
"1003315" -> "1003321"  [label="CFG: "];
"1003316" -> "1003315"  [label="AST: "];
"1003321" -> "1003315"  [label="AST: "];
"1003325" -> "1003315"  [label="CFG: "];
"1003314" -> "1003315"  [label="CFG: "];
"1003315" -> "1003623"  [label="DDG: NULL"];
"1003315" -> "1003623"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003314"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003314"  [label="DDG: NULL"];
"1003273" -> "1003315"  [label="DDG: f->previous_window[i]"];
"1003315" -> "1003322"  [label="DDG: NULL"];
"1003315" -> "1003365"  [label="DDG: NULL"];
"1003314" -> "1003322"  [label="CFG: "];
"1003322" -> "1003314"  [label="AST: "];
"1003314" -> "1003623"  [label="DDG: f->finalY[i] == NULL"];
"1003314" -> "1003623"  [label="DDG: f->previous_window[i] == NULL"];
"1003322" -> "1003314"  [label="DDG: f->finalY[i]"];
"1003322" -> "1003314"  [label="DDG: NULL"];
"1003322" -> "1003328"  [label="CFG: "];
"1003323" -> "1003322"  [label="AST: "];
"1003328" -> "1003322"  [label="AST: "];
"1003322" -> "1003623"  [label="DDG: NULL"];
"1003322" -> "1003623"  [label="DDG: f->finalY[i]"];
"1003291" -> "1003322"  [label="DDG: f->finalY[i]"];
"1003322" -> "1003365"  [label="DDG: NULL"];
"1003365" -> "1003364"  [label="AST: "];
"1003365" -> "1003371"  [label="CFG: "];
"1003366" -> "1003365"  [label="AST: "];
"1003371" -> "1003365"  [label="AST: "];
"1003374" -> "1003365"  [label="CFG: "];
"1003255" -> "1003365"  [label="CFG: "];
"1003365" -> "1003623"  [label="DDG: f->floor_buffers[i] == NULL"];
"1003365" -> "1003623"  [label="DDG: NULL"];
"1003365" -> "1003623"  [label="DDG: f->floor_buffers[i]"];
"1003346" -> "1003365"  [label="DDG: f->floor_buffers[i]"];
"1003333" -> "1003256"  [label="AST: "];
"1003333" -> "1003340"  [label="CFG: "];
"1003334" -> "1003333"  [label="AST: "];
"1003339" -> "1003333"  [label="AST: "];
"1003340" -> "1003333"  [label="AST: "];
"1003349" -> "1003333"  [label="CFG: "];
"1003333" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003333" -> "1003623"  [label="DDG: f->channel_buffers[i]"];
"1003333" -> "1003623"  [label="DDG: memset(f->channel_buffers[i], 0, sizeof(float) * f->blocksize_1)"];
"1003340" -> "1003333"  [label="DDG: f->blocksize_1"];
"1002789" -> "1002788"  [label="AST: "];
"1002789" -> "1002791"  [label="CFG: "];
"1002790" -> "1002789"  [label="AST: "];
"1002791" -> "1002789"  [label="AST: "];
"1002788" -> "1002789"  [label="CFG: "];
"1002789" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002789" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1002789" -> "1003623"  [label="DDG: f"];
"1002789" -> "1002788"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002788" -> "1002782"  [label="AST: "];
"1003623" -> "1002788"  [label="CFG: "];
"1002788" -> "1003623"  [label="DDG: <RET>"];
"1002829" -> "1002827"  [label="AST: "];
"1002829" -> "1002831"  [label="CFG: "];
"1002830" -> "1002829"  [label="AST: "];
"1002831" -> "1002829"  [label="AST: "];
"1002827" -> "1002829"  [label="CFG: "];
"1002829" -> "1002827"  [label="DDG: f"];
"1002829" -> "1002827"  [label="DDG: 16"];
"1003118" -> "1002829"  [label="DDG: f"];
"1003048" -> "1002829"  [label="DDG: f"];
"1003014" -> "1002829"  [label="DDG: f"];
"1002829" -> "1002837"  [label="DDG: f"];
"1002829" -> "1002846"  [label="DDG: f"];
"1002827" -> "1002817"  [label="AST: "];
"1002828" -> "1002827"  [label="AST: "];
"1002834" -> "1002827"  [label="CFG: "];
"1002827" -> "1003623"  [label="DDG: get_bits(f,16)"];
"1002827" -> "1002833"  [label="DDG: mapping_type"];
"1002833" -> "1002832"  [label="AST: "];
"1002833" -> "1002835"  [label="CFG: "];
"1002834" -> "1002833"  [label="AST: "];
"1002835" -> "1002833"  [label="AST: "];
"1002838" -> "1002833"  [label="CFG: "];
"1002842" -> "1002833"  [label="CFG: "];
"1002833" -> "1003623"  [label="DDG: mapping_type"];
"1002833" -> "1003623"  [label="DDG: mapping_type != 0"];
"1002837" -> "1002836"  [label="AST: "];
"1002837" -> "1002839"  [label="CFG: "];
"1002838" -> "1002837"  [label="AST: "];
"1002839" -> "1002837"  [label="AST: "];
"1002836" -> "1002837"  [label="CFG: "];
"1002837" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1002837" -> "1003623"  [label="DDG: f"];
"1002837" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002837" -> "1002836"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002836" -> "1002832"  [label="AST: "];
"1003623" -> "1002836"  [label="CFG: "];
"1002836" -> "1003623"  [label="DDG: <RET>"];
"1002846" -> "1002844"  [label="AST: "];
"1002846" -> "1002848"  [label="CFG: "];
"1002847" -> "1002846"  [label="AST: "];
"1002848" -> "1002846"  [label="AST: "];
"1002844" -> "1002846"  [label="CFG: "];
"1002846" -> "1003623"  [label="DDG: f->channels * sizeof(*m->chan)"];
"1002846" -> "1002844"  [label="DDG: f"];
"1002846" -> "1002844"  [label="DDG: f->channels * sizeof(*m->chan)"];
"1002848" -> "1002846"  [label="DDG: f->channels"];
"1002846" -> "1002864"  [label="DDG: f"];
"1002846" -> "1002868"  [label="DDG: f"];
"1002844" -> "1002840"  [label="AST: "];
"1002845" -> "1002844"  [label="AST: "];
"1002840" -> "1002844"  [label="CFG: "];
"1002844" -> "1003623"  [label="DDG: setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002844" -> "1002840"  [label="DDG: setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002840" -> "1002817"  [label="AST: "];
"1002841" -> "1002840"  [label="AST: "];
"1002860" -> "1002840"  [label="CFG: "];
"1002840" -> "1003623"  [label="DDG: (MappingChannel *) setup_malloc(f, f->channels * sizeof(*m->chan))"];
"1002864" -> "1002863"  [label="AST: "];
"1002864" -> "1002866"  [label="CFG: "];
"1002865" -> "1002864"  [label="AST: "];
"1002866" -> "1002864"  [label="AST: "];
"1002863" -> "1002864"  [label="CFG: "];
"1002864" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002864" -> "1003623"  [label="DDG: f"];
"1002864" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1002864" -> "1002863"  [label="DDG: error(f, VORBIS_outofmem)"];
"1002863" -> "1002857"  [label="AST: "];
"1003623" -> "1002863"  [label="CFG: "];
"1002863" -> "1003623"  [label="DDG: <RET>"];
"1002868" -> "1002867"  [label="AST: "];
"1002868" -> "1002870"  [label="CFG: "];
"1002869" -> "1002868"  [label="AST: "];
"1002870" -> "1002868"  [label="AST: "];
"1002873" -> "1002868"  [label="CFG: "];
"1002883" -> "1002868"  [label="CFG: "];
"1002868" -> "1002876"  [label="DDG: f"];
"1002868" -> "1002898"  [label="DDG: f"];
"1002876" -> "1002875"  [label="AST: "];
"1002876" -> "1002878"  [label="CFG: "];
"1002877" -> "1002876"  [label="AST: "];
"1002878" -> "1002876"  [label="AST: "];
"1002879" -> "1002876"  [label="CFG: "];
"1002876" -> "1002871"  [label="DDG: f"];
"1002876" -> "1002871"  [label="DDG: 4"];
"1002876" -> "1002875"  [label="DDG: f"];
"1002876" -> "1002875"  [label="DDG: 4"];
"1002876" -> "1002898"  [label="DDG: f"];
"1002871" -> "1002867"  [label="AST: "];
"1002871" -> "1002875"  [label="CFG: "];
"1002872" -> "1002871"  [label="AST: "];
"1002875" -> "1002871"  [label="AST: "];
"1002889" -> "1002871"  [label="CFG: "];
"1002871" -> "1003623"  [label="DDG: get_bits(f,4)+1"];
"1002871" -> "1002887"  [label="DDG: m->submaps"];
"1002887" -> "1002886"  [label="AST: "];
"1002887" -> "1002891"  [label="CFG: "];
"1002888" -> "1002887"  [label="AST: "];
"1002891" -> "1002887"  [label="AST: "];
"1002893" -> "1002887"  [label="CFG: "];
"1002899" -> "1002887"  [label="CFG: "];
"1002887" -> "1003623"  [label="DDG: m->submaps"];
"1002887" -> "1003623"  [label="DDG: m->submaps > max_submaps"];
"1002887" -> "1003623"  [label="DDG: max_submaps"];
"1002881" -> "1002887"  [label="DDG: m->submaps"];
"1000117" -> "1002887"  [label="DDG: max_submaps"];
"1002892" -> "1002887"  [label="DDG: max_submaps"];
"1002887" -> "1002892"  [label="DDG: m->submaps"];
"1002887" -> "1003022"  [label="DDG: m->submaps"];
"1002892" -> "1002886"  [label="AST: "];
"1002892" -> "1002894"  [label="CFG: "];
"1002893" -> "1002892"  [label="AST: "];
"1002894" -> "1002892"  [label="AST: "];
"1002899" -> "1002892"  [label="CFG: "];
"1002892" -> "1003623"  [label="DDG: m->submaps"];
"1002892" -> "1003623"  [label="DDG: max_submaps"];
"1003022" -> "1003021"  [label="AST: "];
"1003022" -> "1003026"  [label="CFG: "];
"1003023" -> "1003022"  [label="AST: "];
"1003026" -> "1003022"  [label="AST: "];
"1003030" -> "1003022"  [label="CFG: "];
"1003070" -> "1003022"  [label="CFG: "];
"1003022" -> "1003623"  [label="DDG: m->submaps > 1"];
"1003022" -> "1003052"  [label="DDG: m->submaps"];
"1003022" -> "1003092"  [label="DDG: m->submaps"];
"1003052" -> "1003051"  [label="AST: "];
"1003052" -> "1003060"  [label="CFG: "];
"1003053" -> "1003052"  [label="AST: "];
"1003060" -> "1003052"  [label="AST: "];
"1003065" -> "1003052"  [label="CFG: "];
"1003038" -> "1003052"  [label="CFG: "];
"1003052" -> "1003623"  [label="DDG: m->chan[j].mux"];
"1003052" -> "1003623"  [label="DDG: m->chan[j].mux >= m->submaps"];
"1003052" -> "1003623"  [label="DDG: m->submaps"];
"1003040" -> "1003052"  [label="DDG: m->chan[j].mux"];
"1003052" -> "1003092"  [label="DDG: m->submaps"];
"1003092" -> "1003088"  [label="AST: "];
"1003092" -> "1003094"  [label="CFG: "];
"1003093" -> "1003092"  [label="AST: "];
"1003094" -> "1003092"  [label="AST: "];
"1003101" -> "1003092"  [label="CFG: "];
"1002816" -> "1003092"  [label="CFG: "];
"1003092" -> "1003623"  [label="DDG: m->submaps"];
"1003092" -> "1003623"  [label="DDG: j"];
"1003092" -> "1003623"  [label="DDG: j < m->submaps"];
"1003089" -> "1003092"  [label="DDG: j"];
"1003097" -> "1003092"  [label="DDG: j"];
"1003092" -> "1003097"  [label="DDG: j"];
"1003097" -> "1003088"  [label="AST: "];
"1003097" -> "1003098"  [label="CFG: "];
"1003098" -> "1003097"  [label="AST: "];
"1003093" -> "1003097"  [label="CFG: "];
"1002875" -> "1002879"  [label="CFG: "];
"1002879" -> "1002875"  [label="AST: "];
"1002875" -> "1003623"  [label="DDG: get_bits(f,4)"];
"1002898" -> "1002897"  [label="AST: "];
"1002898" -> "1002900"  [label="CFG: "];
"1002899" -> "1002898"  [label="AST: "];
"1002900" -> "1002898"  [label="AST: "];
"1002904" -> "1002898"  [label="CFG: "];
"1003010" -> "1002898"  [label="CFG: "];
"1002898" -> "1003623"  [label="DDG: get_bits(f,1)"];
"1002898" -> "1002907"  [label="DDG: f"];
"1002898" -> "1003014"  [label="DDG: f"];
"1002907" -> "1002906"  [label="AST: "];
"1002907" -> "1002909"  [label="CFG: "];
"1002908" -> "1002907"  [label="AST: "];
"1002909" -> "1002907"  [label="AST: "];
"1002910" -> "1002907"  [label="CFG: "];
"1002907" -> "1002902"  [label="DDG: f"];
"1002907" -> "1002902"  [label="DDG: 8"];
"1002907" -> "1002906"  [label="DDG: f"];
"1002907" -> "1002906"  [label="DDG: 8"];
"1002907" -> "1002931"  [label="DDG: f"];
"1002907" -> "1003014"  [label="DDG: f"];
"1002902" -> "1002901"  [label="AST: "];
"1002902" -> "1002906"  [label="CFG: "];
"1002903" -> "1002902"  [label="AST: "];
"1002906" -> "1002902"  [label="AST: "];
"1002913" -> "1002902"  [label="CFG: "];
"1002902" -> "1003623"  [label="DDG: get_bits(f,8)+1"];
"1002902" -> "1002915"  [label="DDG: m->coupling_steps"];
"1002915" -> "1002911"  [label="AST: "];
"1002915" -> "1002917"  [label="CFG: "];
"1002916" -> "1002915"  [label="AST: "];
"1002917" -> "1002915"  [label="AST: "];
"1002927" -> "1002915"  [label="CFG: "];
"1003015" -> "1002915"  [label="CFG: "];
"1002915" -> "1003623"  [label="DDG: k < m->coupling_steps"];
"1002915" -> "1003623"  [label="DDG: k"];
"1002915" -> "1003623"  [label="DDG: m->coupling_steps"];
"1002912" -> "1002915"  [label="DDG: k"];
"1002920" -> "1002915"  [label="DDG: k"];
"1002915" -> "1002920"  [label="DDG: k"];
"1002920" -> "1002911"  [label="AST: "];
"1002920" -> "1002921"  [label="CFG: "];
"1002921" -> "1002920"  [label="AST: "];
"1002916" -> "1002920"  [label="CFG: "];
"1002906" -> "1002910"  [label="CFG: "];
"1002910" -> "1002906"  [label="AST: "];
"1002906" -> "1003623"  [label="DDG: get_bits(f,8)"];
"1002931" -> "1002923"  [label="AST: "];
"1002931" -> "1002933"  [label="CFG: "];
"1002932" -> "1002931"  [label="AST: "];
"1002933" -> "1002931"  [label="AST: "];
"1002923" -> "1002931"  [label="CFG: "];
"1002931" -> "1002923"  [label="DDG: f"];
"1002931" -> "1002923"  [label="DDG: ilog(f->channels-1)"];
"1002947" -> "1002931"  [label="DDG: f"];
"1002933" -> "1002931"  [label="DDG: f->channels-1"];
"1002931" -> "1002947"  [label="DDG: f"];
"1002923" -> "1002922"  [label="AST: "];
"1002924" -> "1002923"  [label="AST: "];
"1002943" -> "1002923"  [label="CFG: "];
"1002923" -> "1002956"  [label="DDG: m->chan[k].magnitude"];
"1002956" -> "1002955"  [label="AST: "];
"1002956" -> "1002964"  [label="CFG: "];
"1002957" -> "1002956"  [label="AST: "];
"1002964" -> "1002956"  [label="AST: "];
"1002969" -> "1002956"  [label="CFG: "];
"1002976" -> "1002956"  [label="CFG: "];
"1002956" -> "1003623"  [label="DDG: m->chan[k].magnitude >= f->channels"];
"1002956" -> "1003623"  [label="DDG: f->channels"];
"1002956" -> "1003623"  [label="DDG: m->chan[k].magnitude"];
"1002950" -> "1002956"  [label="DDG: f->channels"];
"1002956" -> "1002972"  [label="DDG: f->channels"];
"1002956" -> "1002988"  [label="DDG: m->chan[k].magnitude"];
"1002972" -> "1002971"  [label="AST: "];
"1002972" -> "1002980"  [label="CFG: "];
"1002973" -> "1002972"  [label="AST: "];
"1002980" -> "1002972"  [label="AST: "];
"1002985" -> "1002972"  [label="CFG: "];
"1002992" -> "1002972"  [label="CFG: "];
"1002972" -> "1003623"  [label="DDG: f->channels"];
"1002972" -> "1003623"  [label="DDG: m->chan[k].angle     >= f->channels"];
"1002972" -> "1003623"  [label="DDG: m->chan[k].angle"];
"1002972" -> "1002934"  [label="DDG: f->channels"];
"1002939" -> "1002972"  [label="DDG: m->chan[k].angle"];
"1002972" -> "1002988"  [label="DDG: m->chan[k].angle"];
"1002972" -> "1003032"  [label="DDG: f->channels"];
"1002972" -> "1003072"  [label="DDG: f->channels"];
"1002934" -> "1002933"  [label="AST: "];
"1002934" -> "1002938"  [label="CFG: "];
"1002935" -> "1002934"  [label="AST: "];
"1002938" -> "1002934"  [label="AST: "];
"1002933" -> "1002934"  [label="CFG: "];
"1002934" -> "1002933"  [label="DDG: f->channels"];
"1002934" -> "1002933"  [label="DDG: 1"];
"1002848" -> "1002934"  [label="DDG: f->channels"];
"1002934" -> "1002950"  [label="DDG: f->channels"];
"1002950" -> "1002949"  [label="AST: "];
"1002950" -> "1002954"  [label="CFG: "];
"1002951" -> "1002950"  [label="AST: "];
"1002954" -> "1002950"  [label="AST: "];
"1002949" -> "1002950"  [label="CFG: "];
"1002950" -> "1002949"  [label="DDG: f->channels"];
"1002950" -> "1002949"  [label="DDG: 1"];
"1002949" -> "1002947"  [label="AST: "];
"1002947" -> "1002949"  [label="CFG: "];
"1002949" -> "1003623"  [label="DDG: f->channels-1"];
"1002949" -> "1002947"  [label="DDG: f->channels-1"];
"1002947" -> "1002939"  [label="AST: "];
"1002948" -> "1002947"  [label="AST: "];
"1002939" -> "1002947"  [label="CFG: "];
"1002947" -> "1003623"  [label="DDG: ilog(f->channels-1)"];
"1002947" -> "1002939"  [label="DDG: f"];
"1002947" -> "1002939"  [label="DDG: ilog(f->channels-1)"];
"1002947" -> "1002968"  [label="DDG: f"];
"1002947" -> "1002984"  [label="DDG: f"];
"1002947" -> "1003004"  [label="DDG: f"];
"1002947" -> "1003014"  [label="DDG: f"];
"1002939" -> "1002922"  [label="AST: "];
"1002940" -> "1002939"  [label="AST: "];
"1002960" -> "1002939"  [label="CFG: "];
"1002939" -> "1003623"  [label="DDG: m->chan[k].angle"];
"1002939" -> "1003623"  [label="DDG: get_bits(f, ilog(f->channels-1))"];
"1002968" -> "1002967"  [label="AST: "];
"1002968" -> "1002970"  [label="CFG: "];
"1002969" -> "1002968"  [label="AST: "];
"1002970" -> "1002968"  [label="AST: "];
"1002967" -> "1002968"  [label="CFG: "];
"1002968" -> "1003623"  [label="DDG: f"];
"1002968" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1002968" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002968" -> "1002967"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002967" -> "1002955"  [label="AST: "];
"1003623" -> "1002967"  [label="CFG: "];
"1002967" -> "1003623"  [label="DDG: <RET>"];
"1002984" -> "1002983"  [label="AST: "];
"1002984" -> "1002986"  [label="CFG: "];
"1002985" -> "1002984"  [label="AST: "];
"1002986" -> "1002984"  [label="AST: "];
"1002983" -> "1002984"  [label="CFG: "];
"1002984" -> "1003623"  [label="DDG: f"];
"1002984" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1002984" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002984" -> "1002983"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1002983" -> "1002971"  [label="AST: "];
"1003623" -> "1002983"  [label="CFG: "];
"1002983" -> "1003623"  [label="DDG: <RET>"];
"1003004" -> "1003003"  [label="AST: "];
"1003004" -> "1003006"  [label="CFG: "];
"1003005" -> "1003004"  [label="AST: "];
"1003006" -> "1003004"  [label="AST: "];
"1003003" -> "1003004"  [label="CFG: "];
"1003004" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003004" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003004" -> "1003623"  [label="DDG: f"];
"1003004" -> "1003003"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003003" -> "1002987"  [label="AST: "];
"1003623" -> "1003003"  [label="CFG: "];
"1003003" -> "1003623"  [label="DDG: <RET>"];
"1003014" -> "1003013"  [label="AST: "];
"1003014" -> "1003016"  [label="CFG: "];
"1003015" -> "1003014"  [label="AST: "];
"1003016" -> "1003014"  [label="AST: "];
"1003019" -> "1003014"  [label="CFG: "];
"1003024" -> "1003014"  [label="CFG: "];
"1003014" -> "1003623"  [label="DDG: get_bits(f,2)"];
"1003014" -> "1003018"  [label="DDG: f"];
"1003014" -> "1003048"  [label="DDG: f"];
"1003014" -> "1003100"  [label="DDG: f"];
"1003014" -> "1003154"  [label="DDG: f"];
"1003018" -> "1003017"  [label="AST: "];
"1003018" -> "1003020"  [label="CFG: "];
"1003019" -> "1003018"  [label="AST: "];
"1003020" -> "1003018"  [label="AST: "];
"1003017" -> "1003018"  [label="CFG: "];
"1003018" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003018" -> "1003623"  [label="DDG: f"];
"1003018" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003018" -> "1003017"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003017" -> "1003013"  [label="AST: "];
"1003623" -> "1003017"  [label="CFG: "];
"1003017" -> "1003623"  [label="DDG: <RET>"];
"1003048" -> "1003040"  [label="AST: "];
"1003048" -> "1003050"  [label="CFG: "];
"1003049" -> "1003048"  [label="AST: "];
"1003050" -> "1003048"  [label="AST: "];
"1003040" -> "1003048"  [label="CFG: "];
"1003048" -> "1003040"  [label="DDG: f"];
"1003048" -> "1003040"  [label="DDG: 4"];
"1003048" -> "1003064"  [label="DDG: f"];
"1003048" -> "1003100"  [label="DDG: f"];
"1003048" -> "1003154"  [label="DDG: f"];
"1003040" -> "1003039"  [label="AST: "];
"1003041" -> "1003040"  [label="AST: "];
"1003056" -> "1003040"  [label="CFG: "];
"1003040" -> "1003623"  [label="DDG: get_bits(f, 4)"];
"1003064" -> "1003063"  [label="AST: "];
"1003064" -> "1003066"  [label="CFG: "];
"1003065" -> "1003064"  [label="AST: "];
"1003066" -> "1003064"  [label="AST: "];
"1003063" -> "1003064"  [label="CFG: "];
"1003064" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003064" -> "1003623"  [label="DDG: f"];
"1003064" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003064" -> "1003063"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003063" -> "1003051"  [label="AST: "];
"1003623" -> "1003063"  [label="CFG: "];
"1003063" -> "1003623"  [label="DDG: <RET>"];
"1003100" -> "1003099"  [label="AST: "];
"1003100" -> "1003102"  [label="CFG: "];
"1003101" -> "1003100"  [label="AST: "];
"1003102" -> "1003100"  [label="AST: "];
"1003106" -> "1003100"  [label="CFG: "];
"1003118" -> "1003100"  [label="DDG: f"];
"1003100" -> "1003109"  [label="DDG: f"];
"1003109" -> "1003103"  [label="AST: "];
"1003109" -> "1003111"  [label="CFG: "];
"1003110" -> "1003109"  [label="AST: "];
"1003111" -> "1003109"  [label="AST: "];
"1003103" -> "1003109"  [label="CFG: "];
"1003109" -> "1003103"  [label="DDG: f"];
"1003109" -> "1003103"  [label="DDG: 8"];
"1003109" -> "1003118"  [label="DDG: f"];
"1003103" -> "1003099"  [label="AST: "];
"1003104" -> "1003103"  [label="AST: "];
"1003115" -> "1003103"  [label="CFG: "];
"1003103" -> "1003122"  [label="DDG: m->submap_floor[j]"];
"1003122" -> "1003121"  [label="AST: "];
"1003122" -> "1003128"  [label="CFG: "];
"1003123" -> "1003122"  [label="AST: "];
"1003128" -> "1003122"  [label="AST: "];
"1003133" -> "1003122"  [label="CFG: "];
"1003139" -> "1003122"  [label="CFG: "];
"1003122" -> "1003623"  [label="DDG: m->submap_floor[j]"];
"1003122" -> "1003623"  [label="DDG: m->submap_floor[j] >= f->floor_count"];
"1003122" -> "1003623"  [label="DDG: f->floor_count"];
"1001829" -> "1003122"  [label="DDG: f->floor_count"];
"1003118" -> "1003112"  [label="AST: "];
"1003118" -> "1003120"  [label="CFG: "];
"1003119" -> "1003118"  [label="AST: "];
"1003120" -> "1003118"  [label="AST: "];
"1003112" -> "1003118"  [label="CFG: "];
"1003118" -> "1003112"  [label="DDG: f"];
"1003118" -> "1003112"  [label="DDG: 8"];
"1003118" -> "1003132"  [label="DDG: f"];
"1003118" -> "1003146"  [label="DDG: f"];
"1003118" -> "1003154"  [label="DDG: f"];
"1003112" -> "1003099"  [label="AST: "];
"1003113" -> "1003112"  [label="AST: "];
"1003125" -> "1003112"  [label="CFG: "];
"1003112" -> "1003623"  [label="DDG: get_bits(f,8)"];
"1003112" -> "1003623"  [label="DDG: m->submap_residue[j]"];
"1003112" -> "1003136"  [label="DDG: m->submap_residue[j]"];
"1003136" -> "1003135"  [label="AST: "];
"1003136" -> "1003142"  [label="CFG: "];
"1003137" -> "1003136"  [label="AST: "];
"1003142" -> "1003136"  [label="AST: "];
"1003147" -> "1003136"  [label="CFG: "];
"1003098" -> "1003136"  [label="CFG: "];
"1003136" -> "1003623"  [label="DDG: m->submap_residue[j] >= f->residue_count"];
"1003136" -> "1003623"  [label="DDG: m->submap_residue[j]"];
"1003136" -> "1003623"  [label="DDG: f->residue_count"];
"1002375" -> "1003136"  [label="DDG: f->residue_count"];
"1003136" -> "1003471"  [label="DDG: f->residue_count"];
"1003471" -> "1003467"  [label="AST: "];
"1003471" -> "1003473"  [label="CFG: "];
"1003472" -> "1003471"  [label="AST: "];
"1003473" -> "1003471"  [label="AST: "];
"1003481" -> "1003471"  [label="CFG: "];
"1003543" -> "1003471"  [label="CFG: "];
"1003471" -> "1003623"  [label="DDG: f->residue_count"];
"1003471" -> "1003623"  [label="DDG: i < f->residue_count"];
"1003471" -> "1003623"  [label="DDG: i"];
"1003468" -> "1003471"  [label="DDG: i"];
"1003476" -> "1003471"  [label="DDG: i"];
"1002375" -> "1003471"  [label="DDG: f->residue_count"];
"1003471" -> "1003476"  [label="DDG: i"];
"1003471" -> "1003480"  [label="DDG: i"];
"1003471" -> "1003482"  [label="DDG: i"];
"1003476" -> "1003467"  [label="AST: "];
"1003476" -> "1003477"  [label="CFG: "];
"1003477" -> "1003476"  [label="AST: "];
"1003472" -> "1003476"  [label="CFG: "];
"1003480" -> "1003478"  [label="AST: "];
"1003480" -> "1003482"  [label="CFG: "];
"1003481" -> "1003480"  [label="AST: "];
"1003482" -> "1003480"  [label="AST: "];
"1003489" -> "1003480"  [label="CFG: "];
"1003480" -> "1003623"  [label="DDG: f->residue_config + i"];
"1003480" -> "1003623"  [label="DDG: r"];
"1002356" -> "1003480"  [label="DDG: f->residue_config"];
"1003482" -> "1003486"  [label="CFG: "];
"1003483" -> "1003482"  [label="AST: "];
"1003486" -> "1003482"  [label="AST: "];
"1003482" -> "1003623"  [label="DDG: f->residue_config"];
"1002356" -> "1003482"  [label="DDG: f->residue_config"];
"1003132" -> "1003131"  [label="AST: "];
"1003132" -> "1003134"  [label="CFG: "];
"1003133" -> "1003132"  [label="AST: "];
"1003134" -> "1003132"  [label="AST: "];
"1003131" -> "1003132"  [label="CFG: "];
"1003132" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003132" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003132" -> "1003623"  [label="DDG: f"];
"1003132" -> "1003131"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003131" -> "1003121"  [label="AST: "];
"1003623" -> "1003131"  [label="CFG: "];
"1003131" -> "1003623"  [label="DDG: <RET>"];
"1003146" -> "1003145"  [label="AST: "];
"1003146" -> "1003148"  [label="CFG: "];
"1003147" -> "1003146"  [label="AST: "];
"1003148" -> "1003146"  [label="AST: "];
"1003145" -> "1003146"  [label="CFG: "];
"1003146" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003146" -> "1003623"  [label="DDG: f"];
"1003146" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003146" -> "1003145"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003145" -> "1003135"  [label="AST: "];
"1003623" -> "1003145"  [label="CFG: "];
"1003145" -> "1003623"  [label="DDG: <RET>"];
"1003154" -> "1003153"  [label="AST: "];
"1003154" -> "1003156"  [label="CFG: "];
"1003155" -> "1003154"  [label="AST: "];
"1003156" -> "1003154"  [label="AST: "];
"1003157" -> "1003154"  [label="CFG: "];
"1003154" -> "1003149"  [label="DDG: f"];
"1003154" -> "1003149"  [label="DDG: 6"];
"1003154" -> "1003153"  [label="DDG: f"];
"1003154" -> "1003153"  [label="DDG: 6"];
"1003154" -> "1003182"  [label="DDG: f"];
"1003154" -> "1003238"  [label="DDG: f"];
"1003149" -> "1000108"  [label="AST: "];
"1003149" -> "1003153"  [label="CFG: "];
"1003150" -> "1003149"  [label="AST: "];
"1003153" -> "1003149"  [label="AST: "];
"1003160" -> "1003149"  [label="CFG: "];
"1003149" -> "1003623"  [label="DDG: get_bits(f, 6)+1"];
"1003149" -> "1003162"  [label="DDG: f->mode_count"];
"1003162" -> "1003158"  [label="AST: "];
"1003162" -> "1003164"  [label="CFG: "];
"1003163" -> "1003162"  [label="AST: "];
"1003164" -> "1003162"  [label="AST: "];
"1003172" -> "1003162"  [label="CFG: "];
"1003239" -> "1003162"  [label="CFG: "];
"1003162" -> "1003623"  [label="DDG: i < f->mode_count"];
"1003162" -> "1003623"  [label="DDG: f->mode_count"];
"1003167" -> "1003162"  [label="DDG: i"];
"1003159" -> "1003162"  [label="DDG: i"];
"1003162" -> "1003167"  [label="DDG: i"];
"1003162" -> "1003171"  [label="DDG: i"];
"1003162" -> "1003173"  [label="DDG: i"];
"1003167" -> "1003158"  [label="AST: "];
"1003167" -> "1003168"  [label="CFG: "];
"1003168" -> "1003167"  [label="AST: "];
"1003163" -> "1003167"  [label="CFG: "];
"1003171" -> "1003169"  [label="AST: "];
"1003171" -> "1003173"  [label="CFG: "];
"1003172" -> "1003171"  [label="AST: "];
"1003173" -> "1003171"  [label="AST: "];
"1003180" -> "1003171"  [label="CFG: "];
"1003171" -> "1003623"  [label="DDG: m"];
"1003171" -> "1003623"  [label="DDG: f->mode_config+i"];
"1003173" -> "1003177"  [label="CFG: "];
"1003174" -> "1003173"  [label="AST: "];
"1003177" -> "1003173"  [label="AST: "];
"1003173" -> "1003623"  [label="DDG: f->mode_config"];
"1003173" -> "1003623"  [label="DDG: i"];
"1003153" -> "1003157"  [label="CFG: "];
"1003157" -> "1003153"  [label="AST: "];
"1003153" -> "1003623"  [label="DDG: get_bits(f, 6)"];
"1003182" -> "1003178"  [label="AST: "];
"1003182" -> "1003184"  [label="CFG: "];
"1003183" -> "1003182"  [label="AST: "];
"1003184" -> "1003182"  [label="AST: "];
"1003178" -> "1003182"  [label="CFG: "];
"1003182" -> "1003178"  [label="DDG: f"];
"1003182" -> "1003178"  [label="DDG: 1"];
"1003203" -> "1003182"  [label="DDG: f"];
"1003182" -> "1003189"  [label="DDG: f"];
"1003178" -> "1003169"  [label="AST: "];
"1003179" -> "1003178"  [label="AST: "];
"1003187" -> "1003178"  [label="CFG: "];
"1003178" -> "1003623"  [label="DDG: get_bits(f,1)"];
"1003178" -> "1003623"  [label="DDG: m->blockflag"];
"1003189" -> "1003185"  [label="AST: "];
"1003189" -> "1003191"  [label="CFG: "];
"1003190" -> "1003189"  [label="AST: "];
"1003191" -> "1003189"  [label="AST: "];
"1003185" -> "1003189"  [label="CFG: "];
"1003189" -> "1003185"  [label="DDG: f"];
"1003189" -> "1003185"  [label="DDG: 16"];
"1003189" -> "1003196"  [label="DDG: f"];
"1003185" -> "1003169"  [label="AST: "];
"1003186" -> "1003185"  [label="AST: "];
"1003194" -> "1003185"  [label="CFG: "];
"1003185" -> "1003207"  [label="DDG: m->windowtype"];
"1003207" -> "1003206"  [label="AST: "];
"1003207" -> "1003211"  [label="CFG: "];
"1003208" -> "1003207"  [label="AST: "];
"1003211" -> "1003207"  [label="AST: "];
"1003214" -> "1003207"  [label="CFG: "];
"1003219" -> "1003207"  [label="CFG: "];
"1003207" -> "1003623"  [label="DDG: m->windowtype"];
"1003207" -> "1003623"  [label="DDG: m->windowtype != 0"];
"1003196" -> "1003192"  [label="AST: "];
"1003196" -> "1003198"  [label="CFG: "];
"1003197" -> "1003196"  [label="AST: "];
"1003198" -> "1003196"  [label="AST: "];
"1003192" -> "1003196"  [label="CFG: "];
"1003196" -> "1003192"  [label="DDG: f"];
"1003196" -> "1003192"  [label="DDG: 16"];
"1003196" -> "1003203"  [label="DDG: f"];
"1003192" -> "1003169"  [label="AST: "];
"1003193" -> "1003192"  [label="AST: "];
"1003201" -> "1003192"  [label="CFG: "];
"1003192" -> "1003623"  [label="DDG: get_bits(f,16)"];
"1003192" -> "1003623"  [label="DDG: m->transformtype"];
"1003192" -> "1003217"  [label="DDG: m->transformtype"];
"1003217" -> "1003216"  [label="AST: "];
"1003217" -> "1003221"  [label="CFG: "];
"1003218" -> "1003217"  [label="AST: "];
"1003221" -> "1003217"  [label="AST: "];
"1003224" -> "1003217"  [label="CFG: "];
"1003229" -> "1003217"  [label="CFG: "];
"1003217" -> "1003623"  [label="DDG: m->transformtype"];
"1003217" -> "1003623"  [label="DDG: m->transformtype != 0"];
"1003203" -> "1003199"  [label="AST: "];
"1003203" -> "1003205"  [label="CFG: "];
"1003204" -> "1003203"  [label="AST: "];
"1003205" -> "1003203"  [label="AST: "];
"1003199" -> "1003203"  [label="CFG: "];
"1003203" -> "1003199"  [label="DDG: f"];
"1003203" -> "1003199"  [label="DDG: 8"];
"1003203" -> "1003213"  [label="DDG: f"];
"1003203" -> "1003223"  [label="DDG: f"];
"1003203" -> "1003235"  [label="DDG: f"];
"1003203" -> "1003238"  [label="DDG: f"];
"1003199" -> "1003169"  [label="AST: "];
"1003200" -> "1003199"  [label="AST: "];
"1003209" -> "1003199"  [label="CFG: "];
"1003199" -> "1003623"  [label="DDG: get_bits(f,8)"];
"1003199" -> "1003623"  [label="DDG: m->mapping"];
"1003199" -> "1003227"  [label="DDG: m->mapping"];
"1003227" -> "1003226"  [label="AST: "];
"1003227" -> "1003231"  [label="CFG: "];
"1003228" -> "1003227"  [label="AST: "];
"1003231" -> "1003227"  [label="AST: "];
"1003236" -> "1003227"  [label="CFG: "];
"1003168" -> "1003227"  [label="CFG: "];
"1003227" -> "1003623"  [label="DDG: m->mapping"];
"1003227" -> "1003623"  [label="DDG: m->mapping >= f->mapping_count"];
"1003227" -> "1003623"  [label="DDG: f->mapping_count"];
"1002810" -> "1003227"  [label="DDG: f->mapping_count"];
"1003213" -> "1003212"  [label="AST: "];
"1003213" -> "1003215"  [label="CFG: "];
"1003214" -> "1003213"  [label="AST: "];
"1003215" -> "1003213"  [label="AST: "];
"1003212" -> "1003213"  [label="CFG: "];
"1003213" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003213" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003213" -> "1003623"  [label="DDG: f"];
"1003213" -> "1003212"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003212" -> "1003206"  [label="AST: "];
"1003623" -> "1003212"  [label="CFG: "];
"1003212" -> "1003623"  [label="DDG: <RET>"];
"1003223" -> "1003222"  [label="AST: "];
"1003223" -> "1003225"  [label="CFG: "];
"1003224" -> "1003223"  [label="AST: "];
"1003225" -> "1003223"  [label="AST: "];
"1003222" -> "1003223"  [label="CFG: "];
"1003223" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003223" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003223" -> "1003623"  [label="DDG: f"];
"1003223" -> "1003222"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003222" -> "1003216"  [label="AST: "];
"1003623" -> "1003222"  [label="CFG: "];
"1003222" -> "1003623"  [label="DDG: <RET>"];
"1003235" -> "1003234"  [label="AST: "];
"1003235" -> "1003237"  [label="CFG: "];
"1003236" -> "1003235"  [label="AST: "];
"1003237" -> "1003235"  [label="AST: "];
"1003234" -> "1003235"  [label="CFG: "];
"1003235" -> "1003623"  [label="DDG: VORBIS_invalid_setup"];
"1003235" -> "1003623"  [label="DDG: f"];
"1003235" -> "1003623"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003235" -> "1003234"  [label="DDG: error(f, VORBIS_invalid_setup)"];
"1003234" -> "1003226"  [label="AST: "];
"1003623" -> "1003234"  [label="CFG: "];
"1003234" -> "1003623"  [label="DDG: <RET>"];
"1003238" -> "1000108"  [label="AST: "];
"1003238" -> "1003239"  [label="CFG: "];
"1003239" -> "1003238"  [label="AST: "];
"1003242" -> "1003238"  [label="CFG: "];
"1003238" -> "1003623"  [label="DDG: flush_packet(f)"];
"1003238" -> "1003265"  [label="DDG: f"];
"1003238" -> "1003378"  [label="DDG: f"];
"1003265" -> "1003263"  [label="AST: "];
"1003265" -> "1003267"  [label="CFG: "];
"1003266" -> "1003265"  [label="AST: "];
"1003267" -> "1003265"  [label="AST: "];
"1003263" -> "1003265"  [label="CFG: "];
"1003265" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003265" -> "1003263"  [label="DDG: f"];
"1003265" -> "1003263"  [label="DDG: sizeof(float) * f->blocksize_1"];
"1003354" -> "1003265"  [label="DDG: f"];
"1003267" -> "1003265"  [label="DDG: f->blocksize_1"];
"1003265" -> "1003281"  [label="DDG: f"];
"1003263" -> "1003257"  [label="AST: "];
"1003264" -> "1003263"  [label="AST: "];
"1003257" -> "1003263"  [label="CFG: "];
"1003263" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003263" -> "1003257"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003257" -> "1003256"  [label="AST: "];
"1003258" -> "1003257"  [label="AST: "];
"1003276" -> "1003257"  [label="CFG: "];
"1003257" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1)"];
"1003281" -> "1003279"  [label="AST: "];
"1003281" -> "1003283"  [label="CFG: "];
"1003282" -> "1003281"  [label="AST: "];
"1003283" -> "1003281"  [label="AST: "];
"1003279" -> "1003281"  [label="CFG: "];
"1003281" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003281" -> "1003279"  [label="DDG: f"];
"1003281" -> "1003279"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003283" -> "1003281"  [label="DDG: f->blocksize_1/2"];
"1003281" -> "1003299"  [label="DDG: f"];
"1003279" -> "1003273"  [label="AST: "];
"1003280" -> "1003279"  [label="AST: "];
"1003273" -> "1003279"  [label="CFG: "];
"1003279" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003279" -> "1003273"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003273" -> "1003256"  [label="AST: "];
"1003274" -> "1003273"  [label="AST: "];
"1003294" -> "1003273"  [label="CFG: "];
"1003273" -> "1003623"  [label="DDG: f->previous_window[i]"];
"1003273" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003299" -> "1003297"  [label="AST: "];
"1003299" -> "1003301"  [label="CFG: "];
"1003300" -> "1003299"  [label="AST: "];
"1003301" -> "1003299"  [label="AST: "];
"1003297" -> "1003299"  [label="CFG: "];
"1003299" -> "1003623"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003299" -> "1003297"  [label="DDG: f"];
"1003299" -> "1003297"  [label="DDG: sizeof(int16) * longest_floorlist"];
"1003301" -> "1003299"  [label="DDG: longest_floorlist"];
"1003299" -> "1003330"  [label="DDG: f"];
"1003299" -> "1003354"  [label="DDG: f"];
"1003297" -> "1003291"  [label="AST: "];
"1003298" -> "1003297"  [label="AST: "];
"1003291" -> "1003297"  [label="CFG: "];
"1003297" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003297" -> "1003291"  [label="DDG: setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003291" -> "1003256"  [label="AST: "];
"1003292" -> "1003291"  [label="AST: "];
"1003310" -> "1003291"  [label="CFG: "];
"1003291" -> "1003623"  [label="DDG: f->finalY[i]"];
"1003291" -> "1003623"  [label="DDG: (int16 *) setup_malloc(f, sizeof(int16) * longest_floorlist)"];
"1003330" -> "1003329"  [label="AST: "];
"1003330" -> "1003332"  [label="CFG: "];
"1003331" -> "1003330"  [label="AST: "];
"1003332" -> "1003330"  [label="AST: "];
"1003329" -> "1003330"  [label="CFG: "];
"1003330" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003330" -> "1003623"  [label="DDG: f"];
"1003330" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003330" -> "1003329"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003329" -> "1003305"  [label="AST: "];
"1003623" -> "1003329"  [label="CFG: "];
"1003329" -> "1003623"  [label="DDG: <RET>"];
"1003354" -> "1003352"  [label="AST: "];
"1003354" -> "1003356"  [label="CFG: "];
"1003355" -> "1003354"  [label="AST: "];
"1003356" -> "1003354"  [label="AST: "];
"1003352" -> "1003354"  [label="CFG: "];
"1003354" -> "1003623"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003354" -> "1003352"  [label="DDG: f"];
"1003354" -> "1003352"  [label="DDG: sizeof(float) * f->blocksize_1/2"];
"1003356" -> "1003354"  [label="DDG: f->blocksize_1/2"];
"1003354" -> "1003373"  [label="DDG: f"];
"1003354" -> "1003378"  [label="DDG: f"];
"1003352" -> "1003346"  [label="AST: "];
"1003353" -> "1003352"  [label="AST: "];
"1003346" -> "1003352"  [label="CFG: "];
"1003352" -> "1003623"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003352" -> "1003346"  [label="DDG: setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003346" -> "1003256"  [label="AST: "];
"1003347" -> "1003346"  [label="AST: "];
"1003368" -> "1003346"  [label="CFG: "];
"1003346" -> "1003623"  [label="DDG: (float *) setup_malloc(f, sizeof(float) * f->blocksize_1/2)"];
"1003373" -> "1003372"  [label="AST: "];
"1003373" -> "1003375"  [label="CFG: "];
"1003374" -> "1003373"  [label="AST: "];
"1003375" -> "1003373"  [label="AST: "];
"1003372" -> "1003373"  [label="CFG: "];
"1003373" -> "1003623"  [label="DDG: f"];
"1003373" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003373" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003373" -> "1003372"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003372" -> "1003364"  [label="AST: "];
"1003623" -> "1003372"  [label="CFG: "];
"1003372" -> "1003623"  [label="DDG: <RET>"];
"1003378" -> "1003377"  [label="AST: "];
"1003378" -> "1003381"  [label="CFG: "];
"1003379" -> "1003378"  [label="AST: "];
"1003380" -> "1003378"  [label="AST: "];
"1003381" -> "1003378"  [label="AST: "];
"1003377" -> "1003378"  [label="CFG: "];
"1003378" -> "1003623"  [label="DDG: f"];
"1003378" -> "1003623"  [label="DDG: f->blocksize_0"];
"1003378" -> "1003377"  [label="DDG: f"];
"1003378" -> "1003377"  [label="DDG: 0"];
"1003378" -> "1003377"  [label="DDG: f->blocksize_0"];
"1000347" -> "1003378"  [label="DDG: f->blocksize_0"];
"1003378" -> "1003388"  [label="DDG: f"];
"1003378" -> "1003396"  [label="DDG: f->blocksize_0"];
"1003377" -> "1003376"  [label="AST: "];
"1003385" -> "1003377"  [label="CFG: "];
"1003389" -> "1003377"  [label="CFG: "];
"1003377" -> "1003623"  [label="DDG: !init_blocksize(f, 0, f->blocksize_0)"];
"1003377" -> "1003623"  [label="DDG: init_blocksize(f, 0, f->blocksize_0)"];
"1003388" -> "1003387"  [label="AST: "];
"1003388" -> "1003391"  [label="CFG: "];
"1003389" -> "1003388"  [label="AST: "];
"1003390" -> "1003388"  [label="AST: "];
"1003391" -> "1003388"  [label="AST: "];
"1003387" -> "1003388"  [label="CFG: "];
"1003388" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003623"  [label="DDG: f"];
"1003388" -> "1003387"  [label="DDG: f"];
"1003388" -> "1003387"  [label="DDG: 1"];
"1003388" -> "1003387"  [label="DDG: f->blocksize_1"];
"1003359" -> "1003388"  [label="DDG: f->blocksize_1"];
"1000354" -> "1003388"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003405"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003454"  [label="DDG: f->blocksize_1"];
"1003388" -> "1003612"  [label="DDG: f"];
"1003388" -> "1003619"  [label="DDG: f"];
"1003387" -> "1003386"  [label="AST: "];
"1003395" -> "1003387"  [label="CFG: "];
"1003399" -> "1003387"  [label="CFG: "];
"1003387" -> "1003623"  [label="DDG: !init_blocksize(f, 1, f->blocksize_1)"];
"1003387" -> "1003623"  [label="DDG: init_blocksize(f, 1, f->blocksize_1)"];
"1003405" -> "1000108"  [label="AST: "];
"1003405" -> "1003411"  [label="CFG: "];
"1003406" -> "1003405"  [label="AST: "];
"1003411" -> "1003405"  [label="AST: "];
"1003418" -> "1003405"  [label="CFG: "];
"1003405" -> "1003623"  [label="DDG: f->blocksize[1]"];
"1003454" -> "1003453"  [label="AST: "];
"1003454" -> "1003458"  [label="CFG: "];
"1003455" -> "1003454"  [label="AST: "];
"1003458" -> "1003454"  [label="AST: "];
"1003460" -> "1003454"  [label="CFG: "];
"1003454" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003454" -> "1003453"  [label="DDG: f->blocksize_1"];
"1003454" -> "1003490"  [label="DDG: f->blocksize_1"];
"1003453" -> "1003451"  [label="AST: "];
"1003453" -> "1003460"  [label="CFG: "];
"1003460" -> "1003453"  [label="AST: "];
"1003451" -> "1003453"  [label="CFG: "];
"1003453" -> "1003623"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003453" -> "1003451"  [label="DDG: f->blocksize_1 * sizeof(float)"];
"1003453" -> "1003451"  [label="DDG: 1"];
"1003451" -> "1003449"  [label="AST: "];
"1003452" -> "1003451"  [label="AST: "];
"1003465" -> "1003451"  [label="CFG: "];
"1003451" -> "1003623"  [label="DDG: f->blocksize_1 * sizeof(float) >> 1"];
"1003451" -> "1003561"  [label="DDG: imdct_mem"];
"1003561" -> "1003560"  [label="AST: "];
"1003561" -> "1003563"  [label="CFG: "];
"1003562" -> "1003561"  [label="AST: "];
"1003563" -> "1003561"  [label="AST: "];
"1003568" -> "1003561"  [label="CFG: "];
"1003573" -> "1003561"  [label="CFG: "];
"1003561" -> "1003623"  [label="DDG: imdct_mem"];
"1003561" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003623"  [label="DDG: imdct_mem > f->temp_memory_required"];
"1003555" -> "1003561"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003566"  [label="DDG: imdct_mem"];
"1003561" -> "1003594"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003595"  [label="DDG: f->temp_memory_required"];
"1003561" -> "1003599"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003560"  [label="AST: "];
"1003566" -> "1003570"  [label="CFG: "];
"1003567" -> "1003566"  [label="AST: "];
"1003570" -> "1003566"  [label="AST: "];
"1003573" -> "1003566"  [label="CFG: "];
"1003566" -> "1003623"  [label="DDG: imdct_mem"];
"1003566" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003594"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003595"  [label="DDG: f->temp_memory_required"];
"1003566" -> "1003599"  [label="DDG: f->temp_memory_required"];
"1003594" -> "1003593"  [label="AST: "];
"1003594" -> "1003606"  [label="CFG: "];
"1003595" -> "1003594"  [label="AST: "];
"1003606" -> "1003594"  [label="AST: "];
"1003613" -> "1003594"  [label="CFG: "];
"1003617" -> "1003594"  [label="CFG: "];
"1003594" -> "1003623"  [label="DDG: (unsigned) f->temp_offset"];
"1003594" -> "1003623"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required"];
"1003594" -> "1003623"  [label="DDG: f->setup_offset + sizeof(*f) + f->temp_memory_required > (unsigned) f->temp_offset"];
"1003606" -> "1003594"  [label="DDG: f->temp_offset"];
"1003595" -> "1003599"  [label="CFG: "];
"1003596" -> "1003595"  [label="AST: "];
"1003599" -> "1003595"  [label="AST: "];
"1003607" -> "1003595"  [label="CFG: "];
"1003595" -> "1003623"  [label="DDG: sizeof(*f) + f->temp_memory_required"];
"1003595" -> "1003623"  [label="DDG: f->setup_offset"];
"1003599" -> "1003603"  [label="CFG: "];
"1003600" -> "1003599"  [label="AST: "];
"1003603" -> "1003599"  [label="AST: "];
"1003599" -> "1003623"  [label="DDG: f->temp_memory_required"];
"1003490" -> "1003488"  [label="AST: "];
"1003490" -> "1003494"  [label="CFG: "];
"1003491" -> "1003490"  [label="AST: "];
"1003494" -> "1003490"  [label="AST: "];
"1003488" -> "1003490"  [label="CFG: "];
"1003490" -> "1003623"  [label="DDG: f->blocksize_1"];
"1003490" -> "1003488"  [label="DDG: f->blocksize_1"];
"1003490" -> "1003488"  [label="DDG: 2"];
"1003488" -> "1003478"  [label="AST: "];
"1003489" -> "1003488"  [label="AST: "];
"1003497" -> "1003488"  [label="CFG: "];
"1003488" -> "1003623"  [label="DDG: f->blocksize_1 / 2"];
"1003488" -> "1003499"  [label="DDG: actual_size"];
"1003499" -> "1003498"  [label="AST: "];
"1003499" -> "1003503"  [label="CFG: "];
"1003500" -> "1003499"  [label="AST: "];
"1003503" -> "1003499"  [label="AST: "];
"1003505" -> "1003499"  [label="CFG: "];
"1003507" -> "1003499"  [label="CFG: "];
"1003499" -> "1003496"  [label="DDG: r->begin"];
"1003499" -> "1003496"  [label="DDG: actual_size"];
"1002428" -> "1003499"  [label="DDG: r->begin"];
"1003499" -> "1003498"  [label="DDG: r->begin"];
"1003499" -> "1003498"  [label="DDG: actual_size"];
"1003499" -> "1003512"  [label="DDG: actual_size"];
"1003496" -> "1003478"  [label="AST: "];
"1003496" -> "1003498"  [label="CFG: "];
"1003497" -> "1003496"  [label="AST: "];
"1003498" -> "1003496"  [label="AST: "];
"1003510" -> "1003496"  [label="CFG: "];
"1003496" -> "1003623"  [label="DDG: r->begin < actual_size ? r->begin : actual_size"];
"1003496" -> "1003524"  [label="DDG: limit_r_begin"];
"1003524" -> "1003522"  [label="AST: "];
"1003524" -> "1003526"  [label="CFG: "];
"1003525" -> "1003524"  [label="AST: "];
"1003526" -> "1003524"  [label="AST: "];
"1003522" -> "1003524"  [label="CFG: "];
"1003524" -> "1003623"  [label="DDG: limit_r_end"];
"1003524" -> "1003623"  [label="DDG: limit_r_begin"];
"1003524" -> "1003522"  [label="DDG: limit_r_end"];
"1003524" -> "1003522"  [label="DDG: limit_r_begin"];
"1003509" -> "1003524"  [label="DDG: limit_r_end"];
"1003522" -> "1003478"  [label="AST: "];
"1003523" -> "1003522"  [label="AST: "];
"1003529" -> "1003522"  [label="CFG: "];
"1003522" -> "1003623"  [label="DDG: limit_r_end - limit_r_begin"];
"1003522" -> "1003530"  [label="DDG: n_read"];
"1003530" -> "1003528"  [label="AST: "];
"1003530" -> "1003532"  [label="CFG: "];
"1003531" -> "1003530"  [label="AST: "];
"1003532" -> "1003530"  [label="AST: "];
"1003528" -> "1003530"  [label="CFG: "];
"1003530" -> "1003623"  [label="DDG: n_read"];
"1003530" -> "1003623"  [label="DDG: r->part_size"];
"1003530" -> "1003528"  [label="DDG: n_read"];
"1003530" -> "1003528"  [label="DDG: r->part_size"];
"1002439" -> "1003530"  [label="DDG: r->part_size"];
"1003528" -> "1003478"  [label="AST: "];
"1003529" -> "1003528"  [label="AST: "];
"1003537" -> "1003528"  [label="CFG: "];
"1003528" -> "1003623"  [label="DDG: n_read / r->part_size"];
"1003528" -> "1003536"  [label="DDG: part_read"];
"1003536" -> "1003535"  [label="AST: "];
"1003536" -> "1003538"  [label="CFG: "];
"1003537" -> "1003536"  [label="AST: "];
"1003538" -> "1003536"  [label="AST: "];
"1003540" -> "1003536"  [label="CFG: "];
"1003477" -> "1003536"  [label="CFG: "];
"1003536" -> "1003623"  [label="DDG: part_read"];
"1003536" -> "1003623"  [label="DDG: part_read > max_part_read"];
"1003539" -> "1003536"  [label="DDG: max_part_read"];
"1003464" -> "1003536"  [label="DDG: max_part_read"];
"1003536" -> "1003539"  [label="DDG: part_read"];
"1003536" -> "1003551"  [label="DDG: max_part_read"];
"1003539" -> "1003535"  [label="AST: "];
"1003539" -> "1003541"  [label="CFG: "];
"1003540" -> "1003539"  [label="AST: "];
"1003541" -> "1003539"  [label="AST: "];
"1003477" -> "1003539"  [label="CFG: "];
"1003539" -> "1003623"  [label="DDG: part_read"];
"1003539" -> "1003551"  [label="DDG: max_part_read"];
"1003551" -> "1003548"  [label="AST: "];
"1003551" -> "1003553"  [label="CFG: "];
"1003552" -> "1003551"  [label="AST: "];
"1003553" -> "1003551"  [label="AST: "];
"1003548" -> "1003551"  [label="CFG: "];
"1003551" -> "1003623"  [label="DDG: max_part_read"];
"1003551" -> "1003544"  [label="DDG: max_part_read"];
"1003551" -> "1003548"  [label="DDG: max_part_read"];
"1003464" -> "1003551"  [label="DDG: max_part_read"];
"1003544" -> "1003542"  [label="AST: "];
"1003544" -> "1003548"  [label="CFG: "];
"1003545" -> "1003544"  [label="AST: "];
"1003548" -> "1003544"  [label="AST: "];
"1003542" -> "1003544"  [label="CFG: "];
"1003544" -> "1003623"  [label="DDG: f->channels"];
"1003544" -> "1003623"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003544" -> "1003542"  [label="DDG: f->channels"];
"1003544" -> "1003542"  [label="DDG: sizeof(void*) + max_part_read * sizeof(uint8 *)"];
"1003249" -> "1003544"  [label="DDG: f->channels"];
"1003542" -> "1003449"  [label="AST: "];
"1003543" -> "1003542"  [label="AST: "];
"1003557" -> "1003542"  [label="CFG: "];
"1003542" -> "1003623"  [label="DDG: f->channels * (sizeof(void*) + max_part_read * sizeof(uint8 *))"];
"1003542" -> "1003555"  [label="DDG: classify_mem"];
"1003555" -> "1003449"  [label="AST: "];
"1003555" -> "1003559"  [label="CFG: "];
"1003556" -> "1003555"  [label="AST: "];
"1003559" -> "1003555"  [label="AST: "];
"1003562" -> "1003555"  [label="CFG: "];
"1003555" -> "1003623"  [label="DDG: classify_mem"];
"1003549" -> "1003548"  [label="AST: "];
"1003548" -> "1003623"  [label="DDG: max_part_read * sizeof(uint8 *)"];
"1003498" -> "1003504"  [label="CFG: "];
"1003498" -> "1003507"  [label="CFG: "];
"1003504" -> "1003498"  [label="AST: "];
"1003507" -> "1003498"  [label="AST: "];
"1003498" -> "1003623"  [label="DDG: r->begin < actual_size"];
"1003498" -> "1003623"  [label="DDG: r->begin"];
"1003512" -> "1003511"  [label="AST: "];
"1003512" -> "1003516"  [label="CFG: "];
"1003513" -> "1003512"  [label="AST: "];
"1003516" -> "1003512"  [label="AST: "];
"1003518" -> "1003512"  [label="CFG: "];
"1003520" -> "1003512"  [label="CFG: "];
"1003512" -> "1003509"  [label="DDG: r->end"];
"1003512" -> "1003509"  [label="DDG: actual_size"];
"1002428" -> "1003512"  [label="DDG: r->end"];
"1003512" -> "1003511"  [label="DDG: r->end"];
"1003512" -> "1003511"  [label="DDG: actual_size"];
"1003509" -> "1003478"  [label="AST: "];
"1003509" -> "1003511"  [label="CFG: "];
"1003510" -> "1003509"  [label="AST: "];
"1003511" -> "1003509"  [label="AST: "];
"1003523" -> "1003509"  [label="CFG: "];
"1003509" -> "1003623"  [label="DDG: r->end   < actual_size ? r->end   : actual_size"];
"1003511" -> "1003517"  [label="CFG: "];
"1003511" -> "1003520"  [label="CFG: "];
"1003517" -> "1003511"  [label="AST: "];
"1003520" -> "1003511"  [label="AST: "];
"1003511" -> "1003623"  [label="DDG: r->end"];
"1003511" -> "1003623"  [label="DDG: actual_size"];
"1003511" -> "1003623"  [label="DDG: r->end   < actual_size"];
"1003612" -> "1003611"  [label="AST: "];
"1003612" -> "1003614"  [label="CFG: "];
"1003613" -> "1003612"  [label="AST: "];
"1003614" -> "1003612"  [label="AST: "];
"1003611" -> "1003612"  [label="CFG: "];
"1003612" -> "1003623"  [label="DDG: f"];
"1003612" -> "1003623"  [label="DDG: VORBIS_outofmem"];
"1003612" -> "1003623"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003612" -> "1003611"  [label="DDG: error(f, VORBIS_outofmem)"];
"1003611" -> "1003593"  [label="AST: "];
"1003623" -> "1003611"  [label="CFG: "];
"1003611" -> "1003623"  [label="DDG: <RET>"];
"1003619" -> "1003615"  [label="AST: "];
"1003619" -> "1003620"  [label="CFG: "];
"1003620" -> "1003619"  [label="AST: "];
"1003615" -> "1003619"  [label="CFG: "];
"1003619" -> "1003623"  [label="DDG: f"];
"1003619" -> "1003615"  [label="DDG: f"];
"1003615" -> "1000108"  [label="AST: "];
"1003616" -> "1003615"  [label="AST: "];
"1003622" -> "1003615"  [label="CFG: "];
"1003615" -> "1003623"  [label="DDG: stb_vorbis_get_file_offset(f)"];
"1003615" -> "1003623"  [label="DDG: f->first_audio_page_offset"];
"1003396" -> "1000108"  [label="AST: "];
"1003396" -> "1003402"  [label="CFG: "];
"1003397" -> "1003396"  [label="AST: "];
"1003402" -> "1003396"  [label="AST: "];
"1003408" -> "1003396"  [label="CFG: "];
"1003396" -> "1003623"  [label="DDG: f->blocksize[0]"];
"1003396" -> "1003623"  [label="DDG: f->blocksize_0"];
"1002988" -> "1002987"  [label="AST: "];
"1002988" -> "1002996"  [label="CFG: "];
"1002989" -> "1002988"  [label="AST: "];
"1002996" -> "1002988"  [label="AST: "];
"1003005" -> "1002988"  [label="CFG: "];
"1002921" -> "1002988"  [label="CFG: "];
"1002988" -> "1003623"  [label="DDG: m->chan[k].magnitude == m->chan[k].angle"];
"1002988" -> "1003623"  [label="DDG: m->chan[k].angle"];
"1002988" -> "1003623"  [label="DDG: m->chan[k].magnitude"];
"1003032" -> "1003028"  [label="AST: "];
"1003032" -> "1003034"  [label="CFG: "];
"1003033" -> "1003032"  [label="AST: "];
"1003034" -> "1003032"  [label="AST: "];
"1003044" -> "1003032"  [label="CFG: "];
"1003090" -> "1003032"  [label="CFG: "];
"1003032" -> "1003623"  [label="DDG: j"];
"1003032" -> "1003623"  [label="DDG: j < f->channels"];
"1003032" -> "1003623"  [label="DDG: f->channels"];
"1003032" -> "1002848"  [label="DDG: f->channels"];
"1003029" -> "1003032"  [label="DDG: j"];
"1003037" -> "1003032"  [label="DDG: j"];
"1002848" -> "1003032"  [label="DDG: f->channels"];
"1003032" -> "1003037"  [label="DDG: j"];
"1003032" -> "1003249"  [label="DDG: f->channels"];
"1002848" -> "1002852"  [label="CFG: "];
"1002849" -> "1002848"  [label="AST: "];
"1002852" -> "1002848"  [label="AST: "];
"1002848" -> "1003623"  [label="DDG: f->channels"];
"1000300" -> "1002848"  [label="DDG: f->channels"];
"1003072" -> "1002848"  [label="DDG: f->channels"];
"1002848" -> "1003072"  [label="DDG: f->channels"];
"1003072" -> "1003068"  [label="AST: "];
"1003072" -> "1003074"  [label="CFG: "];
"1003073" -> "1003072"  [label="AST: "];
"1003074" -> "1003072"  [label="AST: "];
"1003083" -> "1003072"  [label="CFG: "];
"1003090" -> "1003072"  [label="CFG: "];
"1003072" -> "1003623"  [label="DDG: j < f->channels"];
"1003072" -> "1003623"  [label="DDG: f->channels"];
"1003077" -> "1003072"  [label="DDG: j"];
"1003069" -> "1003072"  [label="DDG: j"];
"1003072" -> "1003077"  [label="DDG: j"];
"1003072" -> "1003249"  [label="DDG: f->channels"];
"1003077" -> "1003068"  [label="AST: "];
"1003077" -> "1003078"  [label="CFG: "];
"1003078" -> "1003077"  [label="AST: "];
"1003073" -> "1003077"  [label="CFG: "];
"1003249" -> "1003245"  [label="AST: "];
"1003249" -> "1003251"  [label="CFG: "];
"1003250" -> "1003249"  [label="AST: "];
"1003251" -> "1003249"  [label="AST: "];
"1003260" -> "1003249"  [label="CFG: "];
"1003379" -> "1003249"  [label="CFG: "];
"1003249" -> "1003623"  [label="DDG: f->channels"];
"1003249" -> "1003623"  [label="DDG: i"];
"1003249" -> "1003623"  [label="DDG: i < f->channels"];
"1003254" -> "1003249"  [label="DDG: i"];
"1003246" -> "1003249"  [label="DDG: i"];
"1000300" -> "1003249"  [label="DDG: f->channels"];
"1003249" -> "1003254"  [label="DDG: i"];
"1003254" -> "1003245"  [label="AST: "];
"1003254" -> "1003255"  [label="CFG: "];
"1003255" -> "1003254"  [label="AST: "];
"1003250" -> "1003254"  [label="CFG: "];
"1003037" -> "1003028"  [label="AST: "];
"1003037" -> "1003038"  [label="CFG: "];
"1003038" -> "1003037"  [label="AST: "];
"1003033" -> "1003037"  [label="CFG: "];
}
