digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_17@pointer" {
"1000333" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000192" [label="(Call,skb_dequeue(&sk->sk_receive_queue))"];
"1000260" [label="(Call,skb_peek(&sk->sk_receive_queue))"];
"1000321" [label="(Call,skb_pull(skb, chunk))"];
"1000198" [label="(Call,skb == NULL)"];
"1000190" [label="(Call,*skb = skb_dequeue(&sk->sk_receive_queue))"];
"1000259" [label="(Call,skb_peek(&sk->sk_receive_queue) == NULL)"];
"1000285" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000334" [label="(Call,&sk->sk_receive_queue)"];
"1000320" [label="(Block,)"];
"1000321" [label="(Call,skb_pull(skb, chunk))"];
"1000259" [label="(Call,skb_peek(&sk->sk_receive_queue) == NULL)"];
"1000294" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000323" [label="(Identifier,chunk)"];
"1000200" [label="(Identifier,NULL)"];
"1000348" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000265" [label="(Identifier,NULL)"];
"1000261" [label="(Call,&sk->sk_receive_queue)"];
"1000203" [label="(Identifier,wait)"];
"1000312" [label="(Call,size -= chunk)"];
"1000284" [label="(ControlStructure,if (memcpy_toiovec(msg->msg_iov, skb->data, chunk)))"];
"1000266" [label="(Call,schedule())"];
"1000258" [label="(ControlStructure,if (skb_peek(&sk->sk_receive_queue) == NULL))"];
"1000192" [label="(Call,skb_dequeue(&sk->sk_receive_queue))"];
"1000310" [label="(Identifier,copied)"];
"1000260" [label="(Call,skb_peek(&sk->sk_receive_queue))"];
"1000198" [label="(Call,skb == NULL)"];
"1000297" [label="(Identifier,sk)"];
"1000309" [label="(Call,copied += chunk)"];
"1000197" [label="(ControlStructure,if (skb == NULL))"];
"1000287" [label="(Identifier,msg)"];
"1000339" [label="(ControlStructure,break;)"];
"1000340" [label="(Call,kfree_skb(skb))"];
"1000193" [label="(Call,&sk->sk_receive_queue)"];
"1000187" [label="(Block,)"];
"1000326" [label="(Identifier,skb)"];
"1000292" [label="(Identifier,chunk)"];
"1000199" [label="(Identifier,skb)"];
"1000333" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000328" [label="(Block,)"];
"1000285" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000392" [label="(MethodReturn,static int)"];
"1000191" [label="(Identifier,skb)"];
"1000269" [label="(Identifier,sk)"];
"1000286" [label="(Call,msg->msg_iov)"];
"1000322" [label="(Identifier,skb)"];
"1000289" [label="(Call,skb->data)"];
"1000338" [label="(Identifier,skb)"];
"1000190" [label="(Call,*skb = skb_dequeue(&sk->sk_receive_queue))"];
"1000333" -> "1000328"  [label="AST: "];
"1000333" -> "1000338"  [label="CFG: "];
"1000334" -> "1000333"  [label="AST: "];
"1000338" -> "1000333"  [label="AST: "];
"1000339" -> "1000333"  [label="CFG: "];
"1000333" -> "1000392"  [label="DDG: &sk->sk_receive_queue"];
"1000333" -> "1000392"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000333" -> "1000392"  [label="DDG: skb"];
"1000192" -> "1000333"  [label="DDG: &sk->sk_receive_queue"];
"1000321" -> "1000333"  [label="DDG: skb"];
"1000192" -> "1000190"  [label="AST: "];
"1000192" -> "1000193"  [label="CFG: "];
"1000193" -> "1000192"  [label="AST: "];
"1000190" -> "1000192"  [label="CFG: "];
"1000192" -> "1000392"  [label="DDG: &sk->sk_receive_queue"];
"1000192" -> "1000190"  [label="DDG: &sk->sk_receive_queue"];
"1000260" -> "1000192"  [label="DDG: &sk->sk_receive_queue"];
"1000192" -> "1000260"  [label="DDG: &sk->sk_receive_queue"];
"1000192" -> "1000294"  [label="DDG: &sk->sk_receive_queue"];
"1000192" -> "1000348"  [label="DDG: &sk->sk_receive_queue"];
"1000260" -> "1000259"  [label="AST: "];
"1000260" -> "1000261"  [label="CFG: "];
"1000261" -> "1000260"  [label="AST: "];
"1000265" -> "1000260"  [label="CFG: "];
"1000260" -> "1000392"  [label="DDG: &sk->sk_receive_queue"];
"1000260" -> "1000259"  [label="DDG: &sk->sk_receive_queue"];
"1000321" -> "1000320"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000321" -> "1000392"  [label="DDG: chunk"];
"1000321" -> "1000392"  [label="DDG: skb_pull(skb, chunk)"];
"1000321" -> "1000285"  [label="DDG: chunk"];
"1000198" -> "1000321"  [label="DDG: skb"];
"1000285" -> "1000321"  [label="DDG: chunk"];
"1000321" -> "1000340"  [label="DDG: skb"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000203" -> "1000198"  [label="CFG: "];
"1000287" -> "1000198"  [label="CFG: "];
"1000198" -> "1000392"  [label="DDG: NULL"];
"1000198" -> "1000392"  [label="DDG: skb"];
"1000198" -> "1000392"  [label="DDG: skb == NULL"];
"1000190" -> "1000198"  [label="DDG: skb"];
"1000259" -> "1000198"  [label="DDG: NULL"];
"1000198" -> "1000259"  [label="DDG: NULL"];
"1000198" -> "1000294"  [label="DDG: skb"];
"1000198" -> "1000348"  [label="DDG: skb"];
"1000190" -> "1000187"  [label="AST: "];
"1000191" -> "1000190"  [label="AST: "];
"1000199" -> "1000190"  [label="CFG: "];
"1000190" -> "1000392"  [label="DDG: skb_dequeue(&sk->sk_receive_queue)"];
"1000259" -> "1000258"  [label="AST: "];
"1000259" -> "1000265"  [label="CFG: "];
"1000265" -> "1000259"  [label="AST: "];
"1000266" -> "1000259"  [label="CFG: "];
"1000269" -> "1000259"  [label="CFG: "];
"1000259" -> "1000392"  [label="DDG: skb_peek(&sk->sk_receive_queue) == NULL"];
"1000259" -> "1000392"  [label="DDG: skb_peek(&sk->sk_receive_queue)"];
"1000259" -> "1000392"  [label="DDG: NULL"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000292"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000289" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="AST: "];
"1000297" -> "1000285"  [label="CFG: "];
"1000310" -> "1000285"  [label="CFG: "];
"1000285" -> "1000392"  [label="DDG: msg->msg_iov"];
"1000285" -> "1000392"  [label="DDG: chunk"];
"1000285" -> "1000392"  [label="DDG: memcpy_toiovec(msg->msg_iov, skb->data, chunk)"];
"1000285" -> "1000392"  [label="DDG: skb->data"];
"1000285" -> "1000309"  [label="DDG: chunk"];
"1000285" -> "1000312"  [label="DDG: chunk"];
}
