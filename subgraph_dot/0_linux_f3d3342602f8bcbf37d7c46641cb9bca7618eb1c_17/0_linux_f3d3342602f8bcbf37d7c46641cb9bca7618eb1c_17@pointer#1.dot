digraph "0_linux_f3d3342602f8bcbf37d7c46641cb9bca7618eb1c_17@pointer" {
"1000175" [label="(Call,sock_rcvlowat(sk, flags & MSG_WAITALL, size))"];
"1000145" [label="(Call,sock_error(sk))"];
"1000122" [label="(Call,irda_sk(sk))"];
"1000114" [label="(Call,*sk = sock->sk)"];
"1000177" [label="(Call,flags & MSG_WAITALL)"];
"1000164" [label="(Call,flags & MSG_OOB)"];
"1000127" [label="(Call,flags & MSG_DONTWAIT)"];
"1000111" [label="(MethodParameterIn,int flags)"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000173" [label="(Call,target = sock_rcvlowat(sk, flags & MSG_WAITALL, size))"];
"1000208" [label="(Call,copied >= target)"];
"1000301" [label="(Call,copied == 0)"];
"1000390" [label="(Return,return copied;)"];
"1000309" [label="(Call,copied += chunk)"];
"1000183" [label="(Call,sock_rcvtimeo(sk, noblock))"];
"1000181" [label="(Call,timeo = sock_rcvtimeo(sk, noblock))"];
"1000244" [label="(Call,sock_intr_errno(timeo))"];
"1000242" [label="(Call,err = sock_intr_errno(timeo))"];
"1000274" [label="(Return,return err;)"];
"1000213" [label="(Call,sk_sleep(sk))"];
"1000212" [label="(Call,prepare_to_wait_exclusive(sk_sleep(sk), &wait, TASK_INTERRUPTIBLE))"];
"1000267" [label="(Call,finish_wait(sk_sleep(sk), &wait))"];
"1000220" [label="(Call,sock_error(sk))"];
"1000218" [label="(Call,err = sock_error(sk))"];
"1000268" [label="(Call,sk_sleep(sk))"];
"1000312" [label="(Call,size -= chunk)"];
"1000175" [label="(Call,sock_rcvlowat(sk, flags & MSG_WAITALL, size))"];
"1000244" [label="(Call,sock_intr_errno(timeo))"];
"1000180" [label="(Identifier,size)"];
"1000272" [label="(ControlStructure,if (err))"];
"1000142" [label="(Call,(err = sock_error(sk)) < 0)"];
"1000314" [label="(Identifier,chunk)"];
"1000123" [label="(Identifier,sk)"];
"1000267" [label="(Call,finish_wait(sk_sleep(sk), &wait))"];
"1000300" [label="(ControlStructure,if (copied == 0))"];
"1000177" [label="(Call,flags & MSG_WAITALL)"];
"1000317" [label="(Call,flags & MSG_PEEK)"];
"1000216" [label="(Identifier,wait)"];
"1000239" [label="(ControlStructure,if (signal_pending(current)))"];
"1000111" [label="(MethodParameterIn,int flags)"];
"1000169" [label="(Identifier,EOPNOTSUPP)"];
"1000112" [label="(Block,)"];
"1000145" [label="(Call,sock_error(sk))"];
"1000212" [label="(Call,prepare_to_wait_exclusive(sk_sleep(sk), &wait, TASK_INTERRUPTIBLE))"];
"1000318" [label="(Identifier,flags)"];
"1000217" [label="(Identifier,TASK_INTERRUPTIBLE)"];
"1000392" [label="(MethodReturn,static int)"];
"1000114" [label="(Call,*sk = sock->sk)"];
"1000166" [label="(Identifier,MSG_OOB)"];
"1000181" [label="(Call,timeo = sock_rcvtimeo(sk, noblock))"];
"1000121" [label="(Identifier,self)"];
"1000302" [label="(Identifier,copied)"];
"1000182" [label="(Identifier,timeo)"];
"1000213" [label="(Call,sk_sleep(sk))"];
"1000210" [label="(Identifier,target)"];
"1000391" [label="(Identifier,copied)"];
"1000183" [label="(Call,sock_rcvtimeo(sk, noblock))"];
"1000242" [label="(Call,err = sock_intr_errno(timeo))"];
"1000163" [label="(ControlStructure,if (flags & MSG_OOB))"];
"1000312" [label="(Call,size -= chunk)"];
"1000129" [label="(Identifier,MSG_DONTWAIT)"];
"1000176" [label="(Identifier,sk)"];
"1000219" [label="(Identifier,err)"];
"1000209" [label="(Identifier,copied)"];
"1000275" [label="(Identifier,err)"];
"1000185" [label="(Identifier,noblock)"];
"1000274" [label="(Return,return err;)"];
"1000220" [label="(Call,sock_error(sk))"];
"1000305" [label="(Identifier,copied)"];
"1000128" [label="(Identifier,flags)"];
"1000207" [label="(ControlStructure,if (copied >= target))"];
"1000303" [label="(Literal,0)"];
"1000116" [label="(Call,sock->sk)"];
"1000214" [label="(Identifier,sk)"];
"1000285" [label="(Call,memcpy_toiovec(msg->msg_iov, skb->data, chunk))"];
"1000234" [label="(Call,err = -EAGAIN)"];
"1000269" [label="(Identifier,sk)"];
"1000191" [label="(Identifier,skb)"];
"1000171" [label="(Identifier,err)"];
"1000143" [label="(Call,err = sock_error(sk))"];
"1000268" [label="(Call,sk_sleep(sk))"];
"1000110" [label="(MethodParameterIn,size_t size)"];
"1000173" [label="(Call,target = sock_rcvlowat(sk, flags & MSG_WAITALL, size))"];
"1000253" [label="(Call,err = -ENOTCONN)"];
"1000270" [label="(Call,&wait)"];
"1000308" [label="(ControlStructure,break;)"];
"1000223" [label="(Identifier,err)"];
"1000164" [label="(Call,flags & MSG_OOB)"];
"1000311" [label="(Identifier,chunk)"];
"1000310" [label="(Identifier,copied)"];
"1000165" [label="(Identifier,flags)"];
"1000309" [label="(Call,copied += chunk)"];
"1000211" [label="(ControlStructure,break;)"];
"1000122" [label="(Call,irda_sk(sk))"];
"1000187" [label="(Block,)"];
"1000304" [label="(Call,copied = -EFAULT)"];
"1000127" [label="(Call,flags & MSG_DONTWAIT)"];
"1000390" [label="(Return,return copied;)"];
"1000146" [label="(Identifier,sk)"];
"1000243" [label="(Identifier,err)"];
"1000115" [label="(Identifier,sk)"];
"1000273" [label="(Identifier,err)"];
"1000301" [label="(Call,copied == 0)"];
"1000174" [label="(Identifier,target)"];
"1000131" [label="(Call,copied = 0)"];
"1000221" [label="(Identifier,sk)"];
"1000313" [label="(Identifier,size)"];
"1000184" [label="(Identifier,sk)"];
"1000271" [label="(Identifier,wait)"];
"1000178" [label="(Identifier,flags)"];
"1000125" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000201" [label="(Block,)"];
"1000120" [label="(Call,*self = irda_sk(sk))"];
"1000245" [label="(Identifier,timeo)"];
"1000208" [label="(Call,copied >= target)"];
"1000218" [label="(Call,err = sock_error(sk))"];
"1000179" [label="(Identifier,MSG_WAITALL)"];
"1000215" [label="(Call,&wait)"];
"1000175" -> "1000173"  [label="AST: "];
"1000175" -> "1000180"  [label="CFG: "];
"1000176" -> "1000175"  [label="AST: "];
"1000177" -> "1000175"  [label="AST: "];
"1000180" -> "1000175"  [label="AST: "];
"1000173" -> "1000175"  [label="CFG: "];
"1000175" -> "1000392"  [label="DDG: size"];
"1000175" -> "1000392"  [label="DDG: flags & MSG_WAITALL"];
"1000175" -> "1000173"  [label="DDG: sk"];
"1000175" -> "1000173"  [label="DDG: flags & MSG_WAITALL"];
"1000175" -> "1000173"  [label="DDG: size"];
"1000145" -> "1000175"  [label="DDG: sk"];
"1000177" -> "1000175"  [label="DDG: flags"];
"1000177" -> "1000175"  [label="DDG: MSG_WAITALL"];
"1000110" -> "1000175"  [label="DDG: size"];
"1000175" -> "1000183"  [label="DDG: sk"];
"1000175" -> "1000312"  [label="DDG: size"];
"1000145" -> "1000143"  [label="AST: "];
"1000145" -> "1000146"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000143" -> "1000145"  [label="CFG: "];
"1000145" -> "1000392"  [label="DDG: sk"];
"1000145" -> "1000142"  [label="DDG: sk"];
"1000145" -> "1000143"  [label="DDG: sk"];
"1000122" -> "1000145"  [label="DDG: sk"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000120"  [label="DDG: sk"];
"1000114" -> "1000122"  [label="DDG: sk"];
"1000114" -> "1000112"  [label="AST: "];
"1000114" -> "1000116"  [label="CFG: "];
"1000115" -> "1000114"  [label="AST: "];
"1000116" -> "1000114"  [label="AST: "];
"1000121" -> "1000114"  [label="CFG: "];
"1000114" -> "1000392"  [label="DDG: sock->sk"];
"1000177" -> "1000179"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000179" -> "1000177"  [label="AST: "];
"1000180" -> "1000177"  [label="CFG: "];
"1000177" -> "1000392"  [label="DDG: flags"];
"1000177" -> "1000392"  [label="DDG: MSG_WAITALL"];
"1000164" -> "1000177"  [label="DDG: flags"];
"1000111" -> "1000177"  [label="DDG: flags"];
"1000177" -> "1000317"  [label="DDG: flags"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000165" -> "1000164"  [label="AST: "];
"1000166" -> "1000164"  [label="AST: "];
"1000169" -> "1000164"  [label="CFG: "];
"1000171" -> "1000164"  [label="CFG: "];
"1000164" -> "1000392"  [label="DDG: flags & MSG_OOB"];
"1000164" -> "1000392"  [label="DDG: MSG_OOB"];
"1000164" -> "1000392"  [label="DDG: flags"];
"1000127" -> "1000164"  [label="DDG: flags"];
"1000111" -> "1000164"  [label="DDG: flags"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000129"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000129" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000392"  [label="DDG: MSG_DONTWAIT"];
"1000127" -> "1000392"  [label="DDG: flags"];
"1000127" -> "1000125"  [label="DDG: flags"];
"1000127" -> "1000125"  [label="DDG: MSG_DONTWAIT"];
"1000111" -> "1000127"  [label="DDG: flags"];
"1000111" -> "1000106"  [label="AST: "];
"1000111" -> "1000392"  [label="DDG: flags"];
"1000111" -> "1000317"  [label="DDG: flags"];
"1000110" -> "1000106"  [label="AST: "];
"1000110" -> "1000392"  [label="DDG: size"];
"1000110" -> "1000312"  [label="DDG: size"];
"1000173" -> "1000112"  [label="AST: "];
"1000174" -> "1000173"  [label="AST: "];
"1000182" -> "1000173"  [label="CFG: "];
"1000173" -> "1000392"  [label="DDG: target"];
"1000173" -> "1000392"  [label="DDG: sock_rcvlowat(sk, flags & MSG_WAITALL, size)"];
"1000173" -> "1000208"  [label="DDG: target"];
"1000208" -> "1000207"  [label="AST: "];
"1000208" -> "1000210"  [label="CFG: "];
"1000209" -> "1000208"  [label="AST: "];
"1000210" -> "1000208"  [label="AST: "];
"1000211" -> "1000208"  [label="CFG: "];
"1000214" -> "1000208"  [label="CFG: "];
"1000208" -> "1000392"  [label="DDG: copied"];
"1000208" -> "1000392"  [label="DDG: target"];
"1000208" -> "1000392"  [label="DDG: copied >= target"];
"1000309" -> "1000208"  [label="DDG: copied"];
"1000131" -> "1000208"  [label="DDG: copied"];
"1000208" -> "1000301"  [label="DDG: copied"];
"1000208" -> "1000309"  [label="DDG: copied"];
"1000208" -> "1000390"  [label="DDG: copied"];
"1000301" -> "1000300"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000305" -> "1000301"  [label="CFG: "];
"1000308" -> "1000301"  [label="CFG: "];
"1000301" -> "1000392"  [label="DDG: copied == 0"];
"1000301" -> "1000392"  [label="DDG: copied"];
"1000309" -> "1000301"  [label="DDG: copied"];
"1000131" -> "1000301"  [label="DDG: copied"];
"1000301" -> "1000390"  [label="DDG: copied"];
"1000390" -> "1000112"  [label="AST: "];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000392" -> "1000390"  [label="CFG: "];
"1000390" -> "1000392"  [label="DDG: <RET>"];
"1000391" -> "1000390"  [label="DDG: copied"];
"1000309" -> "1000390"  [label="DDG: copied"];
"1000304" -> "1000390"  [label="DDG: copied"];
"1000309" -> "1000187"  [label="AST: "];
"1000309" -> "1000311"  [label="CFG: "];
"1000310" -> "1000309"  [label="AST: "];
"1000311" -> "1000309"  [label="AST: "];
"1000313" -> "1000309"  [label="CFG: "];
"1000309" -> "1000392"  [label="DDG: copied"];
"1000285" -> "1000309"  [label="DDG: chunk"];
"1000131" -> "1000309"  [label="DDG: copied"];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000185"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000392"  [label="DDG: noblock"];
"1000183" -> "1000392"  [label="DDG: sk"];
"1000183" -> "1000181"  [label="DDG: sk"];
"1000183" -> "1000181"  [label="DDG: noblock"];
"1000125" -> "1000183"  [label="DDG: noblock"];
"1000183" -> "1000213"  [label="DDG: sk"];
"1000181" -> "1000112"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000191" -> "1000181"  [label="CFG: "];
"1000181" -> "1000392"  [label="DDG: timeo"];
"1000181" -> "1000392"  [label="DDG: sock_rcvtimeo(sk, noblock)"];
"1000181" -> "1000244"  [label="DDG: timeo"];
"1000244" -> "1000242"  [label="AST: "];
"1000244" -> "1000245"  [label="CFG: "];
"1000245" -> "1000244"  [label="AST: "];
"1000242" -> "1000244"  [label="CFG: "];
"1000244" -> "1000392"  [label="DDG: timeo"];
"1000244" -> "1000242"  [label="DDG: timeo"];
"1000242" -> "1000239"  [label="AST: "];
"1000243" -> "1000242"  [label="AST: "];
"1000269" -> "1000242"  [label="CFG: "];
"1000242" -> "1000392"  [label="DDG: sock_intr_errno(timeo)"];
"1000242" -> "1000392"  [label="DDG: err"];
"1000242" -> "1000274"  [label="DDG: err"];
"1000274" -> "1000272"  [label="AST: "];
"1000274" -> "1000275"  [label="CFG: "];
"1000275" -> "1000274"  [label="AST: "];
"1000392" -> "1000274"  [label="CFG: "];
"1000274" -> "1000392"  [label="DDG: <RET>"];
"1000275" -> "1000274"  [label="DDG: err"];
"1000234" -> "1000274"  [label="DDG: err"];
"1000218" -> "1000274"  [label="DDG: err"];
"1000253" -> "1000274"  [label="DDG: err"];
"1000213" -> "1000212"  [label="AST: "];
"1000213" -> "1000214"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000216" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="DDG: sk"];
"1000268" -> "1000213"  [label="DDG: sk"];
"1000213" -> "1000220"  [label="DDG: sk"];
"1000212" -> "1000201"  [label="AST: "];
"1000212" -> "1000217"  [label="CFG: "];
"1000215" -> "1000212"  [label="AST: "];
"1000217" -> "1000212"  [label="AST: "];
"1000219" -> "1000212"  [label="CFG: "];
"1000212" -> "1000392"  [label="DDG: prepare_to_wait_exclusive(sk_sleep(sk), &wait, TASK_INTERRUPTIBLE)"];
"1000212" -> "1000392"  [label="DDG: TASK_INTERRUPTIBLE"];
"1000267" -> "1000212"  [label="DDG: &wait"];
"1000212" -> "1000267"  [label="DDG: &wait"];
"1000267" -> "1000201"  [label="AST: "];
"1000267" -> "1000270"  [label="CFG: "];
"1000268" -> "1000267"  [label="AST: "];
"1000270" -> "1000267"  [label="AST: "];
"1000273" -> "1000267"  [label="CFG: "];
"1000267" -> "1000392"  [label="DDG: finish_wait(sk_sleep(sk), &wait)"];
"1000267" -> "1000392"  [label="DDG: sk_sleep(sk)"];
"1000267" -> "1000392"  [label="DDG: &wait"];
"1000268" -> "1000267"  [label="DDG: sk"];
"1000220" -> "1000218"  [label="AST: "];
"1000220" -> "1000221"  [label="CFG: "];
"1000221" -> "1000220"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000220" -> "1000218"  [label="DDG: sk"];
"1000220" -> "1000268"  [label="DDG: sk"];
"1000218" -> "1000201"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000223" -> "1000218"  [label="CFG: "];
"1000218" -> "1000392"  [label="DDG: err"];
"1000218" -> "1000392"  [label="DDG: sock_error(sk)"];
"1000268" -> "1000269"  [label="CFG: "];
"1000269" -> "1000268"  [label="AST: "];
"1000271" -> "1000268"  [label="CFG: "];
"1000268" -> "1000392"  [label="DDG: sk"];
"1000312" -> "1000187"  [label="AST: "];
"1000312" -> "1000314"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000318" -> "1000312"  [label="CFG: "];
"1000312" -> "1000392"  [label="DDG: size"];
"1000312" -> "1000392"  [label="DDG: chunk"];
"1000285" -> "1000312"  [label="DDG: chunk"];
}
