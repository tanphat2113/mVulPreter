digraph "0_Chrome_73edae623529f04c668268de49d00324b96166a2_7@API" {
"1000135" [label="(Call,createFragmentForInnerOuterHTML(html, parent.get(), ec))"];
"1000101" [label="(MethodParameterIn,const String& html)"];
"1000102" [label="(MethodParameterIn,ExceptionCode& ec)"];
"1000133" [label="(Call,fragment = createFragmentForInnerOuterHTML(html, parent.get(), ec))"];
"1000142" [label="(Call,parent->replaceChild(fragment.release(), this, ec))"];
"1000155" [label="(Call,!ec)"];
"1000154" [label="(Call,!ec && node && node->isTextNode())"];
"1000160" [label="(Call,mergeWithNextTextNode(node.release(), ec))"];
"1000165" [label="(Call,!ec)"];
"1000164" [label="(Call,!ec && prev && prev->isTextNode())"];
"1000170" [label="(Call,mergeWithNextTextNode(prev.release(), ec))"];
"1000137" [label="(Call,parent.get())"];
"1000170" [label="(Call,mergeWithNextTextNode(prev.release(), ec))"];
"1000166" [label="(Identifier,ec)"];
"1000158" [label="(Identifier,node)"];
"1000162" [label="(Identifier,ec)"];
"1000142" [label="(Call,parent->replaceChild(fragment.release(), this, ec))"];
"1000153" [label="(ControlStructure,if (!ec && node && node->isTextNode()))"];
"1000163" [label="(ControlStructure,if (!ec && prev && prev->isTextNode()))"];
"1000172" [label="(Identifier,ec)"];
"1000101" [label="(MethodParameterIn,const String& html)"];
"1000133" [label="(Call,fragment = createFragmentForInnerOuterHTML(html, parent.get(), ec))"];
"1000160" [label="(Call,mergeWithNextTextNode(node.release(), ec))"];
"1000164" [label="(Call,!ec && prev && prev->isTextNode())"];
"1000102" [label="(MethodParameterIn,ExceptionCode& ec)"];
"1000154" [label="(Call,!ec && node && node->isTextNode())"];
"1000161" [label="(Call,node.release())"];
"1000155" [label="(Call,!ec)"];
"1000115" [label="(Call,ec = NO_MODIFICATION_ALLOWED_ERR)"];
"1000157" [label="(Call,node && node->isTextNode())"];
"1000140" [label="(Identifier,ec)"];
"1000165" [label="(Call,!ec)"];
"1000145" [label="(Identifier,ec)"];
"1000136" [label="(Identifier,html)"];
"1000134" [label="(Identifier,fragment)"];
"1000156" [label="(Identifier,ec)"];
"1000143" [label="(Call,fragment.release())"];
"1000103" [label="(Block,)"];
"1000144" [label="(Identifier,this)"];
"1000135" [label="(Call,createFragmentForInnerOuterHTML(html, parent.get(), ec))"];
"1000167" [label="(Call,prev && prev->isTextNode())"];
"1000171" [label="(Call,prev.release())"];
"1000168" [label="(Identifier,prev)"];
"1000173" [label="(MethodReturn,void)"];
"1000138" [label="(Identifier,ec)"];
"1000148" [label="(Identifier,node)"];
"1000135" -> "1000133"  [label="AST: "];
"1000135" -> "1000138"  [label="CFG: "];
"1000136" -> "1000135"  [label="AST: "];
"1000137" -> "1000135"  [label="AST: "];
"1000138" -> "1000135"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000135" -> "1000173"  [label="DDG: ec"];
"1000135" -> "1000173"  [label="DDG: html"];
"1000135" -> "1000173"  [label="DDG: parent.get()"];
"1000135" -> "1000133"  [label="DDG: html"];
"1000135" -> "1000133"  [label="DDG: parent.get()"];
"1000135" -> "1000133"  [label="DDG: ec"];
"1000101" -> "1000135"  [label="DDG: html"];
"1000102" -> "1000135"  [label="DDG: ec"];
"1000135" -> "1000142"  [label="DDG: ec"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000173"  [label="DDG: html"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000173"  [label="DDG: ec"];
"1000102" -> "1000115"  [label="DDG: ec"];
"1000102" -> "1000142"  [label="DDG: ec"];
"1000102" -> "1000155"  [label="DDG: ec"];
"1000102" -> "1000160"  [label="DDG: ec"];
"1000102" -> "1000165"  [label="DDG: ec"];
"1000102" -> "1000170"  [label="DDG: ec"];
"1000133" -> "1000103"  [label="AST: "];
"1000134" -> "1000133"  [label="AST: "];
"1000140" -> "1000133"  [label="CFG: "];
"1000133" -> "1000173"  [label="DDG: fragment"];
"1000133" -> "1000173"  [label="DDG: createFragmentForInnerOuterHTML(html, parent.get(), ec)"];
"1000142" -> "1000103"  [label="AST: "];
"1000142" -> "1000145"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000145" -> "1000142"  [label="AST: "];
"1000148" -> "1000142"  [label="CFG: "];
"1000142" -> "1000173"  [label="DDG: parent->replaceChild(fragment.release(), this, ec)"];
"1000142" -> "1000173"  [label="DDG: this"];
"1000142" -> "1000173"  [label="DDG: fragment.release()"];
"1000142" -> "1000155"  [label="DDG: ec"];
"1000155" -> "1000154"  [label="AST: "];
"1000155" -> "1000156"  [label="CFG: "];
"1000156" -> "1000155"  [label="AST: "];
"1000158" -> "1000155"  [label="CFG: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="DDG: ec"];
"1000155" -> "1000160"  [label="DDG: ec"];
"1000155" -> "1000165"  [label="DDG: ec"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000157"  [label="CFG: "];
"1000157" -> "1000154"  [label="AST: "];
"1000161" -> "1000154"  [label="CFG: "];
"1000166" -> "1000154"  [label="CFG: "];
"1000154" -> "1000173"  [label="DDG: node && node->isTextNode()"];
"1000154" -> "1000173"  [label="DDG: !ec && node && node->isTextNode()"];
"1000157" -> "1000154"  [label="DDG: node"];
"1000157" -> "1000154"  [label="DDG: node->isTextNode()"];
"1000160" -> "1000153"  [label="AST: "];
"1000160" -> "1000162"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000162" -> "1000160"  [label="AST: "];
"1000166" -> "1000160"  [label="CFG: "];
"1000160" -> "1000173"  [label="DDG: mergeWithNextTextNode(node.release(), ec)"];
"1000160" -> "1000173"  [label="DDG: node.release()"];
"1000160" -> "1000165"  [label="DDG: ec"];
"1000165" -> "1000164"  [label="AST: "];
"1000165" -> "1000166"  [label="CFG: "];
"1000166" -> "1000165"  [label="AST: "];
"1000168" -> "1000165"  [label="CFG: "];
"1000164" -> "1000165"  [label="CFG: "];
"1000165" -> "1000173"  [label="DDG: ec"];
"1000165" -> "1000164"  [label="DDG: ec"];
"1000165" -> "1000170"  [label="DDG: ec"];
"1000164" -> "1000163"  [label="AST: "];
"1000164" -> "1000167"  [label="CFG: "];
"1000167" -> "1000164"  [label="AST: "];
"1000171" -> "1000164"  [label="CFG: "];
"1000173" -> "1000164"  [label="CFG: "];
"1000164" -> "1000173"  [label="DDG: !ec && prev && prev->isTextNode()"];
"1000164" -> "1000173"  [label="DDG: prev && prev->isTextNode()"];
"1000164" -> "1000173"  [label="DDG: !ec"];
"1000167" -> "1000164"  [label="DDG: prev"];
"1000167" -> "1000164"  [label="DDG: prev->isTextNode()"];
"1000170" -> "1000163"  [label="AST: "];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000173" -> "1000170"  [label="CFG: "];
"1000170" -> "1000173"  [label="DDG: ec"];
"1000170" -> "1000173"  [label="DDG: prev.release()"];
"1000170" -> "1000173"  [label="DDG: mergeWithNextTextNode(prev.release(), ec)"];
}
