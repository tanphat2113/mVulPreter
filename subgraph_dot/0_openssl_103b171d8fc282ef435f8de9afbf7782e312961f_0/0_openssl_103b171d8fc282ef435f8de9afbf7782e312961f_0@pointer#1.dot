digraph "0_openssl_103b171d8fc282ef435f8de9afbf7782e312961f_0@pointer" {
"1000238" [label="(Call,rr->type= *(p++))"];
"1000433" [label="(Call,rr->type == SSL3_RT_HANDSHAKE)"];
"1000432" [label="(Call,rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000426" [label="(Call,s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000425" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO))"];
"1000424" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap))"];
"1000485" [label="(Call,!s->d1->listen)"];
"1000478" [label="(Call,(SSL_in_init(s) || s->in_handshake) && !s->d1->listen)"];
"1000423" [label="(ControlStructure,if (!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap)))"];
"1000246" [label="(Identifier,ssl_major)"];
"1000486" [label="(Call,s->d1->listen)"];
"1000470" [label="(Identifier,rr)"];
"1000478" [label="(Call,(SSL_in_init(s) || s->in_handshake) && !s->d1->listen)"];
"1000433" [label="(Call,rr->type == SSL3_RT_HANDSHAKE)"];
"1000424" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap))"];
"1000425" [label="(Call,!(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO))"];
"1000437" [label="(Identifier,SSL3_RT_HANDSHAKE)"];
"1000458" [label="(Identifier,rr)"];
"1000514" [label="(Identifier,rr)"];
"1000242" [label="(Call,*(p++))"];
"1000181" [label="(Block,)"];
"1000239" [label="(Call,rr->type)"];
"1000426" [label="(Call,s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000427" [label="(Call,s->d1->listen)"];
"1000477" [label="(ControlStructure,if ((SSL_in_init(s) || s->in_handshake) && !s->d1->listen))"];
"1000432" [label="(Call,rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000485" [label="(Call,!s->d1->listen)"];
"1000238" [label="(Call,rr->type= *(p++))"];
"1000544" [label="(MethodReturn,int)"];
"1000453" [label="(Identifier,s)"];
"1000438" [label="(Call,s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000479" [label="(Call,SSL_in_init(s) || s->in_handshake)"];
"1000495" [label="(Identifier,s)"];
"1000434" [label="(Call,rr->type)"];
"1000441" [label="(Identifier,s)"];
"1000451" [label="(Call,!dtls1_record_replay_check(s, bitmap))"];
"1000238" -> "1000181"  [label="AST: "];
"1000238" -> "1000242"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000242" -> "1000238"  [label="AST: "];
"1000246" -> "1000238"  [label="CFG: "];
"1000238" -> "1000544"  [label="DDG: rr->type"];
"1000238" -> "1000433"  [label="DDG: rr->type"];
"1000433" -> "1000432"  [label="AST: "];
"1000433" -> "1000437"  [label="CFG: "];
"1000434" -> "1000433"  [label="AST: "];
"1000437" -> "1000433"  [label="AST: "];
"1000441" -> "1000433"  [label="CFG: "];
"1000432" -> "1000433"  [label="CFG: "];
"1000433" -> "1000544"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000433" -> "1000544"  [label="DDG: rr->type"];
"1000433" -> "1000432"  [label="DDG: rr->type"];
"1000433" -> "1000432"  [label="DDG: SSL3_RT_HANDSHAKE"];
"1000432" -> "1000426"  [label="AST: "];
"1000432" -> "1000438"  [label="CFG: "];
"1000438" -> "1000432"  [label="AST: "];
"1000426" -> "1000432"  [label="CFG: "];
"1000432" -> "1000544"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000432" -> "1000544"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE"];
"1000432" -> "1000426"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE"];
"1000432" -> "1000426"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000438" -> "1000432"  [label="DDG: s->packet_length > DTLS1_RT_HEADER_LENGTH"];
"1000438" -> "1000432"  [label="DDG: s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000426" -> "1000425"  [label="AST: "];
"1000426" -> "1000427"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000425" -> "1000426"  [label="CFG: "];
"1000426" -> "1000544"  [label="DDG: s->d1->listen"];
"1000426" -> "1000544"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000426" -> "1000425"  [label="DDG: s->d1->listen"];
"1000426" -> "1000425"  [label="DDG: rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000485" -> "1000426"  [label="DDG: s->d1->listen"];
"1000426" -> "1000485"  [label="DDG: s->d1->listen"];
"1000425" -> "1000424"  [label="AST: "];
"1000453" -> "1000425"  [label="CFG: "];
"1000424" -> "1000425"  [label="CFG: "];
"1000425" -> "1000544"  [label="DDG: s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000425" -> "1000424"  [label="DDG: s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO"];
"1000424" -> "1000423"  [label="AST: "];
"1000424" -> "1000451"  [label="CFG: "];
"1000451" -> "1000424"  [label="AST: "];
"1000458" -> "1000424"  [label="CFG: "];
"1000470" -> "1000424"  [label="CFG: "];
"1000424" -> "1000544"  [label="DDG: !(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO)"];
"1000424" -> "1000544"  [label="DDG: !(s->d1->listen && rr->type == SSL3_RT_HANDSHAKE &&\n\t\t    s->packet_length > DTLS1_RT_HEADER_LENGTH &&\n\t\t    s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&\n\t\t    !dtls1_record_replay_check(s, bitmap)"];
"1000424" -> "1000544"  [label="DDG: !dtls1_record_replay_check(s, bitmap)"];
"1000451" -> "1000424"  [label="DDG: dtls1_record_replay_check(s, bitmap)"];
"1000485" -> "1000478"  [label="AST: "];
"1000485" -> "1000486"  [label="CFG: "];
"1000486" -> "1000485"  [label="AST: "];
"1000478" -> "1000485"  [label="CFG: "];
"1000485" -> "1000544"  [label="DDG: s->d1->listen"];
"1000485" -> "1000478"  [label="DDG: s->d1->listen"];
"1000478" -> "1000477"  [label="AST: "];
"1000478" -> "1000479"  [label="CFG: "];
"1000479" -> "1000478"  [label="AST: "];
"1000495" -> "1000478"  [label="CFG: "];
"1000514" -> "1000478"  [label="CFG: "];
"1000478" -> "1000544"  [label="DDG: SSL_in_init(s) || s->in_handshake"];
"1000478" -> "1000544"  [label="DDG: (SSL_in_init(s) || s->in_handshake) && !s->d1->listen"];
"1000478" -> "1000544"  [label="DDG: !s->d1->listen"];
"1000479" -> "1000478"  [label="DDG: SSL_in_init(s)"];
"1000479" -> "1000478"  [label="DDG: s->in_handshake"];
}
