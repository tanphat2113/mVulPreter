digraph "0_Chrome_697cd7e2ce2535696f1b9e5cfb474cc36a734747@pointer" {
"1001060" [label="(Call,*error = ExtensionErrorUtils::FormatErrorMessage(\n            errors::kInvalidContentScript, base::IntToString(i)))"];
"1001063" [label="(Call,ExtensionErrorUtils::FormatErrorMessage(\n            errors::kInvalidContentScript, base::IntToString(i)))"];
"1001065" [label="(Call,base::IntToString(i))"];
"1001055" [label="(Call,list_value->GetDictionary(i, &content_script))"];
"1001043" [label="(Call,i < list_value->GetSize())"];
"1001040" [label="(Call,i = 0)"];
"1001046" [label="(Call,++i)"];
"1001072" [label="(Call,LoadUserScriptHelper(content_script, i, flags, error, &script))"];
"1001050" [label="(Call,* content_script = NULL)"];
"1000153" [label="(Call,flags & REQUIRE_KEY)"];
"1000116" [label="(Call,flags & STRICT_ERROR_CHECKS)"];
"1000109" [label="(MethodParameterIn,int flags)"];
"1000110" [label="(MethodParameterIn,std::string* error)"];
"1001047" [label="(Identifier,i)"];
"1000116" [label="(Call,flags & STRICT_ERROR_CHECKS)"];
"1001054" [label="(Call,!list_value->GetDictionary(i, &content_script))"];
"1001072" [label="(Call,LoadUserScriptHelper(content_script, i, flags, error, &script))"];
"1001064" [label="(Identifier,errors::kInvalidContentScript)"];
"1001235" [label="(Call,LoadFileBrowserHandlers(file_browser_handlers_value, error))"];
"1001073" [label="(Identifier,content_script)"];
"1001075" [label="(Identifier,flags)"];
"1001246" [label="(Call,LoadIsApp(manifest_value_.get(), error))"];
"1001071" [label="(Call,!LoadUserScriptHelper(content_script, i, flags, error, &script))"];
"1000118" [label="(Identifier,STRICT_ERROR_CHECKS)"];
"1001041" [label="(Identifier,i)"];
"1001063" [label="(Call,ExtensionErrorUtils::FormatErrorMessage(\n            errors::kInvalidContentScript, base::IntToString(i)))"];
"1001205" [label="(Call,LoadExtensionActionHelper(browser_action_value, error))"];
"1001065" [label="(Call,base::IntToString(i))"];
"1001059" [label="(Block,)"];
"1000159" [label="(Identifier,error)"];
"1001094" [label="(Identifier,page_action_value)"];
"1001061" [label="(Call,*error)"];
"1001042" [label="(Literal,0)"];
"1001276" [label="(Call,LoadAppIsolation(manifest_value_.get(), error))"];
"1001272" [label="(Call,LoadLaunchContainer(manifest_value_.get(), error))"];
"1001060" [label="(Call,*error = ExtensionErrorUtils::FormatErrorMessage(\n            errors::kInvalidContentScript, base::IntToString(i)))"];
"1001055" [label="(Call,list_value->GetDictionary(i, &content_script))"];
"1001044" [label="(Identifier,i)"];
"1000110" [label="(MethodParameterIn,std::string* error)"];
"1001038" [label="(ControlStructure,for (size_t i = 0; i < list_value->GetSize(); ++i))"];
"1000119" [label="(Identifier,URLPattern::PARSE_STRICT)"];
"1001077" [label="(Call,&script)"];
"1001048" [label="(Block,)"];
"1001251" [label="(Call,LoadExtent(manifest_value_.get(), keys::kWebURLs,\n                  &extent_,\n                  errors::kInvalidWebURLs, errors::kInvalidWebURL,\n                  parse_strictness, error))"];
"1000166" [label="(Identifier,id_)"];
"1001051" [label="(Identifier,content_script)"];
"1001040" [label="(Call,i = 0)"];
"1001076" [label="(Identifier,error)"];
"1001046" [label="(Call,++i)"];
"1001045" [label="(Call,list_value->GetSize())"];
"1001175" [label="(Call,LoadExtensionActionHelper(page_action_value, error))"];
"1000117" [label="(Identifier,flags)"];
"1000154" [label="(Identifier,flags)"];
"1000109" [label="(MethodParameterIn,int flags)"];
"1001056" [label="(Identifier,i)"];
"1000152" [label="(ControlStructure,if (flags & REQUIRE_KEY))"];
"1001262" [label="(Call,EnsureNotHybridApp(manifest_value_.get(), error))"];
"1002005" [label="(MethodReturn,bool)"];
"1001068" [label="(Identifier,false)"];
"1000153" [label="(Call,flags & REQUIRE_KEY)"];
"1000115" [label="(Call,flags & STRICT_ERROR_CHECKS ? URLPattern::PARSE_STRICT\n                                   : URLPattern::PARSE_LENIENT)"];
"1001057" [label="(Call,&content_script)"];
"1001043" [label="(Call,i < list_value->GetSize())"];
"1001788" [label="(Call,LoadExtensionSidebarDefaults(sidebar_value, error))"];
"1001066" [label="(Identifier,i)"];
"1001052" [label="(Identifier,NULL)"];
"1001267" [label="(Call,LoadLaunchURL(manifest_value_.get(), error))"];
"1001074" [label="(Identifier,i)"];
"1001050" [label="(Call,* content_script = NULL)"];
"1000155" [label="(Identifier,REQUIRE_KEY)"];
"1000120" [label="(Identifier,URLPattern::PARSE_LENIENT)"];
"1001060" -> "1001059"  [label="AST: "];
"1001060" -> "1001063"  [label="CFG: "];
"1001061" -> "1001060"  [label="AST: "];
"1001063" -> "1001060"  [label="AST: "];
"1001068" -> "1001060"  [label="CFG: "];
"1001060" -> "1002005"  [label="DDG: *error"];
"1001060" -> "1002005"  [label="DDG: ExtensionErrorUtils::FormatErrorMessage(\n            errors::kInvalidContentScript, base::IntToString(i))"];
"1001063" -> "1001060"  [label="DDG: errors::kInvalidContentScript"];
"1001063" -> "1001060"  [label="DDG: base::IntToString(i)"];
"1001063" -> "1001065"  [label="CFG: "];
"1001064" -> "1001063"  [label="AST: "];
"1001065" -> "1001063"  [label="AST: "];
"1001063" -> "1002005"  [label="DDG: errors::kInvalidContentScript"];
"1001063" -> "1002005"  [label="DDG: base::IntToString(i)"];
"1001065" -> "1001063"  [label="DDG: i"];
"1001065" -> "1001066"  [label="CFG: "];
"1001066" -> "1001065"  [label="AST: "];
"1001065" -> "1002005"  [label="DDG: i"];
"1001055" -> "1001065"  [label="DDG: i"];
"1001055" -> "1001054"  [label="AST: "];
"1001055" -> "1001057"  [label="CFG: "];
"1001056" -> "1001055"  [label="AST: "];
"1001057" -> "1001055"  [label="AST: "];
"1001054" -> "1001055"  [label="CFG: "];
"1001055" -> "1002005"  [label="DDG: &content_script"];
"1001055" -> "1001054"  [label="DDG: i"];
"1001055" -> "1001054"  [label="DDG: &content_script"];
"1001043" -> "1001055"  [label="DDG: i"];
"1001055" -> "1001072"  [label="DDG: i"];
"1001043" -> "1001038"  [label="AST: "];
"1001043" -> "1001045"  [label="CFG: "];
"1001044" -> "1001043"  [label="AST: "];
"1001045" -> "1001043"  [label="AST: "];
"1001051" -> "1001043"  [label="CFG: "];
"1001094" -> "1001043"  [label="CFG: "];
"1001043" -> "1002005"  [label="DDG: list_value->GetSize()"];
"1001043" -> "1002005"  [label="DDG: i"];
"1001043" -> "1002005"  [label="DDG: i < list_value->GetSize()"];
"1001040" -> "1001043"  [label="DDG: i"];
"1001046" -> "1001043"  [label="DDG: i"];
"1001040" -> "1001038"  [label="AST: "];
"1001040" -> "1001042"  [label="CFG: "];
"1001041" -> "1001040"  [label="AST: "];
"1001042" -> "1001040"  [label="AST: "];
"1001044" -> "1001040"  [label="CFG: "];
"1001046" -> "1001038"  [label="AST: "];
"1001046" -> "1001047"  [label="CFG: "];
"1001047" -> "1001046"  [label="AST: "];
"1001044" -> "1001046"  [label="CFG: "];
"1001072" -> "1001046"  [label="DDG: i"];
"1001072" -> "1001071"  [label="AST: "];
"1001072" -> "1001077"  [label="CFG: "];
"1001073" -> "1001072"  [label="AST: "];
"1001074" -> "1001072"  [label="AST: "];
"1001075" -> "1001072"  [label="AST: "];
"1001076" -> "1001072"  [label="AST: "];
"1001077" -> "1001072"  [label="AST: "];
"1001071" -> "1001072"  [label="CFG: "];
"1001072" -> "1002005"  [label="DDG: flags"];
"1001072" -> "1002005"  [label="DDG: i"];
"1001072" -> "1002005"  [label="DDG: content_script"];
"1001072" -> "1002005"  [label="DDG: &script"];
"1001072" -> "1002005"  [label="DDG: error"];
"1001072" -> "1001071"  [label="DDG: flags"];
"1001072" -> "1001071"  [label="DDG: &script"];
"1001072" -> "1001071"  [label="DDG: content_script"];
"1001072" -> "1001071"  [label="DDG: i"];
"1001072" -> "1001071"  [label="DDG: error"];
"1001050" -> "1001072"  [label="DDG: content_script"];
"1000153" -> "1001072"  [label="DDG: flags"];
"1000116" -> "1001072"  [label="DDG: flags"];
"1000109" -> "1001072"  [label="DDG: flags"];
"1000110" -> "1001072"  [label="DDG: error"];
"1001072" -> "1001175"  [label="DDG: error"];
"1001072" -> "1001205"  [label="DDG: error"];
"1001072" -> "1001235"  [label="DDG: error"];
"1001072" -> "1001246"  [label="DDG: error"];
"1001050" -> "1001048"  [label="AST: "];
"1001050" -> "1001052"  [label="CFG: "];
"1001051" -> "1001050"  [label="AST: "];
"1001052" -> "1001050"  [label="AST: "];
"1001056" -> "1001050"  [label="CFG: "];
"1001050" -> "1002005"  [label="DDG: content_script"];
"1001050" -> "1002005"  [label="DDG: NULL"];
"1000153" -> "1000152"  [label="AST: "];
"1000153" -> "1000155"  [label="CFG: "];
"1000154" -> "1000153"  [label="AST: "];
"1000155" -> "1000153"  [label="AST: "];
"1000159" -> "1000153"  [label="CFG: "];
"1000166" -> "1000153"  [label="CFG: "];
"1000153" -> "1002005"  [label="DDG: REQUIRE_KEY"];
"1000153" -> "1002005"  [label="DDG: flags & REQUIRE_KEY"];
"1000153" -> "1002005"  [label="DDG: flags"];
"1000116" -> "1000153"  [label="DDG: flags"];
"1000109" -> "1000153"  [label="DDG: flags"];
"1000116" -> "1000115"  [label="AST: "];
"1000116" -> "1000118"  [label="CFG: "];
"1000117" -> "1000116"  [label="AST: "];
"1000118" -> "1000116"  [label="AST: "];
"1000119" -> "1000116"  [label="CFG: "];
"1000120" -> "1000116"  [label="CFG: "];
"1000116" -> "1002005"  [label="DDG: flags"];
"1000116" -> "1002005"  [label="DDG: STRICT_ERROR_CHECKS"];
"1000109" -> "1000116"  [label="DDG: flags"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1002005"  [label="DDG: flags"];
"1000110" -> "1000107"  [label="AST: "];
"1000110" -> "1002005"  [label="DDG: error"];
"1000110" -> "1001175"  [label="DDG: error"];
"1000110" -> "1001205"  [label="DDG: error"];
"1000110" -> "1001235"  [label="DDG: error"];
"1000110" -> "1001246"  [label="DDG: error"];
"1000110" -> "1001251"  [label="DDG: error"];
"1000110" -> "1001262"  [label="DDG: error"];
"1000110" -> "1001267"  [label="DDG: error"];
"1000110" -> "1001272"  [label="DDG: error"];
"1000110" -> "1001276"  [label="DDG: error"];
"1000110" -> "1001788"  [label="DDG: error"];
}
