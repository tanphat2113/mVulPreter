digraph "0_linux_57ebd808a97d7c5b1e1afb937c2db22beba3c1f8_0@pointer" {
"1000142" [label="(Call,ip = ip_hdr(skb))"];
"1000144" [label="(Call,ip_hdr(skb))"];
"1000111" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000263" [label="(Call,ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff))"];
"1000262" [label="(Call,!ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff))"];
"1000142" [label="(Call,ip = ip_hdr(skb))"];
"1000481" [label="(Call,ip_hdr(skb))"];
"1000265" [label="(Identifier,indev)"];
"1000261" [label="(ControlStructure,if (!ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff)))"];
"1000267" [label="(Call,&e->ip)"];
"1000170" [label="(Call,acpar.fragoff = ntohs(ip->frag_off) & IP_OFFSET)"];
"1000284" [label="(Identifier,acpar)"];
"1000266" [label="(Identifier,outdev)"];
"1000147" [label="(Identifier,indev)"];
"1000111" [label="(MethodParameterIn,struct sk_buff *skb)"];
"1000275" [label="(JumpTarget,no_match:)"];
"1000145" [label="(Identifier,skb)"];
"1000339" [label="(Call,trace_packet(state->net, skb, hook, state->in,\n\t\t\t\t     state->out, table->name, private, e))"];
"1000184" [label="(Call,ip_hdrlen(skb))"];
"1000470" [label="(Call,t->u.kernel.target->target(skb, &acpar))"];
"1000271" [label="(Call,acpar.fragoff)"];
"1000479" [label="(Call,ip = ip_hdr(skb))"];
"1000263" [label="(Call,ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff))"];
"1000158" [label="(Call,outdev = state->out ? state->out->name : nulldevname)"];
"1000114" [label="(Block,)"];
"1000264" [label="(Identifier,ip)"];
"1000146" [label="(Call,indev = state->in ? state->in->name : nulldevname)"];
"1000143" [label="(Identifier,ip)"];
"1000506" [label="(MethodReturn,RET)"];
"1000302" [label="(Call,acpar.match->match(skb, &acpar))"];
"1000262" [label="(Call,!ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff))"];
"1000144" [label="(Call,ip_hdr(skb))"];
"1000142" -> "1000114"  [label="AST: "];
"1000142" -> "1000144"  [label="CFG: "];
"1000143" -> "1000142"  [label="AST: "];
"1000144" -> "1000142"  [label="AST: "];
"1000147" -> "1000142"  [label="CFG: "];
"1000142" -> "1000506"  [label="DDG: ip_hdr(skb)"];
"1000144" -> "1000142"  [label="DDG: skb"];
"1000142" -> "1000263"  [label="DDG: ip"];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000111" -> "1000144"  [label="DDG: skb"];
"1000144" -> "1000184"  [label="DDG: skb"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000506"  [label="DDG: skb"];
"1000111" -> "1000184"  [label="DDG: skb"];
"1000111" -> "1000302"  [label="DDG: skb"];
"1000111" -> "1000339"  [label="DDG: skb"];
"1000111" -> "1000470"  [label="DDG: skb"];
"1000111" -> "1000481"  [label="DDG: skb"];
"1000263" -> "1000262"  [label="AST: "];
"1000263" -> "1000271"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000266" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="AST: "];
"1000271" -> "1000263"  [label="AST: "];
"1000262" -> "1000263"  [label="CFG: "];
"1000263" -> "1000506"  [label="DDG: indev"];
"1000263" -> "1000506"  [label="DDG: &e->ip"];
"1000263" -> "1000506"  [label="DDG: ip"];
"1000263" -> "1000506"  [label="DDG: outdev"];
"1000263" -> "1000506"  [label="DDG: acpar.fragoff"];
"1000263" -> "1000262"  [label="DDG: ip"];
"1000263" -> "1000262"  [label="DDG: outdev"];
"1000263" -> "1000262"  [label="DDG: indev"];
"1000263" -> "1000262"  [label="DDG: acpar.fragoff"];
"1000263" -> "1000262"  [label="DDG: &e->ip"];
"1000479" -> "1000263"  [label="DDG: ip"];
"1000146" -> "1000263"  [label="DDG: indev"];
"1000158" -> "1000263"  [label="DDG: outdev"];
"1000170" -> "1000263"  [label="DDG: acpar.fragoff"];
"1000262" -> "1000261"  [label="AST: "];
"1000275" -> "1000262"  [label="CFG: "];
"1000284" -> "1000262"  [label="CFG: "];
"1000262" -> "1000506"  [label="DDG: ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff)"];
"1000262" -> "1000506"  [label="DDG: !ip_packet_match(ip, indev, outdev,\n\t\t    &e->ip, acpar.fragoff)"];
}
