digraph "0_linux_a5598bd9c087dc0efc250a5221e5d0e6f584ee88@API" {
"1000184" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000131" [label="(Call,iucv_sk(sk))"];
"1000123" [label="(Call,*sk = sock->sk)"];
"1000176" [label="(Call,flags & (MSG_OOB))"];
"1000119" [label="(Call,flags & MSG_DONTWAIT)"];
"1000114" [label="(MethodParameterIn,int flags)"];
"1000117" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000182" [label="(Call,skb = skb_recv_datagram(sk, flags, noblock, &err))"];
"1000191" [label="(Call,!skb)"];
"1000221" [label="(Call,cskb = skb)"];
"1000225" [label="(Call,skb_copy_datagram_iovec(cskb, 0, msg->msg_iov, copied))"];
"1000255" [label="(Call,copied < rlen)"];
"1000306" [label="(Call,skb_pull(skb, copied))"];
"1000314" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000321" [label="(Call,kfree_skb(skb))"];
"1000458" [label="(Return,return copied;)"];
"1000455" [label="(Call,copied = rlen)"];
"1000238" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000275" [label="(Call,CB_TRGCLS(skb))"];
"1000270" [label="(Call,put_cmsg(msg, SOL_IUCV, SCM_IUCV_TRGCLS,\n\t\t\tCB_TRGCLS_LEN, CB_TRGCLS(skb)))"];
"1000268" [label="(Call,err = put_cmsg(msg, SOL_IUCV, SCM_IUCV_TRGCLS,\n\t\t\tCB_TRGCLS_LEN, CB_TRGCLS(skb)))"];
"1000291" [label="(Return,return err;)"];
"1000285" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000235" [label="(Call,flags & MSG_PEEK)"];
"1000234" [label="(Call,!(flags & MSG_PEEK))"];
"1000282" [label="(Call,flags & MSG_PEEK)"];
"1000281" [label="(Call,!(flags & MSG_PEEK))"];
"1000295" [label="(Call,flags & MSG_PEEK)"];
"1000294" [label="(Call,!(flags & MSG_PEEK))"];
"1000452" [label="(Call,flags & MSG_TRUNC)"];
"1000446" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000348" [label="(Call,iucv_sock_close(sk))"];
"1000371" [label="(Call,sock_queue_rcv_skb(sk, rskb))"];
"1000375" [label="(Call,skb_queue_head(&iucv->backlog_skb_q,\n\t\t\t\t\t\trskb))"];
"1000392" [label="(Call,skb_queue_empty(&iucv->backlog_skb_q))"];
"1000407" [label="(Call,iucv_process_message_q(sk))"];
"1000424" [label="(Call,iucv_send_ctrl(sk, AF_IUCV_FLAG_WIN))"];
"1000422" [label="(Call,err = iucv_send_ctrl(sk, AF_IUCV_FLAG_WIN))"];
"1000435" [label="(Call,sk->sk_state_change(sk))"];
"1000404" [label="(Identifier,iucv)"];
"1000246" [label="(Identifier,EFAULT)"];
"1000175" [label="(ControlStructure,if (flags & (MSG_OOB)))"];
"1000281" [label="(Call,!(flags & MSG_PEEK))"];
"1000381" [label="(ControlStructure,break;)"];
"1000296" [label="(Identifier,flags)"];
"1000228" [label="(Call,msg->msg_iov)"];
"1000272" [label="(Identifier,SOL_IUCV)"];
"1000282" [label="(Call,flags & MSG_PEEK)"];
"1000452" [label="(Call,flags & MSG_TRUNC)"];
"1000314" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000235" [label="(Call,flags & MSG_PEEK)"];
"1000123" [label="(Call,*sk = sock->sk)"];
"1000386" [label="(Call,skb_dequeue(&iucv->backlog_skb_q))"];
"1000456" [label="(Identifier,copied)"];
"1000447" [label="(Call,sk->sk_type == SOCK_SEQPACKET)"];
"1000177" [label="(Identifier,flags)"];
"1000258" [label="(Call,msg->msg_flags |= MSG_TRUNC)"];
"1000422" [label="(Call,err = iucv_send_ctrl(sk, AF_IUCV_FLAG_WIN))"];
"1000192" [label="(Identifier,skb)"];
"1000257" [label="(Identifier,rlen)"];
"1000239" [label="(Call,&sk->sk_receive_queue)"];
"1000370" [label="(ControlStructure,if (sock_queue_rcv_skb(sk, rskb)))"];
"1000458" [label="(Return,return copied;)"];
"1000112" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000280" [label="(ControlStructure,if (!(flags & MSG_PEEK)))"];
"1000378" [label="(Identifier,iucv)"];
"1000297" [label="(Identifier,MSG_PEEK)"];
"1000276" [label="(Identifier,skb)"];
"1000345" [label="(Block,)"];
"1000241" [label="(Identifier,sk)"];
"1000236" [label="(Identifier,flags)"];
"1000393" [label="(Call,&iucv->backlog_skb_q)"];
"1000392" [label="(Call,skb_queue_empty(&iucv->backlog_skb_q))"];
"1000114" [label="(MethodParameterIn,int flags)"];
"1000181" [label="(Identifier,EOPNOTSUPP)"];
"1000121" [label="(Identifier,MSG_DONTWAIT)"];
"1000455" [label="(Call,copied = rlen)"];
"1000302" [label="(Identifier,sk)"];
"1000182" [label="(Call,skb = skb_recv_datagram(sk, flags, noblock, &err))"];
"1000385" [label="(Identifier,rskb)"];
"1000210" [label="(Call,!rlen)"];
"1000424" [label="(Call,iucv_send_ctrl(sk, AF_IUCV_FLAG_WIN))"];
"1000226" [label="(Identifier,cskb)"];
"1000320" [label="(ControlStructure,goto done;)"];
"1000391" [label="(ControlStructure,if (skb_queue_empty(&iucv->backlog_skb_q)))"];
"1000445" [label="(ControlStructure,if (sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)))"];
"1000183" [label="(Identifier,skb)"];
"1000408" [label="(Identifier,sk)"];
"1000265" [label="(Identifier,msg)"];
"1000118" [label="(Identifier,noblock)"];
"1000375" [label="(Call,skb_queue_head(&iucv->backlog_skb_q,\n\t\t\t\t\t\trskb))"];
"1000129" [label="(Call,*iucv = iucv_sk(sk))"];
"1000176" [label="(Call,flags & (MSG_OOB))"];
"1000284" [label="(Identifier,MSG_PEEK)"];
"1000233" [label="(ControlStructure,if (!(flags & MSG_PEEK)))"];
"1000275" [label="(Call,CB_TRGCLS(skb))"];
"1000185" [label="(Identifier,sk)"];
"1000222" [label="(Identifier,cskb)"];
"1000260" [label="(Identifier,msg)"];
"1000274" [label="(Identifier,CB_TRGCLS_LEN)"];
"1000298" [label="(Block,)"];
"1000376" [label="(Call,&iucv->backlog_skb_q)"];
"1000305" [label="(Block,)"];
"1000238" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000132" [label="(Identifier,sk)"];
"1000285" [label="(Call,skb_queue_head(&sk->sk_receive_queue, skb))"];
"1000295" [label="(Call,flags & MSG_PEEK)"];
"1000269" [label="(Identifier,err)"];
"1000191" [label="(Call,!skb)"];
"1000234" [label="(Call,!(flags & MSG_PEEK))"];
"1000255" [label="(Call,copied < rlen)"];
"1000256" [label="(Identifier,copied)"];
"1000188" [label="(Call,&err)"];
"1000460" [label="(MethodReturn,static int)"];
"1000279" [label="(Block,)"];
"1000250" [label="(Identifier,sk)"];
"1000459" [label="(Identifier,copied)"];
"1000352" [label="(Identifier,EFAULT)"];
"1000426" [label="(Identifier,AF_IUCV_FLAG_WIN)"];
"1000373" [label="(Identifier,rskb)"];
"1000117" [label="(Call,noblock = flags & MSG_DONTWAIT)"];
"1000119" [label="(Call,flags & MSG_DONTWAIT)"];
"1000457" [label="(Identifier,rlen)"];
"1000268" [label="(Call,err = put_cmsg(msg, SOL_IUCV, SCM_IUCV_TRGCLS,\n\t\t\tCB_TRGCLS_LEN, CB_TRGCLS(skb)))"];
"1000237" [label="(Identifier,MSG_PEEK)"];
"1000283" [label="(Identifier,flags)"];
"1000315" [label="(Call,&sk->sk_receive_queue)"];
"1000374" [label="(Block,)"];
"1000270" [label="(Call,put_cmsg(msg, SOL_IUCV, SCM_IUCV_TRGCLS,\n\t\t\tCB_TRGCLS_LEN, CB_TRGCLS(skb)))"];
"1000223" [label="(Identifier,skb)"];
"1000308" [label="(Identifier,copied)"];
"1000421" [label="(Block,)"];
"1000254" [label="(ControlStructure,if (copied < rlen))"];
"1000311" [label="(Identifier,skb)"];
"1000349" [label="(Identifier,sk)"];
"1000197" [label="(Identifier,sk)"];
"1000425" [label="(Identifier,sk)"];
"1000407" [label="(Call,iucv_process_message_q(sk))"];
"1000371" [label="(Call,sock_queue_rcv_skb(sk, rskb))"];
"1000187" [label="(Identifier,noblock)"];
"1000326" [label="(Identifier,iucv)"];
"1000414" [label="(Identifier,iucv)"];
"1000225" [label="(Call,skb_copy_datagram_iovec(cskb, 0, msg->msg_iov, copied))"];
"1000231" [label="(Identifier,copied)"];
"1000360" [label="(Call,rskb = skb_dequeue(&iucv->backlog_skb_q))"];
"1000307" [label="(Identifier,skb)"];
"1000286" [label="(Call,&sk->sk_receive_queue)"];
"1000380" [label="(Identifier,rskb)"];
"1000454" [label="(Identifier,MSG_TRUNC)"];
"1000243" [label="(Identifier,skb)"];
"1000291" [label="(Return,return err;)"];
"1000190" [label="(ControlStructure,if (!skb))"];
"1000428" [label="(Identifier,err)"];
"1000124" [label="(Identifier,sk)"];
"1000446" [label="(Call,sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC))"];
"1000372" [label="(Identifier,sk)"];
"1000384" [label="(Call,rskb = skb_dequeue(&iucv->backlog_skb_q))"];
"1000321" [label="(Call,kfree_skb(skb))"];
"1000294" [label="(Call,!(flags & MSG_PEEK))"];
"1000348" [label="(Call,iucv_sock_close(sk))"];
"1000115" [label="(Block,)"];
"1000273" [label="(Identifier,SCM_IUCV_TRGCLS)"];
"1000227" [label="(Literal,0)"];
"1000436" [label="(Identifier,sk)"];
"1000186" [label="(Identifier,flags)"];
"1000319" [label="(Identifier,skb)"];
"1000161" [label="(Call,skb_queue_empty(&sk->sk_receive_queue))"];
"1000131" [label="(Call,iucv_sk(sk))"];
"1000290" [label="(Identifier,skb)"];
"1000221" [label="(Call,cskb = skb)"];
"1000313" [label="(Block,)"];
"1000184" [label="(Call,skb_recv_datagram(sk, flags, noblock, &err))"];
"1000429" [label="(Block,)"];
"1000271" [label="(Identifier,msg)"];
"1000423" [label="(Identifier,err)"];
"1000292" [label="(Identifier,err)"];
"1000398" [label="(ControlStructure,if (!list_empty(&iucv->message_q.list)))"];
"1000178" [label="(Identifier,MSG_OOB)"];
"1000125" [label="(Call,sock->sk)"];
"1000306" [label="(Call,skb_pull(skb, copied))"];
"1000120" [label="(Identifier,flags)"];
"1000453" [label="(Identifier,flags)"];
"1000224" [label="(ControlStructure,if (skb_copy_datagram_iovec(cskb, 0, msg->msg_iov, copied)))"];
"1000288" [label="(Identifier,sk)"];
"1000322" [label="(Identifier,skb)"];
"1000278" [label="(Identifier,err)"];
"1000444" [label="(JumpTarget,done:)"];
"1000130" [label="(Identifier,iucv)"];
"1000435" [label="(Call,sk->sk_state_change(sk))"];
"1000205" [label="(Identifier,rlen)"];
"1000362" [label="(Call,skb_dequeue(&iucv->backlog_skb_q))"];
"1000293" [label="(ControlStructure,if (!(flags & MSG_PEEK)))"];
"1000441" [label="(Identifier,iucv)"];
"1000184" -> "1000182"  [label="AST: "];
"1000184" -> "1000188"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000186" -> "1000184"  [label="AST: "];
"1000187" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000182" -> "1000184"  [label="CFG: "];
"1000184" -> "1000460"  [label="DDG: &err"];
"1000184" -> "1000460"  [label="DDG: flags"];
"1000184" -> "1000460"  [label="DDG: noblock"];
"1000184" -> "1000460"  [label="DDG: sk"];
"1000184" -> "1000182"  [label="DDG: sk"];
"1000184" -> "1000182"  [label="DDG: flags"];
"1000184" -> "1000182"  [label="DDG: noblock"];
"1000184" -> "1000182"  [label="DDG: &err"];
"1000131" -> "1000184"  [label="DDG: sk"];
"1000176" -> "1000184"  [label="DDG: flags"];
"1000114" -> "1000184"  [label="DDG: flags"];
"1000117" -> "1000184"  [label="DDG: noblock"];
"1000184" -> "1000235"  [label="DDG: flags"];
"1000184" -> "1000282"  [label="DDG: flags"];
"1000184" -> "1000295"  [label="DDG: flags"];
"1000184" -> "1000348"  [label="DDG: sk"];
"1000184" -> "1000371"  [label="DDG: sk"];
"1000184" -> "1000407"  [label="DDG: sk"];
"1000184" -> "1000424"  [label="DDG: sk"];
"1000131" -> "1000129"  [label="AST: "];
"1000131" -> "1000132"  [label="CFG: "];
"1000132" -> "1000131"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000131" -> "1000460"  [label="DDG: sk"];
"1000131" -> "1000129"  [label="DDG: sk"];
"1000123" -> "1000131"  [label="DDG: sk"];
"1000123" -> "1000115"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000130" -> "1000123"  [label="CFG: "];
"1000123" -> "1000460"  [label="DDG: sock->sk"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000181" -> "1000176"  [label="CFG: "];
"1000183" -> "1000176"  [label="CFG: "];
"1000176" -> "1000460"  [label="DDG: MSG_OOB"];
"1000176" -> "1000460"  [label="DDG: flags & (MSG_OOB)"];
"1000176" -> "1000460"  [label="DDG: flags"];
"1000119" -> "1000176"  [label="DDG: flags"];
"1000114" -> "1000176"  [label="DDG: flags"];
"1000119" -> "1000117"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000119" -> "1000460"  [label="DDG: MSG_DONTWAIT"];
"1000119" -> "1000460"  [label="DDG: flags"];
"1000119" -> "1000117"  [label="DDG: flags"];
"1000119" -> "1000117"  [label="DDG: MSG_DONTWAIT"];
"1000114" -> "1000119"  [label="DDG: flags"];
"1000114" -> "1000109"  [label="AST: "];
"1000114" -> "1000460"  [label="DDG: flags"];
"1000114" -> "1000235"  [label="DDG: flags"];
"1000114" -> "1000282"  [label="DDG: flags"];
"1000114" -> "1000295"  [label="DDG: flags"];
"1000114" -> "1000452"  [label="DDG: flags"];
"1000117" -> "1000115"  [label="AST: "];
"1000118" -> "1000117"  [label="AST: "];
"1000124" -> "1000117"  [label="CFG: "];
"1000117" -> "1000460"  [label="DDG: noblock"];
"1000117" -> "1000460"  [label="DDG: flags & MSG_DONTWAIT"];
"1000182" -> "1000115"  [label="AST: "];
"1000183" -> "1000182"  [label="AST: "];
"1000192" -> "1000182"  [label="CFG: "];
"1000182" -> "1000460"  [label="DDG: skb_recv_datagram(sk, flags, noblock, &err)"];
"1000182" -> "1000191"  [label="DDG: skb"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000192"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000197" -> "1000191"  [label="CFG: "];
"1000205" -> "1000191"  [label="CFG: "];
"1000191" -> "1000460"  [label="DDG: !skb"];
"1000191" -> "1000460"  [label="DDG: skb"];
"1000191" -> "1000221"  [label="DDG: skb"];
"1000191" -> "1000238"  [label="DDG: skb"];
"1000191" -> "1000275"  [label="DDG: skb"];
"1000221" -> "1000115"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000226" -> "1000221"  [label="CFG: "];
"1000221" -> "1000460"  [label="DDG: skb"];
"1000221" -> "1000225"  [label="DDG: cskb"];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000231"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000231" -> "1000225"  [label="AST: "];
"1000236" -> "1000225"  [label="CFG: "];
"1000250" -> "1000225"  [label="CFG: "];
"1000225" -> "1000460"  [label="DDG: skb_copy_datagram_iovec(cskb, 0, msg->msg_iov, copied)"];
"1000225" -> "1000460"  [label="DDG: cskb"];
"1000225" -> "1000460"  [label="DDG: msg->msg_iov"];
"1000225" -> "1000460"  [label="DDG: copied"];
"1000225" -> "1000255"  [label="DDG: copied"];
"1000225" -> "1000306"  [label="DDG: copied"];
"1000225" -> "1000458"  [label="DDG: copied"];
"1000255" -> "1000254"  [label="AST: "];
"1000255" -> "1000257"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="AST: "];
"1000260" -> "1000255"  [label="CFG: "];
"1000265" -> "1000255"  [label="CFG: "];
"1000255" -> "1000460"  [label="DDG: copied < rlen"];
"1000255" -> "1000460"  [label="DDG: rlen"];
"1000255" -> "1000460"  [label="DDG: copied"];
"1000210" -> "1000255"  [label="DDG: rlen"];
"1000255" -> "1000306"  [label="DDG: copied"];
"1000255" -> "1000455"  [label="DDG: rlen"];
"1000255" -> "1000458"  [label="DDG: copied"];
"1000306" -> "1000305"  [label="AST: "];
"1000306" -> "1000308"  [label="CFG: "];
"1000307" -> "1000306"  [label="AST: "];
"1000308" -> "1000306"  [label="AST: "];
"1000311" -> "1000306"  [label="CFG: "];
"1000306" -> "1000460"  [label="DDG: skb_pull(skb, copied)"];
"1000306" -> "1000460"  [label="DDG: copied"];
"1000275" -> "1000306"  [label="DDG: skb"];
"1000306" -> "1000314"  [label="DDG: skb"];
"1000306" -> "1000321"  [label="DDG: skb"];
"1000306" -> "1000458"  [label="DDG: copied"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000319"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000319" -> "1000314"  [label="AST: "];
"1000320" -> "1000314"  [label="CFG: "];
"1000314" -> "1000460"  [label="DDG: &sk->sk_receive_queue"];
"1000314" -> "1000460"  [label="DDG: skb"];
"1000314" -> "1000460"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000161" -> "1000314"  [label="DDG: &sk->sk_receive_queue"];
"1000321" -> "1000298"  [label="AST: "];
"1000321" -> "1000322"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000326" -> "1000321"  [label="CFG: "];
"1000321" -> "1000460"  [label="DDG: skb"];
"1000321" -> "1000460"  [label="DDG: kfree_skb(skb)"];
"1000275" -> "1000321"  [label="DDG: skb"];
"1000458" -> "1000115"  [label="AST: "];
"1000458" -> "1000459"  [label="CFG: "];
"1000459" -> "1000458"  [label="AST: "];
"1000460" -> "1000458"  [label="CFG: "];
"1000458" -> "1000460"  [label="DDG: <RET>"];
"1000459" -> "1000458"  [label="DDG: copied"];
"1000455" -> "1000458"  [label="DDG: copied"];
"1000455" -> "1000445"  [label="AST: "];
"1000455" -> "1000457"  [label="CFG: "];
"1000456" -> "1000455"  [label="AST: "];
"1000457" -> "1000455"  [label="AST: "];
"1000459" -> "1000455"  [label="CFG: "];
"1000455" -> "1000460"  [label="DDG: rlen"];
"1000455" -> "1000460"  [label="DDG: copied"];
"1000210" -> "1000455"  [label="DDG: rlen"];
"1000238" -> "1000233"  [label="AST: "];
"1000238" -> "1000243"  [label="CFG: "];
"1000239" -> "1000238"  [label="AST: "];
"1000243" -> "1000238"  [label="AST: "];
"1000246" -> "1000238"  [label="CFG: "];
"1000238" -> "1000460"  [label="DDG: &sk->sk_receive_queue"];
"1000238" -> "1000460"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000238" -> "1000460"  [label="DDG: skb"];
"1000161" -> "1000238"  [label="DDG: &sk->sk_receive_queue"];
"1000275" -> "1000270"  [label="AST: "];
"1000275" -> "1000276"  [label="CFG: "];
"1000276" -> "1000275"  [label="AST: "];
"1000270" -> "1000275"  [label="CFG: "];
"1000275" -> "1000460"  [label="DDG: skb"];
"1000275" -> "1000270"  [label="DDG: skb"];
"1000275" -> "1000285"  [label="DDG: skb"];
"1000270" -> "1000268"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000272" -> "1000270"  [label="AST: "];
"1000273" -> "1000270"  [label="AST: "];
"1000274" -> "1000270"  [label="AST: "];
"1000268" -> "1000270"  [label="CFG: "];
"1000270" -> "1000460"  [label="DDG: CB_TRGCLS(skb)"];
"1000270" -> "1000460"  [label="DDG: CB_TRGCLS_LEN"];
"1000270" -> "1000460"  [label="DDG: SCM_IUCV_TRGCLS"];
"1000270" -> "1000460"  [label="DDG: SOL_IUCV"];
"1000270" -> "1000460"  [label="DDG: msg"];
"1000270" -> "1000268"  [label="DDG: SCM_IUCV_TRGCLS"];
"1000270" -> "1000268"  [label="DDG: CB_TRGCLS(skb)"];
"1000270" -> "1000268"  [label="DDG: msg"];
"1000270" -> "1000268"  [label="DDG: SOL_IUCV"];
"1000270" -> "1000268"  [label="DDG: CB_TRGCLS_LEN"];
"1000112" -> "1000270"  [label="DDG: msg"];
"1000268" -> "1000115"  [label="AST: "];
"1000269" -> "1000268"  [label="AST: "];
"1000278" -> "1000268"  [label="CFG: "];
"1000268" -> "1000460"  [label="DDG: err"];
"1000268" -> "1000460"  [label="DDG: put_cmsg(msg, SOL_IUCV, SCM_IUCV_TRGCLS,\n\t\t\tCB_TRGCLS_LEN, CB_TRGCLS(skb))"];
"1000268" -> "1000291"  [label="DDG: err"];
"1000291" -> "1000279"  [label="AST: "];
"1000291" -> "1000292"  [label="CFG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000460" -> "1000291"  [label="CFG: "];
"1000291" -> "1000460"  [label="DDG: <RET>"];
"1000292" -> "1000291"  [label="DDG: err"];
"1000285" -> "1000280"  [label="AST: "];
"1000285" -> "1000290"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000290" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="CFG: "];
"1000285" -> "1000460"  [label="DDG: &sk->sk_receive_queue"];
"1000285" -> "1000460"  [label="DDG: skb_queue_head(&sk->sk_receive_queue, skb)"];
"1000285" -> "1000460"  [label="DDG: skb"];
"1000161" -> "1000285"  [label="DDG: &sk->sk_receive_queue"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000237"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000460"  [label="DDG: MSG_PEEK"];
"1000235" -> "1000460"  [label="DDG: flags"];
"1000235" -> "1000234"  [label="DDG: flags"];
"1000235" -> "1000234"  [label="DDG: MSG_PEEK"];
"1000234" -> "1000233"  [label="AST: "];
"1000241" -> "1000234"  [label="CFG: "];
"1000246" -> "1000234"  [label="CFG: "];
"1000234" -> "1000460"  [label="DDG: flags & MSG_PEEK"];
"1000234" -> "1000460"  [label="DDG: !(flags & MSG_PEEK)"];
"1000282" -> "1000281"  [label="AST: "];
"1000282" -> "1000284"  [label="CFG: "];
"1000283" -> "1000282"  [label="AST: "];
"1000284" -> "1000282"  [label="AST: "];
"1000281" -> "1000282"  [label="CFG: "];
"1000282" -> "1000460"  [label="DDG: MSG_PEEK"];
"1000282" -> "1000460"  [label="DDG: flags"];
"1000282" -> "1000281"  [label="DDG: flags"];
"1000282" -> "1000281"  [label="DDG: MSG_PEEK"];
"1000281" -> "1000280"  [label="AST: "];
"1000288" -> "1000281"  [label="CFG: "];
"1000292" -> "1000281"  [label="CFG: "];
"1000281" -> "1000460"  [label="DDG: flags & MSG_PEEK"];
"1000281" -> "1000460"  [label="DDG: !(flags & MSG_PEEK)"];
"1000295" -> "1000294"  [label="AST: "];
"1000295" -> "1000297"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000294" -> "1000295"  [label="CFG: "];
"1000295" -> "1000460"  [label="DDG: flags"];
"1000295" -> "1000460"  [label="DDG: MSG_PEEK"];
"1000295" -> "1000294"  [label="DDG: flags"];
"1000295" -> "1000294"  [label="DDG: MSG_PEEK"];
"1000295" -> "1000452"  [label="DDG: flags"];
"1000294" -> "1000293"  [label="AST: "];
"1000302" -> "1000294"  [label="CFG: "];
"1000444" -> "1000294"  [label="CFG: "];
"1000294" -> "1000460"  [label="DDG: !(flags & MSG_PEEK)"];
"1000294" -> "1000460"  [label="DDG: flags & MSG_PEEK"];
"1000452" -> "1000446"  [label="AST: "];
"1000452" -> "1000454"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000454" -> "1000452"  [label="AST: "];
"1000446" -> "1000452"  [label="CFG: "];
"1000452" -> "1000460"  [label="DDG: flags"];
"1000452" -> "1000460"  [label="DDG: MSG_TRUNC"];
"1000452" -> "1000446"  [label="DDG: flags"];
"1000452" -> "1000446"  [label="DDG: MSG_TRUNC"];
"1000258" -> "1000452"  [label="DDG: MSG_TRUNC"];
"1000446" -> "1000445"  [label="AST: "];
"1000446" -> "1000447"  [label="CFG: "];
"1000447" -> "1000446"  [label="AST: "];
"1000456" -> "1000446"  [label="CFG: "];
"1000459" -> "1000446"  [label="CFG: "];
"1000446" -> "1000460"  [label="DDG: sk->sk_type == SOCK_SEQPACKET && (flags & MSG_TRUNC)"];
"1000446" -> "1000460"  [label="DDG: flags & MSG_TRUNC"];
"1000446" -> "1000460"  [label="DDG: sk->sk_type == SOCK_SEQPACKET"];
"1000447" -> "1000446"  [label="DDG: sk->sk_type"];
"1000447" -> "1000446"  [label="DDG: SOCK_SEQPACKET"];
"1000348" -> "1000345"  [label="AST: "];
"1000348" -> "1000349"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000352" -> "1000348"  [label="CFG: "];
"1000348" -> "1000460"  [label="DDG: sk"];
"1000348" -> "1000460"  [label="DDG: iucv_sock_close(sk)"];
"1000371" -> "1000370"  [label="AST: "];
"1000371" -> "1000373"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000373" -> "1000371"  [label="AST: "];
"1000378" -> "1000371"  [label="CFG: "];
"1000385" -> "1000371"  [label="CFG: "];
"1000371" -> "1000460"  [label="DDG: sk"];
"1000371" -> "1000460"  [label="DDG: sock_queue_rcv_skb(sk, rskb)"];
"1000360" -> "1000371"  [label="DDG: rskb"];
"1000384" -> "1000371"  [label="DDG: rskb"];
"1000371" -> "1000375"  [label="DDG: rskb"];
"1000371" -> "1000407"  [label="DDG: sk"];
"1000371" -> "1000424"  [label="DDG: sk"];
"1000375" -> "1000374"  [label="AST: "];
"1000375" -> "1000380"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000380" -> "1000375"  [label="AST: "];
"1000381" -> "1000375"  [label="CFG: "];
"1000375" -> "1000460"  [label="DDG: skb_queue_head(&iucv->backlog_skb_q,\n\t\t\t\t\t\trskb)"];
"1000375" -> "1000460"  [label="DDG: rskb"];
"1000386" -> "1000375"  [label="DDG: &iucv->backlog_skb_q"];
"1000362" -> "1000375"  [label="DDG: &iucv->backlog_skb_q"];
"1000375" -> "1000392"  [label="DDG: &iucv->backlog_skb_q"];
"1000392" -> "1000391"  [label="AST: "];
"1000392" -> "1000393"  [label="CFG: "];
"1000393" -> "1000392"  [label="AST: "];
"1000404" -> "1000392"  [label="CFG: "];
"1000441" -> "1000392"  [label="CFG: "];
"1000392" -> "1000460"  [label="DDG: skb_queue_empty(&iucv->backlog_skb_q)"];
"1000392" -> "1000460"  [label="DDG: &iucv->backlog_skb_q"];
"1000386" -> "1000392"  [label="DDG: &iucv->backlog_skb_q"];
"1000362" -> "1000392"  [label="DDG: &iucv->backlog_skb_q"];
"1000407" -> "1000398"  [label="AST: "];
"1000407" -> "1000408"  [label="CFG: "];
"1000408" -> "1000407"  [label="AST: "];
"1000414" -> "1000407"  [label="CFG: "];
"1000407" -> "1000460"  [label="DDG: iucv_process_message_q(sk)"];
"1000407" -> "1000460"  [label="DDG: sk"];
"1000407" -> "1000424"  [label="DDG: sk"];
"1000424" -> "1000422"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000425" -> "1000424"  [label="AST: "];
"1000426" -> "1000424"  [label="AST: "];
"1000422" -> "1000424"  [label="CFG: "];
"1000424" -> "1000460"  [label="DDG: AF_IUCV_FLAG_WIN"];
"1000424" -> "1000460"  [label="DDG: sk"];
"1000424" -> "1000422"  [label="DDG: sk"];
"1000424" -> "1000422"  [label="DDG: AF_IUCV_FLAG_WIN"];
"1000424" -> "1000435"  [label="DDG: sk"];
"1000422" -> "1000421"  [label="AST: "];
"1000423" -> "1000422"  [label="AST: "];
"1000428" -> "1000422"  [label="CFG: "];
"1000422" -> "1000460"  [label="DDG: err"];
"1000422" -> "1000460"  [label="DDG: iucv_send_ctrl(sk, AF_IUCV_FLAG_WIN)"];
"1000435" -> "1000429"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000441" -> "1000435"  [label="CFG: "];
"1000435" -> "1000460"  [label="DDG: sk"];
"1000435" -> "1000460"  [label="DDG: sk->sk_state_change(sk)"];
}
