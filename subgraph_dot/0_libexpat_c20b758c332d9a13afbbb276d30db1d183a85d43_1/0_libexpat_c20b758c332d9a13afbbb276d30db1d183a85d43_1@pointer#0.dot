digraph "0_libexpat_c20b758c332d9a13afbbb276d30db1d183a85d43_1@pointer" {
"1000152" [label="(Call,next = textStart)"];
"1000130" [label="(Call,textStart = ((char *)entity->textPtr) + entity->processed)"];
"1000133" [label="(Call,(char *)entity->textPtr)"];
"1000173" [label="(Call,doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_TRUE))"];
"1000171" [label="(Call,result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_TRUE))"];
"1000203" [label="(Call,result != XML_ERROR_NONE)"];
"1000206" [label="(Return,return result;)"];
"1000235" [label="(Return,return result;)"];
"1000211" [label="(Call,textEnd != next)"];
"1000210" [label="(Call,textEnd != next\n           && parser->m_parsingStatus.parsing == XML_SUSPENDED)"];
"1000228" [label="(Call,next - (char *)entity->textPtr)"];
"1000226" [label="(Call,(int)(next - (char *)entity->textPtr))"];
"1000222" [label="(Call,entity->processed = (int)(next - (char *)entity->textPtr))"];
"1000285" [label="(Call,doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE))"];
"1000284" [label="(Return,return doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE);)"];
"1000239" [label="(Call,entity->open = XML_FALSE)"];
"1000276" [label="(Call,XmlPrologTok(parser->m_encoding, s, end, &next))"];
"1000274" [label="(Call,tok = XmlPrologTok(parser->m_encoding, s, end, &next))"];
"1000312" [label="(Call,doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer))"];
"1000311" [label="(Return,return doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer);)"];
"1000157" [label="(Identifier,entity)"];
"1000325" [label="(Identifier,nextPtr)"];
"1000221" [label="(Block,)"];
"1000179" [label="(Identifier,textEnd)"];
"1000239" [label="(Call,entity->open = XML_FALSE)"];
"1000303" [label="(Identifier,XML_TRUE)"];
"1000133" [label="(Call,(char *)entity->textPtr)"];
"1000174" [label="(Identifier,parser)"];
"1000230" [label="(Call,(char *)entity->textPtr)"];
"1000275" [label="(Identifier,tok)"];
"1000235" [label="(Return,return result;)"];
"1000209" [label="(ControlStructure,if (textEnd != next\n           && parser->m_parsingStatus.parsing == XML_SUSPENDED))"];
"1000320" [label="(Call,parser->m_encoding)"];
"1000185" [label="(Identifier,XML_TRUE)"];
"1000173" [label="(Call,doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_TRUE))"];
"1000277" [label="(Call,parser->m_encoding)"];
"1000108" [label="(Block,)"];
"1000182" [label="(Call,&next)"];
"1000139" [label="(Identifier,entity)"];
"1000223" [label="(Call,entity->processed)"];
"1000294" [label="(Identifier,nextPtr)"];
"1000284" [label="(Return,return doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE);)"];
"1000217" [label="(Identifier,parser)"];
"1000285" [label="(Call,doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE))"];
"1000104" [label="(MethodParameterIn,XML_Parser parser)"];
"1000204" [label="(Identifier,result)"];
"1000161" [label="(Call,tok\n         = XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000181" [label="(Identifier,next)"];
"1000212" [label="(Identifier,textEnd)"];
"1000295" [label="(Call,(XML_Bool)! parser->m_parsingStatus.finalBuffer)"];
"1000281" [label="(Identifier,end)"];
"1000282" [label="(Call,&next)"];
"1000334" [label="(MethodReturn,RET)"];
"1000203" [label="(Call,result != XML_ERROR_NONE)"];
"1000205" [label="(Identifier,XML_ERROR_NONE)"];
"1000236" [label="(Identifier,result)"];
"1000202" [label="(ControlStructure,if (result != XML_ERROR_NONE))"];
"1000153" [label="(Identifier,next)"];
"1000171" [label="(Call,result = doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_TRUE))"];
"1000210" [label="(Call,textEnd != next\n           && parser->m_parsingStatus.parsing == XML_SUSPENDED)"];
"1000154" [label="(Identifier,textStart)"];
"1000130" [label="(Call,textStart = ((char *)entity->textPtr) + entity->processed)"];
"1000180" [label="(Identifier,tok)"];
"1000143" [label="(Call,(char *)(entity->textPtr + entity->textLen))"];
"1000214" [label="(Call,parser->m_parsingStatus.parsing == XML_SUSPENDED)"];
"1000228" [label="(Call,next - (char *)entity->textPtr)"];
"1000312" [label="(Call,doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer))"];
"1000290" [label="(Identifier,s)"];
"1000229" [label="(Identifier,next)"];
"1000240" [label="(Call,entity->open)"];
"1000243" [label="(Identifier,XML_FALSE)"];
"1000246" [label="(Identifier,parser)"];
"1000311" [label="(Return,return doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer);)"];
"1000314" [label="(Call,parser->m_parentParser ? 1 : 0)"];
"1000326" [label="(Call,(XML_Bool)! parser->m_parsingStatus.finalBuffer)"];
"1000189" [label="(Call,doContent(parser, openEntity->startTagLevel,\n                       parser->m_internalEncoding, textStart, textEnd, &next,\n                       XML_FALSE))"];
"1000142" [label="(Identifier,textEnd)"];
"1000305" [label="(Block,)"];
"1000163" [label="(Call,XmlPrologTok(parser->m_internalEncoding, textStart, textEnd, &next))"];
"1000159" [label="(Block,)"];
"1000152" [label="(Call,next = textStart)"];
"1000238" [label="(Block,)"];
"1000280" [label="(Identifier,s)"];
"1000267" [label="(Block,)"];
"1000323" [label="(Identifier,s)"];
"1000206" [label="(Return,return result;)"];
"1000211" [label="(Call,textEnd != next)"];
"1000106" [label="(MethodParameterIn,const char *end)"];
"1000241" [label="(Identifier,entity)"];
"1000292" [label="(Identifier,tok)"];
"1000286" [label="(Identifier,parser)"];
"1000184" [label="(Identifier,XML_FALSE)"];
"1000213" [label="(Identifier,next)"];
"1000172" [label="(Identifier,result)"];
"1000224" [label="(Identifier,entity)"];
"1000226" [label="(Call,(int)(next - (char *)entity->textPtr))"];
"1000274" [label="(Call,tok = XmlPrologTok(parser->m_encoding, s, end, &next))"];
"1000107" [label="(MethodParameterIn,const char **nextPtr)"];
"1000145" [label="(Call,entity->textPtr + entity->textLen)"];
"1000178" [label="(Identifier,textStart)"];
"1000132" [label="(Call,((char *)entity->textPtr) + entity->processed)"];
"1000187" [label="(Call,result = doContent(parser, openEntity->startTagLevel,\n                       parser->m_internalEncoding, textStart, textEnd, &next,\n                       XML_FALSE))"];
"1000131" [label="(Identifier,textStart)"];
"1000276" [label="(Call,XmlPrologTok(parser->m_encoding, s, end, &next))"];
"1000287" [label="(Call,parser->m_encoding)"];
"1000313" [label="(Identifier,parser)"];
"1000207" [label="(Identifier,result)"];
"1000293" [label="(Identifier,next)"];
"1000175" [label="(Call,parser->m_internalEncoding)"];
"1000291" [label="(Identifier,end)"];
"1000222" [label="(Call,entity->processed = (int)(next - (char *)entity->textPtr))"];
"1000135" [label="(Call,entity->textPtr)"];
"1000105" [label="(MethodParameterIn,const char *s)"];
"1000324" [label="(Identifier,end)"];
"1000152" -> "1000108"  [label="AST: "];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000157" -> "1000152"  [label="CFG: "];
"1000152" -> "1000334"  [label="DDG: next"];
"1000130" -> "1000152"  [label="DDG: textStart"];
"1000152" -> "1000173"  [label="DDG: next"];
"1000152" -> "1000211"  [label="DDG: next"];
"1000130" -> "1000108"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000142" -> "1000130"  [label="CFG: "];
"1000130" -> "1000334"  [label="DDG: ((char *)entity->textPtr) + entity->processed"];
"1000133" -> "1000130"  [label="DDG: entity->textPtr"];
"1000130" -> "1000163"  [label="DDG: textStart"];
"1000130" -> "1000189"  [label="DDG: textStart"];
"1000133" -> "1000132"  [label="AST: "];
"1000133" -> "1000135"  [label="CFG: "];
"1000134" -> "1000133"  [label="AST: "];
"1000135" -> "1000133"  [label="AST: "];
"1000139" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="DDG: entity->textPtr"];
"1000133" -> "1000143"  [label="DDG: entity->textPtr"];
"1000133" -> "1000145"  [label="DDG: entity->textPtr"];
"1000133" -> "1000230"  [label="DDG: entity->textPtr"];
"1000173" -> "1000171"  [label="AST: "];
"1000173" -> "1000185"  [label="CFG: "];
"1000174" -> "1000173"  [label="AST: "];
"1000175" -> "1000173"  [label="AST: "];
"1000178" -> "1000173"  [label="AST: "];
"1000179" -> "1000173"  [label="AST: "];
"1000180" -> "1000173"  [label="AST: "];
"1000181" -> "1000173"  [label="AST: "];
"1000182" -> "1000173"  [label="AST: "];
"1000184" -> "1000173"  [label="AST: "];
"1000185" -> "1000173"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000173" -> "1000334"  [label="DDG: XML_TRUE"];
"1000173" -> "1000334"  [label="DDG: &next"];
"1000173" -> "1000334"  [label="DDG: textStart"];
"1000173" -> "1000334"  [label="DDG: textEnd"];
"1000173" -> "1000334"  [label="DDG: XML_FALSE"];
"1000173" -> "1000334"  [label="DDG: next"];
"1000173" -> "1000334"  [label="DDG: tok"];
"1000173" -> "1000334"  [label="DDG: parser"];
"1000173" -> "1000334"  [label="DDG: parser->m_internalEncoding"];
"1000173" -> "1000171"  [label="DDG: XML_FALSE"];
"1000173" -> "1000171"  [label="DDG: next"];
"1000173" -> "1000171"  [label="DDG: textStart"];
"1000173" -> "1000171"  [label="DDG: textEnd"];
"1000173" -> "1000171"  [label="DDG: parser->m_internalEncoding"];
"1000173" -> "1000171"  [label="DDG: XML_TRUE"];
"1000173" -> "1000171"  [label="DDG: tok"];
"1000173" -> "1000171"  [label="DDG: &next"];
"1000173" -> "1000171"  [label="DDG: parser"];
"1000104" -> "1000173"  [label="DDG: parser"];
"1000163" -> "1000173"  [label="DDG: parser->m_internalEncoding"];
"1000163" -> "1000173"  [label="DDG: textStart"];
"1000163" -> "1000173"  [label="DDG: textEnd"];
"1000163" -> "1000173"  [label="DDG: &next"];
"1000161" -> "1000173"  [label="DDG: tok"];
"1000173" -> "1000211"  [label="DDG: textEnd"];
"1000173" -> "1000211"  [label="DDG: next"];
"1000173" -> "1000239"  [label="DDG: XML_FALSE"];
"1000173" -> "1000276"  [label="DDG: &next"];
"1000173" -> "1000285"  [label="DDG: parser"];
"1000173" -> "1000285"  [label="DDG: XML_TRUE"];
"1000173" -> "1000312"  [label="DDG: parser"];
"1000171" -> "1000159"  [label="AST: "];
"1000172" -> "1000171"  [label="AST: "];
"1000204" -> "1000171"  [label="CFG: "];
"1000171" -> "1000334"  [label="DDG: doProlog(parser, parser->m_internalEncoding, textStart, textEnd,\n                      tok, next, &next, XML_FALSE, XML_TRUE)"];
"1000171" -> "1000203"  [label="DDG: result"];
"1000203" -> "1000202"  [label="AST: "];
"1000203" -> "1000205"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000205" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="CFG: "];
"1000212" -> "1000203"  [label="CFG: "];
"1000203" -> "1000334"  [label="DDG: result != XML_ERROR_NONE"];
"1000203" -> "1000334"  [label="DDG: XML_ERROR_NONE"];
"1000203" -> "1000334"  [label="DDG: result"];
"1000187" -> "1000203"  [label="DDG: result"];
"1000203" -> "1000206"  [label="DDG: result"];
"1000203" -> "1000235"  [label="DDG: result"];
"1000206" -> "1000202"  [label="AST: "];
"1000206" -> "1000207"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000334" -> "1000206"  [label="CFG: "];
"1000206" -> "1000334"  [label="DDG: <RET>"];
"1000207" -> "1000206"  [label="DDG: result"];
"1000235" -> "1000221"  [label="AST: "];
"1000235" -> "1000236"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000334" -> "1000235"  [label="CFG: "];
"1000235" -> "1000334"  [label="DDG: <RET>"];
"1000236" -> "1000235"  [label="DDG: result"];
"1000211" -> "1000210"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000217" -> "1000211"  [label="CFG: "];
"1000210" -> "1000211"  [label="CFG: "];
"1000211" -> "1000334"  [label="DDG: textEnd"];
"1000211" -> "1000334"  [label="DDG: next"];
"1000211" -> "1000210"  [label="DDG: textEnd"];
"1000211" -> "1000210"  [label="DDG: next"];
"1000189" -> "1000211"  [label="DDG: textEnd"];
"1000211" -> "1000228"  [label="DDG: next"];
"1000211" -> "1000285"  [label="DDG: next"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000214"  [label="CFG: "];
"1000214" -> "1000210"  [label="AST: "];
"1000224" -> "1000210"  [label="CFG: "];
"1000241" -> "1000210"  [label="CFG: "];
"1000210" -> "1000334"  [label="DDG: textEnd != next\n           && parser->m_parsingStatus.parsing == XML_SUSPENDED"];
"1000210" -> "1000334"  [label="DDG: parser->m_parsingStatus.parsing == XML_SUSPENDED"];
"1000210" -> "1000334"  [label="DDG: textEnd != next"];
"1000214" -> "1000210"  [label="DDG: parser->m_parsingStatus.parsing"];
"1000214" -> "1000210"  [label="DDG: XML_SUSPENDED"];
"1000228" -> "1000226"  [label="AST: "];
"1000228" -> "1000230"  [label="CFG: "];
"1000229" -> "1000228"  [label="AST: "];
"1000230" -> "1000228"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000228" -> "1000334"  [label="DDG: next"];
"1000228" -> "1000334"  [label="DDG: (char *)entity->textPtr"];
"1000228" -> "1000226"  [label="DDG: next"];
"1000228" -> "1000226"  [label="DDG: (char *)entity->textPtr"];
"1000230" -> "1000228"  [label="DDG: entity->textPtr"];
"1000226" -> "1000222"  [label="AST: "];
"1000227" -> "1000226"  [label="AST: "];
"1000222" -> "1000226"  [label="CFG: "];
"1000226" -> "1000334"  [label="DDG: next - (char *)entity->textPtr"];
"1000226" -> "1000222"  [label="DDG: next - (char *)entity->textPtr"];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000222"  [label="AST: "];
"1000236" -> "1000222"  [label="CFG: "];
"1000222" -> "1000334"  [label="DDG: entity->processed"];
"1000222" -> "1000334"  [label="DDG: (int)(next - (char *)entity->textPtr)"];
"1000285" -> "1000284"  [label="AST: "];
"1000285" -> "1000303"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000290" -> "1000285"  [label="AST: "];
"1000291" -> "1000285"  [label="AST: "];
"1000292" -> "1000285"  [label="AST: "];
"1000293" -> "1000285"  [label="AST: "];
"1000294" -> "1000285"  [label="AST: "];
"1000295" -> "1000285"  [label="AST: "];
"1000303" -> "1000285"  [label="AST: "];
"1000284" -> "1000285"  [label="CFG: "];
"1000285" -> "1000334"  [label="DDG: parser"];
"1000285" -> "1000334"  [label="DDG: end"];
"1000285" -> "1000334"  [label="DDG: tok"];
"1000285" -> "1000334"  [label="DDG: doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE)"];
"1000285" -> "1000334"  [label="DDG: nextPtr"];
"1000285" -> "1000334"  [label="DDG: s"];
"1000285" -> "1000334"  [label="DDG: next"];
"1000285" -> "1000334"  [label="DDG: parser->m_encoding"];
"1000285" -> "1000334"  [label="DDG: XML_TRUE"];
"1000285" -> "1000334"  [label="DDG: (XML_Bool)! parser->m_parsingStatus.finalBuffer"];
"1000285" -> "1000284"  [label="DDG: doProlog(parser, parser->m_encoding, s, end, tok, next, nextPtr,\n                    (XML_Bool)! parser->m_parsingStatus.finalBuffer, XML_TRUE)"];
"1000189" -> "1000285"  [label="DDG: parser"];
"1000104" -> "1000285"  [label="DDG: parser"];
"1000276" -> "1000285"  [label="DDG: parser->m_encoding"];
"1000276" -> "1000285"  [label="DDG: s"];
"1000276" -> "1000285"  [label="DDG: end"];
"1000105" -> "1000285"  [label="DDG: s"];
"1000106" -> "1000285"  [label="DDG: end"];
"1000274" -> "1000285"  [label="DDG: tok"];
"1000107" -> "1000285"  [label="DDG: nextPtr"];
"1000295" -> "1000285"  [label="DDG: ! parser->m_parsingStatus.finalBuffer"];
"1000284" -> "1000267"  [label="AST: "];
"1000334" -> "1000284"  [label="CFG: "];
"1000284" -> "1000334"  [label="DDG: <RET>"];
"1000239" -> "1000238"  [label="AST: "];
"1000239" -> "1000243"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000246" -> "1000239"  [label="CFG: "];
"1000239" -> "1000334"  [label="DDG: entity->open"];
"1000239" -> "1000334"  [label="DDG: XML_FALSE"];
"1000189" -> "1000239"  [label="DDG: XML_FALSE"];
"1000276" -> "1000274"  [label="AST: "];
"1000276" -> "1000282"  [label="CFG: "];
"1000277" -> "1000276"  [label="AST: "];
"1000280" -> "1000276"  [label="AST: "];
"1000281" -> "1000276"  [label="AST: "];
"1000282" -> "1000276"  [label="AST: "];
"1000274" -> "1000276"  [label="CFG: "];
"1000276" -> "1000334"  [label="DDG: &next"];
"1000276" -> "1000274"  [label="DDG: parser->m_encoding"];
"1000276" -> "1000274"  [label="DDG: s"];
"1000276" -> "1000274"  [label="DDG: end"];
"1000276" -> "1000274"  [label="DDG: &next"];
"1000105" -> "1000276"  [label="DDG: s"];
"1000106" -> "1000276"  [label="DDG: end"];
"1000189" -> "1000276"  [label="DDG: &next"];
"1000274" -> "1000267"  [label="AST: "];
"1000275" -> "1000274"  [label="AST: "];
"1000286" -> "1000274"  [label="CFG: "];
"1000274" -> "1000334"  [label="DDG: XmlPrologTok(parser->m_encoding, s, end, &next)"];
"1000312" -> "1000311"  [label="AST: "];
"1000312" -> "1000326"  [label="CFG: "];
"1000313" -> "1000312"  [label="AST: "];
"1000314" -> "1000312"  [label="AST: "];
"1000320" -> "1000312"  [label="AST: "];
"1000323" -> "1000312"  [label="AST: "];
"1000324" -> "1000312"  [label="AST: "];
"1000325" -> "1000312"  [label="AST: "];
"1000326" -> "1000312"  [label="AST: "];
"1000311" -> "1000312"  [label="CFG: "];
"1000312" -> "1000334"  [label="DDG: (XML_Bool)! parser->m_parsingStatus.finalBuffer"];
"1000312" -> "1000334"  [label="DDG: doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer)"];
"1000312" -> "1000334"  [label="DDG: parser"];
"1000312" -> "1000334"  [label="DDG: end"];
"1000312" -> "1000334"  [label="DDG: nextPtr"];
"1000312" -> "1000334"  [label="DDG: s"];
"1000312" -> "1000334"  [label="DDG: parser->m_encoding"];
"1000312" -> "1000334"  [label="DDG: parser->m_parentParser ? 1 : 0"];
"1000312" -> "1000311"  [label="DDG: doContent(parser, parser->m_parentParser ? 1 : 0, parser->m_encoding,\n                     s, end, nextPtr,\n                     (XML_Bool)! parser->m_parsingStatus.finalBuffer)"];
"1000189" -> "1000312"  [label="DDG: parser"];
"1000104" -> "1000312"  [label="DDG: parser"];
"1000105" -> "1000312"  [label="DDG: s"];
"1000106" -> "1000312"  [label="DDG: end"];
"1000107" -> "1000312"  [label="DDG: nextPtr"];
"1000326" -> "1000312"  [label="DDG: ! parser->m_parsingStatus.finalBuffer"];
"1000311" -> "1000305"  [label="AST: "];
"1000334" -> "1000311"  [label="CFG: "];
"1000311" -> "1000334"  [label="DDG: <RET>"];
}
