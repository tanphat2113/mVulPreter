digraph "1_ImageMagick_0474237508f39c4f783208123431815f1ededb76_0@del" {
"1000107" [label="(Call,count*quantum)"];
"1000101" [label="(MethodParameterIn,const size_t count)"];
"1000102" [label="(MethodParameterIn,const size_t quantum)"];
"1000105" [label="(Call,size=count*quantum)"];
"1000117" [label="(Call,size/count)"];
"1000115" [label="(Call,quantum != (size/count))"];
"1000111" [label="(Call,(count == 0) || (quantum != (size/count)))"];
"1000112" [label="(Call,count == 0)"];
"1000105" [label="(Call,size=count*quantum)"];
"1000127" [label="(Identifier,MagickFalse)"];
"1000103" [label="(Block,)"];
"1000113" [label="(Identifier,count)"];
"1000111" [label="(Call,(count == 0) || (quantum != (size/count)))"];
"1000110" [label="(ControlStructure,if ((count == 0) || (quantum != (size/count))))"];
"1000116" [label="(Identifier,quantum)"];
"1000115" [label="(Call,quantum != (size/count))"];
"1000117" [label="(Call,size/count)"];
"1000107" [label="(Call,count*quantum)"];
"1000106" [label="(Identifier,size)"];
"1000108" [label="(Identifier,count)"];
"1000119" [label="(Identifier,count)"];
"1000122" [label="(Identifier,errno)"];
"1000101" [label="(MethodParameterIn,const size_t count)"];
"1000102" [label="(MethodParameterIn,const size_t quantum)"];
"1000118" [label="(Identifier,size)"];
"1000114" [label="(Literal,0)"];
"1000128" [label="(MethodReturn,static MagickBooleanType)"];
"1000109" [label="(Identifier,quantum)"];
"1000112" [label="(Call,count == 0)"];
"1000107" -> "1000105"  [label="AST: "];
"1000107" -> "1000109"  [label="CFG: "];
"1000108" -> "1000107"  [label="AST: "];
"1000109" -> "1000107"  [label="AST: "];
"1000105" -> "1000107"  [label="CFG: "];
"1000107" -> "1000128"  [label="DDG: quantum"];
"1000107" -> "1000105"  [label="DDG: count"];
"1000107" -> "1000105"  [label="DDG: quantum"];
"1000101" -> "1000107"  [label="DDG: count"];
"1000102" -> "1000107"  [label="DDG: quantum"];
"1000107" -> "1000112"  [label="DDG: count"];
"1000107" -> "1000115"  [label="DDG: quantum"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000128"  [label="DDG: count"];
"1000101" -> "1000112"  [label="DDG: count"];
"1000101" -> "1000117"  [label="DDG: count"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000128"  [label="DDG: quantum"];
"1000102" -> "1000115"  [label="DDG: quantum"];
"1000105" -> "1000103"  [label="AST: "];
"1000106" -> "1000105"  [label="AST: "];
"1000113" -> "1000105"  [label="CFG: "];
"1000105" -> "1000128"  [label="DDG: count*quantum"];
"1000105" -> "1000128"  [label="DDG: size"];
"1000105" -> "1000117"  [label="DDG: size"];
"1000117" -> "1000115"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000115" -> "1000117"  [label="CFG: "];
"1000117" -> "1000128"  [label="DDG: size"];
"1000117" -> "1000128"  [label="DDG: count"];
"1000117" -> "1000115"  [label="DDG: size"];
"1000117" -> "1000115"  [label="DDG: count"];
"1000112" -> "1000117"  [label="DDG: count"];
"1000115" -> "1000111"  [label="AST: "];
"1000116" -> "1000115"  [label="AST: "];
"1000111" -> "1000115"  [label="CFG: "];
"1000115" -> "1000128"  [label="DDG: size/count"];
"1000115" -> "1000128"  [label="DDG: quantum"];
"1000115" -> "1000111"  [label="DDG: quantum"];
"1000115" -> "1000111"  [label="DDG: size/count"];
"1000111" -> "1000110"  [label="AST: "];
"1000111" -> "1000112"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000122" -> "1000111"  [label="CFG: "];
"1000127" -> "1000111"  [label="CFG: "];
"1000111" -> "1000128"  [label="DDG: quantum != (size/count)"];
"1000111" -> "1000128"  [label="DDG: count == 0"];
"1000111" -> "1000128"  [label="DDG: (count == 0) || (quantum != (size/count))"];
"1000112" -> "1000111"  [label="DDG: count"];
"1000112" -> "1000111"  [label="DDG: 0"];
"1000112" -> "1000114"  [label="CFG: "];
"1000113" -> "1000112"  [label="AST: "];
"1000114" -> "1000112"  [label="AST: "];
"1000116" -> "1000112"  [label="CFG: "];
"1000112" -> "1000128"  [label="DDG: count"];
}
