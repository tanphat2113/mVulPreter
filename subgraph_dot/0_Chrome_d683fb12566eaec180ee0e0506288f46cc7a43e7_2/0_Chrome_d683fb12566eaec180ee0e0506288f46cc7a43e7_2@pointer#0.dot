digraph "0_Chrome_d683fb12566eaec180ee0e0506288f46cc7a43e7_2@pointer" {
"1000159" [label="(Call,DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp))"];
"1000129" [label="(Call,* previous_csp = nullptr)"];
"1000138" [label="(Call,previous_csp = frame_->GetDocument()->GetContentSecurityPolicy())"];
"1000157" [label="(Call,frame_->DomWindow()->InstallNewDocument(\n      mime_type,\n      DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp),\n       false))"];
"1000155" [label="(Call,* document = frame_->DomWindow()->InstallNewDocument(\n      mime_type,\n      DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp),\n       false))"];
"1000188" [label="(Call,DidInstallNewDocument(document, previous_csp))"];
"1000205" [label="(Call,OriginTrialContext::AddTokensFromHeader(\n        document, response_.HttpHeaderField(HTTPNames::Origin_Trial)))"];
"1000212" [label="(Call,OriginTrials::StaleWhileRevalidateEnabled(document))"];
"1000210" [label="(Call,stale_while_revalidate_enabled =\n      OriginTrials::StaleWhileRevalidateEnabled(document))"];
"1000214" [label="(Call,fetcher_->SetStaleWhileRevalidateEnabled(stale_while_revalidate_enabled))"];
"1000217" [label="(Call,stale_while_revalidate_enabled &&\n      !RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag())"];
"1000226" [label="(Call,document->OpenForNavigation(parsing_policy, mime_type, encoding))"];
"1000224" [label="(Call,parser_ = document->OpenForNavigation(parsing_policy, mime_type, encoding))"];
"1000109" [label="(Block,)"];
"1000155" [label="(Call,* document = frame_->DomWindow()->InstallNewDocument(\n      mime_type,\n      DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp),\n       false))"];
"1000193" [label="(Identifier,reason)"];
"1000218" [label="(Identifier,stale_while_revalidate_enabled)"];
"1000232" [label="(Identifier,scriptable_parser)"];
"1000205" [label="(Call,OriginTrialContext::AddTokensFromHeader(\n        document, response_.HttpHeaderField(HTTPNames::Origin_Trial)))"];
"1000190" [label="(Identifier,previous_csp)"];
"1000210" [label="(Call,stale_while_revalidate_enabled =\n      OriginTrials::StaleWhileRevalidateEnabled(document))"];
"1000206" [label="(Identifier,document)"];
"1000216" [label="(ControlStructure,if (stale_while_revalidate_enabled &&\n      !RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag()))"];
"1000105" [label="(MethodParameterIn,const AtomicString& encoding)"];
"1000134" [label="(Block,)"];
"1000130" [label="(Identifier,previous_csp)"];
"1000219" [label="(Call,!RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag())"];
"1000157" [label="(Call,frame_->DomWindow()->InstallNewDocument(\n      mime_type,\n      DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp),\n       false))"];
"1000158" [label="(Identifier,mime_type)"];
"1000207" [label="(Call,response_.HttpHeaderField(HTTPNames::Origin_Trial))"];
"1000161" [label="(Identifier,false)"];
"1000225" [label="(Identifier,parser_)"];
"1000159" [label="(Call,DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp))"];
"1000138" [label="(Call,previous_csp = frame_->GetDocument()->GetContentSecurityPolicy())"];
"1000133" [label="(Call,frame_->GetDocument())"];
"1000213" [label="(Identifier,document)"];
"1000143" [label="(Identifier,global_object_reuse_policy)"];
"1000131" [label="(Identifier,nullptr)"];
"1000215" [label="(Identifier,stale_while_revalidate_enabled)"];
"1000229" [label="(Identifier,encoding)"];
"1000222" [label="(Identifier,frame_)"];
"1000189" [label="(Identifier,document)"];
"1000160" [label="(Identifier,previous_csp)"];
"1000129" [label="(Call,* previous_csp = nullptr)"];
"1000245" [label="(MethodReturn,void)"];
"1000139" [label="(Identifier,previous_csp)"];
"1000227" [label="(Identifier,parsing_policy)"];
"1000199" [label="(Block,)"];
"1000163" [label="(Call,frame_->IsMainFrame())"];
"1000228" [label="(Identifier,mime_type)"];
"1000224" [label="(Call,parser_ = document->OpenForNavigation(parsing_policy, mime_type, encoding))"];
"1000212" [label="(Call,OriginTrials::StaleWhileRevalidateEnabled(document))"];
"1000107" [label="(MethodParameterIn,ParserSynchronizationPolicy parsing_policy)"];
"1000217" [label="(Call,stale_while_revalidate_enabled &&\n      !RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag())"];
"1000104" [label="(MethodParameterIn,const AtomicString& mime_type)"];
"1000188" [label="(Call,DidInstallNewDocument(document, previous_csp))"];
"1000211" [label="(Identifier,stale_while_revalidate_enabled)"];
"1000140" [label="(Call,frame_->GetDocument()->GetContentSecurityPolicy())"];
"1000156" [label="(Identifier,document)"];
"1000214" [label="(Call,fetcher_->SetStaleWhileRevalidateEnabled(stale_while_revalidate_enabled))"];
"1000226" [label="(Call,document->OpenForNavigation(parsing_policy, mime_type, encoding))"];
"1000159" -> "1000157"  [label="AST: "];
"1000159" -> "1000160"  [label="CFG: "];
"1000160" -> "1000159"  [label="AST: "];
"1000161" -> "1000159"  [label="CFG: "];
"1000159" -> "1000157"  [label="DDG: previous_csp"];
"1000129" -> "1000159"  [label="DDG: previous_csp"];
"1000138" -> "1000159"  [label="DDG: previous_csp"];
"1000159" -> "1000188"  [label="DDG: previous_csp"];
"1000129" -> "1000109"  [label="AST: "];
"1000129" -> "1000131"  [label="CFG: "];
"1000130" -> "1000129"  [label="AST: "];
"1000131" -> "1000129"  [label="AST: "];
"1000133" -> "1000129"  [label="CFG: "];
"1000129" -> "1000245"  [label="DDG: nullptr"];
"1000138" -> "1000134"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000143" -> "1000138"  [label="CFG: "];
"1000138" -> "1000245"  [label="DDG: frame_->GetDocument()->GetContentSecurityPolicy()"];
"1000157" -> "1000155"  [label="AST: "];
"1000157" -> "1000161"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000161" -> "1000157"  [label="AST: "];
"1000155" -> "1000157"  [label="CFG: "];
"1000157" -> "1000245"  [label="DDG: DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp)"];
"1000157" -> "1000245"  [label="DDG: false"];
"1000157" -> "1000155"  [label="DDG: mime_type"];
"1000157" -> "1000155"  [label="DDG: DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp)"];
"1000157" -> "1000155"  [label="DDG: false"];
"1000104" -> "1000157"  [label="DDG: mime_type"];
"1000157" -> "1000226"  [label="DDG: mime_type"];
"1000155" -> "1000109"  [label="AST: "];
"1000156" -> "1000155"  [label="AST: "];
"1000163" -> "1000155"  [label="CFG: "];
"1000155" -> "1000245"  [label="DDG: frame_->DomWindow()->InstallNewDocument(\n      mime_type,\n      DocumentInit::Create()\n           .WithDocumentLoader(this)\n           .WithURL(url)\n           .WithOwnerDocument(owner_document)\n          .WithNewRegistrationContext()\n          .WithPreviousDocumentCSP(previous_csp),\n       false)"];
"1000155" -> "1000188"  [label="DDG: document"];
"1000188" -> "1000109"  [label="AST: "];
"1000188" -> "1000190"  [label="CFG: "];
"1000189" -> "1000188"  [label="AST: "];
"1000190" -> "1000188"  [label="AST: "];
"1000193" -> "1000188"  [label="CFG: "];
"1000188" -> "1000245"  [label="DDG: DidInstallNewDocument(document, previous_csp)"];
"1000188" -> "1000245"  [label="DDG: previous_csp"];
"1000188" -> "1000205"  [label="DDG: document"];
"1000188" -> "1000212"  [label="DDG: document"];
"1000205" -> "1000199"  [label="AST: "];
"1000205" -> "1000207"  [label="CFG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000207" -> "1000205"  [label="AST: "];
"1000211" -> "1000205"  [label="CFG: "];
"1000205" -> "1000245"  [label="DDG: OriginTrialContext::AddTokensFromHeader(\n        document, response_.HttpHeaderField(HTTPNames::Origin_Trial))"];
"1000205" -> "1000245"  [label="DDG: response_.HttpHeaderField(HTTPNames::Origin_Trial)"];
"1000207" -> "1000205"  [label="DDG: HTTPNames::Origin_Trial"];
"1000205" -> "1000212"  [label="DDG: document"];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000213"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000212" -> "1000245"  [label="DDG: document"];
"1000212" -> "1000210"  [label="DDG: document"];
"1000210" -> "1000109"  [label="AST: "];
"1000211" -> "1000210"  [label="AST: "];
"1000215" -> "1000210"  [label="CFG: "];
"1000210" -> "1000245"  [label="DDG: OriginTrials::StaleWhileRevalidateEnabled(document)"];
"1000210" -> "1000214"  [label="DDG: stale_while_revalidate_enabled"];
"1000214" -> "1000109"  [label="AST: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000214"  [label="AST: "];
"1000218" -> "1000214"  [label="CFG: "];
"1000214" -> "1000245"  [label="DDG: fetcher_->SetStaleWhileRevalidateEnabled(stale_while_revalidate_enabled)"];
"1000214" -> "1000217"  [label="DDG: stale_while_revalidate_enabled"];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000218"  [label="CFG: "];
"1000217" -> "1000219"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000217"  [label="AST: "];
"1000222" -> "1000217"  [label="CFG: "];
"1000225" -> "1000217"  [label="CFG: "];
"1000217" -> "1000245"  [label="DDG: !RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag()"];
"1000217" -> "1000245"  [label="DDG: stale_while_revalidate_enabled &&\n      !RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag()"];
"1000217" -> "1000245"  [label="DDG: stale_while_revalidate_enabled"];
"1000219" -> "1000217"  [label="DDG: RuntimeEnabledFeatures::StaleWhileRevalidateEnabledByRuntimeFlag()"];
"1000226" -> "1000224"  [label="AST: "];
"1000226" -> "1000229"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000229" -> "1000226"  [label="AST: "];
"1000224" -> "1000226"  [label="CFG: "];
"1000226" -> "1000245"  [label="DDG: parsing_policy"];
"1000226" -> "1000245"  [label="DDG: mime_type"];
"1000226" -> "1000245"  [label="DDG: encoding"];
"1000226" -> "1000224"  [label="DDG: parsing_policy"];
"1000226" -> "1000224"  [label="DDG: mime_type"];
"1000226" -> "1000224"  [label="DDG: encoding"];
"1000107" -> "1000226"  [label="DDG: parsing_policy"];
"1000104" -> "1000226"  [label="DDG: mime_type"];
"1000105" -> "1000226"  [label="DDG: encoding"];
"1000224" -> "1000109"  [label="AST: "];
"1000225" -> "1000224"  [label="AST: "];
"1000232" -> "1000224"  [label="CFG: "];
"1000224" -> "1000245"  [label="DDG: parser_"];
"1000224" -> "1000245"  [label="DDG: document->OpenForNavigation(parsing_policy, mime_type, encoding)"];
}
