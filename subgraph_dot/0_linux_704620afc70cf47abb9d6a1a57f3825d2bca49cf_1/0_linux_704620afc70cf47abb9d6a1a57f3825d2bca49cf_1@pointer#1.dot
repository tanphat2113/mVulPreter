digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_1@pointer" {
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000206" [label="(Call,dev_warn(dev, \"BUG? WUSB host has no security descriptors\n\"))"];
"1000225" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000251" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000304" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000363" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000374" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000323" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000139" [label="(Identifier,index)"];
"1000325" [label="(Literal,\"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\")"];
"1000326" [label="(Call,(size_t)etd->bLength)"];
"1000307" [label="(Call,top - itr)"];
"1000250" [label="(Block,)"];
"1000370" [label="(Identifier,wusbhc)"];
"1000224" [label="(Block,)"];
"1000243" [label="(Call,top - (void *)secd < needed)"];
"1000374" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000334" [label="(ControlStructure,break;)"];
"1000252" [label="(Identifier,dev)"];
"1000331" [label="(Call,sizeof(*etd))"];
"1000381" [label="(MethodReturn,static int)"];
"1000373" [label="(Block,)"];
"1000206" [label="(Call,dev_warn(dev, \"BUG? WUSB host has no security descriptors\n\"))"];
"1000225" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000205" [label="(Block,)"];
"1000303" [label="(Block,)"];
"1000323" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000210" [label="(Literal,0)"];
"1000251" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000305" [label="(Identifier,dev)"];
"1000324" [label="(Identifier,dev)"];
"1000376" [label="(Literal,\"E: host doesn't support CCM-1 crypto\n\")"];
"1000124" [label="(Identifier,dev)"];
"1000375" [label="(Identifier,dev)"];
"1000217" [label="(Call,top - (void *)secd < needed)"];
"1000207" [label="(Identifier,dev)"];
"1000125" [label="(Call,&usb_dev->dev)"];
"1000304" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000310" [label="(Call,sizeof(*etd))"];
"1000322" [label="(Block,)"];
"1000235" [label="(Literal,0)"];
"1000228" [label="(Call,top - (void *) secd)"];
"1000233" [label="(Identifier,needed)"];
"1000253" [label="(Literal,\"BUG? Not enough data to process security \"\n\t\t\t\"descriptors (%zu bytes left vs %zu needed)\n\")"];
"1000226" [label="(Identifier,dev)"];
"1000306" [label="(Literal,\"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\")"];
"1000365" [label="(Literal,\"supported encryption types: %s\n\")"];
"1000313" [label="(ControlStructure,break;)"];
"1000261" [label="(Literal,0)"];
"1000105" [label="(Block,)"];
"1000259" [label="(Identifier,needed)"];
"1000208" [label="(Literal,\"BUG? WUSB host has no security descriptors\n\")"];
"1000363" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000378" [label="(Literal,0)"];
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000366" [label="(Identifier,buf)"];
"1000227" [label="(Literal,\"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\")"];
"1000364" [label="(Identifier,dev)"];
"1000254" [label="(Call,top - (void *) secd)"];
"1000123" -> "1000105"  [label="AST: "];
"1000123" -> "1000125"  [label="CFG: "];
"1000124" -> "1000123"  [label="AST: "];
"1000125" -> "1000123"  [label="AST: "];
"1000139" -> "1000123"  [label="CFG: "];
"1000123" -> "1000381"  [label="DDG: "];
"1000123" -> "1000206"  [label="DDG: "];
"1000123" -> "1000225"  [label="DDG: "];
"1000123" -> "1000251"  [label="DDG: "];
"1000123" -> "1000304"  [label="DDG: "];
"1000123" -> "1000323"  [label="DDG: "];
"1000123" -> "1000363"  [label="DDG: "];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000208"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000210" -> "1000206"  [label="CFG: "];
"1000206" -> "1000381"  [label="DDG: "];
"1000206" -> "1000381"  [label="DDG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000233"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000233" -> "1000225"  [label="AST: "];
"1000235" -> "1000225"  [label="CFG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000228" -> "1000225"  [label="DDG: "];
"1000228" -> "1000225"  [label="DDG: "];
"1000217" -> "1000225"  [label="DDG: "];
"1000251" -> "1000250"  [label="AST: "];
"1000251" -> "1000259"  [label="CFG: "];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000251"  [label="AST: "];
"1000254" -> "1000251"  [label="AST: "];
"1000259" -> "1000251"  [label="AST: "];
"1000261" -> "1000251"  [label="CFG: "];
"1000251" -> "1000381"  [label="DDG: "];
"1000251" -> "1000381"  [label="DDG: "];
"1000251" -> "1000381"  [label="DDG: "];
"1000251" -> "1000381"  [label="DDG: "];
"1000254" -> "1000251"  [label="DDG: "];
"1000254" -> "1000251"  [label="DDG: "];
"1000243" -> "1000251"  [label="DDG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000310"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000307" -> "1000304"  [label="AST: "];
"1000310" -> "1000304"  [label="AST: "];
"1000313" -> "1000304"  [label="CFG: "];
"1000304" -> "1000381"  [label="DDG: "];
"1000304" -> "1000381"  [label="DDG: "];
"1000307" -> "1000304"  [label="DDG: "];
"1000307" -> "1000304"  [label="DDG: "];
"1000304" -> "1000363"  [label="DDG: "];
"1000363" -> "1000105"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000370" -> "1000363"  [label="CFG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000323" -> "1000363"  [label="DDG: "];
"1000363" -> "1000374"  [label="DDG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000374" -> "1000376"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="CFG: "];
"1000374" -> "1000381"  [label="DDG: "];
"1000374" -> "1000381"  [label="DDG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000331"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="AST: "];
"1000331" -> "1000323"  [label="AST: "];
"1000334" -> "1000323"  [label="CFG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000326" -> "1000323"  [label="DDG: "];
}
