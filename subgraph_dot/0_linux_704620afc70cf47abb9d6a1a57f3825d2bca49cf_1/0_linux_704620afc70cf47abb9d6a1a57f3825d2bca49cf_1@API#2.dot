digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_1@API" {
"1000211" [label="(Call,needed = sizeof(*secd))"];
"1000217" [label="(Call,top - (void *)secd < needed)"];
"1000225" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000211" [label="(Call,needed = sizeof(*secd))"];
"1000226" [label="(Identifier,dev)"];
"1000217" [label="(Call,top - (void *)secd < needed)"];
"1000237" [label="(Identifier,needed)"];
"1000381" [label="(MethodReturn,static int)"];
"1000225" [label="(Call,dev_err(dev, \"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\",\n\t\t\ttop - (void *) secd, needed))"];
"1000233" [label="(Identifier,needed)"];
"1000213" [label="(Call,sizeof(*secd))"];
"1000218" [label="(Call,top - (void *)secd)"];
"1000224" [label="(Block,)"];
"1000105" [label="(Block,)"];
"1000219" [label="(Identifier,top)"];
"1000235" [label="(Literal,0)"];
"1000227" [label="(Literal,\"BUG? Not enough data to process security \"\n\t\t\t\"descriptor header (%zu bytes left vs %zu needed)\n\")"];
"1000228" [label="(Call,top - (void *) secd)"];
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000216" [label="(ControlStructure,if (top - (void *)secd < needed))"];
"1000212" [label="(Identifier,needed)"];
"1000223" [label="(Identifier,needed)"];
"1000211" -> "1000105"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000219" -> "1000211"  [label="CFG: "];
"1000211" -> "1000217"  [label="DDG: "];
"1000217" -> "1000216"  [label="AST: "];
"1000217" -> "1000223"  [label="CFG: "];
"1000218" -> "1000217"  [label="AST: "];
"1000223" -> "1000217"  [label="AST: "];
"1000226" -> "1000217"  [label="CFG: "];
"1000237" -> "1000217"  [label="CFG: "];
"1000217" -> "1000381"  [label="DDG: "];
"1000217" -> "1000381"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000218" -> "1000217"  [label="DDG: "];
"1000217" -> "1000225"  [label="DDG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000225" -> "1000233"  [label="CFG: "];
"1000226" -> "1000225"  [label="AST: "];
"1000227" -> "1000225"  [label="AST: "];
"1000228" -> "1000225"  [label="AST: "];
"1000233" -> "1000225"  [label="AST: "];
"1000235" -> "1000225"  [label="CFG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000225" -> "1000381"  [label="DDG: "];
"1000123" -> "1000225"  [label="DDG: "];
"1000228" -> "1000225"  [label="DDG: "];
"1000228" -> "1000225"  [label="DDG: "];
}
