digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_1@API" {
"1000315" [label="(Call,etd->bLength < sizeof(*etd))"];
"1000326" [label="(Call,(size_t)etd->bLength)"];
"1000323" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000363" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000374" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000335" [label="(Call,itr += etd->bLength)"];
"1000288" [label="(Call,itr < top)"];
"1000292" [label="(Call,etd = itr)"];
"1000358" [label="(Call,wusbhc->ccm1_etd = etd)"];
"1000368" [label="(Call,wusbhc->ccm1_etd == NULL)"];
"1000297" [label="(Call,top - itr)"];
"1000296" [label="(Call,top - itr < sizeof(*etd))"];
"1000307" [label="(Call,top - itr)"];
"1000304" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000292" [label="(Call,etd = itr)"];
"1000325" [label="(Literal,\"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\")"];
"1000326" [label="(Call,(size_t)etd->bLength)"];
"1000307" [label="(Call,top - itr)"];
"1000370" [label="(Identifier,wusbhc)"];
"1000287" [label="(ControlStructure,while (itr < top))"];
"1000374" [label="(Call,dev_err(dev, \"E: host doesn't support CCM-1 crypto\n\"))"];
"1000316" [label="(Call,etd->bLength)"];
"1000315" [label="(Call,etd->bLength < sizeof(*etd))"];
"1000319" [label="(Call,sizeof(*etd))"];
"1000314" [label="(ControlStructure,if (etd->bLength < sizeof(*etd)))"];
"1000362" [label="(Identifier,etd)"];
"1000334" [label="(ControlStructure,break;)"];
"1000335" [label="(Call,itr += etd->bLength)"];
"1000294" [label="(Identifier,itr)"];
"1000367" [label="(ControlStructure,if (wusbhc->ccm1_etd == NULL))"];
"1000297" [label="(Call,top - itr)"];
"1000331" [label="(Call,sizeof(*etd))"];
"1000291" [label="(Block,)"];
"1000372" [label="(Identifier,NULL)"];
"1000381" [label="(MethodReturn,static int)"];
"1000373" [label="(Block,)"];
"1000380" [label="(Literal,0)"];
"1000303" [label="(Block,)"];
"1000295" [label="(ControlStructure,if (top - itr < sizeof(*etd)))"];
"1000323" [label="(Call,dev_err(dev, \"BUG: bad host encryption descriptor; \"\n\t\t\t\t\"descriptor is too short \"\n\t\t\t\t\"(%zu vs %zu needed)\n\",\n\t\t\t\t(size_t)etd->bLength, sizeof(*etd)))"];
"1000305" [label="(Identifier,dev)"];
"1000369" [label="(Call,wusbhc->ccm1_etd)"];
"1000359" [label="(Call,wusbhc->ccm1_etd)"];
"1000337" [label="(Call,etd->bLength)"];
"1000290" [label="(Identifier,top)"];
"1000324" [label="(Identifier,dev)"];
"1000271" [label="(Call,top = (void *) secd + le16_to_cpu(secd->wTotalLength))"];
"1000309" [label="(Identifier,itr)"];
"1000308" [label="(Identifier,top)"];
"1000289" [label="(Identifier,itr)"];
"1000298" [label="(Identifier,top)"];
"1000296" [label="(Call,top - itr < sizeof(*etd))"];
"1000312" [label="(Identifier,etd)"];
"1000299" [label="(Identifier,itr)"];
"1000376" [label="(Literal,\"E: host doesn't support CCM-1 crypto\n\")"];
"1000375" [label="(Identifier,dev)"];
"1000300" [label="(Call,sizeof(*etd))"];
"1000341" [label="(Identifier,bytes)"];
"1000293" [label="(Identifier,etd)"];
"1000304" [label="(Call,dev_err(dev, \"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\",\n\t\t\t\ttop - itr, sizeof(*etd)))"];
"1000310" [label="(Call,sizeof(*etd))"];
"1000322" [label="(Block,)"];
"1000365" [label="(Literal,\"supported encryption types: %s\n\")"];
"1000358" [label="(Call,wusbhc->ccm1_etd = etd)"];
"1000368" [label="(Call,wusbhc->ccm1_etd == NULL)"];
"1000288" [label="(Call,itr < top)"];
"1000306" [label="(Literal,\"BUG: bad host security descriptor; \"\n\t\t\t\t\"not enough data (%zu vs %zu left)\n\")"];
"1000313" [label="(ControlStructure,break;)"];
"1000333" [label="(Identifier,etd)"];
"1000317" [label="(Identifier,etd)"];
"1000105" [label="(Block,)"];
"1000336" [label="(Identifier,itr)"];
"1000328" [label="(Call,etd->bLength)"];
"1000262" [label="(Call,itr = (void *) secd + sizeof(*secd))"];
"1000363" [label="(Call,dev_info(dev, \"supported encryption types: %s\n\", buf))"];
"1000378" [label="(Literal,0)"];
"1000123" [label="(Call,*dev = &usb_dev->dev)"];
"1000302" [label="(Identifier,etd)"];
"1000366" [label="(Identifier,buf)"];
"1000364" [label="(Identifier,dev)"];
"1000315" -> "1000314"  [label="AST: "];
"1000315" -> "1000319"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000319" -> "1000315"  [label="AST: "];
"1000324" -> "1000315"  [label="CFG: "];
"1000336" -> "1000315"  [label="CFG: "];
"1000315" -> "1000381"  [label="DDG: "];
"1000315" -> "1000326"  [label="DDG: "];
"1000315" -> "1000335"  [label="DDG: "];
"1000326" -> "1000323"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000333" -> "1000326"  [label="CFG: "];
"1000326" -> "1000381"  [label="DDG: "];
"1000326" -> "1000323"  [label="DDG: "];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000331"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000331" -> "1000323"  [label="AST: "];
"1000334" -> "1000323"  [label="CFG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000323" -> "1000381"  [label="DDG: "];
"1000123" -> "1000323"  [label="DDG: "];
"1000323" -> "1000363"  [label="DDG: "];
"1000363" -> "1000105"  [label="AST: "];
"1000363" -> "1000366"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000365" -> "1000363"  [label="AST: "];
"1000366" -> "1000363"  [label="AST: "];
"1000370" -> "1000363"  [label="CFG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000363" -> "1000381"  [label="DDG: "];
"1000304" -> "1000363"  [label="DDG: "];
"1000123" -> "1000363"  [label="DDG: "];
"1000363" -> "1000374"  [label="DDG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000374" -> "1000376"  [label="CFG: "];
"1000375" -> "1000374"  [label="AST: "];
"1000376" -> "1000374"  [label="AST: "];
"1000378" -> "1000374"  [label="CFG: "];
"1000374" -> "1000381"  [label="DDG: "];
"1000374" -> "1000381"  [label="DDG: "];
"1000335" -> "1000291"  [label="AST: "];
"1000335" -> "1000337"  [label="CFG: "];
"1000336" -> "1000335"  [label="AST: "];
"1000337" -> "1000335"  [label="AST: "];
"1000341" -> "1000335"  [label="CFG: "];
"1000335" -> "1000381"  [label="DDG: "];
"1000335" -> "1000288"  [label="DDG: "];
"1000297" -> "1000335"  [label="DDG: "];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000293" -> "1000288"  [label="CFG: "];
"1000364" -> "1000288"  [label="CFG: "];
"1000288" -> "1000381"  [label="DDG: "];
"1000288" -> "1000381"  [label="DDG: "];
"1000288" -> "1000381"  [label="DDG: "];
"1000262" -> "1000288"  [label="DDG: "];
"1000297" -> "1000288"  [label="DDG: "];
"1000271" -> "1000288"  [label="DDG: "];
"1000288" -> "1000292"  [label="DDG: "];
"1000288" -> "1000297"  [label="DDG: "];
"1000288" -> "1000297"  [label="DDG: "];
"1000292" -> "1000291"  [label="AST: "];
"1000292" -> "1000294"  [label="CFG: "];
"1000293" -> "1000292"  [label="AST: "];
"1000294" -> "1000292"  [label="AST: "];
"1000298" -> "1000292"  [label="CFG: "];
"1000292" -> "1000381"  [label="DDG: "];
"1000292" -> "1000358"  [label="DDG: "];
"1000358" -> "1000291"  [label="AST: "];
"1000358" -> "1000362"  [label="CFG: "];
"1000359" -> "1000358"  [label="AST: "];
"1000362" -> "1000358"  [label="AST: "];
"1000289" -> "1000358"  [label="CFG: "];
"1000358" -> "1000381"  [label="DDG: "];
"1000358" -> "1000368"  [label="DDG: "];
"1000368" -> "1000367"  [label="AST: "];
"1000368" -> "1000372"  [label="CFG: "];
"1000369" -> "1000368"  [label="AST: "];
"1000372" -> "1000368"  [label="AST: "];
"1000375" -> "1000368"  [label="CFG: "];
"1000380" -> "1000368"  [label="CFG: "];
"1000368" -> "1000381"  [label="DDG: "];
"1000368" -> "1000381"  [label="DDG: "];
"1000368" -> "1000381"  [label="DDG: "];
"1000297" -> "1000296"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000298" -> "1000297"  [label="AST: "];
"1000299" -> "1000297"  [label="AST: "];
"1000302" -> "1000297"  [label="CFG: "];
"1000297" -> "1000381"  [label="DDG: "];
"1000297" -> "1000381"  [label="DDG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000297" -> "1000296"  [label="DDG: "];
"1000297" -> "1000307"  [label="DDG: "];
"1000297" -> "1000307"  [label="DDG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000296" -> "1000300"  [label="CFG: "];
"1000300" -> "1000296"  [label="AST: "];
"1000305" -> "1000296"  [label="CFG: "];
"1000317" -> "1000296"  [label="CFG: "];
"1000296" -> "1000381"  [label="DDG: "];
"1000296" -> "1000381"  [label="DDG: "];
"1000307" -> "1000304"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000312" -> "1000307"  [label="CFG: "];
"1000307" -> "1000381"  [label="DDG: "];
"1000307" -> "1000381"  [label="DDG: "];
"1000307" -> "1000304"  [label="DDG: "];
"1000307" -> "1000304"  [label="DDG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000304" -> "1000310"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000306" -> "1000304"  [label="AST: "];
"1000310" -> "1000304"  [label="AST: "];
"1000313" -> "1000304"  [label="CFG: "];
"1000304" -> "1000381"  [label="DDG: "];
"1000304" -> "1000381"  [label="DDG: "];
"1000123" -> "1000304"  [label="DDG: "];
}
