digraph "0_linux_704620afc70cf47abb9d6a1a57f3825d2bca49cf_0@pointer" {
"1000137" [label="(Call,header->bDescriptorType == type)"];
"1000103" [label="(MethodParameterIn,unsigned char type)"];
"1000136" [label="(Call,header->bDescriptorType == type && header->bLength >= minsize)"];
"1000137" [label="(Call,header->bDescriptorType == type)"];
"1000167" [label="(MethodReturn,int)"];
"1000150" [label="(Identifier,ptr)"];
"1000138" [label="(Call,header->bDescriptorType)"];
"1000155" [label="(Identifier,buffer)"];
"1000135" [label="(ControlStructure,if (header->bDescriptorType == type && header->bLength >= minsize))"];
"1000141" [label="(Identifier,type)"];
"1000142" [label="(Call,header->bLength >= minsize)"];
"1000144" [label="(Identifier,header)"];
"1000136" [label="(Call,header->bDescriptorType == type && header->bLength >= minsize)"];
"1000103" [label="(MethodParameterIn,unsigned char type)"];
"1000137" -> "1000136"  [label="AST: "];
"1000137" -> "1000141"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000141" -> "1000137"  [label="AST: "];
"1000144" -> "1000137"  [label="CFG: "];
"1000136" -> "1000137"  [label="CFG: "];
"1000137" -> "1000167"  [label="DDG: type"];
"1000137" -> "1000167"  [label="DDG: header->bDescriptorType"];
"1000137" -> "1000136"  [label="DDG: header->bDescriptorType"];
"1000137" -> "1000136"  [label="DDG: type"];
"1000103" -> "1000137"  [label="DDG: type"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000167"  [label="DDG: type"];
"1000136" -> "1000135"  [label="AST: "];
"1000136" -> "1000142"  [label="CFG: "];
"1000142" -> "1000136"  [label="AST: "];
"1000150" -> "1000136"  [label="CFG: "];
"1000155" -> "1000136"  [label="CFG: "];
"1000136" -> "1000167"  [label="DDG: header->bLength >= minsize"];
"1000136" -> "1000167"  [label="DDG: header->bDescriptorType == type && header->bLength >= minsize"];
"1000136" -> "1000167"  [label="DDG: header->bDescriptorType == type"];
"1000142" -> "1000136"  [label="DDG: header->bLength"];
"1000142" -> "1000136"  [label="DDG: minsize"];
}
