digraph "0_miniupnp_140ee8d2204b383279f854802b27bdb41c1d5d1a@pointer" {
"1000212" [label="(Call,p+l)"];
"1000204" [label="(Call,DECODELENGTH_CHECKLIMIT(l, p, buf + n))"];
"1000199" [label="(Call,p = buf + 1)"];
"1000146" [label="(Call,read(req->socket, buf, sizeof(buf)))"];
"1000179" [label="(Call,n==0)"];
"1000154" [label="(Call,n<0)"];
"1000144" [label="(Call,n = read(req->socket, buf, sizeof(buf)))"];
"1000204" [label="(Call,DECODELENGTH_CHECKLIMIT(l, p, buf + n))"];
"1000116" [label="(Block,)"];
"1000161" [label="(Identifier,errno)"];
"1001044" [label="(Call,close(req->socket))"];
"1000194" [label="(Call,type = buf[0])"];
"1000156" [label="(Literal,0)"];
"1000709" [label="(Call,DECODELENGTH_CHECKLIMIT(l, p, buf + n))"];
"1000150" [label="(Identifier,buf)"];
"1000200" [label="(Identifier,p)"];
"1000184" [label="(Identifier,LOG_INFO)"];
"1000850" [label="(Call,p+l > buf+n)"];
"1000155" [label="(Identifier,n)"];
"1000212" [label="(Call,p+l)"];
"1000712" [label="(Call,buf + n)"];
"1000191" [label="(Identifier,t)"];
"1000776" [label="(Call,DECODELENGTH_CHECKLIMIT(l, p, buf + n))"];
"1000699" [label="(Call,p >= buf + n)"];
"1000211" [label="(Call,p+l > buf+n)"];
"1000171" [label="(Call,syslog(LOG_ERR, \"(s=%d) processRequest(): read(): %m\", req->socket))"];
"1000145" [label="(Identifier,n)"];
"1000214" [label="(Identifier,l)"];
"1000854" [label="(Call,buf+n)"];
"1000183" [label="(Call,syslog(LOG_INFO, \"(s=%d) request connection closed\", req->socket))"];
"1001055" [label="(MethodReturn,void)"];
"1000178" [label="(ControlStructure,if(n==0))"];
"1000144" [label="(Call,n = read(req->socket, buf, sizeof(buf)))"];
"1000205" [label="(Identifier,l)"];
"1000236" [label="(Call,syslog(LOG_INFO, \"(s=%d) request type=%d str='%.*s'\",\n\t       req->socket, type, l, p))"];
"1000201" [label="(Call,buf + 1)"];
"1000199" [label="(Call,p = buf + 1)"];
"1000783" [label="(Call,p+l > buf+n)"];
"1000213" [label="(Identifier,p)"];
"1000787" [label="(Call,buf+n)"];
"1000146" [label="(Call,read(req->socket, buf, sizeof(buf)))"];
"1000716" [label="(Call,p+l > buf+n)"];
"1000215" [label="(Call,buf+n)"];
"1000843" [label="(Call,DECODELENGTH_CHECKLIMIT(l, p, buf + n))"];
"1000206" [label="(Identifier,p)"];
"1000180" [label="(Identifier,n)"];
"1000846" [label="(Call,buf + n)"];
"1000153" [label="(ControlStructure,if(n<0))"];
"1000701" [label="(Call,buf + n)"];
"1000154" [label="(Call,n<0)"];
"1000720" [label="(Call,buf+n)"];
"1000225" [label="(Call,l == 0)"];
"1000216" [label="(Identifier,buf)"];
"1000779" [label="(Call,buf + n)"];
"1000147" [label="(Call,req->socket)"];
"1000179" [label="(Call,n==0)"];
"1000181" [label="(Literal,0)"];
"1000151" [label="(Call,sizeof(buf))"];
"1000207" [label="(Call,buf + n)"];
"1000212" -> "1000211"  [label="AST: "];
"1000212" -> "1000214"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="CFG: "];
"1000212" -> "1001055"  [label="DDG: l"];
"1000212" -> "1001055"  [label="DDG: p"];
"1000204" -> "1000212"  [label="DDG: p"];
"1000204" -> "1000212"  [label="DDG: l"];
"1000204" -> "1000116"  [label="AST: "];
"1000204" -> "1000207"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000207" -> "1000204"  [label="AST: "];
"1000213" -> "1000204"  [label="CFG: "];
"1000204" -> "1001055"  [label="DDG: buf + n"];
"1000204" -> "1001055"  [label="DDG: DECODELENGTH_CHECKLIMIT(l, p, buf + n)"];
"1000199" -> "1000204"  [label="DDG: p"];
"1000146" -> "1000204"  [label="DDG: buf"];
"1000179" -> "1000204"  [label="DDG: n"];
"1000204" -> "1000211"  [label="DDG: p"];
"1000204" -> "1000211"  [label="DDG: l"];
"1000204" -> "1000225"  [label="DDG: l"];
"1000204" -> "1000236"  [label="DDG: p"];
"1000199" -> "1000116"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000205" -> "1000199"  [label="CFG: "];
"1000199" -> "1001055"  [label="DDG: buf + 1"];
"1000146" -> "1000199"  [label="DDG: buf"];
"1000146" -> "1000144"  [label="AST: "];
"1000146" -> "1000151"  [label="CFG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000150" -> "1000146"  [label="AST: "];
"1000151" -> "1000146"  [label="AST: "];
"1000144" -> "1000146"  [label="CFG: "];
"1000146" -> "1001055"  [label="DDG: buf"];
"1000146" -> "1001055"  [label="DDG: req->socket"];
"1000146" -> "1000144"  [label="DDG: req->socket"];
"1000146" -> "1000144"  [label="DDG: buf"];
"1000146" -> "1000171"  [label="DDG: req->socket"];
"1000146" -> "1000183"  [label="DDG: req->socket"];
"1000146" -> "1000194"  [label="DDG: buf"];
"1000146" -> "1000201"  [label="DDG: buf"];
"1000146" -> "1000207"  [label="DDG: buf"];
"1000146" -> "1000211"  [label="DDG: buf"];
"1000146" -> "1000215"  [label="DDG: buf"];
"1000146" -> "1000236"  [label="DDG: req->socket"];
"1000146" -> "1000699"  [label="DDG: buf"];
"1000146" -> "1000701"  [label="DDG: buf"];
"1000146" -> "1000709"  [label="DDG: buf"];
"1000146" -> "1000712"  [label="DDG: buf"];
"1000146" -> "1000716"  [label="DDG: buf"];
"1000146" -> "1000720"  [label="DDG: buf"];
"1000146" -> "1000776"  [label="DDG: buf"];
"1000146" -> "1000779"  [label="DDG: buf"];
"1000146" -> "1000783"  [label="DDG: buf"];
"1000146" -> "1000787"  [label="DDG: buf"];
"1000146" -> "1000843"  [label="DDG: buf"];
"1000146" -> "1000846"  [label="DDG: buf"];
"1000146" -> "1000850"  [label="DDG: buf"];
"1000146" -> "1000854"  [label="DDG: buf"];
"1000146" -> "1001044"  [label="DDG: req->socket"];
"1000179" -> "1000178"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000181" -> "1000179"  [label="AST: "];
"1000184" -> "1000179"  [label="CFG: "];
"1000191" -> "1000179"  [label="CFG: "];
"1000179" -> "1001055"  [label="DDG: n==0"];
"1000179" -> "1001055"  [label="DDG: n"];
"1000154" -> "1000179"  [label="DDG: n"];
"1000179" -> "1000207"  [label="DDG: n"];
"1000179" -> "1000211"  [label="DDG: n"];
"1000179" -> "1000215"  [label="DDG: n"];
"1000179" -> "1000699"  [label="DDG: n"];
"1000179" -> "1000701"  [label="DDG: n"];
"1000179" -> "1000709"  [label="DDG: n"];
"1000179" -> "1000712"  [label="DDG: n"];
"1000179" -> "1000716"  [label="DDG: n"];
"1000179" -> "1000720"  [label="DDG: n"];
"1000179" -> "1000776"  [label="DDG: n"];
"1000179" -> "1000779"  [label="DDG: n"];
"1000179" -> "1000783"  [label="DDG: n"];
"1000179" -> "1000787"  [label="DDG: n"];
"1000179" -> "1000843"  [label="DDG: n"];
"1000179" -> "1000846"  [label="DDG: n"];
"1000179" -> "1000850"  [label="DDG: n"];
"1000179" -> "1000854"  [label="DDG: n"];
"1000154" -> "1000153"  [label="AST: "];
"1000154" -> "1000156"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000156" -> "1000154"  [label="AST: "];
"1000161" -> "1000154"  [label="CFG: "];
"1000180" -> "1000154"  [label="CFG: "];
"1000154" -> "1001055"  [label="DDG: n"];
"1000154" -> "1001055"  [label="DDG: n<0"];
"1000144" -> "1000154"  [label="DDG: n"];
"1000144" -> "1000116"  [label="AST: "];
"1000145" -> "1000144"  [label="AST: "];
"1000155" -> "1000144"  [label="CFG: "];
"1000144" -> "1001055"  [label="DDG: read(req->socket, buf, sizeof(buf))"];
}
