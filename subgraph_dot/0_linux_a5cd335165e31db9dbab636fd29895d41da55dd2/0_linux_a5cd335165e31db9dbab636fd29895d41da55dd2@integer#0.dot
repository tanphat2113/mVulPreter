digraph "0_linux_a5cd335165e31db9dbab636fd29895d41da55dd2@integer" {
"1000227" [label="(Call,clips = kzalloc(num_clips * sizeof(*clips), GFP_KERNEL))"];
"1000229" [label="(Call,kzalloc(num_clips * sizeof(*clips), GFP_KERNEL))"];
"1000230" [label="(Call,num_clips * sizeof(*clips))"];
"1000215" [label="(Call,num_clips < 0)"];
"1000209" [label="(Call,num_clips && clips_ptr)"];
"1000177" [label="(Call,!num_clips)"];
"1000161" [label="(Call,num_clips = r->num_clips)"];
"1000199" [label="(Call,num_clips % 2)"];
"1000179" [label="(Call,!clips_ptr)"];
"1000166" [label="(Call,clips_ptr = (struct drm_clip_rect *)(unsigned long)r->clips_ptr)"];
"1000168" [label="(Call,(struct drm_clip_rect *)(unsigned long)r->clips_ptr)"];
"1000170" [label="(Call,(unsigned long)r->clips_ptr)"];
"1000218" [label="(Call,num_clips > DRM_MODE_FB_DIRTY_MAX_CLIPS)"];
"1000237" [label="(Call,!clips)"];
"1000247" [label="(Call,copy_from_user(clips, clips_ptr,\n\t\t\t\t     num_clips * sizeof(*clips)))"];
"1000245" [label="(Call,ret = copy_from_user(clips, clips_ptr,\n\t\t\t\t     num_clips * sizeof(*clips)))"];
"1000272" [label="(Call,fb->funcs->dirty(fb, file_priv, flags, r->color,\n\t\t\t\t       clips, num_clips))"];
"1000270" [label="(Call,ret = fb->funcs->dirty(fb, file_priv, flags, r->color,\n\t\t\t\t       clips, num_clips))"];
"1000299" [label="(Return,return ret;)"];
"1000289" [label="(Call,kfree(clips))"];
"1000203" [label="(Call,ret = -EINVAL)"];
"1000157" [label="(Call,fb = obj_to_fb(obj))"];
"1000258" [label="(Call,ret = -EFAULT)"];
"1000222" [label="(Call,ret = -EINVAL)"];
"1000180" [label="(Identifier,clips_ptr)"];
"1000273" [label="(Identifier,fb)"];
"1000248" [label="(Identifier,clips)"];
"1000170" [label="(Call,(unsigned long)r->clips_ptr)"];
"1000269" [label="(Block,)"];
"1000241" [label="(Identifier,ret)"];
"1000301" [label="(MethodReturn,int)"];
"1000300" [label="(Identifier,ret)"];
"1000240" [label="(Call,ret = -ENOMEM)"];
"1000290" [label="(Identifier,clips)"];
"1000212" [label="(Block,)"];
"1000266" [label="(Identifier,fb)"];
"1000178" [label="(Identifier,num_clips)"];
"1000219" [label="(Identifier,num_clips)"];
"1000200" [label="(Identifier,num_clips)"];
"1000199" [label="(Call,num_clips % 2)"];
"1000291" [label="(JumpTarget,out_err1:)"];
"1000218" [label="(Call,num_clips > DRM_MODE_FB_DIRTY_MAX_CLIPS)"];
"1000272" [label="(Call,fb->funcs->dirty(fb, file_priv, flags, r->color,\n\t\t\t\t       clips, num_clips))"];
"1000235" [label="(Identifier,GFP_KERNEL)"];
"1000105" [label="(Block,)"];
"1000214" [label="(Call,num_clips < 0 || num_clips > DRM_MODE_FB_DIRTY_MAX_CLIPS)"];
"1000246" [label="(Identifier,ret)"];
"1000289" [label="(Call,kfree(clips))"];
"1000231" [label="(Identifier,num_clips)"];
"1000229" [label="(Call,kzalloc(num_clips * sizeof(*clips), GFP_KERNEL))"];
"1000228" [label="(Identifier,clips)"];
"1000237" [label="(Call,!clips)"];
"1000208" [label="(ControlStructure,if (num_clips && clips_ptr))"];
"1000249" [label="(Identifier,clips_ptr)"];
"1000270" [label="(Call,ret = fb->funcs->dirty(fb, file_priv, flags, r->color,\n\t\t\t\t       clips, num_clips))"];
"1000274" [label="(Identifier,file_priv)"];
"1000196" [label="(Call,flags & DRM_MODE_FB_DIRTY_ANNOTATE_COPY)"];
"1000162" [label="(Identifier,num_clips)"];
"1000166" [label="(Call,clips_ptr = (struct drm_clip_rect *)(unsigned long)r->clips_ptr)"];
"1000176" [label="(Call,!num_clips != !clips_ptr)"];
"1000168" [label="(Call,(struct drm_clip_rect *)(unsigned long)r->clips_ptr)"];
"1000276" [label="(Call,r->color)"];
"1000217" [label="(Literal,0)"];
"1000299" [label="(Return,return ret;)"];
"1000227" [label="(Call,clips = kzalloc(num_clips * sizeof(*clips), GFP_KERNEL))"];
"1000108" [label="(Call,*clips = NULL)"];
"1000210" [label="(Identifier,num_clips)"];
"1000172" [label="(Call,r->clips_ptr)"];
"1000236" [label="(ControlStructure,if (!clips))"];
"1000271" [label="(Identifier,ret)"];
"1000215" [label="(Call,num_clips < 0)"];
"1000211" [label="(Identifier,clips_ptr)"];
"1000195" [label="(Call,flags & DRM_MODE_FB_DIRTY_ANNOTATE_COPY && (num_clips % 2))"];
"1000275" [label="(Identifier,flags)"];
"1000256" [label="(Identifier,ret)"];
"1000247" [label="(Call,copy_from_user(clips, clips_ptr,\n\t\t\t\t     num_clips * sizeof(*clips)))"];
"1000104" [label="(MethodParameterIn,struct drm_file *file_priv)"];
"1000283" [label="(Call,ret = -ENOSYS)"];
"1000161" [label="(Call,num_clips = r->num_clips)"];
"1000163" [label="(Call,r->num_clips)"];
"1000230" [label="(Call,num_clips * sizeof(*clips))"];
"1000182" [label="(Call,ret = -EINVAL)"];
"1000250" [label="(Call,num_clips * sizeof(*clips))"];
"1000232" [label="(Call,sizeof(*clips))"];
"1000288" [label="(JumpTarget,out_err2:)"];
"1000201" [label="(Literal,2)"];
"1000167" [label="(Identifier,clips_ptr)"];
"1000280" [label="(Identifier,num_clips)"];
"1000279" [label="(Identifier,clips)"];
"1000179" [label="(Call,!clips_ptr)"];
"1000177" [label="(Call,!num_clips)"];
"1000220" [label="(Identifier,DRM_MODE_FB_DIRTY_MAX_CLIPS)"];
"1000152" [label="(Call,ret = -EINVAL)"];
"1000245" [label="(Call,ret = copy_from_user(clips, clips_ptr,\n\t\t\t\t     num_clips * sizeof(*clips)))"];
"1000216" [label="(Identifier,num_clips)"];
"1000209" [label="(Call,num_clips && clips_ptr)"];
"1000238" [label="(Identifier,clips)"];
"1000227" -> "1000212"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000238" -> "1000227"  [label="CFG: "];
"1000227" -> "1000301"  [label="DDG: kzalloc(num_clips * sizeof(*clips), GFP_KERNEL)"];
"1000229" -> "1000227"  [label="DDG: num_clips * sizeof(*clips)"];
"1000229" -> "1000227"  [label="DDG: GFP_KERNEL"];
"1000227" -> "1000237"  [label="DDG: clips"];
"1000229" -> "1000235"  [label="CFG: "];
"1000230" -> "1000229"  [label="AST: "];
"1000235" -> "1000229"  [label="AST: "];
"1000229" -> "1000301"  [label="DDG: GFP_KERNEL"];
"1000229" -> "1000301"  [label="DDG: num_clips * sizeof(*clips)"];
"1000230" -> "1000229"  [label="DDG: num_clips"];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000235" -> "1000230"  [label="CFG: "];
"1000230" -> "1000301"  [label="DDG: num_clips"];
"1000215" -> "1000230"  [label="DDG: num_clips"];
"1000218" -> "1000230"  [label="DDG: num_clips"];
"1000230" -> "1000250"  [label="DDG: num_clips"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000217"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000217" -> "1000215"  [label="AST: "];
"1000219" -> "1000215"  [label="CFG: "];
"1000214" -> "1000215"  [label="CFG: "];
"1000215" -> "1000301"  [label="DDG: num_clips"];
"1000215" -> "1000214"  [label="DDG: num_clips"];
"1000215" -> "1000214"  [label="DDG: 0"];
"1000209" -> "1000215"  [label="DDG: num_clips"];
"1000215" -> "1000218"  [label="DDG: num_clips"];
"1000209" -> "1000208"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000216" -> "1000209"  [label="CFG: "];
"1000266" -> "1000209"  [label="CFG: "];
"1000209" -> "1000301"  [label="DDG: num_clips && clips_ptr"];
"1000209" -> "1000301"  [label="DDG: num_clips"];
"1000209" -> "1000301"  [label="DDG: clips_ptr"];
"1000177" -> "1000209"  [label="DDG: num_clips"];
"1000199" -> "1000209"  [label="DDG: num_clips"];
"1000179" -> "1000209"  [label="DDG: clips_ptr"];
"1000209" -> "1000247"  [label="DDG: clips_ptr"];
"1000209" -> "1000272"  [label="DDG: num_clips"];
"1000177" -> "1000176"  [label="AST: "];
"1000177" -> "1000178"  [label="CFG: "];
"1000178" -> "1000177"  [label="AST: "];
"1000180" -> "1000177"  [label="CFG: "];
"1000177" -> "1000301"  [label="DDG: num_clips"];
"1000177" -> "1000176"  [label="DDG: num_clips"];
"1000161" -> "1000177"  [label="DDG: num_clips"];
"1000177" -> "1000199"  [label="DDG: num_clips"];
"1000161" -> "1000105"  [label="AST: "];
"1000161" -> "1000163"  [label="CFG: "];
"1000162" -> "1000161"  [label="AST: "];
"1000163" -> "1000161"  [label="AST: "];
"1000167" -> "1000161"  [label="CFG: "];
"1000161" -> "1000301"  [label="DDG: r->num_clips"];
"1000199" -> "1000195"  [label="AST: "];
"1000199" -> "1000201"  [label="CFG: "];
"1000200" -> "1000199"  [label="AST: "];
"1000201" -> "1000199"  [label="AST: "];
"1000195" -> "1000199"  [label="CFG: "];
"1000199" -> "1000301"  [label="DDG: num_clips"];
"1000199" -> "1000195"  [label="DDG: num_clips"];
"1000199" -> "1000195"  [label="DDG: 2"];
"1000179" -> "1000176"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000176" -> "1000179"  [label="CFG: "];
"1000179" -> "1000301"  [label="DDG: clips_ptr"];
"1000179" -> "1000176"  [label="DDG: clips_ptr"];
"1000166" -> "1000179"  [label="DDG: clips_ptr"];
"1000166" -> "1000105"  [label="AST: "];
"1000166" -> "1000168"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000178" -> "1000166"  [label="CFG: "];
"1000166" -> "1000301"  [label="DDG: (struct drm_clip_rect *)(unsigned long)r->clips_ptr"];
"1000168" -> "1000166"  [label="DDG: (unsigned long)r->clips_ptr"];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000168" -> "1000301"  [label="DDG: (unsigned long)r->clips_ptr"];
"1000170" -> "1000168"  [label="DDG: r->clips_ptr"];
"1000170" -> "1000172"  [label="CFG: "];
"1000171" -> "1000170"  [label="AST: "];
"1000172" -> "1000170"  [label="AST: "];
"1000170" -> "1000301"  [label="DDG: r->clips_ptr"];
"1000218" -> "1000214"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000214" -> "1000218"  [label="CFG: "];
"1000218" -> "1000301"  [label="DDG: num_clips"];
"1000218" -> "1000301"  [label="DDG: DRM_MODE_FB_DIRTY_MAX_CLIPS"];
"1000218" -> "1000214"  [label="DDG: num_clips"];
"1000218" -> "1000214"  [label="DDG: DRM_MODE_FB_DIRTY_MAX_CLIPS"];
"1000237" -> "1000236"  [label="AST: "];
"1000237" -> "1000238"  [label="CFG: "];
"1000238" -> "1000237"  [label="AST: "];
"1000241" -> "1000237"  [label="CFG: "];
"1000246" -> "1000237"  [label="CFG: "];
"1000237" -> "1000301"  [label="DDG: !clips"];
"1000237" -> "1000301"  [label="DDG: clips"];
"1000237" -> "1000247"  [label="DDG: clips"];
"1000247" -> "1000245"  [label="AST: "];
"1000247" -> "1000250"  [label="CFG: "];
"1000248" -> "1000247"  [label="AST: "];
"1000249" -> "1000247"  [label="AST: "];
"1000250" -> "1000247"  [label="AST: "];
"1000245" -> "1000247"  [label="CFG: "];
"1000247" -> "1000301"  [label="DDG: num_clips * sizeof(*clips)"];
"1000247" -> "1000301"  [label="DDG: clips_ptr"];
"1000247" -> "1000245"  [label="DDG: clips"];
"1000247" -> "1000245"  [label="DDG: clips_ptr"];
"1000247" -> "1000245"  [label="DDG: num_clips * sizeof(*clips)"];
"1000250" -> "1000247"  [label="DDG: num_clips"];
"1000247" -> "1000272"  [label="DDG: clips"];
"1000247" -> "1000289"  [label="DDG: clips"];
"1000245" -> "1000212"  [label="AST: "];
"1000246" -> "1000245"  [label="AST: "];
"1000256" -> "1000245"  [label="CFG: "];
"1000245" -> "1000301"  [label="DDG: copy_from_user(clips, clips_ptr,\n\t\t\t\t     num_clips * sizeof(*clips))"];
"1000272" -> "1000270"  [label="AST: "];
"1000272" -> "1000280"  [label="CFG: "];
"1000273" -> "1000272"  [label="AST: "];
"1000274" -> "1000272"  [label="AST: "];
"1000275" -> "1000272"  [label="AST: "];
"1000276" -> "1000272"  [label="AST: "];
"1000279" -> "1000272"  [label="AST: "];
"1000280" -> "1000272"  [label="AST: "];
"1000270" -> "1000272"  [label="CFG: "];
"1000272" -> "1000301"  [label="DDG: flags"];
"1000272" -> "1000301"  [label="DDG: num_clips"];
"1000272" -> "1000301"  [label="DDG: file_priv"];
"1000272" -> "1000301"  [label="DDG: r->color"];
"1000272" -> "1000301"  [label="DDG: fb"];
"1000272" -> "1000270"  [label="DDG: fb"];
"1000272" -> "1000270"  [label="DDG: num_clips"];
"1000272" -> "1000270"  [label="DDG: flags"];
"1000272" -> "1000270"  [label="DDG: clips"];
"1000272" -> "1000270"  [label="DDG: r->color"];
"1000272" -> "1000270"  [label="DDG: file_priv"];
"1000157" -> "1000272"  [label="DDG: fb"];
"1000104" -> "1000272"  [label="DDG: file_priv"];
"1000196" -> "1000272"  [label="DDG: flags"];
"1000108" -> "1000272"  [label="DDG: clips"];
"1000250" -> "1000272"  [label="DDG: num_clips"];
"1000272" -> "1000289"  [label="DDG: clips"];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000270"  [label="AST: "];
"1000288" -> "1000270"  [label="CFG: "];
"1000270" -> "1000301"  [label="DDG: fb->funcs->dirty(fb, file_priv, flags, r->color,\n\t\t\t\t       clips, num_clips)"];
"1000270" -> "1000301"  [label="DDG: ret"];
"1000270" -> "1000299"  [label="DDG: ret"];
"1000299" -> "1000105"  [label="AST: "];
"1000299" -> "1000300"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000301" -> "1000299"  [label="CFG: "];
"1000299" -> "1000301"  [label="DDG: <RET>"];
"1000300" -> "1000299"  [label="DDG: ret"];
"1000258" -> "1000299"  [label="DDG: ret"];
"1000222" -> "1000299"  [label="DDG: ret"];
"1000283" -> "1000299"  [label="DDG: ret"];
"1000152" -> "1000299"  [label="DDG: ret"];
"1000240" -> "1000299"  [label="DDG: ret"];
"1000203" -> "1000299"  [label="DDG: ret"];
"1000182" -> "1000299"  [label="DDG: ret"];
"1000289" -> "1000105"  [label="AST: "];
"1000289" -> "1000290"  [label="CFG: "];
"1000290" -> "1000289"  [label="AST: "];
"1000291" -> "1000289"  [label="CFG: "];
"1000289" -> "1000301"  [label="DDG: clips"];
"1000289" -> "1000301"  [label="DDG: kfree(clips)"];
"1000108" -> "1000289"  [label="DDG: clips"];
}
