digraph "0_openssl_4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2_6@pointer" {
"1000389" [label="(Call,SSL_IS_DTLS(s) && s->srtp_profile)"];
"1000390" [label="(Call,SSL_IS_DTLS(s))"];
"1000235" [label="(Call,ssl_add_serverhello_renegotiate_ext(s, ret, &el, el))"];
"1000206" [label="(Call,ssl_add_serverhello_renegotiate_ext(s, 0, &el, 0))"];
"1000124" [label="(MethodParameterIn,SSL *s)"];
"1000230" [label="(Call,s2n(el, ret))"];
"1000227" [label="(Call,s2n(TLSEXT_TYPE_renegotiate, ret))"];
"1000219" [label="(Call,CHECKLEN(ret, 4 + el, limit))"];
"1000191" [label="(Call,ret >= limit)"];
"1000187" [label="(Call,ret += 2)"];
"1000138" [label="(Call,*ret = buf)"];
"1000125" [label="(MethodParameterIn,unsigned char *buf)"];
"1000126" [label="(MethodParameterIn,unsigned char *limit)"];
"1000295" [label="(Call,tls1_get_formatlist(s, &plist, &plistlen))"];
"1000347" [label="(Call,tls_use_ticket(s))"];
"1000208" [label="(Literal,0)"];
"1000224" [label="(Identifier,limit)"];
"1000388" [label="(ControlStructure,if (SSL_IS_DTLS(s) && s->srtp_profile))"];
"1000230" [label="(Call,s2n(el, ret))"];
"1000479" [label="(Call,CHECKLEN(ret, sizeof(cryptopro_ext), limit))"];
"1000347" [label="(Call,tls_use_ticket(s))"];
"1000391" [label="(Identifier,s)"];
"1000471" [label="(Call,SSL_get_options(s))"];
"1000126" [label="(MethodParameterIn,unsigned char *limit)"];
"1000124" [label="(MethodParameterIn,SSL *s)"];
"1000237" [label="(Identifier,ret)"];
"1000506" [label="(Call,CHECKLEN(ret, 5, limit))"];
"1000343" [label="(Call,s->tlsext_ticket_expected && tls_use_ticket(s))"];
"1000228" [label="(Identifier,TLSEXT_TYPE_renegotiate)"];
"1000218" [label="(ControlStructure,if (CHECKLEN(ret, 4 + el, limit)))"];
"1000232" [label="(Identifier,ret)"];
"1000191" [label="(Call,ret >= limit)"];
"1000422" [label="(Call,s2n(el, ret))"];
"1000450" [label="(Identifier,s)"];
"1000138" [label="(Call,*ret = buf)"];
"1000743" [label="(Call,CHECKLEN(ret, 7 + len, limit))"];
"1000351" [label="(Call,CHECKLEN(ret, 4, limit))"];
"1000411" [label="(Call,CHECKLEN(ret, 4 + el, limit))"];
"1000297" [label="(Call,&plist)"];
"1000389" [label="(Call,SSL_IS_DTLS(s) && s->srtp_profile)"];
"1000392" [label="(Call,s->srtp_profile)"];
"1000413" [label="(Call,4 + el)"];
"1000227" [label="(Call,s2n(TLSEXT_TYPE_renegotiate, ret))"];
"1000188" [label="(Identifier,ret)"];
"1000206" [label="(Call,ssl_add_serverhello_renegotiate_ext(s, 0, &el, 0))"];
"1000207" [label="(Identifier,s)"];
"1000393" [label="(Identifier,s)"];
"1000303" [label="(Identifier,plistlen)"];
"1000190" [label="(ControlStructure,if (ret >= limit))"];
"1000296" [label="(Identifier,s)"];
"1000187" [label="(Call,ret += 2)"];
"1000497" [label="(Call,SSL_IS_DTLS(s))"];
"1000134" [label="(Call,*orig = buf)"];
"1000140" [label="(Identifier,buf)"];
"1000125" [label="(MethodParameterIn,unsigned char *buf)"];
"1000295" [label="(Call,tls1_get_formatlist(s, &plist, &plistlen))"];
"1000205" [label="(Call,!ssl_add_serverhello_renegotiate_ext(s, 0, &el, 0))"];
"1000202" [label="(Block,)"];
"1000219" [label="(Call,CHECKLEN(ret, 4 + el, limit))"];
"1000580" [label="(Call,CHECKLEN(ret, 4 + npalen, limit))"];
"1000199" [label="(Identifier,s)"];
"1000348" [label="(Identifier,s)"];
"1000376" [label="(Call,CHECKLEN(ret, 4, limit))"];
"1000235" [label="(Call,ssl_add_serverhello_renegotiate_ext(s, ret, &el, el))"];
"1000229" [label="(Identifier,ret)"];
"1000398" [label="(Call,ssl_add_serverhello_use_srtp_ext(s, 0, &el, 0))"];
"1000794" [label="(MethodReturn,unsigned char *)"];
"1000209" [label="(Call,&el)"];
"1000221" [label="(Call,4 + el)"];
"1000226" [label="(Identifier,NULL)"];
"1000193" [label="(Identifier,limit)"];
"1000390" [label="(Call,SSL_IS_DTLS(s))"];
"1000292" [label="(Block,)"];
"1000399" [label="(Identifier,s)"];
"1000278" [label="(Call,CHECKLEN(ret, 4, limit))"];
"1000211" [label="(Literal,0)"];
"1000238" [label="(Call,&el)"];
"1000610" [label="(Call,custom_ext_add(s, 1, &ret, limit, al))"];
"1000240" [label="(Identifier,el)"];
"1000247" [label="(Call,ret += el)"];
"1000220" [label="(Identifier,ret)"];
"1000192" [label="(Identifier,ret)"];
"1000705" [label="(Call,CHECKLEN(ret, 4, limit))"];
"1000234" [label="(Call,!ssl_add_serverhello_renegotiate_ext(s, ret, &el, el))"];
"1000312" [label="(Call,CHECKLEN(ret, 5 + plistlen, limit))"];
"1000426" [label="(Call,ssl_add_serverhello_use_srtp_ext(s, ret, &el, el))"];
"1000236" [label="(Identifier,s)"];
"1000144" [label="(Identifier,alg_k)"];
"1000299" [label="(Call,&plistlen)"];
"1000563" [label="(Call,s->ctx->next_protos_advertised_cb(s, &npa, &npalen,\n                                              s->\n                                              ctx->next_protos_advertised_cb_arg))"];
"1000195" [label="(Identifier,NULL)"];
"1000683" [label="(Call,CHECKLEN(ret, 4, limit))"];
"1000781" [label="(Call,ret - orig - 2)"];
"1000189" [label="(Literal,2)"];
"1000139" [label="(Identifier,ret)"];
"1000231" [label="(Identifier,el)"];
"1000128" [label="(Block,)"];
"1000626" [label="(Call,SSL_IS_DTLS(s))"];
"1000389" -> "1000388"  [label="AST: "];
"1000389" -> "1000390"  [label="CFG: "];
"1000389" -> "1000392"  [label="CFG: "];
"1000390" -> "1000389"  [label="AST: "];
"1000392" -> "1000389"  [label="AST: "];
"1000399" -> "1000389"  [label="CFG: "];
"1000450" -> "1000389"  [label="CFG: "];
"1000389" -> "1000794"  [label="DDG: SSL_IS_DTLS(s) && s->srtp_profile"];
"1000389" -> "1000794"  [label="DDG: s->srtp_profile"];
"1000389" -> "1000794"  [label="DDG: SSL_IS_DTLS(s)"];
"1000390" -> "1000389"  [label="DDG: s"];
"1000390" -> "1000391"  [label="CFG: "];
"1000391" -> "1000390"  [label="AST: "];
"1000393" -> "1000390"  [label="CFG: "];
"1000390" -> "1000794"  [label="DDG: s"];
"1000235" -> "1000390"  [label="DDG: s"];
"1000295" -> "1000390"  [label="DDG: s"];
"1000347" -> "1000390"  [label="DDG: s"];
"1000124" -> "1000390"  [label="DDG: s"];
"1000390" -> "1000398"  [label="DDG: s"];
"1000390" -> "1000471"  [label="DDG: s"];
"1000390" -> "1000497"  [label="DDG: s"];
"1000235" -> "1000234"  [label="AST: "];
"1000235" -> "1000240"  [label="CFG: "];
"1000236" -> "1000235"  [label="AST: "];
"1000237" -> "1000235"  [label="AST: "];
"1000238" -> "1000235"  [label="AST: "];
"1000240" -> "1000235"  [label="AST: "];
"1000234" -> "1000235"  [label="CFG: "];
"1000235" -> "1000794"  [label="DDG: ret"];
"1000235" -> "1000794"  [label="DDG: s"];
"1000235" -> "1000794"  [label="DDG: el"];
"1000235" -> "1000794"  [label="DDG: &el"];
"1000235" -> "1000234"  [label="DDG: s"];
"1000235" -> "1000234"  [label="DDG: ret"];
"1000235" -> "1000234"  [label="DDG: &el"];
"1000235" -> "1000234"  [label="DDG: el"];
"1000206" -> "1000235"  [label="DDG: s"];
"1000206" -> "1000235"  [label="DDG: &el"];
"1000124" -> "1000235"  [label="DDG: s"];
"1000230" -> "1000235"  [label="DDG: ret"];
"1000230" -> "1000235"  [label="DDG: el"];
"1000235" -> "1000247"  [label="DDG: el"];
"1000235" -> "1000247"  [label="DDG: ret"];
"1000235" -> "1000295"  [label="DDG: s"];
"1000235" -> "1000347"  [label="DDG: s"];
"1000235" -> "1000398"  [label="DDG: &el"];
"1000235" -> "1000411"  [label="DDG: el"];
"1000235" -> "1000413"  [label="DDG: el"];
"1000235" -> "1000422"  [label="DDG: el"];
"1000206" -> "1000205"  [label="AST: "];
"1000206" -> "1000211"  [label="CFG: "];
"1000207" -> "1000206"  [label="AST: "];
"1000208" -> "1000206"  [label="AST: "];
"1000209" -> "1000206"  [label="AST: "];
"1000211" -> "1000206"  [label="AST: "];
"1000205" -> "1000206"  [label="CFG: "];
"1000206" -> "1000794"  [label="DDG: &el"];
"1000206" -> "1000794"  [label="DDG: s"];
"1000206" -> "1000205"  [label="DDG: s"];
"1000206" -> "1000205"  [label="DDG: 0"];
"1000206" -> "1000205"  [label="DDG: &el"];
"1000124" -> "1000206"  [label="DDG: s"];
"1000124" -> "1000123"  [label="AST: "];
"1000124" -> "1000794"  [label="DDG: s"];
"1000124" -> "1000295"  [label="DDG: s"];
"1000124" -> "1000347"  [label="DDG: s"];
"1000124" -> "1000398"  [label="DDG: s"];
"1000124" -> "1000426"  [label="DDG: s"];
"1000124" -> "1000471"  [label="DDG: s"];
"1000124" -> "1000497"  [label="DDG: s"];
"1000124" -> "1000563"  [label="DDG: s"];
"1000124" -> "1000610"  [label="DDG: s"];
"1000124" -> "1000626"  [label="DDG: s"];
"1000230" -> "1000202"  [label="AST: "];
"1000230" -> "1000232"  [label="CFG: "];
"1000231" -> "1000230"  [label="AST: "];
"1000232" -> "1000230"  [label="AST: "];
"1000236" -> "1000230"  [label="CFG: "];
"1000230" -> "1000794"  [label="DDG: s2n(el, ret)"];
"1000227" -> "1000230"  [label="DDG: ret"];
"1000227" -> "1000202"  [label="AST: "];
"1000227" -> "1000229"  [label="CFG: "];
"1000228" -> "1000227"  [label="AST: "];
"1000229" -> "1000227"  [label="AST: "];
"1000231" -> "1000227"  [label="CFG: "];
"1000227" -> "1000794"  [label="DDG: s2n(TLSEXT_TYPE_renegotiate, ret)"];
"1000227" -> "1000794"  [label="DDG: TLSEXT_TYPE_renegotiate"];
"1000219" -> "1000227"  [label="DDG: ret"];
"1000219" -> "1000218"  [label="AST: "];
"1000219" -> "1000224"  [label="CFG: "];
"1000220" -> "1000219"  [label="AST: "];
"1000221" -> "1000219"  [label="AST: "];
"1000224" -> "1000219"  [label="AST: "];
"1000226" -> "1000219"  [label="CFG: "];
"1000228" -> "1000219"  [label="CFG: "];
"1000219" -> "1000794"  [label="DDG: 4 + el"];
"1000219" -> "1000794"  [label="DDG: CHECKLEN(ret, 4 + el, limit)"];
"1000219" -> "1000794"  [label="DDG: ret"];
"1000219" -> "1000794"  [label="DDG: limit"];
"1000191" -> "1000219"  [label="DDG: ret"];
"1000191" -> "1000219"  [label="DDG: limit"];
"1000126" -> "1000219"  [label="DDG: limit"];
"1000219" -> "1000278"  [label="DDG: limit"];
"1000219" -> "1000312"  [label="DDG: limit"];
"1000219" -> "1000351"  [label="DDG: limit"];
"1000219" -> "1000376"  [label="DDG: limit"];
"1000219" -> "1000411"  [label="DDG: limit"];
"1000219" -> "1000479"  [label="DDG: limit"];
"1000219" -> "1000506"  [label="DDG: limit"];
"1000219" -> "1000580"  [label="DDG: limit"];
"1000219" -> "1000610"  [label="DDG: limit"];
"1000191" -> "1000190"  [label="AST: "];
"1000191" -> "1000193"  [label="CFG: "];
"1000192" -> "1000191"  [label="AST: "];
"1000193" -> "1000191"  [label="AST: "];
"1000195" -> "1000191"  [label="CFG: "];
"1000199" -> "1000191"  [label="CFG: "];
"1000191" -> "1000794"  [label="DDG: ret >= limit"];
"1000191" -> "1000794"  [label="DDG: limit"];
"1000191" -> "1000794"  [label="DDG: ret"];
"1000187" -> "1000191"  [label="DDG: ret"];
"1000126" -> "1000191"  [label="DDG: limit"];
"1000191" -> "1000278"  [label="DDG: ret"];
"1000191" -> "1000278"  [label="DDG: limit"];
"1000191" -> "1000312"  [label="DDG: ret"];
"1000191" -> "1000312"  [label="DDG: limit"];
"1000191" -> "1000351"  [label="DDG: ret"];
"1000191" -> "1000351"  [label="DDG: limit"];
"1000191" -> "1000376"  [label="DDG: ret"];
"1000191" -> "1000376"  [label="DDG: limit"];
"1000191" -> "1000411"  [label="DDG: ret"];
"1000191" -> "1000411"  [label="DDG: limit"];
"1000191" -> "1000479"  [label="DDG: ret"];
"1000191" -> "1000479"  [label="DDG: limit"];
"1000191" -> "1000506"  [label="DDG: ret"];
"1000191" -> "1000506"  [label="DDG: limit"];
"1000191" -> "1000580"  [label="DDG: ret"];
"1000191" -> "1000580"  [label="DDG: limit"];
"1000191" -> "1000610"  [label="DDG: limit"];
"1000191" -> "1000683"  [label="DDG: ret"];
"1000191" -> "1000705"  [label="DDG: ret"];
"1000191" -> "1000743"  [label="DDG: ret"];
"1000191" -> "1000781"  [label="DDG: ret"];
"1000187" -> "1000128"  [label="AST: "];
"1000187" -> "1000189"  [label="CFG: "];
"1000188" -> "1000187"  [label="AST: "];
"1000189" -> "1000187"  [label="AST: "];
"1000192" -> "1000187"  [label="CFG: "];
"1000138" -> "1000187"  [label="DDG: ret"];
"1000138" -> "1000128"  [label="AST: "];
"1000138" -> "1000140"  [label="CFG: "];
"1000139" -> "1000138"  [label="AST: "];
"1000140" -> "1000138"  [label="AST: "];
"1000144" -> "1000138"  [label="CFG: "];
"1000138" -> "1000794"  [label="DDG: buf"];
"1000125" -> "1000138"  [label="DDG: buf"];
"1000125" -> "1000123"  [label="AST: "];
"1000125" -> "1000794"  [label="DDG: buf"];
"1000125" -> "1000134"  [label="DDG: buf"];
"1000126" -> "1000123"  [label="AST: "];
"1000126" -> "1000794"  [label="DDG: limit"];
"1000126" -> "1000278"  [label="DDG: limit"];
"1000126" -> "1000312"  [label="DDG: limit"];
"1000126" -> "1000351"  [label="DDG: limit"];
"1000126" -> "1000376"  [label="DDG: limit"];
"1000126" -> "1000411"  [label="DDG: limit"];
"1000126" -> "1000479"  [label="DDG: limit"];
"1000126" -> "1000506"  [label="DDG: limit"];
"1000126" -> "1000580"  [label="DDG: limit"];
"1000126" -> "1000610"  [label="DDG: limit"];
"1000126" -> "1000683"  [label="DDG: limit"];
"1000126" -> "1000705"  [label="DDG: limit"];
"1000126" -> "1000743"  [label="DDG: limit"];
"1000295" -> "1000292"  [label="AST: "];
"1000295" -> "1000299"  [label="CFG: "];
"1000296" -> "1000295"  [label="AST: "];
"1000297" -> "1000295"  [label="AST: "];
"1000299" -> "1000295"  [label="AST: "];
"1000303" -> "1000295"  [label="CFG: "];
"1000295" -> "1000794"  [label="DDG: s"];
"1000295" -> "1000794"  [label="DDG: &plistlen"];
"1000295" -> "1000794"  [label="DDG: &plist"];
"1000295" -> "1000794"  [label="DDG: tls1_get_formatlist(s, &plist, &plistlen)"];
"1000295" -> "1000347"  [label="DDG: s"];
"1000347" -> "1000343"  [label="AST: "];
"1000347" -> "1000348"  [label="CFG: "];
"1000348" -> "1000347"  [label="AST: "];
"1000343" -> "1000347"  [label="CFG: "];
"1000347" -> "1000794"  [label="DDG: s"];
"1000347" -> "1000343"  [label="DDG: s"];
}
