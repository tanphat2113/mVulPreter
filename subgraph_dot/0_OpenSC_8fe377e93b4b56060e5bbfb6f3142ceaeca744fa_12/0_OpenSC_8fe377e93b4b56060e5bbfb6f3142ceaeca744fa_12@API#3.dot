digraph "0_OpenSC_8fe377e93b4b56060e5bbfb6f3142ceaeca744fa_12@API" {
"1000283" [label="(Call,sc_file_free(auth_current_ef))"];
"1000194" [label="(Call,auth_current_ef = NULL)"];
"1000119" [label="(Call,card != NULL)"];
"1000101" [label="(MethodParameterIn,struct sc_card *card)"];
"1000122" [label="(Call,in_path != NULL)"];
"1000102" [label="(MethodParameterIn,const struct sc_path *in_path)"];
"1000119" [label="(Call,card != NULL)"];
"1000198" [label="(Identifier,rv)"];
"1000199" [label="(Call,iso_ops->select_file(card, &path, &tmp_file))"];
"1000125" [label="(Call,memcpy(&path, in_path, sizeof(struct sc_path)))"];
"1000287" [label="(Identifier,auth_current_ef)"];
"1000570" [label="(MethodReturn,RET)"];
"1000284" [label="(Identifier,auth_current_ef)"];
"1000518" [label="(Call,auth_select_file(card, &tmp_path, file_out))"];
"1000123" [label="(Identifier,in_path)"];
"1000452" [label="(Call,auth_select_file (card, &tmp_path, file_out))"];
"1000195" [label="(Identifier,auth_current_ef)"];
"1000124" [label="(Identifier,NULL)"];
"1000144" [label="(Call,sc_print_path(in_path))"];
"1000282" [label="(Block,)"];
"1000317" [label="(Call,iso_ops->select_file(card, &path, NULL))"];
"1000121" [label="(Identifier,NULL)"];
"1000194" [label="(Call,auth_current_ef = NULL)"];
"1000118" [label="(Call,card != NULL && in_path != NULL)"];
"1000191" [label="(Block,)"];
"1000101" [label="(MethodParameterIn,struct sc_card *card)"];
"1000120" [label="(Identifier,card)"];
"1000283" [label="(Call,sc_file_free(auth_current_ef))"];
"1000102" [label="(MethodParameterIn,const struct sc_path *in_path)"];
"1000196" [label="(Identifier,NULL)"];
"1000122" [label="(Call,in_path != NULL)"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000284"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000287" -> "1000283"  [label="CFG: "];
"1000283" -> "1000570"  [label="DDG: auth_current_ef"];
"1000283" -> "1000570"  [label="DDG: sc_file_free(auth_current_ef)"];
"1000194" -> "1000283"  [label="DDG: auth_current_ef"];
"1000194" -> "1000191"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000195" -> "1000194"  [label="AST: "];
"1000196" -> "1000194"  [label="AST: "];
"1000198" -> "1000194"  [label="CFG: "];
"1000194" -> "1000570"  [label="DDG: auth_current_ef"];
"1000194" -> "1000570"  [label="DDG: NULL"];
"1000119" -> "1000194"  [label="DDG: NULL"];
"1000122" -> "1000194"  [label="DDG: NULL"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000121"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000121" -> "1000119"  [label="AST: "];
"1000123" -> "1000119"  [label="CFG: "];
"1000118" -> "1000119"  [label="CFG: "];
"1000119" -> "1000570"  [label="DDG: NULL"];
"1000119" -> "1000570"  [label="DDG: card"];
"1000119" -> "1000118"  [label="DDG: card"];
"1000119" -> "1000118"  [label="DDG: NULL"];
"1000101" -> "1000119"  [label="DDG: card"];
"1000119" -> "1000122"  [label="DDG: NULL"];
"1000119" -> "1000199"  [label="DDG: card"];
"1000119" -> "1000317"  [label="DDG: card"];
"1000119" -> "1000317"  [label="DDG: NULL"];
"1000119" -> "1000452"  [label="DDG: card"];
"1000119" -> "1000518"  [label="DDG: card"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000570"  [label="DDG: card"];
"1000101" -> "1000199"  [label="DDG: card"];
"1000101" -> "1000317"  [label="DDG: card"];
"1000101" -> "1000452"  [label="DDG: card"];
"1000101" -> "1000518"  [label="DDG: card"];
"1000122" -> "1000118"  [label="AST: "];
"1000122" -> "1000124"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000124" -> "1000122"  [label="AST: "];
"1000118" -> "1000122"  [label="CFG: "];
"1000122" -> "1000570"  [label="DDG: NULL"];
"1000122" -> "1000118"  [label="DDG: in_path"];
"1000122" -> "1000118"  [label="DDG: NULL"];
"1000102" -> "1000122"  [label="DDG: in_path"];
"1000122" -> "1000125"  [label="DDG: in_path"];
"1000122" -> "1000317"  [label="DDG: NULL"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000570"  [label="DDG: in_path"];
"1000102" -> "1000125"  [label="DDG: in_path"];
"1000102" -> "1000144"  [label="DDG: in_path"];
}
