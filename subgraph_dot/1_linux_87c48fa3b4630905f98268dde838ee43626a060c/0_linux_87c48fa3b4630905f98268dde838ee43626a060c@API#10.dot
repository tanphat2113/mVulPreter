digraph "0_linux_87c48fa3b4630905f98268dde838ee43626a060c@API" {
"1000137" [label="(Call,invalidated = read_seqretry(&base->lock, sequence))"];
"1000139" [label="(Call,read_seqretry(&base->lock, sequence))"];
"1000127" [label="(Call,read_seqbegin(&base->lock))"];
"1000125" [label="(Call,sequence = read_seqbegin(&base->lock))"];
"1000154" [label="(Call,!invalidated)"];
"1000151" [label="(Call,!create && !invalidated)"];
"1000128" [label="(Call,&base->lock)"];
"1000154" [label="(Call,!invalidated)"];
"1000139" [label="(Call,read_seqretry(&base->lock, sequence))"];
"1000126" [label="(Identifier,sequence)"];
"1000127" [label="(Call,read_seqbegin(&base->lock))"];
"1000138" [label="(Identifier,invalidated)"];
"1000155" [label="(Identifier,invalidated)"];
"1000145" [label="(Call,rcu_read_unlock())"];
"1000137" [label="(Call,invalidated = read_seqretry(&base->lock, sequence))"];
"1000157" [label="(Identifier,NULL)"];
"1000144" [label="(Identifier,sequence)"];
"1000152" [label="(Call,!create)"];
"1000151" [label="(Call,!create && !invalidated)"];
"1000158" [label="(Call,write_seqlock_bh(&base->lock))"];
"1000300" [label="(MethodReturn,struct inet_peer *)"];
"1000107" [label="(Block,)"];
"1000140" [label="(Call,&base->lock)"];
"1000125" [label="(Call,sequence = read_seqbegin(&base->lock))"];
"1000133" [label="(Identifier,p)"];
"1000150" [label="(ControlStructure,if (!create && !invalidated))"];
"1000161" [label="(Identifier,base)"];
"1000137" -> "1000107"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000145" -> "1000137"  [label="CFG: "];
"1000137" -> "1000300"  [label="DDG: read_seqretry(&base->lock, sequence)"];
"1000137" -> "1000300"  [label="DDG: invalidated"];
"1000139" -> "1000137"  [label="DDG: &base->lock"];
"1000139" -> "1000137"  [label="DDG: sequence"];
"1000137" -> "1000154"  [label="DDG: invalidated"];
"1000139" -> "1000144"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000144" -> "1000139"  [label="AST: "];
"1000139" -> "1000300"  [label="DDG: &base->lock"];
"1000139" -> "1000300"  [label="DDG: sequence"];
"1000127" -> "1000139"  [label="DDG: &base->lock"];
"1000125" -> "1000139"  [label="DDG: sequence"];
"1000139" -> "1000158"  [label="DDG: &base->lock"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000125"  [label="DDG: &base->lock"];
"1000125" -> "1000107"  [label="AST: "];
"1000126" -> "1000125"  [label="AST: "];
"1000133" -> "1000125"  [label="CFG: "];
"1000125" -> "1000300"  [label="DDG: read_seqbegin(&base->lock)"];
"1000154" -> "1000151"  [label="AST: "];
"1000154" -> "1000155"  [label="CFG: "];
"1000155" -> "1000154"  [label="AST: "];
"1000151" -> "1000154"  [label="CFG: "];
"1000154" -> "1000300"  [label="DDG: invalidated"];
"1000154" -> "1000151"  [label="DDG: invalidated"];
"1000151" -> "1000150"  [label="AST: "];
"1000151" -> "1000152"  [label="CFG: "];
"1000152" -> "1000151"  [label="AST: "];
"1000157" -> "1000151"  [label="CFG: "];
"1000161" -> "1000151"  [label="CFG: "];
"1000151" -> "1000300"  [label="DDG: !create && !invalidated"];
"1000151" -> "1000300"  [label="DDG: !create"];
"1000151" -> "1000300"  [label="DDG: !invalidated"];
"1000152" -> "1000151"  [label="DDG: create"];
}
