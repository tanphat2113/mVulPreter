digraph "0_Chrome_62154472bd2c43e1790dd1bd8a527c1db9118d88_4@pointer" {
"1000148" [label="(Call,ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\")))"];
"1000108" [label="(Call,ExecutionContext::From(script_state))"];
"1000101" [label="(MethodParameterIn,ScriptState* script_state)"];
"1000150" [label="(Call,MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"))"];
"1000152" [label="(Call,DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"))"];
"1000147" [label="(Return,return ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"));)"];
"1000206" [label="(MethodReturn,ScriptPromise)"];
"1000109" [label="(Identifier,script_state)"];
"1000152" [label="(Call,DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"))"];
"1000106" [label="(Call,* context = ExecutionContext::From(script_state))"];
"1000147" [label="(Return,return ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"));)"];
"1000149" [label="(Identifier,script_state)"];
"1000150" [label="(Call,MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\"))"];
"1000154" [label="(Block,)"];
"1000187" [label="(Call,ScriptPromiseResolver>(script_state))"];
"1000101" [label="(MethodParameterIn,ScriptState* script_state)"];
"1000137" [label="(Call,ScriptPromise::Reject(\n        script_state, V8ThrowException::CreateTypeError(\n                          script_state->GetIsolate(), \"Document not active\")))"];
"1000156" [label="(Literal,\"Must be handling a user gesture to show a permission request.\")"];
"1000146" [label="(Block,)"];
"1000148" [label="(Call,ScriptPromise::RejectWithDOMException(\n        script_state,\n        MakeGarbageCollected<DOMException>(\n            DOMExceptionCode::kSecurityError,\n             \"Must be handling a user gesture to show a permission request.\")))"];
"1000153" [label="(Identifier,DOMException)"];
"1000108" [label="(Call,ExecutionContext::From(script_state))"];
"1000151" [label="(Identifier,MakeGarbageCollected)"];
"1000148" -> "1000147"  [label="AST: "];
"1000148" -> "1000150"  [label="CFG: "];
"1000149" -> "1000148"  [label="AST: "];
"1000150" -> "1000148"  [label="AST: "];
"1000147" -> "1000148"  [label="CFG: "];
"1000148" -> "1000206"  [label="DDG: "];
"1000148" -> "1000206"  [label="DDG: "];
"1000148" -> "1000206"  [label="DDG: "];
"1000148" -> "1000147"  [label="DDG: "];
"1000108" -> "1000148"  [label="DDG: "];
"1000101" -> "1000148"  [label="DDG: "];
"1000150" -> "1000148"  [label="DDG: "];
"1000150" -> "1000148"  [label="DDG: "];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000109"  [label="CFG: "];
"1000109" -> "1000108"  [label="AST: "];
"1000106" -> "1000108"  [label="CFG: "];
"1000108" -> "1000206"  [label="DDG: "];
"1000108" -> "1000106"  [label="DDG: "];
"1000101" -> "1000108"  [label="DDG: "];
"1000108" -> "1000137"  [label="DDG: "];
"1000108" -> "1000187"  [label="DDG: "];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000206"  [label="DDG: "];
"1000101" -> "1000137"  [label="DDG: "];
"1000101" -> "1000187"  [label="DDG: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000150" -> "1000206"  [label="DDG: "];
"1000150" -> "1000206"  [label="DDG: "];
"1000152" -> "1000150"  [label="DDG: "];
"1000152" -> "1000156"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000206"  [label="DDG: "];
"1000147" -> "1000146"  [label="AST: "];
"1000206" -> "1000147"  [label="CFG: "];
"1000147" -> "1000206"  [label="DDG: "];
}
