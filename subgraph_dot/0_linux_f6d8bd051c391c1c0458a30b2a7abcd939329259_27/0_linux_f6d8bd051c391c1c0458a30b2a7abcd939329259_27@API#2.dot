digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_27@API" {
"1000252" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000254" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000255" [label="(Call,sock_net(sk))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000575" [label="(Call,err < 0)"];
"1000578" [label="(Return,return err;)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000261" [label="(Identifier,err)"];
"1000458" [label="(Call,err = -EACCES)"];
"1000252" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000433" [label="(Call,security_sk_classify_flow(sk, flowi4_to_flowi(&fl4)))"];
"1000258" [label="(Call,&ipc)"];
"1000253" [label="(Identifier,err)"];
"1000577" [label="(Literal,0)"];
"1000602" [label="(MethodReturn,static int)"];
"1000450" [label="(Call,err = PTR_ERR(rt))"];
"1000324" [label="(Call,err = -EINVAL)"];
"1000574" [label="(ControlStructure,if (err < 0))"];
"1000164" [label="(Call,err = -EINVAL)"];
"1000440" [label="(Call,ip_route_output_flow(sock_net(sk), &fl4, sk))"];
"1000254" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000189" [label="(Call,err = -EAFNOSUPPORT)"];
"1000513" [label="(Call,lock_sock(sk))"];
"1000551" [label="(Call,err == -ENOBUFS)"];
"1000576" [label="(Identifier,err)"];
"1000578" [label="(Return,return err;)"];
"1000441" [label="(Call,sock_net(sk))"];
"1000257" [label="(Identifier,msg)"];
"1000255" [label="(Call,sock_net(sk))"];
"1000424" [label="(Call,err = raw_probe_proto_opt(&fl4, msg))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000575" [label="(Call,err < 0)"];
"1000579" [label="(Identifier,err)"];
"1000131" [label="(Call,err = -EMSGSIZE)"];
"1000534" [label="(Call,ip_flush_pending_frames(sk))"];
"1000581" [label="(Identifier,len)"];
"1000547" [label="(Call,ip_push_pending_frames(sk))"];
"1000562" [label="(Call,release_sock(sk))"];
"1000116" [label="(Identifier,sk)"];
"1000598" [label="(Call,err = 0)"];
"1000426" [label="(Call,raw_probe_proto_opt(&fl4, msg))"];
"1000486" [label="(Call,err = raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000517" [label="(Call,ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000256" [label="(Identifier,sk)"];
"1000470" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000113" [label="(Call,*inet = inet_sk(sk))"];
"1000357" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000140" [label="(Call,err = -EOPNOTSUPP)"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000515" [label="(Call,err = ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000251" [label="(Block,)"];
"1000559" [label="(Call,err = 0)"];
"1000207" [label="(Call,err = -EDESTADDRREQ)"];
"1000488" [label="(Call,raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000252" -> "1000251"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000261" -> "1000252"  [label="CFG: "];
"1000252" -> "1000602"  [label="DDG: ip_cmsg_send(sock_net(sk), msg, &ipc)"];
"1000254" -> "1000252"  [label="DDG: sock_net(sk)"];
"1000254" -> "1000252"  [label="DDG: msg"];
"1000254" -> "1000252"  [label="DDG: &ipc"];
"1000252" -> "1000575"  [label="DDG: err"];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000254" -> "1000602"  [label="DDG: sock_net(sk)"];
"1000254" -> "1000602"  [label="DDG: &ipc"];
"1000254" -> "1000602"  [label="DDG: msg"];
"1000255" -> "1000254"  [label="DDG: sk"];
"1000109" -> "1000254"  [label="DDG: msg"];
"1000254" -> "1000426"  [label="DDG: msg"];
"1000254" -> "1000517"  [label="DDG: &ipc"];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="CFG: "];
"1000255" -> "1000602"  [label="DDG: sk"];
"1000115" -> "1000255"  [label="DDG: sk"];
"1000108" -> "1000255"  [label="DDG: sk"];
"1000255" -> "1000357"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000602"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="DDG: sk"];
"1000108" -> "1000115"  [label="DDG: sk"];
"1000115" -> "1000357"  [label="DDG: sk"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000602"  [label="DDG: sk"];
"1000108" -> "1000357"  [label="DDG: sk"];
"1000108" -> "1000433"  [label="DDG: sk"];
"1000108" -> "1000441"  [label="DDG: sk"];
"1000108" -> "1000440"  [label="DDG: sk"];
"1000108" -> "1000470"  [label="DDG: sk"];
"1000108" -> "1000488"  [label="DDG: sk"];
"1000108" -> "1000513"  [label="DDG: sk"];
"1000108" -> "1000517"  [label="DDG: sk"];
"1000108" -> "1000534"  [label="DDG: sk"];
"1000108" -> "1000547"  [label="DDG: sk"];
"1000108" -> "1000562"  [label="DDG: sk"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000602"  [label="DDG: msg"];
"1000109" -> "1000426"  [label="DDG: msg"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000579" -> "1000575"  [label="CFG: "];
"1000581" -> "1000575"  [label="CFG: "];
"1000575" -> "1000602"  [label="DDG: err < 0"];
"1000575" -> "1000602"  [label="DDG: err"];
"1000559" -> "1000575"  [label="DDG: err"];
"1000515" -> "1000575"  [label="DDG: err"];
"1000324" -> "1000575"  [label="DDG: err"];
"1000450" -> "1000575"  [label="DDG: err"];
"1000551" -> "1000575"  [label="DDG: err"];
"1000486" -> "1000575"  [label="DDG: err"];
"1000164" -> "1000575"  [label="DDG: err"];
"1000598" -> "1000575"  [label="DDG: err"];
"1000458" -> "1000575"  [label="DDG: err"];
"1000189" -> "1000575"  [label="DDG: err"];
"1000131" -> "1000575"  [label="DDG: err"];
"1000140" -> "1000575"  [label="DDG: err"];
"1000207" -> "1000575"  [label="DDG: err"];
"1000424" -> "1000575"  [label="DDG: err"];
"1000575" -> "1000578"  [label="DDG: err"];
"1000578" -> "1000574"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000602" -> "1000578"  [label="CFG: "];
"1000578" -> "1000602"  [label="DDG: <RET>"];
"1000579" -> "1000578"  [label="DDG: err"];
}
