digraph "0_linux_f6d8bd051c391c1c0458a30b2a7abcd939329259_27@API" {
"1000254" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000255" [label="(Call,sock_net(sk))"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000252" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000575" [label="(Call,err < 0)"];
"1000578" [label="(Return,return err;)"];
"1000426" [label="(Call,raw_probe_proto_opt(&fl4, msg))"];
"1000424" [label="(Call,err = raw_probe_proto_opt(&fl4, msg))"];
"1000435" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000433" [label="(Call,security_sk_classify_flow(sk, flowi4_to_flowi(&fl4)))"];
"1000441" [label="(Call,sock_net(sk))"];
"1000440" [label="(Call,ip_route_output_flow(sock_net(sk), &fl4, sk))"];
"1000438" [label="(Call,rt = ip_route_output_flow(sock_net(sk), &fl4, sk))"];
"1000447" [label="(Call,IS_ERR(rt))"];
"1000452" [label="(Call,PTR_ERR(rt))"];
"1000450" [label="(Call,err = PTR_ERR(rt))"];
"1000571" [label="(Call,ip_rt_put(rt))"];
"1000470" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000469" [label="(Call,!sock_flag(sk, SOCK_BROADCAST))"];
"1000463" [label="(Call,rt->rt_flags & RTCF_BROADCAST && !sock_flag(sk, SOCK_BROADCAST))"];
"1000488" [label="(Call,raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000486" [label="(Call,err = raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000580" [label="(Return,return len;)"];
"1000513" [label="(Call,lock_sock(sk))"];
"1000517" [label="(Call,ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000515" [label="(Call,err = ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000534" [label="(Call,ip_flush_pending_frames(sk))"];
"1000562" [label="(Call,release_sock(sk))"];
"1000539" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000538" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000547" [label="(Call,ip_push_pending_frames(sk))"];
"1000545" [label="(Call,err = ip_push_pending_frames(sk))"];
"1000551" [label="(Call,err == -ENOBUFS)"];
"1000550" [label="(Call,err == -ENOBUFS && !inet->recverr)"];
"1000490" [label="(Call,msg->msg_iov)"];
"1000433" [label="(Call,security_sk_classify_flow(sk, flowi4_to_flowi(&fl4)))"];
"1000577" [label="(Literal,0)"];
"1000324" [label="(Call,err = -EINVAL)"];
"1000518" [label="(Identifier,sk)"];
"1000550" [label="(Call,err == -ENOBUFS && !inet->recverr)"];
"1000440" [label="(Call,ip_route_output_flow(sock_net(sk), &fl4, sk))"];
"1000254" [label="(Call,ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000564" [label="(JumpTarget,done:)"];
"1000532" [label="(ControlStructure,if (err))"];
"1000448" [label="(Identifier,rt)"];
"1000551" [label="(Call,err == -ENOBUFS)"];
"1000537" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000431" [label="(Identifier,err)"];
"1000255" [label="(Call,sock_net(sk))"];
"1000523" [label="(Identifier,len)"];
"1000454" [label="(Call,rt = NULL)"];
"1000477" [label="(Identifier,msg)"];
"1000486" [label="(Call,err = raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000517" [label="(Call,ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000545" [label="(Call,err = ip_push_pending_frames(sk))"];
"1000434" [label="(Identifier,sk)"];
"1000538" [label="(Call,!(msg->msg_flags & MSG_MORE))"];
"1000475" [label="(Call,msg->msg_flags & MSG_CONFIRM)"];
"1000471" [label="(Identifier,sk)"];
"1000527" [label="(Call,&rt)"];
"1000140" [label="(Call,err = -EOPNOTSUPP)"];
"1000427" [label="(Call,&fl4)"];
"1000251" [label="(Block,)"];
"1000573" [label="(JumpTarget,out:)"];
"1000261" [label="(Identifier,err)"];
"1000452" [label="(Call,PTR_ERR(rt))"];
"1000258" [label="(Call,&ipc)"];
"1000589" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000435" [label="(Call,flowi4_to_flowi(&fl4))"];
"1000516" [label="(Identifier,err)"];
"1000450" [label="(Call,err = PTR_ERR(rt))"];
"1000449" [label="(Block,)"];
"1000525" [label="(Call,&ipc)"];
"1000555" [label="(Call,!inet->recverr)"];
"1000543" [label="(Identifier,MSG_MORE)"];
"1000513" [label="(Call,lock_sock(sk))"];
"1000563" [label="(Identifier,sk)"];
"1000552" [label="(Identifier,err)"];
"1000548" [label="(Identifier,sk)"];
"1000529" [label="(Call,msg->msg_flags)"];
"1000578" [label="(Return,return err;)"];
"1000544" [label="(Block,)"];
"1000535" [label="(Identifier,sk)"];
"1000464" [label="(Call,rt->rt_flags & RTCF_BROADCAST)"];
"1000115" [label="(Call,inet_sk(sk))"];
"1000496" [label="(Call,msg->msg_flags)"];
"1000520" [label="(Call,msg->msg_iov)"];
"1000546" [label="(Identifier,err)"];
"1000581" [label="(Identifier,len)"];
"1000473" [label="(ControlStructure,goto done;)"];
"1000470" [label="(Call,sock_flag(sk, SOCK_BROADCAST))"];
"1000113" [label="(Call,*inet = inet_sk(sk))"];
"1000357" [label="(Call,RT_CONN_FLAGS(sk))"];
"1000515" [label="(Call,err = ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags))"];
"1000425" [label="(Identifier,err)"];
"1000559" [label="(Call,err = 0)"];
"1000423" [label="(Block,)"];
"1000514" [label="(Identifier,sk)"];
"1000447" [label="(Call,IS_ERR(rt))"];
"1000488" [label="(Call,raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags))"];
"1000489" [label="(Identifier,sk)"];
"1000109" [label="(MethodParameterIn,struct msghdr *msg)"];
"1000436" [label="(Call,&fl4)"];
"1000472" [label="(Identifier,SOCK_BROADCAST)"];
"1000458" [label="(Call,err = -EACCES)"];
"1000252" [label="(Call,err = ip_cmsg_send(sock_net(sk), msg, &ipc))"];
"1000580" [label="(Return,return len;)"];
"1000482" [label="(ControlStructure,if (inet->hdrincl))"];
"1000394" [label="(Call,flowi4_init_output(&fl4, ipc.oif, sk->sk_mark, tos,\n\t\t\t\t   RT_SCOPE_UNIVERSE,\n\t\t\t\t   inet->hdrincl ? IPPROTO_RAW : sk->sk_protocol,\n\t\t\t\t   FLOWI_FLAG_CAN_SLEEP, daddr, saddr, 0, 0))"];
"1000572" [label="(Identifier,rt)"];
"1000443" [label="(Call,&fl4)"];
"1000451" [label="(Identifier,err)"];
"1000164" [label="(Call,err = -EINVAL)"];
"1000446" [label="(ControlStructure,if (IS_ERR(rt)))"];
"1000438" [label="(Call,rt = ip_route_output_flow(sock_net(sk), &fl4, sk))"];
"1000257" [label="(Identifier,msg)"];
"1000557" [label="(Identifier,inet)"];
"1000424" [label="(Call,err = raw_probe_proto_opt(&fl4, msg))"];
"1000553" [label="(Call,-ENOBUFS)"];
"1000579" [label="(Identifier,err)"];
"1000533" [label="(Identifier,err)"];
"1000131" [label="(Call,err = -EMSGSIZE)"];
"1000453" [label="(Identifier,rt)"];
"1000429" [label="(Identifier,msg)"];
"1000444" [label="(Identifier,fl4)"];
"1000493" [label="(Identifier,len)"];
"1000562" [label="(Call,release_sock(sk))"];
"1000469" [label="(Call,!sock_flag(sk, SOCK_BROADCAST))"];
"1000549" [label="(ControlStructure,if (err == -ENOBUFS && !inet->recverr))"];
"1000540" [label="(Call,msg->msg_flags)"];
"1000524" [label="(Literal,0)"];
"1000256" [label="(Identifier,sk)"];
"1000111" [label="(Block,)"];
"1000439" [label="(Identifier,rt)"];
"1000445" [label="(Identifier,sk)"];
"1000455" [label="(Identifier,rt)"];
"1000459" [label="(Identifier,err)"];
"1000207" [label="(Call,err = -EDESTADDRREQ)"];
"1000539" [label="(Call,msg->msg_flags & MSG_MORE)"];
"1000591" [label="(Call,msg->msg_flags & MSG_PROBE)"];
"1000253" [label="(Identifier,err)"];
"1000602" [label="(MethodReturn,static int)"];
"1000494" [label="(Call,&rt)"];
"1000500" [label="(Block,)"];
"1000574" [label="(ControlStructure,if (err < 0))"];
"1000462" [label="(ControlStructure,if (rt->rt_flags & RTCF_BROADCAST && !sock_flag(sk, SOCK_BROADCAST)))"];
"1000519" [label="(Identifier,ip_generic_getfrag)"];
"1000189" [label="(Call,err = -EAFNOSUPPORT)"];
"1000442" [label="(Identifier,sk)"];
"1000119" [label="(Call,*rt = NULL)"];
"1000392" [label="(Block,)"];
"1000576" [label="(Identifier,err)"];
"1000571" [label="(Call,ip_rt_put(rt))"];
"1000441" [label="(Call,sock_net(sk))"];
"1000575" [label="(Call,err < 0)"];
"1000463" [label="(Call,rt->rt_flags & RTCF_BROADCAST && !sock_flag(sk, SOCK_BROADCAST))"];
"1000136" [label="(Call,len > 0xFFFF)"];
"1000534" [label="(Call,ip_flush_pending_frames(sk))"];
"1000560" [label="(Identifier,err)"];
"1000547" [label="(Call,ip_push_pending_frames(sk))"];
"1000116" [label="(Identifier,sk)"];
"1000426" [label="(Call,raw_probe_proto_opt(&fl4, msg))"];
"1000108" [label="(MethodParameterIn,struct sock *sk)"];
"1000487" [label="(Identifier,err)"];
"1000598" [label="(Call,err = 0)"];
"1000110" [label="(MethodParameterIn,size_t len)"];
"1000254" -> "1000252"  [label="AST: "];
"1000254" -> "1000258"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000257" -> "1000254"  [label="AST: "];
"1000258" -> "1000254"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000254" -> "1000602"  [label="DDG: sock_net(sk)"];
"1000254" -> "1000602"  [label="DDG: &ipc"];
"1000254" -> "1000602"  [label="DDG: msg"];
"1000254" -> "1000252"  [label="DDG: sock_net(sk)"];
"1000254" -> "1000252"  [label="DDG: msg"];
"1000254" -> "1000252"  [label="DDG: &ipc"];
"1000255" -> "1000254"  [label="DDG: sk"];
"1000109" -> "1000254"  [label="DDG: msg"];
"1000254" -> "1000426"  [label="DDG: msg"];
"1000254" -> "1000517"  [label="DDG: &ipc"];
"1000255" -> "1000256"  [label="CFG: "];
"1000256" -> "1000255"  [label="AST: "];
"1000257" -> "1000255"  [label="CFG: "];
"1000255" -> "1000602"  [label="DDG: sk"];
"1000115" -> "1000255"  [label="DDG: sk"];
"1000108" -> "1000255"  [label="DDG: sk"];
"1000255" -> "1000357"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="AST: "];
"1000115" -> "1000116"  [label="CFG: "];
"1000116" -> "1000115"  [label="AST: "];
"1000113" -> "1000115"  [label="CFG: "];
"1000115" -> "1000602"  [label="DDG: sk"];
"1000115" -> "1000113"  [label="DDG: sk"];
"1000108" -> "1000115"  [label="DDG: sk"];
"1000115" -> "1000357"  [label="DDG: sk"];
"1000108" -> "1000106"  [label="AST: "];
"1000108" -> "1000602"  [label="DDG: sk"];
"1000108" -> "1000357"  [label="DDG: sk"];
"1000108" -> "1000433"  [label="DDG: sk"];
"1000108" -> "1000441"  [label="DDG: sk"];
"1000108" -> "1000440"  [label="DDG: sk"];
"1000108" -> "1000470"  [label="DDG: sk"];
"1000108" -> "1000488"  [label="DDG: sk"];
"1000108" -> "1000513"  [label="DDG: sk"];
"1000108" -> "1000517"  [label="DDG: sk"];
"1000108" -> "1000534"  [label="DDG: sk"];
"1000108" -> "1000547"  [label="DDG: sk"];
"1000108" -> "1000562"  [label="DDG: sk"];
"1000109" -> "1000106"  [label="AST: "];
"1000109" -> "1000602"  [label="DDG: msg"];
"1000109" -> "1000426"  [label="DDG: msg"];
"1000252" -> "1000251"  [label="AST: "];
"1000253" -> "1000252"  [label="AST: "];
"1000261" -> "1000252"  [label="CFG: "];
"1000252" -> "1000602"  [label="DDG: ip_cmsg_send(sock_net(sk), msg, &ipc)"];
"1000252" -> "1000575"  [label="DDG: err"];
"1000575" -> "1000574"  [label="AST: "];
"1000575" -> "1000577"  [label="CFG: "];
"1000576" -> "1000575"  [label="AST: "];
"1000577" -> "1000575"  [label="AST: "];
"1000579" -> "1000575"  [label="CFG: "];
"1000581" -> "1000575"  [label="CFG: "];
"1000575" -> "1000602"  [label="DDG: err < 0"];
"1000575" -> "1000602"  [label="DDG: err"];
"1000559" -> "1000575"  [label="DDG: err"];
"1000515" -> "1000575"  [label="DDG: err"];
"1000324" -> "1000575"  [label="DDG: err"];
"1000450" -> "1000575"  [label="DDG: err"];
"1000551" -> "1000575"  [label="DDG: err"];
"1000486" -> "1000575"  [label="DDG: err"];
"1000164" -> "1000575"  [label="DDG: err"];
"1000598" -> "1000575"  [label="DDG: err"];
"1000458" -> "1000575"  [label="DDG: err"];
"1000189" -> "1000575"  [label="DDG: err"];
"1000131" -> "1000575"  [label="DDG: err"];
"1000140" -> "1000575"  [label="DDG: err"];
"1000207" -> "1000575"  [label="DDG: err"];
"1000424" -> "1000575"  [label="DDG: err"];
"1000575" -> "1000578"  [label="DDG: err"];
"1000578" -> "1000574"  [label="AST: "];
"1000578" -> "1000579"  [label="CFG: "];
"1000579" -> "1000578"  [label="AST: "];
"1000602" -> "1000578"  [label="CFG: "];
"1000578" -> "1000602"  [label="DDG: <RET>"];
"1000579" -> "1000578"  [label="DDG: err"];
"1000426" -> "1000424"  [label="AST: "];
"1000426" -> "1000429"  [label="CFG: "];
"1000427" -> "1000426"  [label="AST: "];
"1000429" -> "1000426"  [label="AST: "];
"1000424" -> "1000426"  [label="CFG: "];
"1000426" -> "1000602"  [label="DDG: &fl4"];
"1000426" -> "1000602"  [label="DDG: msg"];
"1000426" -> "1000424"  [label="DDG: &fl4"];
"1000426" -> "1000424"  [label="DDG: msg"];
"1000394" -> "1000426"  [label="DDG: &fl4"];
"1000426" -> "1000435"  [label="DDG: &fl4"];
"1000424" -> "1000423"  [label="AST: "];
"1000425" -> "1000424"  [label="AST: "];
"1000431" -> "1000424"  [label="CFG: "];
"1000424" -> "1000602"  [label="DDG: raw_probe_proto_opt(&fl4, msg)"];
"1000435" -> "1000433"  [label="AST: "];
"1000435" -> "1000436"  [label="CFG: "];
"1000436" -> "1000435"  [label="AST: "];
"1000433" -> "1000435"  [label="CFG: "];
"1000435" -> "1000433"  [label="DDG: &fl4"];
"1000394" -> "1000435"  [label="DDG: &fl4"];
"1000435" -> "1000440"  [label="DDG: &fl4"];
"1000433" -> "1000392"  [label="AST: "];
"1000434" -> "1000433"  [label="AST: "];
"1000439" -> "1000433"  [label="CFG: "];
"1000433" -> "1000602"  [label="DDG: security_sk_classify_flow(sk, flowi4_to_flowi(&fl4))"];
"1000433" -> "1000602"  [label="DDG: flowi4_to_flowi(&fl4)"];
"1000357" -> "1000433"  [label="DDG: sk"];
"1000433" -> "1000441"  [label="DDG: sk"];
"1000441" -> "1000440"  [label="AST: "];
"1000441" -> "1000442"  [label="CFG: "];
"1000442" -> "1000441"  [label="AST: "];
"1000444" -> "1000441"  [label="CFG: "];
"1000441" -> "1000440"  [label="DDG: sk"];
"1000440" -> "1000438"  [label="AST: "];
"1000440" -> "1000445"  [label="CFG: "];
"1000443" -> "1000440"  [label="AST: "];
"1000445" -> "1000440"  [label="AST: "];
"1000438" -> "1000440"  [label="CFG: "];
"1000440" -> "1000602"  [label="DDG: &fl4"];
"1000440" -> "1000602"  [label="DDG: sk"];
"1000440" -> "1000602"  [label="DDG: sock_net(sk)"];
"1000440" -> "1000438"  [label="DDG: sock_net(sk)"];
"1000440" -> "1000438"  [label="DDG: &fl4"];
"1000440" -> "1000438"  [label="DDG: sk"];
"1000440" -> "1000470"  [label="DDG: sk"];
"1000440" -> "1000488"  [label="DDG: sk"];
"1000440" -> "1000513"  [label="DDG: sk"];
"1000438" -> "1000392"  [label="AST: "];
"1000439" -> "1000438"  [label="AST: "];
"1000448" -> "1000438"  [label="CFG: "];
"1000438" -> "1000602"  [label="DDG: ip_route_output_flow(sock_net(sk), &fl4, sk)"];
"1000438" -> "1000447"  [label="DDG: rt"];
"1000447" -> "1000446"  [label="AST: "];
"1000447" -> "1000448"  [label="CFG: "];
"1000448" -> "1000447"  [label="AST: "];
"1000451" -> "1000447"  [label="CFG: "];
"1000459" -> "1000447"  [label="CFG: "];
"1000447" -> "1000602"  [label="DDG: IS_ERR(rt)"];
"1000447" -> "1000452"  [label="DDG: rt"];
"1000447" -> "1000571"  [label="DDG: rt"];
"1000452" -> "1000450"  [label="AST: "];
"1000452" -> "1000453"  [label="CFG: "];
"1000453" -> "1000452"  [label="AST: "];
"1000450" -> "1000452"  [label="CFG: "];
"1000452" -> "1000450"  [label="DDG: rt"];
"1000450" -> "1000449"  [label="AST: "];
"1000451" -> "1000450"  [label="AST: "];
"1000455" -> "1000450"  [label="CFG: "];
"1000450" -> "1000602"  [label="DDG: PTR_ERR(rt)"];
"1000571" -> "1000111"  [label="AST: "];
"1000571" -> "1000572"  [label="CFG: "];
"1000572" -> "1000571"  [label="AST: "];
"1000573" -> "1000571"  [label="CFG: "];
"1000571" -> "1000602"  [label="DDG: ip_rt_put(rt)"];
"1000571" -> "1000602"  [label="DDG: rt"];
"1000454" -> "1000571"  [label="DDG: rt"];
"1000119" -> "1000571"  [label="DDG: rt"];
"1000470" -> "1000469"  [label="AST: "];
"1000470" -> "1000472"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="AST: "];
"1000469" -> "1000470"  [label="CFG: "];
"1000470" -> "1000602"  [label="DDG: SOCK_BROADCAST"];
"1000470" -> "1000602"  [label="DDG: sk"];
"1000470" -> "1000469"  [label="DDG: sk"];
"1000470" -> "1000469"  [label="DDG: SOCK_BROADCAST"];
"1000470" -> "1000488"  [label="DDG: sk"];
"1000470" -> "1000513"  [label="DDG: sk"];
"1000469" -> "1000463"  [label="AST: "];
"1000463" -> "1000469"  [label="CFG: "];
"1000469" -> "1000602"  [label="DDG: sock_flag(sk, SOCK_BROADCAST)"];
"1000469" -> "1000463"  [label="DDG: sock_flag(sk, SOCK_BROADCAST)"];
"1000463" -> "1000462"  [label="AST: "];
"1000463" -> "1000464"  [label="CFG: "];
"1000464" -> "1000463"  [label="AST: "];
"1000473" -> "1000463"  [label="CFG: "];
"1000477" -> "1000463"  [label="CFG: "];
"1000463" -> "1000602"  [label="DDG: rt->rt_flags & RTCF_BROADCAST && !sock_flag(sk, SOCK_BROADCAST)"];
"1000463" -> "1000602"  [label="DDG: !sock_flag(sk, SOCK_BROADCAST)"];
"1000463" -> "1000602"  [label="DDG: rt->rt_flags & RTCF_BROADCAST"];
"1000464" -> "1000463"  [label="DDG: rt->rt_flags"];
"1000464" -> "1000463"  [label="DDG: RTCF_BROADCAST"];
"1000488" -> "1000486"  [label="AST: "];
"1000488" -> "1000496"  [label="CFG: "];
"1000489" -> "1000488"  [label="AST: "];
"1000490" -> "1000488"  [label="AST: "];
"1000493" -> "1000488"  [label="AST: "];
"1000494" -> "1000488"  [label="AST: "];
"1000496" -> "1000488"  [label="AST: "];
"1000486" -> "1000488"  [label="CFG: "];
"1000488" -> "1000602"  [label="DDG: sk"];
"1000488" -> "1000602"  [label="DDG: &rt"];
"1000488" -> "1000602"  [label="DDG: msg->msg_flags"];
"1000488" -> "1000602"  [label="DDG: len"];
"1000488" -> "1000602"  [label="DDG: msg->msg_iov"];
"1000488" -> "1000486"  [label="DDG: msg->msg_flags"];
"1000488" -> "1000486"  [label="DDG: sk"];
"1000488" -> "1000486"  [label="DDG: msg->msg_iov"];
"1000488" -> "1000486"  [label="DDG: len"];
"1000488" -> "1000486"  [label="DDG: &rt"];
"1000589" -> "1000488"  [label="DDG: len"];
"1000136" -> "1000488"  [label="DDG: len"];
"1000110" -> "1000488"  [label="DDG: len"];
"1000475" -> "1000488"  [label="DDG: msg->msg_flags"];
"1000591" -> "1000488"  [label="DDG: msg->msg_flags"];
"1000488" -> "1000580"  [label="DDG: len"];
"1000486" -> "1000482"  [label="AST: "];
"1000487" -> "1000486"  [label="AST: "];
"1000564" -> "1000486"  [label="CFG: "];
"1000486" -> "1000602"  [label="DDG: raw_send_hdrinc(sk, msg->msg_iov, len,\n\t\t\t\t\t&rt, msg->msg_flags)"];
"1000580" -> "1000111"  [label="AST: "];
"1000580" -> "1000581"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000602" -> "1000580"  [label="CFG: "];
"1000580" -> "1000602"  [label="DDG: <RET>"];
"1000581" -> "1000580"  [label="DDG: len"];
"1000589" -> "1000580"  [label="DDG: len"];
"1000136" -> "1000580"  [label="DDG: len"];
"1000517" -> "1000580"  [label="DDG: len"];
"1000110" -> "1000580"  [label="DDG: len"];
"1000513" -> "1000500"  [label="AST: "];
"1000513" -> "1000514"  [label="CFG: "];
"1000514" -> "1000513"  [label="AST: "];
"1000516" -> "1000513"  [label="CFG: "];
"1000513" -> "1000602"  [label="DDG: lock_sock(sk)"];
"1000513" -> "1000517"  [label="DDG: sk"];
"1000517" -> "1000515"  [label="AST: "];
"1000517" -> "1000529"  [label="CFG: "];
"1000518" -> "1000517"  [label="AST: "];
"1000519" -> "1000517"  [label="AST: "];
"1000520" -> "1000517"  [label="AST: "];
"1000523" -> "1000517"  [label="AST: "];
"1000524" -> "1000517"  [label="AST: "];
"1000525" -> "1000517"  [label="AST: "];
"1000527" -> "1000517"  [label="AST: "];
"1000529" -> "1000517"  [label="AST: "];
"1000515" -> "1000517"  [label="CFG: "];
"1000517" -> "1000602"  [label="DDG: &ipc"];
"1000517" -> "1000602"  [label="DDG: msg->msg_iov"];
"1000517" -> "1000602"  [label="DDG: ip_generic_getfrag"];
"1000517" -> "1000602"  [label="DDG: msg->msg_flags"];
"1000517" -> "1000602"  [label="DDG: &rt"];
"1000517" -> "1000602"  [label="DDG: len"];
"1000517" -> "1000515"  [label="DDG: &rt"];
"1000517" -> "1000515"  [label="DDG: msg->msg_flags"];
"1000517" -> "1000515"  [label="DDG: &ipc"];
"1000517" -> "1000515"  [label="DDG: 0"];
"1000517" -> "1000515"  [label="DDG: ip_generic_getfrag"];
"1000517" -> "1000515"  [label="DDG: len"];
"1000517" -> "1000515"  [label="DDG: sk"];
"1000517" -> "1000515"  [label="DDG: msg->msg_iov"];
"1000589" -> "1000517"  [label="DDG: len"];
"1000136" -> "1000517"  [label="DDG: len"];
"1000110" -> "1000517"  [label="DDG: len"];
"1000475" -> "1000517"  [label="DDG: msg->msg_flags"];
"1000591" -> "1000517"  [label="DDG: msg->msg_flags"];
"1000517" -> "1000534"  [label="DDG: sk"];
"1000517" -> "1000539"  [label="DDG: msg->msg_flags"];
"1000517" -> "1000547"  [label="DDG: sk"];
"1000517" -> "1000562"  [label="DDG: sk"];
"1000515" -> "1000500"  [label="AST: "];
"1000516" -> "1000515"  [label="AST: "];
"1000533" -> "1000515"  [label="CFG: "];
"1000515" -> "1000602"  [label="DDG: ip_append_data(sk, ip_generic_getfrag, msg->msg_iov, len, 0,\n\t\t\t\t\t&ipc, &rt, msg->msg_flags)"];
"1000534" -> "1000532"  [label="AST: "];
"1000534" -> "1000535"  [label="CFG: "];
"1000535" -> "1000534"  [label="AST: "];
"1000563" -> "1000534"  [label="CFG: "];
"1000534" -> "1000602"  [label="DDG: ip_flush_pending_frames(sk)"];
"1000534" -> "1000562"  [label="DDG: sk"];
"1000562" -> "1000500"  [label="AST: "];
"1000562" -> "1000563"  [label="CFG: "];
"1000563" -> "1000562"  [label="AST: "];
"1000564" -> "1000562"  [label="CFG: "];
"1000562" -> "1000602"  [label="DDG: sk"];
"1000562" -> "1000602"  [label="DDG: release_sock(sk)"];
"1000547" -> "1000562"  [label="DDG: sk"];
"1000539" -> "1000538"  [label="AST: "];
"1000539" -> "1000543"  [label="CFG: "];
"1000540" -> "1000539"  [label="AST: "];
"1000543" -> "1000539"  [label="AST: "];
"1000538" -> "1000539"  [label="CFG: "];
"1000539" -> "1000602"  [label="DDG: msg->msg_flags"];
"1000539" -> "1000602"  [label="DDG: MSG_MORE"];
"1000539" -> "1000538"  [label="DDG: msg->msg_flags"];
"1000539" -> "1000538"  [label="DDG: MSG_MORE"];
"1000538" -> "1000537"  [label="AST: "];
"1000546" -> "1000538"  [label="CFG: "];
"1000563" -> "1000538"  [label="CFG: "];
"1000538" -> "1000602"  [label="DDG: msg->msg_flags & MSG_MORE"];
"1000538" -> "1000602"  [label="DDG: !(msg->msg_flags & MSG_MORE)"];
"1000547" -> "1000545"  [label="AST: "];
"1000547" -> "1000548"  [label="CFG: "];
"1000548" -> "1000547"  [label="AST: "];
"1000545" -> "1000547"  [label="CFG: "];
"1000547" -> "1000545"  [label="DDG: sk"];
"1000545" -> "1000544"  [label="AST: "];
"1000546" -> "1000545"  [label="AST: "];
"1000552" -> "1000545"  [label="CFG: "];
"1000545" -> "1000602"  [label="DDG: ip_push_pending_frames(sk)"];
"1000545" -> "1000551"  [label="DDG: err"];
"1000551" -> "1000550"  [label="AST: "];
"1000551" -> "1000553"  [label="CFG: "];
"1000552" -> "1000551"  [label="AST: "];
"1000553" -> "1000551"  [label="AST: "];
"1000557" -> "1000551"  [label="CFG: "];
"1000550" -> "1000551"  [label="CFG: "];
"1000551" -> "1000602"  [label="DDG: -ENOBUFS"];
"1000551" -> "1000550"  [label="DDG: err"];
"1000551" -> "1000550"  [label="DDG: -ENOBUFS"];
"1000553" -> "1000551"  [label="DDG: ENOBUFS"];
"1000550" -> "1000549"  [label="AST: "];
"1000550" -> "1000555"  [label="CFG: "];
"1000555" -> "1000550"  [label="AST: "];
"1000560" -> "1000550"  [label="CFG: "];
"1000563" -> "1000550"  [label="CFG: "];
"1000550" -> "1000602"  [label="DDG: err == -ENOBUFS && !inet->recverr"];
"1000550" -> "1000602"  [label="DDG: !inet->recverr"];
"1000550" -> "1000602"  [label="DDG: err == -ENOBUFS"];
"1000555" -> "1000550"  [label="DDG: inet->recverr"];
}
