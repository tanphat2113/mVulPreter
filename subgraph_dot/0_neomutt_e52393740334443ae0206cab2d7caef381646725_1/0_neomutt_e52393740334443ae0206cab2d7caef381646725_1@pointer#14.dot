digraph "0_neomutt_e52393740334443ae0206cab2d7caef381646725_1@pointer" {
"1000239" [label="(Call,imap_quote_string(term, sizeof(term), pat->p.str, false))"];
"1000213" [label="(Call,strchr(pat->p.str, ':'))"];
"1000249" [label="(Call,mutt_buffer_addstr(buf, term))"];
"1000252" [label="(Call,mutt_buffer_addch(buf, ' '))"];
"1000269" [label="(Call,mutt_buffer_addstr(buf, term))"];
"1000263" [label="(Call,imap_quote_string(term, sizeof(term), delim, false))"];
"1000271" [label="(Identifier,term)"];
"1000206" [label="(Block,)"];
"1000355" [label="(MethodReturn,static int)"];
"1000240" [label="(Identifier,term)"];
"1000239" [label="(Call,imap_quote_string(term, sizeof(term), pat->p.str, false))"];
"1000248" [label="(Identifier,false)"];
"1000208" [label="(Call,mutt_buffer_addstr(buf, \"HEADER \"))"];
"1000214" [label="(Call,pat->p.str)"];
"1000254" [label="(Literal,' ')"];
"1000263" [label="(Call,imap_quote_string(term, sizeof(term), delim, false))"];
"1000267" [label="(Identifier,delim)"];
"1000251" [label="(Identifier,term)"];
"1000257" [label="(Identifier,delim)"];
"1000241" [label="(Call,sizeof(term))"];
"1000270" [label="(Identifier,buf)"];
"1000272" [label="(ControlStructure,break;)"];
"1000243" [label="(Call,pat->p.str)"];
"1000224" [label="(Call,mutt_error(_(\"Header search without header name: %s\"), pat->p.str))"];
"1000264" [label="(Identifier,term)"];
"1000219" [label="(Literal,':')"];
"1000105" [label="(MethodParameterIn,struct Buffer *buf)"];
"1000211" [label="(Call,delim = strchr(pat->p.str, ':'))"];
"1000250" [label="(Identifier,buf)"];
"1000269" [label="(Call,mutt_buffer_addstr(buf, term))"];
"1000213" [label="(Call,strchr(pat->p.str, ':'))"];
"1000261" [label="(Call,SKIPWS(delim))"];
"1000253" [label="(Identifier,buf)"];
"1000265" [label="(Call,sizeof(term))"];
"1000268" [label="(Identifier,false)"];
"1000252" [label="(Call,mutt_buffer_addch(buf, ' '))"];
"1000249" [label="(Call,mutt_buffer_addstr(buf, term))"];
"1000239" -> "1000206"  [label="AST: "];
"1000239" -> "1000248"  [label="CFG: "];
"1000240" -> "1000239"  [label="AST: "];
"1000241" -> "1000239"  [label="AST: "];
"1000243" -> "1000239"  [label="AST: "];
"1000248" -> "1000239"  [label="AST: "];
"1000250" -> "1000239"  [label="CFG: "];
"1000239" -> "1000355"  [label="DDG: imap_quote_string(term, sizeof(term), pat->p.str, false)"];
"1000239" -> "1000355"  [label="DDG: pat->p.str"];
"1000213" -> "1000239"  [label="DDG: pat->p.str"];
"1000239" -> "1000249"  [label="DDG: term"];
"1000239" -> "1000263"  [label="DDG: false"];
"1000213" -> "1000211"  [label="AST: "];
"1000213" -> "1000219"  [label="CFG: "];
"1000214" -> "1000213"  [label="AST: "];
"1000219" -> "1000213"  [label="AST: "];
"1000211" -> "1000213"  [label="CFG: "];
"1000213" -> "1000211"  [label="DDG: pat->p.str"];
"1000213" -> "1000211"  [label="DDG: ':'"];
"1000213" -> "1000224"  [label="DDG: pat->p.str"];
"1000249" -> "1000206"  [label="AST: "];
"1000249" -> "1000251"  [label="CFG: "];
"1000250" -> "1000249"  [label="AST: "];
"1000251" -> "1000249"  [label="AST: "];
"1000253" -> "1000249"  [label="CFG: "];
"1000208" -> "1000249"  [label="DDG: buf"];
"1000105" -> "1000249"  [label="DDG: buf"];
"1000249" -> "1000252"  [label="DDG: buf"];
"1000252" -> "1000206"  [label="AST: "];
"1000252" -> "1000254"  [label="CFG: "];
"1000253" -> "1000252"  [label="AST: "];
"1000254" -> "1000252"  [label="AST: "];
"1000257" -> "1000252"  [label="CFG: "];
"1000252" -> "1000355"  [label="DDG: mutt_buffer_addch(buf, ' ')"];
"1000105" -> "1000252"  [label="DDG: buf"];
"1000252" -> "1000269"  [label="DDG: buf"];
"1000269" -> "1000206"  [label="AST: "];
"1000269" -> "1000271"  [label="CFG: "];
"1000270" -> "1000269"  [label="AST: "];
"1000271" -> "1000269"  [label="AST: "];
"1000272" -> "1000269"  [label="CFG: "];
"1000269" -> "1000355"  [label="DDG: mutt_buffer_addstr(buf, term)"];
"1000269" -> "1000355"  [label="DDG: buf"];
"1000269" -> "1000355"  [label="DDG: term"];
"1000105" -> "1000269"  [label="DDG: buf"];
"1000263" -> "1000269"  [label="DDG: term"];
"1000263" -> "1000206"  [label="AST: "];
"1000263" -> "1000268"  [label="CFG: "];
"1000264" -> "1000263"  [label="AST: "];
"1000265" -> "1000263"  [label="AST: "];
"1000267" -> "1000263"  [label="AST: "];
"1000268" -> "1000263"  [label="AST: "];
"1000270" -> "1000263"  [label="CFG: "];
"1000263" -> "1000355"  [label="DDG: false"];
"1000263" -> "1000355"  [label="DDG: delim"];
"1000263" -> "1000355"  [label="DDG: imap_quote_string(term, sizeof(term), delim, false)"];
"1000261" -> "1000263"  [label="DDG: delim"];
}
