digraph "0_enlightment_bb4a21e98656fe2c7d98ba2163e6defe9a630e2b@pointer" {
"1000329" [label="(Call,valgrind_log = NULL)"];
"1000185" [label="(Call,sigaction(SIGUSR1, &action, NULL))"];
"1000479" [label="(Call,printf(\" valgrind-log-file='%s'\", valgrind_log))"];
"1000580" [label="(Call,valgrind_append(args, valgrind_gdbserver, valgrind_mode, valgrind_tool, valgrind_path, valgrind_log))"];
"1000578" [label="(Call,i = valgrind_append(args, valgrind_gdbserver, valgrind_mode, valgrind_tool, valgrind_path, valgrind_log))"];
"1000590" [label="(Call,i++)"];
"1000593" [label="(Call,copy_args(args + i, argv + 1, argc - 1))"];
"1000594" [label="(Call,args + i)"];
"1000606" [label="(Call,i + argc - 1)"];
"1000613" [label="(Call,valgrind_tool || valgrind_mode)"];
"1000619" [label="(Call,execv(args[0], args))"];
"1000664" [label="(Call,execv(args[0], args))"];
"1000131" [label="(Call,valgrind_gdbserver = 0)"];
"1000707" [label="(Call,ptrace(PT_CONTINUE, child, NULL, NULL))"];
"1000595" [label="(Identifier,args)"];
"1000585" [label="(Identifier,valgrind_path)"];
"1000189" [label="(Identifier,NULL)"];
"1000617" [label="(Identifier,really_know)"];
"1000626" [label="(Literal,\"E_CSERVE\")"];
"1000668" [label="(Identifier,args)"];
"1000240" [label="(Call,env_set(\"E_START\", argv[0]))"];
"1000583" [label="(Identifier,valgrind_mode)"];
"1000138" [label="(Call,valgrind_path[PATH_MAX] = \"\")"];
"1000590" [label="(Call,i++)"];
"1000606" [label="(Call,i + argc - 1)"];
"1000253" [label="(Identifier,i)"];
"1000588" [label="(Call,args[i++])"];
"1000856" [label="(Call,ptrace(PT_DETACH, child, NULL, back))"];
"1000593" [label="(Call,copy_args(args + i, argv + 1, argc - 1))"];
"1000268" [label="(Call,strncmp(argv[i], \"-valgrind\", sizeof(\"-valgrind\") - 1))"];
"1000989" [label="(Call,ptrace(PT_DETACH, child, NULL, NULL))"];
"1000477" [label="(ControlStructure,if (valgrind_log))"];
"1000598" [label="(Identifier,argv)"];
"1000329" [label="(Call,valgrind_log = NULL)"];
"1000794" [label="(Call,sig.si_signo == SIGUSR1)"];
"1000330" [label="(Identifier,valgrind_log)"];
"1000187" [label="(Call,&action)"];
"1000142" [label="(Call,*valgrind_log = NULL)"];
"1000120" [label="(Block,)"];
"1000771" [label="(Call,ptrace(PT_GETSIGINFO, child, NULL, &sig))"];
"1000600" [label="(Call,argc - 1)"];
"1000355" [label="(Call,printf(\"Unknown valgrind option: %s\n\", argv[i]))"];
"1000847" [label="(Call,ptrace(PT_CONTINUE, child, NULL, back))"];
"1000597" [label="(Call,argv + 1)"];
"1000119" [label="(MethodParameterIn,char **argv)"];
"1000620" [label="(Call,args[0])"];
"1000567" [label="(Call,args = alloca((argc + 2 + VALGRIND_MAX_ARGS) * sizeof(char *)))"];
"1000608" [label="(Call,argc - 1)"];
"1000262" [label="(Call,valgrind_gdbserver = 1)"];
"1000578" [label="(Call,i = valgrind_append(args, valgrind_gdbserver, valgrind_mode, valgrind_tool, valgrind_path, valgrind_log))"];
"1000607" [label="(Identifier,i)"];
"1000586" [label="(Identifier,valgrind_log)"];
"1000483" [label="(Literal,'\n')"];
"1000685" [label="(Call,ptrace(PT_ATTACH, child, NULL, NULL))"];
"1000613" [label="(Call,valgrind_tool || valgrind_mode)"];
"1000604" [label="(Call,args[i + argc - 1])"];
"1000757" [label="(Call,*backtrace_str = NULL)"];
"1000474" [label="(Call,printf(\" valgrind-command='%s'\", valgrind_path))"];
"1000589" [label="(Identifier,args)"];
"1000605" [label="(Identifier,args)"];
"1000614" [label="(Identifier,valgrind_tool)"];
"1000612" [label="(ControlStructure,if (valgrind_tool || valgrind_mode))"];
"1000582" [label="(Identifier,valgrind_gdbserver)"];
"1000220" [label="(Call,copy_args(dbus_argv + 2, argv, argc))"];
"1000479" [label="(Call,printf(\" valgrind-log-file='%s'\", valgrind_log))"];
"1000580" [label="(Call,valgrind_append(args, valgrind_gdbserver, valgrind_mode, valgrind_tool, valgrind_path, valgrind_log))"];
"1000596" [label="(Identifier,i)"];
"1000324" [label="(ControlStructure,if (*valgrind_log == '\0'))"];
"1000185" [label="(Call,sigaction(SIGUSR1, &action, NULL))"];
"1000451" [label="(Call,valgrind_mode || valgrind_tool)"];
"1000670" [label="(Literal,0)"];
"1000664" [label="(Call,execv(args[0], args))"];
"1000655" [label="(Block,)"];
"1000190" [label="(Call,eina_init())"];
"1000226" [label="(Call,dbus_argv[2 + argc] = NULL)"];
"1000467" [label="(Call,printf(\"E - PID=%i, valgrind=%d\", getpid(), valgrind_mode))"];
"1000619" [label="(Call,execv(args[0], args))"];
"1001058" [label="(MethodReturn,RET)"];
"1000480" [label="(Literal,\" valgrind-log-file='%s'\")"];
"1000615" [label="(Identifier,valgrind_mode)"];
"1000316" [label="(Call,valgrind_log = val + sizeof(\"log-file=\") - 1)"];
"1000481" [label="(Identifier,valgrind_log)"];
"1000591" [label="(Identifier,i)"];
"1000331" [label="(Identifier,NULL)"];
"1000603" [label="(Call,args[i + argc - 1] = NULL)"];
"1000421" [label="(Call,printf\n             (\n               \"Options:\n\"\n               \"\t-valgrind[=MODE]\n\"\n               \"\t\tRun enlightenment from inside valgrind, mode is OR of:\n\"\n               \"\t\t   1 = plain valgrind to catch crashes (default)\n\"\n               \"\t\t   2 = trace children (thumbnailer, efm slaves, ...)\n\"\n               \"\t\t   4 = check leak\n\"\n               \"\t\t   8 = show reachable after processes finish.\n\"\n               \"\t\t all = all of above\n\"\n               \"\t-massif\n\"\n               \"\t\tRun enlightenment from inside massif valgrind tool.\n\"\n               \"\t-callgrind\n\"\n               \"\t\tRun enlightenment from inside callgrind valgrind tool.\n\"\n               \"\t-valgrind-log-file=<FILENAME>\n\"\n               \"\t\tSave valgrind log to file, see valgrind's --log-file for details.\n\"\n               \"\n\"\n               \"Please run:\n\"\n               \"\tenlightenment %s\n\"\n               \"for more options.\n\",\n               argv[i]))"];
"1000371" [label="(Call,env_set(\"DISPLAY\", argv[i]))"];
"1000186" [label="(Identifier,SIGUSR1)"];
"1000457" [label="(Call,find_valgrind(valgrind_path, sizeof(valgrind_path)))"];
"1000584" [label="(Identifier,valgrind_tool)"];
"1000623" [label="(Identifier,args)"];
"1000665" [label="(Call,args[0])"];
"1000581" [label="(Identifier,args)"];
"1000659" [label="(Call,ptrace(PT_TRACE_ME, 0, NULL, NULL))"];
"1000594" [label="(Call,args + i)"];
"1000587" [label="(Call,args[i++] = buf)"];
"1000621" [label="(Identifier,args)"];
"1000579" [label="(Identifier,i)"];
"1000329" -> "1000324"  [label="AST: "];
"1000329" -> "1000331"  [label="CFG: "];
"1000330" -> "1000329"  [label="AST: "];
"1000331" -> "1000329"  [label="AST: "];
"1000253" -> "1000329"  [label="CFG: "];
"1000185" -> "1000329"  [label="DDG: "];
"1000329" -> "1000479"  [label="DDG: "];
"1000329" -> "1000580"  [label="DDG: "];
"1000185" -> "1000120"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000189" -> "1000185"  [label="AST: "];
"1000190" -> "1000185"  [label="CFG: "];
"1000185" -> "1001058"  [label="DDG: "];
"1000185" -> "1001058"  [label="DDG: "];
"1000185" -> "1001058"  [label="DDG: "];
"1000185" -> "1000226"  [label="DDG: "];
"1000185" -> "1000603"  [label="DDG: "];
"1000185" -> "1000659"  [label="DDG: "];
"1000185" -> "1000685"  [label="DDG: "];
"1000185" -> "1000707"  [label="DDG: "];
"1000185" -> "1000757"  [label="DDG: "];
"1000185" -> "1000771"  [label="DDG: "];
"1000185" -> "1000794"  [label="DDG: "];
"1000185" -> "1000847"  [label="DDG: "];
"1000185" -> "1000856"  [label="DDG: "];
"1000185" -> "1000989"  [label="DDG: "];
"1000479" -> "1000477"  [label="AST: "];
"1000479" -> "1000481"  [label="CFG: "];
"1000480" -> "1000479"  [label="AST: "];
"1000481" -> "1000479"  [label="AST: "];
"1000483" -> "1000479"  [label="CFG: "];
"1000479" -> "1001058"  [label="DDG: "];
"1000142" -> "1000479"  [label="DDG: "];
"1000316" -> "1000479"  [label="DDG: "];
"1000479" -> "1000580"  [label="DDG: "];
"1000580" -> "1000578"  [label="AST: "];
"1000580" -> "1000586"  [label="CFG: "];
"1000581" -> "1000580"  [label="AST: "];
"1000582" -> "1000580"  [label="AST: "];
"1000583" -> "1000580"  [label="AST: "];
"1000584" -> "1000580"  [label="AST: "];
"1000585" -> "1000580"  [label="AST: "];
"1000586" -> "1000580"  [label="AST: "];
"1000578" -> "1000580"  [label="CFG: "];
"1000580" -> "1001058"  [label="DDG: "];
"1000580" -> "1001058"  [label="DDG: "];
"1000580" -> "1001058"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000580" -> "1000578"  [label="DDG: "];
"1000567" -> "1000580"  [label="DDG: "];
"1000131" -> "1000580"  [label="DDG: "];
"1000262" -> "1000580"  [label="DDG: "];
"1000467" -> "1000580"  [label="DDG: "];
"1000451" -> "1000580"  [label="DDG: "];
"1000138" -> "1000580"  [label="DDG: "];
"1000474" -> "1000580"  [label="DDG: "];
"1000457" -> "1000580"  [label="DDG: "];
"1000142" -> "1000580"  [label="DDG: "];
"1000316" -> "1000580"  [label="DDG: "];
"1000580" -> "1000593"  [label="DDG: "];
"1000580" -> "1000594"  [label="DDG: "];
"1000580" -> "1000613"  [label="DDG: "];
"1000580" -> "1000613"  [label="DDG: "];
"1000580" -> "1000619"  [label="DDG: "];
"1000578" -> "1000120"  [label="AST: "];
"1000579" -> "1000578"  [label="AST: "];
"1000589" -> "1000578"  [label="CFG: "];
"1000578" -> "1001058"  [label="DDG: "];
"1000578" -> "1000590"  [label="DDG: "];
"1000590" -> "1000588"  [label="AST: "];
"1000590" -> "1000591"  [label="CFG: "];
"1000591" -> "1000590"  [label="AST: "];
"1000588" -> "1000590"  [label="CFG: "];
"1000590" -> "1000593"  [label="DDG: "];
"1000590" -> "1000594"  [label="DDG: "];
"1000590" -> "1000606"  [label="DDG: "];
"1000593" -> "1000120"  [label="AST: "];
"1000593" -> "1000600"  [label="CFG: "];
"1000594" -> "1000593"  [label="AST: "];
"1000597" -> "1000593"  [label="AST: "];
"1000600" -> "1000593"  [label="AST: "];
"1000605" -> "1000593"  [label="CFG: "];
"1000593" -> "1001058"  [label="DDG: "];
"1000593" -> "1001058"  [label="DDG: "];
"1000593" -> "1001058"  [label="DDG: "];
"1000587" -> "1000593"  [label="DDG: "];
"1000355" -> "1000593"  [label="DDG: "];
"1000421" -> "1000593"  [label="DDG: "];
"1000240" -> "1000593"  [label="DDG: "];
"1000220" -> "1000593"  [label="DDG: "];
"1000371" -> "1000593"  [label="DDG: "];
"1000119" -> "1000593"  [label="DDG: "];
"1000268" -> "1000593"  [label="DDG: "];
"1000600" -> "1000593"  [label="DDG: "];
"1000600" -> "1000593"  [label="DDG: "];
"1000594" -> "1000596"  [label="CFG: "];
"1000595" -> "1000594"  [label="AST: "];
"1000596" -> "1000594"  [label="AST: "];
"1000598" -> "1000594"  [label="CFG: "];
"1000587" -> "1000594"  [label="DDG: "];
"1000606" -> "1000604"  [label="AST: "];
"1000606" -> "1000608"  [label="CFG: "];
"1000607" -> "1000606"  [label="AST: "];
"1000608" -> "1000606"  [label="AST: "];
"1000604" -> "1000606"  [label="CFG: "];
"1000606" -> "1001058"  [label="DDG: "];
"1000606" -> "1001058"  [label="DDG: "];
"1000608" -> "1000606"  [label="DDG: "];
"1000608" -> "1000606"  [label="DDG: "];
"1000613" -> "1000612"  [label="AST: "];
"1000613" -> "1000614"  [label="CFG: "];
"1000613" -> "1000615"  [label="CFG: "];
"1000614" -> "1000613"  [label="AST: "];
"1000615" -> "1000613"  [label="AST: "];
"1000617" -> "1000613"  [label="CFG: "];
"1000621" -> "1000613"  [label="CFG: "];
"1000613" -> "1001058"  [label="DDG: "];
"1000613" -> "1001058"  [label="DDG: "];
"1000613" -> "1001058"  [label="DDG: "];
"1000619" -> "1000120"  [label="AST: "];
"1000619" -> "1000623"  [label="CFG: "];
"1000620" -> "1000619"  [label="AST: "];
"1000623" -> "1000619"  [label="AST: "];
"1000626" -> "1000619"  [label="CFG: "];
"1000619" -> "1001058"  [label="DDG: "];
"1000619" -> "1001058"  [label="DDG: "];
"1000619" -> "1001058"  [label="DDG: "];
"1000587" -> "1000619"  [label="DDG: "];
"1000603" -> "1000619"  [label="DDG: "];
"1000619" -> "1000664"  [label="DDG: "];
"1000619" -> "1000664"  [label="DDG: "];
"1000664" -> "1000655"  [label="AST: "];
"1000664" -> "1000668"  [label="CFG: "];
"1000665" -> "1000664"  [label="AST: "];
"1000668" -> "1000664"  [label="AST: "];
"1000670" -> "1000664"  [label="CFG: "];
"1000664" -> "1001058"  [label="DDG: "];
"1000664" -> "1001058"  [label="DDG: "];
"1000664" -> "1001058"  [label="DDG: "];
"1000587" -> "1000664"  [label="DDG: "];
"1000603" -> "1000664"  [label="DDG: "];
}
