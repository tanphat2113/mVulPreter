digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@pointer" {
"1000130" [label="(Call,*rp = raw6_sk(sk))"];
"1000132" [label="(Call,raw6_sk(sk))"];
"1000127" [label="(Call,inet6_sk(sk))"];
"1000122" [label="(Call,inet_sk(sk))"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000708" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000706" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000725" [label="(Call,err < 0)"];
"1000724" [label="(Call,err < 0 ? err : len)"];
"1000723" [label="(Return,return err < 0 ? err : len;)"];
"1000713" [label="(Call,release_sock(sk))"];
"1000128" [label="(Identifier,sk)"];
"1000696" [label="(Call,ip6_flush_pending_frames(sk))"];
"1000743" [label="(Call,err = 0)"];
"1000710" [label="(Call,&fl6)"];
"1000723" [label="(Return,return err < 0 ? err : len;)"];
"1000109" [label="(MethodParameterIn,size_t len)"];
"1000670" [label="(Block,)"];
"1000725" [label="(Call,err < 0)"];
"1000714" [label="(Identifier,sk)"];
"1000127" [label="(Call,inet6_sk(sk))"];
"1000656" [label="(Call,err = rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000136" [label="(Identifier,opt)"];
"1000110" [label="(Block,)"];
"1000708" [label="(Call,rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000432" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000675" [label="(Call,ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000673" [label="(Call,err = ip6_append_data(sk, raw6_getfrag, &rfv,\n\t\t\tlen, 0, hlimit, tclass, opt, &fl6, (struct rt6_info *)dst,\n\t\t\tmsg->msg_flags, dontfrag))"];
"1000398" [label="(Call,sock_net(sk))"];
"1000172" [label="(Call,len > INT_MAX)"];
"1000123" [label="(Identifier,sk)"];
"1000283" [label="(Call,fl6_sock_lookup(sk, fl6.flowlabel))"];
"1000122" [label="(Call,inet_sk(sk))"];
"1000728" [label="(Identifier,err)"];
"1000120" [label="(Call,*inet = inet_sk(sk))"];
"1000699" [label="(ControlStructure,if (!(msg->msg_flags & MSG_MORE)))"];
"1000707" [label="(Identifier,err)"];
"1000727" [label="(Literal,0)"];
"1000131" [label="(Identifier,rp)"];
"1000397" [label="(Call,ip6_datagram_send_ctl(sock_net(sk), sk, msg, &fl6, opt,\n\t\t\t\t\t    &hlimit, &tclass, &dontfrag))"];
"1000496" [label="(Call,err = rawv6_probe_proto_opt(&rfv, &fl6))"];
"1000610" [label="(Call,err = PTR_ERR(dst))"];
"1000601" [label="(Call,ip6_dst_lookup_flow(sk, &fl6, final_p))"];
"1000734" [label="(Call,!(msg->msg_flags & MSG_PROBE) || len)"];
"1000658" [label="(Call,rawv6_send_hdrinc(sk, msg, len, &fl6, &dst, msg->msg_flags))"];
"1000130" [label="(Call,*rp = raw6_sk(sk))"];
"1000706" [label="(Call,err = rawv6_push_pending_frames(sk, &fl6, rp))"];
"1000712" [label="(Identifier,rp)"];
"1000671" [label="(Call,lock_sock(sk))"];
"1000724" [label="(Call,err < 0 ? err : len)"];
"1000713" [label="(Call,release_sock(sk))"];
"1000747" [label="(MethodReturn,static int)"];
"1000729" [label="(Identifier,len)"];
"1000107" [label="(MethodParameterIn,struct sock *sk)"];
"1000132" [label="(Call,raw6_sk(sk))"];
"1000715" [label="(JumpTarget,done:)"];
"1000125" [label="(Call,*np = inet6_sk(sk))"];
"1000133" [label="(Identifier,sk)"];
"1000585" [label="(Call,security_sk_classify_flow(sk, flowi6_to_flowi(&fl6)))"];
"1000726" [label="(Identifier,err)"];
"1000709" [label="(Identifier,sk)"];
"1000130" -> "1000110"  [label="AST: "];
"1000130" -> "1000132"  [label="CFG: "];
"1000131" -> "1000130"  [label="AST: "];
"1000132" -> "1000130"  [label="AST: "];
"1000136" -> "1000130"  [label="CFG: "];
"1000130" -> "1000747"  [label="DDG: raw6_sk(sk)"];
"1000130" -> "1000747"  [label="DDG: rp"];
"1000132" -> "1000130"  [label="DDG: sk"];
"1000130" -> "1000708"  [label="DDG: rp"];
"1000132" -> "1000133"  [label="CFG: "];
"1000133" -> "1000132"  [label="AST: "];
"1000132" -> "1000747"  [label="DDG: sk"];
"1000127" -> "1000132"  [label="DDG: sk"];
"1000107" -> "1000132"  [label="DDG: sk"];
"1000132" -> "1000283"  [label="DDG: sk"];
"1000132" -> "1000398"  [label="DDG: sk"];
"1000132" -> "1000585"  [label="DDG: sk"];
"1000127" -> "1000125"  [label="AST: "];
"1000127" -> "1000128"  [label="CFG: "];
"1000128" -> "1000127"  [label="AST: "];
"1000125" -> "1000127"  [label="CFG: "];
"1000127" -> "1000125"  [label="DDG: sk"];
"1000122" -> "1000127"  [label="DDG: sk"];
"1000107" -> "1000127"  [label="DDG: sk"];
"1000122" -> "1000120"  [label="AST: "];
"1000122" -> "1000123"  [label="CFG: "];
"1000123" -> "1000122"  [label="AST: "];
"1000120" -> "1000122"  [label="CFG: "];
"1000122" -> "1000120"  [label="DDG: sk"];
"1000107" -> "1000122"  [label="DDG: sk"];
"1000107" -> "1000106"  [label="AST: "];
"1000107" -> "1000747"  [label="DDG: sk"];
"1000107" -> "1000283"  [label="DDG: sk"];
"1000107" -> "1000398"  [label="DDG: sk"];
"1000107" -> "1000397"  [label="DDG: sk"];
"1000107" -> "1000432"  [label="DDG: sk"];
"1000107" -> "1000585"  [label="DDG: sk"];
"1000107" -> "1000601"  [label="DDG: sk"];
"1000107" -> "1000658"  [label="DDG: sk"];
"1000107" -> "1000671"  [label="DDG: sk"];
"1000107" -> "1000675"  [label="DDG: sk"];
"1000107" -> "1000696"  [label="DDG: sk"];
"1000107" -> "1000708"  [label="DDG: sk"];
"1000107" -> "1000713"  [label="DDG: sk"];
"1000708" -> "1000706"  [label="AST: "];
"1000708" -> "1000712"  [label="CFG: "];
"1000709" -> "1000708"  [label="AST: "];
"1000710" -> "1000708"  [label="AST: "];
"1000712" -> "1000708"  [label="AST: "];
"1000706" -> "1000708"  [label="CFG: "];
"1000708" -> "1000747"  [label="DDG: rp"];
"1000708" -> "1000747"  [label="DDG: &fl6"];
"1000708" -> "1000706"  [label="DDG: sk"];
"1000708" -> "1000706"  [label="DDG: &fl6"];
"1000708" -> "1000706"  [label="DDG: rp"];
"1000675" -> "1000708"  [label="DDG: sk"];
"1000675" -> "1000708"  [label="DDG: &fl6"];
"1000708" -> "1000713"  [label="DDG: sk"];
"1000706" -> "1000699"  [label="AST: "];
"1000707" -> "1000706"  [label="AST: "];
"1000714" -> "1000706"  [label="CFG: "];
"1000706" -> "1000747"  [label="DDG: rawv6_push_pending_frames(sk, &fl6, rp)"];
"1000706" -> "1000725"  [label="DDG: err"];
"1000725" -> "1000724"  [label="AST: "];
"1000725" -> "1000727"  [label="CFG: "];
"1000726" -> "1000725"  [label="AST: "];
"1000727" -> "1000725"  [label="AST: "];
"1000728" -> "1000725"  [label="CFG: "];
"1000729" -> "1000725"  [label="CFG: "];
"1000725" -> "1000724"  [label="DDG: err"];
"1000743" -> "1000725"  [label="DDG: err"];
"1000673" -> "1000725"  [label="DDG: err"];
"1000656" -> "1000725"  [label="DDG: err"];
"1000610" -> "1000725"  [label="DDG: err"];
"1000496" -> "1000725"  [label="DDG: err"];
"1000724" -> "1000723"  [label="AST: "];
"1000724" -> "1000728"  [label="CFG: "];
"1000724" -> "1000729"  [label="CFG: "];
"1000728" -> "1000724"  [label="AST: "];
"1000729" -> "1000724"  [label="AST: "];
"1000723" -> "1000724"  [label="CFG: "];
"1000724" -> "1000747"  [label="DDG: err < 0 ? err : len"];
"1000724" -> "1000747"  [label="DDG: len"];
"1000724" -> "1000747"  [label="DDG: err < 0"];
"1000724" -> "1000747"  [label="DDG: err"];
"1000724" -> "1000723"  [label="DDG: err < 0 ? err : len"];
"1000675" -> "1000724"  [label="DDG: len"];
"1000658" -> "1000724"  [label="DDG: len"];
"1000734" -> "1000724"  [label="DDG: len"];
"1000172" -> "1000724"  [label="DDG: len"];
"1000109" -> "1000724"  [label="DDG: len"];
"1000723" -> "1000110"  [label="AST: "];
"1000747" -> "1000723"  [label="CFG: "];
"1000723" -> "1000747"  [label="DDG: <RET>"];
"1000713" -> "1000670"  [label="AST: "];
"1000713" -> "1000714"  [label="CFG: "];
"1000714" -> "1000713"  [label="AST: "];
"1000715" -> "1000713"  [label="CFG: "];
"1000713" -> "1000747"  [label="DDG: sk"];
"1000713" -> "1000747"  [label="DDG: release_sock(sk)"];
"1000675" -> "1000713"  [label="DDG: sk"];
"1000696" -> "1000713"  [label="DDG: sk"];
}
