digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@pointer" {
"1000307" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000301" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000254" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000324" [label="(Call,__ipv6_addr_type(daddr))"];
"1000323" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000319" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000314" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000326" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000363" [label="(Call,fl6.flowi6_oif == 0)"];
"1000556" [label="(Call,!fl6.flowi6_oif)"];
"1000555" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000574" [label="(Call,!fl6.flowi6_oif)"];
"1000508" [label="(Call,ipv6_addr_any(daddr))"];
"1000507" [label="(Call,!ipv6_addr_any(daddr))"];
"1000586" [label="(Identifier,sk)"];
"1000309" [label="(Call,&sk->sk_v6_daddr)"];
"1000323" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000567" [label="(Identifier,fl6)"];
"1000314" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000362" [label="(ControlStructure,if (fl6.flowi6_oif == 0))"];
"1000365" [label="(Identifier,fl6)"];
"1000349" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000574" [label="(Call,!fl6.flowi6_oif)"];
"1000575" [label="(Call,fl6.flowi6_oif)"];
"1000560" [label="(Call,ipv6_addr_is_multicast(&fl6.daddr))"];
"1000256" [label="(Call,&sin6->sin6_addr)"];
"1000324" [label="(Call,__ipv6_addr_type(daddr))"];
"1000563" [label="(Identifier,fl6)"];
"1000512" [label="(Identifier,fl6)"];
"1000580" [label="(Identifier,fl6)"];
"1000325" [label="(Identifier,daddr)"];
"1000255" [label="(Identifier,daddr)"];
"1000328" [label="(Identifier,fl6)"];
"1000202" [label="(Block,)"];
"1000507" [label="(Call,!ipv6_addr_any(daddr))"];
"1000509" [label="(Identifier,daddr)"];
"1000319" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000294" [label="(ControlStructure,if (sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)))"];
"1000367" [label="(Literal,0)"];
"1000315" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000262" [label="(Identifier,np)"];
"1000295" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000508" [label="(Call,ipv6_addr_any(daddr))"];
"1000556" [label="(Call,!fl6.flowi6_oif)"];
"1000555" [label="(Call,!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr))"];
"1000554" [label="(ControlStructure,if (!fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr)))"];
"1000326" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000302" [label="(Identifier,daddr)"];
"1000557" [label="(Call,fl6.flowi6_oif)"];
"1000506" [label="(ControlStructure,if (!ipv6_addr_any(daddr)))"];
"1000573" [label="(ControlStructure,if (!fl6.flowi6_oif))"];
"1000301" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000370" [label="(Identifier,fl6)"];
"1000303" [label="(Call,&sk->sk_v6_daddr)"];
"1000307" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000313" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000363" [label="(Call,fl6.flowi6_oif == 0)"];
"1000521" [label="(Identifier,fl6)"];
"1000368" [label="(Call,fl6.flowi6_oif = sk->sk_bound_dev_if)"];
"1000576" [label="(Identifier,fl6)"];
"1000747" [label="(MethodReturn,static int)"];
"1000330" [label="(Call,sin6->sin6_scope_id)"];
"1000320" [label="(Call,sin6->sin6_scope_id)"];
"1000316" [label="(Identifier,addr_len)"];
"1000327" [label="(Call,fl6.flowi6_oif)"];
"1000308" [label="(Identifier,daddr)"];
"1000377" [label="(Identifier,msg)"];
"1000254" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000364" [label="(Call,fl6.flowi6_oif)"];
"1000307" -> "1000294"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000316" -> "1000307"  [label="CFG: "];
"1000307" -> "1000747"  [label="DDG: &sk->sk_v6_daddr"];
"1000307" -> "1000747"  [label="DDG: daddr"];
"1000301" -> "1000307"  [label="DDG: &sk->sk_v6_daddr"];
"1000307" -> "1000324"  [label="DDG: daddr"];
"1000307" -> "1000508"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000295" -> "1000301"  [label="CFG: "];
"1000301" -> "1000747"  [label="DDG: &sk->sk_v6_daddr"];
"1000301" -> "1000747"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="DDG: &sk->sk_v6_daddr"];
"1000254" -> "1000301"  [label="DDG: daddr"];
"1000301" -> "1000324"  [label="DDG: daddr"];
"1000301" -> "1000508"  [label="DDG: daddr"];
"1000254" -> "1000202"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000262" -> "1000254"  [label="CFG: "];
"1000254" -> "1000747"  [label="DDG: daddr"];
"1000254" -> "1000747"  [label="DDG: &sin6->sin6_addr"];
"1000254" -> "1000324"  [label="DDG: daddr"];
"1000254" -> "1000508"  [label="DDG: daddr"];
"1000324" -> "1000323"  [label="AST: "];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000747"  [label="DDG: daddr"];
"1000324" -> "1000323"  [label="DDG: daddr"];
"1000324" -> "1000508"  [label="DDG: daddr"];
"1000323" -> "1000319"  [label="AST: "];
"1000319" -> "1000323"  [label="CFG: "];
"1000323" -> "1000747"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000323" -> "1000319"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000319" -> "1000314"  [label="AST: "];
"1000319" -> "1000320"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000314" -> "1000319"  [label="CFG: "];
"1000319" -> "1000747"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000319" -> "1000747"  [label="DDG: sin6->sin6_scope_id"];
"1000319" -> "1000314"  [label="DDG: sin6->sin6_scope_id"];
"1000319" -> "1000314"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000319" -> "1000326"  [label="DDG: sin6->sin6_scope_id"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000315"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000328" -> "1000314"  [label="CFG: "];
"1000365" -> "1000314"  [label="CFG: "];
"1000314" -> "1000747"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000314" -> "1000747"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000314" -> "1000747"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000315" -> "1000314"  [label="DDG: addr_len"];
"1000326" -> "1000313"  [label="AST: "];
"1000326" -> "1000330"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000330" -> "1000326"  [label="AST: "];
"1000365" -> "1000326"  [label="CFG: "];
"1000326" -> "1000747"  [label="DDG: sin6->sin6_scope_id"];
"1000326" -> "1000363"  [label="DDG: fl6.flowi6_oif"];
"1000363" -> "1000362"  [label="AST: "];
"1000363" -> "1000367"  [label="CFG: "];
"1000364" -> "1000363"  [label="AST: "];
"1000367" -> "1000363"  [label="AST: "];
"1000370" -> "1000363"  [label="CFG: "];
"1000377" -> "1000363"  [label="CFG: "];
"1000363" -> "1000747"  [label="DDG: fl6.flowi6_oif"];
"1000363" -> "1000747"  [label="DDG: fl6.flowi6_oif == 0"];
"1000363" -> "1000556"  [label="DDG: fl6.flowi6_oif"];
"1000556" -> "1000555"  [label="AST: "];
"1000556" -> "1000557"  [label="CFG: "];
"1000557" -> "1000556"  [label="AST: "];
"1000563" -> "1000556"  [label="CFG: "];
"1000555" -> "1000556"  [label="CFG: "];
"1000556" -> "1000555"  [label="DDG: fl6.flowi6_oif"];
"1000368" -> "1000556"  [label="DDG: fl6.flowi6_oif"];
"1000556" -> "1000574"  [label="DDG: fl6.flowi6_oif"];
"1000555" -> "1000554"  [label="AST: "];
"1000555" -> "1000560"  [label="CFG: "];
"1000560" -> "1000555"  [label="AST: "];
"1000567" -> "1000555"  [label="CFG: "];
"1000576" -> "1000555"  [label="CFG: "];
"1000555" -> "1000747"  [label="DDG: ipv6_addr_is_multicast(&fl6.daddr)"];
"1000555" -> "1000747"  [label="DDG: !fl6.flowi6_oif && ipv6_addr_is_multicast(&fl6.daddr)"];
"1000555" -> "1000747"  [label="DDG: !fl6.flowi6_oif"];
"1000560" -> "1000555"  [label="DDG: &fl6.daddr"];
"1000574" -> "1000573"  [label="AST: "];
"1000574" -> "1000575"  [label="CFG: "];
"1000575" -> "1000574"  [label="AST: "];
"1000580" -> "1000574"  [label="CFG: "];
"1000586" -> "1000574"  [label="CFG: "];
"1000574" -> "1000747"  [label="DDG: fl6.flowi6_oif"];
"1000574" -> "1000747"  [label="DDG: !fl6.flowi6_oif"];
"1000508" -> "1000507"  [label="AST: "];
"1000508" -> "1000509"  [label="CFG: "];
"1000509" -> "1000508"  [label="AST: "];
"1000507" -> "1000508"  [label="CFG: "];
"1000508" -> "1000747"  [label="DDG: daddr"];
"1000508" -> "1000507"  [label="DDG: daddr"];
"1000349" -> "1000508"  [label="DDG: daddr"];
"1000507" -> "1000506"  [label="AST: "];
"1000512" -> "1000507"  [label="CFG: "];
"1000521" -> "1000507"  [label="CFG: "];
"1000507" -> "1000747"  [label="DDG: !ipv6_addr_any(daddr)"];
"1000507" -> "1000747"  [label="DDG: ipv6_addr_any(daddr)"];
}
