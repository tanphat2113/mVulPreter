digraph "0_linux_45f6fad84cc305103b28d73482b344d7f5b76f39_13@API" {
"1000314" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000315" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000204" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000149" [label="(Call,addr_len = msg->msg_namelen)"];
"1000319" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000323" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000324" [label="(Call,__ipv6_addr_type(daddr))"];
"1000254" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000301" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000307" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000309" [label="(Call,&sk->sk_v6_daddr)"];
"1000323" [label="(Call,__ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000314" [label="(Call,addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000365" [label="(Identifier,fl6)"];
"1000321" [label="(Identifier,sin6)"];
"1000317" [label="(Call,sizeof(struct sockaddr_in6))"];
"1000110" [label="(Block,)"];
"1000256" [label="(Call,&sin6->sin6_addr)"];
"1000203" [label="(ControlStructure,if (addr_len < SIN6_LEN_RFC2133))"];
"1000213" [label="(Identifier,sin6)"];
"1000324" [label="(Call,__ipv6_addr_type(daddr))"];
"1000156" [label="(Identifier,hlimit)"];
"1000325" [label="(Identifier,daddr)"];
"1000328" [label="(Identifier,fl6)"];
"1000255" [label="(Identifier,daddr)"];
"1000202" [label="(Block,)"];
"1000149" [label="(Call,addr_len = msg->msg_namelen)"];
"1000319" [label="(Call,sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr)))"];
"1000206" [label="(Identifier,SIN6_LEN_RFC2133)"];
"1000294" [label="(ControlStructure,if (sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr)))"];
"1000209" [label="(Identifier,EINVAL)"];
"1000315" [label="(Call,addr_len >= sizeof(struct sockaddr_in6))"];
"1000262" [label="(Identifier,np)"];
"1000295" [label="(Call,sk->sk_state == TCP_ESTABLISHED &&\n\t\t    ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000508" [label="(Call,ipv6_addr_any(daddr))"];
"1000326" [label="(Call,fl6.flowi6_oif = sin6->sin6_scope_id)"];
"1000302" [label="(Identifier,daddr)"];
"1000301" [label="(Call,ipv6_addr_equal(daddr, &sk->sk_v6_daddr))"];
"1000303" [label="(Call,&sk->sk_v6_daddr)"];
"1000307" [label="(Call,daddr = &sk->sk_v6_daddr)"];
"1000313" [label="(ControlStructure,if (addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))))"];
"1000151" [label="(Call,msg->msg_namelen)"];
"1000205" [label="(Identifier,addr_len)"];
"1000747" [label="(MethodReturn,static int)"];
"1000320" [label="(Call,sin6->sin6_scope_id)"];
"1000316" [label="(Identifier,addr_len)"];
"1000308" [label="(Identifier,daddr)"];
"1000204" [label="(Call,addr_len < SIN6_LEN_RFC2133)"];
"1000150" [label="(Identifier,addr_len)"];
"1000254" [label="(Call,daddr = &sin6->sin6_addr)"];
"1000314" -> "1000313"  [label="AST: "];
"1000314" -> "1000315"  [label="CFG: "];
"1000314" -> "1000319"  [label="CFG: "];
"1000315" -> "1000314"  [label="AST: "];
"1000319" -> "1000314"  [label="AST: "];
"1000328" -> "1000314"  [label="CFG: "];
"1000365" -> "1000314"  [label="CFG: "];
"1000314" -> "1000747"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6)"];
"1000314" -> "1000747"  [label="DDG: sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000314" -> "1000747"  [label="DDG: addr_len >= sizeof(struct sockaddr_in6) &&\n\t\t    sin6->sin6_scope_id &&\n\t\t    __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000315" -> "1000314"  [label="DDG: addr_len"];
"1000319" -> "1000314"  [label="DDG: sin6->sin6_scope_id"];
"1000319" -> "1000314"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000315" -> "1000317"  [label="CFG: "];
"1000316" -> "1000315"  [label="AST: "];
"1000317" -> "1000315"  [label="AST: "];
"1000321" -> "1000315"  [label="CFG: "];
"1000315" -> "1000747"  [label="DDG: addr_len"];
"1000204" -> "1000315"  [label="DDG: addr_len"];
"1000204" -> "1000203"  [label="AST: "];
"1000204" -> "1000206"  [label="CFG: "];
"1000205" -> "1000204"  [label="AST: "];
"1000206" -> "1000204"  [label="AST: "];
"1000209" -> "1000204"  [label="CFG: "];
"1000213" -> "1000204"  [label="CFG: "];
"1000204" -> "1000747"  [label="DDG: SIN6_LEN_RFC2133"];
"1000204" -> "1000747"  [label="DDG: addr_len"];
"1000204" -> "1000747"  [label="DDG: addr_len < SIN6_LEN_RFC2133"];
"1000149" -> "1000204"  [label="DDG: addr_len"];
"1000149" -> "1000110"  [label="AST: "];
"1000149" -> "1000151"  [label="CFG: "];
"1000150" -> "1000149"  [label="AST: "];
"1000151" -> "1000149"  [label="AST: "];
"1000156" -> "1000149"  [label="CFG: "];
"1000149" -> "1000747"  [label="DDG: msg->msg_namelen"];
"1000149" -> "1000747"  [label="DDG: addr_len"];
"1000319" -> "1000320"  [label="CFG: "];
"1000319" -> "1000323"  [label="CFG: "];
"1000320" -> "1000319"  [label="AST: "];
"1000323" -> "1000319"  [label="AST: "];
"1000319" -> "1000747"  [label="DDG: __ipv6_addr_needs_scope_id(__ipv6_addr_type(daddr))"];
"1000319" -> "1000747"  [label="DDG: sin6->sin6_scope_id"];
"1000323" -> "1000319"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000319" -> "1000326"  [label="DDG: sin6->sin6_scope_id"];
"1000323" -> "1000324"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000323" -> "1000747"  [label="DDG: __ipv6_addr_type(daddr)"];
"1000324" -> "1000323"  [label="DDG: daddr"];
"1000324" -> "1000325"  [label="CFG: "];
"1000325" -> "1000324"  [label="AST: "];
"1000324" -> "1000747"  [label="DDG: daddr"];
"1000254" -> "1000324"  [label="DDG: daddr"];
"1000301" -> "1000324"  [label="DDG: daddr"];
"1000307" -> "1000324"  [label="DDG: daddr"];
"1000324" -> "1000508"  [label="DDG: daddr"];
"1000254" -> "1000202"  [label="AST: "];
"1000254" -> "1000256"  [label="CFG: "];
"1000255" -> "1000254"  [label="AST: "];
"1000256" -> "1000254"  [label="AST: "];
"1000262" -> "1000254"  [label="CFG: "];
"1000254" -> "1000747"  [label="DDG: daddr"];
"1000254" -> "1000747"  [label="DDG: &sin6->sin6_addr"];
"1000254" -> "1000301"  [label="DDG: daddr"];
"1000254" -> "1000508"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000302" -> "1000301"  [label="AST: "];
"1000303" -> "1000301"  [label="AST: "];
"1000295" -> "1000301"  [label="CFG: "];
"1000301" -> "1000747"  [label="DDG: &sk->sk_v6_daddr"];
"1000301" -> "1000747"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="DDG: daddr"];
"1000301" -> "1000295"  [label="DDG: &sk->sk_v6_daddr"];
"1000301" -> "1000307"  [label="DDG: &sk->sk_v6_daddr"];
"1000301" -> "1000508"  [label="DDG: daddr"];
"1000307" -> "1000294"  [label="AST: "];
"1000307" -> "1000309"  [label="CFG: "];
"1000308" -> "1000307"  [label="AST: "];
"1000309" -> "1000307"  [label="AST: "];
"1000316" -> "1000307"  [label="CFG: "];
"1000307" -> "1000747"  [label="DDG: &sk->sk_v6_daddr"];
"1000307" -> "1000747"  [label="DDG: daddr"];
"1000307" -> "1000508"  [label="DDG: daddr"];
}
