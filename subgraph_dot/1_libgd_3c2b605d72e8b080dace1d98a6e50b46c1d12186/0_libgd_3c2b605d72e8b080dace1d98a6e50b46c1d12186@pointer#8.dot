digraph "0_libgd_3c2b605d72e8b080dace1d98a6e50b46c1d12186@pointer" {
"1000470" [label="(Call,gdFree( conversion_buffer ))"];
"1000348" [label="(Call,(int)conversion_buffer[buffer_caret])"];
"1000323" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000310" [label="(Call,conversion_buffer == NULL)"];
"1000300" [label="(Call,conversion_buffer = (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000302" [label="(Call,(unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000304" [label="(Call,gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000305" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000288" [label="(Call,image_block_size * sizeof(uint8_t))"];
"1000210" [label="(Call,image_block_size * sizeof(int))"];
"1000180" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000293" [label="(Call,decompression_buffer == NULL)"];
"1000283" [label="(Call,decompression_buffer = (uint8_t*) gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000285" [label="(Call,(uint8_t*) gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000287" [label="(Call,gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000215" [label="(Call,tga->bitmap == NULL)"];
"1000203" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000207" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000209" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000105" [label="(MethodParameterIn,gdIOCtx *ctx)"];
"1000180" [label="(Call,overflow2(image_block_size, sizeof(int)))"];
"1000105" [label="(MethodParameterIn,gdIOCtx *ctx)"];
"1000468" [label="(Call,gdFree( decompression_buffer ))"];
"1000472" [label="(ControlStructure,break;)"];
"1000300" [label="(Call,conversion_buffer = (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000422" [label="(Call,encoded_pixels = decompression_buffer[ buffer_caret ] + 1)"];
"1000192" [label="(Identifier,tga)"];
"1000216" [label="(Call,tga->bitmap)"];
"1000239" [label="(Call,conversion_buffer == NULL)"];
"1000111" [label="(Call,tga->bits / 8)"];
"1000471" [label="(Identifier,conversion_buffer)"];
"1000331" [label="(Call,gdFree(decompression_buffer))"];
"1000112" [label="(Call,tga->bits)"];
"1000212" [label="(Call,sizeof(int))"];
"1000217" [label="(Identifier,tga)"];
"1000166" [label="(Call,overflow2(tga->width * tga->height, pixel_block_size))"];
"1000181" [label="(Identifier,image_block_size)"];
"1000302" [label="(Call,(unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000121" [label="(Call,tga->width)"];
"1000182" [label="(Call,sizeof(int))"];
"1000210" [label="(Call,image_block_size * sizeof(int))"];
"1000350" [label="(Call,conversion_buffer[buffer_caret])"];
"1000424" [label="(Call,decompression_buffer[ buffer_caret ] + 1)"];
"1000344" [label="(Call,decompression_buffer[buffer_caret] = (int)conversion_buffer[buffer_caret])"];
"1000118" [label="(Identifier,image_block_size)"];
"1000375" [label="(Call,decompression_buffer[ buffer_caret ] & 127)"];
"1000325" [label="(Identifier,image_block_size)"];
"1000312" [label="(Identifier,NULL)"];
"1000203" [label="(Call,tga->bitmap = (int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000284" [label="(Identifier,decompression_buffer)"];
"1000219" [label="(Identifier,NULL)"];
"1000209" [label="(Call,gdMalloc(image_block_size * sizeof(int)))"];
"1000222" [label="(Literal,1)"];
"1000475" [label="(MethodReturn,int)"];
"1000470" [label="(Call,gdFree( conversion_buffer ))"];
"1000305" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000324" [label="(Identifier,conversion_buffer)"];
"1000207" [label="(Call,(int *) gdMalloc(image_block_size * sizeof(int)))"];
"1000214" [label="(ControlStructure,if (tga->bitmap == NULL))"];
"1000204" [label="(Call,tga->bitmap)"];
"1000285" [label="(Call,(uint8_t*) gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000234" [label="(Call,image_block_size * sizeof(unsigned char))"];
"1000295" [label="(Identifier,NULL)"];
"1000327" [label="(Identifier,image_block_size)"];
"1000365" [label="(Call,decompression_buffer[buffer_caret] & TGA_RLE_FLAG)"];
"1000154" [label="(Call,overflow2(tga->width, tga->height))"];
"1000117" [label="(Call,image_block_size = (tga->width * tga->height) * pixel_block_size)"];
"1000119" [label="(Call,(tga->width * tga->height) * pixel_block_size)"];
"1000283" [label="(Call,decompression_buffer = (uint8_t*) gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000323" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000315" [label="(Literal,\"gd-tga: premature end of image data\n\")"];
"1000110" [label="(Identifier,pixel_block_size)"];
"1000311" [label="(Identifier,conversion_buffer)"];
"1000310" [label="(Call,conversion_buffer == NULL)"];
"1000107" [label="(Block,)"];
"1000309" [label="(ControlStructure,if (conversion_buffer == NULL))"];
"1000287" [label="(Call,gdMalloc(image_block_size * sizeof(uint8_t)))"];
"1000211" [label="(Identifier,image_block_size)"];
"1000187" [label="(Literal,1)"];
"1000326" [label="(Identifier,ctx)"];
"1000225" [label="(Identifier,tga)"];
"1000304" [label="(Call,gdMalloc(image_block_size * sizeof(unsigned char)))"];
"1000329" [label="(Call,gdFree(conversion_buffer))"];
"1000248" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx))"];
"1000127" [label="(Identifier,pixel_block_size)"];
"1000307" [label="(Call,sizeof(unsigned char))"];
"1000289" [label="(Identifier,image_block_size)"];
"1000454" [label="(Call,tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ])"];
"1000299" [label="(Literal,1)"];
"1000109" [label="(Call,pixel_block_size = (tga->bits / 8))"];
"1000124" [label="(Call,tga->height)"];
"1000294" [label="(Identifier,decompression_buffer)"];
"1000348" [label="(Call,(int)conversion_buffer[buffer_caret])"];
"1000316" [label="(Call,gdFree( decompression_buffer ))"];
"1000115" [label="(Literal,8)"];
"1000227" [label="(Block,)"];
"1000301" [label="(Identifier,conversion_buffer)"];
"1000406" [label="(Call,tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ])"];
"1000290" [label="(Call,sizeof(uint8_t))"];
"1000292" [label="(ControlStructure,if (decompression_buffer == NULL))"];
"1000306" [label="(Identifier,image_block_size)"];
"1000120" [label="(Call,tga->width * tga->height)"];
"1000288" [label="(Call,image_block_size * sizeof(uint8_t))"];
"1000322" [label="(Call,gdGetBuf(conversion_buffer, image_block_size, ctx) != image_block_size)"];
"1000130" [label="(Identifier,decompression_buffer)"];
"1000179" [label="(ControlStructure,if(overflow2(image_block_size, sizeof(int))))"];
"1000293" [label="(Call,decompression_buffer == NULL)"];
"1000215" [label="(Call,tga->bitmap == NULL)"];
"1000470" -> "1000227"  [label="AST: "];
"1000470" -> "1000471"  [label="CFG: "];
"1000471" -> "1000470"  [label="AST: "];
"1000472" -> "1000470"  [label="CFG: "];
"1000470" -> "1000475"  [label="DDG: conversion_buffer"];
"1000470" -> "1000475"  [label="DDG: gdFree( conversion_buffer )"];
"1000348" -> "1000470"  [label="DDG: conversion_buffer[buffer_caret]"];
"1000323" -> "1000470"  [label="DDG: conversion_buffer"];
"1000348" -> "1000344"  [label="AST: "];
"1000348" -> "1000350"  [label="CFG: "];
"1000349" -> "1000348"  [label="AST: "];
"1000350" -> "1000348"  [label="AST: "];
"1000344" -> "1000348"  [label="CFG: "];
"1000348" -> "1000475"  [label="DDG: conversion_buffer[buffer_caret]"];
"1000348" -> "1000344"  [label="DDG: conversion_buffer[buffer_caret]"];
"1000323" -> "1000348"  [label="DDG: conversion_buffer"];
"1000323" -> "1000322"  [label="AST: "];
"1000323" -> "1000326"  [label="CFG: "];
"1000324" -> "1000323"  [label="AST: "];
"1000325" -> "1000323"  [label="AST: "];
"1000326" -> "1000323"  [label="AST: "];
"1000327" -> "1000323"  [label="CFG: "];
"1000323" -> "1000475"  [label="DDG: ctx"];
"1000323" -> "1000322"  [label="DDG: conversion_buffer"];
"1000323" -> "1000322"  [label="DDG: image_block_size"];
"1000323" -> "1000322"  [label="DDG: ctx"];
"1000310" -> "1000323"  [label="DDG: conversion_buffer"];
"1000305" -> "1000323"  [label="DDG: image_block_size"];
"1000105" -> "1000323"  [label="DDG: ctx"];
"1000323" -> "1000329"  [label="DDG: conversion_buffer"];
"1000310" -> "1000309"  [label="AST: "];
"1000310" -> "1000312"  [label="CFG: "];
"1000311" -> "1000310"  [label="AST: "];
"1000312" -> "1000310"  [label="AST: "];
"1000315" -> "1000310"  [label="CFG: "];
"1000324" -> "1000310"  [label="CFG: "];
"1000310" -> "1000475"  [label="DDG: conversion_buffer == NULL"];
"1000310" -> "1000475"  [label="DDG: NULL"];
"1000310" -> "1000475"  [label="DDG: conversion_buffer"];
"1000300" -> "1000310"  [label="DDG: conversion_buffer"];
"1000293" -> "1000310"  [label="DDG: NULL"];
"1000300" -> "1000227"  [label="AST: "];
"1000300" -> "1000302"  [label="CFG: "];
"1000301" -> "1000300"  [label="AST: "];
"1000302" -> "1000300"  [label="AST: "];
"1000311" -> "1000300"  [label="CFG: "];
"1000300" -> "1000475"  [label="DDG: (unsigned char *) gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000302" -> "1000300"  [label="DDG: gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000302" -> "1000304"  [label="CFG: "];
"1000303" -> "1000302"  [label="AST: "];
"1000304" -> "1000302"  [label="AST: "];
"1000302" -> "1000475"  [label="DDG: gdMalloc(image_block_size * sizeof(unsigned char))"];
"1000304" -> "1000302"  [label="DDG: image_block_size * sizeof(unsigned char)"];
"1000304" -> "1000305"  [label="CFG: "];
"1000305" -> "1000304"  [label="AST: "];
"1000304" -> "1000475"  [label="DDG: image_block_size * sizeof(unsigned char)"];
"1000305" -> "1000304"  [label="DDG: image_block_size"];
"1000305" -> "1000307"  [label="CFG: "];
"1000306" -> "1000305"  [label="AST: "];
"1000307" -> "1000305"  [label="AST: "];
"1000305" -> "1000475"  [label="DDG: image_block_size"];
"1000288" -> "1000305"  [label="DDG: image_block_size"];
"1000288" -> "1000287"  [label="AST: "];
"1000288" -> "1000290"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000290" -> "1000288"  [label="AST: "];
"1000287" -> "1000288"  [label="CFG: "];
"1000288" -> "1000475"  [label="DDG: image_block_size"];
"1000288" -> "1000287"  [label="DDG: image_block_size"];
"1000210" -> "1000288"  [label="DDG: image_block_size"];
"1000210" -> "1000209"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000211" -> "1000210"  [label="AST: "];
"1000212" -> "1000210"  [label="AST: "];
"1000209" -> "1000210"  [label="CFG: "];
"1000210" -> "1000475"  [label="DDG: image_block_size"];
"1000210" -> "1000209"  [label="DDG: image_block_size"];
"1000180" -> "1000210"  [label="DDG: image_block_size"];
"1000210" -> "1000234"  [label="DDG: image_block_size"];
"1000180" -> "1000179"  [label="AST: "];
"1000180" -> "1000182"  [label="CFG: "];
"1000181" -> "1000180"  [label="AST: "];
"1000182" -> "1000180"  [label="AST: "];
"1000187" -> "1000180"  [label="CFG: "];
"1000192" -> "1000180"  [label="CFG: "];
"1000180" -> "1000475"  [label="DDG: image_block_size"];
"1000180" -> "1000475"  [label="DDG: overflow2(image_block_size, sizeof(int))"];
"1000117" -> "1000180"  [label="DDG: image_block_size"];
"1000117" -> "1000107"  [label="AST: "];
"1000117" -> "1000119"  [label="CFG: "];
"1000118" -> "1000117"  [label="AST: "];
"1000119" -> "1000117"  [label="AST: "];
"1000130" -> "1000117"  [label="CFG: "];
"1000117" -> "1000475"  [label="DDG: image_block_size"];
"1000117" -> "1000475"  [label="DDG: (tga->width * tga->height) * pixel_block_size"];
"1000119" -> "1000117"  [label="DDG: tga->width * tga->height"];
"1000119" -> "1000117"  [label="DDG: pixel_block_size"];
"1000119" -> "1000127"  [label="CFG: "];
"1000120" -> "1000119"  [label="AST: "];
"1000127" -> "1000119"  [label="AST: "];
"1000119" -> "1000475"  [label="DDG: pixel_block_size"];
"1000119" -> "1000475"  [label="DDG: tga->width * tga->height"];
"1000120" -> "1000119"  [label="DDG: tga->width"];
"1000120" -> "1000119"  [label="DDG: tga->height"];
"1000109" -> "1000119"  [label="DDG: pixel_block_size"];
"1000119" -> "1000166"  [label="DDG: pixel_block_size"];
"1000120" -> "1000124"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000124" -> "1000120"  [label="AST: "];
"1000127" -> "1000120"  [label="CFG: "];
"1000120" -> "1000154"  [label="DDG: tga->width"];
"1000120" -> "1000154"  [label="DDG: tga->height"];
"1000109" -> "1000107"  [label="AST: "];
"1000109" -> "1000111"  [label="CFG: "];
"1000110" -> "1000109"  [label="AST: "];
"1000111" -> "1000109"  [label="AST: "];
"1000118" -> "1000109"  [label="CFG: "];
"1000109" -> "1000475"  [label="DDG: tga->bits / 8"];
"1000111" -> "1000109"  [label="DDG: tga->bits"];
"1000111" -> "1000109"  [label="DDG: 8"];
"1000111" -> "1000115"  [label="CFG: "];
"1000112" -> "1000111"  [label="AST: "];
"1000115" -> "1000111"  [label="AST: "];
"1000111" -> "1000475"  [label="DDG: tga->bits"];
"1000293" -> "1000292"  [label="AST: "];
"1000293" -> "1000295"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000299" -> "1000293"  [label="CFG: "];
"1000301" -> "1000293"  [label="CFG: "];
"1000293" -> "1000475"  [label="DDG: decompression_buffer"];
"1000293" -> "1000475"  [label="DDG: decompression_buffer == NULL"];
"1000293" -> "1000475"  [label="DDG: NULL"];
"1000283" -> "1000293"  [label="DDG: decompression_buffer"];
"1000215" -> "1000293"  [label="DDG: NULL"];
"1000293" -> "1000316"  [label="DDG: decompression_buffer"];
"1000293" -> "1000331"  [label="DDG: decompression_buffer"];
"1000293" -> "1000365"  [label="DDG: decompression_buffer"];
"1000293" -> "1000375"  [label="DDG: decompression_buffer"];
"1000293" -> "1000406"  [label="DDG: decompression_buffer"];
"1000293" -> "1000422"  [label="DDG: decompression_buffer"];
"1000293" -> "1000424"  [label="DDG: decompression_buffer"];
"1000293" -> "1000454"  [label="DDG: decompression_buffer"];
"1000293" -> "1000468"  [label="DDG: decompression_buffer"];
"1000283" -> "1000227"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000294" -> "1000283"  [label="CFG: "];
"1000283" -> "1000475"  [label="DDG: (uint8_t*) gdMalloc(image_block_size * sizeof(uint8_t))"];
"1000285" -> "1000283"  [label="DDG: gdMalloc(image_block_size * sizeof(uint8_t))"];
"1000285" -> "1000287"  [label="CFG: "];
"1000286" -> "1000285"  [label="AST: "];
"1000287" -> "1000285"  [label="AST: "];
"1000285" -> "1000475"  [label="DDG: gdMalloc(image_block_size * sizeof(uint8_t))"];
"1000287" -> "1000285"  [label="DDG: image_block_size * sizeof(uint8_t)"];
"1000287" -> "1000475"  [label="DDG: image_block_size * sizeof(uint8_t)"];
"1000215" -> "1000214"  [label="AST: "];
"1000215" -> "1000219"  [label="CFG: "];
"1000216" -> "1000215"  [label="AST: "];
"1000219" -> "1000215"  [label="AST: "];
"1000222" -> "1000215"  [label="CFG: "];
"1000225" -> "1000215"  [label="CFG: "];
"1000215" -> "1000475"  [label="DDG: tga->bitmap"];
"1000215" -> "1000475"  [label="DDG: NULL"];
"1000215" -> "1000475"  [label="DDG: tga->bitmap == NULL"];
"1000203" -> "1000215"  [label="DDG: tga->bitmap"];
"1000215" -> "1000239"  [label="DDG: NULL"];
"1000203" -> "1000107"  [label="AST: "];
"1000203" -> "1000207"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000207" -> "1000203"  [label="AST: "];
"1000217" -> "1000203"  [label="CFG: "];
"1000203" -> "1000475"  [label="DDG: (int *) gdMalloc(image_block_size * sizeof(int))"];
"1000207" -> "1000203"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000207" -> "1000209"  [label="CFG: "];
"1000208" -> "1000207"  [label="AST: "];
"1000209" -> "1000207"  [label="AST: "];
"1000207" -> "1000475"  [label="DDG: gdMalloc(image_block_size * sizeof(int))"];
"1000209" -> "1000207"  [label="DDG: image_block_size * sizeof(int)"];
"1000209" -> "1000475"  [label="DDG: image_block_size * sizeof(int)"];
"1000105" -> "1000104"  [label="AST: "];
"1000105" -> "1000475"  [label="DDG: ctx"];
"1000105" -> "1000248"  [label="DDG: ctx"];
}
