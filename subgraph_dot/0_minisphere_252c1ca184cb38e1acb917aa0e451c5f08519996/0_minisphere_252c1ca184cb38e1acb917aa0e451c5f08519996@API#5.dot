digraph "0_minisphere_252c1ca184cb38e1acb917aa0e451c5f08519996@API" {
"1000137" [label="(Call,x_size * y_size * sizeof(struct map_tile))"];
"1000102" [label="(MethodParameterIn,int x_size)"];
"1000139" [label="(Call,y_size * sizeof(struct map_tile))"];
"1000103" [label="(MethodParameterIn,int y_size)"];
"1000135" [label="(Call,tilemap_size = x_size * y_size * sizeof(struct map_tile))"];
"1000150" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile))"];
"1000149" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile) != y_size)"];
"1000148" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size)))"];
"1000144" [label="(Call,x_size == 0 || tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size)))"];
"1000178" [label="(Call,y < y_size)"];
"1000189" [label="(Call,y < old_height)"];
"1000185" [label="(Call,x < old_width && y < old_height)"];
"1000198" [label="(Call,y * x_size)"];
"1000168" [label="(Call,x < x_size)"];
"1000171" [label="(Call,++x)"];
"1000186" [label="(Call,x < old_width)"];
"1000196" [label="(Call,x + y * x_size)"];
"1000209" [label="(Call,x + y * old_width)"];
"1000211" [label="(Call,y * old_width)"];
"1000181" [label="(Call,++y)"];
"1000221" [label="(Call,x + y * x_size)"];
"1000223" [label="(Call,y * x_size)"];
"1000257" [label="(Call,s_map->layers[layer].width = x_size)"];
"1000266" [label="(Call,s_map->layers[layer].height = y_size)"];
"1000160" [label="(Call,malloc(tilemap_size))"];
"1000157" [label="(Call,!(tilemap = malloc(tilemap_size)))"];
"1000158" [label="(Call,tilemap = malloc(tilemap_size))"];
"1000248" [label="(Call,s_map->layers[layer].tilemap = tilemap)"];
"1000145" [label="(Call,x_size == 0)"];
"1000152" [label="(Call,x_size / sizeof(struct map_tile))"];
"1000182" [label="(Identifier,y)"];
"1000258" [label="(Call,s_map->layers[layer].width)"];
"1000151" [label="(Identifier,tilemap_size)"];
"1000186" [label="(Call,x < old_width)"];
"1000257" [label="(Call,s_map->layers[layer].width = x_size)"];
"1000137" [label="(Call,x_size * y_size * sizeof(struct map_tile))"];
"1000212" [label="(Identifier,y)"];
"1000270" [label="(Identifier,s_map)"];
"1000117" [label="(Call,old_width = s_map->layers[layer].width)"];
"1000141" [label="(Call,sizeof(struct map_tile))"];
"1000213" [label="(Identifier,old_width)"];
"1000277" [label="(Identifier,s_map)"];
"1000210" [label="(Identifier,x)"];
"1000219" [label="(Call,tilemap[x + y * x_size])"];
"1000156" [label="(Identifier,y_size)"];
"1000146" [label="(Identifier,x_size)"];
"1000211" [label="(Call,y * old_width)"];
"1000178" [label="(Call,y < y_size)"];
"1000217" [label="(Identifier,tile)"];
"1000265" [label="(Identifier,x_size)"];
"1000195" [label="(Identifier,tilemap)"];
"1000154" [label="(Call,sizeof(struct map_tile))"];
"1000179" [label="(Identifier,y)"];
"1000176" [label="(Identifier,y)"];
"1000170" [label="(Identifier,x_size)"];
"1000145" [label="(Call,x_size == 0)"];
"1000209" [label="(Call,x + y * old_width)"];
"1000144" [label="(Call,x_size == 0 || tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size)))"];
"1000126" [label="(Call,old_height = s_map->layers[layer].height)"];
"1000143" [label="(ControlStructure,if (x_size == 0 || tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size))))"];
"1000256" [label="(Identifier,tilemap)"];
"1000248" [label="(Call,s_map->layers[layer].tilemap = tilemap)"];
"1000171" [label="(Call,++x)"];
"1000189" [label="(Call,y < old_height)"];
"1000161" [label="(Identifier,tilemap_size)"];
"1000164" [label="(ControlStructure,for (x = 0; x < x_size; ++x))"];
"1000136" [label="(Identifier,tilemap_size)"];
"1000160" [label="(Call,malloc(tilemap_size))"];
"1000169" [label="(Identifier,x)"];
"1000200" [label="(Identifier,x_size)"];
"1000168" [label="(Call,x < x_size)"];
"1000102" [label="(MethodParameterIn,int x_size)"];
"1000149" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile) != y_size)"];
"1000244" [label="(Identifier,s_map)"];
"1000175" [label="(Call,y = 0)"];
"1000224" [label="(Identifier,y)"];
"1000222" [label="(Identifier,x)"];
"1000249" [label="(Call,s_map->layers[layer].tilemap)"];
"1000157" [label="(Call,!(tilemap = malloc(tilemap_size)))"];
"1000104" [label="(Block,)"];
"1000485" [label="(MethodReturn,RET)"];
"1000190" [label="(Identifier,y)"];
"1000148" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size)))"];
"1000147" [label="(Literal,0)"];
"1000153" [label="(Identifier,x_size)"];
"1000103" [label="(MethodParameterIn,int y_size)"];
"1000274" [label="(Identifier,y_size)"];
"1000152" [label="(Call,x_size / sizeof(struct map_tile))"];
"1000174" [label="(ControlStructure,for (y = 0; y < y_size; ++y))"];
"1000150" [label="(Call,tilemap_size / x_size / sizeof(struct map_tile))"];
"1000158" [label="(Call,tilemap = malloc(tilemap_size))"];
"1000139" [label="(Call,y_size * sizeof(struct map_tile))"];
"1000166" [label="(Identifier,x)"];
"1000197" [label="(Identifier,x)"];
"1000188" [label="(Identifier,old_width)"];
"1000198" [label="(Call,y * x_size)"];
"1000196" [label="(Call,x + y * x_size)"];
"1000221" [label="(Call,x + y * x_size)"];
"1000267" [label="(Call,s_map->layers[layer].height)"];
"1000191" [label="(Identifier,old_height)"];
"1000223" [label="(Call,y * x_size)"];
"1000194" [label="(Call,tilemap[x + y * x_size])"];
"1000180" [label="(Identifier,y_size)"];
"1000225" [label="(Identifier,x_size)"];
"1000140" [label="(Identifier,y_size)"];
"1000165" [label="(Call,x = 0)"];
"1000184" [label="(ControlStructure,if (x < old_width && y < old_height))"];
"1000138" [label="(Identifier,x_size)"];
"1000135" [label="(Call,tilemap_size = x_size * y_size * sizeof(struct map_tile))"];
"1000266" [label="(Call,s_map->layers[layer].height = y_size)"];
"1000159" [label="(Identifier,tilemap)"];
"1000187" [label="(Identifier,x)"];
"1000163" [label="(Identifier,false)"];
"1000201" [label="(Call,s_map->layers[layer].tilemap[x + y * old_width])"];
"1000261" [label="(Identifier,s_map)"];
"1000172" [label="(Identifier,x)"];
"1000185" [label="(Call,x < old_width && y < old_height)"];
"1000199" [label="(Identifier,y)"];
"1000193" [label="(Call,tilemap[x + y * x_size] = s_map->layers[layer].tilemap[x + y * old_width])"];
"1000181" [label="(Call,++y)"];
"1000137" -> "1000135"  [label="AST: "];
"1000137" -> "1000139"  [label="CFG: "];
"1000138" -> "1000137"  [label="AST: "];
"1000139" -> "1000137"  [label="AST: "];
"1000135" -> "1000137"  [label="CFG: "];
"1000137" -> "1000485"  [label="DDG: y_size * sizeof(struct map_tile)"];
"1000137" -> "1000135"  [label="DDG: x_size"];
"1000137" -> "1000135"  [label="DDG: y_size * sizeof(struct map_tile)"];
"1000102" -> "1000137"  [label="DDG: x_size"];
"1000139" -> "1000137"  [label="DDG: y_size"];
"1000137" -> "1000145"  [label="DDG: x_size"];
"1000102" -> "1000100"  [label="AST: "];
"1000102" -> "1000485"  [label="DDG: x_size"];
"1000102" -> "1000145"  [label="DDG: x_size"];
"1000102" -> "1000152"  [label="DDG: x_size"];
"1000102" -> "1000168"  [label="DDG: x_size"];
"1000102" -> "1000198"  [label="DDG: x_size"];
"1000102" -> "1000223"  [label="DDG: x_size"];
"1000102" -> "1000257"  [label="DDG: x_size"];
"1000139" -> "1000141"  [label="CFG: "];
"1000140" -> "1000139"  [label="AST: "];
"1000141" -> "1000139"  [label="AST: "];
"1000139" -> "1000485"  [label="DDG: y_size"];
"1000103" -> "1000139"  [label="DDG: y_size"];
"1000139" -> "1000149"  [label="DDG: y_size"];
"1000139" -> "1000178"  [label="DDG: y_size"];
"1000139" -> "1000266"  [label="DDG: y_size"];
"1000103" -> "1000100"  [label="AST: "];
"1000103" -> "1000485"  [label="DDG: y_size"];
"1000103" -> "1000149"  [label="DDG: y_size"];
"1000103" -> "1000178"  [label="DDG: y_size"];
"1000103" -> "1000266"  [label="DDG: y_size"];
"1000135" -> "1000104"  [label="AST: "];
"1000136" -> "1000135"  [label="AST: "];
"1000146" -> "1000135"  [label="CFG: "];
"1000135" -> "1000485"  [label="DDG: tilemap_size"];
"1000135" -> "1000485"  [label="DDG: x_size * y_size * sizeof(struct map_tile)"];
"1000135" -> "1000150"  [label="DDG: tilemap_size"];
"1000150" -> "1000149"  [label="AST: "];
"1000150" -> "1000152"  [label="CFG: "];
"1000151" -> "1000150"  [label="AST: "];
"1000152" -> "1000150"  [label="AST: "];
"1000156" -> "1000150"  [label="CFG: "];
"1000150" -> "1000485"  [label="DDG: tilemap_size"];
"1000150" -> "1000485"  [label="DDG: x_size / sizeof(struct map_tile)"];
"1000150" -> "1000149"  [label="DDG: tilemap_size"];
"1000150" -> "1000149"  [label="DDG: x_size / sizeof(struct map_tile)"];
"1000152" -> "1000150"  [label="DDG: x_size"];
"1000150" -> "1000160"  [label="DDG: tilemap_size"];
"1000149" -> "1000148"  [label="AST: "];
"1000149" -> "1000156"  [label="CFG: "];
"1000156" -> "1000149"  [label="AST: "];
"1000159" -> "1000149"  [label="CFG: "];
"1000148" -> "1000149"  [label="CFG: "];
"1000149" -> "1000485"  [label="DDG: tilemap_size / x_size / sizeof(struct map_tile)"];
"1000149" -> "1000485"  [label="DDG: y_size"];
"1000149" -> "1000148"  [label="DDG: tilemap_size / x_size / sizeof(struct map_tile)"];
"1000149" -> "1000148"  [label="DDG: y_size"];
"1000149" -> "1000178"  [label="DDG: y_size"];
"1000149" -> "1000266"  [label="DDG: y_size"];
"1000148" -> "1000144"  [label="AST: "];
"1000148" -> "1000157"  [label="CFG: "];
"1000157" -> "1000148"  [label="AST: "];
"1000144" -> "1000148"  [label="CFG: "];
"1000148" -> "1000485"  [label="DDG: !(tilemap = malloc(tilemap_size))"];
"1000148" -> "1000485"  [label="DDG: tilemap_size / x_size / sizeof(struct map_tile) != y_size"];
"1000148" -> "1000144"  [label="DDG: tilemap_size / x_size / sizeof(struct map_tile) != y_size"];
"1000148" -> "1000144"  [label="DDG: !(tilemap = malloc(tilemap_size))"];
"1000144" -> "1000143"  [label="AST: "];
"1000144" -> "1000145"  [label="CFG: "];
"1000145" -> "1000144"  [label="AST: "];
"1000163" -> "1000144"  [label="CFG: "];
"1000166" -> "1000144"  [label="CFG: "];
"1000144" -> "1000485"  [label="DDG: x_size == 0 || tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size))"];
"1000144" -> "1000485"  [label="DDG: tilemap_size / x_size / sizeof(struct map_tile) != y_size\n\t\t|| !(tilemap = malloc(tilemap_size))"];
"1000144" -> "1000485"  [label="DDG: x_size == 0"];
"1000145" -> "1000144"  [label="DDG: x_size"];
"1000145" -> "1000144"  [label="DDG: 0"];
"1000178" -> "1000174"  [label="AST: "];
"1000178" -> "1000180"  [label="CFG: "];
"1000179" -> "1000178"  [label="AST: "];
"1000180" -> "1000178"  [label="AST: "];
"1000187" -> "1000178"  [label="CFG: "];
"1000172" -> "1000178"  [label="CFG: "];
"1000178" -> "1000485"  [label="DDG: y < y_size"];
"1000178" -> "1000485"  [label="DDG: y"];
"1000181" -> "1000178"  [label="DDG: y"];
"1000175" -> "1000178"  [label="DDG: y"];
"1000178" -> "1000189"  [label="DDG: y"];
"1000178" -> "1000198"  [label="DDG: y"];
"1000178" -> "1000223"  [label="DDG: y"];
"1000178" -> "1000266"  [label="DDG: y_size"];
"1000189" -> "1000185"  [label="AST: "];
"1000189" -> "1000191"  [label="CFG: "];
"1000190" -> "1000189"  [label="AST: "];
"1000191" -> "1000189"  [label="AST: "];
"1000185" -> "1000189"  [label="CFG: "];
"1000189" -> "1000485"  [label="DDG: old_height"];
"1000189" -> "1000185"  [label="DDG: y"];
"1000189" -> "1000185"  [label="DDG: old_height"];
"1000126" -> "1000189"  [label="DDG: old_height"];
"1000189" -> "1000198"  [label="DDG: y"];
"1000189" -> "1000223"  [label="DDG: y"];
"1000185" -> "1000184"  [label="AST: "];
"1000185" -> "1000186"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000195" -> "1000185"  [label="CFG: "];
"1000217" -> "1000185"  [label="CFG: "];
"1000185" -> "1000485"  [label="DDG: x < old_width && y < old_height"];
"1000185" -> "1000485"  [label="DDG: x < old_width"];
"1000185" -> "1000485"  [label="DDG: y < old_height"];
"1000186" -> "1000185"  [label="DDG: x"];
"1000186" -> "1000185"  [label="DDG: old_width"];
"1000198" -> "1000196"  [label="AST: "];
"1000198" -> "1000200"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000200" -> "1000198"  [label="AST: "];
"1000196" -> "1000198"  [label="CFG: "];
"1000198" -> "1000168"  [label="DDG: x_size"];
"1000198" -> "1000196"  [label="DDG: y"];
"1000198" -> "1000196"  [label="DDG: x_size"];
"1000223" -> "1000198"  [label="DDG: x_size"];
"1000168" -> "1000198"  [label="DDG: x_size"];
"1000198" -> "1000211"  [label="DDG: y"];
"1000198" -> "1000223"  [label="DDG: x_size"];
"1000168" -> "1000164"  [label="AST: "];
"1000168" -> "1000170"  [label="CFG: "];
"1000169" -> "1000168"  [label="AST: "];
"1000170" -> "1000168"  [label="AST: "];
"1000176" -> "1000168"  [label="CFG: "];
"1000244" -> "1000168"  [label="CFG: "];
"1000168" -> "1000485"  [label="DDG: x < x_size"];
"1000168" -> "1000485"  [label="DDG: x"];
"1000171" -> "1000168"  [label="DDG: x"];
"1000165" -> "1000168"  [label="DDG: x"];
"1000223" -> "1000168"  [label="DDG: x_size"];
"1000152" -> "1000168"  [label="DDG: x_size"];
"1000145" -> "1000168"  [label="DDG: x_size"];
"1000168" -> "1000171"  [label="DDG: x"];
"1000168" -> "1000186"  [label="DDG: x"];
"1000168" -> "1000223"  [label="DDG: x_size"];
"1000168" -> "1000257"  [label="DDG: x_size"];
"1000171" -> "1000164"  [label="AST: "];
"1000171" -> "1000172"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000169" -> "1000171"  [label="CFG: "];
"1000186" -> "1000171"  [label="DDG: x"];
"1000186" -> "1000188"  [label="CFG: "];
"1000187" -> "1000186"  [label="AST: "];
"1000188" -> "1000186"  [label="AST: "];
"1000190" -> "1000186"  [label="CFG: "];
"1000186" -> "1000485"  [label="DDG: old_width"];
"1000117" -> "1000186"  [label="DDG: old_width"];
"1000211" -> "1000186"  [label="DDG: old_width"];
"1000186" -> "1000196"  [label="DDG: x"];
"1000186" -> "1000209"  [label="DDG: x"];
"1000186" -> "1000211"  [label="DDG: old_width"];
"1000186" -> "1000221"  [label="DDG: x"];
"1000196" -> "1000194"  [label="AST: "];
"1000197" -> "1000196"  [label="AST: "];
"1000194" -> "1000196"  [label="CFG: "];
"1000196" -> "1000485"  [label="DDG: y * x_size"];
"1000209" -> "1000201"  [label="AST: "];
"1000209" -> "1000211"  [label="CFG: "];
"1000210" -> "1000209"  [label="AST: "];
"1000211" -> "1000209"  [label="AST: "];
"1000201" -> "1000209"  [label="CFG: "];
"1000209" -> "1000485"  [label="DDG: y * old_width"];
"1000211" -> "1000209"  [label="DDG: y"];
"1000211" -> "1000209"  [label="DDG: old_width"];
"1000211" -> "1000213"  [label="CFG: "];
"1000212" -> "1000211"  [label="AST: "];
"1000213" -> "1000211"  [label="AST: "];
"1000211" -> "1000485"  [label="DDG: old_width"];
"1000211" -> "1000181"  [label="DDG: y"];
"1000181" -> "1000174"  [label="AST: "];
"1000181" -> "1000182"  [label="CFG: "];
"1000182" -> "1000181"  [label="AST: "];
"1000179" -> "1000181"  [label="CFG: "];
"1000223" -> "1000181"  [label="DDG: y"];
"1000221" -> "1000219"  [label="AST: "];
"1000221" -> "1000223"  [label="CFG: "];
"1000222" -> "1000221"  [label="AST: "];
"1000223" -> "1000221"  [label="AST: "];
"1000219" -> "1000221"  [label="CFG: "];
"1000221" -> "1000485"  [label="DDG: y * x_size"];
"1000223" -> "1000221"  [label="DDG: y"];
"1000223" -> "1000221"  [label="DDG: x_size"];
"1000223" -> "1000225"  [label="CFG: "];
"1000224" -> "1000223"  [label="AST: "];
"1000225" -> "1000223"  [label="AST: "];
"1000257" -> "1000104"  [label="AST: "];
"1000257" -> "1000265"  [label="CFG: "];
"1000258" -> "1000257"  [label="AST: "];
"1000265" -> "1000257"  [label="AST: "];
"1000270" -> "1000257"  [label="CFG: "];
"1000257" -> "1000485"  [label="DDG: x_size"];
"1000257" -> "1000485"  [label="DDG: s_map->layers[layer].width"];
"1000266" -> "1000104"  [label="AST: "];
"1000266" -> "1000274"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000274" -> "1000266"  [label="AST: "];
"1000277" -> "1000266"  [label="CFG: "];
"1000266" -> "1000485"  [label="DDG: s_map->layers[layer].height"];
"1000266" -> "1000485"  [label="DDG: y_size"];
"1000160" -> "1000158"  [label="AST: "];
"1000160" -> "1000161"  [label="CFG: "];
"1000161" -> "1000160"  [label="AST: "];
"1000158" -> "1000160"  [label="CFG: "];
"1000160" -> "1000485"  [label="DDG: tilemap_size"];
"1000160" -> "1000157"  [label="DDG: tilemap_size"];
"1000160" -> "1000158"  [label="DDG: tilemap_size"];
"1000157" -> "1000158"  [label="CFG: "];
"1000158" -> "1000157"  [label="AST: "];
"1000158" -> "1000157"  [label="DDG: tilemap"];
"1000159" -> "1000158"  [label="AST: "];
"1000158" -> "1000485"  [label="DDG: tilemap"];
"1000158" -> "1000485"  [label="DDG: malloc(tilemap_size)"];
"1000158" -> "1000248"  [label="DDG: tilemap"];
"1000248" -> "1000104"  [label="AST: "];
"1000248" -> "1000256"  [label="CFG: "];
"1000249" -> "1000248"  [label="AST: "];
"1000256" -> "1000248"  [label="AST: "];
"1000261" -> "1000248"  [label="CFG: "];
"1000248" -> "1000485"  [label="DDG: tilemap"];
"1000248" -> "1000485"  [label="DDG: s_map->layers[layer].tilemap"];
"1000193" -> "1000248"  [label="DDG: tilemap[x + y * x_size]"];
"1000145" -> "1000147"  [label="CFG: "];
"1000146" -> "1000145"  [label="AST: "];
"1000147" -> "1000145"  [label="AST: "];
"1000151" -> "1000145"  [label="CFG: "];
"1000145" -> "1000485"  [label="DDG: x_size"];
"1000145" -> "1000152"  [label="DDG: x_size"];
"1000152" -> "1000154"  [label="CFG: "];
"1000153" -> "1000152"  [label="AST: "];
"1000154" -> "1000152"  [label="AST: "];
"1000152" -> "1000485"  [label="DDG: x_size"];
}
