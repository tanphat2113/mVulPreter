digraph "0_Android_edd4a76eb4747bd19ed122df46fa46b452c12a0d@API" {
"1000120" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000119" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header))\n < (ssize_t)sizeof(header))"];
"1000184" [label="(Call,mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8))"];
"1000183" [label="(Call,mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8)\n < (ssize_t)numEntries * 8)"];
"1000198" [label="(Call,delete[] mCompositionTimeDeltaEntries)"];
"1000222" [label="(Call,ntohl(mCompositionTimeDeltaEntries[i]))"];
"1000218" [label="(Call,mCompositionTimeDeltaEntries[i] = ntohl(mCompositionTimeDeltaEntries[i]))"];
"1000226" [label="(Call,mCompositionDeltaLookup->setEntries(\n            mCompositionTimeDeltaEntries, mNumCompositionTimeDeltaEntries))"];
"1000185" [label="(Call,data_offset + 8)"];
"1000199" [label="(Identifier,mCompositionTimeDeltaEntries)"];
"1000218" [label="(Call,mCompositionTimeDeltaEntries[i] = ntohl(mCompositionTimeDeltaEntries[i]))"];
"1000219" [label="(Call,mCompositionTimeDeltaEntries[i])"];
"1000217" [label="(Block,)"];
"1000118" [label="(ControlStructure,if (mDataSource->readAt(\n                data_offset, header, sizeof(header))\n < (ssize_t)sizeof(header)))"];
"1000183" [label="(Call,mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8)\n < (ssize_t)numEntries * 8)"];
"1000119" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header))\n < (ssize_t)sizeof(header))"];
"1000216" [label="(Identifier,i)"];
"1000208" [label="(Identifier,i)"];
"1000159" [label="(Call,mNumCompositionTimeDeltaEntries = numEntries)"];
"1000120" [label="(Call,mDataSource->readAt(\n                data_offset, header, sizeof(header)))"];
"1000125" [label="(Call,(ssize_t)sizeof(header))"];
"1000230" [label="(Identifier,OK)"];
"1000201" [label="(Identifier,mCompositionTimeDeltaEntries)"];
"1000103" [label="(Block,)"];
"1000122" [label="(Identifier,header)"];
"1000189" [label="(Call,numEntries * 8)"];
"1000226" [label="(Call,mCompositionDeltaLookup->setEntries(\n            mCompositionTimeDeltaEntries, mNumCompositionTimeDeltaEntries))"];
"1000186" [label="(Identifier,data_offset)"];
"1000185" [label="(Call,data_offset + 8)"];
"1000135" [label="(Identifier,header)"];
"1000198" [label="(Call,delete[] mCompositionTimeDeltaEntries)"];
"1000123" [label="(Call,sizeof(header))"];
"1000222" [label="(Call,ntohl(mCompositionTimeDeltaEntries[i]))"];
"1000228" [label="(Identifier,mNumCompositionTimeDeltaEntries)"];
"1000184" [label="(Call,mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8))"];
"1000188" [label="(Identifier,mCompositionTimeDeltaEntries)"];
"1000192" [label="(Call,(ssize_t)numEntries * 8)"];
"1000223" [label="(Call,mCompositionTimeDeltaEntries[i])"];
"1000227" [label="(Identifier,mCompositionTimeDeltaEntries)"];
"1000187" [label="(Literal,8)"];
"1000178" [label="(Call,mCompositionTimeDeltaEntries = new uint32_t[2 * numEntries])"];
"1000231" [label="(MethodReturn,status_t)"];
"1000131" [label="(Identifier,ERROR_IO)"];
"1000182" [label="(ControlStructure,if (mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8)\n < (ssize_t)numEntries * 8))"];
"1000121" [label="(Identifier,data_offset)"];
"1000197" [label="(Block,)"];
"1000101" [label="(MethodParameterIn,off64_t data_offset)"];
"1000120" -> "1000119"  [label="AST: "];
"1000120" -> "1000123"  [label="CFG: "];
"1000121" -> "1000120"  [label="AST: "];
"1000122" -> "1000120"  [label="AST: "];
"1000123" -> "1000120"  [label="AST: "];
"1000126" -> "1000120"  [label="CFG: "];
"1000120" -> "1000231"  [label="DDG: data_offset"];
"1000120" -> "1000119"  [label="DDG: data_offset"];
"1000120" -> "1000119"  [label="DDG: header"];
"1000101" -> "1000120"  [label="DDG: data_offset"];
"1000120" -> "1000184"  [label="DDG: data_offset"];
"1000120" -> "1000185"  [label="DDG: data_offset"];
"1000101" -> "1000100"  [label="AST: "];
"1000101" -> "1000231"  [label="DDG: data_offset"];
"1000101" -> "1000184"  [label="DDG: data_offset"];
"1000101" -> "1000185"  [label="DDG: data_offset"];
"1000119" -> "1000118"  [label="AST: "];
"1000119" -> "1000125"  [label="CFG: "];
"1000125" -> "1000119"  [label="AST: "];
"1000131" -> "1000119"  [label="CFG: "];
"1000135" -> "1000119"  [label="CFG: "];
"1000119" -> "1000231"  [label="DDG: mDataSource->readAt(\n                data_offset, header, sizeof(header))\n < (ssize_t)sizeof(header)"];
"1000119" -> "1000231"  [label="DDG: (ssize_t)sizeof(header)"];
"1000119" -> "1000231"  [label="DDG: mDataSource->readAt(\n                data_offset, header, sizeof(header))"];
"1000184" -> "1000183"  [label="AST: "];
"1000184" -> "1000189"  [label="CFG: "];
"1000185" -> "1000184"  [label="AST: "];
"1000188" -> "1000184"  [label="AST: "];
"1000189" -> "1000184"  [label="AST: "];
"1000194" -> "1000184"  [label="CFG: "];
"1000184" -> "1000231"  [label="DDG: data_offset + 8"];
"1000184" -> "1000231"  [label="DDG: numEntries * 8"];
"1000184" -> "1000183"  [label="DDG: data_offset + 8"];
"1000184" -> "1000183"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000184" -> "1000183"  [label="DDG: numEntries * 8"];
"1000178" -> "1000184"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000189" -> "1000184"  [label="DDG: numEntries"];
"1000189" -> "1000184"  [label="DDG: 8"];
"1000184" -> "1000198"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000184" -> "1000222"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000184" -> "1000226"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000183" -> "1000182"  [label="AST: "];
"1000183" -> "1000192"  [label="CFG: "];
"1000192" -> "1000183"  [label="AST: "];
"1000199" -> "1000183"  [label="CFG: "];
"1000208" -> "1000183"  [label="CFG: "];
"1000183" -> "1000231"  [label="DDG: mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8)"];
"1000183" -> "1000231"  [label="DDG: mDataSource->readAt(\n                data_offset + 8, mCompositionTimeDeltaEntries, numEntries * 8)\n < (ssize_t)numEntries * 8"];
"1000183" -> "1000231"  [label="DDG: (ssize_t)numEntries * 8"];
"1000192" -> "1000183"  [label="DDG: (ssize_t)numEntries"];
"1000192" -> "1000183"  [label="DDG: 8"];
"1000198" -> "1000197"  [label="AST: "];
"1000198" -> "1000199"  [label="CFG: "];
"1000199" -> "1000198"  [label="AST: "];
"1000201" -> "1000198"  [label="CFG: "];
"1000198" -> "1000231"  [label="DDG: delete[] mCompositionTimeDeltaEntries"];
"1000222" -> "1000218"  [label="AST: "];
"1000222" -> "1000223"  [label="CFG: "];
"1000223" -> "1000222"  [label="AST: "];
"1000218" -> "1000222"  [label="CFG: "];
"1000222" -> "1000218"  [label="DDG: mCompositionTimeDeltaEntries[i]"];
"1000218" -> "1000222"  [label="DDG: mCompositionTimeDeltaEntries[i]"];
"1000218" -> "1000217"  [label="AST: "];
"1000219" -> "1000218"  [label="AST: "];
"1000216" -> "1000218"  [label="CFG: "];
"1000218" -> "1000231"  [label="DDG: mCompositionTimeDeltaEntries[i]"];
"1000218" -> "1000231"  [label="DDG: ntohl(mCompositionTimeDeltaEntries[i])"];
"1000218" -> "1000226"  [label="DDG: mCompositionTimeDeltaEntries[i]"];
"1000226" -> "1000103"  [label="AST: "];
"1000226" -> "1000228"  [label="CFG: "];
"1000227" -> "1000226"  [label="AST: "];
"1000228" -> "1000226"  [label="AST: "];
"1000230" -> "1000226"  [label="CFG: "];
"1000226" -> "1000231"  [label="DDG: mCompositionTimeDeltaEntries"];
"1000226" -> "1000231"  [label="DDG: mCompositionDeltaLookup->setEntries(\n            mCompositionTimeDeltaEntries, mNumCompositionTimeDeltaEntries)"];
"1000226" -> "1000231"  [label="DDG: mNumCompositionTimeDeltaEntries"];
"1000159" -> "1000226"  [label="DDG: mNumCompositionTimeDeltaEntries"];
"1000185" -> "1000187"  [label="CFG: "];
"1000186" -> "1000185"  [label="AST: "];
"1000187" -> "1000185"  [label="AST: "];
"1000188" -> "1000185"  [label="CFG: "];
"1000185" -> "1000231"  [label="DDG: data_offset"];
}
