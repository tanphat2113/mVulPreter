digraph "0_linux_e0c9c0afd2fc958ffa34b697972721d81df8a56f_0@pointer" {
"1000203" [label="(Call,p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000128" [label="(Call,p->mnt.mnt_flags |= MNT_UMOUNT)"];
"1000200" [label="(Call,mnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT))"];
"1000196" [label="(Call,(how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT))"];
"1000195" [label="(Call,((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p))"];
"1000194" [label="(Call,!(((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)))"];
"1000192" [label="(Call,disconnect = !(((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)))"];
"1000217" [label="(Identifier,p)"];
"1000128" [label="(Call,p->mnt.mnt_flags |= MNT_UMOUNT)"];
"1000160" [label="(Block,)"];
"1000194" [label="(Call,!(((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)))"];
"1000134" [label="(Identifier,MNT_UMOUNT)"];
"1000213" [label="(Identifier,p)"];
"1000204" [label="(Call,p->mnt_parent->mnt.mnt_flags)"];
"1000203" [label="(Call,p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000193" [label="(Identifier,disconnect)"];
"1000185" [label="(Call,p->mnt.mnt_flags |= MNT_SYNC_UMOUNT)"];
"1000212" [label="(Call,IS_MNT_LOCKED_AND_LAZY(p))"];
"1000200" [label="(Call,mnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT))"];
"1000197" [label="(Call,how & UMOUNT_CONNECTED)"];
"1000262" [label="(MethodReturn,static void)"];
"1000195" [label="(Call,((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p))"];
"1000138" [label="(Identifier,p)"];
"1000192" [label="(Call,disconnect = !(((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)))"];
"1000196" [label="(Call,(how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT))"];
"1000127" [label="(Block,)"];
"1000129" [label="(Call,p->mnt.mnt_flags)"];
"1000201" [label="(Call,mnt_has_parent(p))"];
"1000211" [label="(Identifier,MNT_UMOUNT)"];
"1000203" -> "1000200"  [label="AST: "];
"1000203" -> "1000211"  [label="CFG: "];
"1000204" -> "1000203"  [label="AST: "];
"1000211" -> "1000203"  [label="AST: "];
"1000200" -> "1000203"  [label="CFG: "];
"1000203" -> "1000262"  [label="DDG: MNT_UMOUNT"];
"1000203" -> "1000262"  [label="DDG: p->mnt_parent->mnt.mnt_flags"];
"1000203" -> "1000200"  [label="DDG: p->mnt_parent->mnt.mnt_flags"];
"1000203" -> "1000200"  [label="DDG: MNT_UMOUNT"];
"1000128" -> "1000203"  [label="DDG: MNT_UMOUNT"];
"1000128" -> "1000127"  [label="AST: "];
"1000128" -> "1000134"  [label="CFG: "];
"1000129" -> "1000128"  [label="AST: "];
"1000134" -> "1000128"  [label="AST: "];
"1000138" -> "1000128"  [label="CFG: "];
"1000128" -> "1000262"  [label="DDG: p->mnt.mnt_flags"];
"1000128" -> "1000262"  [label="DDG: MNT_UMOUNT"];
"1000128" -> "1000262"  [label="DDG: p->mnt.mnt_flags |= MNT_UMOUNT"];
"1000128" -> "1000185"  [label="DDG: p->mnt.mnt_flags"];
"1000200" -> "1000196"  [label="AST: "];
"1000200" -> "1000201"  [label="CFG: "];
"1000201" -> "1000200"  [label="AST: "];
"1000196" -> "1000200"  [label="CFG: "];
"1000200" -> "1000262"  [label="DDG: p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT"];
"1000200" -> "1000196"  [label="DDG: mnt_has_parent(p)"];
"1000200" -> "1000196"  [label="DDG: p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT"];
"1000201" -> "1000200"  [label="DDG: p"];
"1000196" -> "1000195"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000213" -> "1000196"  [label="CFG: "];
"1000195" -> "1000196"  [label="CFG: "];
"1000196" -> "1000262"  [label="DDG: mnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000196" -> "1000262"  [label="DDG: how & UMOUNT_CONNECTED"];
"1000196" -> "1000195"  [label="DDG: how & UMOUNT_CONNECTED"];
"1000196" -> "1000195"  [label="DDG: mnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000197" -> "1000196"  [label="DDG: how"];
"1000197" -> "1000196"  [label="DDG: UMOUNT_CONNECTED"];
"1000195" -> "1000194"  [label="AST: "];
"1000195" -> "1000212"  [label="CFG: "];
"1000212" -> "1000195"  [label="AST: "];
"1000194" -> "1000195"  [label="CFG: "];
"1000195" -> "1000262"  [label="DDG: IS_MNT_LOCKED_AND_LAZY(p)"];
"1000195" -> "1000262"  [label="DDG: (how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000195" -> "1000194"  [label="DDG: (how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)"];
"1000195" -> "1000194"  [label="DDG: IS_MNT_LOCKED_AND_LAZY(p)"];
"1000212" -> "1000195"  [label="DDG: p"];
"1000194" -> "1000192"  [label="AST: "];
"1000192" -> "1000194"  [label="CFG: "];
"1000194" -> "1000262"  [label="DDG: ((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)"];
"1000194" -> "1000192"  [label="DDG: ((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p)"];
"1000192" -> "1000160"  [label="AST: "];
"1000193" -> "1000192"  [label="AST: "];
"1000217" -> "1000192"  [label="CFG: "];
"1000192" -> "1000262"  [label="DDG: !(((how & UMOUNT_CONNECTED) &&\n\t\t\t\tmnt_has_parent(p) &&\n\t\t\t\t(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||\n\t\t\t       IS_MNT_LOCKED_AND_LAZY(p))"];
}
