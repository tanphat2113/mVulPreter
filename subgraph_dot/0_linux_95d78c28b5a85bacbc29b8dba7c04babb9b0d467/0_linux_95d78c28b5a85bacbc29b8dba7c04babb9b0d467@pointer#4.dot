digraph "0_linux_95d78c28b5a85bacbc29b8dba7c04babb9b0d467@pointer" {
"1000266" [label="(Call,iter->type & WRITE)"];
"1000265" [label="(Call,(iter->type & WRITE) != WRITE)"];
"1000262" [label="(Call,get_user_pages_fast(uaddr, local_nr_pages,\n\t\t\t\t(iter->type & WRITE) != WRITE,\n\t\t\t\t&pages[cur_page]))"];
"1000260" [label="(Call,ret = get_user_pages_fast(uaddr, local_nr_pages,\n\t\t\t\t(iter->type & WRITE) != WRITE,\n\t\t\t\t&pages[cur_page]))"];
"1000277" [label="(Call,ret < local_nr_pages)"];
"1000288" [label="(Call,offset_in_page(uaddr))"];
"1000286" [label="(Call,offset = offset_in_page(uaddr))"];
"1000303" [label="(Call,PAGE_SIZE - offset)"];
"1000301" [label="(Call,bytes = PAGE_SIZE - offset)"];
"1000318" [label="(Call,bytes > len)"];
"1000321" [label="(Call,bytes = len)"];
"1000326" [label="(Call,bio_add_pc_page(q, bio, pages[j], bytes, offset))"];
"1000325" [label="(Call,bio_add_pc_page(q, bio, pages[j], bytes, offset) <\n \t\t\t\t\t    bytes)"];
"1000346" [label="(Call,len -= bytes)"];
"1000313" [label="(Call,len <= 0)"];
"1000342" [label="(Call,put_page(pages[j]))"];
"1000364" [label="(Call,kfree(pages))"];
"1000366" [label="(Call,bio_set_flag(bio, BIO_USER_MAPPED))"];
"1000369" [label="(Call,bio_get(bio))"];
"1000371" [label="(Return,return bio;)"];
"1000288" [label="(Call,offset_in_page(uaddr))"];
"1000299" [label="(Block,)"];
"1000267" [label="(Call,iter->type)"];
"1000194" [label="(Call,!bio)"];
"1000336" [label="(ControlStructure,if (bio->bi_vcnt == prev_bi_vcnt))"];
"1000289" [label="(Identifier,uaddr)"];
"1000359" [label="(Call,put_page(pages[j++]))"];
"1000265" [label="(Call,(iter->type & WRITE) != WRITE)"];
"1000279" [label="(Identifier,local_nr_pages)"];
"1000366" [label="(Call,bio_set_flag(bio, BIO_USER_MAPPED))"];
"1000321" [label="(Call,bytes = len)"];
"1000348" [label="(Identifier,bytes)"];
"1000372" [label="(Identifier,bio)"];
"1000329" [label="(Call,pages[j])"];
"1000277" [label="(Call,ret < local_nr_pages)"];
"1000313" [label="(Call,len <= 0)"];
"1000324" [label="(ControlStructure,if (bio_add_pc_page(q, bio, pages[j], bytes, offset) <\n \t\t\t\t\t    bytes))"];
"1000367" [label="(Identifier,bio)"];
"1000368" [label="(Identifier,BIO_USER_MAPPED)"];
"1000320" [label="(Identifier,len)"];
"1000342" [label="(Call,put_page(pages[j]))"];
"1000264" [label="(Identifier,local_nr_pages)"];
"1000286" [label="(Call,offset = offset_in_page(uaddr))"];
"1000314" [label="(Identifier,len)"];
"1000343" [label="(Call,pages[j])"];
"1000371" [label="(Return,return bio;)"];
"1000212" [label="(Call,!pages)"];
"1000333" [label="(Identifier,offset)"];
"1000261" [label="(Identifier,ret)"];
"1000292" [label="(Identifier,j)"];
"1000335" [label="(ControlStructure,break;)"];
"1000110" [label="(Block,)"];
"1000266" [label="(Call,iter->type & WRITE)"];
"1000272" [label="(Call,&pages[cur_page])"];
"1000327" [label="(Identifier,q)"];
"1000315" [label="(Literal,0)"];
"1000369" [label="(Call,bio_get(bio))"];
"1000364" [label="(Call,kfree(pages))"];
"1000402" [label="(MethodReturn,struct bio *)"];
"1000302" [label="(Identifier,bytes)"];
"1000318" [label="(Call,bytes > len)"];
"1000249" [label="(Call,local_nr_pages = end - start)"];
"1000328" [label="(Identifier,bio)"];
"1000370" [label="(Identifier,bio)"];
"1000301" [label="(Call,bytes = PAGE_SIZE - offset)"];
"1000107" [label="(MethodParameterIn,struct request_queue *q)"];
"1000332" [label="(Identifier,bytes)"];
"1000260" [label="(Call,ret = get_user_pages_fast(uaddr, local_nr_pages,\n\t\t\t\t(iter->type & WRITE) != WRITE,\n\t\t\t\t&pages[cur_page]))"];
"1000245" [label="(Call,uaddr >> PAGE_SHIFT)"];
"1000326" [label="(Call,bio_add_pc_page(q, bio, pages[j], bytes, offset))"];
"1000215" [label="(Block,)"];
"1000282" [label="(Identifier,ret)"];
"1000346" [label="(Call,len -= bytes)"];
"1000319" [label="(Identifier,bytes)"];
"1000323" [label="(Identifier,len)"];
"1000175" [label="(Call,queue_dma_alignment(q))"];
"1000271" [label="(Identifier,WRITE)"];
"1000349" [label="(Call,offset = 0)"];
"1000238" [label="(Call,PAGE_SIZE - 1)"];
"1000312" [label="(ControlStructure,if (len <= 0))"];
"1000350" [label="(Identifier,offset)"];
"1000287" [label="(Identifier,offset)"];
"1000303" [label="(Call,PAGE_SIZE - offset)"];
"1000304" [label="(Identifier,PAGE_SIZE)"];
"1000325" [label="(Call,bio_add_pc_page(q, bio, pages[j], bytes, offset) <\n \t\t\t\t\t    bytes)"];
"1000365" [label="(Identifier,pages)"];
"1000317" [label="(ControlStructure,if (bytes > len))"];
"1000308" [label="(Identifier,prev_bi_vcnt)"];
"1000305" [label="(Identifier,offset)"];
"1000334" [label="(Identifier,bytes)"];
"1000278" [label="(Identifier,ret)"];
"1000225" [label="(Call,len = iov.iov_len)"];
"1000262" [label="(Call,get_user_pages_fast(uaddr, local_nr_pages,\n\t\t\t\t(iter->type & WRITE) != WRITE,\n\t\t\t\t&pages[cur_page]))"];
"1000322" [label="(Identifier,bytes)"];
"1000347" [label="(Identifier,len)"];
"1000316" [label="(ControlStructure,break;)"];
"1000270" [label="(Identifier,WRITE)"];
"1000339" [label="(Identifier,bio)"];
"1000276" [label="(ControlStructure,if (ret < local_nr_pages))"];
"1000274" [label="(Identifier,pages)"];
"1000263" [label="(Identifier,uaddr)"];
"1000266" -> "1000265"  [label="AST: "];
"1000266" -> "1000270"  [label="CFG: "];
"1000267" -> "1000266"  [label="AST: "];
"1000270" -> "1000266"  [label="AST: "];
"1000271" -> "1000266"  [label="CFG: "];
"1000266" -> "1000402"  [label="DDG: iter->type"];
"1000266" -> "1000265"  [label="DDG: iter->type"];
"1000266" -> "1000265"  [label="DDG: WRITE"];
"1000265" -> "1000262"  [label="AST: "];
"1000265" -> "1000271"  [label="CFG: "];
"1000271" -> "1000265"  [label="AST: "];
"1000274" -> "1000265"  [label="CFG: "];
"1000265" -> "1000402"  [label="DDG: iter->type & WRITE"];
"1000265" -> "1000402"  [label="DDG: WRITE"];
"1000265" -> "1000262"  [label="DDG: iter->type & WRITE"];
"1000265" -> "1000262"  [label="DDG: WRITE"];
"1000262" -> "1000260"  [label="AST: "];
"1000262" -> "1000272"  [label="CFG: "];
"1000263" -> "1000262"  [label="AST: "];
"1000264" -> "1000262"  [label="AST: "];
"1000272" -> "1000262"  [label="AST: "];
"1000260" -> "1000262"  [label="CFG: "];
"1000262" -> "1000402"  [label="DDG: (iter->type & WRITE) != WRITE"];
"1000262" -> "1000402"  [label="DDG: uaddr"];
"1000262" -> "1000402"  [label="DDG: &pages[cur_page]"];
"1000262" -> "1000260"  [label="DDG: uaddr"];
"1000262" -> "1000260"  [label="DDG: local_nr_pages"];
"1000262" -> "1000260"  [label="DDG: (iter->type & WRITE) != WRITE"];
"1000262" -> "1000260"  [label="DDG: &pages[cur_page]"];
"1000245" -> "1000262"  [label="DDG: uaddr"];
"1000249" -> "1000262"  [label="DDG: local_nr_pages"];
"1000262" -> "1000277"  [label="DDG: local_nr_pages"];
"1000262" -> "1000288"  [label="DDG: uaddr"];
"1000260" -> "1000215"  [label="AST: "];
"1000261" -> "1000260"  [label="AST: "];
"1000278" -> "1000260"  [label="CFG: "];
"1000260" -> "1000402"  [label="DDG: get_user_pages_fast(uaddr, local_nr_pages,\n\t\t\t\t(iter->type & WRITE) != WRITE,\n\t\t\t\t&pages[cur_page])"];
"1000260" -> "1000277"  [label="DDG: ret"];
"1000277" -> "1000276"  [label="AST: "];
"1000277" -> "1000279"  [label="CFG: "];
"1000278" -> "1000277"  [label="AST: "];
"1000279" -> "1000277"  [label="AST: "];
"1000282" -> "1000277"  [label="CFG: "];
"1000287" -> "1000277"  [label="CFG: "];
"1000277" -> "1000402"  [label="DDG: ret"];
"1000277" -> "1000402"  [label="DDG: ret < local_nr_pages"];
"1000277" -> "1000402"  [label="DDG: local_nr_pages"];
"1000288" -> "1000286"  [label="AST: "];
"1000288" -> "1000289"  [label="CFG: "];
"1000289" -> "1000288"  [label="AST: "];
"1000286" -> "1000288"  [label="CFG: "];
"1000288" -> "1000402"  [label="DDG: uaddr"];
"1000288" -> "1000286"  [label="DDG: uaddr"];
"1000286" -> "1000215"  [label="AST: "];
"1000287" -> "1000286"  [label="AST: "];
"1000292" -> "1000286"  [label="CFG: "];
"1000286" -> "1000402"  [label="DDG: offset"];
"1000286" -> "1000402"  [label="DDG: offset_in_page(uaddr)"];
"1000286" -> "1000303"  [label="DDG: offset"];
"1000303" -> "1000301"  [label="AST: "];
"1000303" -> "1000305"  [label="CFG: "];
"1000304" -> "1000303"  [label="AST: "];
"1000305" -> "1000303"  [label="AST: "];
"1000301" -> "1000303"  [label="CFG: "];
"1000303" -> "1000402"  [label="DDG: PAGE_SIZE"];
"1000303" -> "1000402"  [label="DDG: offset"];
"1000303" -> "1000301"  [label="DDG: PAGE_SIZE"];
"1000303" -> "1000301"  [label="DDG: offset"];
"1000238" -> "1000303"  [label="DDG: PAGE_SIZE"];
"1000349" -> "1000303"  [label="DDG: offset"];
"1000303" -> "1000326"  [label="DDG: offset"];
"1000301" -> "1000299"  [label="AST: "];
"1000302" -> "1000301"  [label="AST: "];
"1000308" -> "1000301"  [label="CFG: "];
"1000301" -> "1000402"  [label="DDG: PAGE_SIZE - offset"];
"1000301" -> "1000402"  [label="DDG: bytes"];
"1000301" -> "1000318"  [label="DDG: bytes"];
"1000318" -> "1000317"  [label="AST: "];
"1000318" -> "1000320"  [label="CFG: "];
"1000319" -> "1000318"  [label="AST: "];
"1000320" -> "1000318"  [label="AST: "];
"1000322" -> "1000318"  [label="CFG: "];
"1000327" -> "1000318"  [label="CFG: "];
"1000318" -> "1000402"  [label="DDG: bytes > len"];
"1000318" -> "1000402"  [label="DDG: len"];
"1000313" -> "1000318"  [label="DDG: len"];
"1000318" -> "1000321"  [label="DDG: len"];
"1000318" -> "1000326"  [label="DDG: bytes"];
"1000318" -> "1000346"  [label="DDG: len"];
"1000321" -> "1000317"  [label="AST: "];
"1000321" -> "1000323"  [label="CFG: "];
"1000322" -> "1000321"  [label="AST: "];
"1000323" -> "1000321"  [label="AST: "];
"1000327" -> "1000321"  [label="CFG: "];
"1000321" -> "1000402"  [label="DDG: len"];
"1000321" -> "1000326"  [label="DDG: bytes"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000333"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="AST: "];
"1000332" -> "1000326"  [label="AST: "];
"1000333" -> "1000326"  [label="AST: "];
"1000334" -> "1000326"  [label="CFG: "];
"1000326" -> "1000402"  [label="DDG: offset"];
"1000326" -> "1000402"  [label="DDG: pages[j]"];
"1000326" -> "1000402"  [label="DDG: q"];
"1000326" -> "1000325"  [label="DDG: pages[j]"];
"1000326" -> "1000325"  [label="DDG: q"];
"1000326" -> "1000325"  [label="DDG: bio"];
"1000326" -> "1000325"  [label="DDG: bytes"];
"1000326" -> "1000325"  [label="DDG: offset"];
"1000175" -> "1000326"  [label="DDG: q"];
"1000107" -> "1000326"  [label="DDG: q"];
"1000194" -> "1000326"  [label="DDG: bio"];
"1000342" -> "1000326"  [label="DDG: pages[j]"];
"1000212" -> "1000326"  [label="DDG: pages"];
"1000326" -> "1000342"  [label="DDG: pages[j]"];
"1000326" -> "1000364"  [label="DDG: pages[j]"];
"1000326" -> "1000366"  [label="DDG: bio"];
"1000325" -> "1000324"  [label="AST: "];
"1000325" -> "1000334"  [label="CFG: "];
"1000334" -> "1000325"  [label="AST: "];
"1000335" -> "1000325"  [label="CFG: "];
"1000339" -> "1000325"  [label="CFG: "];
"1000325" -> "1000402"  [label="DDG: bio_add_pc_page(q, bio, pages[j], bytes, offset)"];
"1000325" -> "1000402"  [label="DDG: bytes"];
"1000325" -> "1000402"  [label="DDG: bio_add_pc_page(q, bio, pages[j], bytes, offset) <\n \t\t\t\t\t    bytes"];
"1000325" -> "1000346"  [label="DDG: bytes"];
"1000346" -> "1000299"  [label="AST: "];
"1000346" -> "1000348"  [label="CFG: "];
"1000347" -> "1000346"  [label="AST: "];
"1000348" -> "1000346"  [label="AST: "];
"1000350" -> "1000346"  [label="CFG: "];
"1000346" -> "1000402"  [label="DDG: bytes"];
"1000346" -> "1000402"  [label="DDG: len"];
"1000346" -> "1000313"  [label="DDG: len"];
"1000313" -> "1000312"  [label="AST: "];
"1000313" -> "1000315"  [label="CFG: "];
"1000314" -> "1000313"  [label="AST: "];
"1000315" -> "1000313"  [label="AST: "];
"1000316" -> "1000313"  [label="CFG: "];
"1000319" -> "1000313"  [label="CFG: "];
"1000313" -> "1000402"  [label="DDG: len <= 0"];
"1000313" -> "1000402"  [label="DDG: len"];
"1000225" -> "1000313"  [label="DDG: len"];
"1000342" -> "1000336"  [label="AST: "];
"1000342" -> "1000343"  [label="CFG: "];
"1000343" -> "1000342"  [label="AST: "];
"1000347" -> "1000342"  [label="CFG: "];
"1000342" -> "1000402"  [label="DDG: pages[j]"];
"1000342" -> "1000402"  [label="DDG: put_page(pages[j])"];
"1000212" -> "1000342"  [label="DDG: pages"];
"1000342" -> "1000364"  [label="DDG: pages[j]"];
"1000364" -> "1000110"  [label="AST: "];
"1000364" -> "1000365"  [label="CFG: "];
"1000365" -> "1000364"  [label="AST: "];
"1000367" -> "1000364"  [label="CFG: "];
"1000364" -> "1000402"  [label="DDG: pages"];
"1000364" -> "1000402"  [label="DDG: kfree(pages)"];
"1000359" -> "1000364"  [label="DDG: pages[j++]"];
"1000212" -> "1000364"  [label="DDG: pages"];
"1000366" -> "1000110"  [label="AST: "];
"1000366" -> "1000368"  [label="CFG: "];
"1000367" -> "1000366"  [label="AST: "];
"1000368" -> "1000366"  [label="AST: "];
"1000370" -> "1000366"  [label="CFG: "];
"1000366" -> "1000402"  [label="DDG: BIO_USER_MAPPED"];
"1000366" -> "1000402"  [label="DDG: bio_set_flag(bio, BIO_USER_MAPPED)"];
"1000194" -> "1000366"  [label="DDG: bio"];
"1000366" -> "1000369"  [label="DDG: bio"];
"1000369" -> "1000110"  [label="AST: "];
"1000369" -> "1000370"  [label="CFG: "];
"1000370" -> "1000369"  [label="AST: "];
"1000372" -> "1000369"  [label="CFG: "];
"1000369" -> "1000402"  [label="DDG: bio_get(bio)"];
"1000369" -> "1000402"  [label="DDG: bio"];
"1000369" -> "1000371"  [label="DDG: bio"];
"1000371" -> "1000110"  [label="AST: "];
"1000371" -> "1000372"  [label="CFG: "];
"1000372" -> "1000371"  [label="AST: "];
"1000402" -> "1000371"  [label="CFG: "];
"1000371" -> "1000402"  [label="DDG: <RET>"];
"1000372" -> "1000371"  [label="DDG: bio"];
}
