digraph "0_optee_os_70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8_0@pointer" {
"1000105" [label="(MethodParameterIn,const void *data)"];
"1000171" [label="(Call,(uaddr_t)data)"];
"1000166" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len))"];
"1000164" [label="(Call,res = tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len))"];
"1000176" [label="(Call,res != TEE_SUCCESS)"];
"1000179" [label="(Return,return res;)"];
"1000193" [label="(Call,res != TEE_SUCCESS)"];
"1000196" [label="(Return,return res;)"];
"1000218" [label="(Call,res != TEE_SUCCESS)"];
"1000232" [label="(Call,res != TEE_SUCCESS)"];
"1000278" [label="(Call,res != TEE_SUCCESS)"];
"1000375" [label="(Return,return res;)"];
"1000326" [label="(Call,res != TEE_SUCCESS)"];
"1000183" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000181" [label="(Call,res = tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000212" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000210" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000224" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000222" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000293" [label="(Call,pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000291" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000299" [label="(Call,crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000297" [label="(Call,res = crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000373" [label="(Call,free(params))"];
"1000341" [label="(Call,crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000339" [label="(Call,res = crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000356" [label="(Call,crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000354" [label="(Call,res = crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000283" [label="(Call,data_len != hash_size)"];
"1000331" [label="(Call,data_len > hash_size)"];
"1000219" [label="(Identifier,res)"];
"1000264" [label="(Block,)"];
"1000211" [label="(Identifier,res)"];
"1000336" [label="(Identifier,res)"];
"1000293" [label="(Call,pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000339" [label="(Call,res = crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000216" [label="(Identifier,params)"];
"1000325" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000298" [label="(Identifier,res)"];
"1000105" [label="(MethodParameterIn,const void *data)"];
"1000333" [label="(Identifier,hash_size)"];
"1000167" [label="(Identifier,utc)"];
"1000201" [label="(Call,sizeof(TEE_Attribute) * num_params)"];
"1000224" [label="(Call,tee_obj_get(utc, cs->key1, &o))"];
"1000210" [label="(Call,res = copy_in_attrs(utc, usr_params, num_params, params))"];
"1000309" [label="(Identifier,sig)"];
"1000296" [label="(Identifier,hash_size)"];
"1000174" [label="(Identifier,data_len)"];
"1000315" [label="(Call,TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000284" [label="(Identifier,data_len)"];
"1000332" [label="(Identifier,data_len)"];
"1000107" [label="(MethodParameterIn,const void *sig)"];
"1000177" [label="(Identifier,res)"];
"1000231" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000225" [label="(Identifier,utc)"];
"1000285" [label="(Identifier,hash_size)"];
"1000331" [label="(Call,data_len > hash_size)"];
"1000342" [label="(Call,cs->algo)"];
"1000179" [label="(Return,return res;)"];
"1000195" [label="(Identifier,TEE_SUCCESS)"];
"1000151" [label="(Call,res != TEE_SUCCESS)"];
"1000357" [label="(Call,cs->algo)"];
"1000306" [label="(Identifier,salt_len)"];
"1000193" [label="(Call,res != TEE_SUCCESS)"];
"1000369" [label="(Call,res = TEE_ERROR_NOT_SUPPORTED)"];
"1000291" [label="(Call,salt_len = pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size))"];
"1000297" [label="(Call,res = crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000311" [label="(ControlStructure,break;)"];
"1000294" [label="(Identifier,params)"];
"1000374" [label="(Identifier,params)"];
"1000235" [label="(ControlStructure,goto out;)"];
"1000212" [label="(Call,copy_in_attrs(utc, usr_params, num_params, params))"];
"1000345" [label="(Call,o->attr)"];
"1000283" [label="(Call,data_len != hash_size)"];
"1000366" [label="(Identifier,sig_len)"];
"1000288" [label="(Identifier,res)"];
"1000173" [label="(Identifier,data)"];
"1000206" [label="(Call,!params)"];
"1000226" [label="(Call,cs->key1)"];
"1000280" [label="(Identifier,TEE_SUCCESS)"];
"1000176" [label="(Call,res != TEE_SUCCESS)"];
"1000352" [label="(ControlStructure,break;)"];
"1000287" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000166" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len))"];
"1000354" [label="(Call,res = crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000136" [label="(Call,utc = to_user_ta_ctx(sess->ctx))"];
"1000299" [label="(Call,crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len))"];
"1000116" [label="(Call,salt_len = 0)"];
"1000376" [label="(Identifier,res)"];
"1000184" [label="(Identifier,utc)"];
"1000109" [label="(Block,)"];
"1000259" [label="(Call,cs->algo != TEE_ALG_RSASSA_PKCS1_V1_5)"];
"1000351" [label="(Identifier,sig_len)"];
"1000197" [label="(Identifier,res)"];
"1000108" [label="(MethodParameterIn,size_t sig_len)"];
"1000194" [label="(Identifier,res)"];
"1000214" [label="(Identifier,usr_params)"];
"1000367" [label="(ControlStructure,break;)"];
"1000335" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000217" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000350" [label="(Identifier,sig)"];
"1000183" [label="(Call,tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000267" [label="(Call,TEE_DIGEST_HASH_TO_ALGO(cs->algo))"];
"1000232" [label="(Call,res != TEE_SUCCESS)"];
"1000271" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000310" [label="(Identifier,sig_len)"];
"1000165" [label="(Identifier,res)"];
"1000295" [label="(Identifier,num_params)"];
"1000282" [label="(ControlStructure,if (data_len != hash_size))"];
"1000300" [label="(Call,cs->algo)"];
"1000307" [label="(Identifier,data)"];
"1000328" [label="(Identifier,TEE_SUCCESS)"];
"1000363" [label="(Identifier,data)"];
"1000281" [label="(ControlStructure,break;)"];
"1000171" [label="(Call,(uaddr_t)data)"];
"1000326" [label="(Call,res != TEE_SUCCESS)"];
"1000247" [label="(Call,res = TEE_ERROR_BAD_PARAMETERS)"];
"1000303" [label="(Call,o->attr)"];
"1000292" [label="(Identifier,salt_len)"];
"1000215" [label="(Identifier,num_params)"];
"1000252" [label="(Call,TEE_ALG_GET_MAIN_ALG(cs->algo))"];
"1000168" [label="(Call,TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER)"];
"1000308" [label="(Identifier,data_len)"];
"1000222" [label="(Call,res = tee_obj_get(utc, cs->key1, &o))"];
"1000355" [label="(Identifier,res)"];
"1000373" [label="(Call,free(params))"];
"1000340" [label="(Identifier,res)"];
"1000191" [label="(Identifier,sig_len)"];
"1000327" [label="(Identifier,res)"];
"1000319" [label="(Call,res = tee_hash_get_digest_size(hash_algo, &hash_size))"];
"1000348" [label="(Identifier,data)"];
"1000164" [label="(Call,res = tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len))"];
"1000377" [label="(MethodReturn,TEE_Result)"];
"1000360" [label="(Call,o->attr)"];
"1000221" [label="(ControlStructure,goto out;)"];
"1000199" [label="(Identifier,params)"];
"1000341" [label="(Call,crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000218" [label="(Call,res != TEE_SUCCESS)"];
"1000213" [label="(Identifier,utc)"];
"1000175" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000349" [label="(Identifier,data_len)"];
"1000106" [label="(MethodParameterIn,size_t data_len)"];
"1000356" [label="(Call,crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len))"];
"1000364" [label="(Identifier,data_len)"];
"1000103" [label="(MethodParameterIn,const struct utee_attribute *usr_params)"];
"1000180" [label="(Identifier,res)"];
"1000256" [label="(Block,)"];
"1000104" [label="(MethodParameterIn,size_t num_params)"];
"1000241" [label="(Identifier,o)"];
"1000220" [label="(Identifier,TEE_SUCCESS)"];
"1000185" [label="(Call,TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER)"];
"1000181" [label="(Call,res = tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len))"];
"1000233" [label="(Identifier,res)"];
"1000192" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000196" [label="(Return,return res;)"];
"1000188" [label="(Call,(uaddr_t)sig)"];
"1000223" [label="(Identifier,res)"];
"1000329" [label="(ControlStructure,break;)"];
"1000365" [label="(Identifier,sig)"];
"1000330" [label="(ControlStructure,if (data_len > hash_size))"];
"1000178" [label="(Identifier,TEE_SUCCESS)"];
"1000375" [label="(Return,return res;)"];
"1000278" [label="(Call,res != TEE_SUCCESS)"];
"1000182" [label="(Identifier,res)"];
"1000234" [label="(Identifier,TEE_SUCCESS)"];
"1000279" [label="(Identifier,res)"];
"1000277" [label="(ControlStructure,if (res != TEE_SUCCESS))"];
"1000229" [label="(Call,&o)"];
"1000105" -> "1000101"  [label="AST: "];
"1000105" -> "1000377"  [label="DDG: data"];
"1000105" -> "1000171"  [label="DDG: data"];
"1000105" -> "1000299"  [label="DDG: data"];
"1000105" -> "1000341"  [label="DDG: data"];
"1000105" -> "1000356"  [label="DDG: data"];
"1000171" -> "1000166"  [label="AST: "];
"1000171" -> "1000173"  [label="CFG: "];
"1000172" -> "1000171"  [label="AST: "];
"1000173" -> "1000171"  [label="AST: "];
"1000174" -> "1000171"  [label="CFG: "];
"1000171" -> "1000377"  [label="DDG: data"];
"1000171" -> "1000166"  [label="DDG: data"];
"1000171" -> "1000299"  [label="DDG: data"];
"1000171" -> "1000341"  [label="DDG: data"];
"1000171" -> "1000356"  [label="DDG: data"];
"1000166" -> "1000164"  [label="AST: "];
"1000166" -> "1000174"  [label="CFG: "];
"1000167" -> "1000166"  [label="AST: "];
"1000168" -> "1000166"  [label="AST: "];
"1000174" -> "1000166"  [label="AST: "];
"1000164" -> "1000166"  [label="CFG: "];
"1000166" -> "1000377"  [label="DDG: TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000166" -> "1000377"  [label="DDG: utc"];
"1000166" -> "1000377"  [label="DDG: (uaddr_t)data"];
"1000166" -> "1000377"  [label="DDG: data_len"];
"1000166" -> "1000164"  [label="DDG: utc"];
"1000166" -> "1000164"  [label="DDG: TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000166" -> "1000164"  [label="DDG: (uaddr_t)data"];
"1000166" -> "1000164"  [label="DDG: data_len"];
"1000136" -> "1000166"  [label="DDG: utc"];
"1000168" -> "1000166"  [label="DDG: TEE_MEMORY_ACCESS_READ"];
"1000168" -> "1000166"  [label="DDG: TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000106" -> "1000166"  [label="DDG: data_len"];
"1000166" -> "1000183"  [label="DDG: utc"];
"1000166" -> "1000283"  [label="DDG: data_len"];
"1000166" -> "1000299"  [label="DDG: data_len"];
"1000166" -> "1000331"  [label="DDG: data_len"];
"1000166" -> "1000356"  [label="DDG: data_len"];
"1000164" -> "1000109"  [label="AST: "];
"1000165" -> "1000164"  [label="AST: "];
"1000177" -> "1000164"  [label="CFG: "];
"1000164" -> "1000377"  [label="DDG: tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)data, data_len)"];
"1000164" -> "1000176"  [label="DDG: res"];
"1000176" -> "1000175"  [label="AST: "];
"1000176" -> "1000178"  [label="CFG: "];
"1000177" -> "1000176"  [label="AST: "];
"1000178" -> "1000176"  [label="AST: "];
"1000180" -> "1000176"  [label="CFG: "];
"1000182" -> "1000176"  [label="CFG: "];
"1000176" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000176" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000176" -> "1000377"  [label="DDG: res"];
"1000151" -> "1000176"  [label="DDG: TEE_SUCCESS"];
"1000176" -> "1000179"  [label="DDG: res"];
"1000176" -> "1000193"  [label="DDG: TEE_SUCCESS"];
"1000179" -> "1000175"  [label="AST: "];
"1000179" -> "1000180"  [label="CFG: "];
"1000180" -> "1000179"  [label="AST: "];
"1000377" -> "1000179"  [label="CFG: "];
"1000179" -> "1000377"  [label="DDG: <RET>"];
"1000180" -> "1000179"  [label="DDG: res"];
"1000193" -> "1000192"  [label="AST: "];
"1000193" -> "1000195"  [label="CFG: "];
"1000194" -> "1000193"  [label="AST: "];
"1000195" -> "1000193"  [label="AST: "];
"1000197" -> "1000193"  [label="CFG: "];
"1000199" -> "1000193"  [label="CFG: "];
"1000193" -> "1000377"  [label="DDG: res"];
"1000193" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000193" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000181" -> "1000193"  [label="DDG: res"];
"1000193" -> "1000196"  [label="DDG: res"];
"1000193" -> "1000218"  [label="DDG: TEE_SUCCESS"];
"1000196" -> "1000192"  [label="AST: "];
"1000196" -> "1000197"  [label="CFG: "];
"1000197" -> "1000196"  [label="AST: "];
"1000377" -> "1000196"  [label="CFG: "];
"1000196" -> "1000377"  [label="DDG: <RET>"];
"1000197" -> "1000196"  [label="DDG: res"];
"1000218" -> "1000217"  [label="AST: "];
"1000218" -> "1000220"  [label="CFG: "];
"1000219" -> "1000218"  [label="AST: "];
"1000220" -> "1000218"  [label="AST: "];
"1000221" -> "1000218"  [label="CFG: "];
"1000223" -> "1000218"  [label="CFG: "];
"1000218" -> "1000377"  [label="DDG: res"];
"1000218" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000218" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000210" -> "1000218"  [label="DDG: res"];
"1000218" -> "1000232"  [label="DDG: TEE_SUCCESS"];
"1000218" -> "1000375"  [label="DDG: res"];
"1000232" -> "1000231"  [label="AST: "];
"1000232" -> "1000234"  [label="CFG: "];
"1000233" -> "1000232"  [label="AST: "];
"1000234" -> "1000232"  [label="AST: "];
"1000235" -> "1000232"  [label="CFG: "];
"1000241" -> "1000232"  [label="CFG: "];
"1000232" -> "1000377"  [label="DDG: res"];
"1000232" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000232" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000222" -> "1000232"  [label="DDG: res"];
"1000232" -> "1000278"  [label="DDG: TEE_SUCCESS"];
"1000232" -> "1000326"  [label="DDG: TEE_SUCCESS"];
"1000232" -> "1000375"  [label="DDG: res"];
"1000278" -> "1000277"  [label="AST: "];
"1000278" -> "1000280"  [label="CFG: "];
"1000279" -> "1000278"  [label="AST: "];
"1000280" -> "1000278"  [label="AST: "];
"1000281" -> "1000278"  [label="CFG: "];
"1000284" -> "1000278"  [label="CFG: "];
"1000278" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000278" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000278" -> "1000377"  [label="DDG: res"];
"1000271" -> "1000278"  [label="DDG: res"];
"1000278" -> "1000375"  [label="DDG: res"];
"1000375" -> "1000109"  [label="AST: "];
"1000375" -> "1000376"  [label="CFG: "];
"1000376" -> "1000375"  [label="AST: "];
"1000377" -> "1000375"  [label="CFG: "];
"1000375" -> "1000377"  [label="DDG: <RET>"];
"1000376" -> "1000375"  [label="DDG: res"];
"1000247" -> "1000375"  [label="DDG: res"];
"1000297" -> "1000375"  [label="DDG: res"];
"1000335" -> "1000375"  [label="DDG: res"];
"1000369" -> "1000375"  [label="DDG: res"];
"1000339" -> "1000375"  [label="DDG: res"];
"1000287" -> "1000375"  [label="DDG: res"];
"1000326" -> "1000375"  [label="DDG: res"];
"1000354" -> "1000375"  [label="DDG: res"];
"1000326" -> "1000325"  [label="AST: "];
"1000326" -> "1000328"  [label="CFG: "];
"1000327" -> "1000326"  [label="AST: "];
"1000328" -> "1000326"  [label="AST: "];
"1000329" -> "1000326"  [label="CFG: "];
"1000332" -> "1000326"  [label="CFG: "];
"1000326" -> "1000377"  [label="DDG: res != TEE_SUCCESS"];
"1000326" -> "1000377"  [label="DDG: TEE_SUCCESS"];
"1000326" -> "1000377"  [label="DDG: res"];
"1000319" -> "1000326"  [label="DDG: res"];
"1000183" -> "1000181"  [label="AST: "];
"1000183" -> "1000191"  [label="CFG: "];
"1000184" -> "1000183"  [label="AST: "];
"1000185" -> "1000183"  [label="AST: "];
"1000188" -> "1000183"  [label="AST: "];
"1000191" -> "1000183"  [label="AST: "];
"1000181" -> "1000183"  [label="CFG: "];
"1000183" -> "1000377"  [label="DDG: (uaddr_t)sig"];
"1000183" -> "1000377"  [label="DDG: TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000183" -> "1000377"  [label="DDG: utc"];
"1000183" -> "1000377"  [label="DDG: sig_len"];
"1000183" -> "1000181"  [label="DDG: utc"];
"1000183" -> "1000181"  [label="DDG: TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000183" -> "1000181"  [label="DDG: (uaddr_t)sig"];
"1000183" -> "1000181"  [label="DDG: sig_len"];
"1000185" -> "1000183"  [label="DDG: TEE_MEMORY_ACCESS_READ"];
"1000185" -> "1000183"  [label="DDG: TEE_MEMORY_ACCESS_ANY_OWNER"];
"1000188" -> "1000183"  [label="DDG: sig"];
"1000108" -> "1000183"  [label="DDG: sig_len"];
"1000183" -> "1000212"  [label="DDG: utc"];
"1000183" -> "1000299"  [label="DDG: sig_len"];
"1000183" -> "1000341"  [label="DDG: sig_len"];
"1000183" -> "1000356"  [label="DDG: sig_len"];
"1000181" -> "1000109"  [label="AST: "];
"1000182" -> "1000181"  [label="AST: "];
"1000194" -> "1000181"  [label="CFG: "];
"1000181" -> "1000377"  [label="DDG: tee_mmu_check_access_rights(utc,\n\t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n\t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n\t\t\t\t\t  (uaddr_t)sig, sig_len)"];
"1000212" -> "1000210"  [label="AST: "];
"1000212" -> "1000216"  [label="CFG: "];
"1000213" -> "1000212"  [label="AST: "];
"1000214" -> "1000212"  [label="AST: "];
"1000215" -> "1000212"  [label="AST: "];
"1000216" -> "1000212"  [label="AST: "];
"1000210" -> "1000212"  [label="CFG: "];
"1000212" -> "1000377"  [label="DDG: usr_params"];
"1000212" -> "1000377"  [label="DDG: utc"];
"1000212" -> "1000377"  [label="DDG: num_params"];
"1000212" -> "1000210"  [label="DDG: utc"];
"1000212" -> "1000210"  [label="DDG: usr_params"];
"1000212" -> "1000210"  [label="DDG: num_params"];
"1000212" -> "1000210"  [label="DDG: params"];
"1000103" -> "1000212"  [label="DDG: usr_params"];
"1000201" -> "1000212"  [label="DDG: num_params"];
"1000104" -> "1000212"  [label="DDG: num_params"];
"1000206" -> "1000212"  [label="DDG: params"];
"1000212" -> "1000224"  [label="DDG: utc"];
"1000212" -> "1000293"  [label="DDG: params"];
"1000212" -> "1000293"  [label="DDG: num_params"];
"1000212" -> "1000373"  [label="DDG: params"];
"1000210" -> "1000109"  [label="AST: "];
"1000211" -> "1000210"  [label="AST: "];
"1000219" -> "1000210"  [label="CFG: "];
"1000210" -> "1000377"  [label="DDG: copy_in_attrs(utc, usr_params, num_params, params)"];
"1000224" -> "1000222"  [label="AST: "];
"1000224" -> "1000229"  [label="CFG: "];
"1000225" -> "1000224"  [label="AST: "];
"1000226" -> "1000224"  [label="AST: "];
"1000229" -> "1000224"  [label="AST: "];
"1000222" -> "1000224"  [label="CFG: "];
"1000224" -> "1000377"  [label="DDG: utc"];
"1000224" -> "1000377"  [label="DDG: cs->key1"];
"1000224" -> "1000377"  [label="DDG: &o"];
"1000224" -> "1000222"  [label="DDG: utc"];
"1000224" -> "1000222"  [label="DDG: cs->key1"];
"1000224" -> "1000222"  [label="DDG: &o"];
"1000222" -> "1000109"  [label="AST: "];
"1000223" -> "1000222"  [label="AST: "];
"1000233" -> "1000222"  [label="CFG: "];
"1000222" -> "1000377"  [label="DDG: tee_obj_get(utc, cs->key1, &o)"];
"1000293" -> "1000291"  [label="AST: "];
"1000293" -> "1000296"  [label="CFG: "];
"1000294" -> "1000293"  [label="AST: "];
"1000295" -> "1000293"  [label="AST: "];
"1000296" -> "1000293"  [label="AST: "];
"1000291" -> "1000293"  [label="CFG: "];
"1000293" -> "1000377"  [label="DDG: hash_size"];
"1000293" -> "1000377"  [label="DDG: num_params"];
"1000293" -> "1000291"  [label="DDG: params"];
"1000293" -> "1000291"  [label="DDG: num_params"];
"1000293" -> "1000291"  [label="DDG: hash_size"];
"1000104" -> "1000293"  [label="DDG: num_params"];
"1000283" -> "1000293"  [label="DDG: hash_size"];
"1000293" -> "1000373"  [label="DDG: params"];
"1000291" -> "1000264"  [label="AST: "];
"1000292" -> "1000291"  [label="AST: "];
"1000298" -> "1000291"  [label="CFG: "];
"1000291" -> "1000377"  [label="DDG: pkcs1_get_salt_len(params, num_params,\n\t\t\t\t\t\t      hash_size)"];
"1000291" -> "1000299"  [label="DDG: salt_len"];
"1000299" -> "1000297"  [label="AST: "];
"1000299" -> "1000310"  [label="CFG: "];
"1000300" -> "1000299"  [label="AST: "];
"1000303" -> "1000299"  [label="AST: "];
"1000306" -> "1000299"  [label="AST: "];
"1000307" -> "1000299"  [label="AST: "];
"1000308" -> "1000299"  [label="AST: "];
"1000309" -> "1000299"  [label="AST: "];
"1000310" -> "1000299"  [label="AST: "];
"1000297" -> "1000299"  [label="CFG: "];
"1000299" -> "1000377"  [label="DDG: sig_len"];
"1000299" -> "1000377"  [label="DDG: sig"];
"1000299" -> "1000377"  [label="DDG: o->attr"];
"1000299" -> "1000377"  [label="DDG: data"];
"1000299" -> "1000377"  [label="DDG: salt_len"];
"1000299" -> "1000377"  [label="DDG: cs->algo"];
"1000299" -> "1000377"  [label="DDG: data_len"];
"1000299" -> "1000297"  [label="DDG: sig"];
"1000299" -> "1000297"  [label="DDG: data_len"];
"1000299" -> "1000297"  [label="DDG: sig_len"];
"1000299" -> "1000297"  [label="DDG: salt_len"];
"1000299" -> "1000297"  [label="DDG: data"];
"1000299" -> "1000297"  [label="DDG: o->attr"];
"1000299" -> "1000297"  [label="DDG: cs->algo"];
"1000259" -> "1000299"  [label="DDG: cs->algo"];
"1000267" -> "1000299"  [label="DDG: cs->algo"];
"1000116" -> "1000299"  [label="DDG: salt_len"];
"1000283" -> "1000299"  [label="DDG: data_len"];
"1000106" -> "1000299"  [label="DDG: data_len"];
"1000188" -> "1000299"  [label="DDG: sig"];
"1000107" -> "1000299"  [label="DDG: sig"];
"1000108" -> "1000299"  [label="DDG: sig_len"];
"1000297" -> "1000256"  [label="AST: "];
"1000298" -> "1000297"  [label="AST: "];
"1000311" -> "1000297"  [label="CFG: "];
"1000297" -> "1000377"  [label="DDG: res"];
"1000297" -> "1000377"  [label="DDG: crypto_acipher_rsassa_verify(cs->algo, o->attr, salt_len,\n\t\t\t\t\t\t   data, data_len, sig,\n\t\t\t\t\t\t   sig_len)"];
"1000373" -> "1000109"  [label="AST: "];
"1000373" -> "1000374"  [label="CFG: "];
"1000374" -> "1000373"  [label="AST: "];
"1000376" -> "1000373"  [label="CFG: "];
"1000373" -> "1000377"  [label="DDG: params"];
"1000341" -> "1000339"  [label="AST: "];
"1000341" -> "1000351"  [label="CFG: "];
"1000342" -> "1000341"  [label="AST: "];
"1000345" -> "1000341"  [label="AST: "];
"1000348" -> "1000341"  [label="AST: "];
"1000349" -> "1000341"  [label="AST: "];
"1000350" -> "1000341"  [label="AST: "];
"1000351" -> "1000341"  [label="AST: "];
"1000339" -> "1000341"  [label="CFG: "];
"1000341" -> "1000377"  [label="DDG: data_len"];
"1000341" -> "1000377"  [label="DDG: sig_len"];
"1000341" -> "1000377"  [label="DDG: data"];
"1000341" -> "1000377"  [label="DDG: cs->algo"];
"1000341" -> "1000377"  [label="DDG: sig"];
"1000341" -> "1000377"  [label="DDG: o->attr"];
"1000341" -> "1000339"  [label="DDG: data_len"];
"1000341" -> "1000339"  [label="DDG: cs->algo"];
"1000341" -> "1000339"  [label="DDG: data"];
"1000341" -> "1000339"  [label="DDG: o->attr"];
"1000341" -> "1000339"  [label="DDG: sig_len"];
"1000341" -> "1000339"  [label="DDG: sig"];
"1000315" -> "1000341"  [label="DDG: cs->algo"];
"1000331" -> "1000341"  [label="DDG: data_len"];
"1000106" -> "1000341"  [label="DDG: data_len"];
"1000188" -> "1000341"  [label="DDG: sig"];
"1000107" -> "1000341"  [label="DDG: sig"];
"1000108" -> "1000341"  [label="DDG: sig_len"];
"1000339" -> "1000256"  [label="AST: "];
"1000340" -> "1000339"  [label="AST: "];
"1000352" -> "1000339"  [label="CFG: "];
"1000339" -> "1000377"  [label="DDG: res"];
"1000339" -> "1000377"  [label="DDG: crypto_acipher_dsa_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len)"];
"1000356" -> "1000354"  [label="AST: "];
"1000356" -> "1000366"  [label="CFG: "];
"1000357" -> "1000356"  [label="AST: "];
"1000360" -> "1000356"  [label="AST: "];
"1000363" -> "1000356"  [label="AST: "];
"1000364" -> "1000356"  [label="AST: "];
"1000365" -> "1000356"  [label="AST: "];
"1000366" -> "1000356"  [label="AST: "];
"1000354" -> "1000356"  [label="CFG: "];
"1000356" -> "1000377"  [label="DDG: sig"];
"1000356" -> "1000377"  [label="DDG: data_len"];
"1000356" -> "1000377"  [label="DDG: cs->algo"];
"1000356" -> "1000377"  [label="DDG: sig_len"];
"1000356" -> "1000377"  [label="DDG: o->attr"];
"1000356" -> "1000377"  [label="DDG: data"];
"1000356" -> "1000354"  [label="DDG: data"];
"1000356" -> "1000354"  [label="DDG: sig_len"];
"1000356" -> "1000354"  [label="DDG: o->attr"];
"1000356" -> "1000354"  [label="DDG: data_len"];
"1000356" -> "1000354"  [label="DDG: sig"];
"1000356" -> "1000354"  [label="DDG: cs->algo"];
"1000252" -> "1000356"  [label="DDG: cs->algo"];
"1000106" -> "1000356"  [label="DDG: data_len"];
"1000188" -> "1000356"  [label="DDG: sig"];
"1000107" -> "1000356"  [label="DDG: sig"];
"1000108" -> "1000356"  [label="DDG: sig_len"];
"1000354" -> "1000256"  [label="AST: "];
"1000355" -> "1000354"  [label="AST: "];
"1000367" -> "1000354"  [label="CFG: "];
"1000354" -> "1000377"  [label="DDG: crypto_acipher_ecc_verify(cs->algo, o->attr, data,\n\t\t\t\t\t\tdata_len, sig, sig_len)"];
"1000354" -> "1000377"  [label="DDG: res"];
"1000283" -> "1000282"  [label="AST: "];
"1000283" -> "1000285"  [label="CFG: "];
"1000284" -> "1000283"  [label="AST: "];
"1000285" -> "1000283"  [label="AST: "];
"1000288" -> "1000283"  [label="CFG: "];
"1000292" -> "1000283"  [label="CFG: "];
"1000283" -> "1000377"  [label="DDG: hash_size"];
"1000283" -> "1000377"  [label="DDG: data_len"];
"1000283" -> "1000377"  [label="DDG: data_len != hash_size"];
"1000106" -> "1000283"  [label="DDG: data_len"];
"1000331" -> "1000330"  [label="AST: "];
"1000331" -> "1000333"  [label="CFG: "];
"1000332" -> "1000331"  [label="AST: "];
"1000333" -> "1000331"  [label="AST: "];
"1000336" -> "1000331"  [label="CFG: "];
"1000340" -> "1000331"  [label="CFG: "];
"1000331" -> "1000377"  [label="DDG: data_len > hash_size"];
"1000331" -> "1000377"  [label="DDG: hash_size"];
"1000331" -> "1000377"  [label="DDG: data_len"];
"1000106" -> "1000331"  [label="DDG: data_len"];
}
